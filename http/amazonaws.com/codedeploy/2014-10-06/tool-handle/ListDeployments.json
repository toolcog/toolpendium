{
  "name": "ListDeployments",
  "description": "Lists the deployments in a deployment group for an application registered with the IAM user or Amazon Web Services account.",
  "parameters": {
    "type": "object",
    "properties": {
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "CodeDeploy_20141006.ListDeployments"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListDeploymentsInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListDeploymentsInput": {
        "type": "object",
        "title": "ListDeploymentsInput",
        "properties": {
          "applicationName": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationName"
              },
              {
                "description": "<p>The name of an CodeDeploy application associated with the IAM user or Amazon Web Services account.</p> <note> <p>If <code>applicationName</code> is specified, then <code>deploymentGroupName</code> must be specified. If it is not specified, then <code>deploymentGroupName</code> must not be specified. </p> </note>"
              }
            ]
          },
          "deploymentGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/DeploymentGroupName"
              },
              {
                "description": "<p>The name of a deployment group for the specified application.</p> <note> <p>If <code>deploymentGroupName</code> is specified, then <code>applicationName</code> must be specified. If it is not specified, then <code>applicationName</code> must not be specified. </p> </note>"
              }
            ]
          },
          "externalId": {
            "allOf": [
              {
                "$ref": "#/$defs/ExternalId"
              },
              {
                "description": "The unique ID of an external resource for returning deployments linked to the external resource."
              }
            ]
          },
          "includeOnlyStatuses": {
            "allOf": [
              {
                "$ref": "#/$defs/DeploymentStatusList"
              },
              {
                "description": "<p>A subset of deployments to list by status:</p> <ul> <li> <p> <code>Created</code>: Include created deployments in the resulting list.</p> </li> <li> <p> <code>Queued</code>: Include queued deployments in the resulting list.</p> </li> <li> <p> <code>In Progress</code>: Include in-progress deployments in the resulting list.</p> </li> <li> <p> <code>Succeeded</code>: Include successful deployments in the resulting list.</p> </li> <li> <p> <code>Failed</code>: Include failed deployments in the resulting list.</p> </li> <li> <p> <code>Stopped</code>: Include stopped deployments in the resulting list.</p> </li> </ul>"
              }
            ]
          },
          "createTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeRange"
              },
              {
                "description": "A time range (start and end) for returning a subset of the list of deployments."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "An identifier returned from the previous list deployments call. It can be used to return the next set of deployments in the list."
              }
            ]
          }
        },
        "description": "Represents the input of a <code>ListDeployments</code> operation."
      },
      "ApplicationName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "DeploymentGroupName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "ExternalId": {
        "type": "string"
      },
      "DeploymentStatusList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DeploymentStatus"
        }
      },
      "DeploymentStatus": {
        "type": "string",
        "enum": [
          "Created",
          "Queued",
          "InProgress",
          "Baking",
          "Succeeded",
          "Failed",
          "Stopped",
          "Ready"
        ]
      },
      "TimeRange": {
        "type": "object",
        "properties": {
          "start": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "<p>The start time of the time range.</p> <note> <p>Specify null to leave the start time open-ended.</p> </note>"
              }
            ]
          },
          "end": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "<p>The end time of the time range.</p> <note> <p>Specify null to leave the end time open-ended.</p> </note>"
              }
            ]
          }
        },
        "description": "Information about a time range."
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "NextToken": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://codedeploy.us-east-1.amazonaws.com/#X-Amz-Target=CodeDeploy_20141006.ListDeployments{?nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the output of a <code>ListDeployments</code> operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**deployments**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "490": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
