{
  "name": "ListOnPremisesInstances",
  "description": "<p>Gets a list of names for one or more on-premises instances.</p> <p>Unless otherwise specified, both registered and deregistered on-premises instance names are listed. To list only registered or deregistered on-premises instance names, use the registration status parameter.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "CodeDeploy_20141006.ListOnPremisesInstances"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListOnPremisesInstancesInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListOnPremisesInstancesInput": {
        "type": "object",
        "title": "ListOnPremisesInstancesInput",
        "properties": {
          "registrationStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/RegistrationStatus"
              },
              {
                "description": "<p>The registration status of the on-premises instances:</p> <ul> <li> <p> <code>Deregistered</code>: Include deregistered on-premises instances in the resulting list.</p> </li> <li> <p> <code>Registered</code>: Include registered on-premises instances in the resulting list.</p> </li> </ul>"
              }
            ]
          },
          "tagFilters": {
            "allOf": [
              {
                "$ref": "#/$defs/TagFilterList"
              },
              {
                "description": "The on-premises instance tags that are used to restrict the on-premises instance names returned."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "An identifier returned from the previous list on-premises instances call. It can be used to return the next set of on-premises instances in the list."
              }
            ]
          }
        },
        "description": "Represents the input of a <code>ListOnPremisesInstances</code> operation."
      },
      "RegistrationStatus": {
        "type": "string",
        "enum": [
          "Registered",
          "Deregistered"
        ]
      },
      "TagFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TagFilter"
        }
      },
      "TagFilter": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/Key"
              },
              {
                "description": "The on-premises instance tag filter key."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Value"
              },
              {
                "description": "The on-premises instance tag filter value."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/TagFilterType"
              },
              {
                "description": "<p>The on-premises instance tag filter type:</p> <ul> <li> <p>KEY_ONLY: Key only.</p> </li> <li> <p>VALUE_ONLY: Value only.</p> </li> <li> <p>KEY_AND_VALUE: Key and value.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Information about an on-premises instance tag filter."
      },
      "Key": {
        "type": "string"
      },
      "Value": {
        "type": "string"
      },
      "TagFilterType": {
        "type": "string",
        "enum": [
          "KEY_ONLY",
          "VALUE_ONLY",
          "KEY_AND_VALUE"
        ]
      },
      "NextToken": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://codedeploy.us-east-1.amazonaws.com/#X-Amz-Target=CodeDeploy_20141006.ListOnPremisesInstances"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the output of the list on-premises instances operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**instanceNames**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
