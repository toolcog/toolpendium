{
  "name": "CheckoutBorrowLicense",
  "description": "Checks out the specified license for offline use.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSLicenseManager.CheckoutBorrowLicense"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CheckoutBorrowLicenseRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CheckoutBorrowLicenseRequest": {
        "type": "object",
        "required": [
          "LicenseArn",
          "Entitlements",
          "DigitalSignatureMethod",
          "ClientToken"
        ],
        "title": "CheckoutBorrowLicenseRequest",
        "properties": {
          "LicenseArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "Amazon Resource Name (ARN) of the license. The license must use the borrow consumption configuration."
              }
            ]
          },
          "Entitlements": {
            "allOf": [
              {
                "$ref": "#/$defs/EntitlementDataList"
              },
              {
                "description": "License entitlements. Partial checkouts are not supported."
              }
            ]
          },
          "DigitalSignatureMethod": {
            "allOf": [
              {
                "$ref": "#/$defs/DigitalSignatureMethod"
              },
              {
                "description": "Digital signature method. The possible value is JSON Web Signature (JWS) algorithm PS384. For more information, see <a href=\"https://tools.ietf.org/html/rfc7518#section-3.5\">RFC 7518 Digital Signature with RSASSA-PSS</a>."
              }
            ]
          },
          "NodeId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Node ID."
              }
            ]
          },
          "CheckoutMetadata": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataList"
              },
              {
                "description": "Information about constraints."
              }
            ]
          },
          "ClientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientToken"
              },
              {
                "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request."
              }
            ]
          }
        }
      },
      "Arn": {
        "type": "string",
        "pattern": "^arn:aws(-(cn|us-gov|iso-b|iso-c|iso-d))?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$",
        "maxLength": 2048
      },
      "EntitlementDataList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EntitlementData"
        }
      },
      "EntitlementData": {
        "type": "object",
        "required": [
          "Name",
          "Unit"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Entitlement data name."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Entitlement data value."
              }
            ]
          },
          "Unit": {
            "allOf": [
              {
                "$ref": "#/$defs/EntitlementDataUnit"
              },
              {
                "description": "Entitlement data unit."
              }
            ]
          }
        },
        "description": "Data associated with an entitlement resource."
      },
      "String": {
        "type": "string"
      },
      "EntitlementDataUnit": {
        "type": "string",
        "enum": [
          "Count",
          "None",
          "Seconds",
          "Microseconds",
          "Milliseconds",
          "Bytes",
          "Kilobytes",
          "Megabytes",
          "Gigabytes",
          "Terabytes",
          "Bits",
          "Kilobits",
          "Megabits",
          "Gigabits",
          "Terabits",
          "Percent",
          "Bytes/Second",
          "Kilobytes/Second",
          "Megabytes/Second",
          "Gigabytes/Second",
          "Terabytes/Second",
          "Bits/Second",
          "Kilobits/Second",
          "Megabits/Second",
          "Gigabits/Second",
          "Terabits/Second",
          "Count/Second"
        ]
      },
      "DigitalSignatureMethod": {
        "type": "string",
        "enum": [
          "JWT_PS384"
        ]
      },
      "MetadataList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Metadata"
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The key name."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value."
              }
            ]
          }
        },
        "description": "Describes key/value pairs."
      },
      "ClientToken": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://license-manager.us-east-1.amazonaws.com/#X-Amz-Target=AWSLicenseManager.CheckoutBorrowLicense"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**LicenseArn**",
            "**LicenseConsumptionToken**",
            "**EntitlementsAllowed**",
            "**NodeId**",
            "**SignedToken**",
            "**IssuedAt**",
            "**Expiration**",
            "**CheckoutMetadata**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "490": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
