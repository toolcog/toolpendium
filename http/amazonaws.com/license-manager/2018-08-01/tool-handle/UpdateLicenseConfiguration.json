{
  "name": "UpdateLicenseConfiguration",
  "description": "Modifies the attributes of an existing license configuration.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSLicenseManager.UpdateLicenseConfiguration"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateLicenseConfigurationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateLicenseConfigurationRequest": {
        "type": "object",
        "required": [
          "LicenseConfigurationArn"
        ],
        "title": "UpdateLicenseConfigurationRequest",
        "properties": {
          "LicenseConfigurationArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Amazon Resource Name (ARN) of the license configuration."
              }
            ]
          },
          "LicenseConfigurationStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/LicenseConfigurationStatus"
              },
              {
                "description": "New status of the license configuration."
              }
            ]
          },
          "LicenseRules": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "New license rule. The only rule that you can add after you create a license configuration is licenseAffinityToHost."
              }
            ]
          },
          "LicenseCount": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxLong"
              },
              {
                "description": "New number of licenses managed by the license configuration."
              }
            ]
          },
          "LicenseCountHardLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxBoolean"
              },
              {
                "description": "New hard limit of the number of available licenses."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "New name of the license configuration."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "New description of the license configuration."
              }
            ]
          },
          "ProductInformationList": {
            "allOf": [
              {
                "$ref": "#/$defs/ProductInformationList"
              },
              {
                "description": "New product information."
              }
            ]
          },
          "DisassociateWhenNotFound": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxBoolean"
              },
              {
                "description": "When true, disassociates a resource when software is uninstalled."
              }
            ]
          }
        }
      },
      "String": {
        "type": "string"
      },
      "LicenseConfigurationStatus": {
        "type": "string",
        "enum": [
          "AVAILABLE",
          "DISABLED"
        ]
      },
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "BoxLong": {
        "type": "integer"
      },
      "BoxBoolean": {
        "type": "boolean"
      },
      "ProductInformationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ProductInformation"
        }
      },
      "ProductInformation": {
        "type": "object",
        "required": [
          "ResourceType",
          "ProductInformationFilterList"
        ],
        "properties": {
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Resource type. The possible values are <code>SSM_MANAGED</code> | <code>RDS</code>."
              }
            ]
          },
          "ProductInformationFilterList": {
            "allOf": [
              {
                "$ref": "#/$defs/ProductInformationFilterList"
              },
              {
                "description": "<p>A Product information filter consists of a <code>ProductInformationFilterComparator</code> which is a logical operator, a <code>ProductInformationFilterName</code> which specifies the type of filter being declared, and a <code>ProductInformationFilterValue</code> that specifies the value to filter on. </p> <p>Accepted values for <code>ProductInformationFilterName</code> are listed here along with descriptions and valid options for <code>ProductInformationFilterComparator</code>. </p> <p>The following filters and are supported when the resource type is <code>SSM_MANAGED</code>:</p> <ul> <li> <p> <code>Application Name</code> - The name of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Application Publisher</code> - The publisher of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Application Version</code> - The version of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Platform Name</code> - The name of the platform. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Platform Type</code> - The platform type. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Tag:key</code> - The key of a tag attached to an Amazon Web Services resource you wish to exclude from automated discovery. Logical operator is <code>NOT_EQUALS</code>. The key for your tag must be appended to <code>Tag:</code> following the example: <code>Tag:name-of-your-key</code>. <code>ProductInformationFilterValue</code> is optional if you are not using values for the key. </p> </li> <li> <p> <code>AccountId</code> - The 12-digit ID of an Amazon Web Services account you wish to exclude from automated discovery. Logical operator is <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>License Included</code> - The type of license included. Logical operators are <code>EQUALS</code> and <code>NOT_EQUALS</code>. Possible values are: <code>sql-server-enterprise</code> | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</p> </li> </ul> <p>The following filters and logical operators are supported when the resource type is <code>RDS</code>:</p> <ul> <li> <p> <code>Engine Edition</code> - The edition of the database engine. Logical operator is <code>EQUALS</code>. Possible values are: <code>oracle-ee</code> | <code>oracle-se</code> | <code>oracle-se1</code> | <code>oracle-se2</code>.</p> </li> <li> <p> <code>License Pack</code> - The license pack. Logical operator is <code>EQUALS</code>. Possible values are: <code>data guard</code> | <code>diagnostic pack sqlt</code> | <code>tuning pack sqlt</code> | <code>ols</code> | <code>olap</code>.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Describes product information for a license configuration."
      },
      "ProductInformationFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ProductInformationFilter"
        }
      },
      "ProductInformationFilter": {
        "type": "object",
        "required": [
          "ProductInformationFilterName",
          "ProductInformationFilterComparator"
        ],
        "properties": {
          "ProductInformationFilterName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Filter name."
              }
            ]
          },
          "ProductInformationFilterValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "Filter value."
              }
            ]
          },
          "ProductInformationFilterComparator": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Logical operator."
              }
            ]
          }
        },
        "description": "Describes product information filters."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://license-manager.us-east-1.amazonaws.com/#X-Amz-Target=AWSLicenseManager.UpdateLicenseConfiguration"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
