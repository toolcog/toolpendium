{
  "name": "CreateLicenseVersion",
  "description": "Creates a new version of the specified license.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSLicenseManager.CreateLicenseVersion"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateLicenseVersionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateLicenseVersionRequest": {
        "type": "object",
        "required": [
          "LicenseArn",
          "LicenseName",
          "ProductName",
          "Issuer",
          "HomeRegion",
          "Validity",
          "Entitlements",
          "ConsumptionConfiguration",
          "Status",
          "ClientToken"
        ],
        "title": "CreateLicenseVersionRequest",
        "properties": {
          "LicenseArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "Amazon Resource Name (ARN) of the license."
              }
            ]
          },
          "LicenseName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "License name."
              }
            ]
          },
          "ProductName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Product name."
              }
            ]
          },
          "Issuer": {
            "allOf": [
              {
                "$ref": "#/$defs/Issuer"
              },
              {
                "description": "License issuer."
              }
            ]
          },
          "HomeRegion": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Home Region of the license."
              }
            ]
          },
          "Validity": {
            "allOf": [
              {
                "$ref": "#/$defs/DatetimeRange"
              },
              {
                "description": "Date and time range during which the license is valid, in ISO8601-UTC format."
              }
            ]
          },
          "LicenseMetadata": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataList"
              },
              {
                "description": "Information about the license."
              }
            ]
          },
          "Entitlements": {
            "allOf": [
              {
                "$ref": "#/$defs/EntitlementList"
              },
              {
                "description": "License entitlements."
              }
            ]
          },
          "ConsumptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ConsumptionConfiguration"
              },
              {
                "description": "Configuration for consumption of the license. Choose a provisional configuration for workloads running with continuous connectivity. Choose a borrow configuration for workloads with offline usage."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/LicenseStatus"
              },
              {
                "description": "License status."
              }
            ]
          },
          "ClientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientToken"
              },
              {
                "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request."
              }
            ]
          },
          "SourceVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Current version of the license."
              }
            ]
          }
        }
      },
      "Arn": {
        "type": "string",
        "pattern": "^arn:aws(-(cn|us-gov|iso-b|iso-c|iso-d))?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$",
        "maxLength": 2048
      },
      "String": {
        "type": "string"
      },
      "Issuer": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Issuer name."
              }
            ]
          },
          "SignKey": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Asymmetric KMS key from Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm."
              }
            ]
          }
        },
        "description": "Details about the issuer of a license."
      },
      "DatetimeRange": {
        "type": "object",
        "required": [
          "Begin"
        ],
        "properties": {
          "Begin": {
            "allOf": [
              {
                "$ref": "#/$defs/ISO8601DateTime"
              },
              {
                "description": "Start of the time range."
              }
            ]
          },
          "End": {
            "allOf": [
              {
                "$ref": "#/$defs/ISO8601DateTime"
              },
              {
                "description": "End of the time range."
              }
            ]
          }
        },
        "description": "Describes a time range, in ISO8601-UTC format."
      },
      "ISO8601DateTime": {
        "type": "string",
        "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[ 0-3]|[0-1][0-9]):[0-5][0-9])+$",
        "maxLength": 50
      },
      "MetadataList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Metadata"
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The key name."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value."
              }
            ]
          }
        },
        "description": "Describes key/value pairs."
      },
      "EntitlementList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Entitlement"
        }
      },
      "Entitlement": {
        "type": "object",
        "required": [
          "Name",
          "Unit"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Entitlement name."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Entitlement resource. Use only if the unit is None."
              }
            ]
          },
          "MaxCount": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "description": "Maximum entitlement count. Use if the unit is not None."
              }
            ]
          },
          "Overage": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxBoolean"
              },
              {
                "description": "Indicates whether overages are allowed."
              }
            ]
          },
          "Unit": {
            "allOf": [
              {
                "$ref": "#/$defs/EntitlementUnit"
              },
              {
                "description": "Entitlement unit."
              }
            ]
          },
          "AllowCheckIn": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxBoolean"
              },
              {
                "description": "Indicates whether check-ins are allowed."
              }
            ]
          }
        },
        "description": "Describes a resource entitled for use with a license."
      },
      "Long": {
        "type": "integer"
      },
      "BoxBoolean": {
        "type": "boolean"
      },
      "EntitlementUnit": {
        "type": "string",
        "enum": [
          "Count",
          "None",
          "Seconds",
          "Microseconds",
          "Milliseconds",
          "Bytes",
          "Kilobytes",
          "Megabytes",
          "Gigabytes",
          "Terabytes",
          "Bits",
          "Kilobits",
          "Megabits",
          "Gigabits",
          "Terabits",
          "Percent",
          "Bytes/Second",
          "Kilobytes/Second",
          "Megabytes/Second",
          "Gigabytes/Second",
          "Terabytes/Second",
          "Bits/Second",
          "Kilobits/Second",
          "Megabits/Second",
          "Gigabits/Second",
          "Terabits/Second",
          "Count/Second"
        ]
      },
      "ConsumptionConfiguration": {
        "type": "object",
        "properties": {
          "RenewType": {
            "allOf": [
              {
                "$ref": "#/$defs/RenewType"
              },
              {
                "description": "Renewal frequency."
              }
            ]
          },
          "ProvisionalConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisionalConfiguration"
              },
              {
                "description": "Details about a provisional configuration."
              }
            ]
          },
          "BorrowConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BorrowConfiguration"
              },
              {
                "description": "Details about a borrow configuration."
              }
            ]
          }
        },
        "description": "Details about a consumption configuration."
      },
      "RenewType": {
        "type": "string",
        "enum": [
          "None",
          "Weekly",
          "Monthly"
        ]
      },
      "ProvisionalConfiguration": {
        "type": "object",
        "required": [
          "MaxTimeToLiveInMinutes"
        ],
        "properties": {
          "MaxTimeToLiveInMinutes": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxInteger"
              },
              {
                "description": "Maximum time for the provisional configuration, in minutes."
              }
            ]
          }
        },
        "description": "Details about a provisional configuration."
      },
      "BoxInteger": {
        "type": "integer"
      },
      "BorrowConfiguration": {
        "type": "object",
        "required": [
          "AllowEarlyCheckIn",
          "MaxTimeToLiveInMinutes"
        ],
        "properties": {
          "AllowEarlyCheckIn": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxBoolean"
              },
              {
                "description": "Indicates whether early check-ins are allowed."
              }
            ]
          },
          "MaxTimeToLiveInMinutes": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxInteger"
              },
              {
                "description": "Maximum time for the borrow configuration, in minutes."
              }
            ]
          }
        },
        "description": "Details about a borrow configuration."
      },
      "LicenseStatus": {
        "type": "string",
        "enum": [
          "AVAILABLE",
          "PENDING_AVAILABLE",
          "DEACTIVATED",
          "SUSPENDED",
          "EXPIRED",
          "PENDING_DELETE",
          "DELETED"
        ]
      },
      "ClientToken": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://license-manager.us-east-1.amazonaws.com/#X-Amz-Target=AWSLicenseManager.CreateLicenseVersion"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**LicenseArn**",
            "**Version**",
            "**Status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
