{
  "name": "CreateDirectory",
  "description": "<p>Creates a Simple AD directory. For more information, see <a href=\"https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_simple_ad.html\">Simple Active Directory</a> in the <i>Directory Service Admin Guide</i>.</p> <p>Before you call <code>CreateDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>CreateDirectory</code> operation, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "DirectoryService_20150416.CreateDirectory"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateDirectoryRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateDirectoryRequest": {
        "type": "object",
        "required": [
          "Name",
          "Password",
          "Size"
        ],
        "title": "CreateDirectoryRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/DirectoryName"
              },
              {
                "description": "The fully qualified name for the directory, such as <code>corp.example.com</code>."
              }
            ]
          },
          "ShortName": {
            "allOf": [
              {
                "$ref": "#/$defs/DirectoryShortName"
              },
              {
                "description": "The NetBIOS name of the directory, such as <code>CORP</code>."
              }
            ]
          },
          "Password": {
            "allOf": [
              {
                "$ref": "#/$defs/Password"
              },
              {
                "description": "<p>The password for the directory administrator. The directory creation process creates a directory administrator account with the user name <code>Administrator</code> and this password.</p> <p>If you need to change the password for the administrator account, you can use the <a>ResetUserPassword</a> API call.</p> <p>The regex pattern for this string is made up of the following conditions:</p> <ul> <li> <p>Length (?=^.{8,64}$) â€“ Must be between 8 and 64 characters</p> </li> </ul> <p>AND any 3 of the following password complexity rules required by Active Directory:</p> <ul> <li> <p>Numbers and upper case and lowercase (?=.*\\d)(?=.*[A-Z])(?=.*[a-z])</p> </li> <li> <p>Numbers and special characters and lower case (?=.*\\d)(?=.*[^A-Za-z0-9\\s])(?=.*[a-z])</p> </li> <li> <p>Special characters and upper case and lower case (?=.*[^A-Za-z0-9\\s])(?=.*[A-Z])(?=.*[a-z])</p> </li> <li> <p>Numbers and upper case and special characters (?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\\s])</p> </li> </ul> <p>For additional information about how Active Directory passwords are enforced, see <a href=\"https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/password-must-meet-complexity-requirements\">Password must meet complexity requirements</a> on the Microsoft website.</p>"
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "A description for the directory."
              }
            ]
          },
          "Size": {
            "allOf": [
              {
                "$ref": "#/$defs/DirectorySize"
              },
              {
                "description": "The size of the directory."
              }
            ]
          },
          "VpcSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/DirectoryVpcSettings"
              },
              {
                "description": "A <a>DirectoryVpcSettings</a> object that contains additional information for the operation."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/Tags"
              },
              {
                "description": "The tags to be assigned to the Simple AD directory."
              }
            ]
          }
        },
        "description": "Contains the inputs for the <a>CreateDirectory</a> operation. "
      },
      "DirectoryName": {
        "type": "string",
        "pattern": "^([a-zA-Z0-9]+[\\\\.-])+([a-zA-Z0-9])+$"
      },
      "DirectoryShortName": {
        "type": "string",
        "pattern": "^[^\\\\/:*?\"<>|.]+[^\\\\/:*?\"<>|]*$"
      },
      "Password": {
        "type": "string",
        "pattern": "(?=^.{8,64}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9\\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\\s]))^.*",
        "format": "password"
      },
      "Description": {
        "type": "string",
        "pattern": "^([a-zA-Z0-9_])[\\\\a-zA-Z0-9_@#%*+=:?./!\\s-]*$",
        "minLength": 0,
        "maxLength": 128
      },
      "DirectorySize": {
        "type": "string",
        "enum": [
          "Small",
          "Large"
        ]
      },
      "DirectoryVpcSettings": {
        "type": "object",
        "required": [
          "VpcId",
          "SubnetIds"
        ],
        "properties": {
          "VpcId": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcId"
              },
              {
                "description": "The identifier of the VPC in which to create the directory."
              }
            ]
          },
          "SubnetIds": {
            "allOf": [
              {
                "$ref": "#/$defs/SubnetIds"
              },
              {
                "description": "The identifiers of the subnets for the directory servers. The two subnets must be in different Availability Zones. Directory Service creates a directory server and a DNS server in each of these subnets."
              }
            ]
          }
        },
        "description": "Contains VPC information for the <a>CreateDirectory</a> or <a>CreateMicrosoftAD</a> operation."
      },
      "VpcId": {
        "type": "string",
        "pattern": "^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$"
      },
      "SubnetIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetId"
        }
      },
      "SubnetId": {
        "type": "string",
        "pattern": "^(subnet-[0-9a-f]{8}|subnet-[0-9a-f]{17})$"
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        }
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "Required name of the tag. The string value can be Unicode characters and cannot be prefixed with \"aws:\". The string can contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The optional value of the tag. The string value can be Unicode characters. The string can contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
              }
            ]
          }
        },
        "description": "Metadata assigned to a directory consisting of a key-value pair."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ds.us-east-1.amazonaws.com/#X-Amz-Target=DirectoryService_20150416.CreateDirectory"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains the results of the <a>CreateDirectory</a> operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**DirectoryId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
