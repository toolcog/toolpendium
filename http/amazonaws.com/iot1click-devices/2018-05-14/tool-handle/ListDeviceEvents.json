{
  "name": "ListDeviceEvents",
  "description": "Using a device ID, returns a DeviceEventsResponse object containing an\n array of events for the device.",
  "parameters": {
    "type": "object",
    "properties": {
      "deviceId": {
        "type": "string",
        "description": "The unique identifier of the device."
      },
      "fromTimeStamp": {
        "type": "string",
        "format": "date-time",
        "description": "The start date for the device event query, in ISO8061 format. For example,\n 2018-03-28T15:45:12.880Z\n "
      },
      "maxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 250,
        "description": "The maximum number of results to return per request. If not set, a default value of\n 100 is used."
      },
      "nextToken": {
        "type": "string",
        "description": "The token to retrieve the next set of results."
      },
      "toTimeStamp": {
        "type": "string",
        "format": "date-time",
        "description": "The end date for the device event query, in ISO8061 format. For example,\n 2018-03-28T15:45:12.880Z\n "
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "deviceId",
      "fromTimeStamp",
      "toTimeStamp"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://devices.iot1click.us-east-1.amazonaws.com/devices/{deviceId}/events#fromTimeStamp&toTimeStamp{?fromTimeStamp,maxResults,nextToken,toTimeStamp}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Events**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
