{
  "name": "DescribeAppVersionResource",
  "description": "<p>Describes a resource of the Resilience Hub application.</p> <note> <p>This API accepts only one of the following parameters to descibe the resource:</p> <ul> <li> <p> <code>resourceName</code> </p> </li> <li> <p> <code>logicalResourceId</code> </p> </li> <li> <p> <code>physicalResourceId</code> (Along with <code>physicalResourceId</code>, you can also provide <code>awsAccountId</code>, and <code>awsRegion</code>)</p> </li> </ul> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "appArn",
          "appVersion"
        ],
        "properties": {
          "appArn": {
            "description": "Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.",
            "type": "string",
            "pattern": "^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+.-]{0,1023}$"
          },
          "appVersion": {
            "description": "Resilience Hub application version.",
            "type": "string",
            "pattern": "^\\S{1,50}$"
          },
          "awsAccountId": {
            "description": "Amazon Web Services account that owns the physical resource.",
            "type": "string",
            "pattern": "^[0-9]{12}$"
          },
          "awsRegion": {
            "description": "Amazon Web Services region that owns the physical resource.",
            "type": "string",
            "pattern": "^[a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]$"
          },
          "logicalResourceId": {
            "description": "Defines a logical resource identifier.",
            "type": "object",
            "properties": {
              "eksSourceName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String255"
                  },
                  {
                    "description": "<p>Name of the Amazon Elastic Kubernetes Service cluster and namespace this resource belongs to.</p> <note> <p>This parameter accepts values in \"eks-cluster/namespace\" format.</p> </note>"
                  }
                ]
              },
              "identifier": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String255"
                  },
                  {
                    "description": "Identifier of the resource."
                  }
                ]
              },
              "logicalStackName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String255"
                  },
                  {
                    "description": "The name of the CloudFormation stack this resource belongs to."
                  }
                ]
              },
              "resourceGroupName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EntityName"
                  },
                  {
                    "description": "The name of the resource group that this resource belongs to."
                  }
                ]
              },
              "terraformSourceName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String255"
                  },
                  {
                    "description": " The name of the Terraform S3 state file this resource belongs to. "
                  }
                ]
              }
            }
          },
          "physicalResourceId": {
            "description": "Physical identifier of the resource.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2048
          },
          "resourceName": {
            "description": "Name of the resource.",
            "type": "string",
            "pattern": "^[A-Za-z0-9][A-Za-z0-9_\\-]{1,59}$"
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "String255": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "EntityName": {
        "type": "string",
        "pattern": "^[A-Za-z0-9][A-Za-z0-9_\\-]{1,59}$"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://resiliencehub.us-east-1.amazonaws.com/describe-app-version-resource"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**appArn**",
            "**appVersion**",
            "**physicalResource**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
