{
  "name": "AddDraftAppVersionResourceMappings",
  "description": "Adds the resource mapping for the draft application version. You can also update an existing resource mapping to a new physical resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "appArn",
          "resourceMappings"
        ],
        "properties": {
          "appArn": {
            "description": "Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.",
            "type": "string",
            "pattern": "^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+.-]{0,1023}$"
          },
          "resourceMappings": {
            "description": "Mappings used to map logical resources from the template to physical resources. You can use the mapping type <code>CFN_STACK</code> if the application template uses a logical stack name. Or you can map individual resources by using the mapping type <code>RESOURCE</code>. We recommend using the mapping type <code>CFN_STACK</code> if the application is backed by a CloudFormation stack.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ResourceMapping"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ResourceMapping": {
        "type": "object",
        "required": [
          "mappingType",
          "physicalResourceId"
        ],
        "properties": {
          "appRegistryAppName": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityName"
              },
              {
                "description": "The name of the application this resource is mapped to."
              }
            ]
          },
          "eksSourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/String255"
              },
              {
                "description": "<p>Name of the Amazon Elastic Kubernetes Service cluster and namespace this resource belongs to.</p> <note> <p>This parameter accepts values in \"eks-cluster/namespace\" format.</p> </note>"
              }
            ]
          },
          "logicalStackName": {
            "allOf": [
              {
                "$ref": "#/$defs/String255"
              },
              {
                "description": "The name of the CloudFormation stack this resource is mapped to."
              }
            ]
          },
          "mappingType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceMappingType"
              },
              {
                "description": "<p>Specifies the type of resource mapping.</p> <dl> <dt>AppRegistryApp</dt> <dd> <p>The resource is mapped to another application. The name of the application is contained in the <code>appRegistryAppName</code> property.</p> </dd> <dt>CfnStack</dt> <dd> <p>The resource is mapped to a CloudFormation stack. The name of the CloudFormation stack is contained in the <code>logicalStackName</code> property.</p> </dd> <dt>Resource</dt> <dd> <p>The resource is mapped to another resource. The name of the resource is contained in the <code>resourceName</code> property.</p> </dd> <dt>ResourceGroup</dt> <dd> <p>The resource is mapped to Resource Groups. The name of the resource group is contained in the <code>resourceGroupName</code> property.</p> </dd> </dl>"
              }
            ]
          },
          "physicalResourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/PhysicalResourceId"
              },
              {
                "description": "Identifier of the physical resource."
              }
            ]
          },
          "resourceGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityName"
              },
              {
                "description": "Name of the resource group that the resource is mapped to."
              }
            ]
          },
          "resourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityName"
              },
              {
                "description": "Name of the resource that the resource is mapped to."
              }
            ]
          },
          "terraformSourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/String255"
              },
              {
                "description": " The short name of the Terraform source. "
              }
            ]
          }
        },
        "description": "Defines a resource mapping."
      },
      "EntityName": {
        "type": "string",
        "pattern": "^[A-Za-z0-9][A-Za-z0-9_\\-]{1,59}$"
      },
      "String255": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "ResourceMappingType": {
        "type": "string",
        "enum": [
          "CfnStack",
          "Resource",
          "AppRegistryApp",
          "ResourceGroup",
          "Terraform",
          "EKS"
        ]
      },
      "PhysicalResourceId": {
        "type": "object",
        "required": [
          "identifier",
          "type"
        ],
        "properties": {
          "awsAccountId": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomerId"
              },
              {
                "description": "The Amazon Web Services account that owns the physical resource."
              }
            ]
          },
          "awsRegion": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsRegion"
              },
              {
                "description": "The Amazon Web Services Region that the physical resource is located in."
              }
            ]
          },
          "identifier": {
            "allOf": [
              {
                "$ref": "#/$defs/String255"
              },
              {
                "description": "Identifier of the physical resource."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/PhysicalIdentifierType"
              },
              {
                "description": "<p>Specifies the type of physical resource identifier.</p> <dl> <dt>Arn</dt> <dd> <p>The resource identifier is an Amazon Resource Name (ARN) and it can identify the following list of resources:</p> <ul> <li> <p> <code>AWS::ECS::Service</code> </p> </li> <li> <p> <code>AWS::EFS::FileSystem</code> </p> </li> <li> <p> <code>AWS::ElasticLoadBalancingV2::LoadBalancer</code> </p> </li> <li> <p> <code>AWS::Lambda::Function</code> </p> </li> <li> <p> <code>AWS::SNS::Topic</code> </p> </li> </ul> </dd> <dt>Native</dt> <dd> <p>The resource identifier is an Resilience Hub-native identifier and it can identify the following list of resources:</p> <ul> <li> <p> <code>AWS::ApiGateway::RestApi</code> </p> </li> <li> <p> <code>AWS::ApiGatewayV2::Api</code> </p> </li> <li> <p> <code>AWS::AutoScaling::AutoScalingGroup</code> </p> </li> <li> <p> <code>AWS::DocDB::DBCluster</code> </p> </li> <li> <p> <code>AWS::DocDB::DBGlobalCluster</code> </p> </li> <li> <p> <code>AWS::DocDB::DBInstance</code> </p> </li> <li> <p> <code>AWS::DynamoDB::GlobalTable</code> </p> </li> <li> <p> <code>AWS::DynamoDB::Table</code> </p> </li> <li> <p> <code>AWS::EC2::EC2Fleet</code> </p> </li> <li> <p> <code>AWS::EC2::Instance</code> </p> </li> <li> <p> <code>AWS::EC2::NatGateway</code> </p> </li> <li> <p> <code>AWS::EC2::Volume</code> </p> </li> <li> <p> <code>AWS::ElasticLoadBalancing::LoadBalancer</code> </p> </li> <li> <p> <code>AWS::RDS::DBCluster</code> </p> </li> <li> <p> <code>AWS::RDS::DBInstance</code> </p> </li> <li> <p> <code>AWS::RDS::GlobalCluster</code> </p> </li> <li> <p> <code>AWS::Route53::RecordSet</code> </p> </li> <li> <p> <code>AWS::S3::Bucket</code> </p> </li> <li> <p> <code>AWS::SQS::Queue</code> </p> </li> </ul> </dd> </dl>"
              }
            ]
          }
        },
        "description": "Defines a physical resource identifier."
      },
      "CustomerId": {
        "type": "string",
        "pattern": "^[0-9]{12}$"
      },
      "AwsRegion": {
        "type": "string",
        "pattern": "^[a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]$"
      },
      "PhysicalIdentifierType": {
        "type": "string",
        "enum": [
          "Arn",
          "Native"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://resiliencehub.us-east-1.amazonaws.com/add-draft-app-version-resource-mappings"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**appArn**",
            "**appVersion**",
            "**resourceMappings**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
