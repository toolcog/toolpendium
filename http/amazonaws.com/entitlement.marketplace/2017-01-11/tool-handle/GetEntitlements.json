{
  "name": "GetEntitlements",
  "description": "GetEntitlements retrieves entitlement values for a given product. The results can be filtered based on customer identifier or product dimensions.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSMPEntitlementService.GetEntitlements"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetEntitlementsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetEntitlementsRequest": {
        "type": "object",
        "required": [
          "ProductCode"
        ],
        "title": "GetEntitlementsRequest",
        "properties": {
          "ProductCode": {
            "allOf": [
              {
                "$ref": "#/$defs/ProductCode"
              },
              {
                "description": "Product code is used to uniquely identify a product in AWS Marketplace. The product code will be provided by AWS Marketplace when the product listing is created."
              }
            ]
          },
          "Filter": {
            "allOf": [
              {
                "$ref": "#/$defs/GetEntitlementFilters"
              },
              {
                "description": "Filter is used to return entitlements for a specific customer or for a specific dimension. Filters are described as keys mapped to a lists of values. Filtered requests are <i>unioned</i> for each value in the value list, and then <i>intersected</i> for each filter key."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "For paginated calls to GetEntitlements, pass the NextToken from the previous GetEntitlementsResult."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum number of items to retrieve from the GetEntitlements operation. For pagination, use the NextToken field in subsequent calls to GetEntitlements."
              }
            ]
          }
        },
        "description": "The GetEntitlementsRequest contains parameters for the GetEntitlements operation."
      },
      "ProductCode": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "GetEntitlementFilters": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/FilterValueList"
        }
      },
      "FilterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilterValue"
        },
        "minItems": 1
      },
      "FilterValue": {
        "type": "string"
      },
      "NonEmptyString": {
        "type": "string",
        "pattern": "\\S+"
      },
      "Integer": {
        "type": "integer"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://entitlement.marketplace.us-east-1.amazonaws.com/#X-Amz-Target=AWSMPEntitlementService.GetEntitlements"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The GetEntitlementsRequest contains results from the GetEntitlements operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**Entitlements**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "One or more parameters in your request was invalid.",
        "**Key properties:**",
        {
          "$ul": [
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "481": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The calls to the GetEntitlements API are throttled.",
        "**Key properties:**",
        {
          "$ul": [
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "482": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An internal error has occurred. Retry your request. If the problem persists, post a message with details on the AWS forums.",
        "**Key properties:**",
        {
          "$ul": [
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
