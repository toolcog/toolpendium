{
  "name": "CreateDevice",
  "description": "Creates a new device in a global network. If you specify both a site ID and a location, the location of the site is used for visualization in the Network Manager console.",
  "parameters": {
    "type": "object",
    "properties": {
      "globalNetworkId": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 0,
        "maxLength": 50,
        "description": "The ID of the global network."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "AWSLocation": {
            "description": "Specifies a location in Amazon Web Services.",
            "type": "object",
            "properties": {
              "Zone": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ConstrainedString"
                  },
                  {
                    "description": "The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost."
                  }
                ]
              },
              "SubnetArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SubnetArn"
                  },
                  {
                    "description": "The Amazon Resource Name (ARN) of the subnet that the device is located in."
                  }
                ]
              }
            }
          },
          "Description": {
            "description": "<p>A description of the device.</p> <p>Constraints: Maximum length of 256 characters.</p>",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 0,
            "maxLength": 256
          },
          "Type": {
            "description": "The type of the device.",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 0,
            "maxLength": 256
          },
          "Vendor": {
            "description": "<p>The vendor of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 0,
            "maxLength": 256
          },
          "Model": {
            "description": "<p>The model of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 0,
            "maxLength": 256
          },
          "SerialNumber": {
            "description": "<p>The serial number of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 0,
            "maxLength": 256
          },
          "Location": {
            "description": "Describes a location.",
            "type": "object",
            "properties": {
              "Address": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ConstrainedString"
                  },
                  {
                    "description": "The physical address."
                  }
                ]
              },
              "Latitude": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ConstrainedString"
                  },
                  {
                    "description": "The latitude."
                  }
                ]
              },
              "Longitude": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ConstrainedString"
                  },
                  {
                    "description": "The longitude."
                  }
                ]
              }
            }
          },
          "SiteId": {
            "description": "The ID of the site.",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 0,
            "maxLength": 50
          },
          "Tags": {
            "description": "The tags to apply to the resource during creation.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            }
          }
        }
      }
    },
    "required": [
      "globalNetworkId",
      "body"
    ],
    "$defs": {
      "ConstrainedString": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 0,
        "maxLength": 256
      },
      "SubnetArn": {
        "type": "string",
        "pattern": "^arn:[^:]{1,63}:ec2:[^:]{0,63}:[^:]{0,63}:subnet\\/subnet-[0-9a-f]{8,17}$|^$",
        "minLength": 0,
        "maxLength": 500
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "<p>The tag key.</p> <p>Constraints: Maximum length of 128 characters.</p>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "<p>The tag value.</p> <p>Constraints: Maximum length of 256 characters.</p>"
              }
            ]
          }
        },
        "description": "Describes a tag."
      },
      "TagKey": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 0,
        "maxLength": 10000000
      },
      "TagValue": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 0,
        "maxLength": 10000000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://networkmanager.us-east-1.amazonaws.com/global-networks/{globalNetworkId}/devices"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Device**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
