{
  "name": "ExecuteProvisionedProductServiceAction",
  "description": "Executes a self-service action against a provisioned product.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ExecuteProvisionedProductServiceActionInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ExecuteProvisionedProductServiceActionInput": {
        "type": "object",
        "required": [
          "ProvisionedProductId",
          "ServiceActionId",
          "ExecuteToken"
        ],
        "title": "ExecuteProvisionedProductServiceActionInput",
        "properties": {
          "ProvisionedProductId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The identifier of the provisioned product."
              }
            ]
          },
          "ServiceActionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>."
              }
            ]
          },
          "ExecuteToken": {
            "allOf": [
              {
                "$ref": "#/$defs/IdempotencyToken"
              },
              {
                "description": "An idempotency token that uniquely identifies the execute request."
              }
            ]
          },
          "AcceptLanguage": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceptLanguage"
              },
              {
                "description": "<p>The language code.</p> <ul> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>"
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ExecutionParameterMap"
              },
              {
                "description": "A map of all self-service action parameters and their values. If a provided parameter is of a special type, such as <code>TARGET</code>, the provided value will override the default value generated by Service Catalog. If the parameters field is not provided, no additional parameters are passed and default values will be used for any special parameters such as <code>TARGET</code>."
              }
            ]
          }
        }
      },
      "Id": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-]*",
        "minLength": 1,
        "maxLength": 100
      },
      "IdempotencyToken": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
        "minLength": 1,
        "maxLength": 128
      },
      "AcceptLanguage": {
        "type": "string",
        "maxLength": 100
      },
      "ExecutionParameterMap": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 200,
        "additionalProperties": {
          "$ref": "#/$defs/ExecutionParameterValueList"
        }
      },
      "ExecutionParameterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ExecutionParameterValue"
        },
        "minItems": 0,
        "maxItems": 25
      },
      "ExecutionParameterValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 512
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://servicecatalog.us-east-1.amazonaws.com/#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**RecordDetail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
