{
  "name": "CreateProvisionedProductPlan",
  "description": "<p>Creates a plan.</p> <p>A plan includes the list of resources to be created (when provisioning a new product) or modified (when updating a provisioned product) when the plan is executed.</p> <p>You can create one plan for each provisioned product. To create a plan for an existing provisioned product, the product status must be AVAILABLE or TAINTED.</p> <p>To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>. To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWS242ServiceCatalogService.CreateProvisionedProductPlan"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateProvisionedProductPlanInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateProvisionedProductPlanInput": {
        "type": "object",
        "required": [
          "PlanName",
          "PlanType",
          "ProductId",
          "ProvisionedProductName",
          "ProvisioningArtifactId",
          "IdempotencyToken"
        ],
        "title": "CreateProvisionedProductPlanInput",
        "properties": {
          "AcceptLanguage": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceptLanguage"
              },
              {
                "description": "<p>The language code.</p> <ul> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>"
              }
            ]
          },
          "PlanName": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisionedProductPlanName"
              },
              {
                "description": "The name of the plan."
              }
            ]
          },
          "PlanType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisionedProductPlanType"
              },
              {
                "description": "The plan type."
              }
            ]
          },
          "NotificationArns": {
            "allOf": [
              {
                "$ref": "#/$defs/NotificationArns"
              },
              {
                "description": "Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events."
              }
            ]
          },
          "PathId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>."
              }
            ]
          },
          "ProductId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The product identifier."
              }
            ]
          },
          "ProvisionedProductName": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisionedProductName"
              },
              {
                "description": "A user-friendly name for the provisioned product. This value must be unique for the Amazon Web Services account and cannot be updated after the product is provisioned."
              }
            ]
          },
          "ProvisioningArtifactId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The identifier of the provisioning artifact."
              }
            ]
          },
          "ProvisioningParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateProvisioningParameters"
              },
              {
                "description": "Parameters specified by the administrator that are required for provisioning the product."
              }
            ]
          },
          "IdempotencyToken": {
            "allOf": [
              {
                "$ref": "#/$defs/IdempotencyToken"
              },
              {
                "description": "A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/Tags"
              },
              {
                "description": "<p>One or more tags.</p> <p>If the plan is for an existing provisioned product, the product must have a <code>RESOURCE_UPDATE</code> constraint with <code>TagUpdatesOnProvisionedProduct</code> set to <code>ALLOWED</code> to allow tag updates.</p>"
              }
            ]
          }
        }
      },
      "AcceptLanguage": {
        "type": "string",
        "maxLength": 100
      },
      "ProvisionedProductPlanName": {
        "type": "string"
      },
      "ProvisionedProductPlanType": {
        "type": "string",
        "enum": [
          "CLOUDFORMATION"
        ]
      },
      "NotificationArns": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NotificationArn"
        },
        "maxItems": 5
      },
      "NotificationArn": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "minLength": 1,
        "maxLength": 1224
      },
      "Id": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-]*",
        "minLength": 1,
        "maxLength": 100
      },
      "ProvisionedProductName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9._-]*",
        "minLength": 1,
        "maxLength": 128
      },
      "UpdateProvisioningParameters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/UpdateProvisioningParameter"
        }
      },
      "UpdateProvisioningParameter": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterKey"
              },
              {
                "description": "The parameter key."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterValue"
              },
              {
                "description": "The parameter value."
              }
            ]
          },
          "UsePreviousValue": {
            "allOf": [
              {
                "$ref": "#/$defs/UsePreviousValue"
              },
              {
                "description": "If set to true, <code>Value</code> is ignored and the previous parameter value is kept."
              }
            ]
          }
        },
        "description": "The parameter key-value pair used to update a provisioned product."
      },
      "ParameterKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1000
      },
      "ParameterValue": {
        "type": "string",
        "maxLength": 4096
      },
      "UsePreviousValue": {
        "type": "boolean"
      },
      "IdempotencyToken": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
        "minLength": 1,
        "maxLength": 128
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value for this key."
              }
            ]
          }
        },
        "description": "Information about a tag. A tag is a key-value pair. Tags are propagated to the resources created when provisioning a product."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://servicecatalog.us-east-1.amazonaws.com/#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisionedProductPlan"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**PlanName**",
            "**PlanId**",
            "**ProvisionProductId**",
            "**ProvisionedProductName**",
            "**ProvisioningArtifactId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
