{
  "name": "CreateProvisioningArtifact",
  "description": "<p>Creates a provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot create a provisioning artifact for a product that was shared with you.</p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> IAM policy permission. This policy permission is required when using the <code>ImportFromPhysicalId</code> template source in the information data section.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWS242ServiceCatalogService.CreateProvisioningArtifact"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateProvisioningArtifactInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateProvisioningArtifactInput": {
        "type": "object",
        "required": [
          "ProductId",
          "Parameters",
          "IdempotencyToken"
        ],
        "title": "CreateProvisioningArtifactInput",
        "properties": {
          "AcceptLanguage": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceptLanguage"
              },
              {
                "description": "<p>The language code.</p> <ul> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>"
              }
            ]
          },
          "ProductId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The product identifier."
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisioningArtifactProperties"
              },
              {
                "description": "The configuration for the provisioning artifact."
              }
            ]
          },
          "IdempotencyToken": {
            "allOf": [
              {
                "$ref": "#/$defs/IdempotencyToken"
              },
              {
                "description": "A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request."
              }
            ]
          }
        }
      },
      "AcceptLanguage": {
        "type": "string",
        "maxLength": 100
      },
      "Id": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-]*",
        "minLength": 1,
        "maxLength": 100
      },
      "ProvisioningArtifactProperties": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisioningArtifactName"
              },
              {
                "description": "The name of the provisioning artifact (for example, v1 v2beta). No spaces are allowed."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisioningArtifactDescription"
              },
              {
                "description": "The description of the provisioning artifact, including how it differs from the previous provisioning artifact."
              }
            ]
          },
          "Info": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisioningArtifactInfo"
              },
              {
                "description": "<p>Specify the template source with one of the following options, but not both. Keys accepted: [ <code>LoadTemplateFromURL</code>, <code>ImportFromPhysicalId</code> ]</p> <p>The URL of the CloudFormation template in Amazon S3 or GitHub in JSON format. Specify the URL in JSON format as follows:</p> <p> <code>\"LoadTemplateFromURL\": \"https://s3.amazonaws.com/cf-templates-ozkq9d3hgiq2-us-east-1/...\"</code> </p> <p> <code>ImportFromPhysicalId</code>: The physical id of the resource that contains the template. Currently only supports CloudFormation stack arn. Specify the physical id in JSON format as follows: <code>ImportFromPhysicalId: â€œarn:aws:cloudformation:[us-east-1]:[accountId]:stack/[StackName]/[resourceId]</code> </p>"
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisioningArtifactType"
              },
              {
                "description": "<p>The type of provisioning artifact.</p> <ul> <li> <p> <code>CLOUD_FORMATION_TEMPLATE</code> - CloudFormation template</p> </li> <li> <p> <code>MARKETPLACE_AMI</code> - Amazon Web Services Marketplace AMI</p> </li> <li> <p> <code>MARKETPLACE_CAR</code> - Amazon Web Services Marketplace Clusters and Amazon Web Services Resources</p> </li> <li> <p> <code>TERRAFORM_OPEN_SOURCE</code> - Terraform open source configuration file</p> </li> </ul>"
              }
            ]
          },
          "DisableTemplateValidation": {
            "allOf": [
              {
                "$ref": "#/$defs/DisableTemplateValidation"
              },
              {
                "description": "If set to true, Service Catalog stops validating the specified provisioning artifact even if it is invalid."
              }
            ]
          }
        },
        "description": "Information about a provisioning artifact (also known as a version) for a product."
      },
      "ProvisioningArtifactName": {
        "type": "string",
        "maxLength": 8192
      },
      "ProvisioningArtifactDescription": {
        "type": "string",
        "maxLength": 8192
      },
      "ProvisioningArtifactInfo": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 100,
        "additionalProperties": {
          "$ref": "#/$defs/ProvisioningArtifactInfoValue"
        }
      },
      "ProvisioningArtifactInfoValue": {
        "type": "string"
      },
      "ProvisioningArtifactType": {
        "type": "string",
        "enum": [
          "CLOUD_FORMATION_TEMPLATE",
          "MARKETPLACE_AMI",
          "MARKETPLACE_CAR",
          "TERRAFORM_OPEN_SOURCE"
        ]
      },
      "DisableTemplateValidation": {
        "type": "boolean"
      },
      "IdempotencyToken": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
        "minLength": 1,
        "maxLength": 128
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://servicecatalog.us-east-1.amazonaws.com/#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisioningArtifact"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ProvisioningArtifactDetail**",
            "**Info**",
            "**Status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
