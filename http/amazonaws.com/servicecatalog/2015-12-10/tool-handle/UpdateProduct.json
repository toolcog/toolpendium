{
  "name": "UpdateProduct",
  "description": "Updates the specified product.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWS242ServiceCatalogService.UpdateProduct"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateProductInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateProductInput": {
        "type": "object",
        "required": [
          "Id"
        ],
        "title": "UpdateProductInput",
        "properties": {
          "AcceptLanguage": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceptLanguage"
              },
              {
                "description": "<p>The language code.</p> <ul> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>"
              }
            ]
          },
          "Id": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The product identifier."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ProductViewName"
              },
              {
                "description": "The updated product name."
              }
            ]
          },
          "Owner": {
            "allOf": [
              {
                "$ref": "#/$defs/ProductViewOwner"
              },
              {
                "description": "The updated owner of the product."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/ProductViewShortDescription"
              },
              {
                "description": "The updated description of the product."
              }
            ]
          },
          "Distributor": {
            "allOf": [
              {
                "$ref": "#/$defs/ProductViewOwner"
              },
              {
                "description": "The updated distributor of the product."
              }
            ]
          },
          "SupportDescription": {
            "allOf": [
              {
                "$ref": "#/$defs/SupportDescription"
              },
              {
                "description": "The updated support description for the product."
              }
            ]
          },
          "SupportEmail": {
            "allOf": [
              {
                "$ref": "#/$defs/SupportEmail"
              },
              {
                "description": "The updated support email for the product."
              }
            ]
          },
          "SupportUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/SupportUrl"
              },
              {
                "description": "The updated support URL for the product."
              }
            ]
          },
          "AddTags": {
            "allOf": [
              {
                "$ref": "#/$defs/AddTags"
              },
              {
                "description": "The tags to add to the product."
              }
            ]
          },
          "RemoveTags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKeys"
              },
              {
                "description": "The tags to remove from the product."
              }
            ]
          },
          "SourceConnection": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceConnection"
              },
              {
                "description": "<p>Specifies connection details for the updated product and syncs the product to the connection source artifact. This automatically manages the product's artifacts based on changes to the source. The <code>SourceConnection</code> parameter consists of the following sub-fields.</p> <ul> <li> <p> <code>Type</code> </p> </li> <li> <p> <code>ConnectionParamters</code> </p> </li> </ul>"
              }
            ]
          }
        }
      },
      "AcceptLanguage": {
        "type": "string",
        "maxLength": 100
      },
      "Id": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-]*",
        "minLength": 1,
        "maxLength": 100
      },
      "ProductViewName": {
        "type": "string",
        "maxLength": 8191
      },
      "ProductViewOwner": {
        "type": "string",
        "maxLength": 8191
      },
      "ProductViewShortDescription": {
        "type": "string",
        "maxLength": 8191
      },
      "SupportDescription": {
        "type": "string",
        "maxLength": 8191
      },
      "SupportEmail": {
        "type": "string",
        "maxLength": 254
      },
      "SupportUrl": {
        "type": "string",
        "maxLength": 2083
      },
      "AddTags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "maxItems": 20
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value for this key."
              }
            ]
          }
        },
        "description": "Information about a tag. A tag is a key-value pair. Tags are propagated to the resources created when provisioning a product."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 256
      },
      "TagKeys": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TagKey"
        }
      },
      "SourceConnection": {
        "type": "object",
        "required": [
          "ConnectionParameters"
        ],
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceType"
              },
              {
                "description": "The only supported <code>SourceConnection</code> type is Codestar. "
              }
            ]
          },
          "ConnectionParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceConnectionParameters"
              },
              {
                "description": "The connection details based on the connection <code>Type</code>. "
              }
            ]
          }
        },
        "description": "A top level <code>ProductViewDetail</code> response containing details about the product’s connection. Service Catalog returns this field for the <code>CreateProduct</code>, <code>UpdateProduct</code>, <code>DescribeProductAsAdmin</code>, and <code>SearchProductAsAdmin</code> APIs. This response contains the same fields as the <code>ConnectionParameters</code> request, with the addition of the <code>LastSync</code> response."
      },
      "SourceType": {
        "type": "string",
        "enum": [
          "CODESTAR"
        ]
      },
      "SourceConnectionParameters": {
        "type": "object",
        "properties": {
          "CodeStar": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeStarParameters"
              },
              {
                "description": "Provides <code>ConnectionType</code> details."
              }
            ]
          }
        },
        "description": "Provides connection details."
      },
      "CodeStarParameters": {
        "type": "object",
        "required": [
          "ConnectionArn",
          "Repository",
          "Branch",
          "ArtifactPath"
        ],
        "properties": {
          "ConnectionArn": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeStarConnectionArn"
              },
              {
                "description": "The CodeStar ARN, which is the connection between Service Catalog and the external repository."
              }
            ]
          },
          "Repository": {
            "allOf": [
              {
                "$ref": "#/$defs/Repository"
              },
              {
                "description": "The specific repository where the product’s artifact-to-be-synced resides, formatted as \"Account/Repo.\" "
              }
            ]
          },
          "Branch": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryBranch"
              },
              {
                "description": "The specific branch where the artifact resides. "
              }
            ]
          },
          "ArtifactPath": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryArtifactPath"
              },
              {
                "description": "The absolute path wehre the artifact resides within the repo and branch, formatted as \"folder/file.json.\" "
              }
            ]
          }
        },
        "description": "The subtype containing details about the Codestar connection <code>Type</code>. "
      },
      "CodeStarConnectionArn": {
        "type": "string",
        "pattern": "arn:[a-z0-9][-.a-z0-9]{0,62}:codestar-connections:([a-z0-9][-.a-z0-9]{0,62})?:([a-z0-9][-.a-z0-9]{0,62})?:[^/].{0,1023}$",
        "minLength": 1,
        "maxLength": 1224
      },
      "Repository": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "RepositoryBranch": {
        "type": "string",
        "minLength": 1,
        "maxLength": 250
      },
      "RepositoryArtifactPath": {
        "type": "string",
        "minLength": 1,
        "maxLength": 4096
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://servicecatalog.us-east-1.amazonaws.com/#X-Amz-Target=AWS242ServiceCatalogService.UpdateProduct"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ProductViewDetail**",
            "**Tags**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
