{
  "name": "NotifyUpdateProvisionedProductEngineWorkflowResult",
  "description": " Notifies the result of the update engine execution. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWS242ServiceCatalogService.NotifyUpdateProvisionedProductEngineWorkflowResult"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/NotifyUpdateProvisionedProductEngineWorkflowResultInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "NotifyUpdateProvisionedProductEngineWorkflowResultInput": {
        "type": "object",
        "required": [
          "WorkflowToken",
          "RecordId",
          "Status",
          "IdempotencyToken"
        ],
        "title": "NotifyUpdateProvisionedProductEngineWorkflowResultInput",
        "properties": {
          "WorkflowToken": {
            "allOf": [
              {
                "$ref": "#/$defs/EngineWorkflowToken"
              },
              {
                "description": " The encrypted contents of the update engine execution payload that Service Catalog sends after the Terraform product update workflow starts. "
              }
            ]
          },
          "RecordId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": " The identifier of the record. "
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/EngineWorkflowStatus"
              },
              {
                "description": " The status of the update engine execution. "
              }
            ]
          },
          "FailureReason": {
            "allOf": [
              {
                "$ref": "#/$defs/EngineWorkflowFailureReason"
              },
              {
                "description": " The reason why the update engine execution failed. "
              }
            ]
          },
          "Outputs": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordOutputs"
              },
              {
                "description": " The output of the update engine execution. "
              }
            ]
          },
          "IdempotencyToken": {
            "allOf": [
              {
                "$ref": "#/$defs/IdempotencyToken"
              },
              {
                "description": " The idempotency token that identifies the update engine execution. "
              }
            ]
          }
        }
      },
      "EngineWorkflowToken": {
        "type": "string",
        "pattern": "[0-9A-Za-z+\\/=]+",
        "minLength": 1,
        "maxLength": 20000
      },
      "Id": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-]*",
        "minLength": 1,
        "maxLength": 100
      },
      "EngineWorkflowStatus": {
        "type": "string",
        "enum": [
          "SUCCEEDED",
          "FAILED"
        ]
      },
      "EngineWorkflowFailureReason": {
        "type": "string",
        "pattern": "[\\u0009\\u000a\\u000d\\u0020-\\uD7FF\\uE000-\\uFFFD]*",
        "minLength": 1,
        "maxLength": 2048
      },
      "RecordOutputs": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RecordOutput"
        }
      },
      "RecordOutput": {
        "type": "object",
        "properties": {
          "OutputKey": {
            "allOf": [
              {
                "$ref": "#/$defs/OutputKey"
              },
              {
                "description": "The output key."
              }
            ]
          },
          "OutputValue": {
            "allOf": [
              {
                "$ref": "#/$defs/OutputValue"
              },
              {
                "description": "The output value."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "The description of the output."
              }
            ]
          }
        },
        "description": "The output for the product created as the result of a request. For example, the output for a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL."
      },
      "OutputKey": {
        "type": "string"
      },
      "OutputValue": {
        "type": "string"
      },
      "Description": {
        "type": "string"
      },
      "IdempotencyToken": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
        "minLength": 1,
        "maxLength": 128
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://servicecatalog.us-east-1.amazonaws.com/#X-Amz-Target=AWS242ServiceCatalogService.NotifyUpdateProvisionedProductEngineWorkflowResult"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
