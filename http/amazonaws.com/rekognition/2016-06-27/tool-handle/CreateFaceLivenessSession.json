{
  "name": "CreateFaceLivenessSession",
  "description": "<p>This API operation initiates a Face Liveness session. It returns a <code>SessionId</code>, which you can use to start streaming Face Liveness video and get the results for a Face Liveness session. </p> <p>You can use the <code>OutputConfig</code> option in the Settings parameter to provide an Amazon S3 bucket location. The Amazon S3 bucket stores reference images and audit images. If no Amazon S3 bucket is defined, raw bytes are sent instead. </p> <p>You can use <code>AuditImagesLimit</code> to limit the number of audit images returned when <code>GetFaceLivenessSessionResults</code> is called. This number is between 0 and 4. By default, it is set to 0. The limit is best effort and based on the duration of the selfie-video. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "RekognitionService.CreateFaceLivenessSession"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateFaceLivenessSessionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateFaceLivenessSessionRequest": {
        "type": "object",
        "title": "CreateFaceLivenessSessionRequest",
        "properties": {
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": " The identifier for your AWS Key Management Service key (AWS KMS key). Used to encrypt audit images and reference images."
              }
            ]
          },
          "Settings": {
            "allOf": [
              {
                "$ref": "#/$defs/CreateFaceLivenessSessionRequestSettings"
              },
              {
                "description": "A session settings object. It contains settings for the operation to be performed. For Face Liveness, it accepts <code>OutputConfig</code> and <code>AuditImagesLimit</code>."
              }
            ]
          },
          "ClientRequestToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientRequestToken"
              },
              {
                "description": "Idempotent token is used to recognize the Face Liveness request. If the same token is used with multiple <code>CreateFaceLivenessSession</code> requests, the same session is returned. This token is employed to avoid unintentionally creating the same session multiple times."
              }
            ]
          }
        }
      },
      "KmsKeyId": {
        "type": "string",
        "pattern": "^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$",
        "minLength": 1,
        "maxLength": 2048
      },
      "CreateFaceLivenessSessionRequestSettings": {
        "type": "object",
        "properties": {
          "OutputConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/LivenessOutputConfig"
              },
              {
                "description": "Can specify the location of an Amazon S3 bucket, where reference and audit images will be stored. Note that the Amazon S3 bucket must be located in the caller's AWS account and in the same region as the Face Liveness end-point. Additionally, the Amazon S3 object keys are auto-generated by the Face Liveness system. Requires that the caller has the <code>s3:PutObject</code> permission on the Amazon S3 bucket."
              }
            ]
          },
          "AuditImagesLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/AuditImagesLimit"
              },
              {
                "description": "Number of audit images to be returned back. Takes an integer between 0-4. Any integer less than 0 will return 0, any integer above 4 will return 4 images in the response. By default, it is set to 0. The limit is best effort and is based on the actual duration of the selfie-video."
              }
            ]
          }
        },
        "description": "A session settings object. It contains settings for the operation to be performed. It accepts arguments for OutputConfig and AuditImagesLimit."
      },
      "LivenessOutputConfig": {
        "type": "object",
        "required": [
          "S3Bucket"
        ],
        "properties": {
          "S3Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Bucket"
              },
              {
                "description": "The path to an AWS Amazon S3 bucket used to store Face Liveness session results."
              }
            ]
          },
          "S3KeyPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/LivenessS3KeyPrefix"
              },
              {
                "description": "The prefix prepended to the output files for the Face Liveness session results."
              }
            ]
          }
        },
        "description": "Contains settings that specify the location of an Amazon S3 bucket used to store the output of a Face Liveness session. Note that the S3 bucket must be located in the caller's AWS account and in the same region as the Face Liveness end-point. Additionally, the Amazon S3 object keys are auto-generated by the Face Liveness system. "
      },
      "S3Bucket": {
        "type": "string",
        "pattern": "[0-9A-Za-z\\.\\-_]*",
        "minLength": 3,
        "maxLength": 255
      },
      "LivenessS3KeyPrefix": {
        "type": "string",
        "pattern": "\\S*",
        "maxLength": 950
      },
      "AuditImagesLimit": {
        "type": "integer",
        "minimum": 0,
        "maximum": 4
      },
      "ClientRequestToken": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-_]+$",
        "minLength": 1,
        "maxLength": 64
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://rekognition.us-east-1.amazonaws.com/#X-Amz-Target=RekognitionService.CreateFaceLivenessSession"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**SessionId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
