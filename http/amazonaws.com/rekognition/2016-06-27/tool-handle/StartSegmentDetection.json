{
  "name": "StartSegmentDetection",
  "description": "<p>Starts asynchronous detection of segment detection in a stored video.</p> <p>Amazon Rekognition Video can detect segments in a video stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket name and the filename of the video. <code>StartSegmentDetection</code> returns a job identifier (<code>JobId</code>) which you use to get the results of the operation. When segment detection is finished, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.</p> <p>You can use the <code>Filters</code> (<a>StartSegmentDetectionFilters</a>) input parameter to specify the minimum detection confidence returned in the response. Within <code>Filters</code>, use <code>ShotFilter</code> (<a>StartShotDetectionFilter</a>) to filter detected shots. Use <code>TechnicalCueFilter</code> (<a>StartTechnicalCueDetectionFilter</a>) to filter technical cues. </p> <p>To get the results of the segment detection operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. if so, call <a>GetSegmentDetection</a> and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartSegmentDetection</code>. </p> <p>For more information, see Detecting video segments in stored video in the Amazon Rekognition Developer Guide.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "RekognitionService.StartSegmentDetection"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/StartSegmentDetectionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "StartSegmentDetectionRequest": {
        "type": "object",
        "required": [
          "Video",
          "SegmentTypes"
        ],
        "title": "StartSegmentDetectionRequest",
        "properties": {
          "Video": {
            "$ref": "#/$defs/Video"
          },
          "ClientRequestToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientRequestToken"
              },
              {
                "description": "Idempotent token used to identify the start request. If you use the same token with multiple <code>StartSegmentDetection</code> requests, the same <code>JobId</code> is returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidently started more than once. "
              }
            ]
          },
          "NotificationChannel": {
            "allOf": [
              {
                "$ref": "#/$defs/NotificationChannel"
              },
              {
                "description": "The ARN of the Amazon SNS topic to which you want Amazon Rekognition Video to publish the completion status of the segment detection operation. Note that the Amazon SNS topic must have a topic name that begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole permissions policy to access the topic."
              }
            ]
          },
          "JobTag": {
            "allOf": [
              {
                "$ref": "#/$defs/JobTag"
              },
              {
                "description": "An identifier you specify that's returned in the completion notification that's published to your Amazon Simple Notification Service topic. For example, you can use <code>JobTag</code> to group related jobs and identify them in the completion notification."
              }
            ]
          },
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/StartSegmentDetectionFilters"
              },
              {
                "description": "Filters for technical cue or shot detection."
              }
            ]
          },
          "SegmentTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/SegmentTypes"
              },
              {
                "description": "An array of segment types to detect in the video. Valid values are TECHNICAL_CUE and SHOT."
              }
            ]
          }
        }
      },
      "Video": {
        "type": "object",
        "properties": {
          "S3Object": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Object"
              },
              {
                "description": "The Amazon S3 bucket name and file name for the video."
              }
            ]
          }
        },
        "description": "Video file stored in an Amazon S3 bucket. Amazon Rekognition video start operations such as <a>StartLabelDetection</a> use <code>Video</code> to specify a video for analysis. The supported file formats are .mp4, .mov and .avi."
      },
      "S3Object": {
        "type": "object",
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Bucket"
              },
              {
                "description": "Name of the S3 bucket."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ObjectName"
              },
              {
                "description": "S3 object key name."
              }
            ]
          },
          "Version": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ObjectVersion"
              },
              {
                "description": "If the bucket is versioning enabled, you can specify the object version. "
              }
            ]
          }
        },
        "description": "<p>Provides the S3 bucket name and object name.</p> <p>The region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.</p> <p>For Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see How Amazon Rekognition works with IAM in the Amazon Rekognition Developer Guide. </p>"
      },
      "S3Bucket": {
        "type": "string",
        "pattern": "[0-9A-Za-z\\.\\-_]*",
        "minLength": 3,
        "maxLength": 255
      },
      "S3ObjectName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "S3ObjectVersion": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "ClientRequestToken": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-_]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "NotificationChannel": {
        "type": "object",
        "required": [
          "SNSTopicArn",
          "RoleArn"
        ],
        "properties": {
          "SNSTopicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/SNSTopicArn"
              },
              {
                "description": "The Amazon SNS topic to which Amazon Rekognition posts the completion status."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The ARN of an IAM role that gives Amazon Rekognition publishing permissions to the Amazon SNS topic. "
              }
            ]
          }
        },
        "description": "The Amazon Simple Notification Service topic to which Amazon Rekognition publishes the completion status of a video analysis operation. For more information, see <a href=\"https://docs.aws.amazon.com/rekognition/latest/dg/api-video.html\">Calling Amazon Rekognition Video operations</a>. Note that the Amazon SNS topic must have a topic name that begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole permissions policy to access the topic. For more information, see <a href=\"https://docs.aws.amazon.com/rekognition/latest/dg/api-video-roles.html#api-video-roles-all-topics\">Giving access to multiple Amazon SNS topics</a>."
      },
      "SNSTopicArn": {
        "type": "string",
        "pattern": "(^arn:aws:sns:.*:\\w{12}:.+$)"
      },
      "RoleArn": {
        "type": "string",
        "pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+"
      },
      "JobTag": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.\\-:+=\\/]+",
        "minLength": 1,
        "maxLength": 1024
      },
      "StartSegmentDetectionFilters": {
        "type": "object",
        "properties": {
          "TechnicalCueFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/StartTechnicalCueDetectionFilter"
              },
              {
                "description": "Filters that are specific to technical cues."
              }
            ]
          },
          "ShotFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/StartShotDetectionFilter"
              },
              {
                "description": "Filters that are specific to shot detections."
              }
            ]
          }
        },
        "description": "Filters applied to the technical cue or shot detection segments. For more information, see <a>StartSegmentDetection</a>. "
      },
      "StartTechnicalCueDetectionFilter": {
        "type": "object",
        "properties": {
          "MinSegmentConfidence": {
            "allOf": [
              {
                "$ref": "#/$defs/SegmentConfidence"
              },
              {
                "description": "<p>Specifies the minimum confidence that Amazon Rekognition Video must have in order to return a detected segment. Confidence represents how certain Amazon Rekognition is that a segment is correctly identified. 0 is the lowest confidence. 100 is the highest confidence. Amazon Rekognition Video doesn't return any segments with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinSegmentConfidence</code>, <code>GetSegmentDetection</code> returns segments with confidence values greater than or equal to 50 percent.</p>"
              }
            ]
          },
          "BlackFrame": {
            "allOf": [
              {
                "$ref": "#/$defs/BlackFrame"
              },
              {
                "description": " A filter that allows you to control the black frame detection by specifying the black levels and pixel coverage of black pixels in a frame. Videos can come from multiple sources, formats, and time periods, with different standards and varying noise levels for black frames that need to be accounted for. "
              }
            ]
          }
        },
        "description": "Filters for the technical segments returned by <a>GetSegmentDetection</a>. For more information, see <a>StartSegmentDetectionFilters</a>."
      },
      "SegmentConfidence": {
        "type": "number",
        "format": "float",
        "minimum": 50,
        "maximum": 100
      },
      "BlackFrame": {
        "type": "object",
        "properties": {
          "MaxPixelThreshold": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxPixelThreshold"
              },
              {
                "description": "<p> A threshold used to determine the maximum luminance value for a pixel to be considered black. In a full color range video, luminance values range from 0-255. A pixel value of 0 is pure black, and the most strict filter. The maximum black pixel value is computed as follows: max_black_pixel_value = minimum_luminance + MaxPixelThreshold *luminance_range. </p> <p>For example, for a full range video with BlackPixelThreshold = 0.1, max_black_pixel_value is 0 + 0.1 * (255-0) = 25.5.</p> <p>The default value of MaxPixelThreshold is 0.2, which maps to a max_black_pixel_value of 51 for a full range video. You can lower this threshold to be more strict on black levels.</p>"
              }
            ]
          },
          "MinCoveragePercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/MinCoveragePercentage"
              },
              {
                "description": "<p> The minimum percentage of pixels in a frame that need to have a luminance below the max_black_pixel_value for a frame to be considered a black frame. Luminance is calculated using the BT.709 matrix. </p> <p>The default value is 99, which means at least 99% of all pixels in the frame are black pixels as per the <code>MaxPixelThreshold</code> set. You can reduce this value to allow more noise on the black frame.</p>"
              }
            ]
          }
        },
        "description": " A filter that allows you to control the black frame detection by specifying the black levels and pixel coverage of black pixels in a frame. As videos can come from multiple sources, formats, and time periods, they may contain different standards and varying noise levels for black frames that need to be accounted for. For more information, see <a>StartSegmentDetection</a>. "
      },
      "MaxPixelThreshold": {
        "type": "number",
        "format": "float",
        "minimum": 0,
        "maximum": 1
      },
      "MinCoveragePercentage": {
        "type": "number",
        "format": "float",
        "minimum": 0,
        "maximum": 100
      },
      "StartShotDetectionFilter": {
        "type": "object",
        "properties": {
          "MinSegmentConfidence": {
            "allOf": [
              {
                "$ref": "#/$defs/SegmentConfidence"
              },
              {
                "description": "<p>Specifies the minimum confidence that Amazon Rekognition Video must have in order to return a detected segment. Confidence represents how certain Amazon Rekognition is that a segment is correctly identified. 0 is the lowest confidence. 100 is the highest confidence. Amazon Rekognition Video doesn't return any segments with a confidence level lower than this specified value.</p> <p>If you don't specify <code>MinSegmentConfidence</code>, the <code>GetSegmentDetection</code> returns segments with confidence values greater than or equal to 50 percent.</p>"
              }
            ]
          }
        },
        "description": "Filters for the shot detection segments returned by <code>GetSegmentDetection</code>. For more information, see <a>StartSegmentDetectionFilters</a>."
      },
      "SegmentTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SegmentType"
        },
        "minItems": 1
      },
      "SegmentType": {
        "type": "string",
        "enum": [
          "TECHNICAL_CUE",
          "SHOT"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://rekognition.us-east-1.amazonaws.com/#X-Amz-Target=RekognitionService.StartSegmentDetection"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**JobId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
