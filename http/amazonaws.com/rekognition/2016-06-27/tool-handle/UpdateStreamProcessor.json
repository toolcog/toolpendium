{
  "name": "UpdateStreamProcessor",
  "description": " Allows you to update a stream processor. You can change some settings and regions of interest and delete certain parameters. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "RekognitionService.UpdateStreamProcessor"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateStreamProcessorRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateStreamProcessorRequest": {
        "type": "object",
        "required": [
          "Name"
        ],
        "title": "UpdateStreamProcessorRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamProcessorName"
              },
              {
                "description": " Name of the stream processor that you want to update. "
              }
            ]
          },
          "SettingsForUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamProcessorSettingsForUpdate"
              },
              {
                "description": " The stream processor settings that you want to update. Label detection settings can be updated to detect different labels with a different minimum confidence. "
              }
            ]
          },
          "RegionsOfInterestForUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/RegionsOfInterest"
              },
              {
                "description": " Specifies locations in the frames where Amazon Rekognition checks for objects or people. This is an optional parameter for label detection stream processors. "
              }
            ]
          },
          "DataSharingPreferenceForUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamProcessorDataSharingPreference"
              },
              {
                "description": " Shows whether you are sharing data with Rekognition to improve model performance. You can choose this option at the account level or on a per-stream basis. Note that if you opt out at the account level this setting is ignored on individual streams. "
              }
            ]
          },
          "ParametersToDelete": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamProcessorParametersToDelete"
              },
              {
                "description": " A list of parameters you want to delete from the stream processor. "
              }
            ]
          }
        }
      },
      "StreamProcessorName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.\\-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "StreamProcessorSettingsForUpdate": {
        "type": "object",
        "properties": {
          "ConnectedHomeForUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectedHomeSettingsForUpdate"
              },
              {
                "description": " The label detection settings you want to use for your stream processor. "
              }
            ]
          }
        },
        "description": " The stream processor settings that you want to update. <code>ConnectedHome</code> settings can be updated to detect different labels with a different minimum confidence. "
      },
      "ConnectedHomeSettingsForUpdate": {
        "type": "object",
        "properties": {
          "Labels": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectedHomeLabels"
              },
              {
                "description": " Specifies what you want to detect in the video, such as people, packages, or pets. The current valid labels you can include in this list are: \"PERSON\", \"PET\", \"PACKAGE\", and \"ALL\". "
              }
            ]
          },
          "MinConfidence": {
            "allOf": [
              {
                "$ref": "#/$defs/Percent"
              },
              {
                "description": " The minimum confidence required to label an object in the video. "
              }
            ]
          }
        },
        "description": " The label detection settings you want to use in your stream processor. This includes the labels you want the stream processor to detect and the minimum confidence level allowed to label objects. "
      },
      "ConnectedHomeLabels": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConnectedHomeLabel"
        },
        "minItems": 1,
        "maxItems": 128
      },
      "ConnectedHomeLabel": {
        "type": "string"
      },
      "Percent": {
        "type": "number",
        "format": "float",
        "minimum": 0,
        "maximum": 100
      },
      "RegionsOfInterest": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RegionOfInterest"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "RegionOfInterest": {
        "type": "object",
        "properties": {
          "BoundingBox": {
            "allOf": [
              {
                "$ref": "#/$defs/BoundingBox"
              },
              {
                "description": "The box representing a region of interest on screen."
              }
            ]
          },
          "Polygon": {
            "allOf": [
              {
                "$ref": "#/$defs/Polygon"
              },
              {
                "description": " Specifies a shape made up of up to 10 <code>Point</code> objects to define a region of interest. "
              }
            ]
          }
        },
        "description": "<p>Specifies a location within the frame that Rekognition checks for objects of interest such as text, labels, or faces. It uses a <code>BoundingBox</code> or <code>Polygon</code> to set a region of the screen.</p> <p>A word, face, or label is included in the region if it is more than half in that region. If there is more than one region, the word, face, or label is compared with all regions of the screen. Any object of interest that is more than half in a region is kept in the results.</p>"
      },
      "BoundingBox": {
        "type": "object",
        "properties": {
          "Width": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "Width of the bounding box as a ratio of the overall image width."
              }
            ]
          },
          "Height": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "Height of the bounding box as a ratio of the overall image height."
              }
            ]
          },
          "Left": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "Left coordinate of the bounding box as a ratio of overall image width."
              }
            ]
          },
          "Top": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "Top coordinate of the bounding box as a ratio of overall image height."
              }
            ]
          }
        },
        "description": "<p>Identifies the bounding box around the label, face, text, object of interest, or personal protective equipment. The <code>left</code> (x-coordinate) and <code>top</code> (y-coordinate) are coordinates representing the top and left sides of the bounding box. Note that the upper-left corner of the image is the origin (0,0). </p> <p>The <code>top</code> and <code>left</code> values returned are ratios of the overall image size. For example, if the input image is 700x200 pixels, and the top-left coordinate of the bounding box is 350x50 pixels, the API returns a <code>left</code> value of 0.5 (350/700) and a <code>top</code> value of 0.25 (50/200).</p> <p>The <code>width</code> and <code>height</code> values represent the dimensions of the bounding box as a ratio of the overall image dimension. For example, if the input image is 700x200 pixels, and the bounding box width is 70 pixels, the width returned is 0.1. </p> <note> <p> The bounding box coordinates can have negative values. For example, if Amazon Rekognition is able to detect a face that is at the image edge and is only partially visible, the service can return coordinates that are outside the image bounds and, depending on the image edge, you might get negative values or values greater than 1 for the <code>left</code> or <code>top</code> values. </p> </note>"
      },
      "Float": {
        "type": "number",
        "format": "float"
      },
      "Polygon": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Point"
        }
      },
      "Point": {
        "type": "object",
        "properties": {
          "X": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The value of the X coordinate for a point on a <code>Polygon</code>."
              }
            ]
          },
          "Y": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The value of the Y coordinate for a point on a <code>Polygon</code>."
              }
            ]
          }
        },
        "description": "<p>The X and Y coordinates of a point on an image or video frame. The X and Y values are ratios of the overall image size or video resolution. For example, if an input image is 700x200 and the values are X=0.5 and Y=0.25, then the point is at the (350,50) pixel coordinate on the image.</p> <p>An array of <code>Point</code> objects makes up a <code>Polygon</code>. A <code>Polygon</code> is returned by <a>DetectText</a> and by <a>DetectCustomLabels</a> <code>Polygon</code> represents a fine-grained polygon around a detected item. For more information, see Geometry in the Amazon Rekognition Developer Guide. </p>"
      },
      "StreamProcessorDataSharingPreference": {
        "type": "object",
        "required": [
          "OptIn"
        ],
        "properties": {
          "OptIn": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": " If this option is set to true, you choose to share data with Rekognition to improve model performance. "
              }
            ]
          }
        },
        "description": " Allows you to opt in or opt out to share data with Rekognition to improve model performance. You can choose this option at the account level or on a per-stream basis. Note that if you opt out at the account level this setting is ignored on individual streams. "
      },
      "Boolean": {
        "type": "boolean"
      },
      "StreamProcessorParametersToDelete": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StreamProcessorParameterToDelete"
        }
      },
      "StreamProcessorParameterToDelete": {
        "type": "string",
        "enum": [
          "ConnectedHomeMinConfidence",
          "RegionsOfInterest"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://rekognition.us-east-1.amazonaws.com/#X-Amz-Target=RekognitionService.UpdateStreamProcessor"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
