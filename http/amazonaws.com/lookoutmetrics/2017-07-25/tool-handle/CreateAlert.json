{
  "name": "CreateAlert",
  "description": "Creates an alert for an anomaly detector.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "AlertName",
          "AnomalyDetectorArn",
          "Action"
        ],
        "properties": {
          "AlertName": {
            "description": "The name of the alert.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*",
            "minLength": 1,
            "maxLength": 63
          },
          "AlertSensitivityThreshold": {
            "description": "An integer from 0 to 100 specifying the alert sensitivity threshold.",
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "AlertDescription": {
            "description": "A description of the alert.",
            "type": "string",
            "pattern": ".*\\S.*",
            "maxLength": 256
          },
          "AnomalyDetectorArn": {
            "description": "The ARN of the detector to which the alert is attached.",
            "type": "string",
            "pattern": "arn:([a-z\\d-]+):.*:.*:.*:.+",
            "maxLength": 256
          },
          "Action": {
            "description": "A configuration that specifies the action to perform when anomalies are detected.",
            "type": "object",
            "properties": {
              "SNSConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SNSConfiguration"
                  },
                  {
                    "description": "A configuration for an Amazon SNS channel."
                  }
                ]
              },
              "LambdaConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LambdaConfiguration"
                  },
                  {
                    "description": "A configuration for an AWS Lambda channel."
                  }
                ]
              }
            }
          },
          "Tags": {
            "description": "A list of <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\">tags</a> to apply to the alert.",
            "type": "object",
            "minProperties": 1,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "AlertFilters": {
            "description": "The configuration of the alert filters.",
            "type": "object",
            "properties": {
              "MetricList": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MetricNameList"
                  },
                  {
                    "description": "The list of measures that you want to get alerts for."
                  }
                ]
              },
              "DimensionFilterList": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DimensionFilterList"
                  },
                  {
                    "description": "The list of DimensionFilter objects that are used for dimension-based filtering."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "SNSConfiguration": {
        "type": "object",
        "required": [
          "RoleArn",
          "SnsTopicArn"
        ],
        "properties": {
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN of the IAM role that has access to the target SNS topic."
              }
            ]
          },
          "SnsTopicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN of the target SNS topic."
              }
            ]
          },
          "SnsFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/SnsFormat"
              },
              {
                "description": "<p>The format of the SNS topic.</p> <ul> <li> <p> <code>JSON</code> – Send JSON alerts with an anomaly ID and a link to the anomaly detail page. This is the default.</p> </li> <li> <p> <code>LONG_TEXT</code> – Send human-readable alerts with information about the impacted timeseries and a link to the anomaly detail page. We recommend this for email.</p> </li> <li> <p> <code>SHORT_TEXT</code> – Send human-readable alerts with a link to the anomaly detail page. We recommend this for SMS.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Contains information about the SNS topic to which you want to send your alerts and the IAM role that has access to that topic."
      },
      "Arn": {
        "type": "string",
        "pattern": "arn:([a-z\\d-]+):.*:.*:.*:.+",
        "maxLength": 256
      },
      "SnsFormat": {
        "type": "string",
        "enum": [
          "LONG_TEXT",
          "SHORT_TEXT",
          "JSON"
        ]
      },
      "LambdaConfiguration": {
        "type": "object",
        "required": [
          "RoleArn",
          "LambdaArn"
        ],
        "properties": {
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN of an IAM role that has permission to invoke the Lambda function."
              }
            ]
          },
          "LambdaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN of the Lambda function."
              }
            ]
          }
        },
        "description": "Contains information about a Lambda configuration."
      },
      "TagValue": {
        "type": "string",
        "maxLength": 256
      },
      "MetricNameList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MetricName"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "MetricName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*",
        "maxLength": 256
      },
      "DimensionFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionFilter"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "DimensionFilter": {
        "type": "object",
        "properties": {
          "DimensionName": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnName"
              },
              {
                "description": "The name of the dimension to filter on."
              }
            ]
          },
          "DimensionValueList": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionValueList"
              },
              {
                "description": "The list of values for the dimension specified in DimensionName that you want to filter on."
              }
            ]
          }
        },
        "description": "The dimension filter, containing DimensionName and DimensionValueList."
      },
      "ColumnName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*",
        "minLength": 1,
        "maxLength": 63
      },
      "DimensionValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionValue"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "DimensionValue": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lookoutmetrics.us-east-1.amazonaws.com/CreateAlert"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AlertArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
