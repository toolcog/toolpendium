{
  "name": "CreatePublicVirtualInterface",
  "description": "<p>Creates a public virtual interface. A virtual interface is the VLAN that transports Direct Connect traffic. A public virtual interface supports sending traffic to public services of Amazon Web Services such as Amazon S3.</p> <p>When creating an IPv6 public virtual interface (<code>addressFamily</code> is <code>ipv6</code>), leave the <code>customer</code> and <code>amazon</code> address fields blank to use auto-assigned IPv6 space. Custom IPv6 addresses are not supported.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "OvertureService.CreatePublicVirtualInterface"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreatePublicVirtualInterfaceRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreatePublicVirtualInterfaceRequest": {
        "type": "object",
        "required": [
          "connectionId",
          "newPublicVirtualInterface"
        ],
        "title": "CreatePublicVirtualInterfaceRequest",
        "properties": {
          "connectionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionId"
              },
              {
                "description": "The ID of the connection."
              }
            ]
          },
          "newPublicVirtualInterface": {
            "allOf": [
              {
                "$ref": "#/$defs/NewPublicVirtualInterface"
              },
              {
                "description": "Information about the public virtual interface."
              }
            ]
          }
        }
      },
      "ConnectionId": {
        "type": "string"
      },
      "NewPublicVirtualInterface": {
        "type": "object",
        "required": [
          "virtualInterfaceName",
          "vlan",
          "asn"
        ],
        "properties": {
          "virtualInterfaceName": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualInterfaceName"
              },
              {
                "description": "The name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-)."
              }
            ]
          },
          "vlan": {
            "allOf": [
              {
                "$ref": "#/$defs/VLAN"
              },
              {
                "description": "The ID of the VLAN."
              }
            ]
          },
          "asn": {
            "allOf": [
              {
                "$ref": "#/$defs/ASN"
              },
              {
                "description": "<p>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</p> <p>The valid values are 1-2147483647.</p>"
              }
            ]
          },
          "authKey": {
            "allOf": [
              {
                "$ref": "#/$defs/BGPAuthKey"
              },
              {
                "description": "The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters."
              }
            ]
          },
          "amazonAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonAddress"
              },
              {
                "description": "The IP address assigned to the Amazon interface."
              }
            ]
          },
          "customerAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomerAddress"
              },
              {
                "description": "The IP address assigned to the customer interface."
              }
            ]
          },
          "addressFamily": {
            "allOf": [
              {
                "$ref": "#/$defs/AddressFamily"
              },
              {
                "description": "The address family for the BGP peer."
              }
            ]
          },
          "routeFilterPrefixes": {
            "allOf": [
              {
                "$ref": "#/$defs/RouteFilterPrefixList"
              },
              {
                "description": "The routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "The tags associated with the public virtual interface."
              }
            ]
          }
        },
        "description": "Information about a public virtual interface."
      },
      "VirtualInterfaceName": {
        "type": "string"
      },
      "VLAN": {
        "type": "integer"
      },
      "ASN": {
        "type": "integer"
      },
      "BGPAuthKey": {
        "type": "string"
      },
      "AmazonAddress": {
        "type": "string"
      },
      "CustomerAddress": {
        "type": "string"
      },
      "AddressFamily": {
        "type": "string",
        "enum": [
          "ipv4",
          "ipv6"
        ]
      },
      "RouteFilterPrefixList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RouteFilterPrefix"
        }
      },
      "RouteFilterPrefix": {
        "type": "object",
        "properties": {
          "cidr": {
            "allOf": [
              {
                "$ref": "#/$defs/CIDR"
              },
              {
                "description": "The CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter."
              }
            ]
          }
        },
        "description": "Information about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface."
      },
      "CIDR": {
        "type": "string"
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 1
      },
      "Tag": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value."
              }
            ]
          }
        },
        "description": "Information about a tag."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://directconnect.us-east-1.amazonaws.com/#X-Amz-Target=OvertureService.CreatePublicVirtualInterface"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Information about a virtual interface.",
        "**Key properties:**",
        {
          "$ul": [
            "**ownerAccount**",
            "**virtualInterfaceId**",
            "**location**",
            "**connectionId**",
            "**virtualInterfaceType**",
            "**virtualInterfaceName**",
            "**vlan**",
            "**asn**",
            "**amazonSideAsn**",
            "**authKey**",
            "**amazonAddress**",
            "**customerAddress**",
            "**addressFamily**",
            "**virtualInterfaceState**",
            "**customerRouterConfig**",
            "**mtu**",
            "**jumboFrameCapable**",
            "**virtualGatewayId**",
            "**directConnectGatewayId**",
            "**routeFilterPrefixes**",
            "**bgpPeers**",
            "**region**",
            "**awsDeviceV2**",
            "**awsLogicalDeviceId**",
            "**tags**",
            "**siteLinkEnabled**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
