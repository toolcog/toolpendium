{
  "name": "AcceptDirectConnectGatewayAssociationProposal",
  "description": "Accepts a proposal request to attach a virtual private gateway or transit gateway to a Direct Connect gateway.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "OvertureService.AcceptDirectConnectGatewayAssociationProposal"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/AcceptDirectConnectGatewayAssociationProposalRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "AcceptDirectConnectGatewayAssociationProposalRequest": {
        "type": "object",
        "required": [
          "directConnectGatewayId",
          "proposalId",
          "associatedGatewayOwnerAccount"
        ],
        "title": "AcceptDirectConnectGatewayAssociationProposalRequest",
        "properties": {
          "directConnectGatewayId": {
            "allOf": [
              {
                "$ref": "#/$defs/DirectConnectGatewayId"
              },
              {
                "description": "The ID of the Direct Connect gateway."
              }
            ]
          },
          "proposalId": {
            "allOf": [
              {
                "$ref": "#/$defs/DirectConnectGatewayAssociationProposalId"
              },
              {
                "description": "The ID of the request proposal."
              }
            ]
          },
          "associatedGatewayOwnerAccount": {
            "allOf": [
              {
                "$ref": "#/$defs/OwnerAccount"
              },
              {
                "description": "The ID of the Amazon Web Services account that owns the virtual private gateway or transit gateway."
              }
            ]
          },
          "overrideAllowedPrefixesToDirectConnectGateway": {
            "allOf": [
              {
                "$ref": "#/$defs/RouteFilterPrefixList"
              },
              {
                "description": "<p>Overrides the Amazon VPC prefixes advertised to the Direct Connect gateway.</p> <p>For information about how to set the prefixes, see <a href=\"https://docs.aws.amazon.com/directconnect/latest/UserGuide/multi-account-associate-vgw.html#allowed-prefixes\">Allowed Prefixes</a> in the <i>Direct Connect User Guide</i>.</p>"
              }
            ]
          }
        }
      },
      "DirectConnectGatewayId": {
        "type": "string"
      },
      "DirectConnectGatewayAssociationProposalId": {
        "type": "string"
      },
      "OwnerAccount": {
        "type": "string"
      },
      "RouteFilterPrefixList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RouteFilterPrefix"
        }
      },
      "RouteFilterPrefix": {
        "type": "object",
        "properties": {
          "cidr": {
            "allOf": [
              {
                "$ref": "#/$defs/CIDR"
              },
              {
                "description": "The CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter."
              }
            ]
          }
        },
        "description": "Information about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface."
      },
      "CIDR": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://directconnect.us-east-1.amazonaws.com/#X-Amz-Target=OvertureService.AcceptDirectConnectGatewayAssociationProposal"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**directConnectGatewayAssociation**: Information about an association between a Direct Connect gateway and a virtual private gateway or transit gateway.",
              {
                "$ul": [
                  "**directConnectGatewayId**",
                  "**directConnectGatewayOwnerAccount**",
                  "**associationState**",
                  "**stateChangeError**",
                  "**associatedGateway**",
                  "**associationId**",
                  "**allowedPrefixesToDirectConnectGateway**",
                  "**virtualGatewayId**",
                  "**virtualGatewayRegion**",
                  "**virtualGatewayOwnerAccount**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
