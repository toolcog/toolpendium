{
  "name": "UpdateChannelClass",
  "description": "Changes the class of the channel.",
  "parameters": {
    "type": "object",
    "properties": {
      "channelId": {
        "type": "string",
        "description": "Channel Id of the channel whose class should be updated."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "channelClass"
        ],
        "properties": {
          "channelClass": {
            "description": "A standard channel has two encoding pipelines and a single pipeline channel only has one.",
            "type": "string",
            "enum": [
              "STANDARD",
              "SINGLE_PIPELINE"
            ]
          },
          "destinations": {
            "description": "Placeholder documentation for __listOfOutputDestination",
            "type": "array",
            "items": {
              "$ref": "#/$defs/OutputDestination"
            }
          }
        }
      }
    },
    "required": [
      "channelId",
      "body"
    ],
    "$defs": {
      "OutputDestination": {
        "type": "object",
        "properties": {
          "Id": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "id"
                },
                "description": "User-specified id. This is used in an output group or an output."
              }
            ]
          },
          "MediaPackageSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOfMediaPackageOutputDestinationSettings"
              },
              {
                "xml": {
                  "name": "mediaPackageSettings"
                },
                "description": "Destination settings for a MediaPackage output; one destination for both encoders."
              }
            ]
          },
          "MultiplexSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/MultiplexProgramChannelDestinationSettings"
              },
              {
                "xml": {
                  "name": "multiplexSettings"
                },
                "description": "Destination settings for a Multiplex output; one destination for both encoders."
              }
            ]
          },
          "Settings": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOfOutputDestinationSettings"
              },
              {
                "xml": {
                  "name": "settings"
                },
                "description": "Destination settings for a standard output; one destination for each redundant encoder."
              }
            ]
          }
        },
        "description": "Placeholder documentation for OutputDestination"
      },
      "__string": {
        "type": "string",
        "description": "Placeholder documentation for __string"
      },
      "__listOfMediaPackageOutputDestinationSettings": {
        "type": "array",
        "description": "Placeholder documentation for __listOfMediaPackageOutputDestinationSettings",
        "items": {
          "$ref": "#/$defs/MediaPackageOutputDestinationSettings"
        }
      },
      "MediaPackageOutputDestinationSettings": {
        "type": "object",
        "properties": {
          "ChannelId": {
            "allOf": [
              {
                "$ref": "#/$defs/__stringMin1"
              },
              {
                "xml": {
                  "name": "channelId"
                },
                "description": "ID of the channel in MediaPackage that is the destination for this output group. You do not need to specify the individual inputs in MediaPackage; MediaLive will handle the connection of the two MediaLive pipelines to the two MediaPackage inputs. The MediaPackage channel and MediaLive channel must be in the same region."
              }
            ]
          }
        },
        "description": "MediaPackage Output Destination Settings"
      },
      "__stringMin1": {
        "type": "string",
        "description": "Placeholder documentation for __stringMin1",
        "minLength": 1
      },
      "MultiplexProgramChannelDestinationSettings": {
        "type": "object",
        "properties": {
          "MultiplexId": {
            "allOf": [
              {
                "$ref": "#/$defs/__stringMin1"
              },
              {
                "xml": {
                  "name": "multiplexId"
                },
                "description": "The ID of the Multiplex that the encoder is providing output to. You do not need to specify the individual inputs to the Multiplex; MediaLive will handle the connection of the two MediaLive pipelines to the two Multiplex instances.\nThe Multiplex must be in the same region as the Channel."
              }
            ]
          },
          "ProgramName": {
            "allOf": [
              {
                "$ref": "#/$defs/__stringMin1"
              },
              {
                "xml": {
                  "name": "programName"
                },
                "description": "The program name of the Multiplex program that the encoder is providing output to."
              }
            ]
          }
        },
        "description": "Multiplex Program Input Destination Settings for outputting a Channel to a Multiplex"
      },
      "__listOfOutputDestinationSettings": {
        "type": "array",
        "description": "Placeholder documentation for __listOfOutputDestinationSettings",
        "items": {
          "$ref": "#/$defs/OutputDestinationSettings"
        }
      },
      "OutputDestinationSettings": {
        "type": "object",
        "properties": {
          "PasswordParam": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "passwordParam"
                },
                "description": "key used to extract the password from EC2 Parameter store"
              }
            ]
          },
          "StreamName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "streamName"
                },
                "description": "Stream name for RTMP destinations (URLs of type rtmp://)"
              }
            ]
          },
          "Url": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "url"
                },
                "description": "A URL specifying a destination"
              }
            ]
          },
          "Username": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "username"
                },
                "description": "username for destination"
              }
            ]
          }
        },
        "description": "Placeholder documentation for OutputDestinationSettings"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://medialive.us-east-1.amazonaws.com/prod/channels/{channelId}/channelClass"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Placeholder documentation for UpdateChannelClassResponse",
        "**Key properties:**",
        {
          "$ul": [
            "**Channel**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
