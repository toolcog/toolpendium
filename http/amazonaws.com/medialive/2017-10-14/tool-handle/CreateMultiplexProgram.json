{
  "name": "CreateMultiplexProgram",
  "description": "Create a new program in the multiplex.",
  "parameters": {
    "type": "object",
    "properties": {
      "multiplexId": {
        "type": "string",
        "description": "ID of the multiplex where the program is to be created."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "multiplexProgramSettings",
          "programName",
          "requestId"
        ],
        "properties": {
          "multiplexProgramSettings": {
            "description": "Multiplex Program settings configuration.",
            "type": "object",
            "properties": {
              "PreferredChannelPipeline": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PreferredChannelPipeline"
                  },
                  {
                    "xml": {
                      "name": "preferredChannelPipeline"
                    },
                    "description": "Indicates which pipeline is preferred by the multiplex for program ingest."
                  }
                ]
              },
              "ProgramNumber": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integerMin0Max65535"
                  },
                  {
                    "xml": {
                      "name": "programNumber"
                    },
                    "description": "Unique program number."
                  }
                ]
              },
              "ServiceDescriptor": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MultiplexProgramServiceDescriptor"
                  },
                  {
                    "xml": {
                      "name": "serviceDescriptor"
                    },
                    "description": "Transport stream service descriptor configuration for the Multiplex program."
                  }
                ]
              },
              "VideoSettings": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MultiplexVideoSettings"
                  },
                  {
                    "xml": {
                      "name": "videoSettings"
                    },
                    "description": "Program video settings configuration."
                  }
                ]
              }
            }
          },
          "programName": {
            "description": "Placeholder documentation for __string",
            "type": "string"
          },
          "requestId": {
            "description": "Placeholder documentation for __string",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "multiplexId",
      "body"
    ],
    "$defs": {
      "PreferredChannelPipeline": {
        "type": "string",
        "enum": [
          "CURRENTLY_ACTIVE",
          "PIPELINE_0",
          "PIPELINE_1"
        ],
        "description": "Indicates which pipeline is preferred by the multiplex for program ingest.\nIf set to \\\"PIPELINE_0\\\" or \\\"PIPELINE_1\\\" and an unhealthy ingest causes the multiplex to switch to the non-preferred pipeline,\nit will switch back once that ingest is healthy again. If set to \\\"CURRENTLY_ACTIVE\\\",\nit will not switch back to the other pipeline based on it recovering to a healthy state,\nit will only switch if the active pipeline becomes unhealthy.\n"
      },
      "__integerMin0Max65535": {
        "type": "integer",
        "description": "Placeholder documentation for __integerMin0Max65535",
        "minimum": 0,
        "maximum": 65535
      },
      "MultiplexProgramServiceDescriptor": {
        "type": "object",
        "required": [
          "ProviderName",
          "ServiceName"
        ],
        "properties": {
          "ProviderName": {
            "allOf": [
              {
                "$ref": "#/$defs/__stringMax256"
              },
              {
                "xml": {
                  "name": "providerName"
                },
                "description": "Name of the provider."
              }
            ]
          },
          "ServiceName": {
            "allOf": [
              {
                "$ref": "#/$defs/__stringMax256"
              },
              {
                "xml": {
                  "name": "serviceName"
                },
                "description": "Name of the service."
              }
            ]
          }
        },
        "description": "Transport stream service descriptor configuration for the Multiplex program."
      },
      "__stringMax256": {
        "type": "string",
        "description": "Placeholder documentation for __stringMax256",
        "maxLength": 256
      },
      "MultiplexVideoSettings": {
        "type": "object",
        "properties": {
          "ConstantBitrate": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin100000Max100000000"
              },
              {
                "xml": {
                  "name": "constantBitrate"
                },
                "description": "The constant bitrate configuration for the video encode.\nWhen this field is defined, StatmuxSettings must be undefined."
              }
            ]
          },
          "StatmuxSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/MultiplexStatmuxVideoSettings"
              },
              {
                "xml": {
                  "name": "statmuxSettings"
                },
                "description": "Statmux rate control settings.\nWhen this field is defined, ConstantBitrate must be undefined."
              }
            ]
          }
        },
        "description": "The video configuration for each program in a multiplex."
      },
      "__integerMin100000Max100000000": {
        "type": "integer",
        "description": "Placeholder documentation for __integerMin100000Max100000000",
        "minimum": 100000,
        "maximum": 100000000
      },
      "MultiplexStatmuxVideoSettings": {
        "type": "object",
        "properties": {
          "MaximumBitrate": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin100000Max100000000"
              },
              {
                "xml": {
                  "name": "maximumBitrate"
                },
                "description": "Maximum statmux bitrate."
              }
            ]
          },
          "MinimumBitrate": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin100000Max100000000"
              },
              {
                "xml": {
                  "name": "minimumBitrate"
                },
                "description": "Minimum statmux bitrate."
              }
            ]
          },
          "Priority": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMinNegative5Max5"
              },
              {
                "xml": {
                  "name": "priority"
                },
                "description": "The purpose of the priority is to use a combination of the\\nmultiplex rate control algorithm and the QVBR capability of the\\nencoder to prioritize the video quality of some channels in a\\nmultiplex over others.  Channels that have a higher priority will\\nget higher video quality at the expense of the video quality of\\nother channels in the multiplex with lower priority."
              }
            ]
          }
        },
        "description": "Statmux rate control settings"
      },
      "__integerMinNegative5Max5": {
        "type": "integer",
        "description": "Placeholder documentation for __integerMinNegative5Max5",
        "minimum": -5,
        "maximum": 5
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://medialive.us-east-1.amazonaws.com/prod/multiplexes/{multiplexId}/programs"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Placeholder documentation for CreateMultiplexProgramResponse",
        "**Key properties:**",
        {
          "$ul": [
            "**MultiplexProgram**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
