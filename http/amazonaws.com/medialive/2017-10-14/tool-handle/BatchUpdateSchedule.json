{
  "name": "BatchUpdateSchedule",
  "description": "Update a channel schedule",
  "parameters": {
    "type": "object",
    "properties": {
      "channelId": {
        "type": "string",
        "description": "Id of the channel whose schedule is being updated."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "creates": {
            "description": "A list of schedule actions to create (in a request) or that have been created (in a response).",
            "type": "object",
            "properties": {
              "ScheduleActions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__listOfScheduleAction"
                  },
                  {
                    "xml": {
                      "name": "scheduleActions"
                    },
                    "description": "A list of schedule actions to create."
                  }
                ]
              }
            }
          },
          "deletes": {
            "description": "A list of schedule actions to delete.",
            "type": "object",
            "properties": {
              "ActionNames": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__listOf__string"
                  },
                  {
                    "xml": {
                      "name": "actionNames"
                    },
                    "description": "A list of schedule actions to delete."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "channelId",
      "body"
    ],
    "$defs": {
      "__listOfScheduleAction": {
        "type": "array",
        "description": "Placeholder documentation for __listOfScheduleAction",
        "items": {
          "$ref": "#/$defs/ScheduleAction"
        }
      },
      "ScheduleAction": {
        "type": "object",
        "required": [
          "ActionName",
          "ScheduleActionStartSettings",
          "ScheduleActionSettings"
        ],
        "properties": {
          "ActionName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "actionName"
                },
                "description": "The name of the action, must be unique within the schedule. This name provides the main reference to an action once it is added to the schedule. A name is unique if it is no longer in the schedule. The schedule is automatically cleaned up to remove actions with a start time of more than 1 hour ago (approximately) so at that point a name can be reused."
              }
            ]
          },
          "ScheduleActionSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "scheduleActionSettings"
                },
                "description": "Settings for this schedule action."
              }
            ]
          },
          "ScheduleActionStartSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduleActionStartSettings"
              },
              {
                "xml": {
                  "name": "scheduleActionStartSettings"
                },
                "description": "The time for the action to start in the channel."
              }
            ]
          }
        },
        "description": "Contains information on a single schedule action."
      },
      "__string": {
        "type": "string",
        "description": "Placeholder documentation for __string"
      },
      "ScheduleActionSettings": {
        "type": "object",
        "properties": {
          "HlsId3SegmentTaggingSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/HlsId3SegmentTaggingScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "hlsId3SegmentTaggingSettings"
                },
                "description": "Action to insert HLS ID3 segment tagging"
              }
            ]
          },
          "HlsTimedMetadataSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/HlsTimedMetadataScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "hlsTimedMetadataSettings"
                },
                "description": "Action to insert HLS metadata"
              }
            ]
          },
          "InputPrepareSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/InputPrepareScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "inputPrepareSettings"
                },
                "description": "Action to prepare an input for a future immediate input switch"
              }
            ]
          },
          "InputSwitchSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/InputSwitchScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "inputSwitchSettings"
                },
                "description": "Action to switch the input"
              }
            ]
          },
          "MotionGraphicsImageActivateSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/MotionGraphicsActivateScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "motionGraphicsImageActivateSettings"
                },
                "description": "Action to activate a motion graphics image overlay"
              }
            ]
          },
          "MotionGraphicsImageDeactivateSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/MotionGraphicsDeactivateScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "motionGraphicsImageDeactivateSettings"
                },
                "description": "Action to deactivate a motion graphics image overlay"
              }
            ]
          },
          "PauseStateSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/PauseStateScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "pauseStateSettings"
                },
                "description": "Action to pause or unpause one or both channel pipelines"
              }
            ]
          },
          "Scte35InputSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35InputScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "scte35InputSettings"
                },
                "description": "Action to specify scte35 input"
              }
            ]
          },
          "Scte35ReturnToNetworkSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35ReturnToNetworkScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "scte35ReturnToNetworkSettings"
                },
                "description": "Action to insert SCTE-35 return_to_network message"
              }
            ]
          },
          "Scte35SpliceInsertSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35SpliceInsertScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "scte35SpliceInsertSettings"
                },
                "description": "Action to insert SCTE-35 splice_insert message"
              }
            ]
          },
          "Scte35TimeSignalSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35TimeSignalScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "scte35TimeSignalSettings"
                },
                "description": "Action to insert SCTE-35 time_signal message"
              }
            ]
          },
          "StaticImageActivateSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/StaticImageActivateScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "staticImageActivateSettings"
                },
                "description": "Action to activate a static image overlay"
              }
            ]
          },
          "StaticImageDeactivateSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/StaticImageDeactivateScheduleActionSettings"
              },
              {
                "xml": {
                  "name": "staticImageDeactivateSettings"
                },
                "description": "Action to deactivate a static image overlay"
              }
            ]
          }
        },
        "description": "Holds the settings for a single schedule action."
      },
      "HlsId3SegmentTaggingScheduleActionSettings": {
        "type": "object",
        "properties": {
          "Tag": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "tag"
                },
                "description": "ID3 tag to insert into each segment. Supports special keyword identifiers to substitute in segment-related values.\\nSupported keyword identifiers: https://docs.aws.amazon.com/medialive/latest/ug/variable-data-identifiers.html"
              }
            ]
          },
          "Id3": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "id3"
                },
                "description": "Base64 string formatted according to the ID3 specification: http://id3.org/id3v2.4.0-structure"
              }
            ]
          }
        },
        "description": "Settings for the action to insert a user-defined ID3 tag in each HLS segment"
      },
      "HlsTimedMetadataScheduleActionSettings": {
        "type": "object",
        "required": [
          "Id3"
        ],
        "properties": {
          "Id3": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "id3"
                },
                "description": "Base64 string formatted according to the ID3 specification: http://id3.org/id3v2.4.0-structure"
              }
            ]
          }
        },
        "description": "Settings for the action to emit HLS metadata"
      },
      "InputPrepareScheduleActionSettings": {
        "type": "object",
        "properties": {
          "InputAttachmentNameReference": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "inputAttachmentNameReference"
                },
                "description": "The name of the input attachment that should be prepared by this action. If no name is provided, the action will stop the most recent prepare (if any) when activated."
              }
            ]
          },
          "InputClippingSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/InputClippingSettings"
              },
              {
                "xml": {
                  "name": "inputClippingSettings"
                },
                "description": "Settings to let you create a clip of the file input, in order to set up the input to ingest only a portion of the file."
              }
            ]
          },
          "UrlPath": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "xml": {
                  "name": "urlPath"
                },
                "description": "The value for the variable portion of the URL for the dynamic input, for this instance of the input. Each time you use the same dynamic input in an input switch action, you can provide a different value, in order to connect the input to a different content source."
              }
            ]
          }
        },
        "description": "Action to prepare an input for a future immediate input switch."
      },
      "InputClippingSettings": {
        "type": "object",
        "required": [
          "InputTimecodeSource"
        ],
        "properties": {
          "InputTimecodeSource": {
            "allOf": [
              {
                "$ref": "#/$defs/InputTimecodeSource"
              },
              {
                "xml": {
                  "name": "inputTimecodeSource"
                },
                "description": "The source of the timecodes in the source being clipped."
              }
            ]
          },
          "StartTimecode": {
            "allOf": [
              {
                "$ref": "#/$defs/StartTimecode"
              },
              {
                "xml": {
                  "name": "startTimecode"
                },
                "description": "Settings to identify the start of the clip."
              }
            ]
          },
          "StopTimecode": {
            "allOf": [
              {
                "$ref": "#/$defs/StopTimecode"
              },
              {
                "xml": {
                  "name": "stopTimecode"
                },
                "description": "Settings to identify the end of the clip."
              }
            ]
          }
        },
        "description": "Settings to let you create a clip of the file input, in order to set up the input to ingest only a portion of the file."
      },
      "InputTimecodeSource": {
        "type": "string",
        "enum": [
          "ZEROBASED",
          "EMBEDDED"
        ],
        "description": "Documentation update needed"
      },
      "StartTimecode": {
        "type": "object",
        "properties": {
          "Timecode": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "timecode"
                },
                "description": "The timecode for the frame where you want to start the clip. Optional; if not specified, the clip starts at first frame in the file. Enter the timecode as HH:MM:SS:FF or HH:MM:SS;FF."
              }
            ]
          }
        },
        "description": "Settings to identify the start of the clip."
      },
      "StopTimecode": {
        "type": "object",
        "properties": {
          "LastFrameClippingBehavior": {
            "allOf": [
              {
                "$ref": "#/$defs/LastFrameClippingBehavior"
              },
              {
                "xml": {
                  "name": "lastFrameClippingBehavior"
                },
                "description": "If you specify a StopTimecode in an input (in order to clip the file), you can specify if you want the clip to exclude (the default) or include the frame specified by the timecode."
              }
            ]
          },
          "Timecode": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "timecode"
                },
                "description": "The timecode for the frame where you want to stop the clip. Optional; if not specified, the clip continues to the end of the file. Enter the timecode as HH:MM:SS:FF or HH:MM:SS;FF."
              }
            ]
          }
        },
        "description": "Settings to identify the end of the clip."
      },
      "LastFrameClippingBehavior": {
        "type": "string",
        "enum": [
          "EXCLUDE_LAST_FRAME",
          "INCLUDE_LAST_FRAME"
        ],
        "description": "If you specify a StopTimecode in an input (in order to clip the file), you can specify if you want the clip to exclude (the default) or include the frame specified by the timecode."
      },
      "__listOf__string": {
        "type": "array",
        "description": "Placeholder documentation for __listOf__string",
        "items": {
          "$ref": "#/$defs/__string"
        }
      },
      "InputSwitchScheduleActionSettings": {
        "type": "object",
        "required": [
          "InputAttachmentNameReference"
        ],
        "properties": {
          "InputAttachmentNameReference": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "inputAttachmentNameReference"
                },
                "description": "The name of the input attachment (not the name of the input!) to switch to. The name is specified in the channel configuration."
              }
            ]
          },
          "InputClippingSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/InputClippingSettings"
              },
              {
                "xml": {
                  "name": "inputClippingSettings"
                },
                "description": "Settings to let you create a clip of the file input, in order to set up the input to ingest only a portion of the file."
              }
            ]
          },
          "UrlPath": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "xml": {
                  "name": "urlPath"
                },
                "description": "The value for the variable portion of the URL for the dynamic input, for this instance of the input. Each time you use the same dynamic input in an input switch action, you can provide a different value, in order to connect the input to a different content source."
              }
            ]
          }
        },
        "description": "Settings for the \"switch input\" action: to switch from ingesting one input to ingesting another input."
      },
      "MotionGraphicsActivateScheduleActionSettings": {
        "type": "object",
        "properties": {
          "Duration": {
            "allOf": [
              {
                "$ref": "#/$defs/__longMin0Max86400000"
              },
              {
                "xml": {
                  "name": "duration"
                },
                "description": "Duration (in milliseconds) that motion graphics should render on to the video stream. Leaving out this property or setting to 0 will result in rendering continuing until a deactivate action is processed."
              }
            ]
          },
          "PasswordParam": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "passwordParam"
                },
                "description": "Key used to extract the password from EC2 Parameter store"
              }
            ]
          },
          "Url": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "url"
                },
                "description": "URI of the HTML5 content to be rendered into the live stream."
              }
            ]
          },
          "Username": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "username"
                },
                "description": "Documentation update needed"
              }
            ]
          }
        },
        "description": "Settings to specify the rendering of motion graphics into the video stream."
      },
      "__longMin0Max86400000": {
        "type": "integer",
        "description": "Placeholder documentation for __longMin0Max86400000",
        "minimum": 0,
        "maximum": 86400000
      },
      "MotionGraphicsDeactivateScheduleActionSettings": {
        "type": "object",
        "properties": {},
        "description": "Settings to specify the ending of rendering motion graphics into the video stream."
      },
      "PauseStateScheduleActionSettings": {
        "type": "object",
        "properties": {
          "Pipelines": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOfPipelinePauseStateSettings"
              },
              {
                "xml": {
                  "name": "pipelines"
                }
              }
            ]
          }
        },
        "description": "Settings for the action to set pause state of a channel."
      },
      "__listOfPipelinePauseStateSettings": {
        "type": "array",
        "description": "Placeholder documentation for __listOfPipelinePauseStateSettings",
        "items": {
          "$ref": "#/$defs/PipelinePauseStateSettings"
        }
      },
      "PipelinePauseStateSettings": {
        "type": "object",
        "required": [
          "PipelineId"
        ],
        "properties": {
          "PipelineId": {
            "allOf": [
              {
                "$ref": "#/$defs/PipelineId"
              },
              {
                "xml": {
                  "name": "pipelineId"
                },
                "description": "Pipeline ID to pause (\"PIPELINE_0\" or \"PIPELINE_1\")."
              }
            ]
          }
        },
        "description": "Settings for pausing a pipeline."
      },
      "PipelineId": {
        "type": "string",
        "enum": [
          "PIPELINE_0",
          "PIPELINE_1"
        ],
        "description": "Pipeline ID"
      },
      "Scte35InputScheduleActionSettings": {
        "type": "object",
        "required": [
          "Mode"
        ],
        "properties": {
          "InputAttachmentNameReference": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "inputAttachmentNameReference"
                },
                "description": "In fixed mode, enter the name of the input attachment that you want to use as a SCTE-35 input. (Don't enter the ID of the input.)\""
              }
            ]
          },
          "Mode": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35InputMode"
              },
              {
                "xml": {
                  "name": "mode"
                },
                "description": "Whether the SCTE-35 input should be the active input or a fixed input."
              }
            ]
          }
        },
        "description": "Scte35Input Schedule Action Settings"
      },
      "Scte35InputMode": {
        "type": "string",
        "enum": [
          "FIXED",
          "FOLLOW_ACTIVE"
        ],
        "description": "Whether the SCTE-35 input should be the active input or a fixed input."
      },
      "Scte35ReturnToNetworkScheduleActionSettings": {
        "type": "object",
        "required": [
          "SpliceEventId"
        ],
        "properties": {
          "SpliceEventId": {
            "allOf": [
              {
                "$ref": "#/$defs/__longMin0Max4294967295"
              },
              {
                "xml": {
                  "name": "spliceEventId"
                },
                "description": "The splice_event_id for the SCTE-35 splice_insert, as defined in SCTE-35."
              }
            ]
          }
        },
        "description": "Settings for a SCTE-35 return_to_network message."
      },
      "__longMin0Max4294967295": {
        "type": "integer",
        "description": "Placeholder documentation for __longMin0Max4294967295",
        "minimum": 0,
        "maximum": 4294967295
      },
      "Scte35SpliceInsertScheduleActionSettings": {
        "type": "object",
        "required": [
          "SpliceEventId"
        ],
        "properties": {
          "Duration": {
            "allOf": [
              {
                "$ref": "#/$defs/__longMin0Max8589934591"
              },
              {
                "xml": {
                  "name": "duration"
                },
                "description": "Optional, the duration for the splice_insert, in 90 KHz ticks. To convert seconds to ticks, multiple the seconds by 90,000. If you enter a duration, there is an expectation that the downstream system can read the duration and cue in at that time. If you do not enter a duration, the splice_insert will continue indefinitely and there is an expectation that you will enter a return_to_network to end the splice_insert at the appropriate time."
              }
            ]
          },
          "SpliceEventId": {
            "allOf": [
              {
                "$ref": "#/$defs/__longMin0Max4294967295"
              },
              {
                "xml": {
                  "name": "spliceEventId"
                },
                "description": "The splice_event_id for the SCTE-35 splice_insert, as defined in SCTE-35."
              }
            ]
          }
        },
        "description": "Settings for a SCTE-35 splice_insert message."
      },
      "__longMin0Max8589934591": {
        "type": "integer",
        "description": "Placeholder documentation for __longMin0Max8589934591",
        "minimum": 0,
        "maximum": 8589934591
      },
      "Scte35TimeSignalScheduleActionSettings": {
        "type": "object",
        "required": [
          "Scte35Descriptors"
        ],
        "properties": {
          "Scte35Descriptors": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOfScte35Descriptor"
              },
              {
                "xml": {
                  "name": "scte35Descriptors"
                },
                "description": "The list of SCTE-35 descriptors accompanying the SCTE-35 time_signal."
              }
            ]
          }
        },
        "description": "Settings for a SCTE-35 time_signal."
      },
      "__listOfScte35Descriptor": {
        "type": "array",
        "description": "Placeholder documentation for __listOfScte35Descriptor",
        "items": {
          "$ref": "#/$defs/Scte35Descriptor"
        }
      },
      "Scte35Descriptor": {
        "type": "object",
        "required": [
          "Scte35DescriptorSettings"
        ],
        "properties": {
          "Scte35DescriptorSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35DescriptorSettings"
              },
              {
                "xml": {
                  "name": "scte35DescriptorSettings"
                },
                "description": "SCTE-35 Descriptor Settings."
              }
            ]
          }
        },
        "description": "Holds one set of SCTE-35 Descriptor Settings."
      },
      "Scte35DescriptorSettings": {
        "type": "object",
        "required": [
          "SegmentationDescriptorScte35DescriptorSettings"
        ],
        "properties": {
          "SegmentationDescriptorScte35DescriptorSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35SegmentationDescriptor"
              },
              {
                "xml": {
                  "name": "segmentationDescriptorScte35DescriptorSettings"
                },
                "description": "SCTE-35 Segmentation Descriptor."
              }
            ]
          }
        },
        "description": "SCTE-35 Descriptor settings."
      },
      "Scte35SegmentationDescriptor": {
        "type": "object",
        "required": [
          "SegmentationEventId",
          "SegmentationCancelIndicator"
        ],
        "properties": {
          "DeliveryRestrictions": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35DeliveryRestrictions"
              },
              {
                "xml": {
                  "name": "deliveryRestrictions"
                },
                "description": "Holds the four SCTE-35 delivery restriction parameters."
              }
            ]
          },
          "SegmentNum": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0Max255"
              },
              {
                "xml": {
                  "name": "segmentNum"
                },
                "description": "Corresponds to SCTE-35 segment_num. A value that is valid for the specified segmentation_type_id."
              }
            ]
          },
          "SegmentationCancelIndicator": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35SegmentationCancelIndicator"
              },
              {
                "xml": {
                  "name": "segmentationCancelIndicator"
                },
                "description": "Corresponds to SCTE-35 segmentation_event_cancel_indicator."
              }
            ]
          },
          "SegmentationDuration": {
            "allOf": [
              {
                "$ref": "#/$defs/__longMin0Max1099511627775"
              },
              {
                "xml": {
                  "name": "segmentationDuration"
                },
                "description": "Corresponds to SCTE-35 segmentation_duration. Optional. The duration for the time_signal, in 90 KHz ticks. To convert seconds to ticks, multiple the seconds by 90,000. Enter time in 90 KHz clock ticks. If you do not enter a duration, the time_signal will continue until you insert a cancellation message."
              }
            ]
          },
          "SegmentationEventId": {
            "allOf": [
              {
                "$ref": "#/$defs/__longMin0Max4294967295"
              },
              {
                "xml": {
                  "name": "segmentationEventId"
                },
                "description": "Corresponds to SCTE-35 segmentation_event_id. "
              }
            ]
          },
          "SegmentationTypeId": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0Max255"
              },
              {
                "xml": {
                  "name": "segmentationTypeId"
                },
                "description": "Corresponds to SCTE-35 segmentation_type_id. One of the segmentation_type_id values listed in the SCTE-35 specification. On the console, enter the ID in decimal (for example, \"52\"). In the CLI, API, or an SDK, enter the ID in hex (for example, \"0x34\") or decimal (for example, \"52\")."
              }
            ]
          },
          "SegmentationUpid": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "segmentationUpid"
                },
                "description": "Corresponds to SCTE-35 segmentation_upid. Enter a string containing the hexadecimal representation of the characters that make up the SCTE-35 segmentation_upid value. Must contain an even number of hex characters. Do not include spaces between each hex pair. For example, the ASCII \"ADS Information\" becomes hex \"41445320496e666f726d6174696f6e."
              }
            ]
          },
          "SegmentationUpidType": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0Max255"
              },
              {
                "xml": {
                  "name": "segmentationUpidType"
                },
                "description": "Corresponds to SCTE-35 segmentation_upid_type. On the console, enter one of the types listed in the SCTE-35 specification, converted to a decimal. For example, \"0x0C\" hex from the specification is \"12\" in decimal. In the CLI, API, or an SDK, enter one of the types listed in the SCTE-35 specification, in either hex (for example, \"0x0C\" ) or in decimal (for example, \"12\")."
              }
            ]
          },
          "SegmentsExpected": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0Max255"
              },
              {
                "xml": {
                  "name": "segmentsExpected"
                },
                "description": "Corresponds to SCTE-35 segments_expected. A value that is valid for the specified segmentation_type_id."
              }
            ]
          },
          "SubSegmentNum": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0Max255"
              },
              {
                "xml": {
                  "name": "subSegmentNum"
                },
                "description": "Corresponds to SCTE-35 sub_segment_num. A value that is valid for the specified segmentation_type_id."
              }
            ]
          },
          "SubSegmentsExpected": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0Max255"
              },
              {
                "xml": {
                  "name": "subSegmentsExpected"
                },
                "description": "Corresponds to SCTE-35 sub_segments_expected. A value that is valid for the specified segmentation_type_id."
              }
            ]
          }
        },
        "description": "Corresponds to SCTE-35 segmentation_descriptor."
      },
      "Scte35DeliveryRestrictions": {
        "type": "object",
        "required": [
          "DeviceRestrictions",
          "ArchiveAllowedFlag",
          "WebDeliveryAllowedFlag",
          "NoRegionalBlackoutFlag"
        ],
        "properties": {
          "ArchiveAllowedFlag": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35ArchiveAllowedFlag"
              },
              {
                "xml": {
                  "name": "archiveAllowedFlag"
                },
                "description": "Corresponds to SCTE-35 archive_allowed_flag."
              }
            ]
          },
          "DeviceRestrictions": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35DeviceRestrictions"
              },
              {
                "xml": {
                  "name": "deviceRestrictions"
                },
                "description": "Corresponds to SCTE-35 device_restrictions parameter."
              }
            ]
          },
          "NoRegionalBlackoutFlag": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35NoRegionalBlackoutFlag"
              },
              {
                "xml": {
                  "name": "noRegionalBlackoutFlag"
                },
                "description": "Corresponds to SCTE-35 no_regional_blackout_flag parameter."
              }
            ]
          },
          "WebDeliveryAllowedFlag": {
            "allOf": [
              {
                "$ref": "#/$defs/Scte35WebDeliveryAllowedFlag"
              },
              {
                "xml": {
                  "name": "webDeliveryAllowedFlag"
                },
                "description": "Corresponds to SCTE-35 web_delivery_allowed_flag parameter."
              }
            ]
          }
        },
        "description": "Corresponds to SCTE-35 delivery_not_restricted_flag parameter. To declare delivery restrictions, include this element and its four \"restriction\" flags. To declare that there are no restrictions, omit this element."
      },
      "Scte35ArchiveAllowedFlag": {
        "type": "string",
        "enum": [
          "ARCHIVE_NOT_ALLOWED",
          "ARCHIVE_ALLOWED"
        ],
        "description": "Corresponds to the archive_allowed parameter. A value of ARCHIVE_NOT_ALLOWED corresponds to 0 (false) in the SCTE-35 specification. If you include one of the \"restriction\" flags then you must include all four of them."
      },
      "Scte35DeviceRestrictions": {
        "type": "string",
        "enum": [
          "NONE",
          "RESTRICT_GROUP0",
          "RESTRICT_GROUP1",
          "RESTRICT_GROUP2"
        ],
        "description": "Corresponds to the device_restrictions parameter in a segmentation_descriptor. If you include one of the \"restriction\" flags then you must include all four of them."
      },
      "Scte35NoRegionalBlackoutFlag": {
        "type": "string",
        "enum": [
          "REGIONAL_BLACKOUT",
          "NO_REGIONAL_BLACKOUT"
        ],
        "description": "Corresponds to the no_regional_blackout_flag parameter. A value of REGIONAL_BLACKOUT corresponds to 0 (false) in the SCTE-35 specification. If you include one of the \"restriction\" flags then you must include all four of them."
      },
      "Scte35WebDeliveryAllowedFlag": {
        "type": "string",
        "enum": [
          "WEB_DELIVERY_NOT_ALLOWED",
          "WEB_DELIVERY_ALLOWED"
        ],
        "description": "Corresponds to the web_delivery_allowed_flag parameter. A value of WEB_DELIVERY_NOT_ALLOWED corresponds to 0 (false) in the SCTE-35 specification. If you include one of the \"restriction\" flags then you must include all four of them."
      },
      "__integerMin0Max255": {
        "type": "integer",
        "description": "Placeholder documentation for __integerMin0Max255",
        "minimum": 0,
        "maximum": 255
      },
      "Scte35SegmentationCancelIndicator": {
        "type": "string",
        "enum": [
          "SEGMENTATION_EVENT_NOT_CANCELED",
          "SEGMENTATION_EVENT_CANCELED"
        ],
        "description": "Corresponds to SCTE-35 segmentation_event_cancel_indicator. SEGMENTATION_EVENT_NOT_CANCELED corresponds to 0 in the SCTE-35 specification and indicates that this is an insertion request. SEGMENTATION_EVENT_CANCELED corresponds to 1 in the SCTE-35 specification and indicates that this is a cancelation request, in which case complete this field and the existing event ID to cancel."
      },
      "__longMin0Max1099511627775": {
        "type": "integer",
        "description": "Placeholder documentation for __longMin0Max1099511627775",
        "minimum": 0,
        "maximum": 1099511627775
      },
      "StaticImageActivateScheduleActionSettings": {
        "type": "object",
        "required": [
          "Image"
        ],
        "properties": {
          "Duration": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0"
              },
              {
                "xml": {
                  "name": "duration"
                },
                "description": "The duration in milliseconds for the image to remain on the video. If omitted or set to 0 the duration is unlimited and the image will remain until it is explicitly deactivated."
              }
            ]
          },
          "FadeIn": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0"
              },
              {
                "xml": {
                  "name": "fadeIn"
                },
                "description": "The time in milliseconds for the image to fade in. The fade-in starts at the start time of the overlay. Default is 0 (no fade-in)."
              }
            ]
          },
          "FadeOut": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0"
              },
              {
                "xml": {
                  "name": "fadeOut"
                },
                "description": "Applies only if a duration is specified. The time in milliseconds for the image to fade out. The fade-out starts when the duration time is hit, so it effectively extends the duration. Default is 0 (no fade-out)."
              }
            ]
          },
          "Height": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin1"
              },
              {
                "xml": {
                  "name": "height"
                },
                "description": "The height of the image when inserted into the video, in pixels. The overlay will be scaled up or down to the specified height. Leave blank to use the native height of the overlay."
              }
            ]
          },
          "Image": {
            "allOf": [
              {
                "$ref": "#/$defs/InputLocation"
              },
              {
                "xml": {
                  "name": "image"
                },
                "description": "The location and filename of the image file to overlay on the video. The file must be a 32-bit BMP, PNG, or TGA file, and must not be larger (in pixels) than the input video."
              }
            ]
          },
          "ImageX": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0"
              },
              {
                "xml": {
                  "name": "imageX"
                },
                "description": "Placement of the left edge of the overlay relative to the left edge of the video frame, in pixels. 0 (the default) is the left edge of the frame. If the placement causes the overlay to extend beyond the right edge of the underlying video, then the overlay is cropped on the right."
              }
            ]
          },
          "ImageY": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0"
              },
              {
                "xml": {
                  "name": "imageY"
                },
                "description": "Placement of the top edge of the overlay relative to the top edge of the video frame, in pixels. 0 (the default) is the top edge of the frame. If the placement causes the overlay to extend beyond the bottom edge of the underlying video, then the overlay is cropped on the bottom."
              }
            ]
          },
          "Layer": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0Max7"
              },
              {
                "xml": {
                  "name": "layer"
                },
                "description": "The number of the layer, 0 to 7. There are 8 layers that can be overlaid on the video, each layer with a different image. The layers are in Z order, which means that overlays with higher values of layer are inserted on top of overlays with lower values of layer. Default is 0."
              }
            ]
          },
          "Opacity": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0Max100"
              },
              {
                "xml": {
                  "name": "opacity"
                },
                "description": "Opacity of image where 0 is transparent and 100 is fully opaque. Default is 100."
              }
            ]
          },
          "Width": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin1"
              },
              {
                "xml": {
                  "name": "width"
                },
                "description": "The width of the image when inserted into the video, in pixels. The overlay will be scaled up or down to the specified width. Leave blank to use the native width of the overlay."
              }
            ]
          }
        },
        "description": "Settings for the action to activate a static image."
      },
      "__integerMin0": {
        "type": "integer",
        "description": "Placeholder documentation for __integerMin0",
        "minimum": 0
      },
      "__integerMin1": {
        "type": "integer",
        "description": "Placeholder documentation for __integerMin1",
        "minimum": 1
      },
      "InputLocation": {
        "type": "object",
        "required": [
          "Uri"
        ],
        "properties": {
          "PasswordParam": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "passwordParam"
                },
                "description": "key used to extract the password from EC2 Parameter store"
              }
            ]
          },
          "Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/__stringMax2048"
              },
              {
                "xml": {
                  "name": "uri"
                },
                "description": "Uniform Resource Identifier - This should be a path to a file accessible to the Live system (eg. a http:// URI) depending on the output type. For example, a RTMP destination should have a uri simliar to: \"rtmp://fmsserver/live\"."
              }
            ]
          },
          "Username": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "username"
                },
                "description": "Documentation update needed"
              }
            ]
          }
        },
        "description": "Input Location"
      },
      "__stringMax2048": {
        "type": "string",
        "description": "Placeholder documentation for __stringMax2048",
        "maxLength": 2048
      },
      "__integerMin0Max7": {
        "type": "integer",
        "description": "Placeholder documentation for __integerMin0Max7",
        "minimum": 0,
        "maximum": 7
      },
      "__integerMin0Max100": {
        "type": "integer",
        "description": "Placeholder documentation for __integerMin0Max100",
        "minimum": 0,
        "maximum": 100
      },
      "StaticImageDeactivateScheduleActionSettings": {
        "type": "object",
        "properties": {
          "FadeOut": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0"
              },
              {
                "xml": {
                  "name": "fadeOut"
                },
                "description": "The time in milliseconds for the image to fade out. Default is 0 (no fade-out)."
              }
            ]
          },
          "Layer": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin0Max7"
              },
              {
                "xml": {
                  "name": "layer"
                },
                "description": "The image overlay layer to deactivate, 0 to 7. Default is 0."
              }
            ]
          }
        },
        "description": "Settings for the action to deactivate the image in a specific layer."
      },
      "ScheduleActionStartSettings": {
        "type": "object",
        "properties": {
          "FixedModeScheduleActionStartSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/FixedModeScheduleActionStartSettings"
              },
              {
                "xml": {
                  "name": "fixedModeScheduleActionStartSettings"
                },
                "description": "Option for specifying the start time for an action."
              }
            ]
          },
          "FollowModeScheduleActionStartSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/FollowModeScheduleActionStartSettings"
              },
              {
                "xml": {
                  "name": "followModeScheduleActionStartSettings"
                },
                "description": "Option for specifying an action as relative to another action."
              }
            ]
          },
          "ImmediateModeScheduleActionStartSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/ImmediateModeScheduleActionStartSettings"
              },
              {
                "xml": {
                  "name": "immediateModeScheduleActionStartSettings"
                },
                "description": "Option for specifying an action that should be applied immediately."
              }
            ]
          }
        },
        "description": "Settings to specify when an action should occur. Only one of the options must be selected."
      },
      "FixedModeScheduleActionStartSettings": {
        "type": "object",
        "required": [
          "Time"
        ],
        "properties": {
          "Time": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "time"
                },
                "description": "Start time for the action to start in the channel. (Not the time for the action to be added to the schedule: actions are always added to the schedule immediately.) UTC format: yyyy-mm-ddThh:mm:ss.nnnZ. All the letters are digits (for example, mm might be 01) except for the two constants \"T\" for time and \"Z\" for \"UTC format\"."
              }
            ]
          }
        },
        "description": "Start time for the action."
      },
      "FollowModeScheduleActionStartSettings": {
        "type": "object",
        "required": [
          "ReferenceActionName",
          "FollowPoint"
        ],
        "properties": {
          "FollowPoint": {
            "allOf": [
              {
                "$ref": "#/$defs/FollowPoint"
              },
              {
                "xml": {
                  "name": "followPoint"
                },
                "description": "Identifies whether this action starts relative to the start or relative to the end of the reference action."
              }
            ]
          },
          "ReferenceActionName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "referenceActionName"
                },
                "description": "The action name of another action that this one refers to."
              }
            ]
          }
        },
        "description": "Settings to specify if an action follows another."
      },
      "FollowPoint": {
        "type": "string",
        "enum": [
          "END",
          "START"
        ],
        "description": "Follow reference point."
      },
      "ImmediateModeScheduleActionStartSettings": {
        "type": "object",
        "properties": {},
        "description": "Settings to configure an action so that it occurs as soon as possible."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://medialive.us-east-1.amazonaws.com/prod/channels/{channelId}/schedule"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Placeholder documentation for BatchUpdateScheduleResponse",
        "**Key properties:**",
        {
          "$ul": [
            "**Creates**",
            "**Deletes**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
