{
  "name": "GET_DeleteReplicationGroup",
  "description": "<p>Deletes an existing replication group. By default, this operation deletes the entire replication group, including the primary/primaries and all of the read replicas. If the replication group has only one primary, you can optionally delete only the read replicas, while retaining the primary by setting <code>RetainPrimaryCluster=true</code>.</p> <p>When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the selected resources; you cannot cancel or revert this operation.</p> <note> <p>This operation is valid for Redis only.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "ReplicationGroupId": {
        "type": "string",
        "description": "The identifier for the cluster to be deleted. This parameter is not case sensitive."
      },
      "RetainPrimaryCluster": {
        "type": "boolean",
        "description": "If set to <code>true</code>, all of the read replicas are deleted, but the primary node is retained."
      },
      "FinalSnapshotIdentifier": {
        "type": "string",
        "description": "The name of a final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster, rather than one of the replicas; this is to ensure that it captures the freshest data. After the final snapshot is taken, the replication group is immediately deleted."
      },
      "Action": {
        "type": "string",
        "enum": [
          "DeleteReplicationGroup"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2015-02-02"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "ReplicationGroupId",
      "Action",
      "Version"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://elasticache.us-east-1.amazonaws.com/#Action=DeleteReplicationGroup{?ReplicationGroupId,RetainPrimaryCluster,FinalSnapshotIdentifier,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**ReplicationGroup**: Contains all of the attributes of a specific Redis replication group.",
              {
                "$ul": [
                  "**ReplicationGroupId**",
                  "**Description**",
                  "**GlobalReplicationGroupInfo**",
                  "**Status**",
                  "**PendingModifiedValues**",
                  "**MemberClusters**",
                  "**NodeGroups**",
                  "**SnapshottingClusterId**",
                  "**AutomaticFailover**",
                  "**MultiAZ**",
                  "**ConfigurationEndpoint**",
                  "**SnapshotRetentionLimit**",
                  "**SnapshotWindow**",
                  "**ClusterEnabled**",
                  "**CacheNodeType**",
                  "**AuthTokenEnabled**",
                  "**AuthTokenLastModifiedDate**",
                  "**TransitEncryptionEnabled**",
                  "**AtRestEncryptionEnabled**",
                  "**MemberClustersOutpostArns**",
                  "**KmsKeyId**",
                  "**ARN**",
                  "**UserGroupIds**",
                  "**LogDeliveryConfigurations**",
                  "**ReplicationGroupCreateTime**",
                  "**DataTiering**",
                  "**AutoMinorVersionUpgrade**",
                  "**NetworkType**",
                  "**IpDiscovery**",
                  "**TransitEncryptionMode**",
                  "**ClusterMode**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
