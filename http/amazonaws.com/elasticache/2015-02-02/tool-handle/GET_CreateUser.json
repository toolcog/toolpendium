{
  "name": "GET_CreateUser",
  "description": "For Redis engine version 6.0 onwards: Creates a Redis user. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html\">Using Role Based Access Control (RBAC)</a>.",
  "parameters": {
    "type": "object",
    "properties": {
      "UserId": {
        "type": "string",
        "pattern": "[a-zA-Z][a-zA-Z0-9\\-]*",
        "minLength": 1,
        "description": "The ID of the user."
      },
      "UserName": {
        "type": "string",
        "minLength": 1,
        "description": "The username of the user."
      },
      "Engine": {
        "type": "string",
        "pattern": "[a-zA-Z]*",
        "description": "The current supported value is Redis. "
      },
      "Passwords": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "minItems": 1,
        "description": "Passwords used for this user. You can create up to two passwords for each user."
      },
      "AccessString": {
        "type": "string",
        "pattern": ".*\\S.*",
        "description": "Access permissions string used for this user."
      },
      "NoPasswordRequired": {
        "type": "boolean",
        "description": "Indicates a password is not required for this user."
      },
      "Tags": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Tag"
            },
            {
              "xml": {
                "name": "Tag"
              }
            }
          ]
        },
        "description": "A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted."
      },
      "AuthenticationMode": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/InputAuthenticationType"
              },
              {
                "description": "Specifies the authentication type. Possible options are IAM authentication, password and no password."
              }
            ]
          },
          "Passwords": {
            "allOf": [
              {
                "$ref": "#/$defs/PasswordListInput"
              },
              {
                "description": "Specifies the passwords to use for authentication if <code>Type</code> is set to <code>password</code>."
              }
            ]
          }
        },
        "description": "Specifies how to authenticate the user."
      },
      "Action": {
        "type": "string",
        "enum": [
          "CreateUser"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2015-02-02"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "UserId",
      "UserName",
      "Engine",
      "AccessString",
      "Action",
      "Version"
    ],
    "$defs": {
      "String": {
        "type": "string"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The key for the tag. May not be null."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The tag's value. May be null."
              }
            ]
          }
        },
        "description": "A tag that can be added to an ElastiCache cluster or replication group. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your ElastiCache resources, with the exception of global replication group. When you add or remove tags on replication groups, those actions will be replicated to all nodes in the replication group. A tag with a null Value is permitted."
      },
      "InputAuthenticationType": {
        "type": "string",
        "enum": [
          "password",
          "no-password-required",
          "iam"
        ]
      },
      "PasswordListInput": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "minItems": 1
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://elasticache.us-east-1.amazonaws.com/#Action=CreateUser{?UserId,UserName,Engine,Passwords,AccessString,NoPasswordRequired,Tags,AuthenticationMode,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**UserId**",
            "**UserName**",
            "**Status**",
            "**Engine**",
            "**MinimumEngineVersion**",
            "**AccessString**",
            "**UserGroupIds**",
            "**Authentication**",
            "**ARN**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
