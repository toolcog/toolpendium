{
  "name": "GET_DescribeUpdateActions",
  "description": "Returns details of the update actions ",
  "parameters": {
    "type": "object",
    "properties": {
      "ServiceUpdateName": {
        "type": "string",
        "description": "The unique ID of the service update"
      },
      "ReplicationGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "maxItems": 20,
        "description": "The replication group IDs"
      },
      "CacheClusterIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "maxItems": 20,
        "description": "The cache cluster IDs"
      },
      "Engine": {
        "type": "string",
        "description": "The Elasticache engine to which the update applies. Either Redis or Memcached "
      },
      "ServiceUpdateStatus": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ServiceUpdateStatus"
        },
        "maxItems": 3,
        "description": "The status of the service update"
      },
      "ServiceUpdateTimeRange": {
        "type": "object",
        "properties": {
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/TStamp"
              },
              {
                "description": "The start time of the time range filter"
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/TStamp"
              },
              {
                "description": "The end time of the time range filter"
              }
            ]
          }
        },
        "description": "The range of time specified to search for service updates that are in available status"
      },
      "UpdateActionStatus": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/UpdateActionStatus"
        },
        "maxItems": 9,
        "description": "The status of the update action."
      },
      "ShowNodeLevelUpdateStatus": {
        "type": "boolean",
        "description": "Dictates whether to include node level update status in the response "
      },
      "MaxRecords": {
        "type": "integer",
        "description": "The maximum number of records to include in the response"
      },
      "Marker": {
        "type": "string",
        "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      },
      "Action": {
        "type": "string",
        "enum": [
          "DescribeUpdateActions"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2015-02-02"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Action",
      "Version"
    ],
    "$defs": {
      "String": {
        "type": "string"
      },
      "ServiceUpdateStatus": {
        "type": "string",
        "enum": [
          "available",
          "cancelled",
          "expired"
        ]
      },
      "TStamp": {
        "type": "string",
        "format": "date-time"
      },
      "UpdateActionStatus": {
        "type": "string",
        "enum": [
          "not-applied",
          "waiting-to-start",
          "in-progress",
          "stopping",
          "stopped",
          "complete",
          "scheduling",
          "scheduled",
          "not-applicable"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://elasticache.us-east-1.amazonaws.com/#Action=DescribeUpdateActions{?ServiceUpdateName,ReplicationGroupIds,CacheClusterIds,Engine,ServiceUpdateStatus,ServiceUpdateTimeRange,UpdateActionStatus,ShowNodeLevelUpdateStatus,MaxRecords,Marker,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Marker**",
            "**UpdateActions**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
