{
  "name": "GET_ModifyReplicationGroupShardConfiguration",
  "description": "Modifies a replication group's shards (node groups) by allowing you to add shards, remove shards, or rebalance the keyspaces among existing shards.",
  "parameters": {
    "type": "object",
    "properties": {
      "ReplicationGroupId": {
        "type": "string",
        "description": "The name of the Redis (cluster mode enabled) cluster (replication group) on which the shards are to be configured."
      },
      "NodeGroupCount": {
        "type": "integer",
        "description": "The number of node groups (shards) that results from the modification of the shard configuration."
      },
      "ApplyImmediately": {
        "type": "boolean",
        "description": "<p>Indicates that the shard reconfiguration process begins immediately. At present, the only permitted value for this parameter is <code>true</code>.</p> <p>Value: true</p>"
      },
      "ReshardingConfiguration": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ReshardingConfiguration"
            },
            {
              "xml": {
                "name": "ReshardingConfiguration"
              }
            }
          ]
        },
        "description": "<p>Specifies the preferred availability zones for each node group in the cluster. If the value of <code>NodeGroupCount</code> is greater than the current number of node groups (shards), you can use this parameter to specify the preferred availability zones of the cluster's shards. If you omit this parameter ElastiCache selects availability zones for you.</p> <p>You can specify this parameter only if the value of <code>NodeGroupCount</code> is greater than the current number of node groups (shards).</p>"
      },
      "NodeGroupsToRemove": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AllowedNodeGroupId"
            },
            {
              "xml": {
                "name": "NodeGroupToRemove"
              }
            }
          ]
        },
        "description": "<p>If the value of <code>NodeGroupCount</code> is less than the current number of node groups (shards), then either <code>NodeGroupsToRemove</code> or <code>NodeGroupsToRetain</code> is required. <code>NodeGroupsToRemove</code> is a list of <code>NodeGroupId</code>s to remove from the cluster.</p> <p>ElastiCache for Redis will attempt to remove all node groups listed by <code>NodeGroupsToRemove</code> from the cluster.</p>"
      },
      "NodeGroupsToRetain": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AllowedNodeGroupId"
            },
            {
              "xml": {
                "name": "NodeGroupToRetain"
              }
            }
          ]
        },
        "description": "<p>If the value of <code>NodeGroupCount</code> is less than the current number of node groups (shards), then either <code>NodeGroupsToRemove</code> or <code>NodeGroupsToRetain</code> is required. <code>NodeGroupsToRetain</code> is a list of <code>NodeGroupId</code>s to retain in the cluster.</p> <p>ElastiCache for Redis will attempt to remove all node groups except those listed by <code>NodeGroupsToRetain</code> from the cluster.</p>"
      },
      "Action": {
        "type": "string",
        "enum": [
          "ModifyReplicationGroupShardConfiguration"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2015-02-02"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "ReplicationGroupId",
      "NodeGroupCount",
      "ApplyImmediately",
      "Action",
      "Version"
    ],
    "$defs": {
      "ReshardingConfiguration": {
        "type": "object",
        "properties": {
          "NodeGroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/AllowedNodeGroupId"
              },
              {
                "description": "Either the ElastiCache for Redis supplied 4-digit id or a user supplied id for the node group these configuration values apply to."
              }
            ]
          },
          "PreferredAvailabilityZones": {
            "allOf": [
              {
                "$ref": "#/$defs/AvailabilityZonesList"
              },
              {
                "description": "A list of preferred availability zones for the nodes in this cluster."
              }
            ]
          }
        },
        "description": "A list of <code>PreferredAvailabilityZones</code> objects that specifies the configuration of a node group in the resharded cluster."
      },
      "AllowedNodeGroupId": {
        "type": "string",
        "pattern": "\\d+",
        "minLength": 1,
        "maxLength": 4
      },
      "AvailabilityZonesList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "AvailabilityZone"
              }
            }
          ]
        }
      },
      "String": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://elasticache.us-east-1.amazonaws.com/#Action=ModifyReplicationGroupShardConfiguration{?ReplicationGroupId,NodeGroupCount,ApplyImmediately,ReshardingConfiguration,NodeGroupsToRemove,NodeGroupsToRetain,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**ReplicationGroup**: Contains all of the attributes of a specific Redis replication group.",
              {
                "$ul": [
                  "**ReplicationGroupId**",
                  "**Description**",
                  "**GlobalReplicationGroupInfo**",
                  "**Status**",
                  "**PendingModifiedValues**",
                  "**MemberClusters**",
                  "**NodeGroups**",
                  "**SnapshottingClusterId**",
                  "**AutomaticFailover**",
                  "**MultiAZ**",
                  "**ConfigurationEndpoint**",
                  "**SnapshotRetentionLimit**",
                  "**SnapshotWindow**",
                  "**ClusterEnabled**",
                  "**CacheNodeType**",
                  "**AuthTokenEnabled**",
                  "**AuthTokenLastModifiedDate**",
                  "**TransitEncryptionEnabled**",
                  "**AtRestEncryptionEnabled**",
                  "**MemberClustersOutpostArns**",
                  "**KmsKeyId**",
                  "**ARN**",
                  "**UserGroupIds**",
                  "**LogDeliveryConfigurations**",
                  "**ReplicationGroupCreateTime**",
                  "**DataTiering**",
                  "**AutoMinorVersionUpgrade**",
                  "**NetworkType**",
                  "**IpDiscovery**",
                  "**TransitEncryptionMode**",
                  "**ClusterMode**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
