{
  "name": "BatchPutMetrics",
  "description": "Used to ingest training metrics into SageMaker. These metrics can be visualized in SageMaker Studio and retrieved with the <code>GetMetrics</code> API. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "TrialComponentName",
          "MetricData"
        ],
        "properties": {
          "TrialComponentName": {
            "description": "The name of the Trial Component to associate with the metrics.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,119}",
            "minLength": 1,
            "maxLength": 120
          },
          "MetricData": {
            "description": "A list of raw metric values to put.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/RawMetricData"
            },
            "minItems": 1,
            "maxItems": 10
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "RawMetricData": {
        "type": "object",
        "required": [
          "MetricName",
          "Timestamp",
          "Value"
        ],
        "properties": {
          "MetricName": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricName"
              },
              {
                "description": "The name of the metric."
              }
            ]
          },
          "Timestamp": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The time that the metric was recorded."
              }
            ]
          },
          "Step": {
            "allOf": [
              {
                "$ref": "#/$defs/Step"
              },
              {
                "description": "The metric step (epoch). "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The metric value."
              }
            ]
          }
        },
        "description": "The raw metric data to associate with the resource."
      },
      "MetricName": {
        "type": "string",
        "pattern": ".+",
        "minLength": 1,
        "maxLength": 255
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "Step": {
        "type": "integer",
        "minimum": 0
      },
      "Double": {
        "type": "number",
        "format": "double"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://metrics.sagemaker.us-east-1.amazonaws.com/BatchPutMetrics"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
