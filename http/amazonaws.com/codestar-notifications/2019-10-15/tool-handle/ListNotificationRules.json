{
  "name": "ListNotificationRules",
  "description": "Returns a list of the notification rules for an Amazon Web Services account.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "Filters": {
            "description": "<p>The filters to use to return information by service or resource type. For valid values, see <a>ListNotificationRulesFilter</a>.</p> <note> <p>A filter with the same name can appear more than once when used with OR statements. Filters with different names should be applied with AND statements.</p> </note>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ListNotificationRulesFilter"
            }
          },
          "NextToken": {
            "description": "An enumeration token that, when provided in a request, returns the next batch of the results.",
            "type": "string",
            "pattern": "^[\\w/+=]+$"
          },
          "MaxResults": {
            "description": "A non-negative integer used to limit the number of returned results. The maximum number of results that can be returned is 100.",
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ListNotificationRulesFilter": {
        "type": "object",
        "required": [
          "Name",
          "Value"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ListNotificationRulesFilterName"
              },
              {
                "description": "The name of the attribute you want to use to filter the returned notification rules."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/ListNotificationRulesFilterValue"
              },
              {
                "description": "The value of the attribute you want to use to filter the returned notification rules. For example, if you specify filtering by <i>RESOURCE</i> in Name, you might specify the ARN of a pipeline in CodePipeline for the value."
              }
            ]
          }
        },
        "description": "Information about a filter to apply to the list of returned notification rules. You can filter by event type, owner, resource, or target."
      },
      "ListNotificationRulesFilterName": {
        "type": "string",
        "enum": [
          "EVENT_TYPE_ID",
          "CREATED_BY",
          "RESOURCE",
          "TARGET_ADDRESS"
        ]
      },
      "ListNotificationRulesFilterValue": {
        "type": "string",
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://codestar-notifications.us-east-1.amazonaws.com/listNotificationRules{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NextToken**",
            "**NotificationRules**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
