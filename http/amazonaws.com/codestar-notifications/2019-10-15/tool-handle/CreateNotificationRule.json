{
  "name": "CreateNotificationRule",
  "description": "Creates a notification rule for a resource. The rule specifies the events you want notifications about and the targets (such as Chatbot topics or Chatbot clients configured for Slack) where you want to receive them.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Name",
          "EventTypeIds",
          "Resource",
          "Targets",
          "DetailType"
        ],
        "properties": {
          "Name": {
            "description": "The name for the notification rule. Notification rule names must be unique in your Amazon Web Services account.",
            "type": "string",
            "pattern": "[A-Za-z0-9\\-_ ]+$",
            "minLength": 1,
            "maxLength": 64,
            "format": "password"
          },
          "EventTypeIds": {
            "description": "A list of event types associated with this notification rule. For a list of allowed events, see <a>EventTypeSummary</a>.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/EventTypeId"
            }
          },
          "Resource": {
            "description": "The Amazon Resource Name (ARN) of the resource to associate with the notification rule. Supported resources include pipelines in CodePipeline, repositories in CodeCommit, and build projects in CodeBuild.",
            "type": "string",
            "pattern": "^arn:aws[^:\\s]*:[^:\\s]*:[^:\\s]*:[0-9]{12}:[^\\s]+$"
          },
          "Targets": {
            "description": "A list of Amazon Resource Names (ARNs) of Amazon Simple Notification Service topics and Chatbot clients to associate with the notification rule.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Target"
            },
            "maxItems": 10
          },
          "DetailType": {
            "description": "The level of detail to include in the notifications for this resource. <code>BASIC</code> will include only the contents of the event as it would appear in Amazon CloudWatch. <code>FULL</code> will include any supplemental information provided by AWS CodeStar Notifications and/or the service for the resource for which the notification is created.",
            "type": "string",
            "enum": [
              "BASIC",
              "FULL"
            ]
          },
          "ClientRequestToken": {
            "description": "<p>A unique, client-generated idempotency token that, when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request with the same parameters is received and a token is included, the request returns information about the initial request that used that token.</p> <note> <p>The Amazon Web Services SDKs prepopulate client request tokens. If you are using an Amazon Web Services SDK, an idempotency token is created for you.</p> </note>",
            "type": "string",
            "pattern": "^[\\w:/-]+$",
            "minLength": 1,
            "maxLength": 256
          },
          "Tags": {
            "description": "A list of tags to apply to this notification rule. Key names cannot start with \"<code>aws</code>\". ",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "Status": {
            "description": "The status of the notification rule. The default value is <code>ENABLED</code>. If the status is set to <code>DISABLED</code>, notifications aren't sent for the notification rule.",
            "type": "string",
            "enum": [
              "ENABLED",
              "DISABLED"
            ]
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "EventTypeId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 200
      },
      "Target": {
        "type": "object",
        "properties": {
          "TargetType": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetType"
              },
              {
                "description": "<p>The target type. Can be an Chatbot topic or Chatbot client.</p> <ul> <li> <p>Chatbot topics are specified as <code>SNS</code>.</p> </li> <li> <p>Chatbot clients are specified as <code>AWSChatbotSlack</code>.</p> </li> </ul>"
              }
            ]
          },
          "TargetAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetAddress"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Chatbot topic or Chatbot client."
              }
            ]
          }
        },
        "description": "Information about the Chatbot topics or Chatbot clients associated with a notification rule."
      },
      "TargetType": {
        "type": "string",
        "pattern": "^[A-Za-z]+$"
      },
      "TargetAddress": {
        "type": "string",
        "minLength": 1,
        "maxLength": 320,
        "format": "password"
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://codestar-notifications.us-east-1.amazonaws.com/createNotificationRule"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Arn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
