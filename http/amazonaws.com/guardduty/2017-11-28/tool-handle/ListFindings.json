{
  "name": "ListFindings",
  "description": "Lists Amazon GuardDuty findings for the specified detector ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "detectorId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300,
        "description": "The ID of the detector that specifies the GuardDuty service whose findings you want to list."
      },
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "findingCriteria": {
            "description": "Contains information about the criteria used for querying findings.",
            "type": "object",
            "properties": {
              "Criterion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Criterion"
                  },
                  {
                    "xml": {
                      "name": "criterion"
                    },
                    "description": "Represents a map of finding properties that match specified conditions and values when querying findings."
                  }
                ]
              }
            }
          },
          "sortCriteria": {
            "description": "Contains information about the criteria used for sorting findings.",
            "type": "object",
            "properties": {
              "AttributeName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String"
                  },
                  {
                    "xml": {
                      "name": "attributeName"
                    },
                    "description": "Represents the finding attribute, such as <code>accountId</code>, that sorts the findings."
                  }
                ]
              },
              "OrderBy": {
                "allOf": [
                  {
                    "$ref": "#/$defs/OrderBy"
                  },
                  {
                    "xml": {
                      "name": "orderBy"
                    },
                    "description": "The order by which the sorted findings are to be displayed."
                  }
                ]
              }
            }
          },
          "maxResults": {
            "description": "You can use this parameter to indicate the maximum number of items you want in the response. The default value is 50. The maximum value is 50.",
            "type": "integer",
            "minimum": 1,
            "maximum": 50
          },
          "nextToken": {
            "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action, fill nextToken in the request with the value of NextToken from the previous response to continue listing data.",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "detectorId",
      "body"
    ],
    "$defs": {
      "Criterion": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/Condition"
        }
      },
      "Condition": {
        "type": "object",
        "properties": {
          "Eq": {
            "allOf": [
              {
                "$ref": "#/$defs/Eq"
              },
              {
                "deprecated": true,
                "xml": {
                  "name": "eq"
                },
                "description": "Represents the <i>equal</i> condition to be applied to a single field when querying for findings."
              }
            ]
          },
          "Neq": {
            "allOf": [
              {
                "$ref": "#/$defs/Neq"
              },
              {
                "deprecated": true,
                "xml": {
                  "name": "neq"
                },
                "description": "Represents the <i>not equal</i> condition to be applied to a single field when querying for findings."
              }
            ]
          },
          "Gt": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "deprecated": true,
                "xml": {
                  "name": "gt"
                },
                "description": "Represents a <i>greater than</i> condition to be applied to a single field when querying for findings."
              }
            ]
          },
          "Gte": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "deprecated": true,
                "xml": {
                  "name": "gte"
                },
                "description": "Represents a <i>greater than or equal</i> condition to be applied to a single field when querying for findings."
              }
            ]
          },
          "Lt": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "deprecated": true,
                "xml": {
                  "name": "lt"
                },
                "description": "Represents a <i>less than</i> condition to be applied to a single field when querying for findings."
              }
            ]
          },
          "Lte": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "deprecated": true,
                "xml": {
                  "name": "lte"
                },
                "description": "Represents a <i>less than or equal</i> condition to be applied to a single field when querying for findings."
              }
            ]
          },
          "Equals": {
            "allOf": [
              {
                "$ref": "#/$defs/Equals"
              },
              {
                "xml": {
                  "name": "equals"
                },
                "description": "Represents an <i>equal</i> <b/> condition to be applied to a single field when querying for findings."
              }
            ]
          },
          "NotEquals": {
            "allOf": [
              {
                "$ref": "#/$defs/NotEquals"
              },
              {
                "xml": {
                  "name": "notEquals"
                },
                "description": "Represents a <i>not equal</i> <b/> condition to be applied to a single field when querying for findings."
              }
            ]
          },
          "GreaterThan": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "xml": {
                  "name": "greaterThan"
                },
                "description": "Represents a <i>greater than</i> condition to be applied to a single field when querying for findings."
              }
            ]
          },
          "GreaterThanOrEqual": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "xml": {
                  "name": "greaterThanOrEqual"
                },
                "description": "Represents a <i>greater than or equal</i> condition to be applied to a single field when querying for findings."
              }
            ]
          },
          "LessThan": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "xml": {
                  "name": "lessThan"
                },
                "description": "Represents a <i>less than</i> condition to be applied to a single field when querying for findings."
              }
            ]
          },
          "LessThanOrEqual": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "xml": {
                  "name": "lessThanOrEqual"
                },
                "description": "Represents a <i>less than or equal</i> condition to be applied to a single field when querying for findings."
              }
            ]
          }
        },
        "description": "Contains information about the condition."
      },
      "Eq": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "String": {
        "type": "string"
      },
      "Neq": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "Integer": {
        "type": "integer"
      },
      "Equals": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "NotEquals": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "Long": {
        "type": "integer"
      },
      "OrderBy": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://guardduty.us-east-1.amazonaws.com/detector/{detectorId}/findings{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**FindingIds**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
