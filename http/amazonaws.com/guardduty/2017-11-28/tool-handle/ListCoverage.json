{
  "name": "ListCoverage",
  "description": "<p>Lists coverage details for your GuardDuty account. If you're a GuardDuty administrator, you can retrieve all resources associated with the active member accounts in your organization.</p> <p>Make sure the accounts have EKS Runtime Monitoring enabled and GuardDuty agent running on their EKS nodes.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "detectorId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300,
        "description": "The unique ID of the detector whose coverage details you want to retrieve."
      },
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "nextToken": {
            "description": "A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the NextToken value returned from the previous request to continue listing results after the first page.",
            "type": "string"
          },
          "maxResults": {
            "description": "The maximum number of results to return in the response.",
            "type": "integer",
            "minimum": 1,
            "maximum": 50
          },
          "filterCriteria": {
            "description": "Represents the criteria used in the filter.",
            "type": "object",
            "properties": {
              "FilterCriterion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageFilterCriterionList"
                  },
                  {
                    "xml": {
                      "name": "filterCriterion"
                    },
                    "description": "Represents a condition that when matched will be added to the response of the operation."
                  }
                ]
              }
            }
          },
          "sortCriteria": {
            "description": "Information about the sorting criteria used in the coverage statistics.",
            "type": "object",
            "properties": {
              "AttributeName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageSortKey"
                  },
                  {
                    "xml": {
                      "name": "attributeName"
                    },
                    "description": "Represents the field name used to sort the coverage details."
                  }
                ]
              },
              "OrderBy": {
                "allOf": [
                  {
                    "$ref": "#/$defs/OrderBy"
                  },
                  {
                    "xml": {
                      "name": "orderBy"
                    },
                    "description": "The order in which the sorted findings are to be displayed."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "detectorId",
      "body"
    ],
    "$defs": {
      "CoverageFilterCriterionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CoverageFilterCriterion"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "CoverageFilterCriterion": {
        "type": "object",
        "properties": {
          "CriterionKey": {
            "allOf": [
              {
                "$ref": "#/$defs/CoverageFilterCriterionKey"
              },
              {
                "xml": {
                  "name": "criterionKey"
                },
                "description": "An enum value representing possible filter fields."
              }
            ]
          },
          "FilterCondition": {
            "allOf": [
              {
                "$ref": "#/$defs/CoverageFilterCondition"
              },
              {
                "xml": {
                  "name": "filterCondition"
                },
                "description": "Contains information about the condition."
              }
            ]
          }
        },
        "description": "Represents a condition that when matched will be added to the response of the operation."
      },
      "CoverageFilterCriterionKey": {
        "type": "string",
        "enum": [
          "ACCOUNT_ID",
          "CLUSTER_NAME",
          "RESOURCE_TYPE",
          "COVERAGE_STATUS",
          "ADDON_VERSION"
        ]
      },
      "CoverageFilterCondition": {
        "type": "object",
        "properties": {
          "Equals": {
            "allOf": [
              {
                "$ref": "#/$defs/Equals"
              },
              {
                "xml": {
                  "name": "equals"
                },
                "description": "Represents an equal condition that is applied to a single field while retrieving the coverage details."
              }
            ]
          },
          "NotEquals": {
            "allOf": [
              {
                "$ref": "#/$defs/NotEquals"
              },
              {
                "xml": {
                  "name": "notEquals"
                },
                "description": "Represents a not equal condition that is applied to a single field while retrieving the coverage details."
              }
            ]
          }
        },
        "description": "Represents a condition that when matched will be added to the response of the operation."
      },
      "Equals": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "String": {
        "type": "string"
      },
      "NotEquals": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "CoverageSortKey": {
        "type": "string",
        "enum": [
          "ACCOUNT_ID",
          "CLUSTER_NAME",
          "COVERAGE_STATUS",
          "ISSUE",
          "ADDON_VERSION",
          "UPDATED_AT"
        ]
      },
      "OrderBy": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://guardduty.us-east-1.amazonaws.com/detector/{detectorId}/coverage{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Resources**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
