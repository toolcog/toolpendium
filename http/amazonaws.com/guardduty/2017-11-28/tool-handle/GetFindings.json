{
  "name": "GetFindings",
  "description": "Describes Amazon GuardDuty findings specified by finding IDs.",
  "parameters": {
    "type": "object",
    "properties": {
      "detectorId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300,
        "description": "The ID of the detector that specifies the GuardDuty service whose findings you want to retrieve."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "findingIds"
        ],
        "properties": {
          "findingIds": {
            "description": "The IDs of the findings that you want to retrieve.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/FindingId"
            },
            "minItems": 0,
            "maxItems": 50
          },
          "sortCriteria": {
            "description": "Contains information about the criteria used for sorting findings.",
            "type": "object",
            "properties": {
              "AttributeName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String"
                  },
                  {
                    "xml": {
                      "name": "attributeName"
                    },
                    "description": "Represents the finding attribute, such as <code>accountId</code>, that sorts the findings."
                  }
                ]
              },
              "OrderBy": {
                "allOf": [
                  {
                    "$ref": "#/$defs/OrderBy"
                  },
                  {
                    "xml": {
                      "name": "orderBy"
                    },
                    "description": "The order by which the sorted findings are to be displayed."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "detectorId",
      "body"
    ],
    "$defs": {
      "FindingId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300
      },
      "String": {
        "type": "string"
      },
      "OrderBy": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://guardduty.us-east-1.amazonaws.com/detector/{detectorId}/findings/get"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Findings**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
