{
  "name": "CreatePublishingDestination",
  "description": "Creates a publishing destination to export findings to. The resource to export findings to must exist before you use this operation.",
  "parameters": {
    "type": "object",
    "properties": {
      "detectorId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300,
        "description": "The ID of the GuardDuty detector associated with the publishing destination."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "destinationType",
          "destinationProperties"
        ],
        "properties": {
          "destinationType": {
            "description": "The type of resource for the publishing destination. Currently only Amazon S3 buckets are supported.",
            "type": "string",
            "enum": [
              "S3"
            ],
            "minLength": 1,
            "maxLength": 300
          },
          "destinationProperties": {
            "description": "Contains the Amazon Resource Name (ARN) of the resource to publish to, such as an S3 bucket, and the ARN of the KMS key to use to encrypt published findings.",
            "type": "object",
            "properties": {
              "DestinationArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String"
                  },
                  {
                    "xml": {
                      "name": "destinationArn"
                    },
                    "description": "<p>The ARN of the resource to publish to.</p> <p>To specify an S3 bucket folder use the following format: <code>arn:aws:s3:::DOC-EXAMPLE-BUCKET/myFolder/</code> </p>"
                  }
                ]
              },
              "KmsKeyArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String"
                  },
                  {
                    "xml": {
                      "name": "kmsKeyArn"
                    },
                    "description": "The ARN of the KMS key to use for encryption."
                  }
                ]
              }
            }
          },
          "clientToken": {
            "description": "The idempotency token for the request.",
            "type": "string",
            "minLength": 0,
            "maxLength": 64
          }
        }
      }
    },
    "required": [
      "detectorId",
      "body"
    ],
    "$defs": {
      "String": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://guardduty.us-east-1.amazonaws.com/detector/{detectorId}/publishingDestination"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**DestinationId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
