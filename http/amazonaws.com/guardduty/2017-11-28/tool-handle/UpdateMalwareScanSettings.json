{
  "name": "UpdateMalwareScanSettings",
  "description": "<p>Updates the malware scan settings.</p> <p>There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html\">Regions and endpoints</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "detectorId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300,
        "description": "The unique ID of the detector that specifies the GuardDuty service where you want to update scan settings."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "scanResourceCriteria": {
            "description": "Contains information about criteria used to filter resources before triggering malware scan.",
            "type": "object",
            "properties": {
              "Include": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ScanCriterion"
                  },
                  {
                    "xml": {
                      "name": "include"
                    },
                    "description": "Represents condition that when matched will allow a malware scan for a certain resource."
                  }
                ]
              },
              "Exclude": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ScanCriterion"
                  },
                  {
                    "xml": {
                      "name": "exclude"
                    },
                    "description": "Represents condition that when matched will prevent a malware scan for a certain resource."
                  }
                ]
              }
            }
          },
          "ebsSnapshotPreservation": {
            "description": "An enum value representing possible snapshot preservation settings.",
            "type": "string",
            "enum": [
              "NO_RETENTION",
              "RETENTION_WITH_FINDING"
            ]
          }
        }
      }
    },
    "required": [
      "detectorId",
      "body"
    ],
    "$defs": {
      "ScanCriterion": {
        "type": "object",
        "description": "Represents a map of resource properties that match specified conditions and values when triggering malware scans.",
        "additionalProperties": {
          "$ref": "#/$defs/ScanCondition"
        }
      },
      "ScanCondition": {
        "type": "object",
        "required": [
          "MapEquals"
        ],
        "properties": {
          "MapEquals": {
            "allOf": [
              {
                "$ref": "#/$defs/MapEquals"
              },
              {
                "xml": {
                  "name": "mapEquals"
                },
                "description": "Represents an <i>mapEqual</i> <b/> condition to be applied to a single field when triggering for malware scan."
              }
            ]
          }
        },
        "description": "Contains information about the condition."
      },
      "MapEquals": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ScanConditionPair"
        }
      },
      "ScanConditionPair": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "xml": {
                  "name": "key"
                },
                "description": "Represents <i>key</i> <b/> in the map condition."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "xml": {
                  "name": "value"
                },
                "description": "Represents optional <i>value</i> <b/> in the map condition. If not specified, only <i>key</i> <b/> will be matched."
              }
            ]
          }
        },
        "description": "Represents key, value pair to be matched against given resource property."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://guardduty.us-east-1.amazonaws.com/detector/{detectorId}/malware-scan-settings"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
