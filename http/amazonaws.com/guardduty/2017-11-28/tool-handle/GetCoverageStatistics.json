{
  "name": "GetCoverageStatistics",
  "description": "Retrieves aggregated statistics for your account. If you are a GuardDuty administrator, you can retrieve the statistics for all the resources associated with the active member accounts in your organization who have enabled EKS Runtime Monitoring and have the GuardDuty agent running on their EKS nodes.",
  "parameters": {
    "type": "object",
    "properties": {
      "detectorId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300,
        "description": "The unique ID of the GuardDuty detector associated to the coverage statistics."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "statisticsType"
        ],
        "properties": {
          "filterCriteria": {
            "description": "Represents the criteria used in the filter.",
            "type": "object",
            "properties": {
              "FilterCriterion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageFilterCriterionList"
                  },
                  {
                    "xml": {
                      "name": "filterCriterion"
                    },
                    "description": "Represents a condition that when matched will be added to the response of the operation."
                  }
                ]
              }
            }
          },
          "statisticsType": {
            "description": "Represents the statistics type used to aggregate the coverage details.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/CoverageStatisticsType"
            }
          }
        }
      }
    },
    "required": [
      "detectorId",
      "body"
    ],
    "$defs": {
      "CoverageFilterCriterionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CoverageFilterCriterion"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "CoverageFilterCriterion": {
        "type": "object",
        "properties": {
          "CriterionKey": {
            "allOf": [
              {
                "$ref": "#/$defs/CoverageFilterCriterionKey"
              },
              {
                "xml": {
                  "name": "criterionKey"
                },
                "description": "An enum value representing possible filter fields."
              }
            ]
          },
          "FilterCondition": {
            "allOf": [
              {
                "$ref": "#/$defs/CoverageFilterCondition"
              },
              {
                "xml": {
                  "name": "filterCondition"
                },
                "description": "Contains information about the condition."
              }
            ]
          }
        },
        "description": "Represents a condition that when matched will be added to the response of the operation."
      },
      "CoverageFilterCriterionKey": {
        "type": "string",
        "enum": [
          "ACCOUNT_ID",
          "CLUSTER_NAME",
          "RESOURCE_TYPE",
          "COVERAGE_STATUS",
          "ADDON_VERSION"
        ]
      },
      "CoverageFilterCondition": {
        "type": "object",
        "properties": {
          "Equals": {
            "allOf": [
              {
                "$ref": "#/$defs/Equals"
              },
              {
                "xml": {
                  "name": "equals"
                },
                "description": "Represents an equal condition that is applied to a single field while retrieving the coverage details."
              }
            ]
          },
          "NotEquals": {
            "allOf": [
              {
                "$ref": "#/$defs/NotEquals"
              },
              {
                "xml": {
                  "name": "notEquals"
                },
                "description": "Represents a not equal condition that is applied to a single field while retrieving the coverage details."
              }
            ]
          }
        },
        "description": "Represents a condition that when matched will be added to the response of the operation."
      },
      "Equals": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "String": {
        "type": "string"
      },
      "NotEquals": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "CoverageStatisticsType": {
        "type": "string",
        "enum": [
          "COUNT_BY_RESOURCE_TYPE",
          "COUNT_BY_COVERAGE_STATUS"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://guardduty.us-east-1.amazonaws.com/detector/{detectorId}/coverage/statistics"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**CoverageStatistics**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
