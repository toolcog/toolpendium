{
  "name": "UpdateCluster",
  "description": "While a cluster's <code>ClusterState</code> value is in the <code>AwaitingQuorum</code> state, you can update some of the information associated with a cluster. Once the cluster changes to a different job state, usually 60 minutes after the cluster being created, this action is no longer available.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSIESnowballJobManagementService.UpdateCluster"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateClusterRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateClusterRequest": {
        "type": "object",
        "required": [
          "ClusterId"
        ],
        "title": "UpdateClusterRequest",
        "properties": {
          "ClusterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClusterId"
              },
              {
                "description": "The cluster ID of the cluster that you want to update, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>."
              }
            ]
          },
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleARN"
              },
              {
                "description": "The new role Amazon Resource Name (ARN) that you want to associate with this cluster. To create a role ARN, use the <a href=\"https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html\">CreateRole</a> API action in Identity and Access Management (IAM)."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The updated description of this cluster."
              }
            ]
          },
          "Resources": {
            "allOf": [
              {
                "$ref": "#/$defs/JobResource"
              },
              {
                "description": "The updated arrays of <a>JobResource</a> objects that can include updated <a>S3Resource</a> objects or <a>LambdaResource</a> objects."
              }
            ]
          },
          "OnDeviceServiceConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/OnDeviceServiceConfiguration"
              },
              {
                "description": "Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family device clusters support Amazon S3 and NFS (Network File System)."
              }
            ]
          },
          "AddressId": {
            "allOf": [
              {
                "$ref": "#/$defs/AddressId"
              },
              {
                "description": "The ID of the updated <a>Address</a> object."
              }
            ]
          },
          "ShippingOption": {
            "allOf": [
              {
                "$ref": "#/$defs/ShippingOption"
              },
              {
                "description": "The updated shipping option value of this cluster's <a>ShippingDetails</a> object."
              }
            ]
          },
          "Notification": {
            "allOf": [
              {
                "$ref": "#/$defs/Notification"
              },
              {
                "description": "The new or updated <a>Notification</a> object."
              }
            ]
          },
          "ForwardingAddressId": {
            "allOf": [
              {
                "$ref": "#/$defs/AddressId"
              },
              {
                "description": "The updated ID for the forwarding address for a cluster. This field is not supported in most regions."
              }
            ]
          }
        }
      },
      "ClusterId": {
        "type": "string",
        "pattern": "CID[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
        "minLength": 39,
        "maxLength": 39
      },
      "RoleARN": {
        "type": "string",
        "pattern": "arn:aws.*:iam::[0-9]{12}:role/.*",
        "maxLength": 255
      },
      "String": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 1024
      },
      "JobResource": {
        "type": "object",
        "properties": {
          "S3Resources": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ResourceList"
              },
              {
                "description": "An array of <code>S3Resource</code> objects."
              }
            ]
          },
          "LambdaResources": {
            "allOf": [
              {
                "$ref": "#/$defs/LambdaResourceList"
              },
              {
                "description": "The Python-language Lambda functions for this job."
              }
            ]
          },
          "Ec2AmiResources": {
            "allOf": [
              {
                "$ref": "#/$defs/Ec2AmiResourceList"
              },
              {
                "description": "The Amazon Machine Images (AMIs) associated with this job."
              }
            ]
          }
        },
        "description": "Contains an array of Amazon Web Services resource objects. Each object represents an Amazon S3 bucket, an Lambda function, or an Amazon Machine Image (AMI) based on Amazon EC2 that is associated with a particular job."
      },
      "S3ResourceList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/S3Resource"
        }
      },
      "S3Resource": {
        "type": "object",
        "properties": {
          "BucketArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an Amazon S3 bucket."
              }
            ]
          },
          "KeyRange": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyRange"
              },
              {
                "description": "For export jobs, you can provide an optional <code>KeyRange</code> within a specific Amazon S3 bucket. The length of the range is defined at job creation, and has either an inclusive <code>BeginMarker</code>, an inclusive <code>EndMarker</code>, or both. Ranges are UTF-8 binary sorted."
              }
            ]
          },
          "TargetOnDeviceServices": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetOnDeviceServiceList"
              },
              {
                "description": "Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family supports Amazon S3 and NFS (Network File System)."
              }
            ]
          }
        },
        "description": "Each <code>S3Resource</code> object represents an Amazon S3 bucket that your transferred data will be exported from or imported into. For export jobs, this object can have an optional <code>KeyRange</code> value. The length of the range is defined at job creation, and has either an inclusive <code>BeginMarker</code>, an inclusive <code>EndMarker</code>, or both. Ranges are UTF-8 binary sorted."
      },
      "ResourceARN": {
        "type": "string",
        "pattern": "arn:aws.*:*",
        "maxLength": 255
      },
      "KeyRange": {
        "type": "object",
        "properties": {
          "BeginMarker": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The key that starts an optional key range for an export job. Ranges are inclusive and UTF-8 binary sorted."
              }
            ]
          },
          "EndMarker": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The key that ends an optional key range for an export job. Ranges are inclusive and UTF-8 binary sorted."
              }
            ]
          }
        },
        "description": "Contains a key range. For export jobs, a <code>S3Resource</code> object can have an optional <code>KeyRange</code> value. The length of the range is defined at job creation, and has either an inclusive <code>BeginMarker</code>, an inclusive <code>EndMarker</code>, or both. Ranges are UTF-8 binary sorted."
      },
      "TargetOnDeviceServiceList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TargetOnDeviceService"
        }
      },
      "TargetOnDeviceService": {
        "type": "object",
        "properties": {
          "ServiceName": {
            "allOf": [
              {
                "$ref": "#/$defs/DeviceServiceName"
              },
              {
                "description": "Specifies the name of the service on the Snow Family device that your transferred data will be exported from or imported into."
              }
            ]
          },
          "TransferOption": {
            "allOf": [
              {
                "$ref": "#/$defs/TransferOption"
              },
              {
                "description": "Specifies whether the data is being imported or exported. You can import or export the data, or use it locally on the device."
              }
            ]
          }
        },
        "description": "An object that represents the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family supports Amazon S3 and NFS (Network File System)."
      },
      "DeviceServiceName": {
        "type": "string",
        "enum": [
          "NFS_ON_DEVICE_SERVICE",
          "S3_ON_DEVICE_SERVICE"
        ]
      },
      "TransferOption": {
        "type": "string",
        "enum": [
          "IMPORT",
          "EXPORT",
          "LOCAL_USE"
        ]
      },
      "LambdaResourceList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LambdaResource"
        }
      },
      "LambdaResource": {
        "type": "object",
        "properties": {
          "LambdaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "An Amazon Resource Name (ARN) that represents an Lambda function to be triggered by PUT object actions on the associated local Amazon S3 resource."
              }
            ]
          },
          "EventTriggers": {
            "allOf": [
              {
                "$ref": "#/$defs/EventTriggerDefinitionList"
              },
              {
                "description": "The array of ARNs for <a>S3Resource</a> objects to trigger the <a>LambdaResource</a> objects associated with this job."
              }
            ]
          }
        },
        "description": "Identifies "
      },
      "EventTriggerDefinitionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EventTriggerDefinition"
        }
      },
      "EventTriggerDefinition": {
        "type": "object",
        "properties": {
          "EventResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) for any local Amazon S3 resource that is an Lambda function's event trigger associated with this job."
              }
            ]
          }
        },
        "description": "The container for the <a>EventTriggerDefinition$EventResourceARN</a>."
      },
      "Ec2AmiResourceList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Ec2AmiResource"
        }
      },
      "Ec2AmiResource": {
        "type": "object",
        "required": [
          "AmiId"
        ],
        "properties": {
          "AmiId": {
            "allOf": [
              {
                "$ref": "#/$defs/AmiId"
              },
              {
                "description": "The ID of the AMI in Amazon EC2."
              }
            ]
          },
          "SnowballAmiId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The ID of the AMI on the Snow device."
              }
            ]
          }
        },
        "description": "A JSON-formatted object that contains the IDs for an Amazon Machine Image (AMI), including the Amazon EC2-compatible AMI ID and the Snow device AMI ID. Each AMI has these two IDs to simplify identifying the AMI in both the Amazon Web Services Cloud and on the device."
      },
      "AmiId": {
        "type": "string",
        "pattern": "(ami-[0-9a-f]{8})|(ami-[0-9a-f]{17})",
        "minLength": 12,
        "maxLength": 21
      },
      "OnDeviceServiceConfiguration": {
        "type": "object",
        "properties": {
          "NFSOnDeviceService": {
            "allOf": [
              {
                "$ref": "#/$defs/NFSOnDeviceServiceConfiguration"
              },
              {
                "description": "Represents the NFS (Network File System) service on a Snow Family device."
              }
            ]
          },
          "TGWOnDeviceService": {
            "allOf": [
              {
                "$ref": "#/$defs/TGWOnDeviceServiceConfiguration"
              },
              {
                "description": "Represents the Storage Gateway service Tape Gateway type on a Snow Family device."
              }
            ]
          },
          "EKSOnDeviceService": {
            "allOf": [
              {
                "$ref": "#/$defs/EKSOnDeviceServiceConfiguration"
              },
              {
                "description": "The configuration of EKS Anywhere on the Snow Family device."
              }
            ]
          },
          "S3OnDeviceService": {
            "allOf": [
              {
                "$ref": "#/$defs/S3OnDeviceServiceConfiguration"
              },
              {
                "description": "Configuration for Amazon S3 compatible storage on Snow family devices."
              }
            ]
          }
        },
        "description": "An object that represents the metadata and configuration settings for services on an Amazon Web Services Snow Family device."
      },
      "NFSOnDeviceServiceConfiguration": {
        "type": "object",
        "properties": {
          "StorageLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/StorageLimit"
              },
              {
                "description": "The maximum NFS storage for one Snow Family device."
              }
            ]
          },
          "StorageUnit": {
            "allOf": [
              {
                "$ref": "#/$defs/StorageUnit"
              },
              {
                "description": "<p>The scale unit of the NFS storage on the device.</p> <p>Valid values: TB.</p>"
              }
            ]
          }
        },
        "description": "An object that represents the metadata and configuration settings for the NFS (Network File System) service on an Amazon Web Services Snow Family device."
      },
      "StorageLimit": {
        "type": "integer",
        "minimum": 0
      },
      "StorageUnit": {
        "type": "string",
        "enum": [
          "TB"
        ]
      },
      "TGWOnDeviceServiceConfiguration": {
        "type": "object",
        "properties": {
          "StorageLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/StorageLimit"
              },
              {
                "description": "The maximum number of virtual tapes to store on one Snow Family device. Due to physical resource limitations, this value must be set to 80 for Snowball Edge."
              }
            ]
          },
          "StorageUnit": {
            "allOf": [
              {
                "$ref": "#/$defs/StorageUnit"
              },
              {
                "description": "The scale unit of the virtual tapes on the device."
              }
            ]
          }
        },
        "description": "An object that represents the metadata and configuration settings for the Storage Gateway service Tape Gateway type on an Amazon Web Services Snow Family device."
      },
      "EKSOnDeviceServiceConfiguration": {
        "type": "object",
        "properties": {
          "KubernetesVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Kubernetes version for EKS Anywhere on the Snow Family device."
              }
            ]
          },
          "EKSAnywhereVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The version of EKS Anywhere on the Snow Family device."
              }
            ]
          }
        },
        "description": "An object representing the metadata and configuration settings of EKS Anywhere on the Snow Family device."
      },
      "S3OnDeviceServiceConfiguration": {
        "type": "object",
        "properties": {
          "StorageLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/S3StorageLimit"
              },
              {
                "description": "If the specified storage limit value matches storage limit of one of the defined configurations, that configuration will be used. If the specified storage limit value does not match any defined configuration, the request will fail. If more than one configuration has the same storage limit as specified, the other input need to be provided."
              }
            ]
          },
          "StorageUnit": {
            "allOf": [
              {
                "$ref": "#/$defs/StorageUnit"
              },
              {
                "description": "Storage unit. Currently the only supported unit is TB."
              }
            ]
          },
          "ServiceSize": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceSize"
              },
              {
                "description": "Applicable when creating a cluster. Specifies how many nodes are needed for Amazon S3 compatible storage on Snow family devices. If specified, the other input can be omitted."
              }
            ]
          },
          "FaultTolerance": {
            "allOf": [
              {
                "$ref": "#/$defs/NodeFaultTolerance"
              },
              {
                "description": "&gt;Fault tolerance level of the cluster. This indicates the number of nodes that can go down without degrading the performance of the cluster. This additional input helps when the specified <code>StorageLimit</code> matches more than one Amazon S3 compatible storage on Snow family devices service configuration."
              }
            ]
          }
        },
        "description": "Amazon S3 compatible storage on Snow family devices configuration items."
      },
      "S3StorageLimit": {
        "type": "number",
        "format": "double",
        "minimum": 0
      },
      "ServiceSize": {
        "type": "integer",
        "minimum": 3,
        "maximum": 16
      },
      "NodeFaultTolerance": {
        "type": "integer",
        "minimum": 1,
        "maximum": 4
      },
      "AddressId": {
        "type": "string",
        "pattern": "ADID[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
        "minLength": 40,
        "maxLength": 40
      },
      "ShippingOption": {
        "type": "string",
        "enum": [
          "SECOND_DAY",
          "NEXT_DAY",
          "EXPRESS",
          "STANDARD"
        ]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "SnsTopicARN": {
            "allOf": [
              {
                "$ref": "#/$defs/SnsTopicARN"
              },
              {
                "description": "<p>The new SNS <code>TopicArn</code> that you want to associate with this job. You can create Amazon Resource Names (ARNs) for topics by using the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_CreateTopic.html\">CreateTopic</a> Amazon SNS API action.</p> <p>You can subscribe email addresses to an Amazon SNS topic through the Amazon Web Services Management Console, or by using the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Subscribe.html\">Subscribe</a> Amazon Simple Notification Service (Amazon SNS) API action.</p>"
              }
            ]
          },
          "JobStatesToNotify": {
            "allOf": [
              {
                "$ref": "#/$defs/JobStateList"
              },
              {
                "description": "The list of job states that will trigger a notification for this job."
              }
            ]
          },
          "NotifyAll": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Any change in job state will trigger a notification for this job."
              }
            ]
          },
          "DevicePickupSnsTopicARN": {
            "allOf": [
              {
                "$ref": "#/$defs/SnsTopicARN"
              },
              {
                "description": "Used to send SNS notifications for the person picking up the device (identified during job creation)."
              }
            ]
          }
        },
        "description": "<p>The Amazon Simple Notification Service (Amazon SNS) notification settings associated with a specific job. The <code>Notification</code> object is returned as a part of the response syntax of the <code>DescribeJob</code> action in the <code>JobMetadata</code> data type.</p> <p>When the notification settings are defined during job creation, you can choose to notify based on a specific set of job states using the <code>JobStatesToNotify</code> array of strings, or you can specify that you want to have Amazon SNS notifications sent out for all job states with <code>NotifyAll</code> set to true.</p>"
      },
      "SnsTopicARN": {
        "type": "string",
        "pattern": "arn:aws.*:sns:.*:[0-9]{12}:.*",
        "maxLength": 255
      },
      "JobStateList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/JobState"
        }
      },
      "JobState": {
        "type": "string",
        "enum": [
          "New",
          "PreparingAppliance",
          "PreparingShipment",
          "InTransitToCustomer",
          "WithCustomer",
          "InTransitToAWS",
          "WithAWSSortingFacility",
          "WithAWS",
          "InProgress",
          "Complete",
          "Cancelled",
          "Listing",
          "Pending"
        ]
      },
      "Boolean": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://snowball.us-east-1.amazonaws.com/#X-Amz-Target=AWSIESnowballJobManagementService.UpdateCluster"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
