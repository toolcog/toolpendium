{
  "name": "CreateAddress",
  "description": "Creates an address for a Snow device to be shipped to. In most regions, addresses are validated at the time of creation. The address you provide must be located within the serviceable area of your region. If the address is invalid or unsupported, then an exception is thrown.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSIESnowballJobManagementService.CreateAddress"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateAddressRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateAddressRequest": {
        "type": "object",
        "required": [
          "Address"
        ],
        "title": "CreateAddressRequest",
        "properties": {
          "Address": {
            "allOf": [
              {
                "$ref": "#/$defs/Address"
              },
              {
                "description": "The address that you want the Snow device shipped to."
              }
            ]
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "AddressId": {
            "allOf": [
              {
                "$ref": "#/$defs/AddressId"
              },
              {
                "description": "The unique ID for an address."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a person to receive a Snow device at an address."
              }
            ]
          },
          "Company": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the company to receive a Snow device at an address."
              }
            ]
          },
          "Street1": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The first line in a street address that a Snow device is to be delivered to."
              }
            ]
          },
          "Street2": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The second line in a street address that a Snow device is to be delivered to."
              }
            ]
          },
          "Street3": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The third line in a street address that a Snow device is to be delivered to."
              }
            ]
          },
          "City": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The city in an address that a Snow device is to be delivered to."
              }
            ]
          },
          "StateOrProvince": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The state or province in an address that a Snow device is to be delivered to."
              }
            ]
          },
          "PrefectureOrDistrict": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "This field is no longer used and the value is ignored."
              }
            ]
          },
          "Landmark": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "This field is no longer used and the value is ignored."
              }
            ]
          },
          "Country": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The country in an address that a Snow device is to be delivered to."
              }
            ]
          },
          "PostalCode": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The postal code in an address that a Snow device is to be delivered to."
              }
            ]
          },
          "PhoneNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The phone number associated with an address that a Snow device is to be delivered to."
              }
            ]
          },
          "IsRestricted": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "If the address you are creating is a primary address, then set this option to true. This field is not supported in most regions."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/AddressType"
              },
              {
                "description": "Differentiates between delivery address and pickup address in the customer account. Provided at job creation."
              }
            ]
          }
        },
        "description": "The address that you want the Snow device(s) associated with a specific job to be shipped to. Addresses are validated at the time of creation. The address you provide must be located within the serviceable area of your region. Although no individual elements of the <code>Address</code> are required, if the address is invalid or unsupported, then an exception is thrown."
      },
      "AddressId": {
        "type": "string",
        "pattern": "ADID[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
        "minLength": 40,
        "maxLength": 40
      },
      "String": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 1024
      },
      "Boolean": {
        "type": "boolean"
      },
      "AddressType": {
        "type": "string",
        "enum": [
          "CUST_PICKUP",
          "AWS_SHIP"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://snowball.us-east-1.amazonaws.com/#X-Amz-Target=AWSIESnowballJobManagementService.CreateAddress"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AddressId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
