{
  "name": "PutHypervisorPropertyMappings",
  "description": "This action sets the property mappings for the specified hypervisor. A hypervisor property mapping displays the relationship of entity properties available from the on-premises hypervisor to the properties available in Amazon Web Services.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "BackupOnPremises_v20210101.PutHypervisorPropertyMappings"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutHypervisorPropertyMappingsInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutHypervisorPropertyMappingsInput": {
        "type": "object",
        "required": [
          "HypervisorArn",
          "IamRoleArn",
          "VmwareToAwsTagMappings"
        ],
        "title": "PutHypervisorPropertyMappingsInput",
        "properties": {
          "HypervisorArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the hypervisor."
              }
            ]
          },
          "IamRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/IamRoleArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the IAM role."
              }
            ]
          },
          "VmwareToAwsTagMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/VmwareToAwsTagMappings"
              },
              {
                "description": "This action requests the mappings of on-premises VMware tags to the Amazon Web Services tags."
              }
            ]
          }
        }
      },
      "ServerArn": {
        "type": "string",
        "pattern": "^arn:(aws|aws-cn|aws-us-gov):backup-gateway(:[a-zA-Z-0-9]+){3}\\/[a-zA-Z-0-9]+$",
        "minLength": 50,
        "maxLength": 500
      },
      "IamRoleArn": {
        "type": "string",
        "pattern": "^arn:(aws|aws-cn|aws-us-gov):iam::([0-9]+):role/(\\S+)$",
        "minLength": 20,
        "maxLength": 2048
      },
      "VmwareToAwsTagMappings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VmwareToAwsTagMapping"
        }
      },
      "VmwareToAwsTagMapping": {
        "type": "object",
        "required": [
          "AwsTagKey",
          "AwsTagValue",
          "VmwareCategory",
          "VmwareTagName"
        ],
        "properties": {
          "AwsTagKey": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key part of the Amazon Web Services tag's key-value pair."
              }
            ]
          },
          "AwsTagValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value part of the Amazon Web Services tag's key-value pair."
              }
            ]
          },
          "VmwareCategory": {
            "allOf": [
              {
                "$ref": "#/$defs/VmwareCategory"
              },
              {
                "description": "The is the category of VMware."
              }
            ]
          },
          "VmwareTagName": {
            "allOf": [
              {
                "$ref": "#/$defs/VmwareTagName"
              },
              {
                "description": "This is the user-defined name of a VMware tag."
              }
            ]
          }
        },
        "description": "This displays the mapping of on-premises VMware tags to the corresponding Amazon Web Services tags."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^[^\\x00]*$",
        "minLength": 0,
        "maxLength": 256
      },
      "VmwareCategory": {
        "type": "string",
        "minLength": 1,
        "maxLength": 80
      },
      "VmwareTagName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 80
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://backup-gateway.us-east-1.amazonaws.com/#X-Amz-Target=BackupOnPremises_v20210101.PutHypervisorPropertyMappings"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**HypervisorArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
