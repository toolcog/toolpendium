{
  "name": "UpdateLayout",
  "description": "<p>Updates the attributes of an existing layout.</p> <p>If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.</p> <p>A <code>ValidationException</code> is returned when you add non-existent <code>fieldIds</code> to a layout.</p> <note> <p>Title and Status fields cannot be part of layouts because they are not configurable.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "domainId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500,
        "description": "The unique identifier of the Cases domain. "
      },
      "layoutId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500,
        "description": "The unique identifier of the layout."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "content": {
            "description": "Object to store union of different versions of layout content.",
            "type": "object",
            "properties": {
              "basic": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BasicLayout"
                  },
                  {
                    "description": "Content specific to <code>BasicLayout</code> type. It configures fields in the top panel and More Info tab of Cases user interface."
                  }
                ]
              }
            }
          },
          "name": {
            "description": "The name of the layout. It must be unique per domain.",
            "type": "string",
            "pattern": "^.*[\\S]$",
            "minLength": 1,
            "maxLength": 100
          }
        }
      }
    },
    "required": [
      "domainId",
      "layoutId",
      "body"
    ],
    "$defs": {
      "BasicLayout": {
        "type": "object",
        "properties": {
          "moreInfo": {
            "allOf": [
              {
                "$ref": "#/$defs/LayoutSections"
              },
              {
                "description": "This represents sections in a tab of the page layout."
              }
            ]
          },
          "topPanel": {
            "allOf": [
              {
                "$ref": "#/$defs/LayoutSections"
              },
              {
                "description": "This represents sections in a panel of the page layout."
              }
            ]
          }
        },
        "description": "Content specific to <code>BasicLayout</code> type. It configures fields in the top panel and More Info tab of agent application. "
      },
      "LayoutSections": {
        "type": "object",
        "properties": {
          "sections": {
            "$ref": "#/$defs/SectionsList"
          }
        },
        "description": "Ordered list containing different kinds of sections that can be added. A LayoutSections object can only contain one section."
      },
      "SectionsList": {
        "type": "array",
        "description": "Ordered list containing different kinds of sections that can be added.",
        "items": {
          "$ref": "#/$defs/Section"
        },
        "minItems": 0,
        "maxItems": 1
      },
      "Section": {
        "type": "object",
        "properties": {
          "fieldGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldGroup"
              },
              {
                "description": "Consists of a group of fields and associated properties."
              }
            ]
          }
        },
        "description": "This represents a sections within a panel or tab of the page layout."
      },
      "FieldGroup": {
        "type": "object",
        "required": [
          "fields"
        ],
        "properties": {
          "fields": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldGroupFieldsList"
              },
              {
                "description": "Represents an ordered list containing field related information."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldGroupNameString"
              },
              {
                "description": "Name of the field group."
              }
            ]
          }
        },
        "description": "Object for a group of fields and associated properties."
      },
      "FieldGroupFieldsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FieldItem"
        },
        "minItems": 0,
        "maxItems": 100
      },
      "FieldItem": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "Unique identifier of a field."
              }
            ]
          }
        },
        "description": "Object for field related information."
      },
      "FieldId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500
      },
      "FieldGroupNameString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://cases.us-east-1.amazonaws.com/domains/{domainId}/layouts/{layoutId}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
