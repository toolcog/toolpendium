{
  "name": "SearchRelatedItems",
  "description": "<p>Searches for related items that are associated with a case.</p> <note> <p>If no filters are provided, this returns all related items associated with a case.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "caseId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500,
        "description": "A unique identifier of the case."
      },
      "domainId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500,
        "description": "The unique identifier of the Cases domain. "
      },
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "filters": {
            "description": "The list of types of related items and their parameters to use for filtering.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/RelatedItemTypeFilter"
            },
            "minItems": 0,
            "maxItems": 10
          },
          "maxResults": {
            "description": "The maximum number of results to return per page.",
            "type": "integer",
            "minimum": 1,
            "maximum": 25
          },
          "nextToken": {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "type": "string",
            "minLength": 0,
            "maxLength": 9000
          }
        }
      }
    },
    "required": [
      "caseId",
      "domainId",
      "body"
    ],
    "$defs": {
      "RelatedItemTypeFilter": {
        "type": "object",
        "properties": {
          "comment": {
            "allOf": [
              {
                "$ref": "#/$defs/CommentFilter"
              },
              {
                "description": "A filter for related items of type <code>Comment</code>."
              }
            ]
          },
          "contact": {
            "allOf": [
              {
                "$ref": "#/$defs/ContactFilter"
              },
              {
                "description": "A filter for related items of type <code>Contact</code>."
              }
            ]
          }
        },
        "description": "The list of types of related items and their parameters to use for filtering."
      },
      "CommentFilter": {
        "type": "object",
        "properties": {},
        "description": "A filter for related items of type <code>Comment</code>."
      },
      "ContactFilter": {
        "type": "object",
        "properties": {
          "channel": {
            "allOf": [
              {
                "$ref": "#/$defs/ContactFilterChannelList"
              },
              {
                "description": "A list of channels to filter on for related items of type <code>Contact</code>."
              }
            ]
          },
          "contactArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ContactArn"
              },
              {
                "description": "A unique identifier of a contact in Amazon Connect."
              }
            ]
          }
        },
        "description": "A filter for related items of type <code>Contact</code>."
      },
      "ContactFilterChannelList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Channel"
        },
        "minItems": 0,
        "maxItems": 3
      },
      "Channel": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "ContactArn": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cases.us-east-1.amazonaws.com/domains/{domainId}/cases/{caseId}/related-items-search{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**nextToken**",
            "**relatedItems**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
