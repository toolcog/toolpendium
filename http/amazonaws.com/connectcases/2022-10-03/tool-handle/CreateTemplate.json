{
  "name": "CreateTemplate",
  "description": "Creates a template in the Cases domain. This template is used to define the case object model (that is, to define what data can be captured on cases) in a Cases domain. A template must have a unique name within a domain, and it must reference existing field IDs and layout IDs. Additionally, multiple fields with same IDs are not allowed within the same Template. A template can be either Active or Inactive, as indicated by its status. Inactive templates cannot be used to create cases.",
  "parameters": {
    "type": "object",
    "properties": {
      "domainId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500,
        "description": "The unique identifier of the Cases domain. "
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "description": {
            "description": "A brief description of the template.",
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "layoutConfiguration": {
            "description": "Object to store configuration of layouts associated to the template.",
            "type": "object",
            "properties": {
              "defaultLayout": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LayoutId"
                  },
                  {
                    "description": " Unique identifier of a layout. "
                  }
                ]
              }
            }
          },
          "name": {
            "description": "A name for the template. It must be unique per domain.",
            "type": "string",
            "pattern": "^.*[\\S]$",
            "minLength": 1,
            "maxLength": 100
          },
          "requiredFields": {
            "description": "A list of fields that must contain a value for a case to be successfully created with this template.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/RequiredField"
            },
            "minItems": 0,
            "maxItems": 100
          },
          "status": {
            "description": "The status of the template.",
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ]
          }
        }
      }
    },
    "required": [
      "domainId",
      "body"
    ],
    "$defs": {
      "LayoutId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500
      },
      "RequiredField": {
        "type": "object",
        "required": [
          "fieldId"
        ],
        "properties": {
          "fieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "Unique identifier of a field."
              }
            ]
          }
        },
        "description": "List of fields that must have a value provided to create a case."
      },
      "FieldId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cases.us-east-1.amazonaws.com/domains/{domainId}/templates"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**templateArn**",
            "**templateId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
