{
  "name": "DescribeStream",
  "description": "<p>Describes the specified Kinesis data stream.</p> <note> <p>This API has been revised. It's highly recommended that you use the <a>DescribeStreamSummary</a> API to get a summarized description of the specified Kinesis data stream and the <a>ListShards</a> API to list the shards in a specified data stream and obtain information about each shard. </p> </note> <note> <p>When invoking this API, it is recommended you use the <code>StreamARN</code> input parameter rather than the <code>StreamName</code> input parameter.</p> </note> <p>The information returned includes the stream name, Amazon Resource Name (ARN), creation time, enhanced metric configuration, and shard map. The shard map is an array of shard objects. For each shard object, there is the hash key and sequence number ranges that the shard spans, and the IDs of any earlier shards that played in a role in creating the shard. Every record ingested in the stream is identified by a sequence number, which is assigned when the record is put into the stream.</p> <p>You can limit the number of shards returned by each call. For more information, see <a href=\"https://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-retrieve-shards.html\">Retrieving Shards from a Stream</a> in the <i>Amazon Kinesis Data Streams Developer Guide</i>.</p> <p>There are no guarantees about the chronological order shards returned. To process shards in chronological order, use the ID of the parent shard to track the lineage to the oldest shard.</p> <p>This operation has a limit of 10 transactions per second per account.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "Limit": {
        "type": "string",
        "description": "Pagination limit"
      },
      "ExclusiveStartShardId": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Kinesis_20131202.DescribeStream"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeStreamInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeStreamInput": {
        "type": "object",
        "title": "DescribeStreamInput",
        "properties": {
          "StreamName": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamName"
              },
              {
                "description": "The name of the stream to describe."
              }
            ]
          },
          "Limit": {
            "allOf": [
              {
                "$ref": "#/$defs/DescribeStreamInputLimit"
              },
              {
                "description": "The maximum number of shards to return in a single call. The default value is 100. If you specify a value greater than 100, at most 100 results are returned."
              }
            ]
          },
          "ExclusiveStartShardId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShardId"
              },
              {
                "description": "<p>The shard ID of the shard to start with.</p> <p>Specify this parameter to indicate that you want to describe the stream starting with the shard whose ID immediately follows <code>ExclusiveStartShardId</code>.</p> <p>If you don't specify this parameter, the default behavior for <code>DescribeStream</code> is to describe the stream starting with the first shard in the stream.</p>"
              }
            ]
          },
          "StreamARN": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamARN"
              },
              {
                "description": "The ARN of the stream."
              }
            ]
          }
        },
        "description": "Represents the input for <code>DescribeStream</code>."
      },
      "StreamName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "DescribeStreamInputLimit": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10000
      },
      "ShardId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "StreamARN": {
        "type": "string",
        "pattern": "arn:aws.*:kinesis:.*:\\d{12}:stream/\\S+",
        "minLength": 1,
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://kinesis.us-east-1.amazonaws.com/#X-Amz-Target=Kinesis_20131202.DescribeStream{?Limit,ExclusiveStartShardId}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the output for <code>DescribeStream</code>.",
        "**Key properties:**",
        {
          "$ul": [
            "**StreamDescription**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
