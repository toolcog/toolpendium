{
  "name": "BatchGetAssetPropertyValueHistory",
  "description": "Gets the historical values for one or more asset properties. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values\">Querying historical values</a> in the <i>IoT SiteWise User Guide</i>.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "entries"
        ],
        "properties": {
          "entries": {
            "description": "The list of asset property historical value entries for the batch get request. You can specify up to 16 entries per request.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/BatchGetAssetPropertyValueHistoryEntry"
            }
          },
          "nextToken": {
            "description": "The token to be used for the next set of paginated results.",
            "type": "string",
            "pattern": "[A-Za-z0-9+/=]+",
            "minLength": 1,
            "maxLength": 4096
          },
          "maxResults": {
            "description": "<p>The maximum number of results to return for each paginated request. A result set is returned in the two cases, whichever occurs first.</p> <ul> <li> <p>The size of the result set is equal to 4 MB.</p> </li> <li> <p>The number of data points in the result set is equal to the value of <code>maxResults</code>. The maximum value of <code>maxResults</code> is 20000.</p> </li> </ul>",
            "type": "integer",
            "minimum": 1
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "BatchGetAssetPropertyValueHistoryEntry": {
        "type": "object",
        "required": [
          "entryId"
        ],
        "properties": {
          "entryId": {
            "allOf": [
              {
                "$ref": "#/$defs/EntryId"
              },
              {
                "description": "The ID of the entry."
              }
            ]
          },
          "assetId": {
            "allOf": [
              {
                "$ref": "#/$defs/ID"
              },
              {
                "description": "The ID of the asset in which the asset property was created."
              }
            ]
          },
          "propertyId": {
            "allOf": [
              {
                "$ref": "#/$defs/ID"
              },
              {
                "description": "The ID of the asset property."
              }
            ]
          },
          "propertyAlias": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyAlias"
              },
              {
                "description": "The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html\">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>."
              }
            ]
          },
          "startDate": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time."
              }
            ]
          },
          "endDate": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time."
              }
            ]
          },
          "qualities": {
            "allOf": [
              {
                "$ref": "#/$defs/Qualities"
              },
              {
                "description": "The quality by which to filter asset data."
              }
            ]
          },
          "timeOrdering": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeOrdering"
              },
              {
                "description": "<p>The chronological sorting order of the requested information.</p> <p>Default: <code>ASCENDING</code> </p>"
              }
            ]
          }
        },
        "description": "<p>Contains information for an asset property historical value entry that is associated with the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html\">BatchGetAssetPropertyValueHistory</a> API.</p> <p>To identify an asset property, you must specify one of the following:</p> <ul> <li> <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p> </li> <li> <p>A <code>propertyAlias</code>, which is a data stream alias (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\">UpdateAssetProperty</a>.</p> </li> </ul>"
      },
      "EntryId": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "ID": {
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "minLength": 36,
        "maxLength": 36
      },
      "AssetPropertyAlias": {
        "type": "string",
        "pattern": "[^\\u0000-\\u001F\\u007F]+",
        "minLength": 1,
        "maxLength": 2048
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "Qualities": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Quality"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "Quality": {
        "type": "string",
        "enum": [
          "GOOD",
          "BAD",
          "UNCERTAIN"
        ]
      },
      "TimeOrdering": {
        "type": "string",
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iotsitewise.us-east-1.amazonaws.com/properties/batch/history{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errorEntries**",
            "**successEntries**",
            "**skippedEntries**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
