{
  "name": "UpdateAssetModel",
  "description": "<p>Updates an asset model and all of the assets that were created from the model. Each asset created from the model inherits the updated asset model's property and hierarchy definitions. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html\">Updating assets and models</a> in the <i>IoT SiteWise User Guide</i>.</p> <important> <p>This operation overwrites the existing model with the provided model. To avoid deleting your asset model's properties or hierarchies, you must include their IDs and definitions in the updated asset model payload. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModel.html\">DescribeAssetModel</a>.</p> <p>If you remove a property from an asset model, IoT SiteWise deletes all previous data for that property. If you remove a hierarchy definition from an asset model, IoT SiteWise disassociates every asset associated with that hierarchy. You can't change the type or data type of an existing property.</p> </important>",
  "parameters": {
    "type": "object",
    "properties": {
      "assetModelId": {
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "minLength": 36,
        "maxLength": 36,
        "description": "The ID of the asset model to update."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "assetModelName"
        ],
        "properties": {
          "assetModelName": {
            "description": "A unique, friendly name for the asset model.",
            "type": "string",
            "pattern": "[^\\u0000-\\u001F\\u007F]+",
            "minLength": 1,
            "maxLength": 256
          },
          "assetModelDescription": {
            "description": "A description for the asset model.",
            "type": "string",
            "pattern": "[^\\u0000-\\u001F\\u007F]+",
            "minLength": 1,
            "maxLength": 2048
          },
          "assetModelProperties": {
            "description": "<p>The updated property definitions of the asset model. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html\">Asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 200 properties per asset model. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AssetModelProperty"
            }
          },
          "assetModelHierarchies": {
            "description": "<p>The updated hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html\">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 10 hierarchies per asset model. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AssetModelHierarchy"
            }
          },
          "assetModelCompositeModels": {
            "description": "The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. Use composite asset models to define alarms on this asset model.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AssetModelCompositeModel"
            }
          },
          "clientToken": {
            "description": "A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.",
            "type": "string",
            "pattern": "\\S{36,64}",
            "minLength": 36,
            "maxLength": 64
          }
        }
      }
    },
    "required": [
      "assetModelId",
      "body"
    ],
    "$defs": {
      "AssetModelProperty": {
        "type": "object",
        "required": [
          "name",
          "dataType",
          "type"
        ],
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/ID"
              },
              {
                "description": "The ID of the asset model property."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name of the asset model property."
              }
            ]
          },
          "dataType": {
            "allOf": [
              {
                "$ref": "#/$defs/PropertyDataType"
              },
              {
                "description": "The data type of the asset model property."
              }
            ]
          },
          "dataTypeSpec": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The data type of the structure for this property. This parameter exists on properties that have the <code>STRUCT</code> data type."
              }
            ]
          },
          "unit": {
            "allOf": [
              {
                "$ref": "#/$defs/PropertyUnit"
              },
              {
                "description": "The unit of the asset model property, such as <code>Newtons</code> or <code>RPM</code>."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/PropertyType"
              },
              {
                "description": "The property type (see <code>PropertyType</code>)."
              }
            ]
          }
        },
        "description": "Contains information about an asset model property."
      },
      "ID": {
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "minLength": 36,
        "maxLength": 36
      },
      "Name": {
        "type": "string",
        "pattern": "[^\\u0000-\\u001F\\u007F]+",
        "minLength": 1,
        "maxLength": 256
      },
      "PropertyDataType": {
        "type": "string",
        "enum": [
          "STRING",
          "INTEGER",
          "DOUBLE",
          "BOOLEAN",
          "STRUCT"
        ]
      },
      "PropertyUnit": {
        "type": "string",
        "pattern": "[^\\u0000-\\u001F\\u007F]+",
        "minLength": 1,
        "maxLength": 256
      },
      "PropertyType": {
        "type": "object",
        "properties": {
          "attribute": {
            "allOf": [
              {
                "$ref": "#/$defs/Attribute"
              },
              {
                "description": "Specifies an asset attribute property. An attribute generally contains static information, such as the serial number of an <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">IIoT</a> wind turbine."
              }
            ]
          },
          "measurement": {
            "allOf": [
              {
                "$ref": "#/$defs/Measurement"
              },
              {
                "description": "Specifies an asset measurement property. A measurement represents a device's raw sensor data stream, such as timestamped temperature values or timestamped power values."
              }
            ]
          },
          "transform": {
            "allOf": [
              {
                "$ref": "#/$defs/Transform"
              },
              {
                "description": "Specifies an asset transform property. A transform contains a mathematical expression that maps a property's data points from one form to another, such as a unit conversion from Celsius to Fahrenheit."
              }
            ]
          },
          "metric": {
            "allOf": [
              {
                "$ref": "#/$defs/Metric"
              },
              {
                "description": "Specifies an asset metric property. A metric contains a mathematical expression that uses aggregate functions to process all input data points over a time interval and output a single data point, such as to calculate the average hourly temperature."
              }
            ]
          }
        },
        "description": "Contains a property type, which can be one of <code>attribute</code>, <code>measurement</code>, <code>metric</code>, or <code>transform</code>."
      },
      "Attribute": {
        "type": "object",
        "properties": {
          "defaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultValue"
              },
              {
                "description": "The default value of the asset model property attribute. All assets that you create from the asset model contain this attribute value. You can update an attribute's value after you create an asset. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-attribute-values.html\">Updating attribute values</a> in the <i>IoT SiteWise User Guide</i>."
              }
            ]
          }
        },
        "description": "Contains an asset attribute property. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#attributes\">Attributes</a> in the <i>IoT SiteWise User Guide</i>."
      },
      "DefaultValue": {
        "type": "string",
        "pattern": "[^\\u0000-\\u001F\\u007F]+",
        "minLength": 1,
        "maxLength": 1024
      },
      "Measurement": {
        "type": "object",
        "properties": {
          "processingConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasurementProcessingConfig"
              },
              {
                "description": "The processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud."
              }
            ]
          }
        },
        "description": "Contains an asset measurement property. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#measurements\">Measurements</a> in the <i>IoT SiteWise User Guide</i>."
      },
      "MeasurementProcessingConfig": {
        "type": "object",
        "required": [
          "forwardingConfig"
        ],
        "properties": {
          "forwardingConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ForwardingConfig"
              },
              {
                "description": "The forwarding configuration for the given measurement property. "
              }
            ]
          }
        },
        "description": "The processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud."
      },
      "ForwardingConfig": {
        "type": "object",
        "required": [
          "state"
        ],
        "properties": {
          "state": {
            "allOf": [
              {
                "$ref": "#/$defs/ForwardingConfigState"
              },
              {
                "description": "The forwarding state for the given property. "
              }
            ]
          }
        },
        "description": "The forwarding configuration for a given property."
      },
      "ForwardingConfigState": {
        "type": "string",
        "enum": [
          "DISABLED",
          "ENABLED"
        ]
      },
      "Transform": {
        "type": "object",
        "required": [
          "expression",
          "variables"
        ],
        "properties": {
          "expression": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "<p>The mathematical expression that defines the transformation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>"
              }
            ]
          },
          "variables": {
            "allOf": [
              {
                "$ref": "#/$defs/ExpressionVariables"
              },
              {
                "description": "The list of variables used in the expression."
              }
            ]
          },
          "processingConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/TransformProcessingConfig"
              },
              {
                "description": "The processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud."
              }
            ]
          }
        },
        "description": "<p>Contains an asset transform property. A transform is a one-to-one mapping of a property's data points from one form to another. For example, you can use a transform to convert a Celsius data stream to Fahrenheit by applying the transformation expression to each data point of the Celsius stream. A transform can only have a data type of <code>DOUBLE</code> and consume properties with data types of <code>INTEGER</code> or <code>DOUBLE</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#transforms\">Transforms</a> in the <i>IoT SiteWise User Guide</i>.</p>"
      },
      "Expression": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "ExpressionVariables": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ExpressionVariable"
        }
      },
      "ExpressionVariable": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/VariableName"
              },
              {
                "description": "The friendly name of the variable to be used in the expression."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/VariableValue"
              },
              {
                "description": "The variable that identifies an asset property from which to use values."
              }
            ]
          }
        },
        "description": "Contains expression variable information."
      },
      "VariableName": {
        "type": "string",
        "pattern": "^[a-z][a-z0-9_]*$",
        "minLength": 1,
        "maxLength": 64
      },
      "VariableValue": {
        "type": "object",
        "required": [
          "propertyId"
        ],
        "properties": {
          "propertyId": {
            "allOf": [
              {
                "$ref": "#/$defs/Macro"
              },
              {
                "description": "The ID of the property to use as the variable. You can use the property <code>name</code> if it's from the same asset model."
              }
            ]
          },
          "hierarchyId": {
            "allOf": [
              {
                "$ref": "#/$defs/Macro"
              },
              {
                "description": "<p>The ID of the hierarchy to query for the property ID. You can use the hierarchy's name instead of the hierarchy's ID.</p> <p>You use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same <code>propertyId</code>. For example, you might have separately grouped assets that come from the same asset model. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html\">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>"
              }
            ]
          }
        },
        "description": "Identifies a property value used in an expression."
      },
      "Macro": {
        "type": "string",
        "pattern": "[^\\u0000-\\u001F\\u007F]+",
        "minLength": 1,
        "maxLength": 256
      },
      "TransformProcessingConfig": {
        "type": "object",
        "required": [
          "computeLocation"
        ],
        "properties": {
          "computeLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/ComputeLocation"
              },
              {
                "description": "The compute location for the given transform property. "
              }
            ]
          },
          "forwardingConfig": {
            "$ref": "#/$defs/ForwardingConfig"
          }
        },
        "description": "The processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud."
      },
      "ComputeLocation": {
        "type": "string",
        "enum": [
          "EDGE",
          "CLOUD"
        ]
      },
      "Metric": {
        "type": "object",
        "required": [
          "expression",
          "variables",
          "window"
        ],
        "properties": {
          "expression": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "<p>The mathematical expression that defines the metric aggregation function. You can specify up to 10 variables per expression. You can specify up to 10 functions per expression. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>"
              }
            ]
          },
          "variables": {
            "allOf": [
              {
                "$ref": "#/$defs/ExpressionVariables"
              },
              {
                "description": "The list of variables used in the expression."
              }
            ]
          },
          "window": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricWindow"
              },
              {
                "description": "The window (time interval) over which IoT SiteWise computes the metric's aggregation expression. IoT SiteWise computes one data point per <code>window</code>."
              }
            ]
          },
          "processingConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricProcessingConfig"
              },
              {
                "description": "The processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud."
              }
            ]
          }
        },
        "description": "<p>Contains an asset metric property. With metrics, you can calculate aggregate functions, such as an average, maximum, or minimum, as specified through an expression. A metric maps several values to a single value (such as a sum).</p> <p>The maximum number of dependent/cascading variables used in any one metric calculation is 10. Therefore, a <i>root</i> metric can have up to 10 cascading metrics in its computational dependency tree. Additionally, a metric can only have a data type of <code>DOUBLE</code> and consume properties with data types of <code>INTEGER</code> or <code>DOUBLE</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#metrics\">Metrics</a> in the <i>IoT SiteWise User Guide</i>.</p>"
      },
      "MetricWindow": {
        "type": "object",
        "properties": {
          "tumbling": {
            "allOf": [
              {
                "$ref": "#/$defs/TumblingWindow"
              },
              {
                "description": "The tumbling time interval window."
              }
            ]
          }
        },
        "description": "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on)."
      },
      "TumblingWindow": {
        "type": "object",
        "required": [
          "interval"
        ],
        "properties": {
          "interval": {
            "allOf": [
              {
                "$ref": "#/$defs/Interval"
              },
              {
                "description": "<p>The time interval for the tumbling window. The interval time must be between 1 minute and 1 week.</p> <p>IoT SiteWise computes the <code>1w</code> interval the end of Sunday at midnight each week (UTC), the <code>1d</code> interval at the end of each day at midnight (UTC), the <code>1h</code> interval at the end of each hour, and so on. </p> <p>When IoT SiteWise aggregates data points for metric computations, the start of each interval is exclusive and the end of each interval is inclusive. IoT SiteWise places the computed data point at the end of the interval.</p>"
              }
            ]
          },
          "offset": {
            "allOf": [
              {
                "$ref": "#/$defs/Offset"
              },
              {
                "description": "<p>The offset for the tumbling window. The <code>offset</code> parameter accepts the following:</p> <ul> <li> <p>The offset time.</p> <p>For example, if you specify <code>18h</code> for <code>offset</code> and <code>1d</code> for <code>interval</code>, IoT SiteWise aggregates data in one of the following ways:</p> <ul> <li> <p>If you create the metric before or at 6 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.</p> </li> <li> <p>If you create the metric after 6 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.</p> </li> </ul> </li> <li> <p>The ISO 8601 format.</p> <p>For example, if you specify <code>PT18H</code> for <code>offset</code> and <code>1d</code> for <code>interval</code>, IoT SiteWise aggregates data in one of the following ways:</p> <ul> <li> <p>If you create the metric before or at 6 PM (UTC), you get the first aggregation result at 6 PM (UTC) on the day when you create the metric.</p> </li> <li> <p>If you create the metric after 6 PM (UTC), you get the first aggregation result at 6 PM (UTC) the next day.</p> </li> </ul> </li> <li> <p>The 24-hour clock.</p> <p>For example, if you specify <code>00:03:00</code> for <code>offset</code>, <code>5m</code> for <code>interval</code>, and you create the metric at 2 PM (UTC), you get the first aggregation result at 2:03 PM (UTC). You get the second aggregation result at 2:08 PM (UTC). </p> </li> <li> <p>The offset time zone.</p> <p>For example, if you specify <code>2021-07-23T18:00-08</code> for <code>offset</code> and <code>1d</code> for <code>interval</code>, IoT SiteWise aggregates data in one of the following ways:</p> <ul> <li> <p>If you create the metric before or at 6 PM (PST), you get the first aggregation result at 6 PM (PST) on the day when you create the metric.</p> </li> <li> <p>If you create the metric after 6 PM (PST), you get the first aggregation result at 6 PM (PST) the next day.</p> </li> </ul> </li> </ul>"
              }
            ]
          }
        },
        "description": "<p>Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time window. You can use this window in metrics to aggregate data from properties and other assets.</p> <p>You can use <code>m</code>, <code>h</code>, <code>d</code>, and <code>w</code> when you specify an interval or offset. Note that <code>m</code> represents minutes, <code>h</code> represents hours, <code>d</code> represents days, and <code>w</code> represents weeks. You can also use <code>s</code> to represent seconds in <code>offset</code>.</p> <p>The <code>interval</code> and <code>offset</code> parameters support the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 format</a>. For example, <code>PT5S</code> represents 5 seconds, <code>PT5M</code> represents 5 minutes, and <code>PT5H</code> represents 5 hours.</p>"
      },
      "Interval": {
        "type": "string",
        "minLength": 2,
        "maxLength": 23
      },
      "Offset": {
        "type": "string",
        "minLength": 2,
        "maxLength": 25
      },
      "MetricProcessingConfig": {
        "type": "object",
        "required": [
          "computeLocation"
        ],
        "properties": {
          "computeLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/ComputeLocation"
              },
              {
                "description": "The compute location for the given metric property. "
              }
            ]
          }
        },
        "description": "The processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud."
      },
      "AssetModelHierarchy": {
        "type": "object",
        "required": [
          "name",
          "childAssetModelId"
        ],
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/ID"
              },
              {
                "description": "The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name of the asset model hierarchy that you specify by using the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html\">CreateAssetModel</a> or <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html\">UpdateAssetModel</a> API operation."
              }
            ]
          },
          "childAssetModelId": {
            "allOf": [
              {
                "$ref": "#/$defs/ID"
              },
              {
                "description": "The ID of the asset model. All assets in this hierarchy must be instances of the <code>childAssetModelId</code> asset model."
              }
            ]
          }
        },
        "description": "Describes an asset hierarchy that contains a hierarchy's name, ID, and child asset model ID that specifies the type of asset that can be in this hierarchy."
      },
      "AssetModelCompositeModel": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name of the composite model."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "The description of the composite model."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The type of the composite model. For alarm composite models, this type is <code>AWS/ALARM</code>."
              }
            ]
          },
          "properties": {
            "description": "The asset property definitions for this composite model."
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/ID"
              },
              {
                "description": " The ID of the asset model composite model. "
              }
            ]
          }
        },
        "description": "Contains information about a composite model in an asset model. This object contains the asset property definitions that you define in the composite model."
      },
      "Description": {
        "type": "string",
        "pattern": "[^\\u0000-\\u001F\\u007F]+",
        "minLength": 1,
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://iotsitewise.us-east-1.amazonaws.com/asset-models/{assetModelId}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**assetModelStatus**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
