{
  "name": "Rescore",
  "description": "Rescores or re-ranks search results from a search service such as OpenSearch (self managed). You use the semantic search capabilities of Amazon Kendra Intelligent Ranking to improve the search service's results.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSKendraRerankingFrontendService.Rescore"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/RescoreRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "RescoreRequest": {
        "type": "object",
        "required": [
          "RescoreExecutionPlanId",
          "SearchQuery",
          "Documents"
        ],
        "title": "RescoreRequest",
        "properties": {
          "RescoreExecutionPlanId": {
            "allOf": [
              {
                "$ref": "#/$defs/RescoreExecutionPlanId"
              },
              {
                "description": "The identifier of the rescore execution plan. A rescore execution plan is an Amazon Kendra Intelligent Ranking resource used for provisioning the <code>Rescore</code> API."
              }
            ]
          },
          "SearchQuery": {
            "allOf": [
              {
                "$ref": "#/$defs/SearchQuery"
              },
              {
                "description": "The input query from the search service."
              }
            ]
          },
          "Documents": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentList"
              },
              {
                "description": "The list of documents for Amazon Kendra Intelligent Ranking to rescore or rank on."
              }
            ]
          }
        }
      },
      "RescoreExecutionPlanId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9-]*",
        "minLength": 36,
        "maxLength": 36
      },
      "SearchQuery": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1000
      },
      "DocumentList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Document"
        },
        "minItems": 1
      },
      "Document": {
        "type": "object",
        "required": [
          "Id",
          "OriginalScore"
        ],
        "properties": {
          "Id": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentId"
              },
              {
                "description": "The identifier of the document from the search service."
              }
            ]
          },
          "GroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/GroupId"
              },
              {
                "description": "The optional group identifier of the document from the search service. Documents with the same group identifier are grouped together and processed as one document within the service."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentTitle"
              },
              {
                "description": "The title of the search service's document."
              }
            ]
          },
          "Body": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentBody"
              },
              {
                "description": "The body text of the search service's document."
              }
            ]
          },
          "TokenizedTitle": {
            "allOf": [
              {
                "$ref": "#/$defs/TitleTokensList"
              },
              {
                "description": "The title of the search service's document represented as a list of tokens or words. You must choose to provide <code>Title</code> or <code>TokenizedTitle</code>. You cannot provide both."
              }
            ]
          },
          "TokenizedBody": {
            "allOf": [
              {
                "$ref": "#/$defs/BodyTokensList"
              },
              {
                "description": "The body text of the search service's document represented as a list of tokens or words. You must choose to provide <code>Body</code> or <code>TokenizedBody</code>. You cannot provide both."
              }
            ]
          },
          "OriginalScore": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The original document score or rank from the search service. Amazon Kendra Intelligent Ranking gives the document a new score or rank based on its intelligent search algorithms."
              }
            ]
          }
        },
        "description": "Information about a document from a search service such as OpenSearch (self managed). Amazon Kendra Intelligent Ranking uses this information to rank and score on."
      },
      "DocumentId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "GroupId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "DocumentTitle": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "DocumentBody": {
        "type": "string",
        "pattern": "^\\P{C}*$",
        "minLength": 1,
        "maxLength": 2048
      },
      "TitleTokensList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tokens"
        },
        "minItems": 1
      },
      "Tokens": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "BodyTokensList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tokens"
        },
        "minItems": 1
      },
      "Float": {
        "type": "number",
        "format": "float",
        "minimum": -100000,
        "maximum": 100000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://kendra-ranking.us-east-1.api.aws/#X-Amz-Target=AWSKendraRerankingFrontendService.Rescore"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**RescoreId**",
            "**ResultItems**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
