{
  "name": "GetWorkflowExecutionHistory",
  "description": "<p>Returns the history of the specified workflow execution. The results may be split into multiple pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code> returned by the initial call.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.</p> </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies to control this action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code> element to allow or deny permission to call this action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this action's parameters.</p> </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "maximumPageSize": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextPageToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SimpleWorkflowService.GetWorkflowExecutionHistory"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetWorkflowExecutionHistoryInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetWorkflowExecutionHistoryInput": {
        "type": "object",
        "required": [
          "domain",
          "execution"
        ],
        "title": "GetWorkflowExecutionHistoryInput",
        "properties": {
          "domain": {
            "allOf": [
              {
                "$ref": "#/$defs/DomainName"
              },
              {
                "description": "The name of the domain containing the workflow execution."
              }
            ]
          },
          "execution": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkflowExecution"
              },
              {
                "description": "Specifies the workflow execution for which to return the history."
              }
            ]
          },
          "nextPageToken": {
            "allOf": [
              {
                "$ref": "#/$defs/PageToken"
              },
              {
                "description": "<p>If <code>NextPageToken</code> is returned there are more results available. The value of <code>NextPageToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return a <code>400</code> error: \"<code>Specified token has exceeded its maximum lifetime</code>\". </p> <p>The configured <code>maximumPageSize</code> determines how many results can be returned in a single call. </p>"
              }
            ]
          },
          "maximumPageSize": {
            "allOf": [
              {
                "$ref": "#/$defs/PageSize"
              },
              {
                "description": "The maximum number of results that are returned per call. Use <code>nextPageToken</code> to obtain further pages of results. "
              }
            ]
          },
          "reverseOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/ReverseOrder"
              },
              {
                "description": "When set to <code>true</code>, returns the events in reverse order. By default the results are returned in ascending order of the <code>eventTimeStamp</code> of the events."
              }
            ]
          }
        }
      },
      "DomainName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "WorkflowExecution": {
        "type": "object",
        "required": [
          "workflowId",
          "runId"
        ],
        "properties": {
          "workflowId": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkflowId"
              },
              {
                "description": "The user defined identifier associated with the workflow execution."
              }
            ]
          },
          "runId": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkflowRunId"
              },
              {
                "description": "A system-generated unique identifier for the workflow execution."
              }
            ]
          }
        },
        "description": "Represents a workflow execution."
      },
      "WorkflowId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "WorkflowRunId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64
      },
      "PageToken": {
        "type": "string",
        "maxLength": 2048
      },
      "PageSize": {
        "type": "integer",
        "minimum": 0,
        "maximum": 1000
      },
      "ReverseOrder": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://swf.us-east-1.amazonaws.com/#X-Amz-Target=SimpleWorkflowService.GetWorkflowExecutionHistory{?maximumPageSize,nextPageToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Paginated representation of a workflow history for a workflow execution. This is the up to date, complete and authoritative record of the events related to all tasks and events in the life of the workflow execution.",
        "**Key properties:**",
        {
          "$ul": [
            "**events**",
            "**nextPageToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
