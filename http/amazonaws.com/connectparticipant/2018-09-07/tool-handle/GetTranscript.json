{
  "name": "GetTranscript",
  "description": "<p>Retrieves a transcript of the session, including details about any attachments. For information about accessing past chat contact transcripts for a persistent chat, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/chat-persistence.html\">Enable persistent chat</a>. </p> <note> <p> <code>ConnectionToken</code> is used for invoking this API instead of <code>ParticipantToken</code>.</p> </note> <p>The Amazon Connect Participant Service APIs do not use <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 authentication</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Bearer": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1000,
        "description": "The authentication token associated with the participant's connection."
      },
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "ContactId": {
            "description": "The contactId from the current contact chain for which transcript is needed.",
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          "MaxResults": {
            "description": "The maximum number of results to return in the page. Default: 10. ",
            "type": "integer",
            "minimum": 0,
            "maximum": 100
          },
          "NextToken": {
            "description": "The pagination token. Use the value returned previously in the next subsequent request to retrieve the next set of results.",
            "type": "string",
            "minLength": 1,
            "maxLength": 1000
          },
          "ScanDirection": {
            "description": "The direction from StartPosition from which to retrieve message. Default: BACKWARD when no StartPosition is provided, FORWARD with StartPosition. ",
            "type": "string",
            "enum": [
              "FORWARD",
              "BACKWARD"
            ]
          },
          "SortOrder": {
            "description": "The sort order for the records. Default: DESCENDING.",
            "type": "string",
            "enum": [
              "DESCENDING",
              "ASCENDING"
            ]
          },
          "StartPosition": {
            "description": "A filtering option for where to start. For example, if you sent 100 messages, start with message 50. ",
            "type": "object",
            "properties": {
              "Id": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ChatItemId"
                  },
                  {
                    "description": "The ID of the message or event where to start. "
                  }
                ]
              },
              "AbsoluteTime": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Instant"
                  },
                  {
                    "description": "<p>The time in ISO format where to start.</p> <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>"
                  }
                ]
              },
              "MostRecent": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MostRecent"
                  },
                  {
                    "description": "The start position of the most recent message where you want to start. "
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "X-Amz-Bearer",
      "body"
    ],
    "$defs": {
      "ChatItemId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "Instant": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "MostRecent": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://participant.connect.us-east-1.amazonaws.com/participant/transcript#X-Amz-Bearer{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Bearer": {
        "$": "X-Amz-Bearer"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**InitialContactId**",
            "**Transcript**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
