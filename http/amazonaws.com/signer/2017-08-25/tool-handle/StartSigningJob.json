{
  "name": "StartSigningJob",
  "description": "<p>Initiates a signing job to be performed on the code provided. Signing jobs are viewable by the <code>ListSigningJobs</code> operation for two years after they are performed. Note the following requirements: </p> <ul> <li> <p> You must create an Amazon S3 source bucket. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html\">Creating a Bucket</a> in the <i>Amazon S3 Getting Started Guide</i>. </p> </li> <li> <p>Your S3 source bucket must be version enabled.</p> </li> <li> <p>You must create an S3 destination bucket. Code signing uses your S3 destination bucket to write your signed code.</p> </li> <li> <p>You specify the name of the source and destination buckets when calling the <code>StartSigningJob</code> operation.</p> </li> <li> <p>You must also specify a request token that identifies your request to code signing.</p> </li> </ul> <p>You can call the <a>DescribeSigningJob</a> and the <a>ListSigningJobs</a> actions after you call <code>StartSigningJob</code>.</p> <p>For a Java example that shows how to use this action, see <a href=\"https://docs.aws.amazon.com/signer/latest/developerguide/api-startsigningjob.html\">StartSigningJob</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "source",
          "destination",
          "profileName",
          "clientRequestToken"
        ],
        "properties": {
          "source": {
            "description": "An <code>S3Source</code> object that contains information about the S3 bucket where you saved your unsigned code.",
            "type": "object",
            "properties": {
              "s3": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Source"
                  },
                  {
                    "description": "The <code>S3Source</code> object."
                  }
                ]
              }
            }
          },
          "destination": {
            "description": "Points to an <code>S3Destination</code> object that contains information about your S3 bucket.",
            "type": "object",
            "properties": {
              "s3": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Destination"
                  },
                  {
                    "description": "The <code>S3Destination</code> object."
                  }
                ]
              }
            }
          },
          "profileName": {
            "description": "The name of the signing profile.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "minLength": 2,
            "maxLength": 64
          },
          "clientRequestToken": {
            "description": "String that identifies the signing request. All calls after the first that use this token return the same response as the first call.",
            "type": "string"
          },
          "profileOwner": {
            "description": "The AWS account ID of the signing profile owner.",
            "type": "string",
            "pattern": "^[0-9]{12}$",
            "minLength": 12,
            "maxLength": 12
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "S3Source": {
        "type": "object",
        "required": [
          "bucketName",
          "key",
          "version"
        ],
        "properties": {
          "bucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketName"
              },
              {
                "description": "Name of the S3 bucket."
              }
            ]
          },
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/Key"
              },
              {
                "description": "Key name of the bucket object that contains your unsigned code."
              }
            ]
          },
          "version": {
            "allOf": [
              {
                "$ref": "#/$defs/Version"
              },
              {
                "description": "Version of your source image in your version enabled S3 bucket."
              }
            ]
          }
        },
        "description": "Information about the S3 bucket where you saved your unsigned code."
      },
      "BucketName": {
        "type": "string"
      },
      "Key": {
        "type": "string"
      },
      "Version": {
        "type": "string"
      },
      "S3Destination": {
        "type": "object",
        "properties": {
          "bucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketName"
              },
              {
                "description": "Name of the S3 bucket."
              }
            ]
          },
          "prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/Prefix"
              },
              {
                "description": "An Amazon S3 prefix that you can use to limit responses to those that begin with the specified prefix."
              }
            ]
          }
        },
        "description": "The name and prefix of the S3 bucket where code signing saves your signed objects."
      },
      "Prefix": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://signer.us-east-1.amazonaws.com/signing-jobs"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**jobId**",
            "**jobOwner**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
