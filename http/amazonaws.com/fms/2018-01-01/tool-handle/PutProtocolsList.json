{
  "name": "PutProtocolsList",
  "description": "Creates an Firewall Manager protocols list.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSFMS_20180101.PutProtocolsList"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutProtocolsListRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutProtocolsListRequest": {
        "type": "object",
        "required": [
          "ProtocolsList"
        ],
        "title": "PutProtocolsListRequest",
        "properties": {
          "ProtocolsList": {
            "allOf": [
              {
                "$ref": "#/$defs/ProtocolsListData"
              },
              {
                "description": "The details of the Firewall Manager protocols list to be created."
              }
            ]
          },
          "TagList": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "The tags associated with the resource."
              }
            ]
          }
        }
      },
      "ProtocolsListData": {
        "type": "object",
        "required": [
          "ListName",
          "ProtocolsList"
        ],
        "properties": {
          "ListId": {
            "allOf": [
              {
                "$ref": "#/$defs/ListId"
              },
              {
                "description": "The ID of the Firewall Manager protocols list."
              }
            ]
          },
          "ListName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of the Firewall Manager protocols list."
              }
            ]
          },
          "ListUpdateToken": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateToken"
              },
              {
                "description": "A unique identifier for each update to the list. When you update the list, the update token must match the token of the current version of the application list. You can retrieve the update token by getting the list. "
              }
            ]
          },
          "CreateTime": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeStamp"
              },
              {
                "description": "The time that the Firewall Manager protocols list was created."
              }
            ]
          },
          "LastUpdateTime": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeStamp"
              },
              {
                "description": "The time that the Firewall Manager protocols list was last updated."
              }
            ]
          },
          "ProtocolsList": {
            "allOf": [
              {
                "$ref": "#/$defs/ProtocolsList"
              },
              {
                "description": "An array of protocols in the Firewall Manager protocols list."
              }
            ]
          },
          "PreviousProtocolsList": {
            "allOf": [
              {
                "$ref": "#/$defs/PreviousProtocolsList"
              },
              {
                "description": "A map of previous version numbers to their corresponding protocol arrays."
              }
            ]
          }
        },
        "description": "An Firewall Manager protocols list."
      },
      "ListId": {
        "type": "string",
        "pattern": "^[a-z0-9A-Z-]{36}$",
        "minLength": 36,
        "maxLength": 36
      },
      "ResourceName": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "UpdateToken": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 1024
      },
      "TimeStamp": {
        "type": "string",
        "format": "date-time"
      },
      "ProtocolsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Protocol"
        }
      },
      "Protocol": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 20
      },
      "PreviousProtocolsList": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ProtocolsList"
        }
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "Part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as \"customer.\" Tag keys are case-sensitive."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "Part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as \"companyA\" or \"companyB.\" Tag values are case-sensitive. "
              }
            ]
          }
        },
        "description": "A collection of key:value pairs associated with an Amazon Web Services resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each Amazon Web Services resource. "
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://fms.us-east-1.amazonaws.com/#X-Amz-Target=AWSFMS_20180101.PutProtocolsList"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ProtocolsList**",
            "**ProtocolsListArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
