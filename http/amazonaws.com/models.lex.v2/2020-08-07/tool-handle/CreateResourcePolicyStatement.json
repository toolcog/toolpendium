{
  "name": "CreateResourcePolicyStatement",
  "description": "<p>Adds a new resource policy statement to a bot or bot alias. If a resource policy exists, the statement is added to the current resource policy. If a policy doesn't exist, a new policy is created.</p> <p>You can't create a resource policy statement that allows cross-account access.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "resourceArn": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1011,
        "description": "The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to."
      },
      "expectedRevisionId": {
        "type": "string",
        "pattern": "^[0-9]+$",
        "minLength": 1,
        "maxLength": 5,
        "description": "<p>The identifier of the revision of the policy to edit. If this revision ID doesn't match the current revision ID, Amazon Lex throws an exception.</p> <p>If you don't specify a revision, Amazon Lex overwrites the contents of the policy with the new values.</p>"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "statementId",
          "effect",
          "principal",
          "action"
        ],
        "properties": {
          "statementId": {
            "description": "The name of the statement. The ID is the same as the <code>Sid</code> IAM property. The statement name must be unique within the policy. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_sid.html\">IAM JSON policy elements: Sid</a>. ",
            "type": "string",
            "pattern": "^([0-9a-zA-Z][_-]?){1,100}$",
            "minLength": 1,
            "maxLength": 100
          },
          "effect": {
            "description": "Determines whether the statement allows or denies access to the resource.",
            "type": "string",
            "enum": [
              "Allow",
              "Deny"
            ]
          },
          "principal": {
            "description": "An IAM principal, such as an IAM user, IAM role, or Amazon Web Services services that is allowed or denied access to a resource. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html\">Amazon Web Services JSON policy elements: Principal</a>.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Principal"
            }
          },
          "action": {
            "description": "The Amazon Lex action that this policy either allows or denies. The action must apply to the resource type of the specified ARN. For more information, see <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlexv2.html\"> Actions, resources, and condition keys for Amazon Lex V2</a>.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Operation"
            }
          },
          "condition": {
            "description": "<p>Specifies a condition when the policy is in effect. If the principal of the policy is a service principal, you must provide two condition blocks, one with a SourceAccount global condition key and one with a SourceArn global condition key.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html\">IAM JSON policy elements: Condition </a>.</p>",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 10,
            "additionalProperties": {
              "$ref": "#/$defs/ConditionKeyValueMap"
            }
          }
        }
      }
    },
    "required": [
      "resourceArn",
      "body"
    ],
    "$defs": {
      "Principal": {
        "type": "object",
        "properties": {
          "service": {
            "allOf": [
              {
                "$ref": "#/$defs/ServicePrincipal"
              },
              {
                "description": "The name of the Amazon Web Services service that should allowed or denied access to an Amazon Lex action."
              }
            ]
          },
          "arn": {
            "allOf": [
              {
                "$ref": "#/$defs/PrincipalArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the principal."
              }
            ]
          }
        },
        "description": "The IAM principal that you allowing or denying access to an Amazon Lex action. You must provide a <code>service</code> or an <code>arn</code>, but not both in the same statement. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html\"> AWS JSON policy elements: Principal </a>."
      },
      "ServicePrincipal": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z_.]+$",
        "minLength": 15,
        "maxLength": 1024
      },
      "PrincipalArn": {
        "type": "string",
        "pattern": "^arn:aws:iam::[0-9]{12}:(root|(user|role)/.*)$",
        "minLength": 30,
        "maxLength": 1024
      },
      "Operation": {
        "type": "string",
        "pattern": "lex:[a-zA-Z*]+$",
        "minLength": 5,
        "maxLength": 50
      },
      "ConditionKeyValueMap": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 10,
        "additionalProperties": {
          "$ref": "#/$defs/ConditionValue"
        }
      },
      "ConditionValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://models-v2-lex.us-east-1.amazonaws.com/policy/{resourceArn}/statements/{?expectedRevisionId}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**resourceArn**",
            "**revisionId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
