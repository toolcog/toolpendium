{
  "name": "CreateBot",
  "description": "Creates an Amazon Lex conversational bot. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "botName",
          "roleArn",
          "dataPrivacy",
          "idleSessionTTLInSeconds"
        ],
        "properties": {
          "botName": {
            "description": "The name of the bot. The bot name must be unique in the account that creates the bot.",
            "type": "string",
            "pattern": "^([0-9a-zA-Z][_-]?){1,100}$",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "description": "A description of the bot. It appears in lists to help you identify a particular bot.",
            "type": "string",
            "minLength": 0,
            "maxLength": 200
          },
          "roleArn": {
            "description": "The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot.",
            "type": "string",
            "pattern": "^arn:aws:iam::[0-9]{12}:role/.*$",
            "minLength": 32,
            "maxLength": 2048
          },
          "dataPrivacy": {
            "description": "By default, data stored by Amazon Lex is encrypted. The <code>DataPrivacy</code> structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot. ",
            "type": "object",
            "properties": {
              "childDirected": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ChildDirected"
                  },
                  {
                    "description": "For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By specifying <code>true</code> in the <code>childDirected</code> field, you confirm that your use of Amazon Lex <b>is</b> related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field, you confirm that your use of Amazon Lex <b>is not</b> related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code> field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the <a href=\"http://aws.amazon.com/lex/faqs#data-security\">Amazon Lex FAQ</a>."
                  }
                ]
              }
            }
          },
          "idleSessionTTLInSeconds": {
            "description": "<p>The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot. </p> <p>A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.</p> <p>You can specify between 60 (1 minute) and 86,400 (24 hours) seconds.</p>",
            "type": "integer",
            "minimum": 60,
            "maximum": 86400
          },
          "botTags": {
            "description": "A list of tags to add to the bot. You can only add tags when you create a bot. You can't use the <code>UpdateBot</code> operation to update tags. To update tags, use the <code>TagResource</code> operation.",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 200,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "testBotAliasTags": {
            "description": "A list of tags to add to the test alias for a bot. You can only add tags when you create a bot. You can't use the <code>UpdateAlias</code> operation to update tags. To update tags on the test alias, use the <code>TagResource</code> operation.",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 200,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "botType": {
            "description": "The type of a bot to create.",
            "type": "string",
            "enum": [
              "Bot",
              "BotNetwork"
            ]
          },
          "botMembers": {
            "description": "The list of bot members in a network to be created.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/BotMember"
            },
            "minItems": 0,
            "maxItems": 10
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ChildDirected": {
        "type": "boolean"
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "BotMember": {
        "type": "object",
        "required": [
          "botMemberId",
          "botMemberName",
          "botMemberAliasId",
          "botMemberAliasName",
          "botMemberVersion"
        ],
        "properties": {
          "botMemberId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique ID of a bot that is a member of this network of bots."
              }
            ]
          },
          "botMemberName": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The unique name of a bot that is a member of this network of bots."
              }
            ]
          },
          "botMemberAliasId": {
            "allOf": [
              {
                "$ref": "#/$defs/BotAliasId"
              },
              {
                "description": "The alias ID of a bot that is a member of this network of bots."
              }
            ]
          },
          "botMemberAliasName": {
            "allOf": [
              {
                "$ref": "#/$defs/BotAliasName"
              },
              {
                "description": "The alias name of a bot that is a member of this network of bots."
              }
            ]
          },
          "botMemberVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/BotVersion"
              },
              {
                "description": "The version of a bot that is a member of this network of bots."
              }
            ]
          }
        },
        "description": "A bot that is a member of a network of bots."
      },
      "Id": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z]+$",
        "minLength": 10,
        "maxLength": 10
      },
      "Name": {
        "type": "string",
        "pattern": "^([0-9a-zA-Z][_-]?){1,100}$",
        "minLength": 1,
        "maxLength": 100
      },
      "BotAliasId": {
        "type": "string",
        "pattern": "^(\\bTSTALIASID\\b|[0-9a-zA-Z]+)$",
        "minLength": 10,
        "maxLength": 10
      },
      "BotAliasName": {
        "type": "string",
        "pattern": "^(\\bAmazonLexTestAlias\\b|[0-9a-zA-Z][_-]?)+$",
        "minLength": 1,
        "maxLength": 100
      },
      "BotVersion": {
        "type": "string",
        "pattern": "^(DRAFT|[0-9]+)$",
        "minLength": 1,
        "maxLength": 5
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://models-v2-lex.us-east-1.amazonaws.com/bots/"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**botId**",
            "**botName**",
            "**description**",
            "**roleArn**",
            "**dataPrivacy**",
            "**idleSessionTTLInSeconds**",
            "**botStatus**",
            "**creationDateTime**",
            "**botTags**",
            "**testBotAliasTags**",
            "**botType**",
            "**botMembers**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
