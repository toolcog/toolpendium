{
  "name": "ListBotLocales",
  "description": "Gets a list of locales for the specified bot.",
  "parameters": {
    "type": "object",
    "properties": {
      "botId": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z]+$",
        "minLength": 10,
        "maxLength": 10,
        "description": "The identifier of the bot to list locales for."
      },
      "botVersion": {
        "type": "string",
        "pattern": "^(DRAFT|[0-9]+)$",
        "minLength": 1,
        "maxLength": 5,
        "description": "The version of the bot to list locales for."
      },
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "sortBy": {
            "description": "Specifies attributes for sorting a list of bot locales.",
            "type": "object",
            "properties": {
              "attribute": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BotLocaleSortAttribute"
                  },
                  {
                    "description": "The bot locale attribute to sort by."
                  }
                ]
              },
              "order": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SortOrder"
                  },
                  {
                    "description": "Specifies whether to sort the bot locales in ascending or descending order."
                  }
                ]
              }
            }
          },
          "filters": {
            "description": "Provides the specification for a filter used to limit the response to only those locales that match the filter specification. You can only specify one filter and one value to filter on.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/BotLocaleFilter"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "maxResults": {
            "description": "The maximum number of aliases to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.",
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          "nextToken": {
            "description": "If the response from the <code>ListBotLocales</code> operation contains more results than specified in the <code>maxResults</code> parameter, a token is returned in the response. Use that token as the <code>nextToken</code> parameter to return the next page of results. ",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "botId",
      "botVersion",
      "body"
    ],
    "$defs": {
      "BotLocaleSortAttribute": {
        "type": "string",
        "enum": [
          "BotLocaleName"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "Ascending",
          "Descending"
        ]
      },
      "BotLocaleFilter": {
        "type": "object",
        "required": [
          "name",
          "values",
          "operator"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/BotLocaleFilterName"
              },
              {
                "description": "The name of the field to filter the list of bots."
              }
            ]
          },
          "values": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterValues"
              },
              {
                "description": "The value to use for filtering the list of bots."
              }
            ]
          },
          "operator": {
            "allOf": [
              {
                "$ref": "#/$defs/BotLocaleFilterOperator"
              },
              {
                "description": "The operator to use for the filter. Specify <code>EQ</code> when the <code>ListBotLocales</code> operation should return only aliases that equal the specified value. Specify <code>CO</code> when the <code>ListBotLocales</code> operation should return aliases that contain the specified value."
              }
            ]
          }
        },
        "description": "Filters responses returned by the <code>ListBotLocales</code> operation."
      },
      "BotLocaleFilterName": {
        "type": "string",
        "enum": [
          "BotLocaleName"
        ]
      },
      "FilterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilterValue"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "FilterValue": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z_()\\s-]+$",
        "minLength": 1,
        "maxLength": 100
      },
      "BotLocaleFilterOperator": {
        "type": "string",
        "enum": [
          "CO",
          "EQ"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://models-v2-lex.us-east-1.amazonaws.com/bots/{botId}/botversions/{botVersion}/botlocales/{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**botId**",
            "**botVersion**",
            "**nextToken**",
            "**botLocaleSummaries**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
