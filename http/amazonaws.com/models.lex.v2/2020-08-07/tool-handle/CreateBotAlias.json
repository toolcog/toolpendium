{
  "name": "CreateBotAlias",
  "description": "<p>Creates an alias for the specified version of a bot. Use an alias to enable you to change the version of a bot without updating applications that use the bot.</p> <p>For example, you can create an alias called \"PROD\" that your applications use to call the Amazon Lex bot. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "botId": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z]+$",
        "minLength": 10,
        "maxLength": 10,
        "description": "The unique identifier of the bot that the alias applies to."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "botAliasName"
        ],
        "properties": {
          "botAliasName": {
            "description": "The alias to create. The name must be unique for the bot.",
            "type": "string",
            "pattern": "^([0-9a-zA-Z][_-]?){1,100}$",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "description": "A description of the alias. Use this description to help identify the alias.",
            "type": "string",
            "minLength": 0,
            "maxLength": 200
          },
          "botVersion": {
            "description": "The version of the bot that this alias points to. You can use the <a href=\"https://docs.aws.amazon.com/lexv2/latest/APIReference/API_UpdateBotAlias.html\">UpdateBotAlias</a> operation to change the bot version associated with the alias.",
            "type": "string",
            "pattern": "^[0-9]+$",
            "minLength": 1,
            "maxLength": 5
          },
          "botAliasLocaleSettings": {
            "description": "Maps configuration information to a specific locale. You can use this parameter to specify a specific Lambda function to run different functions in different locales.",
            "type": "object",
            "minProperties": 1,
            "additionalProperties": {
              "$ref": "#/$defs/BotAliasLocaleSettings"
            }
          },
          "conversationLogSettings": {
            "description": "Configures conversation logging that saves audio, text, and metadata for the conversations with your users.",
            "type": "object",
            "properties": {
              "textLogSettings": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TextLogSettingsList"
                  },
                  {
                    "description": "The Amazon CloudWatch Logs settings for logging text and metadata."
                  }
                ]
              },
              "audioLogSettings": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AudioLogSettingsList"
                  },
                  {
                    "description": "The Amazon S3 settings for logging audio to an S3 bucket."
                  }
                ]
              }
            }
          },
          "sentimentAnalysisSettings": {
            "description": "Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.",
            "type": "object",
            "properties": {
              "detectSentiment": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": "Sets whether Amazon Lex uses Amazon Comprehend to detect the sentiment of user utterances."
                  }
                ]
              }
            }
          },
          "tags": {
            "description": "A list of tags to add to the bot alias. You can only add tags when you create an alias, you can't use the <code>UpdateBotAlias</code> operation to update the tags on a bot alias. To update tags, use the <code>TagResource</code> operation.",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 200,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "botId",
      "body"
    ],
    "$defs": {
      "BotAliasLocaleSettings": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Determines whether the locale is enabled for the bot. If the value is <code>false</code>, the locale isn't available for use."
              }
            ]
          },
          "codeHookSpecification": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeHookSpecification"
              },
              {
                "description": "Specifies the Lambda function that should be used in the locale."
              }
            ]
          }
        },
        "description": "Specifies settings that are unique to a locale. For example, you can use different Lambda function depending on the bot's locale."
      },
      "Boolean": {
        "type": "boolean"
      },
      "CodeHookSpecification": {
        "type": "object",
        "required": [
          "lambdaCodeHook"
        ],
        "properties": {
          "lambdaCodeHook": {
            "$ref": "#/$defs/LambdaCodeHook"
          }
        },
        "description": "Contains information about code hooks that Amazon Lex calls during a conversation."
      },
      "LambdaCodeHook": {
        "type": "object",
        "required": [
          "lambdaARN",
          "codeHookInterfaceVersion"
        ],
        "properties": {
          "lambdaARN": {
            "allOf": [
              {
                "$ref": "#/$defs/LambdaARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Lambda function."
              }
            ]
          },
          "codeHookInterfaceVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeHookInterfaceVersion"
              },
              {
                "description": "The version of the request-response that you want Amazon Lex to use to invoke your Lambda function."
              }
            ]
          }
        },
        "description": "Specifies a Lambda function that verifies requests to a bot or fulfills the user's request to a bot."
      },
      "LambdaARN": {
        "type": "string",
        "pattern": "arn:aws:lambda:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:function:[a-zA-Z0-9-_]+(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?(:[a-zA-Z0-9-_]+)?",
        "minLength": 20,
        "maxLength": 2048
      },
      "CodeHookInterfaceVersion": {
        "type": "string",
        "minLength": 1,
        "maxLength": 5
      },
      "TextLogSettingsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TextLogSetting"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "TextLogSetting": {
        "type": "object",
        "required": [
          "enabled",
          "destination"
        ],
        "properties": {
          "enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Determines whether conversation logs should be stored for an alias."
              }
            ]
          },
          "destination": {
            "$ref": "#/$defs/TextLogDestination"
          }
        },
        "description": "Defines settings to enable text conversation logs."
      },
      "TextLogDestination": {
        "type": "object",
        "required": [
          "cloudWatch"
        ],
        "properties": {
          "cloudWatch": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLogGroupLogDestination"
              },
              {
                "description": "Defines the Amazon CloudWatch Logs log group where text and metadata logs are delivered."
              }
            ]
          }
        },
        "description": "Defines the Amazon CloudWatch Logs destination log group for conversation text logs."
      },
      "CloudWatchLogGroupLogDestination": {
        "type": "object",
        "required": [
          "cloudWatchLogGroupArn",
          "logPrefix"
        ],
        "properties": {
          "cloudWatchLogGroupArn": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLogGroupArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the log group where text and metadata logs are delivered."
              }
            ]
          },
          "logPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/LogPrefix"
              },
              {
                "description": "The prefix of the log stream name within the log group that you specified "
              }
            ]
          }
        },
        "description": "The Amazon CloudWatch Logs log group where the text and metadata logs are delivered. The log group must exist before you enable logging."
      },
      "CloudWatchLogGroupArn": {
        "type": "string",
        "pattern": "^arn:[\\w\\-]+:logs:[\\w\\-]+:[\\d]{12}:log-group:[\\.\\-_/#A-Za-z0-9]{1,512}(?::\\*)?$",
        "minLength": 1,
        "maxLength": 2048
      },
      "LogPrefix": {
        "type": "string",
        "maxLength": 1024
      },
      "AudioLogSettingsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AudioLogSetting"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "AudioLogSetting": {
        "type": "object",
        "required": [
          "enabled",
          "destination"
        ],
        "properties": {
          "enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Determines whether audio logging in enabled for the bot."
              }
            ]
          },
          "destination": {
            "$ref": "#/$defs/AudioLogDestination"
          }
        },
        "description": "Settings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored."
      },
      "AudioLogDestination": {
        "type": "object",
        "required": [
          "s3Bucket"
        ],
        "properties": {
          "s3Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BucketLogDestination"
              },
              {
                "description": "The Amazon S3 bucket where the audio log files are stored. The IAM role specified in the <code>roleArn</code> parameter of the <a href=\"https://docs.aws.amazon.com/lexv2/latest/APIReference/API_CreateBot.html\">CreateBot</a> operation must have permission to write to this bucket."
              }
            ]
          }
        },
        "description": "The location of audio log files collected when conversation logging is enabled for a bot."
      },
      "S3BucketLogDestination": {
        "type": "object",
        "required": [
          "s3BucketArn",
          "logPrefix"
        ],
        "properties": {
          "kmsKeyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an Amazon Web Services Key Management Service (KMS) key for encrypting audio log files stored in an S3 bucket."
              }
            ]
          },
          "s3BucketArn": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BucketArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an Amazon S3 bucket where audio log files are stored."
              }
            ]
          },
          "logPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/LogPrefix"
              },
              {
                "description": "The S3 prefix to assign to audio log files."
              }
            ]
          }
        },
        "description": "Specifies an Amazon S3 bucket for logging audio conversations"
      },
      "KmsKeyArn": {
        "type": "string",
        "pattern": "^arn:[\\w\\-]+:kms:[\\w\\-]+:[\\d]{12}:(?:key\\/[\\w\\-]+|alias\\/[a-zA-Z0-9:\\/_\\-]{1,256})$",
        "minLength": 20,
        "maxLength": 2048
      },
      "S3BucketArn": {
        "type": "string",
        "pattern": "^arn:[\\w\\-]+:s3:::[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]$",
        "minLength": 1,
        "maxLength": 2048
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://models-v2-lex.us-east-1.amazonaws.com/bots/{botId}/botaliases/"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**botAliasId**",
            "**botAliasName**",
            "**description**",
            "**botVersion**",
            "**botAliasLocaleSettings**",
            "**conversationLogSettings**",
            [
              "**sentimentAnalysisSettings**: Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.",
              {
                "$ul": [
                  "**detectSentiment**"
                ]
              }
            ],
            "**botAliasStatus**",
            "**botId**",
            "**creationDateTime**",
            "**tags**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
