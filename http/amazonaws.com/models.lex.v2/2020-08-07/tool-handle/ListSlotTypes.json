{
  "name": "ListSlotTypes",
  "description": "Gets a list of slot types that match the specified criteria.",
  "parameters": {
    "type": "object",
    "properties": {
      "botId": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z]+$",
        "minLength": 10,
        "maxLength": 10,
        "description": "The unique identifier of the bot that contains the slot types."
      },
      "botVersion": {
        "type": "string",
        "pattern": "^(DRAFT|[0-9]+)$",
        "minLength": 1,
        "maxLength": 5,
        "description": "The version of the bot that contains the slot type."
      },
      "localeId": {
        "type": "string",
        "description": "The identifier of the language and locale of the slot types to list. The string must match one of the supported locales. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\">Supported languages</a>."
      },
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "sortBy": {
            "description": "Specifies attributes for sorting a list of slot types.",
            "type": "object",
            "properties": {
              "attribute": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SlotTypeSortAttribute"
                  },
                  {
                    "description": "The attribute to use to sort the list of slot types."
                  }
                ]
              },
              "order": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SortOrder"
                  },
                  {
                    "description": "The order to sort the list. You can say ascending or descending."
                  }
                ]
              }
            }
          },
          "filters": {
            "description": "Provides the specification of a filter used to limit the slot types in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/SlotTypeFilter"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "maxResults": {
            "description": "The maximum number of slot types to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.",
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          "nextToken": {
            "description": "If the response from the <code>ListSlotTypes</code> operation contains more results than specified in the <code>maxResults</code> parameter, a token is returned in the response. Use that token in the <code>nextToken</code> parameter to return the next page of results.",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "botId",
      "botVersion",
      "localeId",
      "body"
    ],
    "$defs": {
      "SlotTypeSortAttribute": {
        "type": "string",
        "enum": [
          "SlotTypeName",
          "LastUpdatedDateTime"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "Ascending",
          "Descending"
        ]
      },
      "SlotTypeFilter": {
        "type": "object",
        "required": [
          "name",
          "values",
          "operator"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/SlotTypeFilterName"
              },
              {
                "description": "The name of the field to use for filtering."
              }
            ]
          },
          "values": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterValues"
              },
              {
                "description": "The value to use to filter the response."
              }
            ]
          },
          "operator": {
            "allOf": [
              {
                "$ref": "#/$defs/SlotTypeFilterOperator"
              },
              {
                "description": "The operator to use for the filter. Specify <code>EQ</code> when the <code>ListSlotTypes</code> operation should return only aliases that equal the specified value. Specify <code>CO</code> when the <code>ListSlotTypes</code> operation should return aliases that contain the specified value."
              }
            ]
          }
        },
        "description": "Filters the response from the <code>ListSlotTypes</code> operation."
      },
      "SlotTypeFilterName": {
        "type": "string",
        "enum": [
          "SlotTypeName",
          "ExternalSourceType"
        ]
      },
      "FilterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilterValue"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "FilterValue": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z_()\\s-]+$",
        "minLength": 1,
        "maxLength": 100
      },
      "SlotTypeFilterOperator": {
        "type": "string",
        "enum": [
          "CO",
          "EQ"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://models-v2-lex.us-east-1.amazonaws.com/bots/{botId}/botversions/{botVersion}/botlocales/{localeId}/slottypes/{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**botId**",
            "**botVersion**",
            "**localeId**",
            "**slotTypeSummaries**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
