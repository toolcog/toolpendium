{
  "name": "ListBots",
  "description": "Gets a list of available bots.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "sortBy": {
            "description": "Specifies attributes for sorting a list of bots.",
            "type": "object",
            "properties": {
              "attribute": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BotSortAttribute"
                  },
                  {
                    "description": "The attribute to use to sort the list of bots."
                  }
                ]
              },
              "order": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SortOrder"
                  },
                  {
                    "description": "The order to sort the list. You can choose ascending or descending."
                  }
                ]
              }
            }
          },
          "filters": {
            "description": "Provides the specification of a filter used to limit the bots in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/BotFilter"
            },
            "minItems": 1,
            "maxItems": 2
          },
          "maxResults": {
            "description": "The maximum number of bots to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned.",
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          "nextToken": {
            "description": "<p>If the response from the <code>ListBots</code> operation contains more results than specified in the <code>maxResults</code> parameter, a token is returned in the response. </p> <p>Use the returned token in the <code>nextToken</code> parameter of a <code>ListBots</code> request to return the next page of results. For a complete set of results, call the <code>ListBots</code> operation until the <code>nextToken</code> returned in the response is null.</p>",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "BotSortAttribute": {
        "type": "string",
        "enum": [
          "BotName"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "Ascending",
          "Descending"
        ]
      },
      "BotFilter": {
        "type": "object",
        "required": [
          "name",
          "values",
          "operator"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/BotFilterName"
              },
              {
                "description": "The name of the field to filter the list of bots."
              }
            ]
          },
          "values": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterValues"
              },
              {
                "description": "The value to use for filtering the list of bots."
              }
            ]
          },
          "operator": {
            "allOf": [
              {
                "$ref": "#/$defs/BotFilterOperator"
              },
              {
                "description": "The operator to use for the filter. Specify <code>EQ</code> when the <code>ListBots</code> operation should return only aliases that equal the specified value. Specify <code>CO</code> when the <code>ListBots</code> operation should return aliases that contain the specified value."
              }
            ]
          }
        },
        "description": "Filters the responses returned by the <code>ListBots</code> operation."
      },
      "BotFilterName": {
        "type": "string",
        "enum": [
          "BotName",
          "BotType"
        ]
      },
      "FilterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilterValue"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "FilterValue": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z_()\\s-]+$",
        "minLength": 1,
        "maxLength": 100
      },
      "BotFilterOperator": {
        "type": "string",
        "enum": [
          "CO",
          "EQ",
          "NE"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://models-v2-lex.us-east-1.amazonaws.com/bots/{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**botSummaries**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
