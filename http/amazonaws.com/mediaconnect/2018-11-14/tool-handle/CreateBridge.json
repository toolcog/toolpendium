{
  "name": "CreateBridge",
  "description": "Creates a new bridge. The request must include one source.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "name",
          "placementArn",
          "sources"
        ],
        "properties": {
          "egressGatewayBridge": {
            "description": "Create a bridge with the egress bridge type. An egress bridge is a cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises.",
            "type": "object",
            "properties": {
              "MaxBitrate": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "xml": {
                      "name": "maxBitrate"
                    },
                    "description": "The maximum expected bitrate (in bps)."
                  }
                ]
              }
            }
          },
          "ingressGatewayBridge": {
            "description": "Create a bridge with the ingress bridge type. An ingress bridge is a ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud.",
            "type": "object",
            "properties": {
              "MaxBitrate": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "xml": {
                      "name": "maxBitrate"
                    },
                    "description": "The maximum expected bitrate (in bps)."
                  }
                ]
              },
              "MaxOutputs": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "xml": {
                      "name": "maxOutputs"
                    },
                    "description": "The maximum number of expected outputs."
                  }
                ]
              }
            }
          },
          "name": {
            "description": "The name of the bridge. This name can not be modified after the bridge is created.",
            "type": "string"
          },
          "outputs": {
            "description": "The outputs that you want to add to this bridge.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AddBridgeOutputRequest"
            }
          },
          "placementArn": {
            "description": "The bridge placement Amazon Resource Number (ARN).",
            "type": "string"
          },
          "sourceFailoverConfig": {
            "description": "The settings for source failover.",
            "type": "object",
            "properties": {
              "FailoverMode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FailoverMode"
                  },
                  {
                    "xml": {
                      "name": "failoverMode"
                    },
                    "description": "The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams."
                  }
                ]
              },
              "RecoveryWindow": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "xml": {
                      "name": "recoveryWindow"
                    },
                    "description": "Search window time to look for dash-7 packets"
                  }
                ]
              },
              "SourcePriority": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SourcePriority"
                  },
                  {
                    "xml": {
                      "name": "sourcePriority"
                    },
                    "description": "The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams."
                  }
                ]
              },
              "State": {
                "allOf": [
                  {
                    "$ref": "#/$defs/State"
                  },
                  {
                    "xml": {
                      "name": "state"
                    }
                  }
                ]
              }
            }
          },
          "sources": {
            "description": "The sources that you want to add to this bridge.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AddBridgeSourceRequest"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "__integer": {
        "type": "integer"
      },
      "AddBridgeOutputRequest": {
        "type": "object",
        "properties": {
          "NetworkOutput": {
            "allOf": [
              {
                "$ref": "#/$defs/AddBridgeNetworkOutputRequest"
              },
              {
                "xml": {
                  "name": "networkOutput"
                }
              }
            ]
          }
        },
        "description": "Add an output to a bridge."
      },
      "AddBridgeNetworkOutputRequest": {
        "type": "object",
        "required": [
          "NetworkName",
          "Port",
          "IpAddress",
          "Protocol",
          "Ttl",
          "Name"
        ],
        "properties": {
          "IpAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "ipAddress"
                },
                "description": "The network output IP Address."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "name"
                },
                "description": "The network output name. This name is used to reference the output and must be unique among outputs in this bridge."
              }
            ]
          },
          "NetworkName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "networkName"
                },
                "description": "The network output's gateway network name."
              }
            ]
          },
          "Port": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "xml": {
                  "name": "port"
                },
                "description": "The network output port."
              }
            ]
          },
          "Protocol": {
            "allOf": [
              {
                "$ref": "#/$defs/Protocol"
              },
              {
                "xml": {
                  "name": "protocol"
                },
                "description": "The network output protocol."
              }
            ]
          },
          "Ttl": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "xml": {
                  "name": "ttl"
                },
                "description": "The network output TTL."
              }
            ]
          }
        },
        "description": "Add a network output to an existing bridge."
      },
      "__string": {
        "type": "string"
      },
      "Protocol": {
        "type": "string",
        "enum": [
          "zixi-push",
          "rtp-fec",
          "rtp",
          "zixi-pull",
          "rist",
          "st2110-jpegxs",
          "cdi",
          "srt-listener",
          "srt-caller",
          "fujitsu-qos",
          "udp"
        ]
      },
      "FailoverMode": {
        "type": "string",
        "enum": [
          "MERGE",
          "FAILOVER"
        ]
      },
      "SourcePriority": {
        "type": "object",
        "properties": {
          "PrimarySource": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "primarySource"
                },
                "description": "The name of the source you choose as the primary source for this flow."
              }
            ]
          }
        },
        "description": "The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams."
      },
      "State": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "AddBridgeSourceRequest": {
        "type": "object",
        "properties": {
          "FlowSource": {
            "allOf": [
              {
                "$ref": "#/$defs/AddBridgeFlowSourceRequest"
              },
              {
                "xml": {
                  "name": "flowSource"
                }
              }
            ]
          },
          "NetworkSource": {
            "allOf": [
              {
                "$ref": "#/$defs/AddBridgeNetworkSourceRequest"
              },
              {
                "xml": {
                  "name": "networkSource"
                }
              }
            ]
          }
        },
        "description": "Add a source to an existing bridge."
      },
      "AddBridgeFlowSourceRequest": {
        "type": "object",
        "required": [
          "FlowArn",
          "Name"
        ],
        "properties": {
          "FlowArn": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "pattern": "^arn:.+:mediaconnect.+:flow:.+$",
                "xml": {
                  "name": "flowArn"
                },
                "description": "The Amazon Resource Number (ARN) of the cloud flow to use as a source of this bridge."
              }
            ]
          },
          "FlowVpcInterfaceAttachment": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcInterfaceAttachment"
              },
              {
                "xml": {
                  "name": "flowVpcInterfaceAttachment"
                },
                "description": "The name of the VPC interface attachment to use for this source."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "name"
                },
                "description": "The name of the flow source. This name is used to reference the source and must be unique among sources in this bridge."
              }
            ]
          }
        },
        "description": "Add a flow source to an existing bridge."
      },
      "VpcInterfaceAttachment": {
        "type": "object",
        "properties": {
          "VpcInterfaceName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "vpcInterfaceName"
                },
                "description": "The name of the VPC interface to use for this resource."
              }
            ]
          }
        },
        "description": "The settings for attaching a VPC interface to an resource."
      },
      "AddBridgeNetworkSourceRequest": {
        "type": "object",
        "required": [
          "NetworkName",
          "MulticastIp",
          "Port",
          "Protocol",
          "Name"
        ],
        "properties": {
          "MulticastIp": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "multicastIp"
                },
                "description": "The network source multicast IP."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "name"
                },
                "description": "The name of the network source. This name is used to reference the source and must be unique among sources in this bridge."
              }
            ]
          },
          "NetworkName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "networkName"
                },
                "description": "The network source's gateway network name."
              }
            ]
          },
          "Port": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "xml": {
                  "name": "port"
                },
                "description": "The network source port."
              }
            ]
          },
          "Protocol": {
            "allOf": [
              {
                "$ref": "#/$defs/Protocol"
              },
              {
                "xml": {
                  "name": "protocol"
                },
                "description": "The network source protocol."
              }
            ]
          }
        },
        "description": "Add a network source to an existing bridge."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://mediaconnect.us-east-1.amazonaws.com/v1/bridges"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Bridge**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
