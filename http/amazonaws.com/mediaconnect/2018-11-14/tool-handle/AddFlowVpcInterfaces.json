{
  "name": "AddFlowVpcInterfaces",
  "description": "Adds VPC interfaces to flow",
  "parameters": {
    "type": "object",
    "properties": {
      "flowArn": {
        "type": "string",
        "description": "The flow that you want to mutate."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "vpcInterfaces"
        ],
        "properties": {
          "vpcInterfaces": {
            "description": "A list of VPC interfaces that you want to add.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/VpcInterfaceRequest"
            }
          }
        }
      }
    },
    "required": [
      "flowArn",
      "body"
    ],
    "$defs": {
      "VpcInterfaceRequest": {
        "type": "object",
        "required": [
          "SubnetId",
          "SecurityGroupIds",
          "RoleArn",
          "Name"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "name"
                },
                "description": "The name of the VPC Interface. This value must be unique within the current flow."
              }
            ]
          },
          "NetworkInterfaceType": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkInterfaceType"
              },
              {
                "xml": {
                  "name": "networkInterfaceType"
                },
                "description": "The type of network interface. If this value is not included in the request, MediaConnect uses ENA as the networkInterfaceType."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "roleArn"
                },
                "description": "Role Arn MediaConnect can assumes to create ENIs in customer's account"
              }
            ]
          },
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "xml": {
                  "name": "securityGroupIds"
                },
                "description": "Security Group IDs to be used on ENI."
              }
            ]
          },
          "SubnetId": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "subnetId"
                },
                "description": "Subnet must be in the AZ of the Flow"
              }
            ]
          }
        },
        "description": "Desired VPC Interface for a Flow"
      },
      "__string": {
        "type": "string"
      },
      "NetworkInterfaceType": {
        "type": "string",
        "enum": [
          "ena",
          "efa"
        ]
      },
      "__listOf__string": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/__string"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://mediaconnect.us-east-1.amazonaws.com/v1/flows/{flowArn}/vpcInterfaces"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**FlowArn**",
            "**VpcInterfaces**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
