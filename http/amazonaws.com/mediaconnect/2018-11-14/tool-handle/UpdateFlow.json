{
  "name": "UpdateFlow",
  "description": "Updates flow",
  "parameters": {
    "type": "object",
    "properties": {
      "flowArn": {
        "type": "string",
        "description": "The flow that you want to update."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "sourceFailoverConfig": {
            "description": "The settings for source failover.",
            "type": "object",
            "properties": {
              "FailoverMode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FailoverMode"
                  },
                  {
                    "xml": {
                      "name": "failoverMode"
                    },
                    "description": "The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams."
                  }
                ]
              },
              "RecoveryWindow": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "xml": {
                      "name": "recoveryWindow"
                    },
                    "description": "Recovery window time to look for dash-7 packets"
                  }
                ]
              },
              "SourcePriority": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SourcePriority"
                  },
                  {
                    "xml": {
                      "name": "sourcePriority"
                    },
                    "description": "The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams."
                  }
                ]
              },
              "State": {
                "allOf": [
                  {
                    "$ref": "#/$defs/State"
                  },
                  {
                    "xml": {
                      "name": "state"
                    }
                  }
                ]
              }
            }
          },
          "maintenance": {
            "description": "Update maintenance setting for a flow",
            "type": "object",
            "properties": {
              "MaintenanceDay": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MaintenanceDay"
                  },
                  {
                    "xml": {
                      "name": "maintenanceDay"
                    },
                    "description": "A day of a week when the maintenance will happen. use Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday."
                  }
                ]
              },
              "MaintenanceScheduledDate": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "maintenanceScheduledDate"
                    },
                    "description": "A scheduled date in ISO UTC format when the maintenance will happen. Use YYYY-MM-DD format. Example: 2021-01-30."
                  }
                ]
              },
              "MaintenanceStartHour": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "maintenanceStartHour"
                    },
                    "description": "UTC time when the maintenance will happen. Use 24-hour HH:MM format. Minutes must be 00. Example: 13:00. The default value is 02:00."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "flowArn",
      "body"
    ],
    "$defs": {
      "FailoverMode": {
        "type": "string",
        "enum": [
          "MERGE",
          "FAILOVER"
        ]
      },
      "__integer": {
        "type": "integer"
      },
      "SourcePriority": {
        "type": "object",
        "properties": {
          "PrimarySource": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "primarySource"
                },
                "description": "The name of the source you choose as the primary source for this flow."
              }
            ]
          }
        },
        "description": "The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams."
      },
      "__string": {
        "type": "string"
      },
      "State": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "MaintenanceDay": {
        "type": "string",
        "enum": [
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
          "Sunday"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://mediaconnect.us-east-1.amazonaws.com/v1/flows/{flowArn}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Flow**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
