{
  "name": "SignalApplicationInstanceNodeInstances",
  "description": "Signal camera nodes to stop or resume.",
  "parameters": {
    "type": "object",
    "properties": {
      "ApplicationInstanceId": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\-\\_]+$",
        "minLength": 1,
        "maxLength": 255,
        "description": "An application instance ID."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "NodeSignals"
        ],
        "properties": {
          "NodeSignals": {
            "description": "A list of signals.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/NodeSignal"
            },
            "minItems": 1
          }
        }
      }
    },
    "required": [
      "ApplicationInstanceId",
      "body"
    ],
    "$defs": {
      "NodeSignal": {
        "type": "object",
        "required": [
          "NodeInstanceId",
          "Signal"
        ],
        "properties": {
          "NodeInstanceId": {
            "allOf": [
              {
                "$ref": "#/$defs/NodeInstanceId"
              },
              {
                "description": "The camera node's name, from the application manifest."
              }
            ]
          },
          "Signal": {
            "allOf": [
              {
                "$ref": "#/$defs/NodeSignalValue"
              },
              {
                "description": "The signal value."
              }
            ]
          }
        },
        "description": "A signal to a camera node to start or stop processing video."
      },
      "NodeInstanceId": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\-\\_]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "NodeSignalValue": {
        "type": "string",
        "enum": [
          "PAUSE",
          "RESUME"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://panorama.us-east-1.amazonaws.com/application-instances/{ApplicationInstanceId}/node-signals"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ApplicationInstanceId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
