openapi: 3.0.0
info:
  version: '2020-11-02'
  x-release: v4
  title: AWS Route53 Recovery Control Config
  description: Recovery Control Configuration API Reference for Amazon Route 53 Application Recovery Controller
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: route53-recovery-control-config
  x-aws-signingName: route53-recovery-control-config
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/route53-recovery-control-config-2020-11-02.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/route53-recovery-control-config/'
servers:
  - url: 'http://route53-recovery-control-config.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Route53 Recovery Control Config multi-region endpoint
  - url: 'https://route53-recovery-control-config.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Route53 Recovery Control Config multi-region endpoint
  - url: 'http://route53-recovery-control-config.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Route53 Recovery Control Config endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://route53-recovery-control-config.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Route53 Recovery Control Config endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /cluster:
    post:
      operationId: CreateCluster
      description: 'Create a new cluster. A cluster is a set of redundant Regional endpoints against which you can run API calls to update or get the state of one or more routing controls. Each cluster has a name, status, Amazon Resource Name (ARN), and an array of the five cluster endpoints (one for each supported Amazon Web Services Region) that you can use with API calls to the cluster data plane.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ClusterName
              properties:
                ClientToken:
                  description: 'A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.'
                  type: string
                  pattern: ^\S+$
                  minLength: 1
                  maxLength: 64
                ClusterName:
                  description: The name of the cluster.
                  type: string
                  pattern: ^\S+$
                  minLength: 1
                  maxLength: 64
                Tags:
                  description: The tags associated with the cluster.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__stringMin0Max256PatternS'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListClusters
      description: Returns an array of all the clusters in an account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: MaxResults
          in: query
          required: false
          description: The number of objects that you want to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token that identifies which batch of results you want to see.
          schema:
            type: string
  /controlpanel:
    post:
      operationId: CreateControlPanel
      description: 'Creates a new control panel. A control panel represents a group of routing controls that can be changed together in a single transaction. You can use a control panel to centrally view the operational status of applications across your organization, and trigger multi-app failovers in a single transaction, for example, to fail over an Availability Zone or Amazon Web Services Region.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateControlPanelResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ClusterArn
                - ControlPanelName
              properties:
                ClientToken:
                  description: 'A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.'
                  type: string
                  pattern: ^\S+$
                  minLength: 1
                  maxLength: 64
                ClusterArn:
                  description: The Amazon Resource Name (ARN) of the cluster for the control panel.
                  type: string
                  pattern: '^[A-Za-z0-9:\/_-]*$'
                  minLength: 1
                  maxLength: 256
                ControlPanelName:
                  description: The name of the control panel.
                  type: string
                  pattern: ^\S+$
                  minLength: 1
                  maxLength: 64
                Tags:
                  description: The tags associated with the control panel.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__stringMin0Max256PatternS'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateControlPanel
      description: Updates a control panel. The only update you can make to a control panel is to change the name of the control panel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateControlPanelResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ControlPanelArn
                - ControlPanelName
              properties:
                ControlPanelArn:
                  description: The Amazon Resource Name (ARN) of the control panel.
                  type: string
                  pattern: '^[A-Za-z0-9:\/_-]*$'
                  minLength: 1
                  maxLength: 256
                ControlPanelName:
                  description: The name of the control panel.
                  type: string
                  pattern: ^\S+$
                  minLength: 1
                  maxLength: 64
  /routingcontrol:
    post:
      operationId: CreateRoutingControl
      description: '<p>Creates a new routing control.</p> <p>A routing control has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control traffic routing.</p> <p>To get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoutingControlResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ClusterArn
                - RoutingControlName
              properties:
                ClientToken:
                  description: 'A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.'
                  type: string
                  pattern: ^\S+$
                  minLength: 1
                  maxLength: 64
                ClusterArn:
                  description: The Amazon Resource Name (ARN) of the cluster that includes the routing control.
                  type: string
                  pattern: '^[A-Za-z0-9:\/_-]*$'
                  minLength: 1
                  maxLength: 256
                ControlPanelArn:
                  description: The Amazon Resource Name (ARN) of the control panel that includes the routing control.
                  type: string
                  pattern: '^[A-Za-z0-9:\/_-]*$'
                  minLength: 1
                  maxLength: 256
                RoutingControlName:
                  description: The name of the routing control.
                  type: string
                  pattern: ^\S+$
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateRoutingControl
      description: 'Updates a routing control. You can only update the name of the routing control. To get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRoutingControlResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RoutingControlArn
                - RoutingControlName
              properties:
                RoutingControlArn:
                  description: The Amazon Resource Name (ARN) of the routing control.
                  type: string
                  pattern: '^[A-Za-z0-9:\/_-]*$'
                  minLength: 1
                  maxLength: 256
                RoutingControlName:
                  description: The name of the routing control.
                  type: string
                  pattern: ^\S+$
                  minLength: 1
                  maxLength: 64
  /safetyrule:
    post:
      operationId: CreateSafetyRule
      description: '<p>Creates a safety rule in a control panel. Safety rules let you add safeguards around changing routing control states, and for enabling and disabling routing controls, to help prevent unexpected outcomes.</p> <p>There are two types of safety rules: assertion rules and gating rules.</p> <p>Assertion rule: An assertion rule enforces that, when you change a routing control state, that a certain criteria is met. For example, the criteria might be that at least one routing control state is On after the transaction so that traffic continues to flow to at least one cell for the application. This ensures that you avoid a fail-open scenario.</p> <p>Gating rule: A gating rule lets you configure a gating routing control as an overall "on/off" switch for a group of routing controls. Or, you can configure more complex gating scenarios, for example by configuring multiple gating routing controls.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/r53recovery/latest/dg/routing-control.safety-rules.html">Safety rules</a> in the Amazon Route 53 Application Recovery Controller Developer Guide.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSafetyRuleResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AssertionRule:
                  description: A new assertion rule for a control panel.
                  type: object
                  properties:
                    AssertedControls:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
                        - description: 'The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions.'
                    ControlPanelArn:
                      allOf:
                        - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
                        - description: The Amazon Resource Name (ARN) for the control panel.
                    Name:
                      allOf:
                        - $ref: '#/components/schemas/__stringMin1Max64PatternS'
                        - description: The name of the assertion rule. You can use any non-white space character in the name.
                    RuleConfig:
                      allOf:
                        - $ref: '#/components/schemas/RuleConfig'
                        - description: 'The criteria that you set for specific assertion controls (routing controls) that designate how many control states must be ON as the result of a transaction. For example, if you have three assertion controls, you might specify ATLEAST 2 for your rule configuration. This means that at least two assertion controls must be ON, so that at least two Amazon Web Services Regions have traffic flowing to them.'
                    WaitPeriodMs:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - description: 'An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.'
                ClientToken:
                  description: 'A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.'
                  type: string
                  pattern: ^\S+$
                  minLength: 1
                  maxLength: 64
                GatingRule:
                  description: A new gating rule for a control panel.
                  type: object
                  properties:
                    ControlPanelArn:
                      allOf:
                        - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
                        - description: The Amazon Resource Name (ARN) of the control panel.
                    GatingControls:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
                        - description: 'The gating controls for the new gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.'
                    Name:
                      allOf:
                        - $ref: '#/components/schemas/__stringMin1Max64PatternS'
                        - description: The name for the new gating rule.
                    RuleConfig:
                      allOf:
                        - $ref: '#/components/schemas/RuleConfig'
                        - description: The criteria that you set for specific gating controls (routing controls) that designate how many control states must be ON to allow you to change (set or unset) the target control states.
                    TargetControls:
                      allOf:
                        - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
                        - description: '<p>Routing controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three Amazon Web Services Regions. Now you specify ATLEAST 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true.</p> <p>In other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.</p>'
                    WaitPeriodMs:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - description: 'An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.'
                Tags:
                  description: The tags associated with the safety rule.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__stringMin0Max256PatternS'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateSafetyRule
      description: 'Update a safety rule (an assertion rule or gating rule). You can only update the name and the waiting period for a safety rule. To make other updates, delete the safety rule and create a new one.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSafetyRuleResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AssertionRuleUpdate:
                  description: 'An update to an assertion rule. You can update the name or the evaluation period (wait period). If you don''t specify one of the items to update, the item is unchanged.'
                  type: object
                  properties:
                    Name:
                      allOf:
                        - $ref: '#/components/schemas/__stringMin1Max64PatternS'
                        - description: The name of the assertion rule. You can use any non-white space character in the name.
                    SafetyRuleArn:
                      allOf:
                        - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
                        - description: The Amazon Resource Name (ARN) of the assertion rule.
                    WaitPeriodMs:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - description: 'An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.'
                GatingRuleUpdate:
                  description: 'Update to a gating rule. You can update the name or the evaluation period (wait period). If you don''t specify one of the items to update, the item is unchanged.'
                  type: object
                  properties:
                    Name:
                      allOf:
                        - $ref: '#/components/schemas/__stringMin1Max64PatternS'
                        - description: The name for the gating rule. You can use any non-white space character in the name.
                    SafetyRuleArn:
                      allOf:
                        - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
                        - description: The Amazon Resource Name (ARN) of the gating rule.
                    WaitPeriodMs:
                      allOf:
                        - $ref: '#/components/schemas/__integer'
                        - description: 'An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.'
  '/cluster/{ClusterArn}':
    delete:
      operationId: DeleteCluster
      description: Delete a cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClusterResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: ClusterArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the cluster that you're deleting.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeCluster
      description: 'Display the details about a cluster. The response includes the cluster name, endpoints, status, and Amazon Resource Name (ARN).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeClusterResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: ClusterArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the cluster.
          schema:
            type: string
  '/controlpanel/{ControlPanelArn}':
    delete:
      operationId: DeleteControlPanel
      description: Deletes a control panel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteControlPanelResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: ControlPanelArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the control panel.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeControlPanel
      description: Displays details about a control panel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeControlPanelResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: ControlPanelArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the control panel.
          schema:
            type: string
  '/routingcontrol/{RoutingControlArn}':
    delete:
      operationId: DeleteRoutingControl
      description: Deletes a routing control.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRoutingControlResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: RoutingControlArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the routing control that you're deleting.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeRoutingControl
      description: '<p>Displays details about a routing control. A routing control has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control routing.</p> <p>To get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRoutingControlResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: RoutingControlArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the routing control.
          schema:
            type: string
  '/safetyrule/{SafetyRuleArn}':
    delete:
      operationId: DeleteSafetyRule
      description: <p>Deletes a safety rule.</p>/&gt;
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSafetyRuleResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: SafetyRuleArn
          in: path
          required: true
          description: The ARN of the safety rule.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeSafetyRule
      description: Returns information about a safety rule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSafetyRuleResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: SafetyRuleArn
          in: path
          required: true
          description: The ARN of the safety rule.
          schema:
            type: string
  '/routingcontrol/{RoutingControlArn}/associatedRoute53HealthChecks':
    get:
      operationId: ListAssociatedRoute53HealthChecks
      description: Returns an array of all Amazon Route 53 health checks associated with a specific routing control.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociatedRoute53HealthChecksResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: MaxResults
          in: query
          required: false
          description: The number of objects that you want to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token that identifies which batch of results you want to see.
          schema:
            type: string
        - name: RoutingControlArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the routing control.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /controlpanels:
    get:
      operationId: ListControlPanels
      description: Returns an array of control panels in an account or in a cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListControlPanelsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: ClusterArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of a cluster.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The number of objects that you want to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token that identifies which batch of results you want to see.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/controlpanel/{ControlPanelArn}/routingcontrols':
    get:
      operationId: ListRoutingControls
      description: 'Returns an array of routing controls for a control panel. A routing control is an Amazon Route 53 Application Recovery Controller construct that has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control routing.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutingControlsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: ControlPanelArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the control panel.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The number of objects that you want to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token that identifies which batch of results you want to see.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/controlpanel/{ControlPanelArn}/safetyrules':
    get:
      operationId: ListSafetyRules
      description: List the safety rules (the assertion rules and gating rules) that you've defined for the routing controls in a control panel.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSafetyRulesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: ControlPanelArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the control panel.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The number of objects that you want to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: The token that identifies which batch of results you want to see.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{ResourceArn}':
    get:
      operationId: ListTagsForResource
      description: Lists the tags for a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) for the resource that's tagged.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds a tag to a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) for the resource that's tagged.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tags associated with the resource.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__stringMin0Max256PatternS'
  '/tags/{ResourceArn}#TagKeys':
    delete:
      operationId: UntagResource
      description: Removes a tag from a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) for the resource that's tagged.
          schema:
            type: string
        - name: TagKeys
          in: query
          required: true
          description: Keys for the tags to be removed.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateClusterResponse:
      type: object
      properties:
        Cluster:
          allOf:
            - $ref: '#/components/schemas/Cluster'
            - description: The cluster that was created.
    __stringMin0Max256PatternS:
      type: string
      pattern: ^\S+$
      minLength: 0
      maxLength: 256
    ValidationException: {}
    InternalServerException: {}
    ServiceQuotaExceededException: {}
    AccessDeniedException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    ConflictException: {}
    CreateControlPanelResponse:
      type: object
      properties:
        ControlPanel:
          allOf:
            - $ref: '#/components/schemas/ControlPanel'
            - description: Information about a control panel.
    CreateRoutingControlResponse:
      type: object
      properties:
        RoutingControl:
          allOf:
            - $ref: '#/components/schemas/RoutingControl'
            - description: The routing control that is created.
    CreateSafetyRuleResponse:
      type: object
      properties:
        AssertionRule:
          allOf:
            - $ref: '#/components/schemas/AssertionRule'
            - description: The assertion rule created.
        GatingRule:
          allOf:
            - $ref: '#/components/schemas/GatingRule'
            - description: The gating rule created.
    __listOf__stringMin1Max256PatternAZaZ09:
      type: array
      items:
        $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
    __stringMin1Max256PatternAZaZ09:
      type: string
      pattern: '^[A-Za-z0-9:\/_-]*$'
      minLength: 1
      maxLength: 256
    __stringMin1Max64PatternS:
      type: string
      pattern: ^\S+$
      minLength: 1
      maxLength: 64
    RuleConfig:
      type: object
      required:
        - Type
        - Inverted
        - Threshold
      properties:
        Inverted:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - description: 'Logical negation of the rule. If the rule would usually evaluate true, it''s evaluated as false, and vice versa.'
        Threshold:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - description: 'The value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.'
        Type:
          allOf:
            - $ref: '#/components/schemas/RuleType'
            - description: 'A rule can be one of the following: ATLEAST, AND, or OR.'
      description: 'The rule configuration for an assertion rule. That is, the criteria that you set for specific assertion controls (routing controls) that specify how many control states must be ON after a transaction completes.'
    __integer:
      type: integer
    DeleteClusterResponse:
      type: object
      properties: {}
    DeleteControlPanelResponse:
      type: object
      properties: {}
    DeleteRoutingControlResponse:
      type: object
      properties: {}
    DeleteSafetyRuleResponse:
      type: object
      properties: {}
    DescribeClusterResponse:
      type: object
      properties:
        Cluster:
          allOf:
            - $ref: '#/components/schemas/Cluster'
            - description: The cluster for the DescribeCluster request.
    DescribeControlPanelResponse:
      type: object
      properties:
        ControlPanel:
          allOf:
            - $ref: '#/components/schemas/ControlPanel'
            - description: Information about the control panel.
    DescribeRoutingControlResponse:
      type: object
      properties:
        RoutingControl:
          allOf:
            - $ref: '#/components/schemas/RoutingControl'
            - description: Information about the routing control.
    DescribeSafetyRuleResponse:
      type: object
      properties:
        AssertionRule:
          allOf:
            - $ref: '#/components/schemas/AssertionRule'
            - description: The assertion rule in the response.
        GatingRule:
          allOf:
            - $ref: '#/components/schemas/GatingRule'
            - description: The gating rule in the response.
    ListAssociatedRoute53HealthChecksResponse:
      type: object
      properties:
        HealthCheckIds:
          allOf:
            - $ref: '#/components/schemas/__listOf__stringMax36PatternS'
            - description: Identifiers for the health checks.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max8096PatternS'
            - description: Next token for listing health checks.
    ListClustersResponse:
      type: object
      properties:
        Clusters:
          allOf:
            - $ref: '#/components/schemas/__listOfCluster'
            - description: An array of the clusters in an account.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max8096PatternS'
            - description: The token that identifies which batch of results you want to see.
    ListControlPanelsResponse:
      type: object
      properties:
        ControlPanels:
          allOf:
            - $ref: '#/components/schemas/__listOfControlPanel'
            - description: The result of a successful ListControlPanel request.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max8096PatternS'
            - description: The token that identifies which batch of results you want to see.
    ListRoutingControlsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max8096PatternS'
            - description: The token that identifies which batch of results you want to see.
        RoutingControls:
          allOf:
            - $ref: '#/components/schemas/__listOfRoutingControl'
            - description: An array of routing controls.
    ListSafetyRulesResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max8096PatternS'
            - description: The token that identifies which batch of results you want to see.
        SafetyRules:
          allOf:
            - $ref: '#/components/schemas/__listOfRule'
            - description: The list of safety rules in a control panel.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
            - description: The tags associated with the resource.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    __string:
      type: string
    UpdateControlPanelResponse:
      type: object
      properties:
        ControlPanel:
          allOf:
            - $ref: '#/components/schemas/ControlPanel'
            - description: The control panel to update.
    UpdateRoutingControlResponse:
      type: object
      properties:
        RoutingControl:
          allOf:
            - $ref: '#/components/schemas/RoutingControl'
            - description: The routing control that was updated.
    UpdateSafetyRuleResponse:
      type: object
      properties:
        AssertionRule:
          allOf:
            - $ref: '#/components/schemas/AssertionRule'
            - description: The assertion rule updated.
        GatingRule:
          allOf:
            - $ref: '#/components/schemas/GatingRule'
            - description: The gating rule updated.
    Status:
      type: string
      enum:
        - PENDING
        - DEPLOYED
        - PENDING_DELETION
      description: '<p>The deployment status of a resource. Status can be one of the following:</p> <p>PENDING: Amazon Route 53 Application Recovery Controller is creating the resource.</p> <p>DEPLOYED: The resource is deployed and ready to use.</p> <p>PENDING_DELETION: Amazon Route 53 Application Recovery Controller is deleting the resource.</p>'
    AssertionRule:
      type: object
      required:
        - Status
        - ControlPanelArn
        - SafetyRuleArn
        - AssertedControls
        - RuleConfig
        - WaitPeriodMs
        - Name
      properties:
        AssertedControls:
          allOf:
            - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
            - description: 'The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions.'
        ControlPanelArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the control panel.
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: Name of the assertion rule. You can use any non-white space character in the name.
        RuleConfig:
          allOf:
            - $ref: '#/components/schemas/RuleConfig'
            - description: 'The criteria that you set for specific assertion routing controls (AssertedControls) that designate how many routing control states must be ON as the result of a transaction. For example, if you have three assertion routing controls, you might specify ATLEAST 2 for your rule configuration. This means that at least two assertion routing control states must be ON, so that at least two Amazon Web Services Regions have traffic flowing to them.'
        SafetyRuleArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the assertion rule.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - description: 'The deployment status of an assertion rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.'
        WaitPeriodMs:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - description: 'An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.'
      description: 'An assertion rule enforces that, when you change a routing control state, that the criteria that you set in the rule configuration is met. Otherwise, the change to the routing control is not accepted. For example, the criteria might be that at least one routing control state is On after the transaction so that traffic continues to flow to at least one cell for the application. This ensures that you avoid a fail-open scenario.'
    AssertionRuleUpdate:
      type: object
      required:
        - SafetyRuleArn
        - WaitPeriodMs
        - Name
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name of the assertion rule. You can use any non-white space character in the name.
        SafetyRuleArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the assertion rule.
        WaitPeriodMs:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - description: 'An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.'
      description: 'An update to an assertion rule. You can update the name or the evaluation period (wait period). If you don''t specify one of the items to update, the item is unchanged.'
    __listOfClusterEndpoint:
      type: array
      items:
        $ref: '#/components/schemas/ClusterEndpoint'
    Cluster:
      type: object
      properties:
        ClusterArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the cluster.
        ClusterEndpoints:
          allOf:
            - $ref: '#/components/schemas/__listOfClusterEndpoint'
            - description: '<p>Endpoints for a cluster. Specify one of these endpoints when you want to set or retrieve a routing control state in the cluster.</p> <p>To get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Routing Control Actions.</p>'
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name of the cluster.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - description: 'Deployment status of a resource. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.'
      description: A set of five redundant Regional endpoints against which you can execute API calls to update or get the state of routing controls. You can host multiple control panels and routing controls on one cluster.
    __stringMin1Max128PatternAZaZ09:
      type: string
      pattern: '^[A-Za-z0-9:.\/_-]*$'
      minLength: 1
      maxLength: 128
    __stringMin1Max32PatternS:
      type: string
      pattern: ^\S+$
      minLength: 1
      maxLength: 32
    ClusterEndpoint:
      type: object
      properties:
        Endpoint:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max128PatternAZaZ09'
            - description: '<p>A cluster endpoint. Specify an endpoint and Amazon Web Services Region when you want to set or retrieve a routing control state in the cluster.</p> <p>To get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Routing Control Actions.</p>'
        Region:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max32PatternS'
            - description: The Amazon Web Services Region for a cluster endpoint.
      description: A cluster endpoint. Specify an endpoint when you want to set or retrieve a routing control state in the cluster.
    __boolean:
      type: boolean
    ControlPanel:
      type: object
      properties:
        ClusterArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the cluster that includes the control panel.
        ControlPanelArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the control panel.
        DefaultControlPanel:
          allOf:
            - $ref: '#/components/schemas/__boolean'
            - description: 'A flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets this flag for that control panel. If you create a control panel yourself, this flag is set to false.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name of the control panel. You can use any non-white space character in the name.
        RoutingControlCount:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - description: The number of routing controls in the control panel.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - description: 'The deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.'
      description: A control panel represents a group of routing controls that can be changed together in a single transaction.
    __mapOf__stringMin0Max256PatternS:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__stringMin0Max256PatternS'
    CreateClusterRequest:
      type: object
      required:
        - ClusterName
      title: CreateClusterRequest
      properties:
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: 'A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.'
        ClusterName:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name of the cluster.
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
            - description: The tags associated with the cluster.
      description: Creates a cluster.
    CreateControlPanelRequest:
      type: object
      required:
        - ClusterArn
        - ControlPanelName
      title: CreateControlPanelRequest
      properties:
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: 'A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.'
        ClusterArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the cluster for the control panel.
        ControlPanelName:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name of the control panel.
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
            - description: The tags associated with the control panel.
      description: The details of the control panel that you're creating.
    CreateRoutingControlRequest:
      type: object
      required:
        - ClusterArn
        - RoutingControlName
      title: CreateRoutingControlRequest
      properties:
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: 'A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.'
        ClusterArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the cluster that includes the routing control.
        ControlPanelArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the control panel that includes the routing control.
        RoutingControlName:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name of the routing control.
      description: The details of the routing control that you're creating.
    RoutingControl:
      type: object
      properties:
        ControlPanelArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the control panel that includes the routing control.
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name of the routing control.
        RoutingControlArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the routing control.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - description: 'The deployment status of a routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.'
      description: 'A routing control has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control traffic routing.'
    NewAssertionRule:
      type: object
      required:
        - ControlPanelArn
        - AssertedControls
        - RuleConfig
        - WaitPeriodMs
        - Name
      properties:
        AssertedControls:
          allOf:
            - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
            - description: 'The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions.'
        ControlPanelArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) for the control panel.
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name of the assertion rule. You can use any non-white space character in the name.
        RuleConfig:
          allOf:
            - $ref: '#/components/schemas/RuleConfig'
            - description: 'The criteria that you set for specific assertion controls (routing controls) that designate how many control states must be ON as the result of a transaction. For example, if you have three assertion controls, you might specify ATLEAST 2 for your rule configuration. This means that at least two assertion controls must be ON, so that at least two Amazon Web Services Regions have traffic flowing to them.'
        WaitPeriodMs:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - description: 'An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.'
      description: A new assertion rule for a control panel.
    NewGatingRule:
      type: object
      required:
        - TargetControls
        - ControlPanelArn
        - GatingControls
        - RuleConfig
        - WaitPeriodMs
        - Name
      properties:
        ControlPanelArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the control panel.
        GatingControls:
          allOf:
            - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
            - description: 'The gating controls for the new gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name for the new gating rule.
        RuleConfig:
          allOf:
            - $ref: '#/components/schemas/RuleConfig'
            - description: The criteria that you set for specific gating controls (routing controls) that designate how many control states must be ON to allow you to change (set or unset) the target control states.
        TargetControls:
          allOf:
            - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
            - description: '<p>Routing controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three Amazon Web Services Regions. Now you specify ATLEAST 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true.</p> <p>In other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.</p>'
        WaitPeriodMs:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - description: 'An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.'
      description: A new gating rule for a control panel.
    CreateSafetyRuleRequest:
      type: object
      title: CreateSafetyRuleRequest
      properties:
        AssertionRule:
          allOf:
            - $ref: '#/components/schemas/NewAssertionRule'
            - description: The assertion rule requested.
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: 'A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.'
        GatingRule:
          allOf:
            - $ref: '#/components/schemas/NewGatingRule'
            - description: The gating rule requested.
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
            - description: The tags associated with the safety rule.
      description: The request body that you include when you create a safety rule.
    GatingRule:
      type: object
      required:
        - Status
        - TargetControls
        - ControlPanelArn
        - SafetyRuleArn
        - GatingControls
        - RuleConfig
        - WaitPeriodMs
        - Name
      properties:
        ControlPanelArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the control panel.
        GatingControls:
          allOf:
            - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
            - description: 'An array of gating routing control Amazon Resource Names (ARNs). For a simple "on/off" switch, specify the ARN for one routing control. The gating routing controls are evaluated by the rule configuration that you specify to determine if the target routing control states can be changed.'
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name for the gating rule. You can use any non-white space character in the name.
        RuleConfig:
          allOf:
            - $ref: '#/components/schemas/RuleConfig'
            - description: The criteria that you set for gating routing controls that designate how many of the routing control states must be ON to allow you to update target routing control states.
        SafetyRuleArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the gating rule.
        Status:
          allOf:
            - $ref: '#/components/schemas/Status'
            - description: 'The deployment status of a gating rule. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.'
        TargetControls:
          allOf:
            - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
            - description: 'An array of target routing control Amazon Resource Names (ARNs) for which the states can only be updated if the rule configuration that you specify evaluates to true for the gating routing control. As a simple example, if you have a single gating control, it acts as an overall "on/off" switch for a set of target routing controls. You can use this to manually override automated failover, for example.'
        WaitPeriodMs:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - description: 'An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.'
      description: '<p>A gating rule verifies that a gating routing control or set of gating routing controls, evaluates as true, based on a rule configuration that you specify, which allows a set of routing control state changes to complete.</p> <p>For example, if you specify one gating routing control and you set the Type in the rule configuration to OR, that indicates that you must set the gating routing control to On for the rule to evaluate as true; that is, for the gating control "switch" to be "On". When you do that, then you can update the routing control states for the target routing controls that you specify in the gating rule.</p>'
    DeleteClusterRequest:
      type: object
      title: DeleteClusterRequest
      properties: {}
    DeleteControlPanelRequest:
      type: object
      title: DeleteControlPanelRequest
      properties: {}
    DeleteRoutingControlRequest:
      type: object
      title: DeleteRoutingControlRequest
      properties: {}
    DeleteSafetyRuleRequest:
      type: object
      title: DeleteSafetyRuleRequest
      properties: {}
    DescribeClusterRequest:
      type: object
      title: DescribeClusterRequest
      properties: {}
    DescribeControlPanelRequest:
      type: object
      title: DescribeControlPanelRequest
      properties: {}
    DescribeRoutingControlRequest:
      type: object
      title: DescribeRoutingControlRequest
      properties: {}
    DescribeSafetyRuleRequest:
      type: object
      title: DescribeSafetyRuleRequest
      properties: {}
    GatingRuleUpdate:
      type: object
      required:
        - SafetyRuleArn
        - WaitPeriodMs
        - Name
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name for the gating rule. You can use any non-white space character in the name.
        SafetyRuleArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the gating rule.
        WaitPeriodMs:
          allOf:
            - $ref: '#/components/schemas/__integer'
            - description: 'An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.'
      description: 'Update to a gating rule. You can update the name or the evaluation period (wait period). If you don''t specify one of the items to update, the item is unchanged.'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListAssociatedRoute53HealthChecksRequest:
      type: object
      title: ListAssociatedRoute53HealthChecksRequest
      properties: {}
    __listOf__stringMax36PatternS:
      type: array
      items:
        $ref: '#/components/schemas/__stringMax36PatternS'
    __stringMin1Max8096PatternS:
      type: string
      pattern: '[\S]*'
      minLength: 1
      maxLength: 8096
    ListClustersRequest:
      type: object
      title: ListClustersRequest
      properties: {}
    __listOfCluster:
      type: array
      items:
        $ref: '#/components/schemas/Cluster'
    ListControlPanelsRequest:
      type: object
      title: ListControlPanelsRequest
      properties: {}
    __listOfControlPanel:
      type: array
      items:
        $ref: '#/components/schemas/ControlPanel'
    ListRoutingControlsRequest:
      type: object
      title: ListRoutingControlsRequest
      properties: {}
    __listOfRoutingControl:
      type: array
      items:
        $ref: '#/components/schemas/RoutingControl'
    ListSafetyRulesRequest:
      type: object
      title: ListSafetyRulesRequest
      properties: {}
    __listOfRule:
      type: array
      items:
        $ref: '#/components/schemas/Rule'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    Rule:
      type: object
      properties:
        ASSERTION:
          allOf:
            - $ref: '#/components/schemas/AssertionRule'
            - description: 'An assertion rule enforces that, when a routing control state is changed, the criteria set by the rule configuration is met. Otherwise, the change to the routing control state is not accepted. For example, the criteria might be that at least one routing control state is On after the transaction so that traffic continues to flow to at least one cell for the application. This ensures that you avoid a fail-open scenario.'
        GATING:
          allOf:
            - $ref: '#/components/schemas/GatingRule'
            - description: '<p>A gating rule verifies that a gating routing control or set of gating routing controls, evaluates as true, based on a rule configuration that you specify, which allows a set of routing control state changes to complete.</p> <p>For example, if you specify one gating routing control and you set the Type in the rule configuration to OR, that indicates that you must set the gating routing control to On for the rule to evaluate as true; that is, for the gating control "switch" to be "On". When you do that, then you can update the routing control states for the target routing controls that you specify in the gating rule.</p>'
      description: A safety rule. A safety rule can be an assertion rule or a gating rule.
    RuleType:
      type: string
      enum:
        - ATLEAST
        - AND
        - OR
      description: '<p>An enumerated type that determines how the evaluated rules are processed. RuleType can be one of the following:</p> <p>ATLEAST - At least N routing controls must be set. You specify N as the Threshold in the rule configuration.</p> <p>AND - All routing controls must be set. This is a shortcut for "At least N," where N is the total number of controls in the rule.</p> <p>OR - Any control must be set. This is a shortcut for "At least N," where N is 1.</p>'
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
            - description: The tags associated with the resource.
      description: Request of adding tag to the resource
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateControlPanelRequest:
      type: object
      required:
        - ControlPanelArn
        - ControlPanelName
      title: UpdateControlPanelRequest
      properties:
        ControlPanelArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the control panel.
        ControlPanelName:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name of the control panel.
      description: The details of the control panel that you're updating.
    UpdateRoutingControlRequest:
      type: object
      required:
        - RoutingControlName
        - RoutingControlArn
      title: UpdateRoutingControlRequest
      properties:
        RoutingControlArn:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
            - description: The Amazon Resource Name (ARN) of the routing control.
        RoutingControlName:
          allOf:
            - $ref: '#/components/schemas/__stringMin1Max64PatternS'
            - description: The name of the routing control.
      description: The details of the routing control that you're updating.
    UpdateSafetyRuleRequest:
      type: object
      title: UpdateSafetyRuleRequest
      properties:
        AssertionRuleUpdate:
          allOf:
            - $ref: '#/components/schemas/AssertionRuleUpdate'
            - description: The assertion rule to update.
        GatingRuleUpdate:
          allOf:
            - $ref: '#/components/schemas/GatingRuleUpdate'
            - description: The gating rule to update.
      description: A rule that you add to Application Recovery Controller to ensure that recovery actions don't accidentally impair your application's availability.
    __stringMax36PatternS:
      type: string
      pattern: ^\S+$
      maxLength: 36
security:
  - hmac: []
