{
  "name": "CreateSafetyRule",
  "description": "<p>Creates a safety rule in a control panel. Safety rules let you add safeguards around changing routing control states, and for enabling and disabling routing controls, to help prevent unexpected outcomes.</p> <p>There are two types of safety rules: assertion rules and gating rules.</p> <p>Assertion rule: An assertion rule enforces that, when you change a routing control state, that a certain criteria is met. For example, the criteria might be that at least one routing control state is On after the transaction so that traffic continues to flow to at least one cell for the application. This ensures that you avoid a fail-open scenario.</p> <p>Gating rule: A gating rule lets you configure a gating routing control as an overall \"on/off\" switch for a group of routing controls. Or, you can configure more complex gating scenarios, for example by configuring multiple gating routing controls.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/r53recovery/latest/dg/routing-control.safety-rules.html\">Safety rules</a> in the Amazon Route 53 Application Recovery Controller Developer Guide.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "AssertionRule": {
            "description": "A new assertion rule for a control panel.",
            "type": "object",
            "properties": {
              "AssertedControls": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__listOf__stringMin1Max256PatternAZaZ09"
                  },
                  {
                    "description": "The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three Amazon Web Services Regions."
                  }
                ]
              },
              "ControlPanelArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__stringMin1Max256PatternAZaZ09"
                  },
                  {
                    "description": "The Amazon Resource Name (ARN) for the control panel."
                  }
                ]
              },
              "Name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__stringMin1Max64PatternS"
                  },
                  {
                    "description": "The name of the assertion rule. You can use any non-white space character in the name."
                  }
                ]
              },
              "RuleConfig": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RuleConfig"
                  },
                  {
                    "description": "The criteria that you set for specific assertion controls (routing controls) that designate how many control states must be ON as the result of a transaction. For example, if you have three assertion controls, you might specify ATLEAST 2 for your rule configuration. This means that at least two assertion controls must be ON, so that at least two Amazon Web Services Regions have traffic flowing to them."
                  }
                ]
              },
              "WaitPeriodMs": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "description": "An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent \"flapping\" of state. The wait period is 5000 ms by default, but you can choose a custom value."
                  }
                ]
              }
            }
          },
          "ClientToken": {
            "description": "A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.",
            "type": "string",
            "pattern": "^\\S+$",
            "minLength": 1,
            "maxLength": 64
          },
          "GatingRule": {
            "description": "A new gating rule for a control panel.",
            "type": "object",
            "properties": {
              "ControlPanelArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__stringMin1Max256PatternAZaZ09"
                  },
                  {
                    "description": "The Amazon Resource Name (ARN) of the control panel."
                  }
                ]
              },
              "GatingControls": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__listOf__stringMin1Max256PatternAZaZ09"
                  },
                  {
                    "description": "The gating controls for the new gating rule. That is, routing controls that are evaluated by the rule configuration that you specify."
                  }
                ]
              },
              "Name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__stringMin1Max64PatternS"
                  },
                  {
                    "description": "The name for the new gating rule."
                  }
                ]
              },
              "RuleConfig": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RuleConfig"
                  },
                  {
                    "description": "The criteria that you set for specific gating controls (routing controls) that designate how many control states must be ON to allow you to change (set or unset) the target control states."
                  }
                ]
              },
              "TargetControls": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__listOf__stringMin1Max256PatternAZaZ09"
                  },
                  {
                    "description": "<p>Routing controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three Amazon Web Services Regions. Now you specify ATLEAST 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true.</p> <p>In other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.</p>"
                  }
                ]
              },
              "WaitPeriodMs": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "description": "An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent \"flapping\" of state. The wait period is 5000 ms by default, but you can choose a custom value."
                  }
                ]
              }
            }
          },
          "Tags": {
            "description": "The tags associated with the safety rule.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/__stringMin0Max256PatternS"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "__listOf__stringMin1Max256PatternAZaZ09": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/__stringMin1Max256PatternAZaZ09"
        }
      },
      "__stringMin1Max256PatternAZaZ09": {
        "type": "string",
        "pattern": "^[A-Za-z0-9:\\/_-]*$",
        "minLength": 1,
        "maxLength": 256
      },
      "__stringMin1Max64PatternS": {
        "type": "string",
        "pattern": "^\\S+$",
        "minLength": 1,
        "maxLength": 64
      },
      "RuleConfig": {
        "type": "object",
        "required": [
          "Type",
          "Inverted",
          "Threshold"
        ],
        "properties": {
          "Inverted": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "description": "Logical negation of the rule. If the rule would usually evaluate true, it's evaluated as false, and vice versa."
              }
            ]
          },
          "Threshold": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "The value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleType"
              },
              {
                "description": "A rule can be one of the following: ATLEAST, AND, or OR."
              }
            ]
          }
        },
        "description": "The rule configuration for an assertion rule. That is, the criteria that you set for specific assertion controls (routing controls) that specify how many control states must be ON after a transaction completes."
      },
      "__boolean": {
        "type": "boolean"
      },
      "__integer": {
        "type": "integer"
      },
      "RuleType": {
        "type": "string",
        "enum": [
          "ATLEAST",
          "AND",
          "OR"
        ],
        "description": "<p>An enumerated type that determines how the evaluated rules are processed. RuleType can be one of the following:</p> <p>ATLEAST - At least N routing controls must be set. You specify N as the Threshold in the rule configuration.</p> <p>AND - All routing controls must be set. This is a shortcut for \"At least N,\" where N is the total number of controls in the rule.</p> <p>OR - Any control must be set. This is a shortcut for \"At least N,\" where N is 1.</p>"
      },
      "__stringMin0Max256PatternS": {
        "type": "string",
        "pattern": "^\\S+$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://route53-recovery-control-config.us-east-1.amazonaws.com/safetyrule"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AssertionRule**",
            "**GatingRule**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
