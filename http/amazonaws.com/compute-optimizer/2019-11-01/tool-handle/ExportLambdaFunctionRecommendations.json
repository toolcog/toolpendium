{
  "name": "ExportLambdaFunctionRecommendations",
  "description": "<p>Exports optimization recommendations for Lambda functions.</p> <p>Recommendations are exported in a comma-separated values (.csv) file, and its metadata in a JavaScript Object Notation (JSON) (.json) file, to an existing Amazon Simple Storage Service (Amazon S3) bucket that you specify. For more information, see <a href=\"https://docs.aws.amazon.com/compute-optimizer/latest/ug/exporting-recommendations.html\">Exporting Recommendations</a> in the <i>Compute Optimizer User Guide</i>.</p> <p>You can have only one Lambda function export job in progress per Amazon Web Services Region.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "ComputeOptimizerService.ExportLambdaFunctionRecommendations"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ExportLambdaFunctionRecommendationsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ExportLambdaFunctionRecommendationsRequest": {
        "type": "object",
        "required": [
          "s3DestinationConfig"
        ],
        "title": "ExportLambdaFunctionRecommendationsRequest",
        "properties": {
          "accountIds": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountIds"
              },
              {
                "description": "<p>The IDs of the Amazon Web Services accounts for which to export Lambda function recommendations.</p> <p>If your account is the management account of an organization, use this parameter to specify the member account for which you want to export recommendations.</p> <p>This parameter cannot be specified together with the include member accounts parameter. The parameters are mutually exclusive.</p> <p>Recommendations for member accounts are not included in the export if this parameter, or the include member accounts parameter, is omitted.</p> <p>You can specify multiple account IDs per request.</p>"
              }
            ]
          },
          "filters": {
            "allOf": [
              {
                "$ref": "#/$defs/LambdaFunctionRecommendationFilters"
              },
              {
                "description": "An array of objects to specify a filter that exports a more specific set of Lambda function recommendations."
              }
            ]
          },
          "fieldsToExport": {
            "allOf": [
              {
                "$ref": "#/$defs/ExportableLambdaFunctionFields"
              },
              {
                "description": "The recommendations data to include in the export file. For more information about the fields that can be exported, see <a href=\"https://docs.aws.amazon.com/compute-optimizer/latest/ug/exporting-recommendations.html#exported-files\">Exported files</a> in the <i>Compute Optimizer User Guide</i>."
              }
            ]
          },
          "s3DestinationConfig": {
            "$ref": "#/$defs/S3DestinationConfig"
          },
          "fileFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/FileFormat"
              },
              {
                "description": "<p>The format of the export file.</p> <p>The only export file format currently supported is <code>Csv</code>.</p>"
              }
            ]
          },
          "includeMemberAccounts": {
            "allOf": [
              {
                "$ref": "#/$defs/IncludeMemberAccounts"
              },
              {
                "description": "<p>Indicates whether to include recommendations for resources in all member accounts of the organization if your account is the management account of an organization.</p> <p>The member accounts must also be opted in to Compute Optimizer, and trusted access for Compute Optimizer must be enabled in the organization account. For more information, see <a href=\"https://docs.aws.amazon.com/compute-optimizer/latest/ug/security-iam.html#trusted-service-access\">Compute Optimizer and Amazon Web Services Organizations trusted access</a> in the <i>Compute Optimizer User Guide</i>.</p> <p>Recommendations for member accounts of the organization are not included in the export file if this parameter is omitted.</p> <p>This parameter cannot be specified together with the account IDs parameter. The parameters are mutually exclusive.</p> <p>Recommendations for member accounts are not included in the export if this parameter, or the account IDs parameter, is omitted.</p>"
              }
            ]
          }
        }
      },
      "AccountIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccountId"
        }
      },
      "AccountId": {
        "type": "string"
      },
      "LambdaFunctionRecommendationFilters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LambdaFunctionRecommendationFilter"
        }
      },
      "LambdaFunctionRecommendationFilter": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/LambdaFunctionRecommendationFilterName"
              },
              {
                "description": "<p>The name of the filter.</p> <p>Specify <code>Finding</code> to return recommendations with a specific finding classification (for example, <code>NotOptimized</code>).</p> <p>Specify <code>FindingReasonCode</code> to return recommendations with a specific finding reason code (for example, <code>MemoryUnderprovisioned</code>).</p> <p>You can filter your Lambda function recommendations by <code>tag:key</code> and <code>tag-key</code> tags.</p> <p>A <code>tag:key</code> is a key and value combination of a tag assigned to your Lambda function recommendations. Use the tag key in the filter name and the tag value as the filter value. For example, to find all Lambda function recommendations that have a tag with the key of <code>Owner</code> and the value of <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> <p>A <code>tag-key</code> is the key of a tag assigned to your Lambda function recommendations. Use this filter to find all of your Lambda function recommendations that have a tag with a specific key. This doesnâ€™t consider the tag value. For example, you can find your Lambda function recommendations with a tag key value of <code>Owner</code> or without any tag keys assigned.</p>"
              }
            ]
          },
          "values": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterValues"
              },
              {
                "description": "<p>The value of the filter.</p> <p>The valid values for this parameter are as follows, depending on what you specify for the <code>name</code> parameter:</p> <ul> <li> <p>Specify <code>Optimized</code>, <code>NotOptimized</code>, or <code>Unavailable</code> if you specify the <code>name</code> parameter as <code>Finding</code>.</p> </li> <li> <p>Specify <code>MemoryOverprovisioned</code>, <code>MemoryUnderprovisioned</code>, <code>InsufficientData</code>, or <code>Inconclusive</code> if you specify the <code>name</code> parameter as <code>FindingReasonCode</code>.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "<p>Describes a filter that returns a more specific list of Lambda function recommendations. Use this filter with the <a>GetLambdaFunctionRecommendations</a> action.</p> <p>You can use <code>EBSFilter</code> with the <a>GetEBSVolumeRecommendations</a> action, <code>JobFilter</code> with the <a>DescribeRecommendationExportJobs</a> action, and <code>Filter</code> with the <a>GetAutoScalingGroupRecommendations</a> and <a>GetEC2InstanceRecommendations</a> actions.</p>"
      },
      "LambdaFunctionRecommendationFilterName": {
        "type": "string",
        "enum": [
          "Finding",
          "FindingReasonCode"
        ]
      },
      "FilterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilterValue"
        }
      },
      "FilterValue": {
        "type": "string"
      },
      "ExportableLambdaFunctionFields": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ExportableLambdaFunctionField"
        }
      },
      "ExportableLambdaFunctionField": {
        "type": "string",
        "enum": [
          "AccountId",
          "FunctionArn",
          "FunctionVersion",
          "Finding",
          "FindingReasonCodes",
          "NumberOfInvocations",
          "UtilizationMetricsDurationMaximum",
          "UtilizationMetricsDurationAverage",
          "UtilizationMetricsMemoryMaximum",
          "UtilizationMetricsMemoryAverage",
          "LookbackPeriodInDays",
          "CurrentConfigurationMemorySize",
          "CurrentConfigurationTimeout",
          "CurrentCostTotal",
          "CurrentCostAverage",
          "RecommendationOptionsConfigurationMemorySize",
          "RecommendationOptionsCostLow",
          "RecommendationOptionsCostHigh",
          "RecommendationOptionsProjectedUtilizationMetricsDurationLowerBound",
          "RecommendationOptionsProjectedUtilizationMetricsDurationUpperBound",
          "RecommendationOptionsProjectedUtilizationMetricsDurationExpected",
          "LastRefreshTimestamp",
          "CurrentPerformanceRisk",
          "RecommendationOptionsSavingsOpportunityPercentage",
          "RecommendationOptionsEstimatedMonthlySavingsCurrency",
          "RecommendationOptionsEstimatedMonthlySavingsValue",
          "Tags"
        ]
      },
      "S3DestinationConfig": {
        "type": "object",
        "properties": {
          "bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/DestinationBucket"
              },
              {
                "description": "The name of the Amazon S3 bucket to use as the destination for an export job."
              }
            ]
          },
          "keyPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/DestinationKeyPrefix"
              },
              {
                "description": "The Amazon S3 bucket prefix for an export job."
              }
            ]
          }
        },
        "description": "<p>Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and key prefix for a recommendations export job.</p> <p>You must create the destination Amazon S3 bucket for your recommendations export before you create the export job. Compute Optimizer does not create the S3 bucket for you. After you create the S3 bucket, ensure that it has the required permission policy to allow Compute Optimizer to write the export file to it. If you plan to specify an object prefix when you create the export job, you must include the object prefix in the policy that you add to the S3 bucket. For more information, see <a href=\"https://docs.aws.amazon.com/compute-optimizer/latest/ug/create-s3-bucket-policy-for-compute-optimizer.html\">Amazon S3 Bucket Policy for Compute Optimizer</a> in the <i>Compute Optimizer User Guide</i>.</p>"
      },
      "DestinationBucket": {
        "type": "string"
      },
      "DestinationKeyPrefix": {
        "type": "string"
      },
      "FileFormat": {
        "type": "string",
        "enum": [
          "Csv"
        ]
      },
      "IncludeMemberAccounts": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://compute-optimizer.us-east-1.amazonaws.com/#X-Amz-Target=ComputeOptimizerService.ExportLambdaFunctionRecommendations"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**jobId**",
            [
              "**s3Destination**: Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and object keys of a recommendations export file, and its associated metadata file.",
              {
                "$ul": [
                  "**bucket**",
                  "**key**",
                  "**metadataKey**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
