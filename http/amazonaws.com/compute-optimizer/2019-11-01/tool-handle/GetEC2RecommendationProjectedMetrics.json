{
  "name": "GetEC2RecommendationProjectedMetrics",
  "description": "<p>Returns the projected utilization metrics of Amazon EC2 instance recommendations.</p> <note> <p>The <code>Cpu</code> and <code>Memory</code> metrics are the only projected utilization metrics returned when you run this action. Additionally, the <code>Memory</code> metric is returned only for resources that have the unified CloudWatch agent installed on them. For more information, see <a href=\"https://docs.aws.amazon.com/compute-optimizer/latest/ug/metrics.html#cw-agent\">Enabling Memory Utilization with the CloudWatch Agent</a>.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "ComputeOptimizerService.GetEC2RecommendationProjectedMetrics"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetEC2RecommendationProjectedMetricsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetEC2RecommendationProjectedMetricsRequest": {
        "type": "object",
        "required": [
          "instanceArn",
          "stat",
          "period",
          "startTime",
          "endTime"
        ],
        "title": "GetEC2RecommendationProjectedMetricsRequest",
        "properties": {
          "instanceArn": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the instances for which to return recommendation projected metrics."
              }
            ]
          },
          "stat": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricStatistic"
              },
              {
                "description": "The statistic of the projected metrics."
              }
            ]
          },
          "period": {
            "allOf": [
              {
                "$ref": "#/$defs/Period"
              },
              {
                "description": "The granularity, in seconds, of the projected metrics data points."
              }
            ]
          },
          "startTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The timestamp of the first projected metrics data point to return."
              }
            ]
          },
          "endTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The timestamp of the last projected metrics data point to return."
              }
            ]
          },
          "recommendationPreferences": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationPreferences"
              },
              {
                "description": "An object to specify the preferences for the Amazon EC2 recommendation projected metrics to return in the response."
              }
            ]
          }
        }
      },
      "InstanceArn": {
        "type": "string"
      },
      "MetricStatistic": {
        "type": "string",
        "enum": [
          "Maximum",
          "Average"
        ]
      },
      "Period": {
        "type": "integer"
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "RecommendationPreferences": {
        "type": "object",
        "properties": {
          "cpuVendorArchitectures": {
            "allOf": [
              {
                "$ref": "#/$defs/CpuVendorArchitectures"
              },
              {
                "description": "<p>Specifies the CPU vendor and architecture for Amazon EC2 instance and Auto Scaling group recommendations.</p> <p>For example, when you specify <code>AWS_ARM64</code> with:</p> <ul> <li> <p>A <a>GetEC2InstanceRecommendations</a> or <a>GetAutoScalingGroupRecommendations</a> request, Compute Optimizer returns recommendations that consist of Graviton2 instance types only.</p> </li> <li> <p>A <a>GetEC2RecommendationProjectedMetrics</a> request, Compute Optimizer returns projected utilization metrics for Graviton2 instance type recommendations only.</p> </li> <li> <p>A <a>ExportEC2InstanceRecommendations</a> or <a>ExportAutoScalingGroupRecommendations</a> request, Compute Optimizer exports recommendations that consist of Graviton2 instance types only.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Describes the recommendation preferences to return in the response of a <a>GetAutoScalingGroupRecommendations</a>, <a>GetEC2InstanceRecommendations</a>, and <a>GetEC2RecommendationProjectedMetrics</a> request."
      },
      "CpuVendorArchitectures": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CpuVendorArchitecture"
        }
      },
      "CpuVendorArchitecture": {
        "type": "string",
        "enum": [
          "AWS_ARM64",
          "CURRENT"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://compute-optimizer.us-east-1.amazonaws.com/#X-Amz-Target=ComputeOptimizerService.GetEC2RecommendationProjectedMetrics"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**recommendedOptionProjectedMetrics**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
