{
  "name": "CreateSamplingRule",
  "description": "Creates a rule to control sampling behavior for instrumented applications. Services retrieve rules with <a href=\"https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingRules.html\">GetSamplingRules</a>, and evaluate each rule in ascending order of <i>priority</i> for each request. If a rule matches, the service records a trace, borrowing it from the reservoir size. After 10 seconds, the service reports back to X-Ray with <a href=\"https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingTargets.html\">GetSamplingTargets</a> to get updated versions of each in-use rule. The updated rule contains a trace quota that the service can use instead of borrowing from the reservoir.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "SamplingRule"
        ],
        "properties": {
          "SamplingRule": {
            "description": "A sampling rule that services use to decide whether to instrument a request. Rule fields can match properties of the service, or properties of a request. The service can ignore rules that don't match its properties.",
            "type": "object",
            "properties": {
              "RuleName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RuleName"
                  },
                  {
                    "description": "The name of the sampling rule. Specify a rule by either name or ARN, but not both."
                  }
                ]
              },
              "RuleARN": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String"
                  },
                  {
                    "description": "The ARN of the sampling rule. Specify a rule by either name or ARN, but not both."
                  }
                ]
              },
              "ResourceARN": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ResourceARN"
                  },
                  {
                    "description": "Matches the ARN of the Amazon Web Services resource on which the service runs."
                  }
                ]
              },
              "Priority": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Priority"
                  },
                  {
                    "description": "The priority of the sampling rule."
                  }
                ]
              },
              "FixedRate": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FixedRate"
                  },
                  {
                    "description": "The percentage of matching requests to instrument, after the reservoir is exhausted."
                  }
                ]
              },
              "ReservoirSize": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ReservoirSize"
                  },
                  {
                    "description": "A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively."
                  }
                ]
              },
              "ServiceName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ServiceName"
                  },
                  {
                    "description": "Matches the <code>name</code> that the service uses to identify itself in segments."
                  }
                ]
              },
              "ServiceType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ServiceType"
                  },
                  {
                    "description": "Matches the <code>origin</code> that the service uses to identify its type in segments."
                  }
                ]
              },
              "Host": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Host"
                  },
                  {
                    "description": "Matches the hostname from a request URL."
                  }
                ]
              },
              "HTTPMethod": {
                "allOf": [
                  {
                    "$ref": "#/$defs/HTTPMethod"
                  },
                  {
                    "description": "Matches the HTTP method of a request."
                  }
                ]
              },
              "URLPath": {
                "allOf": [
                  {
                    "$ref": "#/$defs/URLPath"
                  },
                  {
                    "description": "Matches the path from a request URL."
                  }
                ]
              },
              "Version": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Version"
                  },
                  {
                    "description": "The version of the sampling rule format (<code>1</code>)."
                  }
                ]
              },
              "Attributes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AttributeMap"
                  },
                  {
                    "description": "Matches attributes derived from the request."
                  }
                ]
              }
            }
          },
          "Tags": {
            "description": "<p>A map that contains one or more tag keys and tag values to attach to an X-Ray sampling rule. For more information about ways to use tags, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>The following restrictions apply to tags:</p> <ul> <li> <p>Maximum number of user-applied tags per resource: 50</p> </li> <li> <p>Maximum tag key length: 128 Unicode characters</p> </li> <li> <p>Maximum tag value length: 256 Unicode characters</p> </li> <li> <p>Valid values for key and value: a-z, A-Z, 0-9, space, and the following characters: _ . : / = + - and @</p> </li> <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>Don't use <code>aws:</code> as a prefix for keys; it's reserved for Amazon Web Services use.</p> </li> </ul>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 0,
            "maxItems": 200
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "RuleName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32
      },
      "String": {
        "type": "string"
      },
      "ResourceARN": {
        "type": "string",
        "maxLength": 500
      },
      "Priority": {
        "type": "integer",
        "minimum": 1,
        "maximum": 9999
      },
      "FixedRate": {
        "type": "number",
        "format": "double",
        "minimum": 0,
        "maximum": 1
      },
      "ReservoirSize": {
        "type": "integer",
        "minimum": 0
      },
      "ServiceName": {
        "type": "string",
        "maxLength": 64
      },
      "ServiceType": {
        "type": "string",
        "maxLength": 64
      },
      "Host": {
        "type": "string",
        "maxLength": 64
      },
      "HTTPMethod": {
        "type": "string",
        "maxLength": 10
      },
      "URLPath": {
        "type": "string",
        "maxLength": 128
      },
      "Version": {
        "type": "integer",
        "minimum": 1
      },
      "AttributeMap": {
        "type": "object",
        "maxProperties": 5,
        "additionalProperties": {
          "$ref": "#/$defs/AttributeValue"
        }
      },
      "AttributeValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "A tag key, such as <code>Stage</code> or <code>Name</code>. A tag key cannot be empty. The key can be a maximum of 128 characters, and can contain only Unicode letters, numbers, or separators, or the following special characters: <code>+ - = . _ : /</code> "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "An optional tag value, such as <code>Production</code> or <code>test-only</code>. The value can be a maximum of 255 characters, and contain only Unicode letters, numbers, or separators, or the following special characters: <code>+ - = . _ : /</code> "
              }
            ]
          }
        },
        "description": "<p>A map that contains tag keys and tag values to attach to an Amazon Web Services X-Ray group or sampling rule. For more information about ways to use tags, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>The following restrictions apply to tags:</p> <ul> <li> <p>Maximum number of user-applied tags per resource: 50</p> </li> <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>Don't use <code>aws:</code> as a prefix for keys; it's reserved for Amazon Web Services use. You cannot edit or delete system tags.</p> </li> </ul>"
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://xray.us-east-1.amazonaws.com/CreateSamplingRule"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**SamplingRuleRecord**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
