{
  "name": "GET_CreateReceiptRule",
  "description": "<p>Creates a receipt rule.</p> <p>For information about setting up receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html\">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "RuleSetName": {
        "type": "string",
        "description": "The name of the rule set that the receipt rule will be added to."
      },
      "After": {
        "type": "string",
        "description": "The name of an existing rule after which the new rule will be placed. If this parameter is null, the new rule will be inserted at the beginning of the rule list."
      },
      "Rule": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ReceiptRuleName"
              },
              {
                "description": "<p>The name of the receipt rule. The name must:</p> <ul> <li> <p>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-).</p> </li> <li> <p>Start and end with a letter or number.</p> </li> <li> <p>Contain less than 64 characters.</p> </li> </ul>"
              }
            ]
          },
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Enabled"
              },
              {
                "description": "If <code>true</code>, the receipt rule is active. The default value is <code>false</code>."
              }
            ]
          },
          "TlsPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/TlsPolicy"
              },
              {
                "description": "Specifies whether Amazon SES should require that incoming email is delivered over a connection encrypted with Transport Layer Security (TLS). If this parameter is set to <code>Require</code>, Amazon SES will bounce emails that are not received over TLS. The default is <code>Optional</code>."
              }
            ]
          },
          "Recipients": {
            "allOf": [
              {
                "$ref": "#/$defs/RecipientsList"
              },
              {
                "description": "The recipient domains and email addresses that the receipt rule applies to. If this field is not specified, this rule will match all recipients under all verified domains."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/ReceiptActionsList"
              },
              {
                "description": "An ordered list of actions to perform on messages that match at least one of the recipient email addresses or domains specified in the receipt rule."
              }
            ]
          },
          "ScanEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Enabled"
              },
              {
                "description": "If <code>true</code>, then messages that this receipt rule applies to are scanned for spam and viruses. The default value is <code>false</code>."
              }
            ]
          }
        },
        "description": "A data structure that contains the specified rule's name, actions, recipients, domains, enabled status, scan status, and TLS policy."
      },
      "Action": {
        "type": "string",
        "enum": [
          "CreateReceiptRule"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2010-12-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "RuleSetName",
      "Rule",
      "Action",
      "Version"
    ],
    "$defs": {
      "ReceiptRuleName": {
        "type": "string"
      },
      "Enabled": {
        "type": "boolean"
      },
      "TlsPolicy": {
        "type": "string",
        "enum": [
          "Require",
          "Optional"
        ]
      },
      "RecipientsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Recipient"
        }
      },
      "Recipient": {
        "type": "string"
      },
      "ReceiptActionsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ReceiptAction"
        }
      },
      "ReceiptAction": {
        "type": "object",
        "properties": {
          "S3Action": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Action"
              },
              {
                "description": "Saves the received message to an Amazon Simple Storage Service (Amazon S3) bucket and, optionally, publishes a notification to Amazon SNS."
              }
            ]
          },
          "BounceAction": {
            "allOf": [
              {
                "$ref": "#/$defs/BounceAction"
              },
              {
                "description": "Rejects the received email by returning a bounce response to the sender and, optionally, publishes a notification to Amazon Simple Notification Service (Amazon SNS)."
              }
            ]
          },
          "WorkmailAction": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkmailAction"
              },
              {
                "description": "Calls Amazon WorkMail and, optionally, publishes a notification to Amazon Amazon SNS."
              }
            ]
          },
          "LambdaAction": {
            "allOf": [
              {
                "$ref": "#/$defs/LambdaAction"
              },
              {
                "description": "Calls an AWS Lambda function, and optionally, publishes a notification to Amazon SNS."
              }
            ]
          },
          "StopAction": {
            "allOf": [
              {
                "$ref": "#/$defs/StopAction"
              },
              {
                "description": "Terminates the evaluation of the receipt rule set and optionally publishes a notification to Amazon SNS."
              }
            ]
          },
          "AddHeaderAction": {
            "allOf": [
              {
                "$ref": "#/$defs/AddHeaderAction"
              },
              {
                "description": "Adds a header to the received email."
              }
            ]
          },
          "SNSAction": {
            "allOf": [
              {
                "$ref": "#/$defs/SNSAction"
              },
              {
                "description": "Publishes the email content within a notification to Amazon SNS."
              }
            ]
          }
        },
        "description": "<p>An action that Amazon SES can take when it receives an email on behalf of one or more email addresses or domains that you own. An instance of this data type can represent only one action.</p> <p>For information about setting up receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html\">Amazon SES Developer Guide</a>.</p>"
      },
      "S3Action": {
        "type": "object",
        "required": [
          "BucketName"
        ],
        "properties": {
          "TopicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The ARN of the Amazon SNS topic to notify when the message is saved to the Amazon S3 bucket. An example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>. For more information about Amazon SNS topics, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html\">Amazon SNS Developer Guide</a>."
              }
            ]
          },
          "BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BucketName"
              },
              {
                "description": "The name of the Amazon S3 bucket that incoming email will be saved to."
              }
            ]
          },
          "ObjectKeyPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/S3KeyPrefix"
              },
              {
                "description": "The key prefix of the Amazon S3 bucket. The key prefix is similar to a directory name that enables you to store similar data under the same directory in a bucket."
              }
            ]
          },
          "KmsKeyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "<p>The customer master key that Amazon SES should use to encrypt your emails before saving them to the Amazon S3 bucket. You can use the default master key or a custom master key you created in AWS KMS as follows:</p> <ul> <li> <p>To use the default master key, provide an ARN in the form of <code>arn:aws:kms:REGION:ACCOUNT-ID-WITHOUT-HYPHENS:alias/aws/ses</code>. For example, if your AWS account ID is 123456789012 and you want to use the default master key in the US West (Oregon) region, the ARN of the default master key would be <code>arn:aws:kms:us-west-2:123456789012:alias/aws/ses</code>. If you use the default master key, you don't need to perform any extra steps to give Amazon SES permission to use the key.</p> </li> <li> <p>To use a custom master key you created in AWS KMS, provide the ARN of the master key and ensure that you add a statement to your key's policy to give Amazon SES permission to use it. For more information about giving permissions, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html\">Amazon SES Developer Guide</a>.</p> </li> </ul> <p>For more information about key policies, see the <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html\">AWS KMS Developer Guide</a>. If you do not specify a master key, Amazon SES will not encrypt your emails.</p> <important> <p>Your mail is encrypted by Amazon SES using the Amazon S3 encryption client before the mail is submitted to Amazon S3 for storage. It is not encrypted using Amazon S3 server-side encryption. This means that you must use the Amazon S3 encryption client to decrypt the email after retrieving it from Amazon S3, as the service has no access to use your AWS KMS keys for decryption. This encryption client is currently available with the <a href=\"http://aws.amazon.com/sdk-for-java/\">AWS SDK for Java</a> and <a href=\"http://aws.amazon.com/sdk-for-ruby/\">AWS SDK for Ruby</a> only. For more information about client-side encryption using AWS KMS master keys, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html\">Amazon S3 Developer Guide</a>.</p> </important>"
              }
            ]
          }
        },
        "description": "<p>When included in a receipt rule, this action saves the received message to an Amazon Simple Storage Service (Amazon S3) bucket and, optionally, publishes a notification to Amazon Simple Notification Service (Amazon SNS).</p> <p>To enable Amazon SES to write emails to your Amazon S3 bucket, use an AWS KMS key to encrypt your emails, or publish to an Amazon SNS topic of another account, Amazon SES must have permission to access those resources. For information about giving permissions, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html\">Amazon SES Developer Guide</a>.</p> <note> <p>When you save your emails to an Amazon S3 bucket, the maximum email size (including headers) is 30 MB. Emails larger than that will bounce.</p> </note> <p>For information about specifying Amazon S3 actions in receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-s3.html\">Amazon SES Developer Guide</a>.</p>"
      },
      "AmazonResourceName": {
        "type": "string"
      },
      "S3BucketName": {
        "type": "string"
      },
      "S3KeyPrefix": {
        "type": "string"
      },
      "BounceAction": {
        "type": "object",
        "required": [
          "SmtpReplyCode",
          "Message",
          "Sender"
        ],
        "properties": {
          "TopicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the bounce action is taken. An example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>. For more information about Amazon SNS topics, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html\">Amazon SNS Developer Guide</a>."
              }
            ]
          },
          "SmtpReplyCode": {
            "allOf": [
              {
                "$ref": "#/$defs/BounceSmtpReplyCode"
              },
              {
                "description": "The SMTP reply code, as defined by <a href=\"https://tools.ietf.org/html/rfc5321\">RFC 5321</a>."
              }
            ]
          },
          "StatusCode": {
            "allOf": [
              {
                "$ref": "#/$defs/BounceStatusCode"
              },
              {
                "description": "The SMTP enhanced status code, as defined by <a href=\"https://tools.ietf.org/html/rfc3463\">RFC 3463</a>."
              }
            ]
          },
          "Message": {
            "allOf": [
              {
                "$ref": "#/$defs/BounceMessage"
              },
              {
                "description": "Human-readable text to include in the bounce message."
              }
            ]
          },
          "Sender": {
            "allOf": [
              {
                "$ref": "#/$defs/Address"
              },
              {
                "description": "The email address of the sender of the bounced email. This is the address from which the bounce message will be sent."
              }
            ]
          }
        },
        "description": "<p>When included in a receipt rule, this action rejects the received email by returning a bounce response to the sender and, optionally, publishes a notification to Amazon Simple Notification Service (Amazon SNS).</p> <p>For information about sending a bounce message in response to a received email, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-bounce.html\">Amazon SES Developer Guide</a>.</p>"
      },
      "BounceSmtpReplyCode": {
        "type": "string"
      },
      "BounceStatusCode": {
        "type": "string"
      },
      "BounceMessage": {
        "type": "string"
      },
      "Address": {
        "type": "string"
      },
      "WorkmailAction": {
        "type": "object",
        "required": [
          "OrganizationArn"
        ],
        "properties": {
          "TopicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the WorkMail action is called. An example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>. For more information about Amazon SNS topics, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html\">Amazon SNS Developer Guide</a>."
              }
            ]
          },
          "OrganizationArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The ARN of the Amazon WorkMail organization. An example of an Amazon WorkMail organization ARN is <code>arn:aws:workmail:us-west-2:123456789012:organization/m-68755160c4cb4e29a2b2f8fb58f359d7</code>. For information about Amazon WorkMail organizations, see the <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/organizations_overview.html\">Amazon WorkMail Administrator Guide</a>."
              }
            ]
          }
        },
        "description": "<p>When included in a receipt rule, this action calls Amazon WorkMail and, optionally, publishes a notification to Amazon Simple Notification Service (Amazon SNS). You will typically not use this action directly because Amazon WorkMail adds the rule automatically during its setup procedure.</p> <p>For information using a receipt rule to call Amazon WorkMail, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-workmail.html\">Amazon SES Developer Guide</a>.</p>"
      },
      "LambdaAction": {
        "type": "object",
        "required": [
          "FunctionArn"
        ],
        "properties": {
          "TopicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the Lambda action is taken. An example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>. For more information about Amazon SNS topics, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html\">Amazon SNS Developer Guide</a>."
              }
            ]
          },
          "FunctionArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the AWS Lambda function. An example of an AWS Lambda function ARN is <code>arn:aws:lambda:us-west-2:account-id:function:MyFunction</code>. For more information about AWS Lambda, see the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/welcome.html\">AWS Lambda Developer Guide</a>."
              }
            ]
          },
          "InvocationType": {
            "allOf": [
              {
                "$ref": "#/$defs/InvocationType"
              },
              {
                "description": "<p>The invocation type of the AWS Lambda function. An invocation type of <code>RequestResponse</code> means that the execution of the function will immediately result in a response, and a value of <code>Event</code> means that the function will be invoked asynchronously. The default value is <code>Event</code>. For information about AWS Lambda invocation types, see the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html\">AWS Lambda Developer Guide</a>.</p> <important> <p>There is a 30-second timeout on <code>RequestResponse</code> invocations. You should use <code>Event</code> invocation in most cases. Use <code>RequestResponse</code> only when you want to make a mail flow decision, such as whether to stop the receipt rule or the receipt rule set.</p> </important>"
              }
            ]
          }
        },
        "description": "<p>When included in a receipt rule, this action calls an AWS Lambda function and, optionally, publishes a notification to Amazon Simple Notification Service (Amazon SNS).</p> <p>To enable Amazon SES to call your AWS Lambda function or to publish to an Amazon SNS topic of another account, Amazon SES must have permission to access those resources. For information about giving permissions, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html\">Amazon SES Developer Guide</a>.</p> <p>For information about using AWS Lambda actions in receipt rules, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-lambda.html\">Amazon SES Developer Guide</a>.</p>"
      },
      "InvocationType": {
        "type": "string",
        "enum": [
          "Event",
          "RequestResponse"
        ]
      },
      "StopAction": {
        "type": "object",
        "required": [
          "Scope"
        ],
        "properties": {
          "Scope": {
            "allOf": [
              {
                "$ref": "#/$defs/StopScope"
              },
              {
                "description": "The scope of the StopAction. The only acceptable value is <code>RuleSet</code>."
              }
            ]
          },
          "TopicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the stop action is taken. An example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>. For more information about Amazon SNS topics, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html\">Amazon SNS Developer Guide</a>."
              }
            ]
          }
        },
        "description": "<p>When included in a receipt rule, this action terminates the evaluation of the receipt rule set and, optionally, publishes a notification to Amazon Simple Notification Service (Amazon SNS).</p> <p>For information about setting a stop action in a receipt rule, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-stop.html\">Amazon SES Developer Guide</a>.</p>"
      },
      "StopScope": {
        "type": "string",
        "enum": [
          "RuleSet"
        ]
      },
      "AddHeaderAction": {
        "type": "object",
        "required": [
          "HeaderName",
          "HeaderValue"
        ],
        "properties": {
          "HeaderName": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderName"
              },
              {
                "description": "The name of the header to add. Must be between 1 and 50 characters, inclusive, and consist of alphanumeric (a-z, A-Z, 0-9) characters and dashes only."
              }
            ]
          },
          "HeaderValue": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderValue"
              },
              {
                "description": "Must be less than 2048 characters, and must not contain newline characters (\"\\r\" or \"\\n\")."
              }
            ]
          }
        },
        "description": "<p>When included in a receipt rule, this action adds a header to the received email.</p> <p>For information about adding a header using a receipt rule, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-add-header.html\">Amazon SES Developer Guide</a>.</p>"
      },
      "HeaderName": {
        "type": "string"
      },
      "HeaderValue": {
        "type": "string"
      },
      "SNSAction": {
        "type": "object",
        "required": [
          "TopicArn"
        ],
        "properties": {
          "TopicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to notify. An example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>. For more information about Amazon SNS topics, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html\">Amazon SNS Developer Guide</a>."
              }
            ]
          },
          "Encoding": {
            "allOf": [
              {
                "$ref": "#/$defs/SNSActionEncoding"
              },
              {
                "description": "The encoding to use for the email within the Amazon SNS notification. UTF-8 is easier to use, but may not preserve all special characters when a message was encoded with a different encoding format. Base64 preserves all special characters. The default value is UTF-8."
              }
            ]
          }
        },
        "description": "<p>When included in a receipt rule, this action publishes a notification to Amazon Simple Notification Service (Amazon SNS). This action includes a complete copy of the email content in the Amazon SNS notifications. Amazon SNS notifications for all other actions simply provide information about the email. They do not include the email content itself.</p> <p>If you own the Amazon SNS topic, you don't need to do anything to give Amazon SES permission to publish emails to it. However, if you don't own the Amazon SNS topic, you need to attach a policy to the topic to give Amazon SES permissions to access it. For information about giving permissions, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html\">Amazon SES Developer Guide</a>.</p> <important> <p>You can only publish emails that are 150 KB or less (including the header) to Amazon SNS. Larger emails will bounce. If you anticipate emails larger than 150 KB, use the S3 action instead.</p> </important> <p>For information about using a receipt rule to publish an Amazon SNS notification, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-sns.html\">Amazon SES Developer Guide</a>.</p>"
      },
      "SNSActionEncoding": {
        "type": "string",
        "enum": [
          "UTF-8",
          "Base64"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://email.us-east-1.amazonaws.com/#Action=CreateReceiptRule{?RuleSetName,After,Rule,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An empty element returned on a successful request.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
