{
  "name": "CreateAppBlockBuilder",
  "description": "Creates an app block builder.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "PhotonAdminProxyService.CreateAppBlockBuilder"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateAppBlockBuilderRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateAppBlockBuilderRequest": {
        "type": "object",
        "required": [
          "Name",
          "Platform",
          "InstanceType",
          "VpcConfig"
        ],
        "title": "CreateAppBlockBuilderRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The unique name for the app block builder."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "The description of the app block builder."
              }
            ]
          },
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/$defs/DisplayName"
              },
              {
                "description": "The display name of the app block builder."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/Tags"
              },
              {
                "description": "<p>The tags to associate with the app block builder. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=. </p> <p>If you do not specify a value, the value is set to an empty string.</p> <p>Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters: </p> <p>_ . : / = + \\ - @</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html\">Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>"
              }
            ]
          },
          "Platform": {
            "allOf": [
              {
                "$ref": "#/$defs/AppBlockBuilderPlatformType"
              },
              {
                "description": "<p>The platform of the app block builder.</p> <p> <code>WINDOWS_SERVER_2019</code> is the only valid value.</p>"
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The instance type to use when launching the app block builder. The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p> </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.standard.xlarge</p> </li> <li> <p>stream.standard.2xlarge</p> </li> </ul>"
              }
            ]
          },
          "VpcConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcConfig"
              },
              {
                "description": "<p>The VPC configuration for the app block builder.</p> <p>App block builders require that you specify at least two subnets in different availability zones.</p>"
              }
            ]
          },
          "EnableDefaultInternetAccess": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Enables or disables default internet access for the app block builder."
              }
            ]
          },
          "IamRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "<p>The Amazon Resource Name (ARN) of the IAM role to apply to the app block builder. To assume a role, the app block builder calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>"
              }
            ]
          },
          "AccessEndpoints": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessEndpointList"
              },
              {
                "description": "The list of interface VPC endpoint (interface endpoint) objects. Administrators can connect to the app block builder only through the specified endpoints."
              }
            ]
          }
        }
      },
      "Name": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$"
      },
      "Description": {
        "type": "string",
        "maxLength": 256
      },
      "DisplayName": {
        "type": "string",
        "maxLength": 100
      },
      "Tags": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/TagValue"
        }
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      },
      "AppBlockBuilderPlatformType": {
        "type": "string",
        "enum": [
          "WINDOWS_SERVER_2019"
        ]
      },
      "String": {
        "type": "string",
        "minLength": 1
      },
      "VpcConfig": {
        "type": "object",
        "properties": {
          "SubnetIds": {
            "allOf": [
              {
                "$ref": "#/$defs/SubnetIdList"
              },
              {
                "description": "The identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance. Fleet instances use one or more subnets. Image builder instances use one subnet."
              }
            ]
          },
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityGroupIdList"
              },
              {
                "description": "The identifiers of the security groups for the fleet or image builder."
              }
            ]
          }
        },
        "description": "Describes VPC configuration information for fleets and image builders."
      },
      "SubnetIdList": {
        "type": "array",
        "description": "The subnet identifiers.",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "SecurityGroupIdList": {
        "type": "array",
        "description": "The security group identifiers.",
        "items": {
          "$ref": "#/$defs/String"
        },
        "maxItems": 5
      },
      "BooleanObject": {
        "type": "boolean"
      },
      "Arn": {
        "type": "string",
        "pattern": "^arn:aws(?:\\-cn|\\-iso\\-b|\\-iso|\\-us\\-gov)?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.\\\\-]{0,1023}$"
      },
      "AccessEndpointList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccessEndpoint"
        },
        "minItems": 1,
        "maxItems": 4
      },
      "AccessEndpoint": {
        "type": "object",
        "required": [
          "EndpointType"
        ],
        "properties": {
          "EndpointType": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessEndpointType"
              },
              {
                "description": "The type of interface endpoint."
              }
            ]
          },
          "VpceId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The identifier (ID) of the VPC in which the interface endpoint is used."
              }
            ]
          }
        },
        "description": "Describes an interface VPC endpoint (interface endpoint) that lets you create a private connection between the virtual private cloud (VPC) that you specify and AppStream 2.0. When you specify an interface endpoint for a stack, users of the stack can connect to AppStream 2.0 only through that endpoint. When you specify an interface endpoint for an image builder, administrators can connect to the image builder only through that endpoint."
      },
      "AccessEndpointType": {
        "type": "string",
        "enum": [
          "STREAMING"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://appstream2.us-east-1.amazonaws.com/#X-Amz-Target=PhotonAdminProxyService.CreateAppBlockBuilder"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**AppBlockBuilder**: Describes an app block builder.",
              {
                "$ul": [
                  "**Arn**",
                  "**Name**",
                  "**DisplayName**",
                  "**Description**",
                  "**Platform**",
                  "**InstanceType**",
                  "**EnableDefaultInternetAccess**",
                  "**IamRoleArn**",
                  "**VpcConfig**",
                  "**State**",
                  "**CreatedTime**",
                  "**AppBlockBuilderErrors**",
                  "**StateChangeReason**",
                  "**AccessEndpoints**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
