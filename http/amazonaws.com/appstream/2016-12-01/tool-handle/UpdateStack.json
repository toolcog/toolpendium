{
  "name": "UpdateStack",
  "description": "Updates the specified fields for the specified stack.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "PhotonAdminProxyService.UpdateStack"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateStackRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateStackRequest": {
        "type": "object",
        "required": [
          "Name"
        ],
        "title": "UpdateStackRequest",
        "properties": {
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/$defs/DisplayName"
              },
              {
                "description": "The stack name to display."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "The description to display."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the stack."
              }
            ]
          },
          "StorageConnectors": {
            "allOf": [
              {
                "$ref": "#/$defs/StorageConnectorList"
              },
              {
                "description": "The storage connectors to enable."
              }
            ]
          },
          "DeleteStorageConnectors": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "deprecated": true,
                "description": "Deletes the storage connectors currently enabled for the stack."
              }
            ]
          },
          "RedirectURL": {
            "allOf": [
              {
                "$ref": "#/$defs/RedirectURL"
              },
              {
                "description": "The URL that users are redirected to after their streaming session ends."
              }
            ]
          },
          "FeedbackURL": {
            "allOf": [
              {
                "$ref": "#/$defs/FeedbackURL"
              },
              {
                "description": "The URL that users are redirected to after they choose the Send Feedback link. If no URL is specified, no Send Feedback link is displayed."
              }
            ]
          },
          "AttributesToDelete": {
            "allOf": [
              {
                "$ref": "#/$defs/StackAttributes"
              },
              {
                "description": "The stack attributes to delete."
              }
            ]
          },
          "UserSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/UserSettingList"
              },
              {
                "description": "The actions that are enabled or disabled for users during their streaming sessions. By default, these actions are enabled."
              }
            ]
          },
          "ApplicationSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationSettings"
              },
              {
                "description": "The persistent application settings for users of a stack. When these settings are enabled, changes that users make to applications and Windows settings are automatically saved after each session and applied to the next session."
              }
            ]
          },
          "AccessEndpoints": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessEndpointList"
              },
              {
                "description": "The list of interface VPC endpoint (interface endpoint) objects. Users of the stack can connect to AppStream 2.0 only through the specified endpoints."
              }
            ]
          },
          "EmbedHostDomains": {
            "allOf": [
              {
                "$ref": "#/$defs/EmbedHostDomains"
              },
              {
                "description": "The domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions. "
              }
            ]
          },
          "StreamingExperienceSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamingExperienceSettings"
              },
              {
                "description": "The streaming protocol you want your stack to prefer. This can be UDP or TCP. Currently, UDP is only supported in the Windows native client."
              }
            ]
          }
        }
      },
      "DisplayName": {
        "type": "string",
        "maxLength": 100
      },
      "Description": {
        "type": "string",
        "maxLength": 256
      },
      "String": {
        "type": "string",
        "minLength": 1
      },
      "StorageConnectorList": {
        "type": "array",
        "description": "The storage connectors.",
        "items": {
          "$ref": "#/$defs/StorageConnector"
        }
      },
      "StorageConnector": {
        "type": "object",
        "required": [
          "ConnectorType"
        ],
        "properties": {
          "ConnectorType": {
            "allOf": [
              {
                "$ref": "#/$defs/StorageConnectorType"
              },
              {
                "description": "The type of storage connector."
              }
            ]
          },
          "ResourceIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceIdentifier"
              },
              {
                "description": "The ARN of the storage connector."
              }
            ]
          },
          "Domains": {
            "allOf": [
              {
                "$ref": "#/$defs/DomainList"
              },
              {
                "description": "The names of the domains for the account."
              }
            ]
          }
        },
        "description": "Describes a connector that enables persistent storage for users."
      },
      "StorageConnectorType": {
        "type": "string",
        "enum": [
          "HOMEFOLDERS",
          "GOOGLE_DRIVE",
          "ONE_DRIVE"
        ],
        "description": "The type of storage connector."
      },
      "ResourceIdentifier": {
        "type": "string",
        "description": "The ARN of the resource.",
        "minLength": 1,
        "maxLength": 2048
      },
      "DomainList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Domain"
        },
        "maxItems": 50
      },
      "Domain": {
        "type": "string",
        "description": "GSuite domain for GDrive integration.",
        "minLength": 1,
        "maxLength": 64
      },
      "Boolean": {
        "type": "boolean"
      },
      "RedirectURL": {
        "type": "string",
        "maxLength": 1000
      },
      "FeedbackURL": {
        "type": "string",
        "maxLength": 1000
      },
      "StackAttributes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StackAttribute"
        }
      },
      "StackAttribute": {
        "type": "string",
        "enum": [
          "STORAGE_CONNECTORS",
          "STORAGE_CONNECTOR_HOMEFOLDERS",
          "STORAGE_CONNECTOR_GOOGLE_DRIVE",
          "STORAGE_CONNECTOR_ONE_DRIVE",
          "REDIRECT_URL",
          "FEEDBACK_URL",
          "THEME_NAME",
          "USER_SETTINGS",
          "EMBED_HOST_DOMAINS",
          "IAM_ROLE_ARN",
          "ACCESS_ENDPOINTS",
          "STREAMING_EXPERIENCE_SETTINGS"
        ]
      },
      "UserSettingList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/UserSetting"
        },
        "minItems": 1
      },
      "UserSetting": {
        "type": "object",
        "required": [
          "Action",
          "Permission"
        ],
        "properties": {
          "Action": {
            "allOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "description": "The action that is enabled or disabled."
              }
            ]
          },
          "Permission": {
            "allOf": [
              {
                "$ref": "#/$defs/Permission"
              },
              {
                "description": "Indicates whether the action is enabled or disabled."
              }
            ]
          }
        },
        "description": "Describes an action and whether the action is enabled or disabled for users during their streaming sessions."
      },
      "Action": {
        "type": "string",
        "enum": [
          "CLIPBOARD_COPY_FROM_LOCAL_DEVICE",
          "CLIPBOARD_COPY_TO_LOCAL_DEVICE",
          "FILE_UPLOAD",
          "FILE_DOWNLOAD",
          "PRINTING_TO_LOCAL_DEVICE",
          "DOMAIN_PASSWORD_SIGNIN",
          "DOMAIN_SMART_CARD_SIGNIN"
        ]
      },
      "Permission": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "ApplicationSettings": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Enables or disables persistent application settings for users during their streaming sessions. "
              }
            ]
          },
          "SettingsGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/SettingsGroup"
              },
              {
                "description": "The path prefix for the S3 bucket where users’ persistent application settings are stored. You can allow the same persistent application settings to be used across multiple stacks by specifying the same settings group for each stack. "
              }
            ]
          }
        },
        "description": "The persistent application settings for users of a stack."
      },
      "SettingsGroup": {
        "type": "string",
        "maxLength": 100
      },
      "AccessEndpointList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccessEndpoint"
        },
        "minItems": 1,
        "maxItems": 4
      },
      "AccessEndpoint": {
        "type": "object",
        "required": [
          "EndpointType"
        ],
        "properties": {
          "EndpointType": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessEndpointType"
              },
              {
                "description": "The type of interface endpoint."
              }
            ]
          },
          "VpceId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The identifier (ID) of the VPC in which the interface endpoint is used."
              }
            ]
          }
        },
        "description": "Describes an interface VPC endpoint (interface endpoint) that lets you create a private connection between the virtual private cloud (VPC) that you specify and AppStream 2.0. When you specify an interface endpoint for a stack, users of the stack can connect to AppStream 2.0 only through that endpoint. When you specify an interface endpoint for an image builder, administrators can connect to the image builder only through that endpoint."
      },
      "AccessEndpointType": {
        "type": "string",
        "enum": [
          "STREAMING"
        ]
      },
      "EmbedHostDomains": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EmbedHostDomain"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "EmbedHostDomain": {
        "type": "string",
        "pattern": "(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]",
        "description": "Specifies a valid domain that can embed AppStream. Valid examples include: [\"testorigin.tt--com\", \"testingorigin.com.us\", \"test.com.us\"] Invalid examples include: [\"test,com\", \".com\", \"h*llo.com\". \"\"]",
        "maxLength": 128
      },
      "StreamingExperienceSettings": {
        "type": "object",
        "properties": {
          "PreferredProtocol": {
            "allOf": [
              {
                "$ref": "#/$defs/PreferredProtocol"
              },
              {
                "description": "The preferred protocol that you want to use while streaming your application."
              }
            ]
          }
        },
        "description": "The streaming protocol you want your stack to prefer. This can be UDP or TCP. Currently, UDP is only supported in the Windows native client."
      },
      "PreferredProtocol": {
        "type": "string",
        "enum": [
          "TCP",
          "UDP"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://appstream2.us-east-1.amazonaws.com/#X-Amz-Target=PhotonAdminProxyService.UpdateStack"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Stack**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
