{
  "name": "UpdateApplication",
  "description": "Updates the specified application.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "PhotonAdminProxyService.UpdateApplication"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateApplicationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateApplicationRequest": {
        "type": "object",
        "required": [
          "Name"
        ],
        "title": "UpdateApplicationRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name of the application. This name is visible to users when display name is not specified."
              }
            ]
          },
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/$defs/DisplayName"
              },
              {
                "description": "The display name of the application. This name is visible to users in the application catalog."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "The description of the application."
              }
            ]
          },
          "IconS3Location": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Location"
              },
              {
                "description": "The icon S3 location of the application."
              }
            ]
          },
          "LaunchPath": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The launch path of the application."
              }
            ]
          },
          "WorkingDirectory": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The working directory of the application."
              }
            ]
          },
          "LaunchParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The launch parameters of the application."
              }
            ]
          },
          "AppBlockArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN of the app block."
              }
            ]
          },
          "AttributesToDelete": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationAttributes"
              },
              {
                "description": "The attributes to delete for an application."
              }
            ]
          }
        }
      },
      "Name": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$"
      },
      "DisplayName": {
        "type": "string",
        "maxLength": 100
      },
      "Description": {
        "type": "string",
        "maxLength": 256
      },
      "S3Location": {
        "type": "object",
        "required": [
          "S3Bucket"
        ],
        "properties": {
          "S3Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Bucket"
              },
              {
                "description": "The S3 bucket of the S3 object."
              }
            ]
          },
          "S3Key": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Key"
              },
              {
                "description": "<p>The S3 key of the S3 object.</p> <p>This is required when used for the following:</p> <ul> <li> <p>IconS3Location (Actions: CreateApplication and UpdateApplication)</p> </li> <li> <p>SessionScriptS3Location (Actions: CreateFleet and UpdateFleet)</p> </li> <li> <p>ScriptDetails (Actions: CreateAppBlock)</p> </li> <li> <p>SourceS3Location when creating an app block with <code>CUSTOM</code> PackagingType (Actions: CreateAppBlock)</p> </li> <li> <p>SourceS3Location when creating an app block with <code>APPSTREAM2</code> PackagingType, and using an existing application package (VHD file). In this case, <code>S3Key</code> refers to the VHD file. If a new application package is required, then <code>S3Key</code> is not required. (Actions: CreateAppBlock)</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Describes the S3 location."
      },
      "S3Bucket": {
        "type": "string",
        "pattern": "^[0-9a-z\\.\\-]*(?<!\\.)$",
        "minLength": 3,
        "maxLength": 63
      },
      "S3Key": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "String": {
        "type": "string",
        "minLength": 1
      },
      "Arn": {
        "type": "string",
        "pattern": "^arn:aws(?:\\-cn|\\-iso\\-b|\\-iso|\\-us\\-gov)?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.\\\\-]{0,1023}$"
      },
      "ApplicationAttributes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ApplicationAttribute"
        },
        "maxItems": 2
      },
      "ApplicationAttribute": {
        "type": "string",
        "enum": [
          "LAUNCH_PARAMETERS",
          "WORKING_DIRECTORY"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://appstream2.us-east-1.amazonaws.com/#X-Amz-Target=PhotonAdminProxyService.UpdateApplication"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**Application**: Describes an application in the application catalog.",
              {
                "$ul": [
                  "**Name**",
                  "**DisplayName**",
                  "**IconURL**",
                  "**LaunchPath**",
                  "**LaunchParameters**",
                  "**Enabled**",
                  "**Metadata**",
                  "**WorkingDirectory**",
                  "**Description**",
                  "**Arn**",
                  "**AppBlockArn**",
                  "**IconS3Location**",
                  "**Platforms**",
                  "**InstanceFamilies**",
                  "**CreatedTime**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
