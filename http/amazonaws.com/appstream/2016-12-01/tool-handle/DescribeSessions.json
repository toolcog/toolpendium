{
  "name": "DescribeSessions",
  "description": "Retrieves a list that describes the streaming sessions for a specified stack and fleet. If a UserId is provided for the stack and fleet, only streaming sessions for that user are described. If an authentication type is not provided, the default is to authenticate users using a streaming URL.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "PhotonAdminProxyService.DescribeSessions"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeSessionsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeSessionsRequest": {
        "type": "object",
        "required": [
          "StackName",
          "FleetName"
        ],
        "title": "DescribeSessionsRequest",
        "properties": {
          "StackName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the stack. This value is case-sensitive."
              }
            ]
          },
          "FleetName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the fleet. This value is case-sensitive."
              }
            ]
          },
          "UserId": {
            "allOf": [
              {
                "$ref": "#/$defs/UserId"
              },
              {
                "description": "The user identifier (ID). If you specify a user ID, you must also specify the authentication type."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page."
              }
            ]
          },
          "Limit": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The size of each page of results. The default value is 20 and the maximum value is 50."
              }
            ]
          },
          "AuthenticationType": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthenticationType"
              },
              {
                "description": "The authentication method. Specify <code>API</code> for a user authenticated using a streaming URL or <code>SAML</code> for a SAML federated user. The default is to authenticate users using a streaming URL."
              }
            ]
          }
        }
      },
      "String": {
        "type": "string",
        "minLength": 1
      },
      "UserId": {
        "type": "string",
        "minLength": 2,
        "maxLength": 128
      },
      "Integer": {
        "type": "integer"
      },
      "AuthenticationType": {
        "type": "string",
        "enum": [
          "API",
          "SAML",
          "USERPOOL",
          "AWS_AD"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://appstream2.us-east-1.amazonaws.com/#X-Amz-Target=PhotonAdminProxyService.DescribeSessions"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Sessions**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
