{
  "name": "DescribeAppBlockBuilderAppBlockAssociations",
  "description": "Retrieves a list that describes one or more app block builder associations.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "PhotonAdminProxyService.DescribeAppBlockBuilderAppBlockAssociations"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeAppBlockBuilderAppBlockAssociationsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeAppBlockBuilderAppBlockAssociationsRequest": {
        "type": "object",
        "title": "DescribeAppBlockBuilderAppBlockAssociationsRequest",
        "properties": {
          "AppBlockArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN of the app block."
              }
            ]
          },
          "AppBlockBuilderName": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name of the app block builder."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum size of each page of results."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The pagination token used to retrieve the next page of results for this operation."
              }
            ]
          }
        }
      },
      "Arn": {
        "type": "string",
        "pattern": "^arn:aws(?:\\-cn|\\-iso\\-b|\\-iso|\\-us\\-gov)?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.\\\\-]{0,1023}$"
      },
      "Name": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$"
      },
      "Integer": {
        "type": "integer"
      },
      "String": {
        "type": "string",
        "minLength": 1
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://appstream2.us-east-1.amazonaws.com/#X-Amz-Target=PhotonAdminProxyService.DescribeAppBlockBuilderAppBlockAssociations{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AppBlockBuilderAppBlockAssociations**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
