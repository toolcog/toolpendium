{
  "name": "UpdateClassifier",
  "description": "Modifies an existing classifier (a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which field is present).",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.UpdateClassifier"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateClassifierRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateClassifierRequest": {
        "type": "object",
        "title": "UpdateClassifierRequest",
        "properties": {
          "GrokClassifier": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateGrokClassifierRequest"
              },
              {
                "description": "A <code>GrokClassifier</code> object with updated fields."
              }
            ]
          },
          "XMLClassifier": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateXMLClassifierRequest"
              },
              {
                "description": "An <code>XMLClassifier</code> object with updated fields."
              }
            ]
          },
          "JsonClassifier": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateJsonClassifierRequest"
              },
              {
                "description": "A <code>JsonClassifier</code> object with updated fields."
              }
            ]
          },
          "CsvClassifier": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateCsvClassifierRequest"
              },
              {
                "description": "A <code>CsvClassifier</code> object with updated fields."
              }
            ]
          }
        }
      },
      "UpdateGrokClassifierRequest": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the <code>GrokClassifier</code>."
              }
            ]
          },
          "Classification": {
            "allOf": [
              {
                "$ref": "#/$defs/Classification"
              },
              {
                "description": "An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on."
              }
            ]
          },
          "GrokPattern": {
            "allOf": [
              {
                "$ref": "#/$defs/GrokPattern"
              },
              {
                "description": "The grok pattern used by this classifier."
              }
            ]
          },
          "CustomPatterns": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomPatterns"
              },
              {
                "description": "Optional custom grok patterns used by this classifier."
              }
            ]
          }
        },
        "description": "Specifies a grok classifier to update when passed to <code>UpdateClassifier</code>."
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "Classification": {
        "type": "string"
      },
      "GrokPattern": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\t]*"
      },
      "CustomPatterns": {
        "type": "string",
        "minLength": 0,
        "maxLength": 16000,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "UpdateXMLClassifierRequest": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the classifier."
              }
            ]
          },
          "Classification": {
            "allOf": [
              {
                "$ref": "#/$defs/Classification"
              },
              {
                "description": "An identifier of the data format that the classifier matches."
              }
            ]
          },
          "RowTag": {
            "allOf": [
              {
                "$ref": "#/$defs/RowTag"
              },
              {
                "description": "The XML tag designating the element that contains each record in an XML document being parsed. This cannot identify a self-closing element (closed by <code>/&gt;</code>). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, <code>&lt;row item_a=\"A\" item_b=\"B\"&gt;&lt;/row&gt;</code> is okay, but <code>&lt;row item_a=\"A\" item_b=\"B\" /&gt;</code> is not)."
              }
            ]
          }
        },
        "description": "Specifies an XML classifier to be updated."
      },
      "RowTag": {
        "type": "string"
      },
      "UpdateJsonClassifierRequest": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the classifier."
              }
            ]
          },
          "JsonPath": {
            "allOf": [
              {
                "$ref": "#/$defs/JsonPath"
              },
              {
                "description": "A <code>JsonPath</code> string defining the JSON data for the classifier to classify. Glue supports a subset of JsonPath, as described in <a href=\"https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json\">Writing JsonPath Custom Classifiers</a>."
              }
            ]
          }
        },
        "description": "Specifies a JSON classifier to be updated."
      },
      "JsonPath": {
        "type": "string"
      },
      "UpdateCsvClassifierRequest": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the classifier."
              }
            ]
          },
          "Delimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/CsvColumnDelimiter"
              },
              {
                "description": "A custom symbol to denote what separates each column entry in the row."
              }
            ]
          },
          "QuoteSymbol": {
            "allOf": [
              {
                "$ref": "#/$defs/CsvQuoteSymbol"
              },
              {
                "description": "A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter."
              }
            ]
          },
          "ContainsHeader": {
            "allOf": [
              {
                "$ref": "#/$defs/CsvHeaderOption"
              },
              {
                "description": "Indicates whether the CSV file contains a header."
              }
            ]
          },
          "Header": {
            "allOf": [
              {
                "$ref": "#/$defs/CsvHeader"
              },
              {
                "description": "A list of strings representing column names."
              }
            ]
          },
          "DisableValueTrimming": {
            "allOf": [
              {
                "$ref": "#/$defs/NullableBoolean"
              },
              {
                "description": "Specifies not to trim values before identifying the type of column values. The default value is true."
              }
            ]
          },
          "AllowSingleColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/NullableBoolean"
              },
              {
                "description": "Enables the processing of files that contain only one column."
              }
            ]
          },
          "CustomDatatypeConfigured": {
            "allOf": [
              {
                "$ref": "#/$defs/NullableBoolean"
              },
              {
                "description": "Specifies the configuration of custom datatypes."
              }
            ]
          },
          "CustomDatatypes": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomDatatypes"
              },
              {
                "description": "Specifies a list of supported custom datatypes."
              }
            ]
          }
        },
        "description": "Specifies a custom CSV classifier to be updated."
      },
      "CsvColumnDelimiter": {
        "type": "string",
        "pattern": "[^\\r\\n]",
        "minLength": 1,
        "maxLength": 1
      },
      "CsvQuoteSymbol": {
        "type": "string",
        "pattern": "[^\\r\\n]",
        "minLength": 1,
        "maxLength": 1
      },
      "CsvHeaderOption": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "PRESENT",
          "ABSENT"
        ]
      },
      "CsvHeader": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NameString"
        }
      },
      "NullableBoolean": {
        "type": "boolean"
      },
      "CustomDatatypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NameString"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.UpdateClassifier"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
