{
  "name": "GetMLTaskRuns",
  "description": "<p>Gets a list of runs for a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can get a sortable, filterable list of machine learning task runs by calling <code>GetMLTaskRuns</code> with their parent transform's <code>TransformID</code> and other optional parameters as documented in this section.</p> <p>This operation returns a list of historic runs and must be paginated.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.GetMLTaskRuns"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetMLTaskRunsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetMLTaskRunsRequest": {
        "type": "object",
        "required": [
          "TransformId"
        ],
        "title": "GetMLTaskRunsRequest",
        "properties": {
          "TransformId": {
            "allOf": [
              {
                "$ref": "#/$defs/HashString"
              },
              {
                "description": "The unique identifier of the machine learning transform."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/PaginationToken"
              },
              {
                "description": "A token for pagination of the results. The default is empty."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/PageSize"
              },
              {
                "description": "The maximum number of results to return. "
              }
            ]
          },
          "Filter": {
            "allOf": [
              {
                "$ref": "#/$defs/TaskRunFilterCriteria"
              },
              {
                "description": "The filter criteria, in the <code>TaskRunFilterCriteria</code> structure, for the task run."
              }
            ]
          },
          "Sort": {
            "allOf": [
              {
                "$ref": "#/$defs/TaskRunSortCriteria"
              },
              {
                "description": "The sorting criteria, in the <code>TaskRunSortCriteria</code> structure, for the task run."
              }
            ]
          }
        }
      },
      "HashString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "PaginationToken": {
        "type": "string"
      },
      "PageSize": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1000
      },
      "TaskRunFilterCriteria": {
        "type": "object",
        "properties": {
          "TaskRunType": {
            "allOf": [
              {
                "$ref": "#/$defs/TaskType"
              },
              {
                "description": "The type of task run."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/TaskStatusType"
              },
              {
                "description": "The current status of the task run."
              }
            ]
          },
          "StartedBefore": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "Filter on task runs started before this date."
              }
            ]
          },
          "StartedAfter": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "Filter on task runs started after this date."
              }
            ]
          }
        },
        "description": "The criteria that are used to filter the task runs for the machine learning transform."
      },
      "TaskType": {
        "type": "string",
        "enum": [
          "EVALUATION",
          "LABELING_SET_GENERATION",
          "IMPORT_LABELS",
          "EXPORT_LABELS",
          "FIND_MATCHES"
        ]
      },
      "TaskStatusType": {
        "type": "string",
        "enum": [
          "STARTING",
          "RUNNING",
          "STOPPING",
          "STOPPED",
          "SUCCEEDED",
          "FAILED",
          "TIMEOUT"
        ]
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "TaskRunSortCriteria": {
        "type": "object",
        "required": [
          "Column",
          "SortDirection"
        ],
        "properties": {
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/TaskRunSortColumnType"
              },
              {
                "description": "The column to be used to sort the list of task runs for the machine learning transform."
              }
            ]
          },
          "SortDirection": {
            "allOf": [
              {
                "$ref": "#/$defs/SortDirectionType"
              },
              {
                "description": "The sort direction to be used to sort the list of task runs for the machine learning transform."
              }
            ]
          }
        },
        "description": "The sorting criteria that are used to sort the list of task runs for the machine learning transform."
      },
      "TaskRunSortColumnType": {
        "type": "string",
        "enum": [
          "TASK_RUN_TYPE",
          "STATUS",
          "STARTED"
        ]
      },
      "SortDirectionType": {
        "type": "string",
        "enum": [
          "DESCENDING",
          "ASCENDING"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.GetMLTaskRuns{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**TaskRuns**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
