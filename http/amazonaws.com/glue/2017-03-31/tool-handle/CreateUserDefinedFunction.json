{
  "name": "CreateUserDefinedFunction",
  "description": "Creates a new function definition in the Data Catalog.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.CreateUserDefinedFunction"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateUserDefinedFunctionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateUserDefinedFunctionRequest": {
        "type": "object",
        "required": [
          "DatabaseName",
          "FunctionInput"
        ],
        "title": "CreateUserDefinedFunctionRequest",
        "properties": {
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogIdString"
              },
              {
                "description": "The ID of the Data Catalog in which to create the function. If none is provided, the Amazon Web Services account ID is used by default."
              }
            ]
          },
          "DatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the catalog database in which to create the function."
              }
            ]
          },
          "FunctionInput": {
            "allOf": [
              {
                "$ref": "#/$defs/UserDefinedFunctionInput"
              },
              {
                "description": "A <code>FunctionInput</code> object that defines the function to create in the Data Catalog."
              }
            ]
          }
        }
      },
      "CatalogIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "UserDefinedFunctionInput": {
        "type": "object",
        "properties": {
          "FunctionName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the function."
              }
            ]
          },
          "ClassName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The Java class that contains the function code."
              }
            ]
          },
          "OwnerName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The owner of the function."
              }
            ]
          },
          "OwnerType": {
            "allOf": [
              {
                "$ref": "#/$defs/PrincipalType"
              },
              {
                "description": "The owner type."
              }
            ]
          },
          "ResourceUris": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceUriList"
              },
              {
                "description": "The resource URIs for the function."
              }
            ]
          }
        },
        "description": "A structure used to create or update a user-defined function."
      },
      "PrincipalType": {
        "type": "string",
        "enum": [
          "USER",
          "ROLE",
          "GROUP"
        ]
      },
      "ResourceUriList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ResourceUri"
        },
        "minItems": 0,
        "maxItems": 1000
      },
      "ResourceUri": {
        "type": "object",
        "properties": {
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceType"
              },
              {
                "description": "The type of the resource."
              }
            ]
          },
          "Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/URI"
              },
              {
                "description": "The URI for accessing the resource."
              }
            ]
          }
        },
        "description": "The URIs for function resources."
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "JAR",
          "FILE",
          "ARCHIVE"
        ]
      },
      "URI": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.CreateUserDefinedFunction"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
