{
  "name": "ListSchemas",
  "description": "<p>Returns a list of schemas with minimal details. Schemas in Deleting status will not be included in the results. Empty results will be returned if there are no schemas available.</p> <p>When the <code>RegistryId</code> is not provided, all the schemas across registries will be part of the API response.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.ListSchemas"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListSchemasInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListSchemasInput": {
        "type": "object",
        "title": "ListSchemasInput",
        "properties": {
          "RegistryId": {
            "allOf": [
              {
                "$ref": "#/$defs/RegistryId"
              },
              {
                "description": "A wrapper structure that may contain the registry name and Amazon Resource Name (ARN)."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxResultsNumber"
              },
              {
                "description": "Maximum number of results required per page. If the value is not supplied, this will be defaulted to 25 per page."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaRegistryTokenString"
              },
              {
                "description": "A continuation token, if this is a continuation call."
              }
            ]
          }
        }
      },
      "RegistryId": {
        "type": "object",
        "properties": {
          "RegistryName": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaRegistryNameString"
              },
              {
                "description": "Name of the registry. Used only for lookup. One of <code>RegistryArn</code> or <code>RegistryName</code> has to be provided. "
              }
            ]
          },
          "RegistryArn": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueResourceArn"
              },
              {
                "description": "Arn of the registry to be updated. One of <code>RegistryArn</code> or <code>RegistryName</code> has to be provided."
              }
            ]
          }
        },
        "description": "A wrapper structure that may contain the registry name and Amazon Resource Name (ARN)."
      },
      "SchemaRegistryNameString": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-_$#.]+",
        "minLength": 1,
        "maxLength": 255
      },
      "GlueResourceArn": {
        "type": "string",
        "pattern": "arn:(aws|aws-us-gov|aws-cn):glue:.*",
        "minLength": 1,
        "maxLength": 10240
      },
      "MaxResultsNumber": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "SchemaRegistryTokenString": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.ListSchemas{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Schemas**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
