{
  "name": "GetUnfilteredPartitionMetadata",
  "description": "<p>Retrieves partition metadata from the Data Catalog that contains unfiltered metadata.</p> <p>For IAM authorization, the public IAM action associated with this API is <code>glue:GetPartition</code>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.GetUnfilteredPartitionMetadata"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetUnfilteredPartitionMetadataRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetUnfilteredPartitionMetadataRequest": {
        "type": "object",
        "required": [
          "CatalogId",
          "DatabaseName",
          "TableName",
          "PartitionValues",
          "SupportedPermissionTypes"
        ],
        "title": "GetUnfilteredPartitionMetadataRequest",
        "properties": {
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogIdString"
              },
              {
                "description": "The catalog ID where the partition resides."
              }
            ]
          },
          "DatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "(Required) Specifies the name of a database that contains the partition."
              }
            ]
          },
          "TableName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "(Required) Specifies the name of a table that contains the partition."
              }
            ]
          },
          "PartitionValues": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "description": "(Required) A list of partition key values."
              }
            ]
          },
          "AuditContext": {
            "allOf": [
              {
                "$ref": "#/$defs/AuditContext"
              },
              {
                "description": "A structure containing Lake Formation audit context information."
              }
            ]
          },
          "SupportedPermissionTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/PermissionTypeList"
              },
              {
                "description": "(Required) A list of supported permission types. "
              }
            ]
          }
        }
      },
      "CatalogIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "ValueStringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ValueString"
        }
      },
      "ValueString": {
        "type": "string",
        "maxLength": 1024
      },
      "AuditContext": {
        "type": "object",
        "properties": {
          "AdditionalAuditContext": {
            "allOf": [
              {
                "$ref": "#/$defs/AuditContextString"
              },
              {
                "description": "A string containing the additional audit context information."
              }
            ]
          },
          "RequestedColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/AuditColumnNamesList"
              },
              {
                "description": "The requested columns for audit."
              }
            ]
          },
          "AllColumnsRequested": {
            "allOf": [
              {
                "$ref": "#/$defs/NullableBoolean"
              },
              {
                "description": "All columns request for audit."
              }
            ]
          }
        },
        "description": "A structure containing the Lake Formation audit context."
      },
      "AuditContextString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 2048
      },
      "AuditColumnNamesList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnNameString"
        }
      },
      "ColumnNameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "NullableBoolean": {
        "type": "boolean"
      },
      "PermissionTypeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PermissionType"
        },
        "minItems": 1,
        "maxItems": 255
      },
      "PermissionType": {
        "type": "string",
        "enum": [
          "COLUMN_PERMISSION",
          "CELL_FILTER_PERMISSION",
          "NESTED_PERMISSION",
          "NESTED_CELL_PERMISSION"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.GetUnfilteredPartitionMetadata"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Partition**",
            "**AuthorizedColumns**",
            "**IsRegisteredWithLakeFormation**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
