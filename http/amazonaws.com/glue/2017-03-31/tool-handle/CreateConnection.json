{
  "name": "CreateConnection",
  "description": "Creates a connection definition in the Data Catalog.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.CreateConnection"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateConnectionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateConnectionRequest": {
        "type": "object",
        "required": [
          "ConnectionInput"
        ],
        "title": "CreateConnectionRequest",
        "properties": {
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogIdString"
              },
              {
                "description": "The ID of the Data Catalog in which to create the connection. If none is provided, the Amazon Web Services account ID is used by default."
              }
            ]
          },
          "ConnectionInput": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionInput"
              },
              {
                "description": "A <code>ConnectionInput</code> object defining the connection to create."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagsMap"
              },
              {
                "description": "The tags you assign to the connection."
              }
            ]
          }
        }
      },
      "CatalogIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "ConnectionInput": {
        "type": "object",
        "required": [
          "Name",
          "ConnectionType",
          "ConnectionProperties"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the connection. Connection will not function as expected without a name."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/DescriptionString"
              },
              {
                "description": "The description of the connection."
              }
            ]
          },
          "ConnectionType": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionType"
              },
              {
                "description": "<p>The type of the connection. Currently, these types are supported:</p> <ul> <li> <p> <code>JDBC</code> - Designates a connection to a database through Java Database Connectivity (JDBC).</p> <p> <code>JDBC</code> Connections use the following ConnectionParameters.</p> <ul> <li> <p>Required: All of (<code>HOST</code>, <code>PORT</code>, <code>JDBC_ENGINE</code>) or <code>JDBC_CONNECTION_URL</code>.</p> </li> <li> <p>Required: All of (<code>USERNAME</code>, <code>PASSWORD</code>) or <code>SECRET_ID</code>.</p> </li> <li> <p>Optional: <code>JDBC_ENFORCE_SSL</code>, <code>CUSTOM_JDBC_CERT</code>, <code>CUSTOM_JDBC_CERT_STRING</code>, <code>SKIP_CUSTOM_JDBC_CERT_VALIDATION</code>. These parameters are used to configure SSL with JDBC.</p> </li> </ul> </li> <li> <p> <code>KAFKA</code> - Designates a connection to an Apache Kafka streaming platform.</p> <p> <code>KAFKA</code> Connections use the following ConnectionParameters.</p> <ul> <li> <p>Required: <code>KAFKA_BOOTSTRAP_SERVERS</code>.</p> </li> <li> <p>Optional: <code>KAFKA_SSL_ENABLED</code>, <code>KAFKA_CUSTOM_CERT</code>, <code>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</code>. These parameters are used to configure SSL with <code>KAFKA</code>.</p> </li> <li> <p>Optional: <code>KAFKA_CLIENT_KEYSTORE</code>, <code>KAFKA_CLIENT_KEYSTORE_PASSWORD</code>, <code>KAFKA_CLIENT_KEY_PASSWORD</code>, <code>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</code>, <code>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</code>. These parameters are used to configure TLS client configuration with SSL in <code>KAFKA</code>.</p> </li> <li> <p>Optional: <code>KAFKA_SASL_MECHANISM</code>. Can be specified as <code>SCRAM-SHA-512</code>, <code>GSSAPI</code>, or <code>AWS_MSK_IAM</code>.</p> </li> <li> <p>Optional: <code>KAFKA_SASL_SCRAM_USERNAME</code>, <code>KAFKA_SASL_SCRAM_PASSWORD</code>, <code>ENCRYPTED_KAFKA_SASL_SCRAM_PASSWORD</code>. These parameters are used to configure SASL/SCRAM-SHA-512 authentication with <code>KAFKA</code>.</p> </li> <li> <p>Optional: <code>KAFKA_SASL_GSSAPI_KEYTAB</code>, <code>KAFKA_SASL_GSSAPI_KRB5_CONF</code>, <code>KAFKA_SASL_GSSAPI_SERVICE</code>, <code>KAFKA_SASL_GSSAPI_PRINCIPAL</code>. These parameters are used to configure SASL/GSSAPI authentication with <code>KAFKA</code>.</p> </li> </ul> </li> <li> <p> <code>MONGODB</code> - Designates a connection to a MongoDB document database.</p> <p> <code>MONGODB</code> Connections use the following ConnectionParameters.</p> <ul> <li> <p>Required: <code>CONNECTION_URL</code>.</p> </li> <li> <p>Required: All of (<code>USERNAME</code>, <code>PASSWORD</code>) or <code>SECRET_ID</code>.</p> </li> </ul> </li> <li> <p> <code>NETWORK</code> - Designates a network connection to a data source within an Amazon Virtual Private Cloud environment (Amazon VPC).</p> <p> <code>NETWORK</code> Connections do not require ConnectionParameters. Instead, provide a PhysicalConnectionRequirements.</p> </li> <li> <p> <code>MARKETPLACE</code> - Uses configuration settings contained in a connector purchased from Amazon Web Services Marketplace to read from and write to data stores that are not natively supported by Glue.</p> <p> <code>MARKETPLACE</code> Connections use the following ConnectionParameters.</p> <ul> <li> <p>Required: <code>CONNECTOR_TYPE</code>, <code>CONNECTOR_URL</code>, <code>CONNECTOR_CLASS_NAME</code>, <code>CONNECTION_URL</code>.</p> </li> <li> <p>Required for <code>JDBC</code> <code>CONNECTOR_TYPE</code> connections: All of (<code>USERNAME</code>, <code>PASSWORD</code>) or <code>SECRET_ID</code>.</p> </li> </ul> </li> <li> <p> <code>CUSTOM</code> - Uses configuration settings contained in a custom connector to read from and write to data stores that are not natively supported by Glue.</p> </li> </ul> <p> <code>SFTP</code> is not supported.</p> <p>For more information about how optional ConnectionProperties are used to configure features in Glue, consult <a href=\"https://docs.aws.amazon.com/glue/latest/dg/connection-defining.html\">Glue connection properties</a>.</p> <p>For more information about how optional ConnectionProperties are used to configure features in Glue Studio, consult <a href=\"https://docs.aws.amazon.com/glue/latest/ug/connectors-chapter.html\">Using connectors and connections</a>.</p>"
              }
            ]
          },
          "MatchCriteria": {
            "allOf": [
              {
                "$ref": "#/$defs/MatchCriteria"
              },
              {
                "description": "A list of criteria that can be used in selecting this connection."
              }
            ]
          },
          "ConnectionProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionProperties"
              },
              {
                "description": "These key-value pairs define parameters for the connection."
              }
            ]
          },
          "PhysicalConnectionRequirements": {
            "allOf": [
              {
                "$ref": "#/$defs/PhysicalConnectionRequirements"
              },
              {
                "description": "A map of physical connection requirements, such as virtual private cloud (VPC) and <code>SecurityGroup</code>, that are needed to successfully make this connection."
              }
            ]
          }
        },
        "description": "A structure that is used to specify a connection to create or update."
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "DescriptionString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 2048,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "ConnectionType": {
        "type": "string",
        "enum": [
          "JDBC",
          "SFTP",
          "MONGODB",
          "KAFKA",
          "NETWORK",
          "MARKETPLACE",
          "CUSTOM"
        ]
      },
      "MatchCriteria": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NameString"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "ConnectionProperties": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 100,
        "additionalProperties": {
          "$ref": "#/$defs/ValueString"
        }
      },
      "ValueString": {
        "type": "string",
        "maxLength": 1024
      },
      "PhysicalConnectionRequirements": {
        "type": "object",
        "properties": {
          "SubnetId": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The subnet ID used by the connection."
              }
            ]
          },
          "SecurityGroupIdList": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityGroupIdList"
              },
              {
                "description": "The security group ID list used by the connection."
              }
            ]
          },
          "AvailabilityZone": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The connection's Availability Zone. This field is redundant because the specified subnet implies the Availability Zone to be used. Currently the field must be populated, but it will be deprecated in the future."
              }
            ]
          }
        },
        "description": "Specifies the physical requirements for a connection."
      },
      "SecurityGroupIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NameString"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "TagsMap": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/TagValue"
        }
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.CreateConnection"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
