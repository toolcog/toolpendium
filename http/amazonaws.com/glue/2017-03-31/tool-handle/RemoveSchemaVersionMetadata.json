{
  "name": "RemoveSchemaVersionMetadata",
  "description": "Removes a key value pair from the schema version metadata for the specified schema version ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.RemoveSchemaVersionMetadata"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/RemoveSchemaVersionMetadataInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "RemoveSchemaVersionMetadataInput": {
        "type": "object",
        "required": [
          "MetadataKeyValue"
        ],
        "title": "RemoveSchemaVersionMetadataInput",
        "properties": {
          "SchemaId": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaId"
              },
              {
                "description": "A wrapper structure that may contain the schema name and Amazon Resource Name (ARN)."
              }
            ]
          },
          "SchemaVersionNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaVersionNumber"
              },
              {
                "description": "The version number of the schema."
              }
            ]
          },
          "SchemaVersionId": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaVersionIdString"
              },
              {
                "description": "The unique version ID of the schema version."
              }
            ]
          },
          "MetadataKeyValue": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataKeyValuePair"
              },
              {
                "description": "The value of the metadata key."
              }
            ]
          }
        }
      },
      "SchemaId": {
        "type": "object",
        "properties": {
          "SchemaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueResourceArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has to be provided."
              }
            ]
          },
          "SchemaName": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaRegistryNameString"
              },
              {
                "description": "The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has to be provided."
              }
            ]
          },
          "RegistryName": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaRegistryNameString"
              },
              {
                "description": "The name of the schema registry that contains the schema."
              }
            ]
          }
        },
        "description": "The unique ID of the schema in the Glue schema registry."
      },
      "GlueResourceArn": {
        "type": "string",
        "pattern": "arn:(aws|aws-us-gov|aws-cn):glue:.*",
        "minLength": 1,
        "maxLength": 10240
      },
      "SchemaRegistryNameString": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-_$#.]+",
        "minLength": 1,
        "maxLength": 255
      },
      "SchemaVersionNumber": {
        "type": "object",
        "properties": {
          "LatestVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/LatestSchemaVersionBoolean"
              },
              {
                "description": "The latest version available for the schema."
              }
            ]
          },
          "VersionNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/VersionLongNumber"
              },
              {
                "description": "The version number of the schema."
              }
            ]
          }
        },
        "description": "A structure containing the schema version information."
      },
      "LatestSchemaVersionBoolean": {
        "type": "boolean"
      },
      "VersionLongNumber": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100000
      },
      "SchemaVersionIdString": {
        "type": "string",
        "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}",
        "minLength": 36,
        "maxLength": 36
      },
      "MetadataKeyValuePair": {
        "type": "object",
        "properties": {
          "MetadataKey": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataKeyString"
              },
              {
                "description": "A metadata key."
              }
            ]
          },
          "MetadataValue": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataValueString"
              },
              {
                "description": "A metadata keyâ€™s corresponding value."
              }
            ]
          }
        },
        "description": "A structure containing a key value pair for metadata."
      },
      "MetadataKeyString": {
        "type": "string",
        "pattern": "[a-zA-Z0-9+-=._./@]+",
        "minLength": 1,
        "maxLength": 128
      },
      "MetadataValueString": {
        "type": "string",
        "pattern": "[a-zA-Z0-9+-=._./@]+",
        "minLength": 1,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.RemoveSchemaVersionMetadata"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**SchemaArn**",
            "**SchemaName**",
            "**RegistryName**",
            "**LatestVersion**",
            "**VersionNumber**",
            "**SchemaVersionId**",
            "**MetadataKey**",
            "**MetadataValue**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
