{
  "name": "StartDataQualityRulesetEvaluationRun",
  "description": "Once you have a ruleset definition (either recommended or your own), you call this operation to evaluate the ruleset against a data source (Glue table). The evaluation computes results which you can retrieve with the <code>GetDataQualityResult</code> API.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.StartDataQualityRulesetEvaluationRun"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/StartDataQualityRulesetEvaluationRunRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "StartDataQualityRulesetEvaluationRunRequest": {
        "type": "object",
        "required": [
          "DataSource",
          "Role",
          "RulesetNames"
        ],
        "title": "StartDataQualityRulesetEvaluationRunRequest",
        "properties": {
          "DataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSource"
              },
              {
                "description": "The data source (Glue table) associated with this run."
              }
            ]
          },
          "Role": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleString"
              },
              {
                "description": "An IAM role supplied to encrypt the results of the run."
              }
            ]
          },
          "NumberOfWorkers": {
            "allOf": [
              {
                "$ref": "#/$defs/NullableInteger"
              },
              {
                "description": "The number of <code>G.1X</code> workers to be used in the run. The default is 5."
              }
            ]
          },
          "Timeout": {
            "allOf": [
              {
                "$ref": "#/$defs/Timeout"
              },
              {
                "description": "The timeout for a run in minutes. This is the maximum time that a run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours)."
              }
            ]
          },
          "ClientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/HashString"
              },
              {
                "description": "Used for idempotency and is recommended to be set to a random ID (such as a UUID) to avoid creating or starting multiple instances of the same resource."
              }
            ]
          },
          "AdditionalRunOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/DataQualityEvaluationRunAdditionalRunOptions"
              },
              {
                "description": "Additional run options you can specify for an evaluation run."
              }
            ]
          },
          "RulesetNames": {
            "allOf": [
              {
                "$ref": "#/$defs/RulesetNames"
              },
              {
                "description": "A list of ruleset names."
              }
            ]
          },
          "AdditionalDataSources": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSourceMap"
              },
              {
                "description": "A map of reference strings to additional data sources you can specify for an evaluation run."
              }
            ]
          }
        }
      },
      "DataSource": {
        "type": "object",
        "required": [
          "GlueTable"
        ],
        "properties": {
          "GlueTable": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueTable"
              },
              {
                "description": "An Glue table."
              }
            ]
          }
        },
        "description": "A data source (an Glue table) for which you want data quality results."
      },
      "GlueTable": {
        "type": "object",
        "required": [
          "DatabaseName",
          "TableName"
        ],
        "properties": {
          "DatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "A database name in the Glue Data Catalog."
              }
            ]
          },
          "TableName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "A table name in the Glue Data Catalog."
              }
            ]
          },
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "A unique identifier for the Glue Data Catalog."
              }
            ]
          },
          "ConnectionName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the connection to the Glue Data Catalog."
              }
            ]
          },
          "AdditionalOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueTableAdditionalOptions"
              },
              {
                "description": "<p>Additional options for the table. Currently there are two keys supported:</p> <ul> <li> <p> <code>pushDownPredicate</code>: to filter on partitions without having to list and read all the files in your dataset.</p> </li> <li> <p> <code>catalogPartitionPredicate</code>: to use server-side partition pruning using partition indexes in the Glue Data Catalog.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The database and table in the Glue Data Catalog that is used for input or output data."
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "GlueTableAdditionalOptions": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 10,
        "additionalProperties": {
          "$ref": "#/$defs/DescriptionString"
        }
      },
      "DescriptionString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 2048,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "RoleString": {
        "type": "string"
      },
      "NullableInteger": {
        "type": "integer"
      },
      "Timeout": {
        "type": "integer",
        "minimum": 1
      },
      "HashString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "DataQualityEvaluationRunAdditionalRunOptions": {
        "type": "object",
        "properties": {
          "CloudWatchMetricsEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/NullableBoolean"
              },
              {
                "description": "Whether or not to enable CloudWatch metrics."
              }
            ]
          },
          "ResultsS3Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/UriString"
              },
              {
                "description": "Prefix for Amazon S3 to store results."
              }
            ]
          }
        },
        "description": "Additional run options you can specify for an evaluation run."
      },
      "NullableBoolean": {
        "type": "boolean"
      },
      "UriString": {
        "type": "string"
      },
      "RulesetNames": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NameString"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "DataSourceMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/DataSource"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.StartDataQualityRulesetEvaluationRun"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**RunId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
