{
  "name": "ListDataQualityResults",
  "description": "Returns all data quality execution results for your account.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.ListDataQualityResults"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListDataQualityResultsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListDataQualityResultsRequest": {
        "type": "object",
        "title": "ListDataQualityResultsRequest",
        "properties": {
          "Filter": {
            "allOf": [
              {
                "$ref": "#/$defs/DataQualityResultFilterCriteria"
              },
              {
                "description": "The filter criteria."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/PaginationToken"
              },
              {
                "description": "A paginated token to offset the results."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/PageSize"
              },
              {
                "description": "The maximum number of results to return."
              }
            ]
          }
        }
      },
      "DataQualityResultFilterCriteria": {
        "type": "object",
        "properties": {
          "DataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSource"
              },
              {
                "description": "Filter results by the specified data source. For example, retrieving all results for an Glue table."
              }
            ]
          },
          "JobName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "Filter results by the specified job name."
              }
            ]
          },
          "JobRunId": {
            "allOf": [
              {
                "$ref": "#/$defs/HashString"
              },
              {
                "description": "Filter results by the specified job run ID."
              }
            ]
          },
          "StartedAfter": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "Filter results by runs that started after this time."
              }
            ]
          },
          "StartedBefore": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "Filter results by runs that started before this time."
              }
            ]
          }
        },
        "description": "Criteria used to return data quality results."
      },
      "DataSource": {
        "type": "object",
        "required": [
          "GlueTable"
        ],
        "properties": {
          "GlueTable": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueTable"
              },
              {
                "description": "An Glue table."
              }
            ]
          }
        },
        "description": "A data source (an Glue table) for which you want data quality results."
      },
      "GlueTable": {
        "type": "object",
        "required": [
          "DatabaseName",
          "TableName"
        ],
        "properties": {
          "DatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "A database name in the Glue Data Catalog."
              }
            ]
          },
          "TableName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "A table name in the Glue Data Catalog."
              }
            ]
          },
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "A unique identifier for the Glue Data Catalog."
              }
            ]
          },
          "ConnectionName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the connection to the Glue Data Catalog."
              }
            ]
          },
          "AdditionalOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueTableAdditionalOptions"
              },
              {
                "description": "<p>Additional options for the table. Currently there are two keys supported:</p> <ul> <li> <p> <code>pushDownPredicate</code>: to filter on partitions without having to list and read all the files in your dataset.</p> </li> <li> <p> <code>catalogPartitionPredicate</code>: to use server-side partition pruning using partition indexes in the Glue Data Catalog.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The database and table in the Glue Data Catalog that is used for input or output data."
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "GlueTableAdditionalOptions": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 10,
        "additionalProperties": {
          "$ref": "#/$defs/DescriptionString"
        }
      },
      "DescriptionString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 2048,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "HashString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "PaginationToken": {
        "type": "string"
      },
      "PageSize": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.ListDataQualityResults{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Results**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
