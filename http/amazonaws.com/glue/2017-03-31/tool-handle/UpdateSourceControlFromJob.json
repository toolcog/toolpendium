{
  "name": "UpdateSourceControlFromJob",
  "description": "<p>Synchronizes a job to the source control repository. This operation takes the job artifacts from the Glue internal stores and makes a commit to the remote repository that is configured on the job.</p> <p>This API supports optional parameters which take in the repository information.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.UpdateSourceControlFromJob"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateSourceControlFromJobRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateSourceControlFromJobRequest": {
        "type": "object",
        "title": "UpdateSourceControlFromJobRequest",
        "properties": {
          "JobName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the Glue job to be synchronized to or from the remote repository."
              }
            ]
          },
          "Provider": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceControlProvider"
              },
              {
                "description": "The provider for the remote repository."
              }
            ]
          },
          "RepositoryName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the remote repository that contains the job artifacts."
              }
            ]
          },
          "RepositoryOwner": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The owner of the remote repository that contains the job artifacts."
              }
            ]
          },
          "BranchName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "An optional branch in the remote repository."
              }
            ]
          },
          "Folder": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "An optional folder in the remote repository."
              }
            ]
          },
          "CommitId": {
            "allOf": [
              {
                "$ref": "#/$defs/CommitIdString"
              },
              {
                "description": "A commit ID for a commit in the remote repository."
              }
            ]
          },
          "AuthStrategy": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceControlAuthStrategy"
              },
              {
                "description": "The type of authentication, which can be an authentication token stored in Amazon Web Services Secrets Manager, or a personal access token."
              }
            ]
          },
          "AuthToken": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthTokenString"
              },
              {
                "description": "The value of the authorization token."
              }
            ]
          }
        }
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "SourceControlProvider": {
        "type": "string",
        "enum": [
          "GITHUB",
          "AWS_CODE_COMMIT"
        ]
      },
      "CommitIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 40,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "SourceControlAuthStrategy": {
        "type": "string",
        "enum": [
          "PERSONAL_ACCESS_TOKEN",
          "AWS_SECRETS_MANAGER"
        ]
      },
      "AuthTokenString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.UpdateSourceControlFromJob"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**JobName**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
