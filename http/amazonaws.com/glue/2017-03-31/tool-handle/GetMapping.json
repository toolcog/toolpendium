{
  "name": "GetMapping",
  "description": "Creates mappings.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.GetMapping"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetMappingRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetMappingRequest": {
        "type": "object",
        "required": [
          "Source"
        ],
        "title": "GetMappingRequest",
        "properties": {
          "Source": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogEntry"
              },
              {
                "description": "Specifies the source table."
              }
            ]
          },
          "Sinks": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogEntries"
              },
              {
                "description": "A list of target tables."
              }
            ]
          },
          "Location": {
            "allOf": [
              {
                "$ref": "#/$defs/Location"
              },
              {
                "description": "Parameters for the mapping."
              }
            ]
          }
        }
      },
      "CatalogEntry": {
        "type": "object",
        "required": [
          "DatabaseName",
          "TableName"
        ],
        "properties": {
          "DatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The database in which the table metadata resides."
              }
            ]
          },
          "TableName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the table in question."
              }
            ]
          }
        },
        "description": "Specifies a table definition in the Glue Data Catalog."
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "CatalogEntries": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CatalogEntry"
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "Jdbc": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeGenNodeArgs"
              },
              {
                "description": "A JDBC location."
              }
            ]
          },
          "S3": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeGenNodeArgs"
              },
              {
                "description": "An Amazon Simple Storage Service (Amazon S3) location."
              }
            ]
          },
          "DynamoDB": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeGenNodeArgs"
              },
              {
                "description": "An Amazon DynamoDB table location."
              }
            ]
          }
        },
        "description": "The location of resources."
      },
      "CodeGenNodeArgs": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CodeGenNodeArg"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "CodeGenNodeArg": {
        "type": "object",
        "required": [
          "Name",
          "Value"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeGenArgName"
              },
              {
                "description": "The name of the argument or property."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeGenArgValue"
              },
              {
                "description": "The value of the argument or property."
              }
            ]
          },
          "Param": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "True if the value is used as a parameter."
              }
            ]
          }
        },
        "description": "An argument or property of a node."
      },
      "CodeGenArgName": {
        "type": "string"
      },
      "CodeGenArgValue": {
        "type": "string"
      },
      "Boolean": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.GetMapping"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Mapping**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
