{
  "name": "CreateDevEndpoint",
  "description": "Creates a new development endpoint.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSGlue.CreateDevEndpoint"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateDevEndpointRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateDevEndpointRequest": {
        "type": "object",
        "required": [
          "EndpointName",
          "RoleArn"
        ],
        "title": "CreateDevEndpointRequest",
        "properties": {
          "EndpointName": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericString"
              },
              {
                "description": "The name to be assigned to the new <code>DevEndpoint</code>."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The IAM role for the <code>DevEndpoint</code>."
              }
            ]
          },
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "Security group IDs for the security groups to be used by the new <code>DevEndpoint</code>."
              }
            ]
          },
          "SubnetId": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericString"
              },
              {
                "description": "The subnet ID for the new <code>DevEndpoint</code> to use."
              }
            ]
          },
          "PublicKey": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericString"
              },
              {
                "description": "The public key to be used by this <code>DevEndpoint</code> for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys."
              }
            ]
          },
          "PublicKeys": {
            "allOf": [
              {
                "$ref": "#/$defs/PublicKeysList"
              },
              {
                "description": "<p>A list of public keys to be used by the development endpoints for authentication. The use of this attribute is preferred over a single public key because the public keys allow you to have a different private key per client.</p> <note> <p>If you previously created an endpoint with a public key, you must remove that key to be able to set a list of public keys. Call the <code>UpdateDevEndpoint</code> API with the public key content in the <code>deletePublicKeys</code> attribute, and the list of new keys in the <code>addPublicKeys</code> attribute.</p> </note>"
              }
            ]
          },
          "NumberOfNodes": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerValue"
              },
              {
                "description": "The number of Glue Data Processing Units (DPUs) to allocate to this <code>DevEndpoint</code>."
              }
            ]
          },
          "WorkerType": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkerType"
              },
              {
                "description": "<p>The type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li> </ul> <p>Known issue: when a development endpoint is created with the <code>G.2X</code> <code>WorkerType</code> configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk. </p>"
              }
            ]
          },
          "GlueVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueVersionString"
              },
              {
                "description": "<p>Glue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints. </p> <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\">Glue version</a> in the developer guide.</p> <p>Development endpoints that are created without specifying a Glue version default to Glue 0.9.</p> <p>You can specify a version of Python support for development endpoints by using the <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code> APIs. If no arguments are provided, the version defaults to Python 2.</p>"
              }
            ]
          },
          "NumberOfWorkers": {
            "allOf": [
              {
                "$ref": "#/$defs/NullableInteger"
              },
              {
                "description": "<p>The number of workers of a defined <code>workerType</code> that are allocated to the development endpoint.</p> <p>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149 for <code>G.2X</code>. </p>"
              }
            ]
          },
          "ExtraPythonLibsS3Path": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericString"
              },
              {
                "description": "<p>The paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your <code>DevEndpoint</code>. Multiple values must be complete paths separated by a comma.</p> <note> <p>You can only use pure Python libraries with a <code>DevEndpoint</code>. Libraries that rely on C extensions, such as the <a href=\"http://pandas.pydata.org/\">pandas</a> Python data analysis library, are not yet supported.</p> </note>"
              }
            ]
          },
          "ExtraJarsS3Path": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericString"
              },
              {
                "description": "The path to one or more Java <code>.jar</code> files in an S3 bucket that should be loaded in your <code>DevEndpoint</code>."
              }
            ]
          },
          "SecurityConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the <code>SecurityConfiguration</code> structure to be used with this <code>DevEndpoint</code>."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagsMap"
              },
              {
                "description": "The tags to use with this DevEndpoint. You may use tags to limit access to the DevEndpoint. For more information about tags in Glue, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\">Amazon Web Services Tags in Glue</a> in the developer guide."
              }
            ]
          },
          "Arguments": {
            "allOf": [
              {
                "$ref": "#/$defs/MapValue"
              },
              {
                "description": "A map of arguments used to configure the <code>DevEndpoint</code>."
              }
            ]
          }
        }
      },
      "GenericString": {
        "type": "string"
      },
      "RoleArn": {
        "type": "string",
        "pattern": "arn:aws:iam::\\d{12}:role/.*"
      },
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GenericString"
        }
      },
      "PublicKeysList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GenericString"
        },
        "maxItems": 5
      },
      "IntegerValue": {
        "type": "integer"
      },
      "WorkerType": {
        "type": "string",
        "enum": [
          "Standard",
          "G.1X",
          "G.2X",
          "G.025X",
          "G.4X",
          "G.8X",
          "Z.2X"
        ]
      },
      "GlueVersionString": {
        "type": "string",
        "pattern": "^\\w+\\.\\w+$",
        "minLength": 1,
        "maxLength": 255
      },
      "NullableInteger": {
        "type": "integer"
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "TagsMap": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/TagValue"
        }
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "MapValue": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 100,
        "additionalProperties": {
          "$ref": "#/$defs/GenericString"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glue.us-east-1.amazonaws.com/#X-Amz-Target=AWSGlue.CreateDevEndpoint"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**EndpointName**",
            "**Status**",
            "**SecurityGroupIds**",
            "**SubnetId**",
            "**RoleArn**",
            "**YarnEndpointAddress**",
            "**ZeppelinRemoteSparkInterpreterPort**",
            "**NumberOfNodes**",
            "**WorkerType**",
            "**GlueVersion**",
            "**NumberOfWorkers**",
            "**AvailabilityZone**",
            "**VpcId**",
            "**ExtraPythonLibsS3Path**",
            "**ExtraJarsS3Path**",
            "**FailureReason**",
            "**SecurityConfiguration**",
            "**CreatedTimestamp**",
            "**Arguments**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
