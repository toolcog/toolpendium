{
  "name": "UpdateGroup",
  "description": "For the specified group in the specified identity store, updates the group metadata and attributes.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSIdentityStore.UpdateGroup"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateGroupRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateGroupRequest": {
        "type": "object",
        "required": [
          "IdentityStoreId",
          "GroupId",
          "Operations"
        ],
        "title": "UpdateGroupRequest",
        "properties": {
          "IdentityStoreId": {
            "allOf": [
              {
                "$ref": "#/$defs/IdentityStoreId"
              },
              {
                "description": "The globally unique identifier for the identity store."
              }
            ]
          },
          "GroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceId"
              },
              {
                "description": "The identifier for a group in the identity store."
              }
            ]
          },
          "Operations": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeOperations"
              },
              {
                "description": "A list of <code>AttributeOperation</code> objects to apply to the requested group. These operations might add, replace, or remove an attribute."
              }
            ]
          }
        }
      },
      "IdentityStoreId": {
        "type": "string",
        "pattern": "d-[0-9a-f]{10}$|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
        "minLength": 1,
        "maxLength": 36
      },
      "ResourceId": {
        "type": "string",
        "pattern": "([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}",
        "minLength": 1,
        "maxLength": 47
      },
      "AttributeOperations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttributeOperation"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "AttributeOperation": {
        "type": "object",
        "required": [
          "AttributePath"
        ],
        "properties": {
          "AttributePath": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributePath"
              },
              {
                "description": "A string representation of the path to a given attribute or sub-attribute. Supports JMESPath."
              }
            ]
          },
          "AttributeValue": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeValue"
              },
              {
                "description": "The value of the attribute. This is a <code>Document</code> type. This type is not supported by Java V1, Go V1, and older versions of the AWS CLI."
              }
            ]
          }
        },
        "description": "An operation that applies to the requested group. This operation might add, replace, or remove an attribute."
      },
      "AttributePath": {
        "type": "string",
        "pattern": "\\p{L}+(?:\\.\\p{L}+){0,2}",
        "minLength": 1,
        "maxLength": 255
      },
      "AttributeValue": {
        "type": "object",
        "properties": {},
        "description": "The value of the attribute. This is a <code>Document</code> type. This type is not supported by Java V1, Go V1, and older versions of the AWS CLI."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://identitystore.us-east-1.amazonaws.com/#X-Amz-Target=AWSIdentityStore.UpdateGroup"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
