{
  "name": "UpdateApplicationComponentConfig",
  "description": " Updates the configuration of an application component. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "applicationComponentId"
        ],
        "properties": {
          "appType": {
            "description": "The type of known component.",
            "type": "string",
            "enum": [
              "DotNetFramework",
              "Java",
              "SQLServer",
              "IIS",
              "Oracle",
              "Other",
              "Tomcat",
              "JBoss",
              "Spring",
              "Mongo DB",
              "DB2",
              "Maria DB",
              "MySQL",
              "Sybase",
              "PostgreSQLServer",
              "Cassandra",
              "IBM WebSphere",
              "Oracle WebLogic",
              "Visual Basic",
              "Unknown",
              "DotnetCore",
              "Dotnet"
            ]
          },
          "applicationComponentId": {
            "description": " The ID of the application component. The ID is unique within an AWS account. ",
            "type": "string",
            "pattern": "[0-9a-zA-Z-]+",
            "minLength": 0,
            "maxLength": 44
          },
          "configureOnly": {
            "description": "Update the configuration request of an application component. If it is set to true, the source code and/or database credentials are updated. If it is set to false, the source code and/or database credentials are updated and an analysis is initiated.",
            "type": "boolean"
          },
          "inclusionStatus": {
            "description": " Indicates whether the application component has been included for server recommendation or not. ",
            "type": "string",
            "enum": [
              "excludeFromAssessment",
              "includeInAssessment"
            ]
          },
          "secretsManagerKey": {
            "description": " Database credentials. ",
            "type": "string",
            "pattern": ".*",
            "minLength": 1,
            "maxLength": 512,
            "format": "password"
          },
          "sourceCodeList": {
            "description": " The list of source code configurations to update for the application component. ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/SourceCode"
            }
          },
          "strategyOption": {
            "description": " Information about all the available strategy options for migrating and modernizing an application component. ",
            "type": "object",
            "properties": {
              "isPreferred": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": " Indicates if a specific strategy is preferred for the application component. "
                  }
                ]
              },
              "strategy": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Strategy"
                  },
                  {
                    "description": " Type of transformation. For example, Rehost, Replatform, and so on. "
                  }
                ]
              },
              "targetDestination": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TargetDestination"
                  },
                  {
                    "description": " Destination information about where the application component can migrate to. For example, <code>EC2</code>, <code>ECS</code>, and so on. "
                  }
                ]
              },
              "toolName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TransformationToolName"
                  },
                  {
                    "description": " The name of the tool that can be used to transform an application component using this strategy. "
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "SourceCode": {
        "type": "object",
        "properties": {
          "location": {
            "allOf": [
              {
                "$ref": "#/$defs/Location"
              },
              {
                "description": " The repository name for the source code. "
              }
            ]
          },
          "projectName": {
            "allOf": [
              {
                "$ref": "#/$defs/ProjectName"
              },
              {
                "description": "The name of the project."
              }
            ]
          },
          "sourceVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceVersion"
              },
              {
                "description": " The branch of the source code. "
              }
            ]
          },
          "versionControl": {
            "allOf": [
              {
                "$ref": "#/$defs/VersionControl"
              },
              {
                "description": " The type of repository to use for the source code. "
              }
            ]
          }
        },
        "description": " Object containing source code information that is linked to an application component. "
      },
      "Location": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 128
      },
      "ProjectName": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 128
      },
      "SourceVersion": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 40
      },
      "VersionControl": {
        "type": "string",
        "enum": [
          "GITHUB",
          "GITHUB_ENTERPRISE",
          "AZURE_DEVOPS_GIT"
        ]
      },
      "Boolean": {
        "type": "boolean"
      },
      "Strategy": {
        "type": "string",
        "enum": [
          "Rehost",
          "Retirement",
          "Refactor",
          "Replatform",
          "Retain",
          "Relocate",
          "Repurchase"
        ]
      },
      "TargetDestination": {
        "type": "string",
        "enum": [
          "None specified",
          "AWS Elastic BeanStalk",
          "AWS Fargate",
          "Amazon Elastic Cloud Compute (EC2)",
          "Amazon Elastic Container Service (ECS)",
          "Amazon Elastic Kubernetes Service (EKS)",
          "Aurora MySQL",
          "Aurora PostgreSQL",
          "Amazon Relational Database Service on MySQL",
          "Amazon Relational Database Service on PostgreSQL",
          "Amazon DocumentDB",
          "Amazon DynamoDB",
          "Amazon Relational Database Service",
          "Babelfish for Aurora PostgreSQL"
        ]
      },
      "TransformationToolName": {
        "type": "string",
        "enum": [
          "App2Container",
          "Porting Assistant For .NET",
          "End of Support Migration",
          "Windows Web Application Migration Assistant",
          "Application Migration Service",
          "Strategy Recommendation Support",
          "In Place Operating System Upgrade",
          "Schema Conversion Tool",
          "Database Migration Service",
          "Native SQL Server Backup/Restore"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://migrationhub-strategy.us-east-1.amazonaws.com/update-applicationcomponent-config/"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
