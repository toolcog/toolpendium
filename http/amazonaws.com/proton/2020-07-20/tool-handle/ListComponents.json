{
  "name": "ListComponents",
  "description": "<p>List components with summary data. You can filter the result list by environment, service, or a single service instance.</p> <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\">Proton components</a> in the <i>Proton User Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AwsProton20200720.ListComponents"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListComponentsInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListComponentsInput": {
        "type": "object",
        "title": "ListComponentsInput",
        "properties": {
          "environmentName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of an environment for result list filtering. Proton returns components associated with the environment or attached to service instances running in it."
              }
            ]
          },
          "maxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxPageResults"
              },
              {
                "description": "The maximum number of components to list."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "A token that indicates the location of the next component in the array of components, after the list of components that was previously requested."
              }
            ]
          },
          "serviceInstanceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of a service instance for result list filtering. Proton returns the component attached to the service instance, if any."
              }
            ]
          },
          "serviceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of a service for result list filtering. Proton returns components attached to service instances of the service."
              }
            ]
          }
        }
      },
      "ResourceName": {
        "type": "string",
        "pattern": "^[0-9A-Za-z]+[0-9A-Za-z_\\-]*$",
        "minLength": 1,
        "maxLength": 100
      },
      "MaxPageResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "NextToken": {
        "type": "string",
        "pattern": "^[A-Za-z0-9+=/]+$"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://proton.us-east-1.amazonaws.com/#X-Amz-Target=AwsProton20200720.ListComponents{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**components**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
