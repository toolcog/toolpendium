{
  "name": "UpdateServiceTemplateVersion",
  "description": "Update a major or minor version of a service template.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AwsProton20200720.UpdateServiceTemplateVersion"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateServiceTemplateVersionInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateServiceTemplateVersionInput": {
        "type": "object",
        "required": [
          "majorVersion",
          "minorVersion",
          "templateName"
        ],
        "title": "UpdateServiceTemplateVersionInput",
        "properties": {
          "compatibleEnvironmentTemplates": {
            "allOf": [
              {
                "$ref": "#/$defs/CompatibleEnvironmentTemplateInputList"
              },
              {
                "description": "An array of environment template objects that are compatible with this service template version. A service instance based on this service template version can run in environments based on compatible templates."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "A description of a service template version to update."
              }
            ]
          },
          "majorVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/TemplateVersionPart"
              },
              {
                "description": "To update a major version of a service template, include <code>major Version</code>."
              }
            ]
          },
          "minorVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/TemplateVersionPart"
              },
              {
                "description": "To update a minor version of a service template, include <code>minorVersion</code>."
              }
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/$defs/TemplateVersionStatus"
              },
              {
                "description": "The status of the service template minor version to update."
              }
            ]
          },
          "supportedComponentSources": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceTemplateSupportedComponentSourceInputList"
              },
              {
                "description": "<p>An array of supported component sources. Components with supported sources can be attached to service instances based on this service template version.</p> <note> <p>A change to <code>supportedComponentSources</code> doesn't impact existing component attachments to instances based on this template version. A change only affects later associations.</p> </note> <p>For more information about components, see <a href=\"https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html\">Proton components</a> in the <i>Proton User Guide</i>.</p>"
              }
            ]
          },
          "templateName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of the service template."
              }
            ]
          }
        }
      },
      "CompatibleEnvironmentTemplateInputList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CompatibleEnvironmentTemplateInput"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "CompatibleEnvironmentTemplateInput": {
        "type": "object",
        "required": [
          "majorVersion",
          "templateName"
        ],
        "properties": {
          "majorVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/TemplateVersionPart"
              },
              {
                "description": "The major version of the compatible environment template."
              }
            ]
          },
          "templateName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The compatible environment template name."
              }
            ]
          }
        },
        "description": "Compatible environment template data."
      },
      "TemplateVersionPart": {
        "type": "string",
        "pattern": "^(0|([1-9]{1}\\d*))$",
        "minLength": 1,
        "maxLength": 20
      },
      "ResourceName": {
        "type": "string",
        "pattern": "^[0-9A-Za-z]+[0-9A-Za-z_\\-]*$",
        "minLength": 1,
        "maxLength": 100
      },
      "Description": {
        "type": "string",
        "minLength": 0,
        "maxLength": 500,
        "format": "password"
      },
      "TemplateVersionStatus": {
        "type": "string",
        "enum": [
          "REGISTRATION_IN_PROGRESS",
          "REGISTRATION_FAILED",
          "DRAFT",
          "PUBLISHED"
        ]
      },
      "ServiceTemplateSupportedComponentSourceInputList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ServiceTemplateSupportedComponentSourceType"
        }
      },
      "ServiceTemplateSupportedComponentSourceType": {
        "type": "string",
        "enum": [
          "DIRECTLY_DEFINED"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://proton.us-east-1.amazonaws.com/#X-Amz-Target=AwsProton20200720.UpdateServiceTemplateVersion"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**serviceTemplateVersion**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
