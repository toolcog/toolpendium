{
  "name": "ListServiceInstances",
  "description": "List service instances with summary data. This action lists service instances of all services in the Amazon Web Services account.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AwsProton20200720.ListServiceInstances"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListServiceInstancesInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListServiceInstancesInput": {
        "type": "object",
        "title": "ListServiceInstancesInput",
        "properties": {
          "filters": {
            "allOf": [
              {
                "$ref": "#/$defs/ListServiceInstancesFilterList"
              },
              {
                "description": "An array of filtering criteria that scope down the result list. By default, all service instances in the Amazon Web Services account are returned."
              }
            ]
          },
          "maxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxPageResults"
              },
              {
                "description": "The maximum number of service instances to list."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "A token that indicates the location of the next service in the array of service instances, after the list of service instances that was previously requested."
              }
            ]
          },
          "serviceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of the service that the service instance belongs to."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/ListServiceInstancesSortBy"
              },
              {
                "description": "<p>The field that the result list is sorted by.</p> <p>When you choose to sort by <code>serviceName</code>, service instances within each service are sorted by service instance name.</p> <p>Default: <code>serviceName</code> </p>"
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "<p>Result list sort order.</p> <p>Default: <code>ASCENDING</code> </p>"
              }
            ]
          }
        }
      },
      "ListServiceInstancesFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ListServiceInstancesFilter"
        }
      },
      "ListServiceInstancesFilter": {
        "type": "object",
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/ListServiceInstancesFilterBy"
              },
              {
                "description": "The name of a filtering criterion."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/ListServiceInstancesFilterValue"
              },
              {
                "description": "<p>A value to filter by.</p> <p>With the date/time keys (<code>*At{Before,After}</code>), the value is a valid <a href=\"https://datatracker.ietf.org/doc/html/rfc3339.html\">RFC 3339</a> string with no UTC offset and with an optional fractional precision (for example, <code>1985-04-12T23:20:50.52Z</code>).</p>"
              }
            ]
          }
        },
        "description": "A filtering criterion to scope down the result list of the <a>ListServiceInstances</a> action."
      },
      "ListServiceInstancesFilterBy": {
        "type": "string",
        "enum": [
          "name",
          "deploymentStatus",
          "templateName",
          "serviceName",
          "deployedTemplateVersionStatus",
          "environmentName",
          "lastDeploymentAttemptedAtBefore",
          "lastDeploymentAttemptedAtAfter",
          "createdAtBefore",
          "createdAtAfter"
        ]
      },
      "ListServiceInstancesFilterValue": {
        "type": "string"
      },
      "MaxPageResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "NextToken": {
        "type": "string",
        "pattern": "^[A-Za-z0-9+=/]+$"
      },
      "ResourceName": {
        "type": "string",
        "pattern": "^[0-9A-Za-z]+[0-9A-Za-z_\\-]*$",
        "minLength": 1,
        "maxLength": 100
      },
      "ListServiceInstancesSortBy": {
        "type": "string",
        "enum": [
          "name",
          "deploymentStatus",
          "templateName",
          "serviceName",
          "environmentName",
          "lastDeploymentAttemptedAt",
          "createdAt"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://proton.us-east-1.amazonaws.com/#X-Amz-Target=AwsProton20200720.ListServiceInstances{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**nextToken**",
            "**serviceInstances**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
