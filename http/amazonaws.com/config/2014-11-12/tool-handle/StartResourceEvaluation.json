{
  "name": "StartResourceEvaluation",
  "description": "<p>Runs an on-demand evaluation for the specified resource to determine whether the resource details will comply with configured Config rules. You can also use it for evaluation purposes. Config recommends using an evaluation context. It runs an execution against the resource details with all of the Config rules in your account that match with the specified proactive mode and resource type.</p> <note> <p>Ensure you have the <code>cloudformation:DescribeType</code> role setup to validate the resource type schema.</p> <p>You can find the <a href=\"https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-schema.html\">Resource type schema</a> in \"<i>Amazon Web Services public extensions</i>\" within the CloudFormation registry or with the following CLI commmand: <code>aws cloudformation describe-type --type-name \"AWS::S3::Bucket\" --type RESOURCE</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry.html#registry-view\">Managing extensions through the CloudFormation registry</a> and <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">Amazon Web Services resource and property types reference</a> in the CloudFormation User Guide.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StarlingDoveService.StartResourceEvaluation"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/StartResourceEvaluationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "StartResourceEvaluationRequest": {
        "type": "object",
        "required": [
          "ResourceDetails",
          "EvaluationMode"
        ],
        "title": "StartResourceEvaluationRequest",
        "properties": {
          "ResourceDetails": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceDetails"
              },
              {
                "description": "Returns a <code>ResourceDetails</code> object."
              }
            ]
          },
          "EvaluationContext": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationContext"
              },
              {
                "description": "Returns an <code>EvaluationContext</code> object."
              }
            ]
          },
          "EvaluationMode": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationMode"
              },
              {
                "description": "The mode of an evaluation. The valid values for this API are <code>DETECTIVE</code> and <code>PROACTIVE</code>."
              }
            ]
          },
          "EvaluationTimeout": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationTimeout"
              },
              {
                "description": "The timeout for an evaluation. The default is 900 seconds. You cannot specify a number greater than 3600. If you specify 0, Config uses the default."
              }
            ]
          },
          "ClientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientToken"
              },
              {
                "description": "<p>A client token is a unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request using one of these actions, specify a client token in the request.</p> <note> <p>Avoid reusing the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, other than the Region or Availability Zone, the retry fails with an IdempotentParameterMismatch error.</p> </note>"
              }
            ]
          }
        }
      },
      "ResourceDetails": {
        "type": "object",
        "required": [
          "ResourceId",
          "ResourceType",
          "ResourceConfiguration"
        ],
        "properties": {
          "ResourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/BaseResourceId"
              },
              {
                "description": "A unique resource ID for an evaluation."
              }
            ]
          },
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256"
              },
              {
                "description": "The type of resource being evaluated."
              }
            ]
          },
          "ResourceConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceConfiguration"
              },
              {
                "description": "The resource definition to be evaluated as per the resource configuration schema type."
              }
            ]
          },
          "ResourceConfigurationSchemaType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceConfigurationSchemaType"
              },
              {
                "description": "<p>The schema type of the resource configuration.</p> <note> <p>You can find the <a href=\"https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-schema.html\">Resource type schema</a>, or <code>CFN_RESOURCE_SCHEMA</code>, in \"<i>Amazon Web Services public extensions</i>\" within the CloudFormation registry or with the following CLI commmand: <code>aws cloudformation describe-type --type-name \"AWS::S3::Bucket\" --type RESOURCE</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry.html#registry-view\">Managing extensions through the CloudFormation registry</a> and <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">Amazon Web Services resource and property types reference</a> in the CloudFormation User Guide.</p> </note>"
              }
            ]
          }
        },
        "description": "Returns information about the resource being evaluated."
      },
      "BaseResourceId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 768
      },
      "StringWithCharLimit256": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "ResourceConfiguration": {
        "type": "string",
        "minLength": 1,
        "maxLength": 51200
      },
      "ResourceConfigurationSchemaType": {
        "type": "string",
        "enum": [
          "CFN_RESOURCE_SCHEMA"
        ]
      },
      "EvaluationContext": {
        "type": "object",
        "properties": {
          "EvaluationContextIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationContextIdentifier"
              },
              {
                "description": "A unique EvaluationContextIdentifier ID for an EvaluationContext."
              }
            ]
          }
        },
        "description": "Use EvaluationContext to group independently initiated proactive resource evaluations. For example, CFN Stack. If you want to check just a resource definition, you do not need to provide evaluation context."
      },
      "EvaluationContextIdentifier": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "EvaluationMode": {
        "type": "string",
        "enum": [
          "DETECTIVE",
          "PROACTIVE"
        ]
      },
      "EvaluationTimeout": {
        "type": "integer",
        "minimum": 0,
        "maximum": 3600
      },
      "ClientToken": {
        "type": "string",
        "minLength": 64,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://config.us-east-1.amazonaws.com/#X-Amz-Target=StarlingDoveService.StartResourceEvaluation"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ResourceEvaluationId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
