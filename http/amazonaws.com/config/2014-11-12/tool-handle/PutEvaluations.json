{
  "name": "PutEvaluations",
  "description": "Used by an Lambda function to deliver evaluation results to Config. This action is required in every Lambda function that is invoked by an Config rule.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StarlingDoveService.PutEvaluations"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutEvaluationsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutEvaluationsRequest": {
        "type": "object",
        "required": [
          "ResultToken"
        ],
        "title": "PutEvaluationsRequest",
        "properties": {
          "Evaluations": {
            "allOf": [
              {
                "$ref": "#/$defs/Evaluations"
              },
              {
                "description": "The assessments that the Lambda function performs. Each evaluation identifies an Amazon Web Services resource and indicates whether it complies with the Config rule that invokes the Lambda function."
              }
            ]
          },
          "ResultToken": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "An encrypted token that associates an evaluation with an Config rule. Identifies the rule and the event that triggered the evaluation."
              }
            ]
          },
          "TestMode": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Use this parameter to specify a test run for <code>PutEvaluations</code>. You can verify whether your Lambda function will deliver evaluation results to Config. No updates occur to your existing evaluations, and evaluation results are not sent to Config.</p> <note> <p>When <code>TestMode</code> is <code>true</code>, <code>PutEvaluations</code> doesn't require a valid value for the <code>ResultToken</code> parameter, but the value cannot be null.</p> </note>"
              }
            ]
          }
        },
        "description": "<p/>"
      },
      "Evaluations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Evaluation"
        },
        "minItems": 0,
        "maxItems": 100
      },
      "Evaluation": {
        "type": "object",
        "required": [
          "ComplianceResourceType",
          "ComplianceResourceId",
          "ComplianceType",
          "OrderingTimestamp"
        ],
        "properties": {
          "ComplianceResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256"
              },
              {
                "description": "The type of Amazon Web Services resource that was evaluated."
              }
            ]
          },
          "ComplianceResourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/BaseResourceId"
              },
              {
                "description": "The ID of the Amazon Web Services resource that was evaluated."
              }
            ]
          },
          "ComplianceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceType"
              },
              {
                "description": "<p>Indicates whether the Amazon Web Services resource complies with the Config rule that it was evaluated against.</p> <p>For the <code>Evaluation</code> data type, Config supports only the <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and <code>NOT_APPLICABLE</code> values. Config does not support the <code>INSUFFICIENT_DATA</code> value for this data type.</p> <p>Similarly, Config does not accept <code>INSUFFICIENT_DATA</code> as the value for <code>ComplianceType</code> from a <code>PutEvaluations</code> request. For example, an Lambda function for a custom Config rule cannot pass an <code>INSUFFICIENT_DATA</code> value to Config.</p>"
              }
            ]
          },
          "Annotation": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256"
              },
              {
                "description": "Supplementary information about how the evaluation determined the compliance."
              }
            ]
          },
          "OrderingTimestamp": {
            "allOf": [
              {
                "$ref": "#/$defs/OrderingTimestamp"
              },
              {
                "description": "The time of the event in Config that triggered the evaluation. For event-based evaluations, the time indicates when Config created the configuration item that triggered the evaluation. For periodic evaluations, the time indicates when Config triggered the evaluation at the frequency that you specified (for example, every 24 hours)."
              }
            ]
          }
        },
        "description": "Identifies an Amazon Web Services resource and indicates whether it complies with the Config rule that it was evaluated against."
      },
      "StringWithCharLimit256": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "BaseResourceId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 768
      },
      "ComplianceType": {
        "type": "string",
        "enum": [
          "COMPLIANT",
          "NON_COMPLIANT",
          "NOT_APPLICABLE",
          "INSUFFICIENT_DATA"
        ]
      },
      "OrderingTimestamp": {
        "type": "string",
        "format": "date-time"
      },
      "String": {
        "type": "string"
      },
      "Boolean": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://config.us-east-1.amazonaws.com/#X-Amz-Target=StarlingDoveService.PutEvaluations"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "<p/>",
        "**Key properties:**",
        {
          "$ul": [
            "**FailedEvaluations**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
