{
  "name": "BatchGetResourceConfig",
  "description": "<p>Returns the <code>BaseConfigurationItem</code> for one or more requested resources. The operation also returns a list of resources that are not processed in the current request. If there are no unprocessed resources, the operation returns an empty unprocessedResourceKeys list. </p> <note> <ul> <li> <p>The API does not return results for deleted resources.</p> </li> <li> <p> The API does not return any tags for the requested resources. This information is filtered out of the supplementaryConfiguration section of the API response.</p> </li> </ul> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StarlingDoveService.BatchGetResourceConfig"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/BatchGetResourceConfigRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "BatchGetResourceConfigRequest": {
        "type": "object",
        "required": [
          "resourceKeys"
        ],
        "title": "BatchGetResourceConfigRequest",
        "properties": {
          "resourceKeys": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceKeys"
              },
              {
                "description": "A list of resource keys to be processed with the current request. Each element in the list consists of the resource type and resource ID."
              }
            ]
          }
        }
      },
      "ResourceKeys": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ResourceKey"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "ResourceKey": {
        "type": "object",
        "required": [
          "resourceType",
          "resourceId"
        ],
        "properties": {
          "resourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceType"
              },
              {
                "description": "The resource type."
              }
            ]
          },
          "resourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceId"
              },
              {
                "description": "The ID of the resource (for example., sg-xxxxxx). "
              }
            ]
          }
        },
        "description": "The details that identify a resource within Config, including the resource type and resource ID."
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "AWS::EC2::CustomerGateway",
          "AWS::EC2::EIP",
          "AWS::EC2::Host",
          "AWS::EC2::Instance",
          "AWS::EC2::InternetGateway",
          "AWS::EC2::NetworkAcl",
          "AWS::EC2::NetworkInterface",
          "AWS::EC2::RouteTable",
          "AWS::EC2::SecurityGroup",
          "AWS::EC2::Subnet",
          "AWS::CloudTrail::Trail",
          "AWS::EC2::Volume",
          "AWS::EC2::VPC",
          "AWS::EC2::VPNConnection",
          "AWS::EC2::VPNGateway",
          "AWS::EC2::RegisteredHAInstance",
          "AWS::EC2::NatGateway",
          "AWS::EC2::EgressOnlyInternetGateway",
          "AWS::EC2::VPCEndpoint",
          "AWS::EC2::VPCEndpointService",
          "AWS::EC2::FlowLog",
          "AWS::EC2::VPCPeeringConnection",
          "AWS::Elasticsearch::Domain",
          "AWS::IAM::Group",
          "AWS::IAM::Policy",
          "AWS::IAM::Role",
          "AWS::IAM::User",
          "AWS::ElasticLoadBalancingV2::LoadBalancer",
          "AWS::ACM::Certificate",
          "AWS::RDS::DBInstance",
          "AWS::RDS::DBSubnetGroup",
          "AWS::RDS::DBSecurityGroup",
          "AWS::RDS::DBSnapshot",
          "AWS::RDS::DBCluster",
          "AWS::RDS::DBClusterSnapshot",
          "AWS::RDS::EventSubscription",
          "AWS::S3::Bucket",
          "AWS::S3::AccountPublicAccessBlock",
          "AWS::Redshift::Cluster",
          "AWS::Redshift::ClusterSnapshot",
          "AWS::Redshift::ClusterParameterGroup",
          "AWS::Redshift::ClusterSecurityGroup",
          "AWS::Redshift::ClusterSubnetGroup",
          "AWS::Redshift::EventSubscription",
          "AWS::SSM::ManagedInstanceInventory",
          "AWS::CloudWatch::Alarm",
          "AWS::CloudFormation::Stack",
          "AWS::ElasticLoadBalancing::LoadBalancer",
          "AWS::AutoScaling::AutoScalingGroup",
          "AWS::AutoScaling::LaunchConfiguration",
          "AWS::AutoScaling::ScalingPolicy",
          "AWS::AutoScaling::ScheduledAction",
          "AWS::DynamoDB::Table",
          "AWS::CodeBuild::Project",
          "AWS::WAF::RateBasedRule",
          "AWS::WAF::Rule",
          "AWS::WAF::RuleGroup",
          "AWS::WAF::WebACL",
          "AWS::WAFRegional::RateBasedRule",
          "AWS::WAFRegional::Rule",
          "AWS::WAFRegional::RuleGroup",
          "AWS::WAFRegional::WebACL",
          "AWS::CloudFront::Distribution",
          "AWS::CloudFront::StreamingDistribution",
          "AWS::Lambda::Function",
          "AWS::NetworkFirewall::Firewall",
          "AWS::NetworkFirewall::FirewallPolicy",
          "AWS::NetworkFirewall::RuleGroup",
          "AWS::ElasticBeanstalk::Application",
          "AWS::ElasticBeanstalk::ApplicationVersion",
          "AWS::ElasticBeanstalk::Environment",
          "AWS::WAFv2::WebACL",
          "AWS::WAFv2::RuleGroup",
          "AWS::WAFv2::IPSet",
          "AWS::WAFv2::RegexPatternSet",
          "AWS::WAFv2::ManagedRuleSet",
          "AWS::XRay::EncryptionConfig",
          "AWS::SSM::AssociationCompliance",
          "AWS::SSM::PatchCompliance",
          "AWS::Shield::Protection",
          "AWS::ShieldRegional::Protection",
          "AWS::Config::ConformancePackCompliance",
          "AWS::Config::ResourceCompliance",
          "AWS::ApiGateway::Stage",
          "AWS::ApiGateway::RestApi",
          "AWS::ApiGatewayV2::Stage",
          "AWS::ApiGatewayV2::Api",
          "AWS::CodePipeline::Pipeline",
          "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
          "AWS::ServiceCatalog::CloudFormationProduct",
          "AWS::ServiceCatalog::Portfolio",
          "AWS::SQS::Queue",
          "AWS::KMS::Key",
          "AWS::QLDB::Ledger",
          "AWS::SecretsManager::Secret",
          "AWS::SNS::Topic",
          "AWS::SSM::FileData",
          "AWS::Backup::BackupPlan",
          "AWS::Backup::BackupSelection",
          "AWS::Backup::BackupVault",
          "AWS::Backup::RecoveryPoint",
          "AWS::ECR::Repository",
          "AWS::ECS::Cluster",
          "AWS::ECS::Service",
          "AWS::ECS::TaskDefinition",
          "AWS::EFS::AccessPoint",
          "AWS::EFS::FileSystem",
          "AWS::EKS::Cluster",
          "AWS::OpenSearch::Domain",
          "AWS::EC2::TransitGateway",
          "AWS::Kinesis::Stream",
          "AWS::Kinesis::StreamConsumer",
          "AWS::CodeDeploy::Application",
          "AWS::CodeDeploy::DeploymentConfig",
          "AWS::CodeDeploy::DeploymentGroup",
          "AWS::EC2::LaunchTemplate",
          "AWS::ECR::PublicRepository",
          "AWS::GuardDuty::Detector",
          "AWS::EMR::SecurityConfiguration",
          "AWS::SageMaker::CodeRepository",
          "AWS::Route53Resolver::ResolverEndpoint",
          "AWS::Route53Resolver::ResolverRule",
          "AWS::Route53Resolver::ResolverRuleAssociation",
          "AWS::DMS::ReplicationSubnetGroup",
          "AWS::DMS::EventSubscription",
          "AWS::MSK::Cluster",
          "AWS::StepFunctions::Activity",
          "AWS::WorkSpaces::Workspace",
          "AWS::WorkSpaces::ConnectionAlias",
          "AWS::SageMaker::Model",
          "AWS::ElasticLoadBalancingV2::Listener",
          "AWS::StepFunctions::StateMachine",
          "AWS::Batch::JobQueue",
          "AWS::Batch::ComputeEnvironment",
          "AWS::AccessAnalyzer::Analyzer",
          "AWS::Athena::WorkGroup",
          "AWS::Athena::DataCatalog",
          "AWS::Detective::Graph",
          "AWS::GlobalAccelerator::Accelerator",
          "AWS::GlobalAccelerator::EndpointGroup",
          "AWS::GlobalAccelerator::Listener",
          "AWS::EC2::TransitGatewayAttachment",
          "AWS::EC2::TransitGatewayRouteTable",
          "AWS::DMS::Certificate",
          "AWS::AppConfig::Application",
          "AWS::AppSync::GraphQLApi",
          "AWS::DataSync::LocationSMB",
          "AWS::DataSync::LocationFSxLustre",
          "AWS::DataSync::LocationS3",
          "AWS::DataSync::LocationEFS",
          "AWS::DataSync::Task",
          "AWS::DataSync::LocationNFS",
          "AWS::EC2::NetworkInsightsAccessScopeAnalysis",
          "AWS::EKS::FargateProfile",
          "AWS::Glue::Job",
          "AWS::GuardDuty::ThreatIntelSet",
          "AWS::GuardDuty::IPSet",
          "AWS::SageMaker::Workteam",
          "AWS::SageMaker::NotebookInstanceLifecycleConfig",
          "AWS::ServiceDiscovery::Service",
          "AWS::ServiceDiscovery::PublicDnsNamespace",
          "AWS::SES::ContactList",
          "AWS::SES::ConfigurationSet",
          "AWS::Route53::HostedZone",
          "AWS::IoTEvents::Input",
          "AWS::IoTEvents::DetectorModel",
          "AWS::IoTEvents::AlarmModel",
          "AWS::ServiceDiscovery::HttpNamespace",
          "AWS::Events::EventBus",
          "AWS::ImageBuilder::ContainerRecipe",
          "AWS::ImageBuilder::DistributionConfiguration",
          "AWS::ImageBuilder::InfrastructureConfiguration",
          "AWS::DataSync::LocationObjectStorage",
          "AWS::DataSync::LocationHDFS",
          "AWS::Glue::Classifier",
          "AWS::Route53RecoveryReadiness::Cell",
          "AWS::Route53RecoveryReadiness::ReadinessCheck",
          "AWS::ECR::RegistryPolicy",
          "AWS::Backup::ReportPlan",
          "AWS::Lightsail::Certificate",
          "AWS::RUM::AppMonitor",
          "AWS::Events::Endpoint",
          "AWS::SES::ReceiptRuleSet",
          "AWS::Events::Archive",
          "AWS::Events::ApiDestination",
          "AWS::Lightsail::Disk",
          "AWS::FIS::ExperimentTemplate",
          "AWS::DataSync::LocationFSxWindows",
          "AWS::SES::ReceiptFilter",
          "AWS::GuardDuty::Filter",
          "AWS::SES::Template",
          "AWS::AmazonMQ::Broker",
          "AWS::AppConfig::Environment",
          "AWS::AppConfig::ConfigurationProfile",
          "AWS::Cloud9::EnvironmentEC2",
          "AWS::EventSchemas::Registry",
          "AWS::EventSchemas::RegistryPolicy",
          "AWS::EventSchemas::Discoverer",
          "AWS::FraudDetector::Label",
          "AWS::FraudDetector::EntityType",
          "AWS::FraudDetector::Variable",
          "AWS::FraudDetector::Outcome",
          "AWS::IoT::Authorizer",
          "AWS::IoT::SecurityProfile",
          "AWS::IoT::RoleAlias",
          "AWS::IoT::Dimension",
          "AWS::IoTAnalytics::Datastore",
          "AWS::Lightsail::Bucket",
          "AWS::Lightsail::StaticIp",
          "AWS::MediaPackage::PackagingGroup",
          "AWS::Route53RecoveryReadiness::RecoveryGroup",
          "AWS::ResilienceHub::ResiliencyPolicy",
          "AWS::Transfer::Workflow",
          "AWS::EKS::IdentityProviderConfig",
          "AWS::EKS::Addon",
          "AWS::Glue::MLTransform",
          "AWS::IoT::Policy",
          "AWS::IoT::MitigationAction",
          "AWS::IoTTwinMaker::Workspace",
          "AWS::IoTTwinMaker::Entity",
          "AWS::IoTAnalytics::Dataset",
          "AWS::IoTAnalytics::Pipeline",
          "AWS::IoTAnalytics::Channel",
          "AWS::IoTSiteWise::Dashboard",
          "AWS::IoTSiteWise::Project",
          "AWS::IoTSiteWise::Portal",
          "AWS::IoTSiteWise::AssetModel",
          "AWS::IVS::Channel",
          "AWS::IVS::RecordingConfiguration",
          "AWS::IVS::PlaybackKeyPair",
          "AWS::KinesisAnalyticsV2::Application",
          "AWS::RDS::GlobalCluster",
          "AWS::S3::MultiRegionAccessPoint",
          "AWS::DeviceFarm::TestGridProject",
          "AWS::Budgets::BudgetsAction",
          "AWS::Lex::Bot",
          "AWS::CodeGuruReviewer::RepositoryAssociation",
          "AWS::IoT::CustomMetric",
          "AWS::Route53Resolver::FirewallDomainList",
          "AWS::RoboMaker::RobotApplicationVersion",
          "AWS::EC2::TrafficMirrorSession",
          "AWS::IoTSiteWise::Gateway",
          "AWS::Lex::BotAlias",
          "AWS::LookoutMetrics::Alert",
          "AWS::IoT::AccountAuditConfiguration",
          "AWS::EC2::TrafficMirrorTarget",
          "AWS::S3::StorageLens",
          "AWS::IoT::ScheduledAudit",
          "AWS::Events::Connection",
          "AWS::EventSchemas::Schema",
          "AWS::MediaPackage::PackagingConfiguration",
          "AWS::KinesisVideo::SignalingChannel",
          "AWS::AppStream::DirectoryConfig",
          "AWS::LookoutVision::Project",
          "AWS::Route53RecoveryControl::Cluster",
          "AWS::Route53RecoveryControl::SafetyRule",
          "AWS::Route53RecoveryControl::ControlPanel",
          "AWS::Route53RecoveryControl::RoutingControl",
          "AWS::Route53RecoveryReadiness::ResourceSet",
          "AWS::RoboMaker::SimulationApplication",
          "AWS::RoboMaker::RobotApplication",
          "AWS::HealthLake::FHIRDatastore",
          "AWS::Pinpoint::Segment",
          "AWS::Pinpoint::ApplicationSettings",
          "AWS::Events::Rule",
          "AWS::EC2::DHCPOptions",
          "AWS::EC2::NetworkInsightsPath",
          "AWS::EC2::TrafficMirrorFilter",
          "AWS::EC2::IPAM",
          "AWS::IoTTwinMaker::Scene",
          "AWS::NetworkManager::TransitGatewayRegistration",
          "AWS::CustomerProfiles::Domain",
          "AWS::AutoScaling::WarmPool",
          "AWS::Connect::PhoneNumber",
          "AWS::AppConfig::DeploymentStrategy",
          "AWS::AppFlow::Flow",
          "AWS::AuditManager::Assessment",
          "AWS::CloudWatch::MetricStream",
          "AWS::DeviceFarm::InstanceProfile",
          "AWS::DeviceFarm::Project",
          "AWS::EC2::EC2Fleet",
          "AWS::EC2::SubnetRouteTableAssociation",
          "AWS::ECR::PullThroughCacheRule",
          "AWS::GroundStation::Config",
          "AWS::ImageBuilder::ImagePipeline",
          "AWS::IoT::FleetMetric",
          "AWS::IoTWireless::ServiceProfile",
          "AWS::NetworkManager::Device",
          "AWS::NetworkManager::GlobalNetwork",
          "AWS::NetworkManager::Link",
          "AWS::NetworkManager::Site",
          "AWS::Panorama::Package",
          "AWS::Pinpoint::App",
          "AWS::Redshift::ScheduledAction",
          "AWS::Route53Resolver::FirewallRuleGroupAssociation",
          "AWS::SageMaker::AppImageConfig",
          "AWS::SageMaker::Image",
          "AWS::ECS::TaskSet",
          "AWS::Cassandra::Keyspace",
          "AWS::Signer::SigningProfile",
          "AWS::Amplify::App",
          "AWS::AppMesh::VirtualNode",
          "AWS::AppMesh::VirtualService",
          "AWS::AppRunner::VpcConnector",
          "AWS::AppStream::Application",
          "AWS::CodeArtifact::Repository",
          "AWS::EC2::PrefixList",
          "AWS::EC2::SpotFleet",
          "AWS::Evidently::Project",
          "AWS::Forecast::Dataset",
          "AWS::IAM::SAMLProvider",
          "AWS::IAM::ServerCertificate",
          "AWS::Pinpoint::Campaign",
          "AWS::Pinpoint::InAppTemplate",
          "AWS::SageMaker::Domain",
          "AWS::Transfer::Agreement",
          "AWS::Transfer::Connector",
          "AWS::KinesisFirehose::DeliveryStream"
        ]
      },
      "ResourceId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 768
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://config.us-east-1.amazonaws.com/#X-Amz-Target=StarlingDoveService.BatchGetResourceConfig"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**baseConfigurationItems**",
            "**unprocessedResourceKeys**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
