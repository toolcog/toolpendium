{
  "name": "DescribeRemediationExceptions",
  "description": "<p>Returns the details of one or more remediation exceptions. A detailed view of a remediation exception for a set of resources that includes an explanation of an exception and the time when the exception will be deleted. When you specify the limit and the next token, you receive a paginated response. </p> <note> <p>Config generates a remediation exception when a problem occurs executing a remediation action to a specific resource. Remediation exceptions blocks auto-remediation until the exception is cleared.</p> <p>When you specify the limit and the next token, you receive a paginated response. </p> <p>Limit and next token are not applicable if you request resources in batch. It is only applicable, when you request all resources.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "Limit": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StarlingDoveService.DescribeRemediationExceptions"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeRemediationExceptionsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeRemediationExceptionsRequest": {
        "type": "object",
        "required": [
          "ConfigRuleName"
        ],
        "title": "DescribeRemediationExceptionsRequest",
        "properties": {
          "ConfigRuleName": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigRuleName"
              },
              {
                "description": "The name of the Config rule."
              }
            ]
          },
          "ResourceKeys": {
            "allOf": [
              {
                "$ref": "#/$defs/RemediationExceptionResourceKeys"
              },
              {
                "description": "An exception list of resource exception keys to be processed with the current request. Config adds exception for each resource key. For example, Config adds 3 exceptions for 3 resource keys. "
              }
            ]
          },
          "Limit": {
            "allOf": [
              {
                "$ref": "#/$defs/Limit"
              },
              {
                "description": "The maximum number of RemediationExceptionResourceKey returned on each page. The default is 25. If you specify 0, Config uses the default."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The <code>nextToken</code> string returned in a previous request that you use to request the next page of results in a paginated response."
              }
            ]
          }
        }
      },
      "ConfigRuleName": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 128
      },
      "RemediationExceptionResourceKeys": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RemediationExceptionResourceKey"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "RemediationExceptionResourceKey": {
        "type": "object",
        "properties": {
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256"
              },
              {
                "description": "The type of a resource."
              }
            ]
          },
          "ResourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit1024"
              },
              {
                "description": "The ID of the resource (for example., sg-xxxxxx)."
              }
            ]
          }
        },
        "description": "The details that identify a resource within Config, including the resource type and resource ID. "
      },
      "StringWithCharLimit256": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "StringWithCharLimit1024": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "Limit": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100
      },
      "String": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://config.us-east-1.amazonaws.com/#X-Amz-Target=StarlingDoveService.DescribeRemediationExceptions{?Limit,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**RemediationExceptions**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
