{
  "name": "PutOrganizationConfigRule",
  "description": "<p>Adds or updates an Config rule for your entire organization to evaluate if your Amazon Web Services resources comply with your desired configurations. For information on how many organization Config rules you can have per account, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/configlimits.html\"> <b>Service Limits</b> </a> in the <i>Config Developer Guide</i>.</p> <p> Only a management account and a delegated administrator can create or update an organization Config rule. When calling this API with a delegated administrator, you must ensure Organizations <code>ListDelegatedAdministrator</code> permissions are added. An organization can have up to 3 delegated administrators.</p> <p>This API enables organization service access through the <code>EnableAWSServiceAccess</code> action and creates a service-linked role <code>AWSServiceRoleForConfigMultiAccountSetup</code> in the management or delegated administrator account of your organization. The service-linked role is created only when the role does not exist in the caller account. Config verifies the existence of role with <code>GetRole</code> action.</p> <p>To use this API with delegated administrator, register a delegated administrator by calling Amazon Web Services Organization <code>register-delegated-administrator</code> for <code>config-multiaccountsetup.amazonaws.com</code>. </p> <p>There are two types of rules: <i>Config Managed Rules</i> and <i>Config Custom Rules</i>. You can use <code>PutOrganizationConfigRule</code> to create both Config Managed Rules and Config Custom Rules.</p> <p>Config Managed Rules are predefined, customizable rules created by Config. For a list of managed rules, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html\">List of Config Managed Rules</a>. If you are adding an Config managed rule, you must specify the rule's identifier for the <code>RuleIdentifier</code> key.</p> <p>Config Custom Rules are rules that you create from scratch. There are two ways to create Config custom rules: with Lambda functions (<a href=\"https://docs.aws.amazon.com/config/latest/developerguide/gettingstarted-concepts.html#gettingstarted-concepts-function\"> Lambda Developer Guide</a>) and with Guard (<a href=\"https://github.com/aws-cloudformation/cloudformation-guard\">Guard GitHub Repository</a>), a policy-as-code language. Config custom rules created with Lambda are called <i>Config Custom Lambda Rules</i> and Config custom rules created with Guard are called <i>Config Custom Policy Rules</i>.</p> <p>If you are adding a new Config Custom Lambda rule, you first need to create an Lambda function in the management account or a delegated administrator that the rule invokes to evaluate your resources. You also need to create an IAM role in the managed account that can be assumed by the Lambda function. When you use <code>PutOrganizationConfigRule</code> to add a Custom Lambda rule to Config, you must specify the Amazon Resource Name (ARN) that Lambda assigns to the function.</p> <note> <p>Prerequisite: Ensure you call <code>EnableAllFeatures</code> API to enable all features in an organization.</p> <p>Make sure to specify one of either <code>OrganizationCustomPolicyRuleMetadata</code> for Custom Policy rules, <code>OrganizationCustomRuleMetadata</code> for Custom Lambda rules, or <code>OrganizationManagedRuleMetadata</code> for managed rules.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StarlingDoveService.PutOrganizationConfigRule"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutOrganizationConfigRuleRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutOrganizationConfigRuleRequest": {
        "type": "object",
        "required": [
          "OrganizationConfigRuleName"
        ],
        "title": "PutOrganizationConfigRuleRequest",
        "properties": {
          "OrganizationConfigRuleName": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationConfigRuleName"
              },
              {
                "description": "The name that you assign to an organization Config rule."
              }
            ]
          },
          "OrganizationManagedRuleMetadata": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationManagedRuleMetadata"
              },
              {
                "description": "An <code>OrganizationManagedRuleMetadata</code> object. This object specifies organization managed rule metadata such as resource type and ID of Amazon Web Services resource along with the rule identifier. It also provides the frequency with which you want Config to run evaluations for the rule if the trigger type is periodic."
              }
            ]
          },
          "OrganizationCustomRuleMetadata": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationCustomRuleMetadata"
              },
              {
                "description": "An <code>OrganizationCustomRuleMetadata</code> object. This object specifies organization custom rule metadata such as resource type, resource ID of Amazon Web Services resource, Lambda function ARN, and organization trigger types that trigger Config to evaluate your Amazon Web Services resources against a rule. It also provides the frequency with which you want Config to run evaluations for the rule if the trigger type is periodic."
              }
            ]
          },
          "ExcludedAccounts": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludedAccounts"
              },
              {
                "description": "A comma-separated list of accounts that you want to exclude from an organization Config rule."
              }
            ]
          },
          "OrganizationCustomPolicyRuleMetadata": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationCustomPolicyRuleMetadata"
              },
              {
                "description": "An <code>OrganizationCustomPolicyRuleMetadata</code> object. This object specifies metadata for your organization's Config Custom Policy rule. The metadata includes the runtime system in use, which accounts have debug logging enabled, and other custom rule metadata, such as resource type, resource ID of Amazon Web Services resource, and organization trigger types that initiate Config to evaluate Amazon Web Services resources against a rule."
              }
            ]
          }
        }
      },
      "OrganizationConfigRuleName": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 64
      },
      "OrganizationManagedRuleMetadata": {
        "type": "object",
        "required": [
          "RuleIdentifier"
        ],
        "properties": {
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256Min0"
              },
              {
                "description": "The description that you provide for your organization Config rule."
              }
            ]
          },
          "RuleIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256"
              },
              {
                "description": "For organization config managed rules, a predefined identifier from a list. For example, <code>IAM_PASSWORD_POLICY</code> is a managed rule. To reference a managed rule, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html\">Using Config managed rules</a>."
              }
            ]
          },
          "InputParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit2048"
              },
              {
                "description": "A string, in JSON format, that is passed to your organization Config rule Lambda function."
              }
            ]
          },
          "MaximumExecutionFrequency": {
            "allOf": [
              {
                "$ref": "#/$defs/MaximumExecutionFrequency"
              },
              {
                "description": "<p>The maximum frequency with which Config runs evaluations for a rule. This is for an Config managed rule that is triggered at a periodic frequency.</p> <note> <p>By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the <code>MaximumExecutionFrequency</code> parameter.</p> </note>"
              }
            ]
          },
          "ResourceTypesScope": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceTypesScope"
              },
              {
                "description": "The type of the Amazon Web Services resource that was evaluated."
              }
            ]
          },
          "ResourceIdScope": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit768"
              },
              {
                "description": "The ID of the Amazon Web Services resource that was evaluated."
              }
            ]
          },
          "TagKeyScope": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit128"
              },
              {
                "description": "One part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values. "
              }
            ]
          },
          "TagValueScope": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256"
              },
              {
                "description": "The optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key)."
              }
            ]
          }
        },
        "description": " organization managed rule metadata such as resource type and ID of Amazon Web Services resource along with the rule identifier. It also provides the frequency with which you want Config to run evaluations for the rule if the trigger type is periodic."
      },
      "StringWithCharLimit256Min0": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "StringWithCharLimit256": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "StringWithCharLimit2048": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "MaximumExecutionFrequency": {
        "type": "string",
        "enum": [
          "One_Hour",
          "Three_Hours",
          "Six_Hours",
          "Twelve_Hours",
          "TwentyFour_Hours"
        ]
      },
      "ResourceTypesScope": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StringWithCharLimit256"
        },
        "minItems": 0,
        "maxItems": 100
      },
      "StringWithCharLimit768": {
        "type": "string",
        "minLength": 1,
        "maxLength": 768
      },
      "StringWithCharLimit128": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "OrganizationCustomRuleMetadata": {
        "type": "object",
        "required": [
          "LambdaFunctionArn",
          "OrganizationConfigRuleTriggerTypes"
        ],
        "properties": {
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256Min0"
              },
              {
                "description": "The description that you provide for your organization Config rule."
              }
            ]
          },
          "LambdaFunctionArn": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256"
              },
              {
                "description": "The lambda function ARN."
              }
            ]
          },
          "OrganizationConfigRuleTriggerTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationConfigRuleTriggerTypes"
              },
              {
                "description": "<p>The type of notification that triggers Config to run an evaluation for a rule. You can specify the following notification types:</p> <ul> <li> <p> <code>ConfigurationItemChangeNotification</code> - Triggers an evaluation when Config delivers a configuration item as a result of a resource change.</p> </li> <li> <p> <code>OversizedConfigurationItemChangeNotification</code> - Triggers an evaluation when Config delivers an oversized configuration item. Config may generate this notification type when a resource changes and the notification exceeds the maximum size allowed by Amazon SNS.</p> </li> <li> <p> <code>ScheduledNotification</code> - Triggers a periodic evaluation at the frequency specified for <code>MaximumExecutionFrequency</code>.</p> </li> </ul>"
              }
            ]
          },
          "InputParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit2048"
              },
              {
                "description": "A string, in JSON format, that is passed to your organization Config rule Lambda function."
              }
            ]
          },
          "MaximumExecutionFrequency": {
            "allOf": [
              {
                "$ref": "#/$defs/MaximumExecutionFrequency"
              },
              {
                "description": "<p>The maximum frequency with which Config runs evaluations for a rule. Your custom rule is triggered when Config delivers the configuration snapshot. For more information, see <a>ConfigSnapshotDeliveryProperties</a>.</p> <note> <p>By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the <code>MaximumExecutionFrequency</code> parameter.</p> </note>"
              }
            ]
          },
          "ResourceTypesScope": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceTypesScope"
              },
              {
                "description": "The type of the Amazon Web Services resource that was evaluated."
              }
            ]
          },
          "ResourceIdScope": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit768"
              },
              {
                "description": "The ID of the Amazon Web Services resource that was evaluated."
              }
            ]
          },
          "TagKeyScope": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit128"
              },
              {
                "description": "One part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values. "
              }
            ]
          },
          "TagValueScope": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256"
              },
              {
                "description": "The optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key). "
              }
            ]
          }
        },
        "description": " organization custom rule metadata such as resource type, resource ID of Amazon Web Services resource, Lambda function ARN, and organization trigger types that trigger Config to evaluate your Amazon Web Services resources against a rule. It also provides the frequency with which you want Config to run evaluations for the rule if the trigger type is periodic."
      },
      "OrganizationConfigRuleTriggerTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OrganizationConfigRuleTriggerType"
        }
      },
      "OrganizationConfigRuleTriggerType": {
        "type": "string",
        "enum": [
          "ConfigurationItemChangeNotification",
          "OversizedConfigurationItemChangeNotification",
          "ScheduledNotification"
        ]
      },
      "ExcludedAccounts": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccountId"
        },
        "minItems": 0,
        "maxItems": 1000
      },
      "AccountId": {
        "type": "string",
        "pattern": "\\d{12}"
      },
      "OrganizationCustomPolicyRuleMetadata": {
        "type": "object",
        "required": [
          "PolicyRuntime",
          "PolicyText"
        ],
        "properties": {
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256Min0"
              },
              {
                "description": "The description that you provide for your organization Config Custom Policy rule."
              }
            ]
          },
          "OrganizationConfigRuleTriggerTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationConfigRuleTriggerTypeNoSNs"
              },
              {
                "description": "<p>The type of notification that initiates Config to run an evaluation for a rule. For Config Custom Policy rules, Config supports change-initiated notification types:</p> <ul> <li> <p> <code>ConfigurationItemChangeNotification</code> - Initiates an evaluation when Config delivers a configuration item as a result of a resource change.</p> </li> <li> <p> <code>OversizedConfigurationItemChangeNotification</code> - Initiates an evaluation when Config delivers an oversized configuration item. Config may generate this notification type when a resource changes and the notification exceeds the maximum size allowed by Amazon SNS.</p> </li> </ul>"
              }
            ]
          },
          "InputParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit2048"
              },
              {
                "description": "A string, in JSON format, that is passed to your organization Config Custom Policy rule."
              }
            ]
          },
          "MaximumExecutionFrequency": {
            "allOf": [
              {
                "$ref": "#/$defs/MaximumExecutionFrequency"
              },
              {
                "description": "The maximum frequency with which Config runs evaluations for a rule. Your Config Custom Policy rule is triggered when Config delivers the configuration snapshot. For more information, see <a>ConfigSnapshotDeliveryProperties</a>."
              }
            ]
          },
          "ResourceTypesScope": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceTypesScope"
              },
              {
                "description": "The type of the Amazon Web Services resource that was evaluated."
              }
            ]
          },
          "ResourceIdScope": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit768"
              },
              {
                "description": "The ID of the Amazon Web Services resource that was evaluated."
              }
            ]
          },
          "TagKeyScope": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit128"
              },
              {
                "description": "One part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values."
              }
            ]
          },
          "TagValueScope": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256"
              },
              {
                "description": "The optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key)."
              }
            ]
          },
          "PolicyRuntime": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyRuntime"
              },
              {
                "description": "The runtime system for your organization Config Custom Policy rules. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the <a href=\"https://github.com/aws-cloudformation/cloudformation-guard\">Guard GitHub Repository</a>."
              }
            ]
          },
          "PolicyText": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyText"
              },
              {
                "description": "The policy definition containing the logic for your organization Config Custom Policy rule."
              }
            ]
          },
          "DebugLogDeliveryAccounts": {
            "allOf": [
              {
                "$ref": "#/$defs/DebugLogDeliveryAccounts"
              },
              {
                "description": "A list of accounts that you can enable debug logging for your organization Config Custom Policy rule. List is null when debug logging is enabled for all accounts."
              }
            ]
          }
        },
        "description": "An object that specifies metadata for your organization's Config Custom Policy rule. The metadata includes the runtime system in use, which accounts have debug logging enabled, and other custom rule metadata, such as resource type, resource ID of Amazon Web Services resource, and organization trigger types that initiate Config to evaluate Amazon Web Services resources against a rule."
      },
      "OrganizationConfigRuleTriggerTypeNoSNs": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OrganizationConfigRuleTriggerTypeNoSN"
        }
      },
      "OrganizationConfigRuleTriggerTypeNoSN": {
        "type": "string",
        "enum": [
          "ConfigurationItemChangeNotification",
          "OversizedConfigurationItemChangeNotification"
        ]
      },
      "PolicyRuntime": {
        "type": "string",
        "pattern": "guard\\-2\\.x\\.x",
        "minLength": 1,
        "maxLength": 64
      },
      "PolicyText": {
        "type": "string",
        "minLength": 0,
        "maxLength": 10000
      },
      "DebugLogDeliveryAccounts": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccountId"
        },
        "minItems": 0,
        "maxItems": 1000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://config.us-east-1.amazonaws.com/#X-Amz-Target=StarlingDoveService.PutOrganizationConfigRule"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**OrganizationConfigRuleArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
