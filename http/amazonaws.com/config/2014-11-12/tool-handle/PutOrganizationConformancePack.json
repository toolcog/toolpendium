{
  "name": "PutOrganizationConformancePack",
  "description": "<p>Deploys conformance packs across member accounts in an Amazon Web Services Organization. For information on how many organization conformance packs and how many Config rules you can have per account, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/configlimits.html\"> <b>Service Limits</b> </a> in the <i>Config Developer Guide</i>.</p> <p>Only a management account and a delegated administrator can call this API. When calling this API with a delegated administrator, you must ensure Organizations <code>ListDelegatedAdministrator</code> permissions are added. An organization can have up to 3 delegated administrators.</p> <p>This API enables organization service access for <code>config-multiaccountsetup.amazonaws.com</code> through the <code>EnableAWSServiceAccess</code> action and creates a service-linked role <code>AWSServiceRoleForConfigMultiAccountSetup</code> in the management or delegated administrator account of your organization. The service-linked role is created only when the role does not exist in the caller account. To use this API with delegated administrator, register a delegated administrator by calling Amazon Web Services Organization <code>register-delegate-admin</code> for <code>config-multiaccountsetup.amazonaws.com</code>.</p> <note> <p>Prerequisite: Ensure you call <code>EnableAllFeatures</code> API to enable all features in an organization.</p> <p>You must specify either the <code>TemplateS3Uri</code> or the <code>TemplateBody</code> parameter, but not both. If you provide both Config uses the <code>TemplateS3Uri</code> parameter and ignores the <code>TemplateBody</code> parameter.</p> <p>Config sets the state of a conformance pack to CREATE_IN_PROGRESS and UPDATE_IN_PROGRESS until the conformance pack is created or updated. You cannot update a conformance pack while it is in this state.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StarlingDoveService.PutOrganizationConformancePack"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutOrganizationConformancePackRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutOrganizationConformancePackRequest": {
        "type": "object",
        "required": [
          "OrganizationConformancePackName"
        ],
        "title": "PutOrganizationConformancePackRequest",
        "properties": {
          "OrganizationConformancePackName": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationConformancePackName"
              },
              {
                "description": "Name of the organization conformance pack you want to create."
              }
            ]
          },
          "TemplateS3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/TemplateS3Uri"
              },
              {
                "description": "<p>Location of file containing the template body. The uri must point to the conformance pack template (max size: 300 KB).</p> <note> <p>You must have access to read Amazon S3 bucket.</p> </note>"
              }
            ]
          },
          "TemplateBody": {
            "allOf": [
              {
                "$ref": "#/$defs/TemplateBody"
              },
              {
                "description": "A string containing full conformance pack template body. Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes."
              }
            ]
          },
          "DeliveryS3Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/DeliveryS3Bucket"
              },
              {
                "description": "<p>The name of the Amazon S3 bucket where Config stores conformance pack templates.</p> <note> <p>This field is optional. If used, it must be prefixed with <code>awsconfigconforms</code>.</p> </note>"
              }
            ]
          },
          "DeliveryS3KeyPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/DeliveryS3KeyPrefix"
              },
              {
                "description": "<p>The prefix for the Amazon S3 bucket.</p> <note> <p>This field is optional.</p> </note>"
              }
            ]
          },
          "ConformancePackInputParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ConformancePackInputParameters"
              },
              {
                "description": "A list of <code>ConformancePackInputParameter</code> objects."
              }
            ]
          },
          "ExcludedAccounts": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludedAccounts"
              },
              {
                "description": "A list of Amazon Web Services accounts to be excluded from an organization conformance pack while deploying a conformance pack."
              }
            ]
          }
        }
      },
      "OrganizationConformancePackName": {
        "type": "string",
        "pattern": "[a-zA-Z][-a-zA-Z0-9]*",
        "minLength": 1,
        "maxLength": 128
      },
      "TemplateS3Uri": {
        "type": "string",
        "pattern": "s3://.*",
        "minLength": 1,
        "maxLength": 1024
      },
      "TemplateBody": {
        "type": "string",
        "minLength": 1,
        "maxLength": 51200
      },
      "DeliveryS3Bucket": {
        "type": "string",
        "minLength": 0,
        "maxLength": 63
      },
      "DeliveryS3KeyPrefix": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "ConformancePackInputParameters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConformancePackInputParameter"
        },
        "minItems": 0,
        "maxItems": 60
      },
      "ConformancePackInputParameter": {
        "type": "object",
        "required": [
          "ParameterName",
          "ParameterValue"
        ],
        "properties": {
          "ParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "One part of a key-value pair."
              }
            ]
          },
          "ParameterValue": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterValue"
              },
              {
                "description": "Another part of the key-value pair. "
              }
            ]
          }
        },
        "description": "Input parameters in the form of key-value pairs for the conformance pack, both of which you define. Keys can have a maximum character length of 255 characters, and values can have a maximum length of 4096 characters."
      },
      "ParameterName": {
        "type": "string",
        "minLength": 0,
        "maxLength": 255
      },
      "ParameterValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 4096
      },
      "ExcludedAccounts": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccountId"
        },
        "minItems": 0,
        "maxItems": 1000
      },
      "AccountId": {
        "type": "string",
        "pattern": "\\d{12}"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://config.us-east-1.amazonaws.com/#X-Amz-Target=StarlingDoveService.PutOrganizationConformancePack"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**OrganizationConformancePackArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
