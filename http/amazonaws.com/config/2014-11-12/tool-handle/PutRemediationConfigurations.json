{
  "name": "PutRemediationConfigurations",
  "description": "<p>Adds or updates the remediation configuration with a specific Config rule with the selected target or action. The API creates the <code>RemediationConfiguration</code> object for the Config rule. The Config rule must already exist for you to add a remediation configuration. The target (SSM document) must exist and have permissions to use the target. </p> <note> <p>If you make backward incompatible changes to the SSM document, you must call this again to ensure the remediations can run.</p> <p>This API does not support adding remediation configurations for service-linked Config Rules such as Organization Config rules, the rules deployed by conformance packs, and rules deployed by Amazon Web Services Security Hub.</p> </note> <note> <p>For manual remediation configuration, you need to provide a value for <code>automationAssumeRole</code> or use a value in the <code>assumeRole</code>field to remediate your resources. The SSM automation document can use either as long as it maps to a valid parameter.</p> <p>However, for automatic remediation configuration, the only valid <code>assumeRole</code> field value is <code>AutomationAssumeRole</code> and you need to provide a value for <code>AutomationAssumeRole</code> to remediate your resources.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StarlingDoveService.PutRemediationConfigurations"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutRemediationConfigurationsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutRemediationConfigurationsRequest": {
        "type": "object",
        "required": [
          "RemediationConfigurations"
        ],
        "title": "PutRemediationConfigurationsRequest",
        "properties": {
          "RemediationConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/RemediationConfigurations"
              },
              {
                "description": "A list of remediation configuration objects."
              }
            ]
          }
        }
      },
      "RemediationConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RemediationConfiguration"
        },
        "minItems": 0,
        "maxItems": 25
      },
      "RemediationConfiguration": {
        "type": "object",
        "required": [
          "ConfigRuleName",
          "TargetType",
          "TargetId"
        ],
        "properties": {
          "ConfigRuleName": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigRuleName"
              },
              {
                "description": "The name of the Config rule."
              }
            ]
          },
          "TargetType": {
            "allOf": [
              {
                "$ref": "#/$defs/RemediationTargetType"
              },
              {
                "description": "The type of the target. Target executes remediation. For example, SSM document."
              }
            ]
          },
          "TargetId": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit256"
              },
              {
                "description": "Target ID is the name of the SSM document."
              }
            ]
          },
          "TargetVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>Version of the target. For example, version of the SSM document.</p> <note> <p>If you make backward incompatible changes to the SSM document, you must call PutRemediationConfiguration API again to ensure the remediations can run.</p> </note>"
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/RemediationParameters"
              },
              {
                "description": "An object of the RemediationParameterValue."
              }
            ]
          },
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The type of a resource. "
              }
            ]
          },
          "Automatic": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "The remediation is triggered automatically."
              }
            ]
          },
          "ExecutionControls": {
            "allOf": [
              {
                "$ref": "#/$defs/ExecutionControls"
              },
              {
                "description": "An ExecutionControls object."
              }
            ]
          },
          "MaximumAutomaticAttempts": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoRemediationAttempts"
              },
              {
                "description": "<p>The maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.</p> <p>For example, if you specify MaximumAutomaticAttempts as 5 with RetryAttemptSeconds as 50 seconds, Config will put a RemediationException on your behalf for the failing resource after the 5th failed attempt within 50 seconds.</p>"
              }
            ]
          },
          "RetryAttemptSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoRemediationAttemptSeconds"
              },
              {
                "description": "<p>Maximum time in seconds that Config runs auto-remediation. If you do not select a number, the default is 60 seconds. </p> <p>For example, if you specify RetryAttemptSeconds as 50 seconds and MaximumAutomaticAttempts as 5, Config will run auto-remediations 5 times within 50 seconds before throwing an exception.</p>"
              }
            ]
          },
          "Arn": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit1024"
              },
              {
                "description": "Amazon Resource Name (ARN) of remediation configuration."
              }
            ]
          },
          "CreatedByService": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithCharLimit1024"
              },
              {
                "description": "Name of the service that owns the service-linked rule, if applicable."
              }
            ]
          }
        },
        "description": "An object that represents the details about the remediation configuration that includes the remediation action, parameters, and data to execute the action."
      },
      "ConfigRuleName": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 128
      },
      "RemediationTargetType": {
        "type": "string",
        "enum": [
          "SSM_DOCUMENT"
        ]
      },
      "StringWithCharLimit256": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "String": {
        "type": "string"
      },
      "RemediationParameters": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 25,
        "additionalProperties": {
          "$ref": "#/$defs/RemediationParameterValue"
        }
      },
      "RemediationParameterValue": {
        "type": "object",
        "properties": {
          "ResourceValue": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceValue"
              },
              {
                "description": "The value is dynamic and changes at run-time."
              }
            ]
          },
          "StaticValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StaticValue"
              },
              {
                "description": "The value is static and does not change at run-time."
              }
            ]
          }
        },
        "description": "The value is either a dynamic (resource) value or a static value. You must select either a dynamic value or a static value."
      },
      "ResourceValue": {
        "type": "object",
        "required": [
          "Value"
        ],
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceValueType"
              },
              {
                "description": "The value is a resource ID."
              }
            ]
          }
        },
        "description": "The dynamic value of the resource."
      },
      "ResourceValueType": {
        "type": "string",
        "enum": [
          "RESOURCE_ID"
        ]
      },
      "StaticValue": {
        "type": "object",
        "required": [
          "Values"
        ],
        "properties": {
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/StaticParameterValues"
              },
              {
                "description": "A list of values. For example, the ARN of the assumed role. "
              }
            ]
          }
        },
        "description": "The static value of the resource."
      },
      "StaticParameterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StringWithCharLimit256"
        },
        "minItems": 0,
        "maxItems": 25
      },
      "Boolean": {
        "type": "boolean"
      },
      "ExecutionControls": {
        "type": "object",
        "properties": {
          "SsmControls": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmControls"
              },
              {
                "description": "A SsmControls object."
              }
            ]
          }
        },
        "description": "The controls that Config uses for executing remediations."
      },
      "SsmControls": {
        "type": "object",
        "properties": {
          "ConcurrentExecutionRatePercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/Percentage"
              },
              {
                "description": "The maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. You can specify a percentage, such as 10%. The default value is 10. "
              }
            ]
          },
          "ErrorPercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/Percentage"
              },
              {
                "description": "The percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. You can specify a percentage of errors, for example 10%. If you do not specifiy a percentage, the default is 50%. For example, if you set the ErrorPercentage to 40% for 10 non-compliant resources, then SSM stops running the automations when the fifth error is received. "
              }
            ]
          }
        },
        "description": "Amazon Web Services Systems Manager (SSM) specific remediation controls."
      },
      "Percentage": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "AutoRemediationAttempts": {
        "type": "integer",
        "minimum": 1,
        "maximum": 25
      },
      "AutoRemediationAttemptSeconds": {
        "type": "integer",
        "minimum": 1,
        "maximum": 2678000
      },
      "StringWithCharLimit1024": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://config.us-east-1.amazonaws.com/#X-Amz-Target=StarlingDoveService.PutRemediationConfigurations"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**FailedBatches**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
