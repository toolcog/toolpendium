{
  "name": "PutConfigurationRecorder",
  "description": "<p>Creates a new configuration recorder to record configuration changes for specified resource types.</p> <p>You can also use this action to change the <code>roleARN</code> or the <code>recordingGroup</code> of an existing recorder. For more information, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/stop-start-recorder.html\"> <b>Managing the Configuration Recorder</b> </a> in the <i>Config Developer Guide</i>.</p> <note> <p>You can specify only one configuration recorder for each Amazon Web Services Region for each account.</p> <p>If the configuration recorder does not have the <code>recordingGroup</code> field specified, the default is to record all supported resource types.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StarlingDoveService.PutConfigurationRecorder"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutConfigurationRecorderRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutConfigurationRecorderRequest": {
        "type": "object",
        "required": [
          "ConfigurationRecorder"
        ],
        "title": "PutConfigurationRecorderRequest",
        "properties": {
          "ConfigurationRecorder": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationRecorder"
              },
              {
                "description": "An object for the configuration recorder to record configuration changes for specified resource types."
              }
            ]
          }
        },
        "description": "The input for the <a>PutConfigurationRecorder</a> action."
      },
      "ConfigurationRecorder": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/RecorderName"
              },
              {
                "description": "<p>The name of the configuration recorder. Config automatically assigns the name of \"default\" when creating the configuration recorder.</p> <p>You cannot change the name of the configuration recorder after it has been created. To change the configuration recorder name, you must delete it and create a new configuration recorder with a new name. </p>"
              }
            ]
          },
          "roleARN": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>Amazon Resource Name (ARN) of the IAM role assumed by Config and used by the configuration recorder.</p> <note> <p>While the API model does not require this field, the server will reject a request without a defined <code>roleARN</code> for the configuration recorder.</p> </note> <note> <p> <b>Pre-existing Config role</b> </p> <p>If you have used an Amazon Web Services service that uses Config, such as Security Hub or Control Tower, and an Config role has already been created, make sure that the IAM role that you use when setting up Config keeps the same minimum permissions as the already created Config role. You must do this so that the other Amazon Web Services service continues to run as expected. </p> <p>For example, if Control Tower has an IAM role that allows Config to read Amazon Simple Storage Service (Amazon S3) objects, make sure that the same permissions are granted within the IAM role you use when setting up Config. Otherwise, it may interfere with how Control Tower operates. For more information about IAM roles for Config, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/security-iam.html\"> <b>Identity and Access Management for Config</b> </a> in the <i>Config Developer Guide</i>. </p> </note>"
              }
            ]
          },
          "recordingGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordingGroup"
              },
              {
                "description": "<p>Specifies which resource types Config records for configuration changes.</p> <note> <p> <b> High Number of Config Evaluations</b> </p> <p>You may notice increased activity in your account during your initial month recording with Config when compared to subsequent months. During the initial bootstrapping process, Config runs evaluations on all the resources in your account that you have selected for Config to record.</p> <p>If you are running ephemeral workloads, you may see increased activity from Config as it records configuration changes associated with creating and deleting these temporary resources. An <i>ephemeral workload</i> is a temporary use of computing resources that are loaded and run when needed. Examples include Amazon Elastic Compute Cloud (Amazon EC2) Spot Instances, Amazon EMR jobs, and Auto Scaling. If you want to avoid the increased activity from running ephemeral workloads, you can run these types of workloads in a separate account with Config turned off to avoid increased configuration recording and rule evaluations.</p> </note>"
              }
            ]
          }
        },
        "description": "Records configuration changes to specified resource types. For more information about the configuration recorder, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/stop-start-recorder.html\"> <b>Managing the Configuration Recorder</b> </a> in the <i>Config Developer Guide</i>."
      },
      "RecorderName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "String": {
        "type": "string"
      },
      "RecordingGroup": {
        "type": "object",
        "properties": {
          "allSupported": {
            "allOf": [
              {
                "$ref": "#/$defs/AllSupported"
              },
              {
                "description": "<p>Specifies whether Config records configuration changes for all supported regional resource types.</p> <p>If you set this field to <code>true</code>, when Config adds support for a new type of regional resource, Config starts recording resources of that type automatically.</p> <p>If you set this field to <code>true</code>, you cannot enumerate specific resource types to record in the <code>resourceTypes</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a>, or to exclude in the <code>resourceTypes</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html\">ExclusionByResourceTypes</a>.</p>"
              }
            ]
          },
          "includeGlobalResourceTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/IncludeGlobalResourceTypes"
              },
              {
                "description": "<p>Specifies whether Config records configuration changes for all supported global resources.</p> <p>Before you set this field to <code>true</code>, set the <code>allSupported</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a> to <code>true</code>. Optionally, you can set the <code>useOnly</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html\">RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>.</p> <p>If you set this field to <code>true</code>, when Config adds support for a new type of global resource in the Region where you set up the configuration recorder, Config starts recording resources of that type automatically.</p> <note> <p>If you set this field to <code>false</code> but list global resource types in the <code>resourceTypes</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a>, Config will still record configuration changes for those specified resource types <i>regardless</i> of if you set the <code>includeGlobalResourceTypes</code> field to false.</p> <p>If you do not want to record configuration changes to global resource types, make sure to not list them in the <code>resourceTypes</code> field in addition to setting the <code>includeGlobalResourceTypes</code> field to false.</p> </note>"
              }
            ]
          },
          "resourceTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceTypeList"
              },
              {
                "description": "<p>A comma-separated list that specifies which resource types Config records.</p> <p>Optionally, you can set the <code>useOnly</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html\">RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>.</p> <p>To record all configuration changes, set the <code>allSupported</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a> to <code>true</code>, and either omit this field or don't specify any resource types in this field. If you set the <code>allSupported</code> field to <code>false</code> and specify values for <code>resourceTypes</code>, when Config adds support for a new type of resource, it will not record resources of that type unless you manually add that type to your recording group.</p> <p>For a list of valid <code>resourceTypes</code> values, see the <b>Resource Type Value</b> column in <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources\">Supported Amazon Web Services resource Types</a> in the <i>Config developer guide</i>.</p> <note> <p> <b>Region Availability</b> </p> <p>Before specifying a resource type for Config to track, check <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/what-is-resource-config-coverage.html\">Resource Coverage by Region Availability</a> to see if the resource type is supported in the Amazon Web Services Region where you set up Config. If a resource type is supported by Config in at least one Region, you can enable the recording of that resource type in all Regions supported by Config, even if the specified resource type is not supported in the Amazon Web Services Region where you set up Config.</p> </note>"
              }
            ]
          },
          "exclusionByResourceTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/ExclusionByResourceTypes"
              },
              {
                "description": "<p>An object that specifies how Config excludes resource types from being recorded by the configuration recorder.</p> <p>To use this option, you must set the <code>useOnly</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html\">RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>.</p>"
              }
            ]
          },
          "recordingStrategy": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordingStrategy"
              },
              {
                "description": "<p>An object that specifies the recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set the <code>useOnly</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html\">RecordingStrategy</a> to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported regional resource types. You also must set the <code>allSupported</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a> to <code>true</code>. When Config adds support for a new type of regional resource, Config automatically starts recording resources of that type.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html\">RecordingStrategy</a> to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types you specify in the <code>resourceTypes</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a>.</p> </li> <li> <p>If you set the <code>useOnly</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html\">RecordingStrategy</a> to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types except the resource types that you specify as exemptions to exclude from being recorded in the <code>resourceTypes</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html\">ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html\">ExclusionByResourceTypes</a>.</p> </note> <note> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global resource types will still be automatically recorded in this option unless those resource types are specifically listed as exemptions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> </note>"
              }
            ]
          }
        },
        "description": "<p>Specifies which resource types Config records for configuration changes. In the recording group, you specify whether you want to record all supported resource types or to include or exclude specific types of resources.</p> <p>By default, Config records configuration changes for all supported types of <i>Regional resources</i> that Config discovers in the Amazon Web Services Region in which it is running. Regional resources are tied to a Region and can be used only in that Region. Examples of Regional resources are Amazon EC2 instances and Amazon EBS volumes.</p> <p>You can also have Config record supported types of <i>global resources</i>. Global resources are not tied to a specific Region and can be used in all Regions. The global resource types that Config supports include IAM users, groups, roles, and customer managed policies.</p> <important> <p>Global resource types onboarded to Config recording after February 2022 will be recorded only in the service's home Region for the commercial partition and Amazon Web Services GovCloud (US-West) for the Amazon Web Services GovCloud (US) partition. You can view the Configuration Items for these new global resource types only in their home Region and Amazon Web Services GovCloud (US-West).</p> </important> <p>If you don't want Config to record all resources, you can specify which types of resources Config records with the <code>resourceTypes</code> parameter.</p> <p>For a list of supported resource types, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources\">Supported Resource Types</a> in the <i>Config developer guide</i>.</p> <p>For more information and a table of the Home Regions for Global Resource Types Onboarded after February 2022, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/select-resources.html\">Selecting Which Resources Config Records</a> in the <i>Config developer guide</i>.</p>"
      },
      "AllSupported": {
        "type": "boolean"
      },
      "IncludeGlobalResourceTypes": {
        "type": "boolean"
      },
      "ResourceTypeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ResourceType"
        }
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "AWS::EC2::CustomerGateway",
          "AWS::EC2::EIP",
          "AWS::EC2::Host",
          "AWS::EC2::Instance",
          "AWS::EC2::InternetGateway",
          "AWS::EC2::NetworkAcl",
          "AWS::EC2::NetworkInterface",
          "AWS::EC2::RouteTable",
          "AWS::EC2::SecurityGroup",
          "AWS::EC2::Subnet",
          "AWS::CloudTrail::Trail",
          "AWS::EC2::Volume",
          "AWS::EC2::VPC",
          "AWS::EC2::VPNConnection",
          "AWS::EC2::VPNGateway",
          "AWS::EC2::RegisteredHAInstance",
          "AWS::EC2::NatGateway",
          "AWS::EC2::EgressOnlyInternetGateway",
          "AWS::EC2::VPCEndpoint",
          "AWS::EC2::VPCEndpointService",
          "AWS::EC2::FlowLog",
          "AWS::EC2::VPCPeeringConnection",
          "AWS::Elasticsearch::Domain",
          "AWS::IAM::Group",
          "AWS::IAM::Policy",
          "AWS::IAM::Role",
          "AWS::IAM::User",
          "AWS::ElasticLoadBalancingV2::LoadBalancer",
          "AWS::ACM::Certificate",
          "AWS::RDS::DBInstance",
          "AWS::RDS::DBSubnetGroup",
          "AWS::RDS::DBSecurityGroup",
          "AWS::RDS::DBSnapshot",
          "AWS::RDS::DBCluster",
          "AWS::RDS::DBClusterSnapshot",
          "AWS::RDS::EventSubscription",
          "AWS::S3::Bucket",
          "AWS::S3::AccountPublicAccessBlock",
          "AWS::Redshift::Cluster",
          "AWS::Redshift::ClusterSnapshot",
          "AWS::Redshift::ClusterParameterGroup",
          "AWS::Redshift::ClusterSecurityGroup",
          "AWS::Redshift::ClusterSubnetGroup",
          "AWS::Redshift::EventSubscription",
          "AWS::SSM::ManagedInstanceInventory",
          "AWS::CloudWatch::Alarm",
          "AWS::CloudFormation::Stack",
          "AWS::ElasticLoadBalancing::LoadBalancer",
          "AWS::AutoScaling::AutoScalingGroup",
          "AWS::AutoScaling::LaunchConfiguration",
          "AWS::AutoScaling::ScalingPolicy",
          "AWS::AutoScaling::ScheduledAction",
          "AWS::DynamoDB::Table",
          "AWS::CodeBuild::Project",
          "AWS::WAF::RateBasedRule",
          "AWS::WAF::Rule",
          "AWS::WAF::RuleGroup",
          "AWS::WAF::WebACL",
          "AWS::WAFRegional::RateBasedRule",
          "AWS::WAFRegional::Rule",
          "AWS::WAFRegional::RuleGroup",
          "AWS::WAFRegional::WebACL",
          "AWS::CloudFront::Distribution",
          "AWS::CloudFront::StreamingDistribution",
          "AWS::Lambda::Function",
          "AWS::NetworkFirewall::Firewall",
          "AWS::NetworkFirewall::FirewallPolicy",
          "AWS::NetworkFirewall::RuleGroup",
          "AWS::ElasticBeanstalk::Application",
          "AWS::ElasticBeanstalk::ApplicationVersion",
          "AWS::ElasticBeanstalk::Environment",
          "AWS::WAFv2::WebACL",
          "AWS::WAFv2::RuleGroup",
          "AWS::WAFv2::IPSet",
          "AWS::WAFv2::RegexPatternSet",
          "AWS::WAFv2::ManagedRuleSet",
          "AWS::XRay::EncryptionConfig",
          "AWS::SSM::AssociationCompliance",
          "AWS::SSM::PatchCompliance",
          "AWS::Shield::Protection",
          "AWS::ShieldRegional::Protection",
          "AWS::Config::ConformancePackCompliance",
          "AWS::Config::ResourceCompliance",
          "AWS::ApiGateway::Stage",
          "AWS::ApiGateway::RestApi",
          "AWS::ApiGatewayV2::Stage",
          "AWS::ApiGatewayV2::Api",
          "AWS::CodePipeline::Pipeline",
          "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
          "AWS::ServiceCatalog::CloudFormationProduct",
          "AWS::ServiceCatalog::Portfolio",
          "AWS::SQS::Queue",
          "AWS::KMS::Key",
          "AWS::QLDB::Ledger",
          "AWS::SecretsManager::Secret",
          "AWS::SNS::Topic",
          "AWS::SSM::FileData",
          "AWS::Backup::BackupPlan",
          "AWS::Backup::BackupSelection",
          "AWS::Backup::BackupVault",
          "AWS::Backup::RecoveryPoint",
          "AWS::ECR::Repository",
          "AWS::ECS::Cluster",
          "AWS::ECS::Service",
          "AWS::ECS::TaskDefinition",
          "AWS::EFS::AccessPoint",
          "AWS::EFS::FileSystem",
          "AWS::EKS::Cluster",
          "AWS::OpenSearch::Domain",
          "AWS::EC2::TransitGateway",
          "AWS::Kinesis::Stream",
          "AWS::Kinesis::StreamConsumer",
          "AWS::CodeDeploy::Application",
          "AWS::CodeDeploy::DeploymentConfig",
          "AWS::CodeDeploy::DeploymentGroup",
          "AWS::EC2::LaunchTemplate",
          "AWS::ECR::PublicRepository",
          "AWS::GuardDuty::Detector",
          "AWS::EMR::SecurityConfiguration",
          "AWS::SageMaker::CodeRepository",
          "AWS::Route53Resolver::ResolverEndpoint",
          "AWS::Route53Resolver::ResolverRule",
          "AWS::Route53Resolver::ResolverRuleAssociation",
          "AWS::DMS::ReplicationSubnetGroup",
          "AWS::DMS::EventSubscription",
          "AWS::MSK::Cluster",
          "AWS::StepFunctions::Activity",
          "AWS::WorkSpaces::Workspace",
          "AWS::WorkSpaces::ConnectionAlias",
          "AWS::SageMaker::Model",
          "AWS::ElasticLoadBalancingV2::Listener",
          "AWS::StepFunctions::StateMachine",
          "AWS::Batch::JobQueue",
          "AWS::Batch::ComputeEnvironment",
          "AWS::AccessAnalyzer::Analyzer",
          "AWS::Athena::WorkGroup",
          "AWS::Athena::DataCatalog",
          "AWS::Detective::Graph",
          "AWS::GlobalAccelerator::Accelerator",
          "AWS::GlobalAccelerator::EndpointGroup",
          "AWS::GlobalAccelerator::Listener",
          "AWS::EC2::TransitGatewayAttachment",
          "AWS::EC2::TransitGatewayRouteTable",
          "AWS::DMS::Certificate",
          "AWS::AppConfig::Application",
          "AWS::AppSync::GraphQLApi",
          "AWS::DataSync::LocationSMB",
          "AWS::DataSync::LocationFSxLustre",
          "AWS::DataSync::LocationS3",
          "AWS::DataSync::LocationEFS",
          "AWS::DataSync::Task",
          "AWS::DataSync::LocationNFS",
          "AWS::EC2::NetworkInsightsAccessScopeAnalysis",
          "AWS::EKS::FargateProfile",
          "AWS::Glue::Job",
          "AWS::GuardDuty::ThreatIntelSet",
          "AWS::GuardDuty::IPSet",
          "AWS::SageMaker::Workteam",
          "AWS::SageMaker::NotebookInstanceLifecycleConfig",
          "AWS::ServiceDiscovery::Service",
          "AWS::ServiceDiscovery::PublicDnsNamespace",
          "AWS::SES::ContactList",
          "AWS::SES::ConfigurationSet",
          "AWS::Route53::HostedZone",
          "AWS::IoTEvents::Input",
          "AWS::IoTEvents::DetectorModel",
          "AWS::IoTEvents::AlarmModel",
          "AWS::ServiceDiscovery::HttpNamespace",
          "AWS::Events::EventBus",
          "AWS::ImageBuilder::ContainerRecipe",
          "AWS::ImageBuilder::DistributionConfiguration",
          "AWS::ImageBuilder::InfrastructureConfiguration",
          "AWS::DataSync::LocationObjectStorage",
          "AWS::DataSync::LocationHDFS",
          "AWS::Glue::Classifier",
          "AWS::Route53RecoveryReadiness::Cell",
          "AWS::Route53RecoveryReadiness::ReadinessCheck",
          "AWS::ECR::RegistryPolicy",
          "AWS::Backup::ReportPlan",
          "AWS::Lightsail::Certificate",
          "AWS::RUM::AppMonitor",
          "AWS::Events::Endpoint",
          "AWS::SES::ReceiptRuleSet",
          "AWS::Events::Archive",
          "AWS::Events::ApiDestination",
          "AWS::Lightsail::Disk",
          "AWS::FIS::ExperimentTemplate",
          "AWS::DataSync::LocationFSxWindows",
          "AWS::SES::ReceiptFilter",
          "AWS::GuardDuty::Filter",
          "AWS::SES::Template",
          "AWS::AmazonMQ::Broker",
          "AWS::AppConfig::Environment",
          "AWS::AppConfig::ConfigurationProfile",
          "AWS::Cloud9::EnvironmentEC2",
          "AWS::EventSchemas::Registry",
          "AWS::EventSchemas::RegistryPolicy",
          "AWS::EventSchemas::Discoverer",
          "AWS::FraudDetector::Label",
          "AWS::FraudDetector::EntityType",
          "AWS::FraudDetector::Variable",
          "AWS::FraudDetector::Outcome",
          "AWS::IoT::Authorizer",
          "AWS::IoT::SecurityProfile",
          "AWS::IoT::RoleAlias",
          "AWS::IoT::Dimension",
          "AWS::IoTAnalytics::Datastore",
          "AWS::Lightsail::Bucket",
          "AWS::Lightsail::StaticIp",
          "AWS::MediaPackage::PackagingGroup",
          "AWS::Route53RecoveryReadiness::RecoveryGroup",
          "AWS::ResilienceHub::ResiliencyPolicy",
          "AWS::Transfer::Workflow",
          "AWS::EKS::IdentityProviderConfig",
          "AWS::EKS::Addon",
          "AWS::Glue::MLTransform",
          "AWS::IoT::Policy",
          "AWS::IoT::MitigationAction",
          "AWS::IoTTwinMaker::Workspace",
          "AWS::IoTTwinMaker::Entity",
          "AWS::IoTAnalytics::Dataset",
          "AWS::IoTAnalytics::Pipeline",
          "AWS::IoTAnalytics::Channel",
          "AWS::IoTSiteWise::Dashboard",
          "AWS::IoTSiteWise::Project",
          "AWS::IoTSiteWise::Portal",
          "AWS::IoTSiteWise::AssetModel",
          "AWS::IVS::Channel",
          "AWS::IVS::RecordingConfiguration",
          "AWS::IVS::PlaybackKeyPair",
          "AWS::KinesisAnalyticsV2::Application",
          "AWS::RDS::GlobalCluster",
          "AWS::S3::MultiRegionAccessPoint",
          "AWS::DeviceFarm::TestGridProject",
          "AWS::Budgets::BudgetsAction",
          "AWS::Lex::Bot",
          "AWS::CodeGuruReviewer::RepositoryAssociation",
          "AWS::IoT::CustomMetric",
          "AWS::Route53Resolver::FirewallDomainList",
          "AWS::RoboMaker::RobotApplicationVersion",
          "AWS::EC2::TrafficMirrorSession",
          "AWS::IoTSiteWise::Gateway",
          "AWS::Lex::BotAlias",
          "AWS::LookoutMetrics::Alert",
          "AWS::IoT::AccountAuditConfiguration",
          "AWS::EC2::TrafficMirrorTarget",
          "AWS::S3::StorageLens",
          "AWS::IoT::ScheduledAudit",
          "AWS::Events::Connection",
          "AWS::EventSchemas::Schema",
          "AWS::MediaPackage::PackagingConfiguration",
          "AWS::KinesisVideo::SignalingChannel",
          "AWS::AppStream::DirectoryConfig",
          "AWS::LookoutVision::Project",
          "AWS::Route53RecoveryControl::Cluster",
          "AWS::Route53RecoveryControl::SafetyRule",
          "AWS::Route53RecoveryControl::ControlPanel",
          "AWS::Route53RecoveryControl::RoutingControl",
          "AWS::Route53RecoveryReadiness::ResourceSet",
          "AWS::RoboMaker::SimulationApplication",
          "AWS::RoboMaker::RobotApplication",
          "AWS::HealthLake::FHIRDatastore",
          "AWS::Pinpoint::Segment",
          "AWS::Pinpoint::ApplicationSettings",
          "AWS::Events::Rule",
          "AWS::EC2::DHCPOptions",
          "AWS::EC2::NetworkInsightsPath",
          "AWS::EC2::TrafficMirrorFilter",
          "AWS::EC2::IPAM",
          "AWS::IoTTwinMaker::Scene",
          "AWS::NetworkManager::TransitGatewayRegistration",
          "AWS::CustomerProfiles::Domain",
          "AWS::AutoScaling::WarmPool",
          "AWS::Connect::PhoneNumber",
          "AWS::AppConfig::DeploymentStrategy",
          "AWS::AppFlow::Flow",
          "AWS::AuditManager::Assessment",
          "AWS::CloudWatch::MetricStream",
          "AWS::DeviceFarm::InstanceProfile",
          "AWS::DeviceFarm::Project",
          "AWS::EC2::EC2Fleet",
          "AWS::EC2::SubnetRouteTableAssociation",
          "AWS::ECR::PullThroughCacheRule",
          "AWS::GroundStation::Config",
          "AWS::ImageBuilder::ImagePipeline",
          "AWS::IoT::FleetMetric",
          "AWS::IoTWireless::ServiceProfile",
          "AWS::NetworkManager::Device",
          "AWS::NetworkManager::GlobalNetwork",
          "AWS::NetworkManager::Link",
          "AWS::NetworkManager::Site",
          "AWS::Panorama::Package",
          "AWS::Pinpoint::App",
          "AWS::Redshift::ScheduledAction",
          "AWS::Route53Resolver::FirewallRuleGroupAssociation",
          "AWS::SageMaker::AppImageConfig",
          "AWS::SageMaker::Image",
          "AWS::ECS::TaskSet",
          "AWS::Cassandra::Keyspace",
          "AWS::Signer::SigningProfile",
          "AWS::Amplify::App",
          "AWS::AppMesh::VirtualNode",
          "AWS::AppMesh::VirtualService",
          "AWS::AppRunner::VpcConnector",
          "AWS::AppStream::Application",
          "AWS::CodeArtifact::Repository",
          "AWS::EC2::PrefixList",
          "AWS::EC2::SpotFleet",
          "AWS::Evidently::Project",
          "AWS::Forecast::Dataset",
          "AWS::IAM::SAMLProvider",
          "AWS::IAM::ServerCertificate",
          "AWS::Pinpoint::Campaign",
          "AWS::Pinpoint::InAppTemplate",
          "AWS::SageMaker::Domain",
          "AWS::Transfer::Agreement",
          "AWS::Transfer::Connector",
          "AWS::KinesisFirehose::DeliveryStream"
        ]
      },
      "ExclusionByResourceTypes": {
        "type": "object",
        "properties": {
          "resourceTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceTypeList"
              },
              {
                "description": "A comma-separated list of resource types to exclude from recording by the configuration recorder."
              }
            ]
          }
        },
        "description": "Specifies whether the configuration recorder excludes resource types from being recorded. Use the <code>resourceTypes</code> field to enter a comma-separated list of resource types to exclude as exemptions."
      },
      "RecordingStrategy": {
        "type": "object",
        "properties": {
          "useOnly": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordingStrategyType"
              },
              {
                "description": "<p>The recording strategy for the configuration recorder.</p> <ul> <li> <p>If you set this option to <code>ALL_SUPPORTED_RESOURCE_TYPES</code>, Config records configuration changes for all supported regional resource types. You also must set the <code>allSupported</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a> to <code>true</code>.</p> <p>When Config adds support for a new type of regional resource, Config automatically starts recording resources of that type. For a list of supported resource types, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources\">Supported Resource Types</a> in the <i>Config developer guide</i>.</p> </li> <li> <p>If you set this option to <code>INCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for only the resource types that you specify in the <code>resourceTypes</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a>.</p> </li> <li> <p>If you set this option to <code>EXCLUSION_BY_RESOURCE_TYPES</code>, Config records configuration changes for all supported resource types, except the resource types that you specify as exemptions to exclude from being recorded in the <code>resourceTypes</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html\">ExclusionByResourceTypes</a>.</p> </li> </ul> <note> <p>The <code>recordingStrategy</code> field is optional when you set the <code>allSupported</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a> to <code>true</code>.</p> <p>The <code>recordingStrategy</code> field is optional when you list resource types in the <code>resourceTypes</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingGroup.html\">RecordingGroup</a>.</p> <p>The <code>recordingStrategy</code> field is required if you list resource types to exclude from recording in the <code>resourceTypes</code> field of <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_ExclusionByResourceTypes.html\">ExclusionByResourceTypes</a>.</p> </note> <note> <p>If you choose <code>EXCLUSION_BY_RESOURCE_TYPES</code> for the recording strategy, the <code>exclusionByResourceTypes</code> field will override other properties in the request.</p> <p>For example, even if you set <code>includeGlobalResourceTypes</code> to false, global resource types will still be automatically recorded in this option unless those resource types are specifically listed as exemptions in the <code>resourceTypes</code> field of <code>exclusionByResourceTypes</code>.</p> <p>By default, if you choose the <code>EXCLUSION_BY_RESOURCE_TYPES</code> recording strategy, when Config adds support for a new resource type in the Region where you set up the configuration recorder, including global resource types, Config starts recording resources of that type automatically.</p> </note>"
              }
            ]
          }
        },
        "description": "Specifies the recording strategy of the configuration recorder."
      },
      "RecordingStrategyType": {
        "type": "string",
        "enum": [
          "ALL_SUPPORTED_RESOURCE_TYPES",
          "INCLUSION_BY_RESOURCE_TYPES",
          "EXCLUSION_BY_RESOURCE_TYPES"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://config.us-east-1.amazonaws.com/#X-Amz-Target=StarlingDoveService.PutConfigurationRecorder"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
