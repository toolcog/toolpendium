{
  "name": "ListResourceEvaluations",
  "description": "Returns a list of proactive resource evaluations.",
  "parameters": {
    "type": "object",
    "properties": {
      "Limit": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StarlingDoveService.ListResourceEvaluations"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListResourceEvaluationsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListResourceEvaluationsRequest": {
        "type": "object",
        "title": "ListResourceEvaluationsRequest",
        "properties": {
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceEvaluationFilters"
              },
              {
                "description": "Returns a <code>ResourceEvaluationFilters</code> object."
              }
            ]
          },
          "Limit": {
            "allOf": [
              {
                "$ref": "#/$defs/ListResourceEvaluationsPageItemLimit"
              },
              {
                "description": "The maximum number of evaluations returned on each page. The default is 10. You cannot specify a number greater than 100. If you specify 0, Config uses the default."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response."
              }
            ]
          }
        }
      },
      "ResourceEvaluationFilters": {
        "type": "object",
        "properties": {
          "EvaluationMode": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationMode"
              },
              {
                "description": "Filters all resource evaluations results based on an evaluation mode. the valid value for this API is <code>Proactive</code>."
              }
            ]
          },
          "TimeWindow": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeWindow"
              },
              {
                "description": "Returns a <code>TimeWindow</code> object."
              }
            ]
          },
          "EvaluationContextIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationContextIdentifier"
              },
              {
                "description": "Filters evaluations for a given infrastructure deployment. For example: CFN Stack."
              }
            ]
          }
        },
        "description": "Returns details of a resource evaluation based on the selected filter."
      },
      "EvaluationMode": {
        "type": "string",
        "enum": [
          "DETECTIVE",
          "PROACTIVE"
        ]
      },
      "TimeWindow": {
        "type": "object",
        "properties": {
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Date"
              },
              {
                "description": "The start time of an execution."
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Date"
              },
              {
                "description": "The end time of an execution. The end time must be after the start date."
              }
            ]
          }
        },
        "description": "Filters evaluation results based on start and end times."
      },
      "Date": {
        "type": "string",
        "format": "date-time"
      },
      "EvaluationContextIdentifier": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "ListResourceEvaluationsPageItemLimit": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100
      },
      "String": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://config.us-east-1.amazonaws.com/#X-Amz-Target=StarlingDoveService.ListResourceEvaluations{?Limit,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ResourceEvaluations**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
