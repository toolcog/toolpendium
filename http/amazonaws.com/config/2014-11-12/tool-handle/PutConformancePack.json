{
  "name": "PutConformancePack",
  "description": "<p>Creates or updates a conformance pack. A conformance pack is a collection of Config rules that can be easily deployed in an account and a region and across an organization. For information on how many conformance packs you can have per account, see <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/configlimits.html\"> <b>Service Limits</b> </a> in the <i>Config Developer Guide</i>.</p> <p>This API creates a service-linked role <code>AWSServiceRoleForConfigConforms</code> in your account. The service-linked role is created only when the role does not exist in your account. </p> <note> <p>You must specify only one of the follow parameters: <code>TemplateS3Uri</code>, <code>TemplateBody</code> or <code>TemplateSSMDocumentDetails</code>.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StarlingDoveService.PutConformancePack"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutConformancePackRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutConformancePackRequest": {
        "type": "object",
        "required": [
          "ConformancePackName"
        ],
        "title": "PutConformancePackRequest",
        "properties": {
          "ConformancePackName": {
            "allOf": [
              {
                "$ref": "#/$defs/ConformancePackName"
              },
              {
                "description": "The unique name of the conformance pack you want to deploy."
              }
            ]
          },
          "TemplateS3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/TemplateS3Uri"
              },
              {
                "description": "<p>The location of the file containing the template body (<code>s3://bucketname/prefix</code>). The uri must point to a conformance pack template (max size: 300 KB) that is located in an Amazon S3 bucket in the same Region as the conformance pack. </p> <note> <p>You must have access to read Amazon S3 bucket.</p> </note>"
              }
            ]
          },
          "TemplateBody": {
            "allOf": [
              {
                "$ref": "#/$defs/TemplateBody"
              },
              {
                "description": "<p>A string containing the full conformance pack template body. The structure containing the template body has a minimum length of 1 byte and a maximum length of 51,200 bytes.</p> <note> <p>You can use a YAML template with two resource types: Config rule (<code>AWS::Config::ConfigRule</code>) and remediation action (<code>AWS::Config::RemediationConfiguration</code>).</p> </note>"
              }
            ]
          },
          "DeliveryS3Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/DeliveryS3Bucket"
              },
              {
                "description": "<p>The name of the Amazon S3 bucket where Config stores conformance pack templates.</p> <note> <p>This field is optional.</p> </note>"
              }
            ]
          },
          "DeliveryS3KeyPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/DeliveryS3KeyPrefix"
              },
              {
                "description": "<p>The prefix for the Amazon S3 bucket. </p> <note> <p>This field is optional.</p> </note>"
              }
            ]
          },
          "ConformancePackInputParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ConformancePackInputParameters"
              },
              {
                "description": "A list of <code>ConformancePackInputParameter</code> objects."
              }
            ]
          },
          "TemplateSSMDocumentDetails": {
            "allOf": [
              {
                "$ref": "#/$defs/TemplateSSMDocumentDetails"
              },
              {
                "description": "An object of type <code>TemplateSSMDocumentDetails</code>, which contains the name or the Amazon Resource Name (ARN) of the Amazon Web Services Systems Manager document (SSM document) and the version of the SSM document that is used to create a conformance pack."
              }
            ]
          }
        }
      },
      "ConformancePackName": {
        "type": "string",
        "pattern": "[a-zA-Z][-a-zA-Z0-9]*",
        "minLength": 1,
        "maxLength": 256
      },
      "TemplateS3Uri": {
        "type": "string",
        "pattern": "s3://.*",
        "minLength": 1,
        "maxLength": 1024
      },
      "TemplateBody": {
        "type": "string",
        "minLength": 1,
        "maxLength": 51200
      },
      "DeliveryS3Bucket": {
        "type": "string",
        "minLength": 0,
        "maxLength": 63
      },
      "DeliveryS3KeyPrefix": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "ConformancePackInputParameters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConformancePackInputParameter"
        },
        "minItems": 0,
        "maxItems": 60
      },
      "ConformancePackInputParameter": {
        "type": "object",
        "required": [
          "ParameterName",
          "ParameterValue"
        ],
        "properties": {
          "ParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "One part of a key-value pair."
              }
            ]
          },
          "ParameterValue": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterValue"
              },
              {
                "description": "Another part of the key-value pair. "
              }
            ]
          }
        },
        "description": "Input parameters in the form of key-value pairs for the conformance pack, both of which you define. Keys can have a maximum character length of 255 characters, and values can have a maximum length of 4096 characters."
      },
      "ParameterName": {
        "type": "string",
        "minLength": 0,
        "maxLength": 255
      },
      "ParameterValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 4096
      },
      "TemplateSSMDocumentDetails": {
        "type": "object",
        "required": [
          "DocumentName"
        ],
        "properties": {
          "DocumentName": {
            "allOf": [
              {
                "$ref": "#/$defs/SSMDocumentName"
              },
              {
                "description": "The name or Amazon Resource Name (ARN) of the SSM document to use to create a conformance pack. If you use the document name, Config checks only your account and Amazon Web Services Region for the SSM document. If you want to use an SSM document from another Region or account, you must provide the ARN."
              }
            ]
          },
          "DocumentVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/SSMDocumentVersion"
              },
              {
                "description": "<p>The version of the SSM document to use to create a conformance pack. By default, Config uses the latest version.</p> <note> <p>This field is optional.</p> </note>"
              }
            ]
          }
        },
        "description": "<p>This API allows you to create a conformance pack template with an Amazon Web Services Systems Manager document (SSM document). To deploy a conformance pack using an SSM document, first create an SSM document with conformance pack content, and then provide the <code>DocumentName</code> in the <a href=\"https://docs.aws.amazon.com/config/latest/APIReference/API_PutConformancePack.html\">PutConformancePack API</a>. You can also provide the <code>DocumentVersion</code>.</p> <p>The <code>TemplateSSMDocumentDetails</code> object contains the name of the SSM document and the version of the SSM document.</p>"
      },
      "SSMDocumentName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,200}$"
      },
      "SSMDocumentVersion": {
        "type": "string",
        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://config.us-east-1.amazonaws.com/#X-Amz-Target=StarlingDoveService.PutConformancePack"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ConformancePackArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
