{
  "name": "GetOrganizationConformancePackDetailedStatus",
  "description": "Returns detailed status for each member account within an organization for a given organization conformance pack.",
  "parameters": {
    "type": "object",
    "properties": {
      "Limit": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StarlingDoveService.GetOrganizationConformancePackDetailedStatus"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetOrganizationConformancePackDetailedStatusRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetOrganizationConformancePackDetailedStatusRequest": {
        "type": "object",
        "required": [
          "OrganizationConformancePackName"
        ],
        "title": "GetOrganizationConformancePackDetailedStatusRequest",
        "properties": {
          "OrganizationConformancePackName": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationConformancePackName"
              },
              {
                "description": "The name of organization conformance pack for which you want status details for member accounts."
              }
            ]
          },
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationResourceDetailedStatusFilters"
              },
              {
                "description": "An <code>OrganizationResourceDetailedStatusFilters</code> object."
              }
            ]
          },
          "Limit": {
            "allOf": [
              {
                "$ref": "#/$defs/CosmosPageLimit"
              },
              {
                "description": "The maximum number of <code>OrganizationConformancePackDetailedStatuses</code> returned on each page. If you do not specify a number, Config uses the default. The default is 100. "
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The nextToken string returned on a previous page that you use to get the next page of results in a paginated response. "
              }
            ]
          }
        }
      },
      "OrganizationConformancePackName": {
        "type": "string",
        "pattern": "[a-zA-Z][-a-zA-Z0-9]*",
        "minLength": 1,
        "maxLength": 128
      },
      "OrganizationResourceDetailedStatusFilters": {
        "type": "object",
        "properties": {
          "AccountId": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountId"
              },
              {
                "description": "The 12-digit account ID of the member account within an organization."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationResourceDetailedStatus"
              },
              {
                "description": "<p>Indicates deployment status for conformance pack in a member account. When management account calls <code>PutOrganizationConformancePack</code> action for the first time, conformance pack status is created in the member account. When management account calls <code>PutOrganizationConformancePack</code> action for the second time, conformance pack status is updated in the member account. Conformance pack status is deleted when the management account deletes <code>OrganizationConformancePack</code> and disables service access for <code>config-multiaccountsetup.amazonaws.com</code>. </p> <p> Config sets the state of the conformance pack to:</p> <ul> <li> <p> <code>CREATE_SUCCESSFUL</code> when conformance pack has been created in the member account. </p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code> when conformance pack is being created in the member account.</p> </li> <li> <p> <code>CREATE_FAILED</code> when conformance pack creation has failed in the member account.</p> </li> <li> <p> <code>DELETE_FAILED</code> when conformance pack deletion has failed in the member account.</p> </li> <li> <p> <code>DELETE_IN_PROGRESS</code> when conformance pack is being deleted in the member account.</p> </li> <li> <p> <code>DELETE_SUCCESSFUL</code> when conformance pack has been deleted in the member account. </p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> when conformance pack has been updated in the member account.</p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> when conformance pack is being updated in the member account.</p> </li> <li> <p> <code>UPDATE_FAILED</code> when conformance pack deletion has failed in the member account.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Status filter object to filter results based on specific member account ID or status type for an organization conformance pack."
      },
      "AccountId": {
        "type": "string",
        "pattern": "\\d{12}"
      },
      "OrganizationResourceDetailedStatus": {
        "type": "string",
        "enum": [
          "CREATE_SUCCESSFUL",
          "CREATE_IN_PROGRESS",
          "CREATE_FAILED",
          "DELETE_SUCCESSFUL",
          "DELETE_FAILED",
          "DELETE_IN_PROGRESS",
          "UPDATE_SUCCESSFUL",
          "UPDATE_IN_PROGRESS",
          "UPDATE_FAILED"
        ]
      },
      "CosmosPageLimit": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100
      },
      "String": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://config.us-east-1.amazonaws.com/#X-Amz-Target=StarlingDoveService.GetOrganizationConformancePackDetailedStatus{?Limit,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**OrganizationConformancePackDetailedStatuses**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
