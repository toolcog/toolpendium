{
  "name": "ListTransactions",
  "description": "Lists all of the transactions on a given wallet address or to a specific contract.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "address",
          "network"
        ],
        "properties": {
          "address": {
            "description": "The address (either a contract or wallet), whose transactions are being requested.",
            "type": "string",
            "pattern": "[-A-Za-z0-9]{13,74}"
          },
          "network": {
            "description": "The blockchain network where the transactions occurred.",
            "type": "string",
            "enum": [
              "ETHEREUM_MAINNET",
              "BITCOIN_MAINNET"
            ]
          },
          "fromBlockchainInstant": {
            "description": "The container for time.",
            "type": "object",
            "properties": {
              "time": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Timestamp"
                  },
                  {
                    "description": "<p>The container of the <code>Timestamp</code> of the blockchain instant.</p> <note> <p>This <code>timestamp</code> will only be recorded up to the second.</p> </note>"
                  }
                ]
              }
            }
          },
          "toBlockchainInstant": {
            "description": "The container for time.",
            "type": "object",
            "properties": {
              "time": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Timestamp"
                  },
                  {
                    "description": "<p>The container of the <code>Timestamp</code> of the blockchain instant.</p> <note> <p>This <code>timestamp</code> will only be recorded up to the second.</p> </note>"
                  }
                ]
              }
            }
          },
          "sort": {
            "description": "The container for determining how the list transaction result will be sorted.",
            "type": "object",
            "properties": {
              "sortBy": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ListTransactionsSortBy"
                  },
                  {
                    "description": "Defaults to the value <code>TRANSACTION_TIMESTAMP</code>."
                  }
                ]
              },
              "sortOrder": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SortOrder"
                  },
                  {
                    "description": "The container for the <i>sort order</i> for <code>ListTransactions</code>. The <code>SortOrder</code> field only accepts the values <code>ASCENDING</code> and <code>DESCENDING</code>. Not providing <code>SortOrder</code> will default to <code>ASCENDING</code>."
                  }
                ]
              }
            }
          },
          "nextToken": {
            "description": "The pagination token that indicates the next set of results to retrieve.",
            "type": "string",
            "minLength": 0,
            "maxLength": 131070
          },
          "maxResults": {
            "description": "<p>The maximum number of transactions to list.</p> <note> <p>Even if additional results can be retrieved, the request can return less results than <code>maxResults</code> or an empty array of results.</p> <p>To retrieve the next set of results, make another request with the returned <code>nextToken</code> value. The value of <code>nextToken</code> is <code>null</code> when there are no more results to return</p> </note>",
            "type": "integer",
            "minimum": 1,
            "maximum": 250
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "ListTransactionsSortBy": {
        "type": "string",
        "enum": [
          "TRANSACTION_TIMESTAMP"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://managedblockchain-query.us-east-1.amazonaws.com/list-transactions{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**transactions**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
