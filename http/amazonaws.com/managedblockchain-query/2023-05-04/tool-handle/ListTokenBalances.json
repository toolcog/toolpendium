{
  "name": "ListTokenBalances",
  "description": "<p>This action returns the following for a given a blockchain network:</p> <ul> <li> <p>Lists all token balances owned by an address (either a contact address or a wallet address).</p> </li> <li> <p>Lists all token balances for all tokens created by a contract.</p> </li> <li> <p>Lists all token balances for a given token.</p> </li> </ul> <note> <p>You must always specify the network property of the <code>tokenFilter</code> when using this operation.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "tokenFilter"
        ],
        "properties": {
          "ownerFilter": {
            "description": "The container for the owner information to filter by.",
            "type": "object",
            "properties": {
              "address": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ChainAddress"
                  },
                  {
                    "description": "The contract or wallet address."
                  }
                ]
              }
            }
          },
          "tokenFilter": {
            "description": "<p>The container of the token filter like the contract address on a given blockchain network or a unique token identifier on a given blockchain network.</p> <note> <p>You must always specify the network property of this container when using this operation.</p> </note>",
            "type": "object",
            "properties": {
              "network": {
                "allOf": [
                  {
                    "$ref": "#/$defs/QueryNetwork"
                  },
                  {
                    "description": "The blockchain network of the token."
                  }
                ]
              },
              "contractAddress": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ChainAddress"
                  },
                  {
                    "description": "This is the address of the contract."
                  }
                ]
              },
              "tokenId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/QueryTokenId"
                  },
                  {
                    "description": "The unique identifier of the token."
                  }
                ]
              }
            }
          },
          "nextToken": {
            "description": "The pagination token that indicates the next set of results to retrieve.",
            "type": "string",
            "minLength": 0,
            "maxLength": 131070
          },
          "maxResults": {
            "description": "The maximum number of token balances to return.",
            "type": "integer",
            "minimum": 1,
            "maximum": 250
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ChainAddress": {
        "type": "string",
        "pattern": "[-A-Za-z0-9]{13,74}"
      },
      "QueryNetwork": {
        "type": "string",
        "enum": [
          "ETHEREUM_MAINNET",
          "BITCOIN_MAINNET"
        ]
      },
      "QueryTokenId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9]{1,66}"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://managedblockchain-query.us-east-1.amazonaws.com/list-token-balances{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**tokenBalances**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
