{
  "name": "GetTokenBalance",
  "description": "<p>Gets the balance of a specific token, including native tokens, for a given address (wallet or contract) on the blockchain.</p> <note> <p>Only the native tokens BTC,ETH, and the ERC-20, ERC-721, and ERC 1155 token standards are supported.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "tokenIdentifier",
          "ownerIdentifier"
        ],
        "properties": {
          "tokenIdentifier": {
            "description": "<p>The container for the identifier for the token including the unique token ID and its blockchain network.</p> <note> <p>Only the native tokens BTC,ETH, and the ERC-20, ERC-721, and ERC 1155 token standards are supported.</p> </note>",
            "type": "object",
            "properties": {
              "network": {
                "allOf": [
                  {
                    "$ref": "#/$defs/QueryNetwork"
                  },
                  {
                    "description": "The blockchain network of the token."
                  }
                ]
              },
              "contractAddress": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ChainAddress"
                  },
                  {
                    "description": "This is the token's contract address."
                  }
                ]
              },
              "tokenId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/QueryTokenId"
                  },
                  {
                    "description": "The unique identifier of the token."
                  }
                ]
              }
            }
          },
          "ownerIdentifier": {
            "description": "The container for the identifier of the owner.",
            "type": "object",
            "properties": {
              "address": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ChainAddress"
                  },
                  {
                    "description": "The contract or wallet address for the owner."
                  }
                ]
              }
            }
          },
          "atBlockchainInstant": {
            "description": "The container for time.",
            "type": "object",
            "properties": {
              "time": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Timestamp"
                  },
                  {
                    "description": "<p>The container of the <code>Timestamp</code> of the blockchain instant.</p> <note> <p>This <code>timestamp</code> will only be recorded up to the second.</p> </note>"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "QueryNetwork": {
        "type": "string",
        "enum": [
          "ETHEREUM_MAINNET",
          "BITCOIN_MAINNET"
        ]
      },
      "ChainAddress": {
        "type": "string",
        "pattern": "[-A-Za-z0-9]{13,74}"
      },
      "QueryTokenId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9]{1,66}"
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://managedblockchain-query.us-east-1.amazonaws.com/get-token-balance"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**ownerIdentifier**: The container for the identifier of the owner.",
              {
                "$ul": [
                  "**address**"
                ]
              }
            ],
            [
              "**tokenIdentifier**: <p>The container for the identifier for the token including the unique token ID and its blockchain network.</p> <note> <p>Only the native tokens BTC,ETH, and the ERC-20, ERC-721, and ERC 1155 token standards are supported.</p> </note>",
              {
                "$ul": [
                  "**network**",
                  "**contractAddress**",
                  "**tokenId**"
                ]
              }
            ],
            "**balance**",
            [
              "**atBlockchainInstant**: The container for time.",
              {
                "$ul": [
                  "**time**"
                ]
              }
            ],
            [
              "**lastUpdatedTime**: The container for time.",
              {
                "$ul": [
                  "**time**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
