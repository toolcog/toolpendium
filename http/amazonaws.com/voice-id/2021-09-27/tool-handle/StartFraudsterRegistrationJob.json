{
  "name": "StartFraudsterRegistrationJob",
  "description": "Starts a new batch fraudster registration job using provided details.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "VoiceID.StartFraudsterRegistrationJob"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/StartFraudsterRegistrationJobRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "StartFraudsterRegistrationJobRequest": {
        "type": "object",
        "required": [
          "DataAccessRoleArn",
          "DomainId",
          "InputDataConfig",
          "OutputDataConfig"
        ],
        "title": "StartFraudsterRegistrationJobRequest",
        "properties": {
          "ClientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientTokenString"
              },
              {
                "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>."
              }
            ]
          },
          "DataAccessRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/IamRoleArn"
              },
              {
                "description": "The IAM role Amazon Resource Name (ARN) that grants Voice ID permissions to access customer's buckets to read the input manifest file and write the Job output file. Refer to the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/voiceid-fraudster-watchlist.html\">Create and edit a fraudster watchlist</a> documentation for the permissions needed in this role."
              }
            ]
          },
          "DomainId": {
            "allOf": [
              {
                "$ref": "#/$defs/DomainId"
              },
              {
                "description": "The identifier of the domain that contains the fraudster registration job and in which the fraudsters are registered."
              }
            ]
          },
          "InputDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/InputDataConfig"
              },
              {
                "description": "The input data config containing an S3 URI for the input manifest file that contains the list of fraudster registration requests."
              }
            ]
          },
          "JobName": {
            "allOf": [
              {
                "$ref": "#/$defs/JobName"
              },
              {
                "description": "The name of the new fraudster registration job."
              }
            ]
          },
          "OutputDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/OutputDataConfig"
              },
              {
                "description": "The output data config containing the S3 location where Voice ID writes the job output file; you must also include a KMS key ID to encrypt the file."
              }
            ]
          },
          "RegistrationConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/RegistrationConfig"
              },
              {
                "description": "The registration config containing details such as the action to take when a duplicate fraudster is detected, and the similarity threshold to use for detecting a duplicate fraudster. "
              }
            ]
          }
        }
      },
      "ClientTokenString": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-_]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "IamRoleArn": {
        "type": "string",
        "pattern": "^arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+$",
        "minLength": 20,
        "maxLength": 2048
      },
      "DomainId": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]{22}$",
        "minLength": 22,
        "maxLength": 22
      },
      "InputDataConfig": {
        "type": "object",
        "required": [
          "S3Uri"
        ],
        "properties": {
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The S3 location for the input manifest file that contains the list of individual enrollment or registration job requests."
              }
            ]
          }
        },
        "description": "The configuration containing input file information for a batch job."
      },
      "S3Uri": {
        "type": "string",
        "pattern": "^s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?$",
        "minLength": 0,
        "maxLength": 1024
      },
      "JobName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
        "minLength": 1,
        "maxLength": 256,
        "format": "password"
      },
      "OutputDataConfig": {
        "type": "object",
        "required": [
          "S3Uri"
        ],
        "properties": {
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "The identifier of the KMS key you want Voice ID to use to encrypt the output file of a speaker enrollment job/fraudster registration job. "
              }
            ]
          },
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The S3 path of the folder where Voice ID writes the job output file. It has a <code>*.out</code> extension. For example, if the input file name is <code>input-file.json</code> and the output folder path is <code>s3://output-bucket/output-folder</code>, the full output file path is <code>s3://output-bucket/output-folder/job-Id/input-file.json.out</code>."
              }
            ]
          }
        },
        "description": "The configuration containing output file information for a batch job."
      },
      "KmsKeyId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "RegistrationConfig": {
        "type": "object",
        "properties": {
          "DuplicateRegistrationAction": {
            "allOf": [
              {
                "$ref": "#/$defs/DuplicateRegistrationAction"
              },
              {
                "description": "The action to take when a fraudster is identified as a duplicate. The default action is <code>SKIP</code>, which skips registering the duplicate fraudster. Setting the value to <code>REGISTER_AS_NEW</code> always registers a new fraudster into the specified domain."
              }
            ]
          },
          "FraudsterSimilarityThreshold": {
            "allOf": [
              {
                "$ref": "#/$defs/Score"
              },
              {
                "description": "The minimum similarity score between the new and old fraudsters in order to consider the new fraudster a duplicate."
              }
            ]
          },
          "WatchlistIds": {
            "allOf": [
              {
                "$ref": "#/$defs/RegistrationConfigWatchlistIds"
              },
              {
                "description": "The identifiers of watchlists that a fraudster is registered to. If a watchlist isn't provided, the fraudsters are registered to the default watchlist. "
              }
            ]
          }
        },
        "description": "The registration configuration to be used during the batch fraudster registration job."
      },
      "DuplicateRegistrationAction": {
        "type": "string",
        "enum": [
          "SKIP",
          "REGISTER_AS_NEW"
        ]
      },
      "Score": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100
      },
      "RegistrationConfigWatchlistIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/WatchlistId"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "WatchlistId": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]{22}$",
        "minLength": 22,
        "maxLength": 22
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://voiceid.us-east-1.amazonaws.com/#X-Amz-Target=VoiceID.StartFraudsterRegistrationJob"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Job**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
