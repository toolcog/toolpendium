openapi: 3.0.0
info:
  version: '2021-09-27'
  x-release: v4
  title: Amazon Voice ID
  description: 'Amazon Connect Voice ID provides real-time caller authentication and fraud risk detection, which make voice interactions in contact centers more secure and efficient.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: voice-id
  x-aws-signingName: voiceid
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/voice-id-2021-09-27.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/voiceid/'
servers:
  - url: 'http://voiceid.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Voice ID multi-region endpoint
  - url: 'https://voiceid.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Voice ID multi-region endpoint
  - url: 'http://voiceid.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Voice ID endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://voiceid.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Voice ID endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=VoiceID.AssociateFraudster:
    post:
      operationId: AssociateFraudster
      description: 'Associates the fraudsters with the watchlist specified in the same domain. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateFraudsterResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateFraudsterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.AssociateFraudster
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.CreateDomain:
    post:
      operationId: CreateDomain
      description: 'Creates a domain that contains all Amazon Connect Voice ID data, such as speakers, fraudsters, customer audio, and voiceprints. Every domain is created with a default watchlist that fraudsters can be a part of.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.CreateDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.CreateWatchlist:
    post:
      operationId: CreateWatchlist
      description: Creates a watchlist that fraudsters can be a part of.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWatchlistResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWatchlistRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.CreateWatchlist
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.DeleteDomain:
    post:
      operationId: DeleteDomain
      description: Deletes the specified domain from Voice ID.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.DeleteDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.DeleteFraudster:
    post:
      operationId: DeleteFraudster
      description: Deletes the specified fraudster from Voice ID. This action disassociates the fraudster from any watchlists it is a part of.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFraudsterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.DeleteFraudster
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.DeleteSpeaker:
    post:
      operationId: DeleteSpeaker
      description: Deletes the specified speaker from Voice ID.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSpeakerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.DeleteSpeaker
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.DeleteWatchlist:
    post:
      operationId: DeleteWatchlist
      description: 'Deletes the specified watchlist from Voice ID. This API throws an exception when there are fraudsters in the watchlist that you are trying to delete. You must delete the fraudsters, and then delete the watchlist. Every domain has a default watchlist which cannot be deleted. '
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWatchlistRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.DeleteWatchlist
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.DescribeDomain:
    post:
      operationId: DescribeDomain
      description: Describes the specified domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.DescribeDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.DescribeFraudster:
    post:
      operationId: DescribeFraudster
      description: Describes the specified fraudster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFraudsterResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFraudsterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.DescribeFraudster
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.DescribeFraudsterRegistrationJob:
    post:
      operationId: DescribeFraudsterRegistrationJob
      description: Describes the specified fraudster registration job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFraudsterRegistrationJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFraudsterRegistrationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.DescribeFraudsterRegistrationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.DescribeSpeaker:
    post:
      operationId: DescribeSpeaker
      description: Describes the specified speaker.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSpeakerResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSpeakerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.DescribeSpeaker
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.DescribeSpeakerEnrollmentJob:
    post:
      operationId: DescribeSpeakerEnrollmentJob
      description: Describes the specified speaker enrollment job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSpeakerEnrollmentJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSpeakerEnrollmentJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.DescribeSpeakerEnrollmentJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.DescribeWatchlist:
    post:
      operationId: DescribeWatchlist
      description: Describes the specified watchlist.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWatchlistResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWatchlistRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.DescribeWatchlist
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.DisassociateFraudster:
    post:
      operationId: DisassociateFraudster
      description: 'Disassociates the fraudsters from the watchlist specified. Voice ID always expects a fraudster to be a part of at least one watchlist. If you try to disassociate a fraudster from its only watchlist, a <code>ValidationException</code> is thrown. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateFraudsterResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateFraudsterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.DisassociateFraudster
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.EvaluateSession:
    post:
      operationId: EvaluateSession
      description: Evaluates a specified session based on audio data accumulated during a streaming Amazon Connect Voice ID call.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateSessionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateSessionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.EvaluateSession
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.ListDomains:
    post:
      operationId: ListDomains
      description: 'Lists all the domains in the Amazon Web Services account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDomainsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.ListDomains
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.ListFraudsterRegistrationJobs:
    post:
      operationId: ListFraudsterRegistrationJobs
      description: 'Lists all the fraudster registration jobs in the domain with the given <code>JobStatus</code>. If <code>JobStatus</code> is not provided, this lists all fraudster registration jobs in the given domain. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFraudsterRegistrationJobsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFraudsterRegistrationJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.ListFraudsterRegistrationJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.ListFraudsters:
    post:
      operationId: ListFraudsters
      description: Lists all fraudsters in a specified watchlist or domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFraudstersResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFraudstersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.ListFraudsters
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.ListSpeakerEnrollmentJobs:
    post:
      operationId: ListSpeakerEnrollmentJobs
      description: 'Lists all the speaker enrollment jobs in the domain with the specified <code>JobStatus</code>. If <code>JobStatus</code> is not provided, this lists all jobs with all possible speaker enrollment job statuses.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSpeakerEnrollmentJobsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSpeakerEnrollmentJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.ListSpeakerEnrollmentJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.ListSpeakers:
    post:
      operationId: ListSpeakers
      description: Lists all speakers in a specified domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSpeakersResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSpeakersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.ListSpeakers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Lists all tags associated with a specified Voice ID resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.ListWatchlists:
    post:
      operationId: ListWatchlists
      description: Lists all watchlists in a specified domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWatchlistsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWatchlistsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.ListWatchlists
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.OptOutSpeaker:
    post:
      operationId: OptOutSpeaker
      description: 'Opts out a speaker from Voice ID. A speaker can be opted out regardless of whether or not they already exist in Voice ID. If they don''t yet exist, a new speaker is created in an opted out state. If they already exist, their existing status is overridden and they are opted out. Enrollment and evaluation authentication requests are rejected for opted out speakers, and opted out speakers have no voice embeddings stored in Voice ID.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptOutSpeakerResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptOutSpeakerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.OptOutSpeaker
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.StartFraudsterRegistrationJob:
    post:
      operationId: StartFraudsterRegistrationJob
      description: Starts a new batch fraudster registration job using provided details.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFraudsterRegistrationJobResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFraudsterRegistrationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.StartFraudsterRegistrationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.StartSpeakerEnrollmentJob:
    post:
      operationId: StartSpeakerEnrollmentJob
      description: Starts a new batch speaker enrollment job using specified details.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSpeakerEnrollmentJobResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSpeakerEnrollmentJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.StartSpeakerEnrollmentJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.TagResource:
    post:
      operationId: TagResource
      description: Tags a Voice ID resource with the provided list of tags.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.UntagResource:
    post:
      operationId: UntagResource
      description: Removes specified tags from a specified Amazon Connect Voice ID resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.UpdateDomain:
    post:
      operationId: UpdateDomain
      description: 'Updates the specified domain. This API has clobber behavior, and clears and replaces all attributes. If an optional field, such as ''Description'' is not provided, it is removed from the domain.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.UpdateDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=VoiceID.UpdateWatchlist:
    post:
      operationId: UpdateWatchlist
      description: 'Updates the specified watchlist. Every domain has a default watchlist which cannot be updated. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWatchlistResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWatchlistRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - VoiceID.UpdateWatchlist
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateFraudsterResponse:
      type: object
      properties:
        Fraudster:
          $ref: '#/components/schemas/Fraudster'
    AssociateFraudsterRequest:
      type: object
      required:
        - DomainId
        - FraudsterId
        - WatchlistId
      title: AssociateFraudsterRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the fraudster.
        FraudsterId:
          allOf:
            - $ref: '#/components/schemas/FraudsterId'
            - description: The identifier of the fraudster to be associated with the watchlist.
        WatchlistId:
          allOf:
            - $ref: '#/components/schemas/WatchlistId'
            - description: The identifier of the watchlist you want to associate with the fraudster.
    ServiceQuotaExceededException: {}
    ResourceNotFoundException: {}
    ValidationException: {}
    ConflictException: {}
    InternalServerException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    CreateDomainResponse:
      type: object
      properties:
        Domain:
          allOf:
            - $ref: '#/components/schemas/Domain'
            - description: Information about the newly created domain.
    CreateDomainRequest:
      type: object
      required:
        - Name
        - ServerSideEncryptionConfiguration
      title: CreateDomainRequest
      properties:
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/ClientTokenString'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.'
        Description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A brief description of this domain.
        Name:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: The name of the domain.
        ServerSideEncryptionConfiguration:
          allOf:
            - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
            - description: 'The configuration, containing the KMS key identifier, to be used by Voice ID for the server-side encryption of your data. Refer to <a href="https://docs.aws.amazon.com/connect/latest/adminguide/encryption-at-rest.html#encryption-at-rest-voiceid"> Amazon Connect Voice ID encryption at rest</a> for more details on how the KMS key is used. '
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: A list of tags you want added to the domain.
    CreateWatchlistResponse:
      type: object
      properties:
        Watchlist:
          allOf:
            - $ref: '#/components/schemas/Watchlist'
            - description: Information about the newly created watchlist.
    CreateWatchlistRequest:
      type: object
      required:
        - DomainId
        - Name
      title: CreateWatchlistRequest
      properties:
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/ClientTokenString'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.'
        Description:
          allOf:
            - $ref: '#/components/schemas/WatchlistDescription'
            - description: A brief description of this watchlist.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the watchlist.
        Name:
          allOf:
            - $ref: '#/components/schemas/WatchlistName'
            - description: The name of the watchlist.
    DeleteDomainRequest:
      type: object
      required:
        - DomainId
      title: DeleteDomainRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain you want to delete.
    DeleteFraudsterRequest:
      type: object
      required:
        - DomainId
        - FraudsterId
      title: DeleteFraudsterRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the fraudster.
        FraudsterId:
          allOf:
            - $ref: '#/components/schemas/FraudsterId'
            - description: The identifier of the fraudster you want to delete.
    DeleteSpeakerRequest:
      type: object
      required:
        - DomainId
        - SpeakerId
      title: DeleteSpeakerRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the speaker.
        SpeakerId:
          allOf:
            - $ref: '#/components/schemas/SpeakerId'
            - description: The identifier of the speaker you want to delete.
    DeleteWatchlistRequest:
      type: object
      required:
        - DomainId
        - WatchlistId
      title: DeleteWatchlistRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the watchlist.
        WatchlistId:
          allOf:
            - $ref: '#/components/schemas/WatchlistId'
            - description: The identifier of the watchlist to be deleted.
    DescribeDomainResponse:
      type: object
      properties:
        Domain:
          allOf:
            - $ref: '#/components/schemas/Domain'
            - description: Information about the specified domain.
    DescribeDomainRequest:
      type: object
      required:
        - DomainId
      title: DescribeDomainRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that you are describing.
    DescribeFraudsterResponse:
      type: object
      properties:
        Fraudster:
          allOf:
            - $ref: '#/components/schemas/Fraudster'
            - description: Information about the specified fraudster.
    DescribeFraudsterRequest:
      type: object
      required:
        - DomainId
        - FraudsterId
      title: DescribeFraudsterRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the fraudster.
        FraudsterId:
          allOf:
            - $ref: '#/components/schemas/FraudsterId'
            - description: The identifier of the fraudster you are describing.
    DescribeFraudsterRegistrationJobResponse:
      type: object
      properties:
        Job:
          allOf:
            - $ref: '#/components/schemas/FraudsterRegistrationJob'
            - description: Contains details about the specified fraudster registration job.
    DescribeFraudsterRegistrationJobRequest:
      type: object
      required:
        - DomainId
        - JobId
      title: DescribeFraudsterRegistrationJobRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the fraudster registration job.
        JobId:
          allOf:
            - $ref: '#/components/schemas/JobId'
            - description: The identifier of the fraudster registration job you are describing.
    DescribeSpeakerResponse:
      type: object
      properties:
        Speaker:
          allOf:
            - $ref: '#/components/schemas/Speaker'
            - description: Information about the specified speaker.
    DescribeSpeakerRequest:
      type: object
      required:
        - DomainId
        - SpeakerId
      title: DescribeSpeakerRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the speaker.
        SpeakerId:
          allOf:
            - $ref: '#/components/schemas/SpeakerId'
            - description: The identifier of the speaker you are describing.
    DescribeSpeakerEnrollmentJobResponse:
      type: object
      properties:
        Job:
          allOf:
            - $ref: '#/components/schemas/SpeakerEnrollmentJob'
            - description: Contains details about the specified speaker enrollment job.
    DescribeSpeakerEnrollmentJobRequest:
      type: object
      required:
        - DomainId
        - JobId
      title: DescribeSpeakerEnrollmentJobRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the speaker enrollment job.
        JobId:
          allOf:
            - $ref: '#/components/schemas/JobId'
            - description: The identifier of the speaker enrollment job you are describing.
    DescribeWatchlistResponse:
      type: object
      properties:
        Watchlist:
          allOf:
            - $ref: '#/components/schemas/Watchlist'
            - description: Information about the specified watchlist.
    DescribeWatchlistRequest:
      type: object
      required:
        - DomainId
        - WatchlistId
      title: DescribeWatchlistRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the watchlist.
        WatchlistId:
          allOf:
            - $ref: '#/components/schemas/WatchlistId'
            - description: The identifier of the watchlist that you are describing.
    DisassociateFraudsterResponse:
      type: object
      properties:
        Fraudster:
          $ref: '#/components/schemas/Fraudster'
    DisassociateFraudsterRequest:
      type: object
      required:
        - DomainId
        - FraudsterId
        - WatchlistId
      title: DisassociateFraudsterRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the fraudster.
        FraudsterId:
          allOf:
            - $ref: '#/components/schemas/FraudsterId'
            - description: The identifier of the fraudster to be disassociated from the watchlist.
        WatchlistId:
          allOf:
            - $ref: '#/components/schemas/WatchlistId'
            - description: The identifier of the watchlist that you want to disassociate from the fraudster.
    EvaluateSessionResponse:
      type: object
      properties:
        AuthenticationResult:
          allOf:
            - $ref: '#/components/schemas/AuthenticationResult'
            - description: 'Details resulting from the authentication process, such as authentication decision and authentication score.'
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the session.
        FraudDetectionResult:
          allOf:
            - $ref: '#/components/schemas/FraudDetectionResult'
            - description: 'Details resulting from the fraud detection process, such as fraud detection decision and risk score.'
        SessionId:
          allOf:
            - $ref: '#/components/schemas/SessionId'
            - description: The service-generated identifier of the session.
        SessionName:
          allOf:
            - $ref: '#/components/schemas/SessionName'
            - description: The client-provided name of the session.
        StreamingStatus:
          allOf:
            - $ref: '#/components/schemas/StreamingStatus'
            - description: 'The current status of audio streaming for this session. This field is useful to infer next steps when the Authentication or Fraud Detection results are empty or the decision is <code>NOT_ENOUGH_SPEECH</code>. In this situation, if the <code>StreamingStatus</code> is <code>ONGOING/PENDING_CONFIGURATION</code>, it can mean that the client should call the API again later, after Voice ID has enough audio to produce a result. If the decision remains <code>NOT_ENOUGH_SPEECH</code> even after <code>StreamingStatus</code> is <code>ENDED</code>, it means that the previously streamed session did not have enough speech to perform evaluation, and a new streaming session is needed to try again.'
    EvaluateSessionRequest:
      type: object
      required:
        - DomainId
        - SessionNameOrId
      title: EvaluateSessionRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain where the session started.
        SessionNameOrId:
          allOf:
            - $ref: '#/components/schemas/SessionNameOrId'
            - description: 'The session identifier, or name of the session, that you want to evaluate. In Voice ID integration, this is the Contact-Id.'
    ListDomainsResponse:
      type: object
      properties:
        DomainSummaries:
          allOf:
            - $ref: '#/components/schemas/DomainSummaries'
            - description: A list containing details about each domain in the Amazon Web Services account.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours.'
    ListDomainsRequest:
      type: object
      title: ListDomainsRequest
      properties:
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResultsForListDomainFe'
            - description: The maximum number of results that are returned per call. You can use <code>NextToken</code> to obtain more pages of results. The default is 100; the maximum allowed page size is also 100.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours.'
    ListFraudsterRegistrationJobsResponse:
      type: object
      properties:
        JobSummaries:
          allOf:
            - $ref: '#/components/schemas/FraudsterRegistrationJobSummaries'
            - description: A list containing details about each specified fraudster registration job.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours.'
    ListFraudsterRegistrationJobsRequest:
      type: object
      required:
        - DomainId
      title: ListFraudsterRegistrationJobsRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the fraudster registration Jobs.
        JobStatus:
          allOf:
            - $ref: '#/components/schemas/FraudsterRegistrationJobStatus'
            - description: Provides the status of your fraudster registration job.
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResultsForList'
            - description: 'The maximum number of results that are returned per call. You can use <code>NextToken</code> to obtain more pages of results. The default is 100; the maximum allowed page size is also 100. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours.'
    ListFraudstersResponse:
      type: object
      properties:
        FraudsterSummaries:
          allOf:
            - $ref: '#/components/schemas/FraudsterSummaries'
            - description: 'A list that contains details about each fraudster in the Amazon Web Services account. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. '
    ListFraudstersRequest:
      type: object
      required:
        - DomainId
      title: ListFraudstersRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: 'The identifier of the domain. '
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResultsForList'
            - description: 'The maximum number of results that are returned per call. You can use <code>NextToken</code> to obtain more pages of results. The default is 100; the maximum allowed page size is also 100. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. '
        WatchlistId:
          allOf:
            - $ref: '#/components/schemas/WatchlistId'
            - description: 'The identifier of the watchlist. If provided, all fraudsters in the watchlist are listed. If not provided, all fraudsters in the domain are listed.'
    ListSpeakerEnrollmentJobsResponse:
      type: object
      properties:
        JobSummaries:
          allOf:
            - $ref: '#/components/schemas/SpeakerEnrollmentJobSummaries'
            - description: A list containing details about each specified speaker enrollment job.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. '
    ListSpeakerEnrollmentJobsRequest:
      type: object
      required:
        - DomainId
      title: ListSpeakerEnrollmentJobsRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the speaker enrollment jobs.
        JobStatus:
          allOf:
            - $ref: '#/components/schemas/SpeakerEnrollmentJobStatus'
            - description: Provides the status of your speaker enrollment Job.
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResultsForList'
            - description: The maximum number of results that are returned per call. You can use <code>NextToken</code> to obtain more pages of results. The default is 100; the maximum allowed page size is also 100.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours.'
    ListSpeakersResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. '
        SpeakerSummaries:
          allOf:
            - $ref: '#/components/schemas/SpeakerSummaries'
            - description: 'A list containing details about each speaker in the Amazon Web Services account. '
    ListSpeakersRequest:
      type: object
      required:
        - DomainId
      title: ListSpeakersRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain.
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResultsForList'
            - description: 'The maximum number of results that are returned per call. You can use <code>NextToken</code> to obtain more pages of results. The default is 100; the maximum allowed page size is also 100. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours.'
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The list of tags associated with the specified resource.
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: ListTagsForResourceRequest
      properties:
        ResourceArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: The Amazon Resource Name (ARN) of the Voice ID resource for which you want to list the tags.
    ListWatchlistsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. '
        WatchlistSummaries:
          allOf:
            - $ref: '#/components/schemas/WatchlistSummaries'
            - description: 'A list that contains details about each watchlist in the Amazon Web Services account. '
    ListWatchlistsRequest:
      type: object
      required:
        - DomainId
      title: ListWatchlistsRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain.
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResultsForList'
            - description: 'The maximum number of results that are returned per call. You can use <code>NextToken</code> to obtain more pages of results. The default is 100; the maximum allowed page size is also 100. '
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. '
    OptOutSpeakerResponse:
      type: object
      properties:
        Speaker:
          allOf:
            - $ref: '#/components/schemas/Speaker'
            - description: Details about the opted-out speaker.
    OptOutSpeakerRequest:
      type: object
      required:
        - DomainId
        - SpeakerId
      title: OptOutSpeakerRequest
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the speaker.
        SpeakerId:
          allOf:
            - $ref: '#/components/schemas/SpeakerId'
            - description: The identifier of the speaker you want opted-out.
    StartFraudsterRegistrationJobResponse:
      type: object
      properties:
        Job:
          allOf:
            - $ref: '#/components/schemas/FraudsterRegistrationJob'
            - description: Details about the started fraudster registration job.
    StartFraudsterRegistrationJobRequest:
      type: object
      required:
        - DataAccessRoleArn
        - DomainId
        - InputDataConfig
        - OutputDataConfig
      title: StartFraudsterRegistrationJobRequest
      properties:
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/ClientTokenString'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.'
        DataAccessRoleArn:
          allOf:
            - $ref: '#/components/schemas/IamRoleArn'
            - description: 'The IAM role Amazon Resource Name (ARN) that grants Voice ID permissions to access customer''s buckets to read the input manifest file and write the Job output file. Refer to the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/voiceid-fraudster-watchlist.html">Create and edit a fraudster watchlist</a> documentation for the permissions needed in this role.'
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the fraudster registration job and in which the fraudsters are registered.
        InputDataConfig:
          allOf:
            - $ref: '#/components/schemas/InputDataConfig'
            - description: The input data config containing an S3 URI for the input manifest file that contains the list of fraudster registration requests.
        JobName:
          allOf:
            - $ref: '#/components/schemas/JobName'
            - description: The name of the new fraudster registration job.
        OutputDataConfig:
          allOf:
            - $ref: '#/components/schemas/OutputDataConfig'
            - description: The output data config containing the S3 location where Voice ID writes the job output file; you must also include a KMS key ID to encrypt the file.
        RegistrationConfig:
          allOf:
            - $ref: '#/components/schemas/RegistrationConfig'
            - description: 'The registration config containing details such as the action to take when a duplicate fraudster is detected, and the similarity threshold to use for detecting a duplicate fraudster. '
    StartSpeakerEnrollmentJobResponse:
      type: object
      properties:
        Job:
          allOf:
            - $ref: '#/components/schemas/SpeakerEnrollmentJob'
            - description: Details about the started speaker enrollment job.
    StartSpeakerEnrollmentJobRequest:
      type: object
      required:
        - DataAccessRoleArn
        - DomainId
        - InputDataConfig
        - OutputDataConfig
      title: StartSpeakerEnrollmentJobRequest
      properties:
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/ClientTokenString'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.'
        DataAccessRoleArn:
          allOf:
            - $ref: '#/components/schemas/IamRoleArn'
            - description: 'The IAM role Amazon Resource Name (ARN) that grants Voice ID permissions to access customer''s buckets to read the input manifest file and write the job output file. Refer to <a href="https://docs.aws.amazon.com/connect/latest/adminguide/voiceid-batch-enrollment.html">Batch enrollment using audio data from prior calls</a> for the permissions needed in this role.'
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: 'The identifier of the domain that contains the speaker enrollment job and in which the speakers are enrolled. '
        EnrollmentConfig:
          allOf:
            - $ref: '#/components/schemas/EnrollmentConfig'
            - description: The enrollment config that contains details such as the action to take when a speaker is already enrolled in Voice ID or when a speaker is identified as a fraudster.
        InputDataConfig:
          allOf:
            - $ref: '#/components/schemas/InputDataConfig'
            - description: The input data config containing the S3 location for the input manifest file that contains the list of speaker enrollment requests.
        JobName:
          allOf:
            - $ref: '#/components/schemas/JobName'
            - description: A name for your speaker enrollment job.
        OutputDataConfig:
          allOf:
            - $ref: '#/components/schemas/OutputDataConfig'
            - description: The output data config containing the S3 location where Voice ID writes the job output file; you must also include a KMS key ID to encrypt the file.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      title: TagResourceRequest
      properties:
        ResourceArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: The Amazon Resource Name (ARN) of the Voice ID resource you want to tag.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The list of tags to assign to the specified resource.
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: The Amazon Resource Name (ARN) of the Voice ID resource you want to remove tags from.
        TagKeys:
          allOf:
            - $ref: '#/components/schemas/TagKeyList'
            - description: The list of tag keys you want to remove from the specified resource.
    UpdateDomainResponse:
      type: object
      properties:
        Domain:
          allOf:
            - $ref: '#/components/schemas/Domain'
            - description: Details about the updated domain
    UpdateDomainRequest:
      type: object
      required:
        - DomainId
        - Name
        - ServerSideEncryptionConfiguration
      title: UpdateDomainRequest
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A brief description about this domain.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain to be updated.
        Name:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: The name of the domain.
        ServerSideEncryptionConfiguration:
          allOf:
            - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
            - description: 'The configuration, containing the KMS key identifier, to be used by Voice ID for the server-side encryption of your data. Changing the domain''s associated KMS key immediately triggers an asynchronous process to remove dependency on the old KMS key, such that the domain''s data can only be accessed using the new KMS key. The domain''s <code>ServerSideEncryptionUpdateDetails</code> contains the details for this process.'
    UpdateWatchlistResponse:
      type: object
      properties:
        Watchlist:
          allOf:
            - $ref: '#/components/schemas/Watchlist'
            - description: Details about the updated watchlist.
    UpdateWatchlistRequest:
      type: object
      required:
        - DomainId
        - WatchlistId
      title: UpdateWatchlistRequest
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/WatchlistDescription'
            - description: A brief description about this watchlist.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the watchlist.
        Name:
          allOf:
            - $ref: '#/components/schemas/WatchlistName'
            - description: The name of the watchlist.
        WatchlistId:
          allOf:
            - $ref: '#/components/schemas/WatchlistId'
            - description: The identifier of the watchlist to be updated.
    AmazonResourceName:
      type: string
      pattern: '^arn:aws(-[^:]+)?:voiceid.+:[0-9]{12}:domain/[a-zA-Z0-9]{22}$'
      minLength: 1
      maxLength: 1011
    Arn:
      type: string
      pattern: '^arn:aws(-[^:]+)?:voiceid.+:[0-9]{12}:domain/[a-zA-Z0-9]{22}$'
    DomainId:
      type: string
      pattern: '^[a-zA-Z0-9]{22}$'
      minLength: 22
      maxLength: 22
    FraudsterId:
      type: string
      pattern: '^id#[a-zA-Z0-9]{22}$'
      minLength: 25
      maxLength: 25
      format: password
    WatchlistId:
      type: string
      pattern: '^[a-zA-Z0-9]{22}$'
      minLength: 22
      maxLength: 22
    Fraudster:
      type: object
      properties:
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp of when Voice ID identified the fraudster.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the fraudster.
        GeneratedFraudsterId:
          allOf:
            - $ref: '#/components/schemas/GeneratedFraudsterId'
            - description: The service-generated identifier for the fraudster.
        WatchlistIds:
          allOf:
            - $ref: '#/components/schemas/ResponseWatchlistIds'
            - description: The identifier of the watchlists the fraudster is a part of.
      description: Contains all the information about a fraudster.
    Score:
      type: integer
      minimum: 0
      maximum: 100
    AuthenticationConfiguration:
      type: object
      required:
        - AcceptanceThreshold
      properties:
        AcceptanceThreshold:
          allOf:
            - $ref: '#/components/schemas/Score'
            - description: The minimum threshold needed to successfully authenticate a speaker.
      description: The configuration used to authenticate a speaker during a session.
    AuthenticationDecision:
      type: string
      enum:
        - ACCEPT
        - REJECT
        - NOT_ENOUGH_SPEECH
        - SPEAKER_NOT_ENROLLED
        - SPEAKER_OPTED_OUT
        - SPEAKER_ID_NOT_PROVIDED
        - SPEAKER_EXPIRED
    Timestamp:
      type: string
      format: date-time
    UniqueIdLarge:
      type: string
      pattern: '^[a-zA-Z0-9]{22}$'
      minLength: 22
      maxLength: 22
    CustomerSpeakerId:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9_-]*$'
      minLength: 1
      maxLength: 256
      format: password
    GeneratedSpeakerId:
      type: string
      pattern: '^id#[a-zA-Z0-9]{22}$'
      minLength: 25
      maxLength: 25
    AuthenticationResult:
      type: object
      properties:
        AudioAggregationEndedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp of when audio aggregation ended for this authentication result.
        AudioAggregationStartedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp of when audio aggregation started for this authentication result.
        AuthenticationResultId:
          allOf:
            - $ref: '#/components/schemas/UniqueIdLarge'
            - description: 'The unique identifier for this authentication result. Because there can be multiple authentications for a given session, this field helps to identify if the returned result is from a previous streaming activity or a new result. Note that in absence of any new streaming activity, <code>AcceptanceThreshold</code> changes, or <code>SpeakerId</code> changes, Voice ID always returns cached Authentication Result for this API.'
        Configuration:
          allOf:
            - $ref: '#/components/schemas/AuthenticationConfiguration'
            - description: The <code>AuthenticationConfiguration</code> used to generate this authentication result.
        CustomerSpeakerId:
          allOf:
            - $ref: '#/components/schemas/CustomerSpeakerId'
            - description: The client-provided identifier for the speaker whose authentication result is produced. Only present if a <code>SpeakerId</code> is provided for the session.
        Decision:
          allOf:
            - $ref: '#/components/schemas/AuthenticationDecision'
            - description: 'The authentication decision produced by Voice ID, processed against the current session state and streamed audio of the speaker.'
        GeneratedSpeakerId:
          allOf:
            - $ref: '#/components/schemas/GeneratedSpeakerId'
            - description: The service-generated identifier for the speaker whose authentication result is produced.
        Score:
          allOf:
            - $ref: '#/components/schemas/Score'
            - description: The authentication score for the speaker whose authentication result is produced. This value is only present if the authentication decision is either <code>ACCEPT</code> or <code>REJECT</code>.
      description: 'The authentication result produced by Voice ID, processed against the current session state and streamed audio of the speaker.'
    Boolean:
      type: boolean
    ClientTokenString:
      type: string
      pattern: '^[a-zA-Z0-9-_]+$'
      minLength: 1
      maxLength: 64
    Description:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
      minLength: 1
      maxLength: 1024
      format: password
    DomainName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9_-]*$'
      minLength: 1
      maxLength: 256
      format: password
    ServerSideEncryptionConfiguration:
      type: object
      required:
        - KmsKeyId
      properties:
        KmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: 'The identifier of the KMS key to use to encrypt data stored by Voice ID. Voice ID doesn''t support asymmetric customer managed keys. '
      description: The configuration containing information about the customer managed key used for encrypting customer data.
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 200
    Domain:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) for the domain.
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp of when the domain was created.
        Description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the domain.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain.
        DomainStatus:
          allOf:
            - $ref: '#/components/schemas/DomainStatus'
            - description: The current status of the domain.
        Name:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: The name for the domain.
        ServerSideEncryptionConfiguration:
          allOf:
            - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
            - description: The server-side encryption configuration containing the KMS key identifier you want Voice ID to use to encrypt your data.
        ServerSideEncryptionUpdateDetails:
          allOf:
            - $ref: '#/components/schemas/ServerSideEncryptionUpdateDetails'
            - description: 'Details about the most recent server-side encryption configuration update. When the server-side encryption configuration is changed, dependency on the old KMS key is removed through an asynchronous process. When this update is complete, the domain''s data can only be accessed using the new KMS key.'
        UpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp of when the domain was last update.
        WatchlistDetails:
          allOf:
            - $ref: '#/components/schemas/WatchlistDetails'
            - description: The watchlist details of a domain. Contains the default watchlist ID of the domain.
      description: Contains all the information about a domain.
    WatchlistDescription:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
      minLength: 1
      maxLength: 1024
      format: password
    WatchlistName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9_-]*$'
      minLength: 1
      maxLength: 256
      format: password
    Watchlist:
      type: object
      properties:
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp of when the watchlist was created.
        DefaultWatchlist:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether the specified watchlist is the default watchlist of a domain.
        Description:
          allOf:
            - $ref: '#/components/schemas/WatchlistDescription'
            - description: The description of the watchlist.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the watchlist.
        Name:
          allOf:
            - $ref: '#/components/schemas/WatchlistName'
            - description: The name for the watchlist.
        UpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp of when the watchlist was updated.
        WatchlistId:
          allOf:
            - $ref: '#/components/schemas/WatchlistId'
            - description: The identifier of the watchlist.
      description: Contains all the information about a watchlist.
    SpeakerId:
      type: string
      pattern: '^(id#[a-zA-Z0-9]{22}|[a-zA-Z0-9][a-zA-Z0-9_-]*)$'
      minLength: 1
      maxLength: 256
      format: password
    JobId:
      type: string
      pattern: '^[a-zA-Z0-9]{22}$'
      minLength: 22
      maxLength: 22
    FraudsterRegistrationJob:
      type: object
      properties:
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp of when the fraudster registration job was created.
        DataAccessRoleArn:
          allOf:
            - $ref: '#/components/schemas/IamRoleArn'
            - description: The IAM role Amazon Resource Name (ARN) that grants Voice ID permissions to access customer's buckets to read the input manifest file and write the job output file.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the fraudster registration job.
        EndedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp of when the fraudster registration job ended.
        FailureDetails:
          allOf:
            - $ref: '#/components/schemas/FailureDetails'
            - description: 'Contains details that are populated when an entire batch job fails. In cases of individual registration job failures, the batch job as a whole doesn''t fail; it is completed with a <code>JobStatus</code> of <code>COMPLETED_WITH_ERRORS</code>. You can use the job output file to identify the individual registration requests that failed.'
        InputDataConfig:
          allOf:
            - $ref: '#/components/schemas/InputDataConfig'
            - description: The input data config containing an S3 URI for the input manifest file that contains the list of fraudster registration job requests.
        JobId:
          allOf:
            - $ref: '#/components/schemas/JobId'
            - description: The service-generated identifier for the fraudster registration job.
        JobName:
          allOf:
            - $ref: '#/components/schemas/JobName'
            - description: The client-provided name for the fraudster registration job.
        JobProgress:
          allOf:
            - $ref: '#/components/schemas/JobProgress'
            - description: Shows the completed percentage of registration requests listed in the input file.
        JobStatus:
          allOf:
            - $ref: '#/components/schemas/FraudsterRegistrationJobStatus'
            - description: The current status of the fraudster registration job.
        OutputDataConfig:
          allOf:
            - $ref: '#/components/schemas/OutputDataConfig'
            - description: The output data config containing the S3 location where you want Voice ID to write your job output file; you must also include a KMS key ID in order to encrypt the file.
        RegistrationConfig:
          allOf:
            - $ref: '#/components/schemas/RegistrationConfig'
            - description: 'The registration config containing details such as the action to take when a duplicate fraudster is detected, and the similarity threshold to use for detecting a duplicate fraudster.'
      description: Contains all the information about a fraudster registration job.
    SpeakerEnrollmentJob:
      type: object
      properties:
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp of when the speaker enrollment job was created.
        DataAccessRoleArn:
          allOf:
            - $ref: '#/components/schemas/IamRoleArn'
            - description: The IAM role Amazon Resource Name (ARN) that grants Voice ID permissions to access customer's buckets to read the input manifest file and write the job output file.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the speaker enrollment job.
        EndedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'A timestamp of when the speaker enrollment job ended. '
        EnrollmentConfig:
          allOf:
            - $ref: '#/components/schemas/EnrollmentConfig'
            - description: 'The configuration that defines the action to take when the speaker is already enrolled in Voice ID, and the <code>FraudDetectionConfig</code> to use.'
        FailureDetails:
          allOf:
            - $ref: '#/components/schemas/FailureDetails'
            - description: 'Contains details that are populated when an entire batch job fails. In cases of individual registration job failures, the batch job as a whole doesn''t fail; it is completed with a <code>JobStatus</code> of <code>COMPLETED_WITH_ERRORS</code>. You can use the job output file to identify the individual registration requests that failed.'
        InputDataConfig:
          allOf:
            - $ref: '#/components/schemas/InputDataConfig'
            - description: The input data config containing an S3 URI for the input manifest file that contains the list of speaker enrollment job requests.
        JobId:
          allOf:
            - $ref: '#/components/schemas/JobId'
            - description: The service-generated identifier for the speaker enrollment job.
        JobName:
          allOf:
            - $ref: '#/components/schemas/JobName'
            - description: The client-provided name for the speaker enrollment job.
        JobProgress:
          allOf:
            - $ref: '#/components/schemas/JobProgress'
            - description: Provides details on job progress. This field shows the completed percentage of registration requests listed in the input file.
        JobStatus:
          allOf:
            - $ref: '#/components/schemas/SpeakerEnrollmentJobStatus'
            - description: The current status of the speaker enrollment job.
        OutputDataConfig:
          allOf:
            - $ref: '#/components/schemas/OutputDataConfig'
            - description: The output data config containing the S3 location where Voice ID writes the job output file; you must also include a KMS key ID to encrypt the file.
      description: Contains all the information about a speaker enrollment job.
    Speaker:
      type: object
      properties:
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'A timestamp of when the speaker was created. '
        CustomerSpeakerId:
          allOf:
            - $ref: '#/components/schemas/CustomerSpeakerId'
            - description: The client-provided identifier for the speaker.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the speaker.
        GeneratedSpeakerId:
          allOf:
            - $ref: '#/components/schemas/GeneratedSpeakerId'
            - description: The service-generated identifier for the speaker.
        LastAccessedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp of when the speaker was last accessed for enrollment, re-enrollment or a successful authentication. This timestamp is accurate to one hour.'
        Status:
          allOf:
            - $ref: '#/components/schemas/SpeakerStatus'
            - description: The current status of the speaker.
        UpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp of the speaker's last update.
      description: Contains all the information about a speaker.
    DomainStatus:
      type: string
      enum:
        - ACTIVE
        - PENDING
        - SUSPENDED
    ServerSideEncryptionUpdateDetails:
      type: object
      properties:
        Message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Message explaining the current UpdateStatus. When the UpdateStatus is FAILED, this message explains the cause of the failure.'
        OldKmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: 'The previous KMS key ID the domain was encrypted with, before ServerSideEncryptionConfiguration was updated to a new KMS key ID.'
        UpdateStatus:
          allOf:
            - $ref: '#/components/schemas/ServerSideEncryptionUpdateStatus'
            - description: 'Status of the server-side encryption update. During an update, if there is an issue with the domain''s current or old KMS key ID, such as an inaccessible or disabled key, then the status is FAILED. In order to resolve this, the key needs to be made accessible, and then an UpdateDomain call with the existing server-side encryption configuration will re-attempt this update process.'
      description: 'Details about the most recent server-side encryption configuration update. When the server-side encryption configuration is changed, dependency on the old KMS key is removed through an asynchronous process. When this update is complete, the domain’s data can only be accessed using the new KMS key.'
    WatchlistDetails:
      type: object
      required:
        - DefaultWatchlistId
      properties:
        DefaultWatchlistId:
          allOf:
            - $ref: '#/components/schemas/WatchlistId'
            - description: The identifier of the default watchlist.
      description: Details of the watchlists in a domain.
    DomainSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) for the domain.
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp of when the domain was created.
        Description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the domain.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain.
        DomainStatus:
          allOf:
            - $ref: '#/components/schemas/DomainStatus'
            - description: The current status of the domain.
        Name:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: The client-provided name for the domain.
        ServerSideEncryptionConfiguration:
          allOf:
            - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
            - description: The server-side encryption configuration containing the KMS key identifier you want Voice ID to use to encrypt your data.
        ServerSideEncryptionUpdateDetails:
          allOf:
            - $ref: '#/components/schemas/ServerSideEncryptionUpdateDetails'
            - description: 'Details about the most recent server-side encryption configuration update. When the server-side encryption configuration is changed, dependency on the old KMS key is removed through an asynchronous process. When this update is complete, the domain''s data can only be accessed using the new KMS key.'
        UpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp of when the domain was last updated.
        WatchlistDetails:
          allOf:
            - $ref: '#/components/schemas/WatchlistDetails'
            - description: 'Provides information about <code>watchlistDetails</code> and <code>DefaultWatchlistID</code>. '
      description: Contains a summary of information about a domain.
    DomainSummaries:
      type: array
      items:
        $ref: '#/components/schemas/DomainSummary'
    DuplicateRegistrationAction:
      type: string
      enum:
        - SKIP
        - REGISTER_AS_NEW
    ExistingEnrollmentAction:
      type: string
      enum:
        - SKIP
        - OVERWRITE
    EnrollmentJobFraudDetectionConfig:
      type: object
      properties:
        FraudDetectionAction:
          allOf:
            - $ref: '#/components/schemas/FraudDetectionAction'
            - description: 'The action to take when the given speaker is flagged by the fraud detection system. The default value is <code>FAIL</code>, which fails the speaker enrollment. Changing this value to <code>IGNORE</code> results in the speaker being enrolled even if they are flagged by the fraud detection system.'
        RiskThreshold:
          allOf:
            - $ref: '#/components/schemas/Score'
            - description: 'Threshold value for determining whether the speaker is a high risk to be fraudulent. If the detected risk score calculated by Voice ID is greater than or equal to the threshold, the speaker is considered a fraudster.'
        WatchlistIds:
          allOf:
            - $ref: '#/components/schemas/EnrollmentJobFraudDetectionConfigWatchlistIds'
            - description: 'The identifier of watchlists against which fraud detection is performed. '
      description: The fraud detection configuration to be used during the batch speaker enrollment job.
    EnrollmentConfig:
      type: object
      properties:
        ExistingEnrollmentAction:
          allOf:
            - $ref: '#/components/schemas/ExistingEnrollmentAction'
            - description: ' The action to take when the specified speaker is already enrolled in the specified domain. The default value is <code>SKIP</code>, which skips the enrollment for the existing speaker. Setting the value to <code>OVERWRITE</code> replaces the existing voice prints and enrollment audio stored for that speaker with new data generated from the latest audio.'
        FraudDetectionConfig:
          allOf:
            - $ref: '#/components/schemas/EnrollmentJobFraudDetectionConfig'
            - description: The fraud detection configuration to use for the speaker enrollment job.
      description: Contains configurations defining enrollment behavior for the batch job.
    FraudDetectionAction:
      type: string
      enum:
        - IGNORE
        - FAIL
    EnrollmentJobFraudDetectionConfigWatchlistIds:
      type: array
      items:
        $ref: '#/components/schemas/WatchlistId'
      minItems: 1
      maxItems: 1
    SessionNameOrId:
      type: string
      pattern: '^(id#[a-zA-Z0-9]{22}|[a-zA-Z0-9][a-zA-Z0-9_-]*)$'
      minLength: 1
      maxLength: 36
    FraudDetectionResult:
      type: object
      properties:
        AudioAggregationEndedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp of when audio aggregation ended for this fraud detection result.
        AudioAggregationStartedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp of when audio aggregation started for this fraud detection result.
        Configuration:
          allOf:
            - $ref: '#/components/schemas/FraudDetectionConfiguration'
            - description: The <code>FraudDetectionConfiguration</code> used to generate this fraud detection result.
        Decision:
          allOf:
            - $ref: '#/components/schemas/FraudDetectionDecision'
            - description: 'The fraud detection decision produced by Voice ID, processed against the current session state and streamed audio of the speaker.'
        FraudDetectionResultId:
          allOf:
            - $ref: '#/components/schemas/UniqueIdLarge'
            - description: 'The unique identifier for this fraud detection result. Given there can be multiple fraud detections for a given session, this field helps in identifying if the returned result is from previous streaming activity or a new result. Note that in the absence of any new streaming activity or risk threshold changes, Voice ID always returns cached Fraud Detection result for this API.'
        Reasons:
          allOf:
            - $ref: '#/components/schemas/FraudDetectionReasons'
            - description: 'The reason speaker was flagged by the fraud detection system. This is only be populated if fraud detection Decision is <code>HIGH_RISK</code>, and the following possible values: <code>KNOWN_FRAUDSTER</code> and <code>VOICE_SPOOFING</code>.'
        RiskDetails:
          allOf:
            - $ref: '#/components/schemas/FraudRiskDetails'
            - description: 'Details about each risk analyzed for this speaker. Currently, this contains KnownFraudsterRisk and VoiceSpoofingRisk details.'
      description: 'The fraud detection result produced by Voice ID, processed against the current session state and streamed audio of the speaker.'
    SessionId:
      type: string
      pattern: '^id#[a-zA-Z0-9]{22}$'
      minLength: 25
      maxLength: 25
    SessionName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9_-]*$'
      minLength: 1
      maxLength: 36
    StreamingStatus:
      type: string
      enum:
        - PENDING_CONFIGURATION
        - ONGOING
        - ENDED
    String:
      type: string
      minLength: 1
    Integer:
      type: integer
    FailureDetails:
      type: object
      properties:
        Message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the error that caused the batch job failure.
        StatusCode:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: An HTTP status code representing the nature of the error.
      description: Contains error details for a failed batch job.
    FraudDetectionConfiguration:
      type: object
      properties:
        RiskThreshold:
          allOf:
            - $ref: '#/components/schemas/Score'
            - description: 'Threshold value for determining whether the speaker is a fraudster. If the detected risk score calculated by Voice ID is higher than the threshold, the speaker is considered a fraudster.'
        WatchlistId:
          allOf:
            - $ref: '#/components/schemas/WatchlistId'
            - description: 'The identifier of the watchlist against which fraud detection is performed. '
      description: The configuration used for performing fraud detection over a speaker during a session.
    FraudDetectionDecision:
      type: string
      enum:
        - HIGH_RISK
        - LOW_RISK
        - NOT_ENOUGH_SPEECH
    FraudDetectionReason:
      type: string
      enum:
        - KNOWN_FRAUDSTER
        - VOICE_SPOOFING
    FraudDetectionReasons:
      type: array
      items:
        $ref: '#/components/schemas/FraudDetectionReason'
      minItems: 0
      maxItems: 3
    FraudRiskDetails:
      type: object
      required:
        - KnownFraudsterRisk
        - VoiceSpoofingRisk
      properties:
        KnownFraudsterRisk:
          allOf:
            - $ref: '#/components/schemas/KnownFraudsterRisk'
            - description: The details resulting from 'Known Fraudster Risk' analysis of the speaker.
        VoiceSpoofingRisk:
          allOf:
            - $ref: '#/components/schemas/VoiceSpoofingRisk'
            - description: The details resulting from 'Voice Spoofing Risk' analysis of the speaker.
      description: Details regarding various fraud risk analyses performed against the current session state and streamed audio of the speaker.
    KnownFraudsterRisk:
      type: object
      required:
        - RiskScore
      properties:
        GeneratedFraudsterId:
          allOf:
            - $ref: '#/components/schemas/GeneratedFraudsterId'
            - description: 'The identifier of the fraudster that is the closest match to the speaker. If there are no fraudsters registered in a given domain, or if there are no fraudsters with a non-zero RiskScore, this value is <code>null</code>.'
        RiskScore:
          allOf:
            - $ref: '#/components/schemas/Score'
            - description: The score indicating the likelihood the speaker is a known fraudster.
      description: Contains details produced as a result of performing known fraudster risk analysis on a speaker.
    VoiceSpoofingRisk:
      type: object
      required:
        - RiskScore
      properties:
        RiskScore:
          allOf:
            - $ref: '#/components/schemas/Score'
            - description: The score indicating the likelihood of speaker’s voice being spoofed.
      description: The details resulting from 'Voice Spoofing Risk' analysis of the speaker.
    GeneratedFraudsterId:
      type: string
      pattern: '^id#[a-zA-Z0-9]{22}$'
      minLength: 25
      maxLength: 25
    ResponseWatchlistIds:
      type: array
      items:
        $ref: '#/components/schemas/WatchlistId'
    IamRoleArn:
      type: string
      pattern: '^arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+$'
      minLength: 20
      maxLength: 2048
    InputDataConfig:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          allOf:
            - $ref: '#/components/schemas/S3Uri'
            - description: The S3 location for the input manifest file that contains the list of individual enrollment or registration job requests.
      description: The configuration containing input file information for a batch job.
    JobName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9_-]*$'
      minLength: 1
      maxLength: 256
      format: password
    JobProgress:
      type: object
      properties:
        PercentComplete:
          allOf:
            - $ref: '#/components/schemas/Score'
            - description: Shows the completed percentage of enrollment or registration requests listed in the input file.
      description: Indicates the completion progress for a batch job.
    FraudsterRegistrationJobStatus:
      type: string
      enum:
        - SUBMITTED
        - IN_PROGRESS
        - COMPLETED
        - COMPLETED_WITH_ERRORS
        - FAILED
    OutputDataConfig:
      type: object
      required:
        - S3Uri
      properties:
        KmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: 'The identifier of the KMS key you want Voice ID to use to encrypt the output file of a speaker enrollment job/fraudster registration job. '
        S3Uri:
          allOf:
            - $ref: '#/components/schemas/S3Uri'
            - description: 'The S3 path of the folder where Voice ID writes the job output file. It has a <code>*.out</code> extension. For example, if the input file name is <code>input-file.json</code> and the output folder path is <code>s3://output-bucket/output-folder</code>, the full output file path is <code>s3://output-bucket/output-folder/job-Id/input-file.json.out</code>.'
      description: The configuration containing output file information for a batch job.
    RegistrationConfig:
      type: object
      properties:
        DuplicateRegistrationAction:
          allOf:
            - $ref: '#/components/schemas/DuplicateRegistrationAction'
            - description: 'The action to take when a fraudster is identified as a duplicate. The default action is <code>SKIP</code>, which skips registering the duplicate fraudster. Setting the value to <code>REGISTER_AS_NEW</code> always registers a new fraudster into the specified domain.'
        FraudsterSimilarityThreshold:
          allOf:
            - $ref: '#/components/schemas/Score'
            - description: The minimum similarity score between the new and old fraudsters in order to consider the new fraudster a duplicate.
        WatchlistIds:
          allOf:
            - $ref: '#/components/schemas/RegistrationConfigWatchlistIds'
            - description: 'The identifiers of watchlists that a fraudster is registered to. If a watchlist isn''t provided, the fraudsters are registered to the default watchlist. '
      description: The registration configuration to be used during the batch fraudster registration job.
    FraudsterRegistrationJobSummary:
      type: object
      properties:
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'A timestamp of when the fraudster registration job was created. '
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the fraudster registration job.
        EndedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp of when the fraudster registration job ended.
        FailureDetails:
          allOf:
            - $ref: '#/components/schemas/FailureDetails'
            - description: 'Contains details that are populated when an entire batch job fails. In cases of individual registration job failures, the batch job as a whole doesn''t fail; it is completed with a <code>JobStatus</code> of <code>COMPLETED_WITH_ERRORS</code>. You can use the job output file to identify the individual registration requests that failed.'
        JobId:
          allOf:
            - $ref: '#/components/schemas/JobId'
            - description: The service-generated identifier for the fraudster registration job.
        JobName:
          allOf:
            - $ref: '#/components/schemas/JobName'
            - description: The client-provided name for the fraudster registration job.
        JobProgress:
          allOf:
            - $ref: '#/components/schemas/JobProgress'
            - description: Shows the completed percentage of registration requests listed in the input file.
        JobStatus:
          allOf:
            - $ref: '#/components/schemas/FraudsterRegistrationJobStatus'
            - description: The current status of the fraudster registration job.
      description: Contains a summary of information about a fraudster registration job.
    FraudsterRegistrationJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/FraudsterRegistrationJobSummary'
    FraudsterSummary:
      type: object
      properties:
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp of when the fraudster summary was created.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the fraudster summary.
        GeneratedFraudsterId:
          allOf:
            - $ref: '#/components/schemas/GeneratedFraudsterId'
            - description: The service-generated identifier for the fraudster.
        WatchlistIds:
          allOf:
            - $ref: '#/components/schemas/ResponseWatchlistIds'
            - description: The identifier of the watchlists the fraudster is a part of.
      description: 'Contains a summary of information about a fraudster. '
    FraudsterSummaries:
      type: array
      items:
        $ref: '#/components/schemas/FraudsterSummary'
    S3Uri:
      type: string
      pattern: '^s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?$'
      minLength: 0
      maxLength: 1024
    KmsKeyId:
      type: string
      minLength: 1
      maxLength: 2048
    MaxResultsForListDomainFe:
      type: integer
      minimum: 1
      maximum: 10
    NextToken:
      type: string
      pattern: '^\p{ASCII}{0,8192}$'
      minLength: 0
      maxLength: 8192
    MaxResultsForList:
      type: integer
      minimum: 1
      maximum: 100
    SpeakerEnrollmentJobStatus:
      type: string
      enum:
        - SUBMITTED
        - IN_PROGRESS
        - COMPLETED
        - COMPLETED_WITH_ERRORS
        - FAILED
    SpeakerEnrollmentJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SpeakerEnrollmentJobSummary'
    SpeakerSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SpeakerSummary'
    WatchlistSummaries:
      type: array
      items:
        $ref: '#/components/schemas/WatchlistSummary'
    RegistrationConfigWatchlistIds:
      type: array
      items:
        $ref: '#/components/schemas/WatchlistId'
      minItems: 1
      maxItems: 1
    ServerSideEncryptionUpdateStatus:
      type: string
      enum:
        - IN_PROGRESS
        - COMPLETED
        - FAILED
    SpeakerStatus:
      type: string
      enum:
        - ENROLLED
        - EXPIRED
        - OPTED_OUT
        - PENDING
    SpeakerEnrollmentJobSummary:
      type: object
      properties:
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp of when of the speaker enrollment job was created.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the speaker enrollment job.
        EndedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp of when the speaker enrollment job ended.
        FailureDetails:
          allOf:
            - $ref: '#/components/schemas/FailureDetails'
            - description: 'Contains details that are populated when an entire batch job fails. In cases of individual registration job failures, the batch job as a whole doesn''t fail; it is completed with a <code>JobStatus</code> of <code>COMPLETED_WITH_ERRORS</code>. You can use the job output file to identify the individual registration requests that failed.'
        JobId:
          allOf:
            - $ref: '#/components/schemas/JobId'
            - description: The service-generated identifier for the speaker enrollment job.
        JobName:
          allOf:
            - $ref: '#/components/schemas/JobName'
            - description: The client-provided name for the speaker enrollment job.
        JobProgress:
          allOf:
            - $ref: '#/components/schemas/JobProgress'
            - description: Provides details regarding job progress. This field shows the completed percentage of enrollment requests listed in the input file.
        JobStatus:
          allOf:
            - $ref: '#/components/schemas/SpeakerEnrollmentJobStatus'
            - description: The current status of the speaker enrollment job.
      description: Contains a summary of information about a speaker enrollment job.
    SpeakerSummary:
      type: object
      properties:
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'A timestamp showing the speaker''s creation time. '
        CustomerSpeakerId:
          allOf:
            - $ref: '#/components/schemas/CustomerSpeakerId'
            - description: The client-provided identifier for the speaker.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the speaker.
        GeneratedSpeakerId:
          allOf:
            - $ref: '#/components/schemas/GeneratedSpeakerId'
            - description: 'The service-generated identifier for the speaker. '
        LastAccessedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp when the speaker was last accessed for enrollment, re-enrollment or a successful authentication. This timestamp is accurate to one hour.'
        Status:
          allOf:
            - $ref: '#/components/schemas/SpeakerStatus'
            - description: The current status of the speaker.
        UpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp showing the speaker's last update.
      description: Contains a summary of information about a speaker.
    TagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
      format: password
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 0
      maxLength: 256
      format: password
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/TagKey'
            - description: 'The first part of a key:value pair that forms a tag associated with a given resource. For example, in the tag ''Department'':''Sales'', the key is ''Department''. '
        Value:
          allOf:
            - $ref: '#/components/schemas/TagValue'
            - description: 'The second part of a key:value pair that forms a tag associated with a given resource. For example, in the tag ''Department'':''Sales'', the value is ''Sales''. '
      description: 'The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.'
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
    WatchlistSummary:
      type: object
      properties:
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp of when the watchlist was created.
        DefaultWatchlist:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether the specified watchlist is the default watchlist of a domain.
        Description:
          allOf:
            - $ref: '#/components/schemas/WatchlistDescription'
            - description: The description of the watchlist.
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: The identifier of the domain that contains the watchlist.
        Name:
          allOf:
            - $ref: '#/components/schemas/WatchlistName'
            - description: The name for the watchlist.
        UpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp of when the watchlist was last updated.
        WatchlistId:
          allOf:
            - $ref: '#/components/schemas/WatchlistId'
            - description: The identifier of the watchlist.
      description: Contains a summary of information about a watchlist.
security:
  - hmac: []
