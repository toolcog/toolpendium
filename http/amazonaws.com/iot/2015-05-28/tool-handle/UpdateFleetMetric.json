{
  "name": "UpdateFleetMetric",
  "description": "<p>Updates the data for a fleet metric.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateFleetMetric</a> action.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "metricName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_\\-\\.]+",
        "minLength": 1,
        "maxLength": 128,
        "description": "The name of the fleet metric to update."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "indexName"
        ],
        "properties": {
          "queryString": {
            "description": "The search query string.",
            "type": "string",
            "minLength": 1
          },
          "aggregationType": {
            "description": "The type of aggregation queries.",
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AggregationTypeName"
                  },
                  {
                    "description": "The name of the aggregation type."
                  }
                ]
              },
              "values": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AggregationTypeValues"
                  },
                  {
                    "description": "A list of the values of aggregation types."
                  }
                ]
              }
            }
          },
          "period": {
            "description": "The time in seconds between fleet metric emissions. Range [60(1 min), 86400(1 day)] and must be multiple of 60.",
            "type": "integer",
            "minimum": 60,
            "maximum": 86400
          },
          "aggregationField": {
            "description": "The field to aggregate.",
            "type": "string",
            "minLength": 1
          },
          "description": {
            "description": "The description of the fleet metric.",
            "type": "string",
            "pattern": "[\\p{Graph}\\x20]*",
            "maxLength": 1024
          },
          "queryVersion": {
            "description": "The version of the query.",
            "type": "string"
          },
          "indexName": {
            "description": "The name of the index to search.",
            "type": "string",
            "pattern": "[a-zA-Z0-9:_-]+",
            "minLength": 1,
            "maxLength": 128
          },
          "unit": {
            "description": "Used to support unit transformation such as milliseconds to seconds. The unit must be supported by <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html\">CW metric</a>.",
            "type": "string",
            "enum": [
              "Seconds",
              "Microseconds",
              "Milliseconds",
              "Bytes",
              "Kilobytes",
              "Megabytes",
              "Gigabytes",
              "Terabytes",
              "Bits",
              "Kilobits",
              "Megabits",
              "Gigabits",
              "Terabits",
              "Percent",
              "Count",
              "Bytes/Second",
              "Kilobytes/Second",
              "Megabytes/Second",
              "Gigabytes/Second",
              "Terabytes/Second",
              "Bits/Second",
              "Kilobits/Second",
              "Megabits/Second",
              "Gigabits/Second",
              "Terabits/Second",
              "Count/Second",
              "None"
            ]
          },
          "expectedVersion": {
            "description": "The expected version of the fleet metric record in the registry.",
            "type": "integer"
          }
        }
      }
    },
    "required": [
      "metricName",
      "body"
    ],
    "$defs": {
      "AggregationTypeName": {
        "type": "string",
        "enum": [
          "Statistics",
          "Percentiles",
          "Cardinality"
        ]
      },
      "AggregationTypeValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AggregationTypeValue"
        }
      },
      "AggregationTypeValue": {
        "type": "string",
        "pattern": "[a-zA-Z0-9]+",
        "minLength": 1,
        "maxLength": 12
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "http://iot.us-east-1.amazonaws.com/fleet-metric/{metricName}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
