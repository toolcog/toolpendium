{
  "name": "CreateOTAUpdate",
  "description": "<p>Creates an IoT OTA update on a target group of things or groups.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateOTAUpdate</a> action.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "otaUpdateId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_-]+",
        "minLength": 1,
        "maxLength": 128,
        "description": "The ID of the OTA update to be created."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "targets",
          "files",
          "roleArn"
        ],
        "properties": {
          "description": {
            "description": "The description of the OTA update.",
            "type": "string",
            "pattern": "[^\\p{C}]+",
            "maxLength": 2028
          },
          "targets": {
            "description": "The devices targeted to receive OTA updates.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Target"
            },
            "minItems": 1
          },
          "protocols": {
            "description": "The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose the protocol.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Protocol"
            },
            "minItems": 1,
            "maxItems": 2
          },
          "targetSelection": {
            "description": "Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things specified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a thing when a change is detected in a target. For example, an update will run on a thing when the thing is added to a target group, even after the update was completed by all things originally in the group. Valid values: CONTINUOUS | SNAPSHOT.",
            "type": "string",
            "enum": [
              "CONTINUOUS",
              "SNAPSHOT"
            ]
          },
          "awsJobExecutionsRolloutConfig": {
            "description": "Configuration for the rollout of OTA updates.",
            "type": "object",
            "properties": {
              "maximumPerMinute": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MaximumPerMinute"
                  },
                  {
                    "description": "The maximum number of OTA update job executions started per minute."
                  }
                ]
              },
              "exponentialRate": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AwsJobExponentialRolloutRate"
                  },
                  {
                    "description": "The rate of increase for a job rollout. This parameter allows you to define an exponential rate increase for a job rollout."
                  }
                ]
              }
            }
          },
          "awsJobPresignedUrlConfig": {
            "description": "Configuration information for pre-signed URLs. Valid when <code>protocols</code> contains HTTP.",
            "type": "object",
            "properties": {
              "expiresInSec": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExpiresInSeconds"
                  },
                  {
                    "description": "How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 1800 seconds. Pre-signed URLs are generated when a request for the job document is received."
                  }
                ]
              }
            }
          },
          "awsJobAbortConfig": {
            "description": "The criteria that determine when and how a job abort takes place.",
            "type": "object",
            "properties": {
              "abortCriteriaList": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AwsJobAbortCriteriaList"
                  },
                  {
                    "description": "The list of criteria that determine when and how to abort the job."
                  }
                ]
              }
            }
          },
          "awsJobTimeoutConfig": {
            "description": "Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.",
            "type": "object",
            "properties": {
              "inProgressTimeoutInMinutes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AwsJobTimeoutInProgressTimeoutInMinutes"
                  },
                  {
                    "description": "Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can't be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status."
                  }
                ]
              }
            }
          },
          "files": {
            "description": "The files to be streamed by the OTA update.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/OTAUpdateFile"
            },
            "minItems": 1
          },
          "roleArn": {
            "description": "The IAM role that grants Amazon Web Services IoT Core access to the Amazon S3, IoT jobs and Amazon Web Services Code Signing resources to create an OTA update job.",
            "type": "string",
            "minLength": 20,
            "maxLength": 2048
          },
          "additionalParameters": {
            "description": "A list of additional OTA update parameters which are name-value pairs.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/Value"
            }
          },
          "tags": {
            "description": "Metadata which can be used to manage updates.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            }
          }
        }
      }
    },
    "required": [
      "otaUpdateId",
      "body"
    ],
    "$defs": {
      "Target": {
        "type": "string"
      },
      "Protocol": {
        "type": "string",
        "enum": [
          "MQTT",
          "HTTP"
        ]
      },
      "MaximumPerMinute": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1000
      },
      "AwsJobExponentialRolloutRate": {
        "type": "object",
        "required": [
          "baseRatePerMinute",
          "incrementFactor",
          "rateIncreaseCriteria"
        ],
        "properties": {
          "baseRatePerMinute": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsJobRolloutRatePerMinute"
              },
              {
                "description": "The minimum number of things that will be notified of a pending job, per minute, at the start of the job rollout. This is the initial rate of the rollout."
              }
            ]
          },
          "incrementFactor": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsJobRolloutIncrementFactor"
              },
              {
                "description": "The rate of increase for a job rollout. The number of things notified is multiplied by this factor."
              }
            ]
          },
          "rateIncreaseCriteria": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsJobRateIncreaseCriteria"
              },
              {
                "description": "<p>The criteria to initiate the increase in rate of rollout for a job.</p> <p>Amazon Web Services IoT Core supports up to one digit after the decimal (for example, 1.5, but not 1.55).</p>"
              }
            ]
          }
        },
        "description": "The rate of increase for a job rollout. This parameter allows you to define an exponential rate increase for a job rollout."
      },
      "AwsJobRolloutRatePerMinute": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1000
      },
      "AwsJobRolloutIncrementFactor": {
        "type": "number",
        "format": "double"
      },
      "AwsJobRateIncreaseCriteria": {
        "type": "object",
        "properties": {
          "numberOfNotifiedThings": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsJobRateIncreaseCriteriaNumberOfThings"
              },
              {
                "description": "When this number of things have been notified, it will initiate an increase in the rollout rate."
              }
            ]
          },
          "numberOfSucceededThings": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsJobRateIncreaseCriteriaNumberOfThings"
              },
              {
                "description": "When this number of things have succeeded in their job execution, it will initiate an increase in the rollout rate."
              }
            ]
          }
        },
        "description": "The criteria to initiate the increase in rate of rollout for a job."
      },
      "AwsJobRateIncreaseCriteriaNumberOfThings": {
        "type": "integer",
        "minimum": 1
      },
      "ExpiresInSeconds": {
        "type": "integer"
      },
      "AwsJobAbortCriteriaList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AwsJobAbortCriteria"
        },
        "minItems": 1
      },
      "AwsJobAbortCriteria": {
        "type": "object",
        "required": [
          "failureType",
          "action",
          "thresholdPercentage",
          "minNumberOfExecutedThings"
        ],
        "properties": {
          "failureType": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsJobAbortCriteriaFailureType"
              },
              {
                "description": "The type of job execution failures that can initiate a job abort."
              }
            ]
          },
          "action": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsJobAbortCriteriaAbortAction"
              },
              {
                "description": "The type of job action to take to initiate the job abort."
              }
            ]
          },
          "thresholdPercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsJobAbortCriteriaAbortThresholdPercentage"
              },
              {
                "description": "<p>The minimum percentage of job execution failures that must occur to initiate the job abort.</p> <p>Amazon Web Services IoT Core supports up to two digits after the decimal (for example, 10.9 and 10.99, but not 10.999).</p>"
              }
            ]
          },
          "minNumberOfExecutedThings": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsJobAbortCriteriaMinimumNumberOfExecutedThings"
              },
              {
                "description": "The minimum number of things which must receive job execution notifications before the job can be aborted."
              }
            ]
          }
        },
        "description": "The criteria that determine when and how a job abort takes place."
      },
      "AwsJobAbortCriteriaFailureType": {
        "type": "string",
        "enum": [
          "FAILED",
          "REJECTED",
          "TIMED_OUT",
          "ALL"
        ]
      },
      "AwsJobAbortCriteriaAbortAction": {
        "type": "string",
        "enum": [
          "CANCEL"
        ]
      },
      "AwsJobAbortCriteriaAbortThresholdPercentage": {
        "type": "number",
        "format": "double",
        "maximum": 100
      },
      "AwsJobAbortCriteriaMinimumNumberOfExecutedThings": {
        "type": "integer",
        "minimum": 1
      },
      "AwsJobTimeoutInProgressTimeoutInMinutes": {
        "type": "integer"
      },
      "OTAUpdateFile": {
        "type": "object",
        "properties": {
          "fileName": {
            "allOf": [
              {
                "$ref": "#/$defs/FileName"
              },
              {
                "description": "The name of the file."
              }
            ]
          },
          "fileType": {
            "allOf": [
              {
                "$ref": "#/$defs/FileType"
              },
              {
                "description": "An integer value you can include in the job document to allow your devices to identify the type of file received from the cloud."
              }
            ]
          },
          "fileVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/OTAUpdateFileVersion"
              },
              {
                "description": "The file version."
              }
            ]
          },
          "fileLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/FileLocation"
              },
              {
                "description": "The location of the updated firmware."
              }
            ]
          },
          "codeSigning": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeSigning"
              },
              {
                "description": "The code signing method of the file."
              }
            ]
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributesMap"
              },
              {
                "description": "A list of name/attribute pairs."
              }
            ]
          }
        },
        "description": "Describes a file to be associated with an OTA update."
      },
      "FileName": {
        "type": "string"
      },
      "FileType": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "OTAUpdateFileVersion": {
        "type": "string"
      },
      "FileLocation": {
        "type": "object",
        "properties": {
          "stream": {
            "allOf": [
              {
                "$ref": "#/$defs/Stream"
              },
              {
                "description": "The stream that contains the OTA update."
              }
            ]
          },
          "s3Location": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Location"
              },
              {
                "description": "The location of the updated firmware in S3."
              }
            ]
          }
        },
        "description": "The location of the OTA update."
      },
      "Stream": {
        "type": "object",
        "properties": {
          "streamId": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamId"
              },
              {
                "description": "The stream ID."
              }
            ]
          },
          "fileId": {
            "allOf": [
              {
                "$ref": "#/$defs/FileId"
              },
              {
                "description": "The ID of a file associated with a stream."
              }
            ]
          }
        },
        "description": "Describes a group of files that can be streamed."
      },
      "StreamId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "FileId": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "S3Location": {
        "type": "object",
        "properties": {
          "bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Bucket"
              },
              {
                "description": "The S3 bucket."
              }
            ]
          },
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Key"
              },
              {
                "description": "The S3 key."
              }
            ]
          },
          "version": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Version"
              },
              {
                "description": "The S3 bucket version."
              }
            ]
          }
        },
        "description": "The S3 location."
      },
      "S3Bucket": {
        "type": "string",
        "minLength": 1
      },
      "S3Key": {
        "type": "string",
        "minLength": 1
      },
      "S3Version": {
        "type": "string"
      },
      "CodeSigning": {
        "type": "object",
        "properties": {
          "awsSignerJobId": {
            "allOf": [
              {
                "$ref": "#/$defs/SigningJobId"
              },
              {
                "description": "The ID of the <code>AWSSignerJob</code> which was created to sign the file."
              }
            ]
          },
          "startSigningJobParameter": {
            "allOf": [
              {
                "$ref": "#/$defs/StartSigningJobParameter"
              },
              {
                "description": "Describes the code-signing job."
              }
            ]
          },
          "customCodeSigning": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomCodeSigning"
              },
              {
                "description": "A custom method for code signing a file."
              }
            ]
          }
        },
        "description": "Describes the method to use when code signing a file."
      },
      "SigningJobId": {
        "type": "string"
      },
      "StartSigningJobParameter": {
        "type": "object",
        "properties": {
          "signingProfileParameter": {
            "allOf": [
              {
                "$ref": "#/$defs/SigningProfileParameter"
              },
              {
                "description": "Describes the code-signing profile."
              }
            ]
          },
          "signingProfileName": {
            "allOf": [
              {
                "$ref": "#/$defs/SigningProfileName"
              },
              {
                "description": "The code-signing profile name."
              }
            ]
          },
          "destination": {
            "allOf": [
              {
                "$ref": "#/$defs/Destination"
              },
              {
                "description": "The location to write the code-signed file."
              }
            ]
          }
        },
        "description": "Information required to start a signing job."
      },
      "SigningProfileParameter": {
        "type": "object",
        "properties": {
          "certificateArn": {
            "allOf": [
              {
                "$ref": "#/$defs/CertificateArn"
              },
              {
                "description": "Certificate ARN."
              }
            ]
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/$defs/Platform"
              },
              {
                "description": "The hardware platform of your device."
              }
            ]
          },
          "certificatePathOnDevice": {
            "allOf": [
              {
                "$ref": "#/$defs/CertificatePathOnDevice"
              },
              {
                "description": "The location of the code-signing certificate on your device."
              }
            ]
          }
        },
        "description": "Describes the code-signing profile."
      },
      "CertificateArn": {
        "type": "string"
      },
      "Platform": {
        "type": "string"
      },
      "CertificatePathOnDevice": {
        "type": "string"
      },
      "SigningProfileName": {
        "type": "string"
      },
      "Destination": {
        "type": "object",
        "properties": {
          "s3Destination": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Destination"
              },
              {
                "description": "Describes the location in S3 of the updated firmware."
              }
            ]
          }
        },
        "description": "Describes the location of the updated firmware."
      },
      "S3Destination": {
        "type": "object",
        "properties": {
          "bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Bucket"
              },
              {
                "description": "The S3 bucket that contains the updated firmware."
              }
            ]
          },
          "prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/Prefix"
              },
              {
                "description": "The S3 prefix."
              }
            ]
          }
        },
        "description": "Describes the location of updated firmware in S3."
      },
      "Prefix": {
        "type": "string"
      },
      "CustomCodeSigning": {
        "type": "object",
        "properties": {
          "signature": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeSigningSignature"
              },
              {
                "description": "The signature for the file."
              }
            ]
          },
          "certificateChain": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeSigningCertificateChain"
              },
              {
                "description": "The certificate chain."
              }
            ]
          },
          "hashAlgorithm": {
            "allOf": [
              {
                "$ref": "#/$defs/HashAlgorithm"
              },
              {
                "description": "The hash algorithm used to code sign the file. You can use a string as the algorithm name if the target over-the-air (OTA) update devices are able to verify the signature that was generated using the same signature algorithm. For example, FreeRTOS uses <code>SHA256</code> or <code>SHA1</code>, so you can pass either of them based on which was used for generating the signature."
              }
            ]
          },
          "signatureAlgorithm": {
            "allOf": [
              {
                "$ref": "#/$defs/SignatureAlgorithm"
              },
              {
                "description": "The signature algorithm used to code sign the file. You can use a string as the algorithm name if the target over-the-air (OTA) update devices are able to verify the signature that was generated using the same signature algorithm. For example, FreeRTOS uses <code>ECDSA</code> or <code>RSA</code>, so you can pass either of them based on which was used for generating the signature."
              }
            ]
          }
        },
        "description": "Describes a custom method used to code sign a file."
      },
      "CodeSigningSignature": {
        "type": "object",
        "properties": {
          "inlineDocument": {
            "allOf": [
              {
                "$ref": "#/$defs/Signature"
              },
              {
                "description": "A base64 encoded binary representation of the code signing signature."
              }
            ]
          }
        },
        "description": "Describes the signature for a file."
      },
      "Signature": {
        "type": "string"
      },
      "CodeSigningCertificateChain": {
        "type": "object",
        "properties": {
          "certificateName": {
            "allOf": [
              {
                "$ref": "#/$defs/CertificateName"
              },
              {
                "description": "The name of the certificate."
              }
            ]
          },
          "inlineDocument": {
            "allOf": [
              {
                "$ref": "#/$defs/InlineDocument"
              },
              {
                "description": "A base64 encoded binary representation of the code signing certificate chain."
              }
            ]
          }
        },
        "description": "Describes the certificate chain being used when code signing a file."
      },
      "CertificateName": {
        "type": "string"
      },
      "InlineDocument": {
        "type": "string"
      },
      "HashAlgorithm": {
        "type": "string"
      },
      "SignatureAlgorithm": {
        "type": "string"
      },
      "AttributesMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/Value"
        }
      },
      "Value": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 0,
        "maxLength": 4096
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag's key."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag's value."
              }
            ]
          }
        },
        "description": "A set of key/value pairs that are used to manage the resource."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iot.us-east-1.amazonaws.com/otaUpdates/{otaUpdateId}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**otaUpdateId**",
            "**awsIotJobId**",
            "**otaUpdateArn**",
            "**awsIotJobArn**",
            "**otaUpdateStatus**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
