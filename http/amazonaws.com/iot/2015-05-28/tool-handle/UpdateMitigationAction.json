{
  "name": "UpdateMitigationAction",
  "description": "<p>Updates the definition for the specified mitigation action.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateMitigationAction</a> action.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "actionName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_-]+",
        "maxLength": 128,
        "description": "The friendly name for the mitigation action. You cannot change the name by using <code>UpdateMitigationAction</code>. Instead, you must delete and recreate the mitigation action with the new name."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "roleArn": {
            "description": "The ARN of the IAM role that is used to apply the mitigation action.",
            "type": "string",
            "minLength": 20,
            "maxLength": 2048
          },
          "actionParams": {
            "description": "The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).",
            "type": "object",
            "properties": {
              "updateDeviceCertificateParams": {
                "allOf": [
                  {
                    "$ref": "#/$defs/UpdateDeviceCertificateParams"
                  },
                  {
                    "description": "Parameters to define a mitigation action that changes the state of the device certificate to inactive."
                  }
                ]
              },
              "updateCACertificateParams": {
                "allOf": [
                  {
                    "$ref": "#/$defs/UpdateCACertificateParams"
                  },
                  {
                    "description": "Parameters to define a mitigation action that changes the state of the CA certificate to inactive."
                  }
                ]
              },
              "addThingsToThingGroupParams": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AddThingsToThingGroupParams"
                  },
                  {
                    "description": "Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine."
                  }
                ]
              },
              "replaceDefaultPolicyVersionParams": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ReplaceDefaultPolicyVersionParams"
                  },
                  {
                    "description": "Parameters to define a mitigation action that adds a blank policy to restrict permissions."
                  }
                ]
              },
              "enableIoTLoggingParams": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EnableIoTLoggingParams"
                  },
                  {
                    "description": "Parameters to define a mitigation action that enables Amazon Web Services IoT Core logging at a specified level of detail."
                  }
                ]
              },
              "publishFindingToSnsParams": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PublishFindingToSnsParams"
                  },
                  {
                    "description": "Parameters to define a mitigation action that publishes findings to Amazon Simple Notification Service (Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "actionName",
      "body"
    ],
    "$defs": {
      "UpdateDeviceCertificateParams": {
        "type": "object",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "allOf": [
              {
                "$ref": "#/$defs/DeviceCertificateUpdateAction"
              },
              {
                "description": "The action that you want to apply to the device certificate. The only supported value is <code>DEACTIVATE</code>."
              }
            ]
          }
        },
        "description": "Parameters to define a mitigation action that changes the state of the device certificate to inactive."
      },
      "DeviceCertificateUpdateAction": {
        "type": "string",
        "enum": [
          "DEACTIVATE"
        ]
      },
      "UpdateCACertificateParams": {
        "type": "object",
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "allOf": [
              {
                "$ref": "#/$defs/CACertificateUpdateAction"
              },
              {
                "description": "The action that you want to apply to the CA certificate. The only supported value is <code>DEACTIVATE</code>."
              }
            ]
          }
        },
        "description": "Parameters to define a mitigation action that changes the state of the CA certificate to inactive."
      },
      "CACertificateUpdateAction": {
        "type": "string",
        "enum": [
          "DEACTIVATE"
        ]
      },
      "AddThingsToThingGroupParams": {
        "type": "object",
        "required": [
          "thingGroupNames"
        ],
        "properties": {
          "thingGroupNames": {
            "allOf": [
              {
                "$ref": "#/$defs/ThingGroupNames"
              },
              {
                "description": "The list of groups to which you want to add the things that triggered the mitigation action. You can add a thing to a maximum of 10 groups, but you can't add a thing to more than one group in the same hierarchy."
              }
            ]
          },
          "overrideDynamicGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/NullableBoolean"
              },
              {
                "description": "Specifies if this mitigation action can move the things that triggered the mitigation action even if they are part of one or more dynamic thing groups."
              }
            ]
          }
        },
        "description": "Parameters used when defining a mitigation action that move a set of things to a thing group."
      },
      "ThingGroupNames": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ThingGroupName"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "ThingGroupName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9:_-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "NullableBoolean": {
        "type": "boolean"
      },
      "ReplaceDefaultPolicyVersionParams": {
        "type": "object",
        "required": [
          "templateName"
        ],
        "properties": {
          "templateName": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyTemplateName"
              },
              {
                "description": "The name of the template to be applied. The only supported value is <code>BLANK_POLICY</code>."
              }
            ]
          }
        },
        "description": "Parameters to define a mitigation action that adds a blank policy to restrict permissions."
      },
      "PolicyTemplateName": {
        "type": "string",
        "enum": [
          "BLANK_POLICY"
        ]
      },
      "EnableIoTLoggingParams": {
        "type": "object",
        "required": [
          "roleArnForLogging",
          "logLevel"
        ],
        "properties": {
          "roleArnForLogging": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the IAM role used for logging."
              }
            ]
          },
          "logLevel": {
            "allOf": [
              {
                "$ref": "#/$defs/LogLevel"
              },
              {
                "description": "Specifies the type of information to be logged."
              }
            ]
          }
        },
        "description": "Parameters used when defining a mitigation action that enable Amazon Web Services IoT Core logging."
      },
      "RoleArn": {
        "type": "string",
        "minLength": 20,
        "maxLength": 2048
      },
      "LogLevel": {
        "type": "string",
        "enum": [
          "DEBUG",
          "INFO",
          "ERROR",
          "WARN",
          "DISABLED"
        ]
      },
      "PublishFindingToSnsParams": {
        "type": "object",
        "required": [
          "topicArn"
        ],
        "properties": {
          "topicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/SnsTopicArn"
              },
              {
                "description": "The ARN of the topic to which you want to publish the findings."
              }
            ]
          }
        },
        "description": "Parameters to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages."
      },
      "SnsTopicArn": {
        "type": "string",
        "maxLength": 350
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "http://iot.us-east-1.amazonaws.com/mitigationactions/actions/{actionName}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**actionArn**",
            "**actionId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
