{
  "name": "CreateProvisioningTemplate",
  "description": "<p>Creates a provisioning template.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateProvisioningTemplate</a> action.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "templateName",
          "templateBody",
          "provisioningRoleArn"
        ],
        "properties": {
          "templateName": {
            "description": "The name of the provisioning template.",
            "type": "string",
            "pattern": "^[0-9A-Za-z_-]+$",
            "minLength": 1,
            "maxLength": 36
          },
          "description": {
            "description": "The description of the provisioning template.",
            "type": "string",
            "pattern": "[^\\p{C}]*",
            "minLength": 0,
            "maxLength": 500
          },
          "templateBody": {
            "description": "The JSON formatted contents of the provisioning template.",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 0,
            "maxLength": 10240
          },
          "enabled": {
            "description": "True to enable the provisioning template, otherwise false.",
            "type": "boolean"
          },
          "provisioningRoleArn": {
            "description": "The role ARN for the role associated with the provisioning template. This IoT role grants permission to provision a device.",
            "type": "string",
            "minLength": 20,
            "maxLength": 2048
          },
          "preProvisioningHook": {
            "description": "Structure that contains <code>payloadVersion</code> and <code>targetArn</code>.",
            "type": "object",
            "properties": {
              "payloadVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PayloadVersion"
                  },
                  {
                    "description": "<p>The payload that was sent to the target function.</p> <p> <i>Note:</i> Only Lambda functions are currently supported.</p>"
                  }
                ]
              },
              "targetArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TargetArn"
                  },
                  {
                    "description": "<p>The ARN of the target function.</p> <p> <i>Note:</i> Only Lambda functions are currently supported.</p>"
                  }
                ]
              }
            }
          },
          "tags": {
            "description": "<p>Metadata which can be used to manage the provisioning template.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags \"key1=value1&amp;key2=value2...\"</p> <p>For the cli-input-json file use format: \"tags\": \"key1=value1&amp;key2=value2...\"</p> </note>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            }
          },
          "type": {
            "description": "The type you define in a provisioning template. You can create a template with only one type. You can't change the template type after its creation. The default value is <code>FLEET_PROVISIONING</code>. For more information about provisioning template, see: <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html\">Provisioning template</a>. ",
            "type": "string",
            "enum": [
              "FLEET_PROVISIONING",
              "JITP"
            ]
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "PayloadVersion": {
        "type": "string",
        "pattern": "^[0-9-]+$",
        "minLength": 10,
        "maxLength": 32
      },
      "TargetArn": {
        "type": "string",
        "maxLength": 2048
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag's key."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag's value."
              }
            ]
          }
        },
        "description": "A set of key/value pairs that are used to manage the resource."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iot.us-east-1.amazonaws.com/provisioning-templates"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**templateArn**",
            "**templateName**",
            "**defaultVersionId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
