{
  "name": "TestInvokeAuthorizer",
  "description": "<p>Tests a custom authorization behavior by invoking a specified custom authorizer. Use this to test and debug the custom authorization behavior of devices that connect to the IoT device gateway.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">TestInvokeAuthorizer</a> action.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "authorizerName": {
        "type": "string",
        "pattern": "[\\w=,@-]+",
        "minLength": 1,
        "maxLength": 128,
        "description": "The custom authorizer name."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "token": {
            "description": "The token returned by your custom authentication service.",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 1,
            "maxLength": 6144
          },
          "tokenSignature": {
            "description": "The signature made with the token and your custom authentication service's private key. This value must be Base-64-encoded.",
            "type": "string",
            "pattern": "[A-Za-z0-9+/]+={0,2}",
            "minLength": 1,
            "maxLength": 2560
          },
          "httpContext": {
            "description": "Specifies the HTTP context to use for the test authorizer request.",
            "type": "object",
            "properties": {
              "headers": {
                "allOf": [
                  {
                    "$ref": "#/$defs/HttpHeaders"
                  },
                  {
                    "description": "The header keys and values in an HTTP authorization request."
                  }
                ]
              },
              "queryString": {
                "allOf": [
                  {
                    "$ref": "#/$defs/HttpQueryString"
                  },
                  {
                    "description": "The query string keys and values in an HTTP authorization request."
                  }
                ]
              }
            }
          },
          "mqttContext": {
            "description": "Specifies the MQTT context to use for the test authorizer request",
            "type": "object",
            "properties": {
              "username": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MqttUsername"
                  },
                  {
                    "description": "The value of the <code>username</code> key in an MQTT authorization request."
                  }
                ]
              },
              "password": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MqttPassword"
                  },
                  {
                    "description": "The value of the <code>password</code> key in an MQTT authorization request."
                  }
                ]
              },
              "clientId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MqttClientId"
                  },
                  {
                    "description": "The value of the <code>clientId</code> key in an MQTT authorization request."
                  }
                ]
              }
            }
          },
          "tlsContext": {
            "description": "Specifies the TLS context to use for the test authorizer request.",
            "type": "object",
            "properties": {
              "serverName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ServerName"
                  },
                  {
                    "description": "The value of the <code>serverName</code> key in a TLS authorization request."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "authorizerName",
      "body"
    ],
    "$defs": {
      "HttpHeaders": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/HttpHeaderValue"
        }
      },
      "HttpHeaderValue": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "maxLength": 8192
      },
      "HttpQueryString": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "maxLength": 4096
      },
      "MqttUsername": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "maxLength": 65535
      },
      "MqttPassword": {
        "type": "string",
        "minLength": 1,
        "maxLength": 65535
      },
      "MqttClientId": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "maxLength": 65535
      },
      "ServerName": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "maxLength": 253
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iot.us-east-1.amazonaws.com/authorizer/{authorizerName}/test"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**isAuthenticated**",
            "**principalId**",
            "**policyDocuments**",
            "**refreshAfterInSeconds**",
            "**disconnectAfterInSeconds**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
