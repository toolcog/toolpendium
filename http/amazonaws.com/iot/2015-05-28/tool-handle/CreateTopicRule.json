{
  "name": "CreateTopicRule",
  "description": "<p>Creates a rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateTopicRule</a> action.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "ruleName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_]+$",
        "minLength": 1,
        "maxLength": 128,
        "description": "The name of the rule."
      },
      "x-amz-tagging": {
        "type": "string",
        "description": "<p>Metadata which can be used to manage the topic rule.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: --tags \"key1=value1&amp;key2=value2...\"</p> <p>For the cli-input-json file use format: \"tags\": \"key1=value1&amp;key2=value2...\"</p> </note>"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "topicRulePayload"
        ],
        "properties": {
          "topicRulePayload": {
            "description": "Describes a rule.",
            "type": "object",
            "properties": {
              "sql": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SQL"
                  },
                  {
                    "description": "The SQL statement used to query the topic. For more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-reference.html\">IoT SQL Reference</a> in the <i>IoT Developer Guide</i>."
                  }
                ]
              },
              "description": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Description"
                  },
                  {
                    "description": "The description of the rule."
                  }
                ]
              },
              "actions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ActionList"
                  },
                  {
                    "description": "The actions associated with the rule."
                  }
                ]
              },
              "ruleDisabled": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IsDisabled"
                  },
                  {
                    "description": "Specifies whether the rule is disabled."
                  }
                ]
              },
              "awsIotSqlVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AwsIotSqlVersion"
                  },
                  {
                    "description": "The version of the SQL rules engine to use when evaluating the rule."
                  }
                ]
              },
              "errorAction": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Action"
                  },
                  {
                    "description": "The action to take when an error occurs."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "ruleName",
      "body"
    ],
    "$defs": {
      "SQL": {
        "type": "string"
      },
      "Description": {
        "type": "string"
      },
      "ActionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Action"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "Action": {
        "type": "object",
        "properties": {
          "dynamoDB": {
            "allOf": [
              {
                "$ref": "#/$defs/DynamoDBAction"
              },
              {
                "description": "Write to a DynamoDB table."
              }
            ]
          },
          "dynamoDBv2": {
            "allOf": [
              {
                "$ref": "#/$defs/DynamoDBv2Action"
              },
              {
                "description": "Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column."
              }
            ]
          },
          "lambda": {
            "allOf": [
              {
                "$ref": "#/$defs/LambdaAction"
              },
              {
                "description": "Invoke a Lambda function."
              }
            ]
          },
          "sns": {
            "allOf": [
              {
                "$ref": "#/$defs/SnsAction"
              },
              {
                "description": "Publish to an Amazon SNS topic."
              }
            ]
          },
          "sqs": {
            "allOf": [
              {
                "$ref": "#/$defs/SqsAction"
              },
              {
                "description": "Publish to an Amazon SQS queue."
              }
            ]
          },
          "kinesis": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisAction"
              },
              {
                "description": "Write data to an Amazon Kinesis stream."
              }
            ]
          },
          "republish": {
            "allOf": [
              {
                "$ref": "#/$defs/RepublishAction"
              },
              {
                "description": "Publish to another MQTT topic."
              }
            ]
          },
          "s3": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Action"
              },
              {
                "description": "Write to an Amazon S3 bucket."
              }
            ]
          },
          "firehose": {
            "allOf": [
              {
                "$ref": "#/$defs/FirehoseAction"
              },
              {
                "description": "Write to an Amazon Kinesis Firehose stream."
              }
            ]
          },
          "cloudwatchMetric": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudwatchMetricAction"
              },
              {
                "description": "Capture a CloudWatch metric."
              }
            ]
          },
          "cloudwatchAlarm": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudwatchAlarmAction"
              },
              {
                "description": "Change the state of a CloudWatch alarm."
              }
            ]
          },
          "cloudwatchLogs": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudwatchLogsAction"
              },
              {
                "description": "Send data to CloudWatch Logs."
              }
            ]
          },
          "elasticsearch": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchAction"
              },
              {
                "description": "<p>Write data to an Amazon OpenSearch Service domain.</p> <note> <p>The <code>Elasticsearch</code> action can only be used by existing rule actions. To create a new rule action or to update an existing rule action, use the <code>OpenSearch</code> rule action instead. For more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_OpenSearchAction.html\">OpenSearchAction</a>.</p> </note>"
              }
            ]
          },
          "salesforce": {
            "allOf": [
              {
                "$ref": "#/$defs/SalesforceAction"
              },
              {
                "description": "Send a message to a Salesforce IoT Cloud Input Stream."
              }
            ]
          },
          "iotAnalytics": {
            "allOf": [
              {
                "$ref": "#/$defs/IotAnalyticsAction"
              },
              {
                "description": "Sends message data to an IoT Analytics channel."
              }
            ]
          },
          "iotEvents": {
            "allOf": [
              {
                "$ref": "#/$defs/IotEventsAction"
              },
              {
                "description": "Sends an input to an IoT Events detector."
              }
            ]
          },
          "iotSiteWise": {
            "allOf": [
              {
                "$ref": "#/$defs/IotSiteWiseAction"
              },
              {
                "description": "Sends data from the MQTT message that triggered the rule to IoT SiteWise asset properties."
              }
            ]
          },
          "stepFunctions": {
            "allOf": [
              {
                "$ref": "#/$defs/StepFunctionsAction"
              },
              {
                "description": "Starts execution of a Step Functions state machine."
              }
            ]
          },
          "timestream": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestreamAction"
              },
              {
                "description": "The Timestream rule action writes attributes (measures) from an MQTT message into an Amazon Timestream table. For more information, see the <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html\">Timestream</a> topic rule action documentation."
              }
            ]
          },
          "http": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpAction"
              },
              {
                "description": "Send data to an HTTPS endpoint."
              }
            ]
          },
          "kafka": {
            "allOf": [
              {
                "$ref": "#/$defs/KafkaAction"
              },
              {
                "description": "Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster."
              }
            ]
          },
          "openSearch": {
            "allOf": [
              {
                "$ref": "#/$defs/OpenSearchAction"
              },
              {
                "description": "Write data to an Amazon OpenSearch Service domain."
              }
            ]
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/$defs/LocationAction"
              },
              {
                "description": "The Amazon Location Service rule action sends device location updates from an MQTT message to an Amazon Location tracker resource."
              }
            ]
          }
        },
        "description": "Describes the actions associated with a rule."
      },
      "DynamoDBAction": {
        "type": "object",
        "required": [
          "tableName",
          "roleArn",
          "hashKeyField",
          "hashKeyValue"
        ],
        "properties": {
          "tableName": {
            "allOf": [
              {
                "$ref": "#/$defs/TableName"
              },
              {
                "description": "The name of the DynamoDB table."
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the IAM role that grants access to the DynamoDB table."
              }
            ]
          },
          "operation": {
            "allOf": [
              {
                "$ref": "#/$defs/DynamoOperation"
              },
              {
                "description": "The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>."
              }
            ]
          },
          "hashKeyField": {
            "allOf": [
              {
                "$ref": "#/$defs/HashKeyField"
              },
              {
                "description": "The hash key name."
              }
            ]
          },
          "hashKeyValue": {
            "allOf": [
              {
                "$ref": "#/$defs/HashKeyValue"
              },
              {
                "description": "The hash key value."
              }
            ]
          },
          "hashKeyType": {
            "allOf": [
              {
                "$ref": "#/$defs/DynamoKeyType"
              },
              {
                "description": "The hash key type. Valid values are \"STRING\" or \"NUMBER\""
              }
            ]
          },
          "rangeKeyField": {
            "allOf": [
              {
                "$ref": "#/$defs/RangeKeyField"
              },
              {
                "description": "The range key name."
              }
            ]
          },
          "rangeKeyValue": {
            "allOf": [
              {
                "$ref": "#/$defs/RangeKeyValue"
              },
              {
                "description": "The range key value."
              }
            ]
          },
          "rangeKeyType": {
            "allOf": [
              {
                "$ref": "#/$defs/DynamoKeyType"
              },
              {
                "description": "The range key type. Valid values are \"STRING\" or \"NUMBER\""
              }
            ]
          },
          "payloadField": {
            "allOf": [
              {
                "$ref": "#/$defs/PayloadField"
              },
              {
                "description": "The action payload. This name can be customized."
              }
            ]
          }
        },
        "description": "<p>Describes an action to write to a DynamoDB table.</p> <p>The <code>tableName</code>, <code>hashKeyField</code>, and <code>rangeKeyField</code> values must match the values used when you created the table.</p> <p>The <code>hashKeyValue</code> and <code>rangeKeyvalue</code> fields use a substitution template syntax. These templates provide data at runtime. The syntax is as follows: ${<i>sql-expression</i>}.</p> <p>You can specify any valid expression in a WHERE or SELECT clause, including JSON properties, comparisons, calculations, and functions. For example, the following field uses the third level of the topic:</p> <p> <code>\"hashKeyValue\": \"${topic(3)}\"</code> </p> <p>The following field uses the timestamp:</p> <p> <code>\"rangeKeyValue\": \"${timestamp()}\"</code> </p>"
      },
      "TableName": {
        "type": "string"
      },
      "AwsArn": {
        "type": "string"
      },
      "DynamoOperation": {
        "type": "string"
      },
      "HashKeyField": {
        "type": "string"
      },
      "HashKeyValue": {
        "type": "string"
      },
      "DynamoKeyType": {
        "type": "string",
        "enum": [
          "STRING",
          "NUMBER"
        ]
      },
      "RangeKeyField": {
        "type": "string"
      },
      "RangeKeyValue": {
        "type": "string"
      },
      "PayloadField": {
        "type": "string"
      },
      "DynamoDBv2Action": {
        "type": "object",
        "required": [
          "roleArn",
          "putItem"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the IAM role that grants access to the DynamoDB table."
              }
            ]
          },
          "putItem": {
            "allOf": [
              {
                "$ref": "#/$defs/PutItemInput"
              },
              {
                "description": "<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>"
              }
            ]
          }
        },
        "description": "<p>Describes an action to write to a DynamoDB table.</p> <p>This DynamoDB action writes each attribute in the message payload into it's own column in the DynamoDB table.</p>"
      },
      "PutItemInput": {
        "type": "object",
        "required": [
          "tableName"
        ],
        "properties": {
          "tableName": {
            "allOf": [
              {
                "$ref": "#/$defs/TableName"
              },
              {
                "description": "The table where the message data will be written."
              }
            ]
          }
        },
        "description": "The input for the DynamoActionVS action that specifies the DynamoDB table to which the message data will be written."
      },
      "LambdaAction": {
        "type": "object",
        "required": [
          "functionArn"
        ],
        "properties": {
          "functionArn": {
            "allOf": [
              {
                "$ref": "#/$defs/FunctionArn"
              },
              {
                "description": "The ARN of the Lambda function."
              }
            ]
          }
        },
        "description": "Describes an action to invoke a Lambda function."
      },
      "FunctionArn": {
        "type": "string"
      },
      "SnsAction": {
        "type": "object",
        "required": [
          "targetArn",
          "roleArn"
        ],
        "properties": {
          "targetArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the SNS topic."
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the IAM role that grants access."
              }
            ]
          },
          "messageFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageFormat"
              },
              {
                "description": "(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">https://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation."
              }
            ]
          }
        },
        "description": "Describes an action to publish to an Amazon SNS topic."
      },
      "MessageFormat": {
        "type": "string",
        "enum": [
          "RAW",
          "JSON"
        ]
      },
      "SqsAction": {
        "type": "object",
        "required": [
          "roleArn",
          "queueUrl"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the IAM role that grants access."
              }
            ]
          },
          "queueUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/QueueUrl"
              },
              {
                "description": "The URL of the Amazon SQS queue."
              }
            ]
          },
          "useBase64": {
            "allOf": [
              {
                "$ref": "#/$defs/UseBase64"
              },
              {
                "description": "Specifies whether to use Base64 encoding."
              }
            ]
          }
        },
        "description": "Describes an action to publish data to an Amazon SQS queue."
      },
      "QueueUrl": {
        "type": "string"
      },
      "UseBase64": {
        "type": "boolean"
      },
      "KinesisAction": {
        "type": "object",
        "required": [
          "roleArn",
          "streamName"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the IAM role that grants access to the Amazon Kinesis stream."
              }
            ]
          },
          "streamName": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamName"
              },
              {
                "description": "The name of the Amazon Kinesis stream."
              }
            ]
          },
          "partitionKey": {
            "allOf": [
              {
                "$ref": "#/$defs/PartitionKey"
              },
              {
                "description": "The partition key."
              }
            ]
          }
        },
        "description": "Describes an action to write data to an Amazon Kinesis stream."
      },
      "StreamName": {
        "type": "string"
      },
      "PartitionKey": {
        "type": "string"
      },
      "RepublishAction": {
        "type": "object",
        "required": [
          "roleArn",
          "topic"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the IAM role that grants access."
              }
            ]
          },
          "topic": {
            "allOf": [
              {
                "$ref": "#/$defs/TopicPattern"
              },
              {
                "description": "The name of the MQTT topic."
              }
            ]
          },
          "qos": {
            "allOf": [
              {
                "$ref": "#/$defs/Qos"
              },
              {
                "description": "The Quality of Service (QoS) level to use when republishing messages. The default value is 0."
              }
            ]
          },
          "headers": {
            "allOf": [
              {
                "$ref": "#/$defs/MqttHeaders"
              },
              {
                "description": "MQTT Version 5.0 headers information. For more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html\"> MQTT</a> from the Amazon Web Services IoT Core Developer Guide."
              }
            ]
          }
        },
        "description": "Describes an action to republish to another topic."
      },
      "TopicPattern": {
        "type": "string"
      },
      "Qos": {
        "type": "integer",
        "minimum": 0,
        "maximum": 1
      },
      "MqttHeaders": {
        "type": "object",
        "properties": {
          "payloadFormatIndicator": {
            "allOf": [
              {
                "$ref": "#/$defs/PayloadFormatIndicator"
              },
              {
                "description": "<p>An <code>Enum</code> string value that indicates whether the payload is formatted as UTF-8.</p> <p>Valid values are <code>UNSPECIFIED_BYTES</code> and <code>UTF8_DATA</code>.</p> <p>For more information, see <a href=\"https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901111\"> Payload Format Indicator</a> from the MQTT Version 5.0 specification.</p> <p>Supports <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html\">substitution templates</a>.</p>"
              }
            ]
          },
          "contentType": {
            "allOf": [
              {
                "$ref": "#/$defs/ContentType"
              },
              {
                "description": "<p>A UTF-8 encoded string that describes the content of the publishing message.</p> <p>For more information, see <a href=\"https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901118\"> Content Type</a> from the MQTT Version 5.0 specification.</p> <p>Supports <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html\">substitution templates</a>.</p>"
              }
            ]
          },
          "responseTopic": {
            "allOf": [
              {
                "$ref": "#/$defs/ResponseTopic"
              },
              {
                "description": "<p>A UTF-8 encoded string that's used as the topic name for a response message. The response topic is used to describe the topic which the receiver should publish to as part of the request-response flow. The topic must not contain wildcard characters.</p> <p>For more information, see <a href=\"https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901114\"> Response Topic</a> from the MQTT Version 5.0 specification.</p> <p>Supports <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html\">substitution templates</a>.</p>"
              }
            ]
          },
          "correlationData": {
            "allOf": [
              {
                "$ref": "#/$defs/CorrelationData"
              },
              {
                "description": "<p>The base64-encoded binary data used by the sender of the request message to identify which request the response message is for when it's received.</p> <p>For more information, see <a href=\"https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901115\"> Correlation Data</a> from the MQTT Version 5.0 specification.</p> <note> <p> This binary data must be based64-encoded. </p> </note> <p>Supports <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html\">substitution templates</a>.</p>"
              }
            ]
          },
          "messageExpiry": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageExpiry"
              },
              {
                "description": "<p>A user-defined integer value that will persist a message at the message broker for a specified amount of time to ensure that the message will expire if it's no longer relevant to the subscriber. The value of <code>messageExpiry</code> represents the number of seconds before it expires. For more information about the limits of <code>messageExpiry</code>, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html\">Amazon Web Services IoT Core message broker and protocol limits and quotas </a> from the Amazon Web Services Reference Guide.</p> <p>Supports <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html\">substitution templates</a>.</p>"
              }
            ]
          },
          "userProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/UserProperties"
              },
              {
                "description": "An array of key-value pairs that you define in the MQTT5 header."
              }
            ]
          }
        },
        "description": "Specifies MQTT Version 5.0 headers information. For more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html\"> MQTT</a> from Amazon Web Services IoT Core Developer Guide."
      },
      "PayloadFormatIndicator": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "ContentType": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "ResponseTopic": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "CorrelationData": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "MessageExpiry": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "UserProperties": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/UserProperty"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "UserProperty": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/UserPropertyKey"
              },
              {
                "description": "A key to be specified in <code>UserProperty</code>."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/UserPropertyValue"
              },
              {
                "description": "A value to be specified in <code>UserProperty</code>."
              }
            ]
          }
        },
        "description": "A key-value pair that you define in the header. Both the key and the value are either literal strings or valid <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html\">substitution templates</a>."
      },
      "UserPropertyKey": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "UserPropertyValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "S3Action": {
        "type": "object",
        "required": [
          "roleArn",
          "bucketName",
          "key"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the IAM role that grants access."
              }
            ]
          },
          "bucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketName"
              },
              {
                "description": "The Amazon S3 bucket."
              }
            ]
          },
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/Key"
              },
              {
                "description": "The object key. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html\">Actions, resources, and condition keys for Amazon S3</a>."
              }
            ]
          },
          "cannedAcl": {
            "allOf": [
              {
                "$ref": "#/$defs/CannedAccessControlList"
              },
              {
                "description": "The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>."
              }
            ]
          }
        },
        "description": "Describes an action to write data to an Amazon S3 bucket."
      },
      "BucketName": {
        "type": "string"
      },
      "Key": {
        "type": "string"
      },
      "CannedAccessControlList": {
        "type": "string",
        "enum": [
          "private",
          "public-read",
          "public-read-write",
          "aws-exec-read",
          "authenticated-read",
          "bucket-owner-read",
          "bucket-owner-full-control",
          "log-delivery-write"
        ]
      },
      "FirehoseAction": {
        "type": "object",
        "required": [
          "roleArn",
          "deliveryStreamName"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The IAM role that grants access to the Amazon Kinesis Firehose stream."
              }
            ]
          },
          "deliveryStreamName": {
            "allOf": [
              {
                "$ref": "#/$defs/DeliveryStreamName"
              },
              {
                "description": "The delivery stream name."
              }
            ]
          },
          "separator": {
            "allOf": [
              {
                "$ref": "#/$defs/FirehoseSeparator"
              },
              {
                "description": "A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma)."
              }
            ]
          },
          "batchMode": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchMode"
              },
              {
                "description": "<p>Whether to deliver the Kinesis Data Firehose stream as a batch by using <a href=\"https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html\"> <code>PutRecordBatch</code> </a>. The default value is <code>false</code>.</p> <p>When <code>batchMode</code> is <code>true</code> and the rule's SQL statement evaluates to an Array, each Array element forms one record in the <a href=\"https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html\"> <code>PutRecordBatch</code> </a> request. The resulting array can't have more than 500 records.</p>"
              }
            ]
          }
        },
        "description": "Describes an action that writes data to an Amazon Kinesis Firehose stream."
      },
      "DeliveryStreamName": {
        "type": "string"
      },
      "FirehoseSeparator": {
        "type": "string",
        "pattern": "([\\n\\t])|(\\r\\n)|(,)"
      },
      "BatchMode": {
        "type": "boolean"
      },
      "CloudwatchMetricAction": {
        "type": "object",
        "required": [
          "roleArn",
          "metricNamespace",
          "metricName",
          "metricValue",
          "metricUnit"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The IAM role that allows access to the CloudWatch metric."
              }
            ]
          },
          "metricNamespace": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The CloudWatch metric namespace name."
              }
            ]
          },
          "metricName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The CloudWatch metric name."
              }
            ]
          },
          "metricValue": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The CloudWatch metric value."
              }
            ]
          },
          "metricUnit": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch."
              }
            ]
          },
          "metricTimestamp": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "An optional <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>."
              }
            ]
          }
        },
        "description": "Describes an action that captures a CloudWatch metric."
      },
      "String": {
        "type": "string"
      },
      "CloudwatchAlarmAction": {
        "type": "object",
        "required": [
          "roleArn",
          "alarmName",
          "stateReason",
          "stateValue"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The IAM role that allows access to the CloudWatch alarm."
              }
            ]
          },
          "alarmName": {
            "allOf": [
              {
                "$ref": "#/$defs/AlarmName"
              },
              {
                "description": "The CloudWatch alarm name."
              }
            ]
          },
          "stateReason": {
            "allOf": [
              {
                "$ref": "#/$defs/StateReason"
              },
              {
                "description": "The reason for the alarm change."
              }
            ]
          },
          "stateValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StateValue"
              },
              {
                "description": "The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA."
              }
            ]
          }
        },
        "description": "Describes an action that updates a CloudWatch alarm."
      },
      "AlarmName": {
        "type": "string"
      },
      "StateReason": {
        "type": "string"
      },
      "StateValue": {
        "type": "string"
      },
      "CloudwatchLogsAction": {
        "type": "object",
        "required": [
          "roleArn",
          "logGroupName"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The IAM role that allows access to the CloudWatch log."
              }
            ]
          },
          "logGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/LogGroupName"
              },
              {
                "description": "The CloudWatch log group to which the action sends data."
              }
            ]
          },
          "batchMode": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchMode"
              },
              {
                "description": "Indicates whether batches of log records will be extracted and uploaded into CloudWatch. Values include <code>true</code> or <code>false</code> <i>(default)</i>."
              }
            ]
          }
        },
        "description": "Describes an action that sends data to CloudWatch Logs."
      },
      "LogGroupName": {
        "type": "string"
      },
      "ElasticsearchAction": {
        "type": "object",
        "required": [
          "roleArn",
          "endpoint",
          "index",
          "type",
          "id"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The IAM role ARN that has access to OpenSearch."
              }
            ]
          },
          "endpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchEndpoint"
              },
              {
                "description": "The endpoint of your OpenSearch domain."
              }
            ]
          },
          "index": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchIndex"
              },
              {
                "description": "The index where you want to store your data."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchType"
              },
              {
                "description": "The type of document you are storing."
              }
            ]
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchId"
              },
              {
                "description": "The unique identifier for the document you are storing."
              }
            ]
          }
        },
        "description": "<p>Describes an action that writes data to an Amazon OpenSearch Service domain.</p> <note> <p>The <code>Elasticsearch</code> action can only be used by existing rule actions. To create a new rule action or to update an existing rule action, use the <code>OpenSearch</code> rule action instead. For more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_OpenSearchAction.html\">OpenSearchAction</a>.</p> </note>"
      },
      "ElasticsearchEndpoint": {
        "type": "string",
        "pattern": "https?://.*"
      },
      "ElasticsearchIndex": {
        "type": "string"
      },
      "ElasticsearchType": {
        "type": "string"
      },
      "ElasticsearchId": {
        "type": "string"
      },
      "SalesforceAction": {
        "type": "object",
        "required": [
          "token",
          "url"
        ],
        "properties": {
          "token": {
            "allOf": [
              {
                "$ref": "#/$defs/SalesforceToken"
              },
              {
                "description": "The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream."
              }
            ]
          },
          "url": {
            "allOf": [
              {
                "$ref": "#/$defs/SalesforceEndpoint"
              },
              {
                "description": "The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream."
              }
            ]
          }
        },
        "description": "Describes an action to write a message to a Salesforce IoT Cloud Input Stream."
      },
      "SalesforceToken": {
        "type": "string",
        "minLength": 40
      },
      "SalesforceEndpoint": {
        "type": "string",
        "pattern": "https://ingestion-[a-zA-Z0-9]{1,12}\\.[a-zA-Z0-9]+\\.((sfdc-matrix\\.net)|(sfdcnow\\.com))/streams/\\w{1,20}/\\w{1,20}/event",
        "maxLength": 2000
      },
      "IotAnalyticsAction": {
        "type": "object",
        "properties": {
          "channelArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "(deprecated) The ARN of the IoT Analytics channel to which message data will be sent."
              }
            ]
          },
          "channelName": {
            "allOf": [
              {
                "$ref": "#/$defs/ChannelName"
              },
              {
                "description": "The name of the IoT Analytics channel to which message data will be sent."
              }
            ]
          },
          "batchMode": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchMode"
              },
              {
                "description": "<p>Whether to process the action as a batch. The default value is <code>false</code>.</p> <p>When <code>batchMode</code> is <code>true</code> and the rule SQL statement evaluates to an Array, each Array element is delivered as a separate message when passed by <a href=\"https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html\"> <code>BatchPutMessage</code> </a> to the IoT Analytics channel. The resulting array can't have more than 100 messages.</p>"
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the role which has a policy that grants IoT Analytics permission to send message data via IoT Analytics (iotanalytics:BatchPutMessage)."
              }
            ]
          }
        },
        "description": "Sends message data to an IoT Analytics channel."
      },
      "ChannelName": {
        "type": "string"
      },
      "IotEventsAction": {
        "type": "object",
        "required": [
          "inputName",
          "roleArn"
        ],
        "properties": {
          "inputName": {
            "allOf": [
              {
                "$ref": "#/$defs/InputName"
              },
              {
                "description": "The name of the IoT Events input."
              }
            ]
          },
          "messageId": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageId"
              },
              {
                "description": "<p>The ID of the message. The default <code>messageId</code> is a new UUID value.</p> <p>When <code>batchMode</code> is <code>true</code>, you can't specify a <code>messageId</code>--a new UUID value will be assigned.</p> <p>Assign a value to this property to ensure that only one input (message) with a given <code>messageId</code> will be processed by an IoT Events detector.</p>"
              }
            ]
          },
          "batchMode": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchMode"
              },
              {
                "description": "<p>Whether to process the event actions as a batch. The default value is <code>false</code>.</p> <p>When <code>batchMode</code> is <code>true</code>, you can't specify a <code>messageId</code>. </p> <p>When <code>batchMode</code> is <code>true</code> and the rule SQL statement evaluates to an Array, each Array element is treated as a separate message when it's sent to IoT Events by calling <a href=\"https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html\"> <code>BatchPutMessage</code> </a>. The resulting array can't have more than 10 messages.</p>"
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the role that grants IoT permission to send an input to an IoT Events detector. (\"Action\":\"iotevents:BatchPutMessage\")."
              }
            ]
          }
        },
        "description": "Sends an input to an IoT Events detector."
      },
      "InputName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "MessageId": {
        "type": "string",
        "maxLength": 128
      },
      "IotSiteWiseAction": {
        "type": "object",
        "required": [
          "putAssetPropertyValueEntries",
          "roleArn"
        ],
        "properties": {
          "putAssetPropertyValueEntries": {
            "allOf": [
              {
                "$ref": "#/$defs/PutAssetPropertyValueEntryList"
              },
              {
                "description": "A list of asset property value entries."
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the role that grants IoT permission to send an asset property value to IoT SiteWise. (<code>\"Action\": \"iotsitewise:BatchPutAssetPropertyValue\"</code>). The trust policy can restrict access to specific asset hierarchy paths."
              }
            ]
          }
        },
        "description": "Describes an action to send data from an MQTT message that triggered the rule to IoT SiteWise asset properties."
      },
      "PutAssetPropertyValueEntryList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PutAssetPropertyValueEntry"
        },
        "minItems": 1
      },
      "PutAssetPropertyValueEntry": {
        "type": "object",
        "required": [
          "propertyValues"
        ],
        "properties": {
          "entryId": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyEntryId"
              },
              {
                "description": "Optional. A unique identifier for this entry that you can define to better track which message caused an error in case of failure. Accepts substitution templates. Defaults to a new UUID."
              }
            ]
          },
          "assetId": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetId"
              },
              {
                "description": "The ID of the IoT SiteWise asset. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates."
              }
            ]
          },
          "propertyId": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyId"
              },
              {
                "description": "The ID of the asset's property. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates."
              }
            ]
          },
          "propertyAlias": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyAlias"
              },
              {
                "description": "The name of the property alias associated with your asset property. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates."
              }
            ]
          },
          "propertyValues": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyValueList"
              },
              {
                "description": "A list of property values to insert that each contain timestamp, quality, and value (TQV) information."
              }
            ]
          }
        },
        "description": "An asset property value entry containing the following information."
      },
      "AssetPropertyEntryId": {
        "type": "string"
      },
      "AssetId": {
        "type": "string"
      },
      "AssetPropertyId": {
        "type": "string"
      },
      "AssetPropertyAlias": {
        "type": "string",
        "minLength": 1
      },
      "AssetPropertyValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AssetPropertyValue"
        },
        "minItems": 1
      },
      "AssetPropertyValue": {
        "type": "object",
        "required": [
          "value",
          "timestamp"
        ],
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyVariant"
              },
              {
                "description": "The value of the asset property."
              }
            ]
          },
          "timestamp": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyTimestamp"
              },
              {
                "description": "The asset property value timestamp."
              }
            ]
          },
          "quality": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyQuality"
              },
              {
                "description": "Optional. A string that describes the quality of the value. Accepts substitution templates. Must be <code>GOOD</code>, <code>BAD</code>, or <code>UNCERTAIN</code>."
              }
            ]
          }
        },
        "description": "An asset property value entry containing the following information."
      },
      "AssetPropertyVariant": {
        "type": "object",
        "properties": {
          "stringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyStringValue"
              },
              {
                "description": "Optional. The string value of the value entry. Accepts substitution templates."
              }
            ]
          },
          "integerValue": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyIntegerValue"
              },
              {
                "description": "Optional. A string that contains the integer value of the value entry. Accepts substitution templates."
              }
            ]
          },
          "doubleValue": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyDoubleValue"
              },
              {
                "description": "Optional. A string that contains the double value of the value entry. Accepts substitution templates."
              }
            ]
          },
          "booleanValue": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyBooleanValue"
              },
              {
                "description": "Optional. A string that contains the boolean value (<code>true</code> or <code>false</code>) of the value entry. Accepts substitution templates."
              }
            ]
          }
        },
        "description": "Contains an asset property value (of a single type)."
      },
      "AssetPropertyStringValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "AssetPropertyIntegerValue": {
        "type": "string"
      },
      "AssetPropertyDoubleValue": {
        "type": "string"
      },
      "AssetPropertyBooleanValue": {
        "type": "string"
      },
      "AssetPropertyTimestamp": {
        "type": "object",
        "required": [
          "timeInSeconds"
        ],
        "properties": {
          "timeInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyTimeInSeconds"
              },
              {
                "description": "A string that contains the time in seconds since epoch. Accepts substitution templates."
              }
            ]
          },
          "offsetInNanos": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetPropertyOffsetInNanos"
              },
              {
                "description": "Optional. A string that contains the nanosecond time offset. Accepts substitution templates."
              }
            ]
          }
        },
        "description": "An asset property timestamp entry containing the following information."
      },
      "AssetPropertyTimeInSeconds": {
        "type": "string"
      },
      "AssetPropertyOffsetInNanos": {
        "type": "string"
      },
      "AssetPropertyQuality": {
        "type": "string"
      },
      "StepFunctionsAction": {
        "type": "object",
        "required": [
          "stateMachineName",
          "roleArn"
        ],
        "properties": {
          "executionNamePrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/ExecutionNamePrefix"
              },
              {
                "description": "(Optional) A name will be given to the state machine execution consisting of this prefix followed by a UUID. Step Functions automatically creates a unique name for each state machine execution if one is not provided."
              }
            ]
          },
          "stateMachineName": {
            "allOf": [
              {
                "$ref": "#/$defs/StateMachineName"
              },
              {
                "description": "The name of the Step Functions state machine whose execution will be started."
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the role that grants IoT permission to start execution of a state machine (\"Action\":\"states:StartExecution\")."
              }
            ]
          }
        },
        "description": "Starts execution of a Step Functions state machine."
      },
      "ExecutionNamePrefix": {
        "type": "string"
      },
      "StateMachineName": {
        "type": "string"
      },
      "TimestreamAction": {
        "type": "object",
        "required": [
          "roleArn",
          "databaseName",
          "tableName",
          "dimensions"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the role that grants permission to write to the Amazon Timestream database table."
              }
            ]
          },
          "databaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestreamDatabaseName"
              },
              {
                "description": "The name of an Amazon Timestream database."
              }
            ]
          },
          "tableName": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestreamTableName"
              },
              {
                "description": "The name of the database table into which to write the measure records."
              }
            ]
          },
          "dimensions": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestreamDimensionList"
              },
              {
                "description": "Metadata attributes of the time series that are written in each measure record."
              }
            ]
          },
          "timestamp": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestreamTimestamp"
              },
              {
                "description": "<p>Specifies an application-defined value to replace the default value assigned to the Timestream record's timestamp in the <code>time</code> column.</p> <p>You can use this property to specify the value and the precision of the Timestream record's timestamp. You can specify a value from the message payload or a value computed by a substitution template.</p> <p>If omitted, the topic rule action assigns the timestamp, in milliseconds, at the time it processed the rule. </p>"
              }
            ]
          }
        },
        "description": "The Timestream rule action writes attributes (measures) from an MQTT message into an Amazon Timestream table. For more information, see the <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html\">Timestream</a> topic rule action documentation."
      },
      "TimestreamDatabaseName": {
        "type": "string"
      },
      "TimestreamTableName": {
        "type": "string"
      },
      "TimestreamDimensionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TimestreamDimension"
        },
        "minItems": 1,
        "maxItems": 128
      },
      "TimestreamDimension": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestreamDimensionName"
              },
              {
                "description": "<p>The metadata dimension name. This is the name of the column in the Amazon Timestream database table record.</p> <p>Dimensions cannot be named: <code>measure_name</code>, <code>measure_value</code>, or <code>time</code>. These names are reserved. Dimension names cannot start with <code>ts_</code> or <code>measure_value</code> and they cannot contain the colon (<code>:</code>) character.</p>"
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestreamDimensionValue"
              },
              {
                "description": "The value to write in this column of the database record."
              }
            ]
          }
        },
        "description": "Metadata attributes of the time series that are written in each measure record."
      },
      "TimestreamDimensionName": {
        "type": "string"
      },
      "TimestreamDimensionValue": {
        "type": "string"
      },
      "TimestreamTimestamp": {
        "type": "object",
        "required": [
          "value",
          "unit"
        ],
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestreamTimestampValue"
              },
              {
                "description": "An expression that returns a long epoch time value."
              }
            ]
          },
          "unit": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestreamTimestampUnit"
              },
              {
                "description": "<p>The precision of the timestamp value that results from the expression described in <code>value</code>.</p> <p>Valid values: <code>SECONDS</code> | <code>MILLISECONDS</code> | <code>MICROSECONDS</code> | <code>NANOSECONDS</code>. The default is <code>MILLISECONDS</code>.</p>"
              }
            ]
          }
        },
        "description": "Describes how to interpret an application-defined timestamp value from an MQTT message payload and the precision of that value."
      },
      "TimestreamTimestampValue": {
        "type": "string"
      },
      "TimestreamTimestampUnit": {
        "type": "string"
      },
      "HttpAction": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "allOf": [
              {
                "$ref": "#/$defs/Url"
              },
              {
                "description": "The endpoint URL. If substitution templates are used in the URL, you must also specify a <code>confirmationUrl</code>. If this is a new destination, a new <code>TopicRuleDestination</code> is created if possible."
              }
            ]
          },
          "confirmationUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/Url"
              },
              {
                "description": "The URL to which IoT sends a confirmation message. The value of the confirmation URL must be a prefix of the endpoint URL. If you do not specify a confirmation URL IoT uses the endpoint URL as the confirmation URL. If you use substitution templates in the confirmationUrl, you must create and enable topic rule destinations that match each possible value of the substitution template before traffic is allowed to your endpoint URL."
              }
            ]
          },
          "headers": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderList"
              },
              {
                "description": "The HTTP headers to send with the message data."
              }
            ]
          },
          "auth": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpAuthorization"
              },
              {
                "description": "The authentication method to use when sending data to an HTTPS endpoint."
              }
            ]
          }
        },
        "description": "Send data to an HTTPS endpoint."
      },
      "Url": {
        "type": "string",
        "maxLength": 2000
      },
      "HeaderList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/HttpActionHeader"
        },
        "minItems": 0,
        "maxItems": 100
      },
      "HttpActionHeader": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderKey"
              },
              {
                "description": "The HTTP header key."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderValue"
              },
              {
                "description": "The HTTP header value. Substitution templates are supported."
              }
            ]
          }
        },
        "description": "The HTTP action header."
      },
      "HeaderKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "HeaderValue": {
        "type": "string"
      },
      "HttpAuthorization": {
        "type": "object",
        "properties": {
          "sigv4": {
            "allOf": [
              {
                "$ref": "#/$defs/SigV4Authorization"
              },
              {
                "description": "Use Sig V4 authorization. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a>."
              }
            ]
          }
        },
        "description": "The authorization method used to send messages."
      },
      "SigV4Authorization": {
        "type": "object",
        "required": [
          "signingRegion",
          "serviceName",
          "roleArn"
        ],
        "properties": {
          "signingRegion": {
            "allOf": [
              {
                "$ref": "#/$defs/SigningRegion"
              },
              {
                "description": "The signing region."
              }
            ]
          },
          "serviceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceName"
              },
              {
                "description": "The service name to use while signing with Sig V4."
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of the signing role."
              }
            ]
          }
        },
        "description": "For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 signing process</a>."
      },
      "SigningRegion": {
        "type": "string"
      },
      "ServiceName": {
        "type": "string"
      },
      "KafkaAction": {
        "type": "object",
        "required": [
          "destinationArn",
          "topic",
          "clientProperties"
        ],
        "properties": {
          "destinationArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The ARN of Kafka action's VPC <code>TopicRuleDestination</code>."
              }
            ]
          },
          "topic": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Kafka topic for messages to be sent to the Kafka broker."
              }
            ]
          },
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Kafka message key."
              }
            ]
          },
          "partition": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Kafka message partition."
              }
            ]
          },
          "clientProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientProperties"
              },
              {
                "description": "Properties of the Apache Kafka producer client."
              }
            ]
          }
        },
        "description": "Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster."
      },
      "ClientProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/String"
        }
      },
      "OpenSearchAction": {
        "type": "object",
        "required": [
          "roleArn",
          "endpoint",
          "index",
          "type",
          "id"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The IAM role ARN that has access to OpenSearch."
              }
            ]
          },
          "endpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchEndpoint"
              },
              {
                "description": "The endpoint of your OpenSearch domain."
              }
            ]
          },
          "index": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchIndex"
              },
              {
                "description": "The OpenSearch index where you want to store your data."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchType"
              },
              {
                "description": "The type of document you are storing."
              }
            ]
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchId"
              },
              {
                "description": "The unique identifier for the document you are storing."
              }
            ]
          }
        },
        "description": "Describes an action that writes data to an Amazon OpenSearch Service domain."
      },
      "LocationAction": {
        "type": "object",
        "required": [
          "roleArn",
          "trackerName",
          "deviceId",
          "latitude",
          "longitude"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsArn"
              },
              {
                "description": "The IAM role that grants permission to write to the Amazon Location resource."
              }
            ]
          },
          "trackerName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the tracker resource in Amazon Location in which the location is updated."
              }
            ]
          },
          "deviceId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The unique ID of the device providing the location data."
              }
            ]
          },
          "timestamp": {
            "allOf": [
              {
                "$ref": "#/$defs/LocationTimestamp"
              },
              {
                "description": "The time that the location data was sampled. The default value is the time the MQTT message was processed."
              }
            ]
          },
          "latitude": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A string that evaluates to a double value that represents the latitude of the device's location."
              }
            ]
          },
          "longitude": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A string that evaluates to a double value that represents the longitude of the device's location."
              }
            ]
          }
        },
        "description": "The Amazon Location rule action sends device location updates from an MQTT message to an Amazon Location tracker resource."
      },
      "LocationTimestamp": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "An expression that returns a long epoch time value."
              }
            ]
          },
          "unit": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The precision of the timestamp value that results from the expression described in <code>value</code>.</p> <p>Valid values: <code>SECONDS</code> | <code>MILLISECONDS</code> | <code>MICROSECONDS</code> | <code>NANOSECONDS</code>. The default is <code>MILLISECONDS</code>.</p>"
              }
            ]
          }
        },
        "description": "Describes how to interpret an application-defined timestamp value from an MQTT message payload and the precision of that value."
      },
      "IsDisabled": {
        "type": "boolean"
      },
      "AwsIotSqlVersion": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iot.us-east-1.amazonaws.com/rules/{ruleName}"
    },
    "headers": {
      "x-amz-tagging": {
        "$": "x-amz-tagging"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
