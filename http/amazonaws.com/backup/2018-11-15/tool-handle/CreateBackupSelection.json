{
  "name": "CreateBackupSelection",
  "description": "Creates a JSON document that specifies a set of resources to assign to a backup plan. For examples, see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/assigning-resources.html#assigning-resources-json\">Assigning resources programmatically</a>. ",
  "parameters": {
    "type": "object",
    "properties": {
      "backupPlanId": {
        "type": "string",
        "description": "Uniquely identifies the backup plan to be associated with the selection of resources."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "BackupSelection"
        ],
        "properties": {
          "BackupSelection": {
            "description": "<p>Used to specify a set of resources to a backup plan.</p> <p>Specifying your desired <code>Conditions</code>, <code>ListOfTags</code>, <code>NotResources</code>, and/or <code>Resources</code> is recommended. If none of these are specified, Backup will attempt to select all supported and opted-in storage resources, which could have unintended cost implications.</p>",
            "type": "object",
            "properties": {
              "SelectionName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BackupSelectionName"
                  },
                  {
                    "description": "The display name of a resource selection document. Must contain 1 to 50 alphanumeric or '-_.' characters."
                  }
                ]
              },
              "IamRoleArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IAMRoleArn"
                  },
                  {
                    "description": "The ARN of the IAM role that Backup uses to authenticate when backing up the target resource; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
                  }
                ]
              },
              "Resources": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ResourceArns"
                  },
                  {
                    "description": "<p>A list of Amazon Resource Names (ARNs) to assign to a backup plan. The maximum number of ARNs is 500 without wildcards, or 30 ARNs with wildcards.</p> <p>If you need to assign many resources to a backup plan, consider a different resource selection strategy, such as assigning all resources of a resource type or refining your resource selection using tags.</p>"
                  }
                ]
              },
              "ListOfTags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ListOfTags"
                  },
                  {
                    "description": "<p>A list of conditions that you define to assign resources to your backup plans using tags. For example, <code>\"StringEquals\": { \"ConditionKey\": \"aws:ResourceTag/CreatedByCryo\", \"ConditionValue\": \"true\" },</code>. Condition operators are case sensitive.</p> <p> <code>ListOfTags</code> differs from <code>Conditions</code> as follows:</p> <ul> <li> <p>When you specify more than one condition, you assign all resources that match AT LEAST ONE condition (using OR logic).</p> </li> <li> <p> <code>ListOfTags</code> only supports <code>StringEquals</code>. <code>Conditions</code> supports <code>StringEquals</code>, <code>StringLike</code>, <code>StringNotEquals</code>, and <code>StringNotLike</code>. </p> </li> </ul>"
                  }
                ]
              },
              "NotResources": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ResourceArns"
                  },
                  {
                    "description": "<p>A list of Amazon Resource Names (ARNs) to exclude from a backup plan. The maximum number of ARNs is 500 without wildcards, or 30 ARNs with wildcards.</p> <p>If you need to exclude many resources from a backup plan, consider a different resource selection strategy, such as assigning only one or a few resource types or refining your resource selection using tags.</p>"
                  }
                ]
              },
              "Conditions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Conditions"
                  },
                  {
                    "description": "<p>A list of conditions that you define to assign resources to your backup plans using tags. For example, <code>\"StringEquals\": { \"ConditionKey\": \"aws:ResourceTag/CreatedByCryo\", \"ConditionValue\": \"true\" },</code>. Condition operators are case sensitive.</p> <p> <code>Conditions</code> differs from <code>ListOfTags</code> as follows:</p> <ul> <li> <p>When you specify more than one condition, you only assign the resources that match ALL conditions (using AND logic).</p> </li> <li> <p> <code>Conditions</code> supports <code>StringEquals</code>, <code>StringLike</code>, <code>StringNotEquals</code>, and <code>StringNotLike</code>. <code>ListOfTags</code> only supports <code>StringEquals</code>.</p> </li> </ul>"
                  }
                ]
              }
            }
          },
          "CreatorRequestId": {
            "description": "<p>A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice. This parameter is optional.</p> <p>If used, this parameter must contain 1 to 50 alphanumeric or '-_.' characters.</p>",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "backupPlanId",
      "body"
    ],
    "$defs": {
      "BackupSelectionName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\-\\_\\.]{1,50}$"
      },
      "IAMRoleArn": {
        "type": "string"
      },
      "ResourceArns": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ARN"
        }
      },
      "ARN": {
        "type": "string"
      },
      "ListOfTags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Condition"
        }
      },
      "Condition": {
        "type": "object",
        "required": [
          "ConditionType",
          "ConditionKey",
          "ConditionValue"
        ],
        "properties": {
          "ConditionType": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionType"
              },
              {
                "description": "An operation applied to a key-value pair used to assign resources to your backup plan. Condition only supports <code>StringEquals</code>. For more flexible assignment options, including <code>StringLike</code> and the ability to exclude resources from your backup plan, use <code>Conditions</code> (with an \"s\" on the end) for your <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BackupSelection.html\"> <code>BackupSelection</code> </a>."
              }
            ]
          },
          "ConditionKey": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionKey"
              },
              {
                "description": "The key in a key-value pair. For example, in the tag <code>Department: Accounting</code>, <code>Department</code> is the key."
              }
            ]
          },
          "ConditionValue": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionValue"
              },
              {
                "description": "The value in a key-value pair. For example, in the tag <code>Department: Accounting</code>, <code>Accounting</code> is the value."
              }
            ]
          }
        },
        "description": "Contains an array of triplets made up of a condition type (such as <code>StringEquals</code>), a key, and a value. Used to filter resources using their tags and assign them to a backup plan. Case sensitive."
      },
      "ConditionType": {
        "type": "string",
        "enum": [
          "STRINGEQUALS"
        ]
      },
      "ConditionKey": {
        "type": "string"
      },
      "ConditionValue": {
        "type": "string"
      },
      "Conditions": {
        "type": "object",
        "properties": {
          "StringEquals": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionParameters"
              },
              {
                "description": "Filters the values of your tagged resources for only those resources that you tagged with the same value. Also called \"exact matching.\""
              }
            ]
          },
          "StringNotEquals": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionParameters"
              },
              {
                "description": "Filters the values of your tagged resources for only those resources that you tagged that do not have the same value. Also called \"negated matching.\""
              }
            ]
          },
          "StringLike": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionParameters"
              },
              {
                "description": "Filters the values of your tagged resources for matching tag values with the use of a wildcard character (*) anywhere in the string. For example, \"prod*\" or \"*rod*\" matches the tag value \"production\"."
              }
            ]
          },
          "StringNotLike": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionParameters"
              },
              {
                "description": "Filters the values of your tagged resources for non-matching tag values with the use of a wildcard character (*) anywhere in the string."
              }
            ]
          }
        },
        "description": "Contains information about which resources to include or exclude from a backup plan using their tags. Conditions are case sensitive."
      },
      "ConditionParameters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConditionParameter"
        }
      },
      "ConditionParameter": {
        "type": "object",
        "properties": {
          "ConditionKey": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionKey"
              },
              {
                "description": "The key in a key-value pair. For example, in the tag <code>Department: Accounting</code>, <code>Department</code> is the key."
              }
            ]
          },
          "ConditionValue": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionValue"
              },
              {
                "description": "The value in a key-value pair. For example, in the tag <code>Department: Accounting</code>, <code>Accounting</code> is the value."
              }
            ]
          }
        },
        "description": "Includes information about tags you define to assign tagged resources to a backup plan."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://backup.us-east-1.amazonaws.com/backup/plans/{backupPlanId}/selections/"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**SelectionId**",
            "**BackupPlanId**",
            "**CreationDate**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
