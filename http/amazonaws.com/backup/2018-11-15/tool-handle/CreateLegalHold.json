{
  "name": "CreateLegalHold",
  "description": "This action creates a legal hold on a recovery point (backup). A legal hold is a restraint on altering or deleting a backup until an authorized user cancels the legal hold. Any actions to delete or disassociate a recovery point will fail with an error if one or more active legal holds are on the recovery point.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Title",
          "Description"
        ],
        "properties": {
          "Title": {
            "description": "This is the string title of the legal hold.",
            "type": "string"
          },
          "Description": {
            "description": "This is the string description of the legal hold.",
            "type": "string"
          },
          "IdempotencyToken": {
            "description": "This is a user-chosen string used to distinguish between otherwise identical calls. Retrying a successful request with the same idempotency token results in a success message with no action taken.",
            "type": "string"
          },
          "RecoveryPointSelection": {
            "description": "This specifies criteria to assign a set of resources, such as resource types or backup vaults.",
            "type": "object",
            "properties": {
              "VaultNames": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VaultNames"
                  },
                  {
                    "description": "These are the names of the vaults in which the selected recovery points are contained."
                  }
                ]
              },
              "ResourceIdentifiers": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ResourceIdentifiers"
                  },
                  {
                    "description": "These are the resources included in the resource selection (including type of resources and vaults)."
                  }
                ]
              },
              "DateRange": {
                "$ref": "#/$defs/DateRange"
              }
            }
          },
          "Tags": {
            "description": "Optional tags to include. A tag is a key-value pair you can use to manage, filter, and search for your resources. Allowed characters include UTF-8 letters, numbers, spaces, and the following characters: + - = . _ : /. ",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "VaultNames": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/string"
        }
      },
      "string": {
        "type": "string"
      },
      "ResourceIdentifiers": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/string"
        }
      },
      "DateRange": {
        "type": "object",
        "required": [
          "FromDate",
          "ToDate"
        ],
        "properties": {
          "FromDate": {
            "allOf": [
              {
                "$ref": "#/$defs/timestamp"
              },
              {
                "description": "<p>This value is the beginning date, inclusive.</p> <p>The date and time are in Unix format and Coordinated Universal Time (UTC), and it is accurate to milliseconds (milliseconds are optional).</p>"
              }
            ]
          },
          "ToDate": {
            "allOf": [
              {
                "$ref": "#/$defs/timestamp"
              },
              {
                "description": "<p>This value is the end date, inclusive.</p> <p>The date and time are in Unix format and Coordinated Universal Time (UTC), and it is accurate to milliseconds (milliseconds are optional).</p>"
              }
            ]
          }
        },
        "description": "<p>This is a resource filter containing FromDate: DateTime and ToDate: DateTime. Both values are required. Future DateTime values are not permitted.</p> <p>The date and time are in Unix format and Coordinated Universal Time (UTC), and it is accurate to milliseconds ((milliseconds are optional). For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>"
      },
      "timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "TagValue": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://backup.us-east-1.amazonaws.com/legal-holds/"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Title**",
            "**Status**",
            "**Description**",
            "**LegalHoldId**",
            "**LegalHoldArn**",
            "**CreationDate**",
            "**RecoveryPointSelection**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
