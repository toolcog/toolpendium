{
  "name": "BatchGetRecord",
  "description": "Retrieves a batch of <code>Records</code> from a <code>FeatureGroup</code>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Identifiers"
        ],
        "properties": {
          "Identifiers": {
            "description": "A list containing the name or Amazon Resource Name (ARN) of the <code>FeatureGroup</code>, the list of names of <code>Feature</code>s to be retrieved, and the corresponding <code>RecordIdentifier</code> values as strings.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/BatchGetRecordIdentifier"
            },
            "minItems": 1,
            "maxItems": 10
          },
          "ExpirationTimeResponse": {
            "description": "Parameter to request <code>ExpiresAt</code> in response. If <code>Enabled</code>, <code>BatchGetRecord</code> will return the value of <code>ExpiresAt</code>, if it is not null. If <code>Disabled</code> and null, <code>BatchGetRecord</code> will return null.",
            "type": "string",
            "enum": [
              "Enabled",
              "Disabled"
            ]
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "BatchGetRecordIdentifier": {
        "type": "object",
        "required": [
          "FeatureGroupName",
          "RecordIdentifiersValueAsString"
        ],
        "properties": {
          "FeatureGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/FeatureGroupNameOrArn"
              },
              {
                "description": "The name or Amazon Resource Name (ARN) of the <code>FeatureGroup</code> containing the records you are retrieving in a batch."
              }
            ]
          },
          "RecordIdentifiersValueAsString": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordIdentifiers"
              },
              {
                "description": "The value for a list of record identifiers in string format."
              }
            ]
          },
          "FeatureNames": {
            "allOf": [
              {
                "$ref": "#/$defs/FeatureNames"
              },
              {
                "description": "List of names of Features to be retrieved. If not specified, the latest value for all the Features are returned."
              }
            ]
          }
        },
        "description": "The identifier that identifies the batch of Records you are retrieving in a batch."
      },
      "FeatureGroupNameOrArn": {
        "type": "string",
        "pattern": "(arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:feature-group/)?([a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63})",
        "minLength": 1,
        "maxLength": 150
      },
      "RecordIdentifiers": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ValueAsString"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "ValueAsString": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 358400
      },
      "FeatureNames": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FeatureName"
        },
        "minItems": 1
      },
      "FeatureName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63}",
        "minLength": 1,
        "maxLength": 64
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://featurestore-runtime.sagemaker.us-east-1.amazonaws.com/BatchGetRecord"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Records**",
            "**Errors**",
            "**UnprocessedIdentifiers**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
