{
  "name": "DeleteRecord",
  "description": "<p>Deletes a <code>Record</code> from a <code>FeatureGroup</code> in the <code>OnlineStore</code>. Feature Store supports both <code>SoftDelete</code> and <code>HardDelete</code>. For <code>SoftDelete</code> (default), feature columns are set to <code>null</code> and the record is no longer retrievable by <code>GetRecord</code> or <code>BatchGetRecord</code>. For <code>HardDelete</code>, the complete <code>Record</code> is removed from the <code>OnlineStore</code>. In both cases, Feature Store appends the deleted record marker to the <code>OfflineStore</code> with feature values set to <code>null</code>, <code>is_deleted</code> value set to <code>True</code>, and <code>EventTime</code> set to the delete input <code>EventTime</code>.</p> <p>Note that the <code>EventTime</code> specified in <code>DeleteRecord</code> should be set later than the <code>EventTime</code> of the existing record in the <code>OnlineStore</code> for that <code>RecordIdentifer</code>. If it is not, the deletion does not occur:</p> <ul> <li> <p>For <code>SoftDelete</code>, the existing (undeleted) record remains in the <code>OnlineStore</code>, though the delete record marker is still written to the <code>OfflineStore</code>.</p> </li> <li> <p> <code>HardDelete</code> returns <code>EventTime</code>: <code>400 ValidationException</code> to indicate that the delete operation failed. No delete record marker is written to the <code>OfflineStore</code>.</p> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "FeatureGroupName": {
        "type": "string",
        "pattern": "(arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:feature-group/)?([a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63})",
        "minLength": 1,
        "maxLength": 150,
        "description": "The name or Amazon Resource Name (ARN) of the feature group to delete the record from. "
      },
      "RecordIdentifierValueAsString": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 358400,
        "description": "The value for the <code>RecordIdentifier</code> that uniquely identifies the record, in string format. "
      },
      "EventTime": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 358400,
        "description": "Timestamp indicating when the deletion event occurred. <code>EventTime</code> can be used to query data at a certain point in time."
      },
      "TargetStores": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TargetStore"
        },
        "minItems": 1,
        "maxItems": 2,
        "description": "A list of stores from which you're deleting the record. By default, Feature Store deletes the record from all of the stores that you're using for the <code>FeatureGroup</code>."
      },
      "DeletionMode": {
        "type": "string",
        "enum": [
          "SoftDelete",
          "HardDelete"
        ],
        "description": "The name of the deletion mode for deleting the record. By default, the deletion mode is set to <code>SoftDelete</code>."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "FeatureGroupName",
      "RecordIdentifierValueAsString",
      "EventTime"
    ],
    "$defs": {
      "TargetStore": {
        "type": "string",
        "enum": [
          "OnlineStore",
          "OfflineStore"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "DELETE",
    "url": {
      "$uri": "http://featurestore-runtime.sagemaker.us-east-1.amazonaws.com/FeatureGroup/{FeatureGroupName}#RecordIdentifierValueAsString&EventTime{?RecordIdentifierValueAsString,EventTime,TargetStores,DeletionMode}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
