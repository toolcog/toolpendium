{
  "name": "CreateSecurityPolicy",
  "description": "Creates a security policy to be used by one or more OpenSearch Serverless collections. Security policies provide access to a collection and its OpenSearch Dashboards endpoint from public networks or specific VPC endpoints. They also allow you to secure a collection with a KMS encryption key. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-network.html\">Network access for Amazon OpenSearch Serverless</a> and <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-encryption.html\">Encryption at rest for Amazon OpenSearch Serverless</a>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "OpenSearchServerless.CreateSecurityPolicy"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateSecurityPolicyRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateSecurityPolicyRequest": {
        "type": "object",
        "required": [
          "name",
          "policy",
          "type"
        ],
        "title": "CreateSecurityPolicyRequest",
        "properties": {
          "clientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientToken"
              },
              {
                "description": "Unique, case-sensitive identifier to ensure idempotency of the request."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyDescription"
              },
              {
                "description": "A description of the policy. Typically used to store information about the permissions defined in the policy."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyName"
              },
              {
                "description": "The name of the policy."
              }
            ]
          },
          "policy": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyDocument"
              },
              {
                "description": "The JSON policy document to use as the content for the new policy."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityPolicyType"
              },
              {
                "description": "The type of security policy."
              }
            ]
          }
        }
      },
      "ClientToken": {
        "type": "string",
        "minLength": 1,
        "maxLength": 512
      },
      "PolicyDescription": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1000
      },
      "PolicyName": {
        "type": "string",
        "pattern": "^[a-z][a-z0-9-]+$",
        "minLength": 3,
        "maxLength": 32
      },
      "PolicyDocument": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u00A1-\\u00FF]+",
        "minLength": 1,
        "maxLength": 20480
      },
      "SecurityPolicyType": {
        "type": "string",
        "enum": [
          "encryption",
          "network"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://aoss.us-east-1.amazonaws.com/#X-Amz-Target=OpenSearchServerless.CreateSecurityPolicy"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**securityPolicyDetail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
