{
  "name": "CreateDomainName",
  "description": "Creates a domain name.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "domainName"
        ],
        "properties": {
          "domainName": {
            "description": "A string with a length between [1-512].",
            "type": "string"
          },
          "domainNameConfigurations": {
            "description": "The domain name configurations.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/DomainNameConfiguration"
            }
          },
          "mutualTlsAuthentication": {
            "description": "The mutual TLS authentication configuration for a custom domain name.",
            "type": "object",
            "properties": {
              "TruststoreUri": {
                "allOf": [
                  {
                    "$ref": "#/$defs/UriWithLengthBetween1And2048"
                  },
                  {
                    "xml": {
                      "name": "truststoreUri"
                    },
                    "description": "An Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, s3://<replaceable>bucket-name</replaceable>/<replaceable>key-name</replaceable>. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version. To update the truststore, you must have permissions to access the S3 object."
                  }
                ]
              },
              "TruststoreVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringWithLengthBetween1And64"
                  },
                  {
                    "xml": {
                      "name": "truststoreVersion"
                    },
                    "description": "The version of the S3 object that contains your truststore. To specify a version, you must have versioning enabled for the S3 bucket."
                  }
                ]
              }
            }
          },
          "tags": {
            "description": "Represents a collection of tags associated with the resource.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/StringWithLengthBetween1And1600"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "DomainNameConfiguration": {
        "type": "object",
        "properties": {
          "ApiGatewayDomainName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "apiGatewayDomainName"
                },
                "description": "A domain name for the API."
              }
            ]
          },
          "CertificateArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "xml": {
                  "name": "certificateArn"
                },
                "description": "An AWS-managed certificate that will be used by the edge-optimized endpoint for this domain name. AWS Certificate Manager is the only supported source."
              }
            ]
          },
          "CertificateName": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithLengthBetween1And128"
              },
              {
                "xml": {
                  "name": "certificateName"
                },
                "description": "The user-friendly name of the certificate that will be used by the edge-optimized endpoint for this domain name."
              }
            ]
          },
          "CertificateUploadDate": {
            "allOf": [
              {
                "$ref": "#/$defs/__timestampIso8601"
              },
              {
                "xml": {
                  "name": "certificateUploadDate"
                },
                "description": "The timestamp when the certificate that was used by edge-optimized endpoint for this domain name was uploaded."
              }
            ]
          },
          "DomainNameStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/DomainNameStatus"
              },
              {
                "xml": {
                  "name": "domainNameStatus"
                },
                "description": "The status of the domain name migration. The valid values are AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated."
              }
            ]
          },
          "DomainNameStatusMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "domainNameStatusMessage"
                },
                "description": "An optional text message containing detailed information about status of the domain name migration."
              }
            ]
          },
          "EndpointType": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointType"
              },
              {
                "xml": {
                  "name": "endpointType"
                },
                "description": "The endpoint type."
              }
            ]
          },
          "HostedZoneId": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "hostedZoneId"
                },
                "description": "The Amazon Route 53 Hosted Zone ID of the endpoint."
              }
            ]
          },
          "SecurityPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityPolicy"
              },
              {
                "xml": {
                  "name": "securityPolicy"
                },
                "description": "The Transport Layer Security (TLS) version of the security policy for this domain name. The valid values are TLS_1_0 and TLS_1_2."
              }
            ]
          },
          "OwnershipVerificationCertificateArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "xml": {
                  "name": "ownershipVerificationCertificateArn"
                },
                "description": "The ARN of the public certificate issued by ACM to validate ownership of your custom domain. Only required when configuring mutual TLS and using an ACM imported or private CA certificate ARN as the regionalCertificateArn"
              }
            ]
          }
        },
        "description": "The domain name configuration."
      },
      "__string": {
        "type": "string"
      },
      "Arn": {
        "type": "string",
        "description": "Represents an Amazon Resource Name (ARN)."
      },
      "StringWithLengthBetween1And128": {
        "type": "string",
        "description": "A string with a length between [1-128]."
      },
      "__timestampIso8601": {
        "type": "string",
        "format": "date-time"
      },
      "DomainNameStatus": {
        "type": "string",
        "enum": [
          "AVAILABLE",
          "UPDATING",
          "PENDING_CERTIFICATE_REIMPORT",
          "PENDING_OWNERSHIP_VERIFICATION"
        ],
        "description": "The status of the domain name migration. The valid values are AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated."
      },
      "EndpointType": {
        "type": "string",
        "enum": [
          "REGIONAL",
          "EDGE"
        ],
        "description": "Represents an endpoint type."
      },
      "SecurityPolicy": {
        "type": "string",
        "enum": [
          "TLS_1_0",
          "TLS_1_2"
        ],
        "description": "The Transport Layer Security (TLS) version of the security policy for this domain name. The valid values are TLS_1_0 and TLS_1_2."
      },
      "UriWithLengthBetween1And2048": {
        "type": "string",
        "description": "A string representation of a URI with a length between [1-2048]."
      },
      "StringWithLengthBetween1And64": {
        "type": "string",
        "description": "A string with a length between [1-64]."
      },
      "StringWithLengthBetween1And1600": {
        "type": "string",
        "description": "A string with a length between [0-1600]."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://apigateway.us-east-1.amazonaws.com/v2/domainnames"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ApiMappingSelectionExpression**",
            "**DomainName**",
            "**DomainNameConfigurations**",
            "**MutualTlsAuthentication**",
            "**Tags**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
