{
  "name": "UpdateStage",
  "description": "Updates a Stage.",
  "parameters": {
    "type": "object",
    "properties": {
      "apiId": {
        "type": "string",
        "description": "The API identifier."
      },
      "stageName": {
        "type": "string",
        "description": "The stage name. Stage names can contain only alphanumeric characters, hyphens, and underscores, or be $default. Maximum length is 128 characters."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "accessLogSettings": {
            "description": "Settings for logging access in a stage.",
            "type": "object",
            "properties": {
              "DestinationArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Arn"
                  },
                  {
                    "xml": {
                      "name": "destinationArn"
                    },
                    "description": "The ARN of the CloudWatch Logs log group to receive access logs."
                  }
                ]
              },
              "Format": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringWithLengthBetween1And1024"
                  },
                  {
                    "xml": {
                      "name": "format"
                    },
                    "description": "A single line format of the access logs of data, as specified by selected $context variables. The format must include at least $context.requestId."
                  }
                ]
              }
            }
          },
          "autoDeploy": {
            "description": "Specifies whether updates to an API automatically trigger a new deployment. The default value is false.",
            "type": "boolean"
          },
          "clientCertificateId": {
            "description": "The identifier.",
            "type": "string"
          },
          "defaultRouteSettings": {
            "description": "Represents a collection of route settings.",
            "type": "object",
            "properties": {
              "DataTraceEnabled": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__boolean"
                  },
                  {
                    "xml": {
                      "name": "dataTraceEnabled"
                    },
                    "description": "Specifies whether (true) or not (false) data trace logging is enabled for this route. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs."
                  }
                ]
              },
              "DetailedMetricsEnabled": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__boolean"
                  },
                  {
                    "xml": {
                      "name": "detailedMetricsEnabled"
                    },
                    "description": "Specifies whether detailed metrics are enabled."
                  }
                ]
              },
              "LoggingLevel": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LoggingLevel"
                  },
                  {
                    "xml": {
                      "name": "loggingLevel"
                    },
                    "description": "Specifies the logging level for this route: INFO, ERROR, or OFF. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs."
                  }
                ]
              },
              "ThrottlingBurstLimit": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "xml": {
                      "name": "throttlingBurstLimit"
                    },
                    "description": "Specifies the throttling burst limit."
                  }
                ]
              },
              "ThrottlingRateLimit": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__double"
                  },
                  {
                    "xml": {
                      "name": "throttlingRateLimit"
                    },
                    "description": "Specifies the throttling rate limit."
                  }
                ]
              }
            }
          },
          "deploymentId": {
            "description": "The identifier.",
            "type": "string"
          },
          "description": {
            "description": "A string with a length between [0-1024].",
            "type": "string"
          },
          "routeSettings": {
            "description": "The route settings map.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/RouteSettings"
            }
          },
          "stageVariables": {
            "description": "The stage variable map.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/StringWithLengthBetween0And2048"
            }
          }
        }
      }
    },
    "required": [
      "apiId",
      "stageName",
      "body"
    ],
    "$defs": {
      "Arn": {
        "type": "string",
        "description": "Represents an Amazon Resource Name (ARN)."
      },
      "StringWithLengthBetween1And1024": {
        "type": "string",
        "description": "A string with a length between [1-1024]."
      },
      "__boolean": {
        "type": "boolean"
      },
      "LoggingLevel": {
        "type": "string",
        "enum": [
          "ERROR",
          "INFO",
          "OFF"
        ],
        "description": "The logging level."
      },
      "__integer": {
        "type": "integer"
      },
      "__double": {
        "type": "number",
        "format": "double"
      },
      "RouteSettings": {
        "type": "object",
        "properties": {
          "DataTraceEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "dataTraceEnabled"
                },
                "description": "Specifies whether (true) or not (false) data trace logging is enabled for this route. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs."
              }
            ]
          },
          "DetailedMetricsEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "detailedMetricsEnabled"
                },
                "description": "Specifies whether detailed metrics are enabled."
              }
            ]
          },
          "LoggingLevel": {
            "allOf": [
              {
                "$ref": "#/$defs/LoggingLevel"
              },
              {
                "xml": {
                  "name": "loggingLevel"
                },
                "description": "Specifies the logging level for this route: INFO, ERROR, or OFF. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs."
              }
            ]
          },
          "ThrottlingBurstLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "xml": {
                  "name": "throttlingBurstLimit"
                },
                "description": "Specifies the throttling burst limit."
              }
            ]
          },
          "ThrottlingRateLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/__double"
              },
              {
                "xml": {
                  "name": "throttlingRateLimit"
                },
                "description": "Specifies the throttling rate limit."
              }
            ]
          }
        },
        "description": "Represents a collection of route settings."
      },
      "StringWithLengthBetween0And2048": {
        "type": "string",
        "description": "A string with a length between [0-2048]."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "http://apigateway.us-east-1.amazonaws.com/v2/apis/{apiId}/stages/{stageName}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AccessLogSettings**",
            "**ApiGatewayManaged**",
            "**AutoDeploy**",
            "**ClientCertificateId**",
            "**CreatedDate**",
            "**DefaultRouteSettings**",
            "**DeploymentId**",
            "**Description**",
            "**LastDeploymentStatusMessage**",
            "**LastUpdatedDate**",
            "**RouteSettings**",
            "**StageName**",
            "**StageVariables**",
            "**Tags**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
