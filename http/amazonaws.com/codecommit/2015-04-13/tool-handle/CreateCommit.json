{
  "name": "CreateCommit",
  "description": "Creates a commit for a repository on the tip of a specified branch.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "CodeCommit_20150413.CreateCommit"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateCommitInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateCommitInput": {
        "type": "object",
        "required": [
          "repositoryName",
          "branchName"
        ],
        "title": "CreateCommitInput",
        "properties": {
          "repositoryName": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryName"
              },
              {
                "description": "The name of the repository where you create the commit."
              }
            ]
          },
          "branchName": {
            "allOf": [
              {
                "$ref": "#/$defs/BranchName"
              },
              {
                "description": "The name of the branch where you create the commit."
              }
            ]
          },
          "parentCommitId": {
            "allOf": [
              {
                "$ref": "#/$defs/CommitId"
              },
              {
                "description": "The ID of the commit that is the parent of the commit you create. Not required if this is an empty repository."
              }
            ]
          },
          "authorName": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name of the author who created the commit. This information is used as both the author and committer for the commit."
              }
            ]
          },
          "email": {
            "allOf": [
              {
                "$ref": "#/$defs/Email"
              },
              {
                "description": "The email address of the person who created the commit."
              }
            ]
          },
          "commitMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/Message"
              },
              {
                "description": "The commit message you want to include in the commit. Commit messages are limited to 256 KB. If no message is specified, a default message is used."
              }
            ]
          },
          "keepEmptyFolders": {
            "allOf": [
              {
                "$ref": "#/$defs/KeepEmptyFolders"
              },
              {
                "description": "If the commit contains deletions, whether to keep a folder or folder structure if the changes leave the folders empty. If true, a ..gitkeep file is created for empty folders. The default is false."
              }
            ]
          },
          "putFiles": {
            "allOf": [
              {
                "$ref": "#/$defs/PutFileEntries"
              },
              {
                "description": "The files to add or update in this commit."
              }
            ]
          },
          "deleteFiles": {
            "allOf": [
              {
                "$ref": "#/$defs/DeleteFileEntries"
              },
              {
                "description": "The files to delete in this commit. These files still exist in earlier commits."
              }
            ]
          },
          "setFileModes": {
            "allOf": [
              {
                "$ref": "#/$defs/SetFileModeEntries"
              },
              {
                "description": "The file modes to update for files in this commit."
              }
            ]
          }
        }
      },
      "RepositoryName": {
        "type": "string",
        "pattern": "[\\w\\.-]+",
        "minLength": 1,
        "maxLength": 100
      },
      "BranchName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "CommitId": {
        "type": "string"
      },
      "Name": {
        "type": "string"
      },
      "Email": {
        "type": "string"
      },
      "Message": {
        "type": "string"
      },
      "KeepEmptyFolders": {
        "type": "boolean"
      },
      "PutFileEntries": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PutFileEntry"
        }
      },
      "PutFileEntry": {
        "type": "object",
        "required": [
          "filePath"
        ],
        "properties": {
          "filePath": {
            "allOf": [
              {
                "$ref": "#/$defs/Path"
              },
              {
                "description": "The full path to the file in the repository, including the name of the file."
              }
            ]
          },
          "fileMode": {
            "allOf": [
              {
                "$ref": "#/$defs/FileModeTypeEnum"
              },
              {
                "description": "The extrapolated file mode permissions for the file. Valid values include EXECUTABLE and NORMAL."
              }
            ]
          },
          "fileContent": {
            "allOf": [
              {
                "$ref": "#/$defs/FileContent"
              },
              {
                "description": "The content of the file, if a source file is not specified."
              }
            ]
          },
          "sourceFile": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceFileSpecifier"
              },
              {
                "description": "The name and full path of the file that contains the changes you want to make as part of the commit, if you are not providing the file content directly."
              }
            ]
          }
        },
        "description": "Information about a file added or updated as part of a commit."
      },
      "Path": {
        "type": "string"
      },
      "FileModeTypeEnum": {
        "type": "string",
        "enum": [
          "EXECUTABLE",
          "NORMAL",
          "SYMLINK"
        ]
      },
      "FileContent": {
        "type": "string",
        "maxLength": 6291456
      },
      "SourceFileSpecifier": {
        "type": "object",
        "required": [
          "filePath"
        ],
        "properties": {
          "filePath": {
            "allOf": [
              {
                "$ref": "#/$defs/Path"
              },
              {
                "description": "The full path to the file, including the name of the file."
              }
            ]
          },
          "isMove": {
            "allOf": [
              {
                "$ref": "#/$defs/IsMove"
              },
              {
                "description": "Whether to remove the source file from the parent commit."
              }
            ]
          }
        },
        "description": "Information about a source file that is part of changes made in a commit."
      },
      "IsMove": {
        "type": "boolean"
      },
      "DeleteFileEntries": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DeleteFileEntry"
        }
      },
      "DeleteFileEntry": {
        "type": "object",
        "required": [
          "filePath"
        ],
        "properties": {
          "filePath": {
            "allOf": [
              {
                "$ref": "#/$defs/Path"
              },
              {
                "description": "The full path of the file to be deleted, including the name of the file."
              }
            ]
          }
        },
        "description": "A file that is deleted as part of a commit."
      },
      "SetFileModeEntries": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SetFileModeEntry"
        }
      },
      "SetFileModeEntry": {
        "type": "object",
        "required": [
          "filePath",
          "fileMode"
        ],
        "properties": {
          "filePath": {
            "allOf": [
              {
                "$ref": "#/$defs/Path"
              },
              {
                "description": "The full path to the file, including the name of the file."
              }
            ]
          },
          "fileMode": {
            "allOf": [
              {
                "$ref": "#/$defs/FileModeTypeEnum"
              },
              {
                "description": "The file mode for the file."
              }
            ]
          }
        },
        "description": "Information about the file mode changes."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://codecommit.us-east-1.amazonaws.com/#X-Amz-Target=CodeCommit_20150413.CreateCommit"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**commitId**",
            "**treeId**",
            "**filesAdded**",
            "**filesUpdated**",
            "**filesDeleted**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "490": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "491": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "492": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "493": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "494": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "495": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "496": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "497": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "498": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "499": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "500": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "501": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "502": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "503": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "504": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "505": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "506": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "507": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "508": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "509": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "510": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "511": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "512": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "513": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "514": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "515": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "516": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "517": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
