{
  "name": "PutRepositoryTriggers",
  "description": "Replaces all triggers for a repository. Used to create or delete triggers.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "CodeCommit_20150413.PutRepositoryTriggers"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutRepositoryTriggersInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutRepositoryTriggersInput": {
        "type": "object",
        "required": [
          "repositoryName",
          "triggers"
        ],
        "title": "PutRepositoryTriggersInput",
        "properties": {
          "repositoryName": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryName"
              },
              {
                "description": "The name of the repository where you want to create or update the trigger."
              }
            ]
          },
          "triggers": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryTriggersList"
              },
              {
                "description": "The JSON block of configuration information for each trigger."
              }
            ]
          }
        },
        "description": "Represents the input of a put repository triggers operation."
      },
      "RepositoryName": {
        "type": "string",
        "pattern": "[\\w\\.-]+",
        "minLength": 1,
        "maxLength": 100
      },
      "RepositoryTriggersList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RepositoryTrigger"
        }
      },
      "RepositoryTrigger": {
        "type": "object",
        "required": [
          "name",
          "destinationArn",
          "events"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryTriggerName"
              },
              {
                "description": "The name of the trigger."
              }
            ]
          },
          "destinationArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN of the resource that is the target for a trigger (for example, the ARN of a topic in Amazon SNS)."
              }
            ]
          },
          "customData": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryTriggerCustomData"
              },
              {
                "description": "Any custom data associated with the trigger to be included in the information sent to the target of the trigger."
              }
            ]
          },
          "branches": {
            "allOf": [
              {
                "$ref": "#/$defs/BranchNameList"
              },
              {
                "description": "<p>The branches to be included in the trigger configuration. If you specify an empty array, the trigger applies to all branches.</p> <note> <p>Although no content is required in the array, you must include the array itself.</p> </note>"
              }
            ]
          },
          "events": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryTriggerEventList"
              },
              {
                "description": "<p>The repository events that cause the trigger to run actions in another service, such as sending a notification through Amazon SNS. </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>"
              }
            ]
          }
        },
        "description": "Information about a trigger for a repository."
      },
      "RepositoryTriggerName": {
        "type": "string"
      },
      "Arn": {
        "type": "string"
      },
      "RepositoryTriggerCustomData": {
        "type": "string"
      },
      "BranchNameList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/BranchName"
        }
      },
      "BranchName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "RepositoryTriggerEventList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RepositoryTriggerEventEnum"
        }
      },
      "RepositoryTriggerEventEnum": {
        "type": "string",
        "enum": [
          "all",
          "updateReference",
          "createReference",
          "deleteReference"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://codecommit.us-east-1.amazonaws.com/#X-Amz-Target=CodeCommit_20150413.PutRepositoryTriggers"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the output of a put repository triggers operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**configurationId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "490": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "491": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "492": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "493": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "494": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "495": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "496": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "497": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "498": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "499": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "500": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
