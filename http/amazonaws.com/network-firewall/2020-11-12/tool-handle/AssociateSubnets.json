{
  "name": "AssociateSubnets",
  "description": "<p>Associates the specified subnets in the Amazon VPC to the firewall. You can specify one subnet for each of the Availability Zones that the VPC spans. </p> <p>This request creates an Network Firewall firewall endpoint in each of the subnets. To enable the firewall's protections, you must also modify the VPC's route tables for each subnet's Availability Zone, to redirect the traffic that's coming into and going out of the zone through the firewall endpoint. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "NetworkFirewall_20201112.AssociateSubnets"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/AssociateSubnetsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "AssociateSubnetsRequest": {
        "type": "object",
        "required": [
          "SubnetMappings"
        ],
        "title": "AssociateSubnetsRequest",
        "properties": {
          "UpdateToken": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateToken"
              },
              {
                "description": "<p>An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. </p> <p>To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.</p> <p>To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an <code>InvalidTokenException</code>. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token. </p>"
              }
            ]
          },
          "FirewallArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceArn"
              },
              {
                "description": "<p>The Amazon Resource Name (ARN) of the firewall.</p> <p>You must specify the ARN or the name, and you can specify both. </p>"
              }
            ]
          },
          "FirewallName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "<p>The descriptive name of the firewall. You can't change the name of a firewall after you create it.</p> <p>You must specify the ARN or the name, and you can specify both. </p>"
              }
            ]
          },
          "SubnetMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/SubnetMappings"
              },
              {
                "description": "The IDs of the subnets that you want to associate with the firewall. "
              }
            ]
          }
        }
      },
      "UpdateToken": {
        "type": "string",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "minLength": 1,
        "maxLength": 1024
      },
      "ResourceArn": {
        "type": "string",
        "pattern": "^arn:aws.*",
        "minLength": 1,
        "maxLength": 256
      },
      "ResourceName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "SubnetMappings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetMapping"
        }
      },
      "SubnetMapping": {
        "type": "object",
        "required": [
          "SubnetId"
        ],
        "properties": {
          "SubnetId": {
            "allOf": [
              {
                "$ref": "#/$defs/CollectionMember_String"
              },
              {
                "description": "The unique identifier for the subnet. "
              }
            ]
          },
          "IPAddressType": {
            "allOf": [
              {
                "$ref": "#/$defs/IPAddressType"
              },
              {
                "description": "The subnet's IP address type. You can't change the IP address type after you create the subnet."
              }
            ]
          }
        },
        "description": "The ID for a subnet that you want to associate with the firewall. This is used with <a>CreateFirewall</a> and <a>AssociateSubnets</a>. Network Firewall creates an instance of the associated firewall in each subnet that you specify, to filter traffic in the subnet's Availability Zone."
      },
      "CollectionMember_String": {
        "type": "string"
      },
      "IPAddressType": {
        "type": "string",
        "enum": [
          "DUALSTACK",
          "IPV4",
          "IPV6"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://network-firewall.us-east-1.amazonaws.com/#X-Amz-Target=NetworkFirewall_20201112.AssociateSubnets"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**FirewallArn**",
            "**FirewallName**",
            "**SubnetMappings**",
            "**UpdateToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
