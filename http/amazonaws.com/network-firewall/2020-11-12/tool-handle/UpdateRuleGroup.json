{
  "name": "UpdateRuleGroup",
  "description": "<p>Updates the rule settings for the specified rule group. You use a rule group by reference in one or more firewall policies. When you modify a rule group, you modify all firewall policies that use the rule group. </p> <p>To update a rule group, first call <a>DescribeRuleGroup</a> to retrieve the current <a>RuleGroup</a> object, update the object as needed, and then provide the updated object to this call. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "NetworkFirewall_20201112.UpdateRuleGroup"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateRuleGroupRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateRuleGroupRequest": {
        "type": "object",
        "required": [
          "UpdateToken"
        ],
        "title": "UpdateRuleGroupRequest",
        "properties": {
          "UpdateToken": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateToken"
              },
              {
                "description": "<p>A token used for optimistic locking. Network Firewall returns a token to your requests that access the rule group. The token marks the state of the rule group resource at the time of the request. </p> <p>To make changes to the rule group, you provide the token in your request. Network Firewall uses the token to ensure that the rule group hasn't changed since you last retrieved it. If it has changed, the operation fails with an <code>InvalidTokenException</code>. If this happens, retrieve the rule group again to get a current copy of it with a current token. Reapply your changes as needed, then try the operation again using the new token. </p>"
              }
            ]
          },
          "RuleGroupArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceArn"
              },
              {
                "description": "<p>The Amazon Resource Name (ARN) of the rule group.</p> <p>You must specify the ARN or the name, and you can specify both. </p>"
              }
            ]
          },
          "RuleGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "<p>The descriptive name of the rule group. You can't change the name of a rule group after you create it.</p> <p>You must specify the ARN or the name, and you can specify both. </p>"
              }
            ]
          },
          "RuleGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleGroup"
              },
              {
                "description": "<p>An object that defines the rule group rules. </p> <note> <p>You must provide either this rule group setting or a <code>Rules</code> setting, but not both. </p> </note>"
              }
            ]
          },
          "Rules": {
            "allOf": [
              {
                "$ref": "#/$defs/RulesString"
              },
              {
                "description": "<p>A string containing stateful rule group rules specifications in Suricata flat format, with one rule per line. Use this to import your existing Suricata compatible rule groups. </p> <note> <p>You must provide either this rules setting or a populated <code>RuleGroup</code> setting, but not both. </p> </note> <p>You can provide your rule group specification in Suricata flat format through this setting when you create or update your rule group. The call response returns a <a>RuleGroup</a> object that Network Firewall has populated from your string. </p>"
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleGroupType"
              },
              {
                "description": "<p>Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules. </p> <note> <p>This setting is required for requests that do not include the <code>RuleGroupARN</code>.</p> </note>"
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "A description of the rule group. "
              }
            ]
          },
          "DryRun": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Indicates whether you want Network Firewall to just check the validity of the request, rather than run the request. </p> <p>If set to <code>TRUE</code>, Network Firewall checks whether the request can run successfully, but doesn't actually make the requested changes. The call returns the value that the request would return if you ran it with dry run set to <code>FALSE</code>, but doesn't make additions or changes to your resources. This option allows you to make sure that you have the required permissions to run the request and that your request parameters are valid. </p> <p>If set to <code>FALSE</code>, Network Firewall makes the requested changes to your resources. </p>"
              }
            ]
          },
          "EncryptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionConfiguration"
              },
              {
                "description": "A complex type that contains settings for encryption of your rule group resources."
              }
            ]
          },
          "SourceMetadata": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceMetadata"
              },
              {
                "description": "A complex type that contains metadata about the rule group that your own rule group is copied from. You can use the metadata to keep track of updates made to the originating rule group."
              }
            ]
          }
        }
      },
      "UpdateToken": {
        "type": "string",
        "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
        "minLength": 1,
        "maxLength": 1024
      },
      "ResourceArn": {
        "type": "string",
        "pattern": "^arn:aws.*",
        "minLength": 1,
        "maxLength": 256
      },
      "ResourceName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "RuleGroup": {
        "type": "object",
        "required": [
          "RulesSource"
        ],
        "properties": {
          "RuleVariables": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleVariables"
              },
              {
                "description": "Settings that are available for use in the rules in the rule group. You can only use these for stateful rule groups. "
              }
            ]
          },
          "ReferenceSets": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceSets"
              },
              {
                "description": "The list of a rule group's reference sets."
              }
            ]
          },
          "RulesSource": {
            "allOf": [
              {
                "$ref": "#/$defs/RulesSource"
              },
              {
                "description": "The stateful rules or stateless rules for the rule group. "
              }
            ]
          },
          "StatefulRuleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/StatefulRuleOptions"
              },
              {
                "description": "Additional options governing how Network Firewall handles stateful rules. The policies where you use your stateful rule group must have stateful rule options settings that are compatible with these settings."
              }
            ]
          }
        },
        "description": "<p>The object that defines the rules in a rule group. This, along with <a>RuleGroupResponse</a>, define the rule group. You can retrieve all objects for a rule group by calling <a>DescribeRuleGroup</a>. </p> <p>Network Firewall uses a rule group to inspect and control network traffic. You define stateless rule groups to inspect individual packets and you define stateful rule groups to inspect packets in the context of their traffic flow. </p> <p>To use a rule group, you include it by reference in an Network Firewall firewall policy, then you use the policy in a firewall. You can reference a rule group from more than one firewall policy, and you can use a firewall policy in more than one firewall. </p>"
      },
      "RuleVariables": {
        "type": "object",
        "properties": {
          "IPSets": {
            "allOf": [
              {
                "$ref": "#/$defs/IPSets"
              },
              {
                "description": "A list of IP addresses and address ranges, in CIDR notation. "
              }
            ]
          },
          "PortSets": {
            "allOf": [
              {
                "$ref": "#/$defs/PortSets"
              },
              {
                "description": "A list of port ranges. "
              }
            ]
          }
        },
        "description": "Settings that are available for use in the rules in the <a>RuleGroup</a> where this is defined. "
      },
      "IPSets": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/IPSet"
        }
      },
      "IPSet": {
        "type": "object",
        "required": [
          "Definition"
        ],
        "properties": {
          "Definition": {
            "allOf": [
              {
                "$ref": "#/$defs/VariableDefinitionList"
              },
              {
                "description": "The list of IP addresses and address ranges, in CIDR notation. "
              }
            ]
          }
        },
        "description": "A list of IP addresses and address ranges, in CIDR notation. This is part of a <a>RuleVariables</a>. "
      },
      "VariableDefinitionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VariableDefinition"
        }
      },
      "VariableDefinition": {
        "type": "string",
        "pattern": "^.*$",
        "minLength": 1
      },
      "PortSets": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/PortSet"
        }
      },
      "PortSet": {
        "type": "object",
        "properties": {
          "Definition": {
            "allOf": [
              {
                "$ref": "#/$defs/VariableDefinitionList"
              },
              {
                "description": "The set of port ranges. "
              }
            ]
          }
        },
        "description": "A set of port ranges for use in the rules in a rule group. "
      },
      "ReferenceSets": {
        "type": "object",
        "properties": {
          "IPSetReferences": {
            "allOf": [
              {
                "$ref": "#/$defs/IPSetReferenceMap"
              },
              {
                "description": "The list of IP set references."
              }
            ]
          }
        },
        "description": "Contains a set of IP set references."
      },
      "IPSetReferenceMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/IPSetReference"
        }
      },
      "IPSetReference": {
        "type": "object",
        "properties": {
          "ReferenceArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the resource that you are referencing in your rule group."
              }
            ]
          }
        },
        "description": "<p>Configures one or more IP set references for a Suricata-compatible rule group. This is used in <a>CreateRuleGroup</a> or <a>UpdateRuleGroup</a>. An IP set reference is a rule variable that references resources that you create and manage in another Amazon Web Services service, such as an Amazon VPC prefix list. Network Firewall IP set references enable you to dynamically update the contents of your rules. When you create, update, or delete the resource you are referencing in your rule, Network Firewall automatically updates the rule's content with the changes. For more information about IP set references in Network Firewall, see <a href=\"https://docs.aws.amazon.com/network-firewall/latest/developerguide/rule-groups-ip-set-references\">Using IP set references</a> in the <i>Network Firewall Developer Guide</i>.</p> <p> Network Firewall currently supports <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/managed-prefix-lists.html\">Amazon VPC prefix lists</a> and <a href=\"https://docs.aws.amazon.com/network-firewall/latest/developerguide/rule-groups-ip-set-references.html#rule-groups-referencing-resource-groups\">resource groups</a> in IP set references. </p>"
      },
      "RulesSource": {
        "type": "object",
        "properties": {
          "RulesString": {
            "allOf": [
              {
                "$ref": "#/$defs/RulesString"
              },
              {
                "description": "<p>Stateful inspection criteria, provided in Suricata compatible intrusion prevention system (IPS) rules. Suricata is an open-source network IPS that includes a standard rule-based language for network traffic inspection.</p> <p>These rules contain the inspection criteria and the action to take for traffic that matches the criteria, so this type of rule group doesn't have a separate action setting.</p>"
              }
            ]
          },
          "RulesSourceList": {
            "allOf": [
              {
                "$ref": "#/$defs/RulesSourceList"
              },
              {
                "description": "Stateful inspection criteria for a domain list rule group. "
              }
            ]
          },
          "StatefulRules": {
            "allOf": [
              {
                "$ref": "#/$defs/StatefulRules"
              },
              {
                "description": "An array of individual stateful rules inspection criteria to be used together in a stateful rule group. Use this option to specify simple Suricata rules with protocol, source and destination, ports, direction, and rule options. For information about the Suricata <code>Rules</code> format, see <a href=\"https://suricata.readthedocs.iorules/intro.html#\">Rules Format</a>. "
              }
            ]
          },
          "StatelessRulesAndCustomActions": {
            "allOf": [
              {
                "$ref": "#/$defs/StatelessRulesAndCustomActions"
              },
              {
                "description": "Stateless inspection criteria to be used in a stateless rule group. "
              }
            ]
          }
        },
        "description": "The stateless or stateful rules definitions for use in a single rule group. Each rule group requires a single <code>RulesSource</code>. You can use an instance of this for either stateless rules or stateful rules. "
      },
      "RulesString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 2000000
      },
      "RulesSourceList": {
        "type": "object",
        "required": [
          "Targets",
          "TargetTypes",
          "GeneratedRulesType"
        ],
        "properties": {
          "Targets": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleTargets"
              },
              {
                "description": "<p>The domains that you want to inspect for in your traffic flows. Valid domain specifications are the following:</p> <ul> <li> <p>Explicit names. For example, <code>abc.example.com</code> matches only the domain <code>abc.example.com</code>.</p> </li> <li> <p>Names that use a domain wildcard, which you indicate with an initial '<code>.</code>'. For example,<code>.example.com</code> matches <code>example.com</code> and matches all subdomains of <code>example.com</code>, such as <code>abc.example.com</code> and <code>www.example.com</code>. </p> </li> </ul>"
              }
            ]
          },
          "TargetTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetTypes"
              },
              {
                "description": "The protocols you want to inspect. Specify <code>TLS_SNI</code> for <code>HTTPS</code>. Specify <code>HTTP_HOST</code> for <code>HTTP</code>. You can specify either or both. "
              }
            ]
          },
          "GeneratedRulesType": {
            "allOf": [
              {
                "$ref": "#/$defs/GeneratedRulesType"
              },
              {
                "description": "Whether you want to allow or deny access to the domains in your target list."
              }
            ]
          }
        },
        "description": "<p>Stateful inspection criteria for a domain list rule group. </p> <p>For HTTPS traffic, domain filtering is SNI-based. It uses the server name indicator extension of the TLS handshake.</p> <p>By default, Network Firewall domain list inspection only includes traffic coming from the VPC where you deploy the firewall. To inspect traffic from IP addresses outside of the deployment VPC, you set the <code>HOME_NET</code> rule variable to include the CIDR range of the deployment VPC plus the other CIDR ranges. For more information, see <a>RuleVariables</a> in this guide and <a href=\"https://docs.aws.amazon.com/network-firewall/latest/developerguide/stateful-rule-groups-domain-names.html\">Stateful domain list rule groups in Network Firewall</a> in the <i>Network Firewall Developer Guide</i>.</p>"
      },
      "RuleTargets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CollectionMember_String"
        }
      },
      "CollectionMember_String": {
        "type": "string"
      },
      "TargetTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TargetType"
        }
      },
      "TargetType": {
        "type": "string",
        "enum": [
          "TLS_SNI",
          "HTTP_HOST"
        ]
      },
      "GeneratedRulesType": {
        "type": "string",
        "enum": [
          "ALLOWLIST",
          "DENYLIST"
        ]
      },
      "StatefulRules": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StatefulRule"
        }
      },
      "StatefulRule": {
        "type": "object",
        "required": [
          "Action",
          "Header",
          "RuleOptions"
        ],
        "properties": {
          "Action": {
            "allOf": [
              {
                "$ref": "#/$defs/StatefulAction"
              },
              {
                "description": "<p>Defines what Network Firewall should do with the packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. </p> <p>The actions for a stateful rule are defined as follows: </p> <ul> <li> <p> <b>PASS</b> - Permits the packets to go to the intended destination.</p> </li> <li> <p> <b>DROP</b> - Blocks the packets from going to the intended destination and sends an alert log message, if alert logging is configured in the <a>Firewall</a> <a>LoggingConfiguration</a>. </p> </li> <li> <p> <b>ALERT</b> - Permits the packets to go to the intended destination and sends an alert log message, if alert logging is configured in the <a>Firewall</a> <a>LoggingConfiguration</a>. </p> <p>You can use this action to test a rule that you intend to use to drop traffic. You can enable the rule with <code>ALERT</code> action, verify in the logs that the rule is filtering as you want, then change the action to <code>DROP</code>.</p> </li> <li> <p> <b>REJECT</b> - Drops TCP traffic that matches the conditions of the stateful rule, and sends a TCP reset packet back to sender of the packet. A TCP reset packet is a packet with no payload and a <code>RST</code> bit contained in the TCP header flags. Also sends an alert log mesage if alert logging is configured in the <a>Firewall</a> <a>LoggingConfiguration</a>.</p> <p> <code>REJECT</code> isn't currently available for use with IMAP and FTP protocols.</p> </li> </ul>"
              }
            ]
          },
          "Header": {
            "allOf": [
              {
                "$ref": "#/$defs/Header"
              },
              {
                "description": "The stateful inspection criteria for this rule, used to inspect traffic flows. "
              }
            ]
          },
          "RuleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleOptions"
              },
              {
                "description": "Additional options for the rule. These are the Suricata <code>RuleOptions</code> settings."
              }
            ]
          }
        },
        "description": "A single Suricata rules specification, for use in a stateful rule group. Use this option to specify a simple Suricata rule with protocol, source and destination, ports, direction, and rule options. For information about the Suricata <code>Rules</code> format, see <a href=\"https://suricata.readthedocs.iorules/intro.html#\">Rules Format</a>. "
      },
      "StatefulAction": {
        "type": "string",
        "enum": [
          "PASS",
          "DROP",
          "ALERT",
          "REJECT"
        ]
      },
      "Header": {
        "type": "object",
        "required": [
          "Protocol",
          "Source",
          "SourcePort",
          "Direction",
          "Destination",
          "DestinationPort"
        ],
        "properties": {
          "Protocol": {
            "allOf": [
              {
                "$ref": "#/$defs/StatefulRuleProtocol"
              },
              {
                "description": "The protocol to inspect for. To specify all, you can use <code>IP</code>, because all traffic on Amazon Web Services and on the internet is IP."
              }
            ]
          },
          "Source": {
            "allOf": [
              {
                "$ref": "#/$defs/Source"
              },
              {
                "description": "<p>The source IP address or address range to inspect for, in CIDR notation. To match with any address, specify <code>ANY</code>. </p> <p>Specify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4 and IPv6. </p> <p>Examples: </p> <ul> <li> <p>To configure Network Firewall to inspect for the IP address 192.0.2.44, specify <code>192.0.2.44/32</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify <code>192.0.2.0/24</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for the IP address 1111:0000:0000:0000:0000:0000:0000:0111, specify <code>1111:0000:0000:0000:0000:0000:0000:0111/128</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for IP addresses from 1111:0000:0000:0000:0000:0000:0000:0000 to 1111:0000:0000:0000:ffff:ffff:ffff:ffff, specify <code>1111:0000:0000:0000:0000:0000:0000:0000/64</code>.</p> </li> </ul> <p>For more information about CIDR notation, see the Wikipedia entry <a href=\"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Classless Inter-Domain Routing</a>.</p>"
              }
            ]
          },
          "SourcePort": {
            "allOf": [
              {
                "$ref": "#/$defs/Port"
              },
              {
                "description": "The source port to inspect for. You can specify an individual port, for example <code>1994</code> and you can specify a port range, for example <code>1990:1994</code>. To match with any port, specify <code>ANY</code>. "
              }
            ]
          },
          "Direction": {
            "allOf": [
              {
                "$ref": "#/$defs/StatefulRuleDirection"
              },
              {
                "description": "The direction of traffic flow to inspect. If set to <code>ANY</code>, the inspection matches bidirectional traffic, both from the source to the destination and from the destination to the source. If set to <code>FORWARD</code>, the inspection only matches traffic going from the source to the destination. "
              }
            ]
          },
          "Destination": {
            "allOf": [
              {
                "$ref": "#/$defs/Destination"
              },
              {
                "description": "<p>The destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify <code>ANY</code>. </p> <p>Specify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4 and IPv6. </p> <p>Examples: </p> <ul> <li> <p>To configure Network Firewall to inspect for the IP address 192.0.2.44, specify <code>192.0.2.44/32</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify <code>192.0.2.0/24</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for the IP address 1111:0000:0000:0000:0000:0000:0000:0111, specify <code>1111:0000:0000:0000:0000:0000:0000:0111/128</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for IP addresses from 1111:0000:0000:0000:0000:0000:0000:0000 to 1111:0000:0000:0000:ffff:ffff:ffff:ffff, specify <code>1111:0000:0000:0000:0000:0000:0000:0000/64</code>.</p> </li> </ul> <p>For more information about CIDR notation, see the Wikipedia entry <a href=\"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Classless Inter-Domain Routing</a>.</p>"
              }
            ]
          },
          "DestinationPort": {
            "allOf": [
              {
                "$ref": "#/$defs/Port"
              },
              {
                "description": "The destination port to inspect for. You can specify an individual port, for example <code>1994</code> and you can specify a port range, for example <code>1990:1994</code>. To match with any port, specify <code>ANY</code>. "
              }
            ]
          }
        },
        "description": "The basic rule criteria for Network Firewall to use to inspect packet headers in stateful traffic flow inspection. Traffic flows that match the criteria are a match for the corresponding <a>StatefulRule</a>. "
      },
      "StatefulRuleProtocol": {
        "type": "string",
        "enum": [
          "IP",
          "TCP",
          "UDP",
          "ICMP",
          "HTTP",
          "FTP",
          "TLS",
          "SMB",
          "DNS",
          "DCERPC",
          "SSH",
          "SMTP",
          "IMAP",
          "MSN",
          "KRB5",
          "IKEV2",
          "TFTP",
          "NTP",
          "DHCP"
        ]
      },
      "Source": {
        "type": "string",
        "pattern": "^.*$",
        "minLength": 1,
        "maxLength": 1024
      },
      "Port": {
        "type": "string",
        "pattern": "^.*$",
        "minLength": 1,
        "maxLength": 1024
      },
      "StatefulRuleDirection": {
        "type": "string",
        "enum": [
          "FORWARD",
          "ANY"
        ]
      },
      "Destination": {
        "type": "string",
        "pattern": "^.*$",
        "minLength": 1,
        "maxLength": 1024
      },
      "RuleOptions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RuleOption"
        }
      },
      "RuleOption": {
        "type": "object",
        "required": [
          "Keyword"
        ],
        "properties": {
          "Keyword": {
            "allOf": [
              {
                "$ref": "#/$defs/Keyword"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "Settings": {
            "allOf": [
              {
                "$ref": "#/$defs/Settings"
              },
              {
                "description": "<p/>"
              }
            ]
          }
        },
        "description": "Additional settings for a stateful rule. This is part of the <a>StatefulRule</a> configuration."
      },
      "Keyword": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 128
      },
      "Settings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Setting"
        }
      },
      "Setting": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 8192
      },
      "StatelessRulesAndCustomActions": {
        "type": "object",
        "required": [
          "StatelessRules"
        ],
        "properties": {
          "StatelessRules": {
            "allOf": [
              {
                "$ref": "#/$defs/StatelessRules"
              },
              {
                "description": "Defines the set of stateless rules for use in a stateless rule group. "
              }
            ]
          },
          "CustomActions": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomActions"
              },
              {
                "description": "Defines an array of individual custom action definitions that are available for use by the stateless rules in this <code>StatelessRulesAndCustomActions</code> specification. You name each custom action that you define, and then you can use it by name in your <a>StatelessRule</a> <a>RuleDefinition</a> <code>Actions</code> specification."
              }
            ]
          }
        },
        "description": "Stateless inspection criteria. Each stateless rule group uses exactly one of these data types to define its stateless rules. "
      },
      "StatelessRules": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StatelessRule"
        }
      },
      "StatelessRule": {
        "type": "object",
        "required": [
          "RuleDefinition",
          "Priority"
        ],
        "properties": {
          "RuleDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleDefinition"
              },
              {
                "description": "Defines the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria. "
              }
            ]
          },
          "Priority": {
            "allOf": [
              {
                "$ref": "#/$defs/Priority"
              },
              {
                "description": "<p>Indicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. Network Firewall evaluates the rules in a rule group starting with the lowest priority setting. You must ensure that the priority settings are unique for the rule group. </p> <p>Each stateless rule group uses exactly one <code>StatelessRulesAndCustomActions</code> object, and each <code>StatelessRulesAndCustomActions</code> contains exactly one <code>StatelessRules</code> object. To ensure unique priority settings for your rule groups, set unique priorities for the stateless rules that you define inside any single <code>StatelessRules</code> object.</p> <p>You can change the priority settings of your rules at any time. To make it easier to insert rules later, number them so there's a wide range in between, for example use 100, 200, and so on. </p>"
              }
            ]
          }
        },
        "description": "A single stateless rule. This is used in <a>StatelessRulesAndCustomActions</a>."
      },
      "RuleDefinition": {
        "type": "object",
        "required": [
          "MatchAttributes",
          "Actions"
        ],
        "properties": {
          "MatchAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/MatchAttributes"
              },
              {
                "description": "Criteria for Network Firewall to use to inspect an individual packet in stateless rule inspection. Each match attributes set can include one or more items such as IP address, CIDR range, port number, protocol, and TCP flags. "
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/StatelessActions"
              },
              {
                "description": "<p>The actions to take on a packet that matches one of the stateless rule definition's match attributes. You must specify a standard action and you can add custom actions. </p> <note> <p>Network Firewall only forwards a packet for stateful rule inspection if you specify <code>aws:forward_to_sfe</code> for a rule that the packet matches, or if the packet doesn't match any stateless rule and you specify <code>aws:forward_to_sfe</code> for the <code>StatelessDefaultActions</code> setting for the <a>FirewallPolicy</a>.</p> </note> <p>For every rule, you must specify exactly one of the following standard actions. </p> <ul> <li> <p> <b>aws:pass</b> - Discontinues all inspection of the packet and permits it to go to its intended destination.</p> </li> <li> <p> <b>aws:drop</b> - Discontinues all inspection of the packet and blocks it from going to its intended destination.</p> </li> <li> <p> <b>aws:forward_to_sfe</b> - Discontinues stateless inspection of the packet and forwards it to the stateful rule engine for inspection. </p> </li> </ul> <p>Additionally, you can specify a custom action. To do this, you define a custom action by name and type, then provide the name you've assigned to the action in this <code>Actions</code> setting. For information about the options, see <a>CustomAction</a>. </p> <p>To provide more than one action in this setting, separate the settings with a comma. For example, if you have a custom <code>PublishMetrics</code> action that you've named <code>MyMetricsAction</code>, then you could specify the standard action <code>aws:pass</code> and the custom action with <code>[“aws:pass”, “MyMetricsAction”]</code>. </p>"
              }
            ]
          }
        },
        "description": "The inspection criteria and action for a single stateless rule. Network Firewall inspects each packet for the specified matching criteria. When a packet matches the criteria, Network Firewall performs the rule's actions on the packet."
      },
      "MatchAttributes": {
        "type": "object",
        "properties": {
          "Sources": {
            "allOf": [
              {
                "$ref": "#/$defs/Addresses"
              },
              {
                "description": "The source IP addresses and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address. "
              }
            ]
          },
          "Destinations": {
            "allOf": [
              {
                "$ref": "#/$defs/Addresses"
              },
              {
                "description": "The destination IP addresses and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address. "
              }
            ]
          },
          "SourcePorts": {
            "allOf": [
              {
                "$ref": "#/$defs/PortRanges"
              },
              {
                "description": "<p>The source ports to inspect for. If not specified, this matches with any source port. This setting is only used for protocols 6 (TCP) and 17 (UDP). </p> <p>You can specify individual ports, for example <code>1994</code> and you can specify port ranges, for example <code>1990:1994</code>. </p>"
              }
            ]
          },
          "DestinationPorts": {
            "allOf": [
              {
                "$ref": "#/$defs/PortRanges"
              },
              {
                "description": "<p>The destination ports to inspect for. If not specified, this matches with any destination port. This setting is only used for protocols 6 (TCP) and 17 (UDP). </p> <p>You can specify individual ports, for example <code>1994</code> and you can specify port ranges, for example <code>1990:1994</code>. </p>"
              }
            ]
          },
          "Protocols": {
            "allOf": [
              {
                "$ref": "#/$defs/ProtocolNumbers"
              },
              {
                "description": "The protocols to inspect for, specified using each protocol's assigned internet protocol number (IANA). If not specified, this matches with any protocol. "
              }
            ]
          },
          "TCPFlags": {
            "allOf": [
              {
                "$ref": "#/$defs/TCPFlags"
              },
              {
                "description": "The TCP flags and masks to inspect for. If not specified, this matches with any settings. This setting is only used for protocol 6 (TCP)."
              }
            ]
          }
        },
        "description": "Criteria for Network Firewall to use to inspect an individual packet in stateless rule inspection. Each match attributes set can include one or more items such as IP address, CIDR range, port number, protocol, and TCP flags. "
      },
      "Addresses": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Address"
        }
      },
      "Address": {
        "type": "object",
        "required": [
          "AddressDefinition"
        ],
        "properties": {
          "AddressDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/AddressDefinition"
              },
              {
                "description": "<p>Specify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4 and IPv6. </p> <p>Examples: </p> <ul> <li> <p>To configure Network Firewall to inspect for the IP address 192.0.2.44, specify <code>192.0.2.44/32</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify <code>192.0.2.0/24</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for the IP address 1111:0000:0000:0000:0000:0000:0000:0111, specify <code>1111:0000:0000:0000:0000:0000:0000:0111/128</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for IP addresses from 1111:0000:0000:0000:0000:0000:0000:0000 to 1111:0000:0000:0000:ffff:ffff:ffff:ffff, specify <code>1111:0000:0000:0000:0000:0000:0000:0000/64</code>.</p> </li> </ul> <p>For more information about CIDR notation, see the Wikipedia entry <a href=\"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Classless Inter-Domain Routing</a>.</p>"
              }
            ]
          }
        },
        "description": "A single IP address specification. This is used in the <a>MatchAttributes</a> source and destination specifications."
      },
      "AddressDefinition": {
        "type": "string",
        "pattern": "^([a-fA-F\\d:\\.]+($|/\\d{1,3}))$",
        "minLength": 1,
        "maxLength": 255
      },
      "PortRanges": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PortRange"
        }
      },
      "PortRange": {
        "type": "object",
        "required": [
          "FromPort",
          "ToPort"
        ],
        "properties": {
          "FromPort": {
            "allOf": [
              {
                "$ref": "#/$defs/PortRangeBound"
              },
              {
                "description": "The lower limit of the port range. This must be less than or equal to the <code>ToPort</code> specification. "
              }
            ]
          },
          "ToPort": {
            "allOf": [
              {
                "$ref": "#/$defs/PortRangeBound"
              },
              {
                "description": "The upper limit of the port range. This must be greater than or equal to the <code>FromPort</code> specification. "
              }
            ]
          }
        },
        "description": "A single port range specification. This is used for source and destination port ranges in the stateless rule <a>MatchAttributes</a>, <code>SourcePorts</code>, and <code>DestinationPorts</code> settings. "
      },
      "PortRangeBound": {
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      },
      "ProtocolNumbers": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ProtocolNumber"
        }
      },
      "ProtocolNumber": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "TCPFlags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TCPFlagField"
        }
      },
      "TCPFlagField": {
        "type": "object",
        "required": [
          "Flags"
        ],
        "properties": {
          "Flags": {
            "allOf": [
              {
                "$ref": "#/$defs/Flags"
              },
              {
                "description": "<p>Used in conjunction with the <code>Masks</code> setting to define the flags that must be set and flags that must not be set in order for the packet to match. This setting can only specify values that are also specified in the <code>Masks</code> setting.</p> <p>For the flags that are specified in the masks setting, the following must be true for the packet to match: </p> <ul> <li> <p>The ones that are set in this flags setting must be set in the packet. </p> </li> <li> <p>The ones that are not set in this flags setting must also not be set in the packet. </p> </li> </ul>"
              }
            ]
          },
          "Masks": {
            "allOf": [
              {
                "$ref": "#/$defs/Flags"
              },
              {
                "description": "The set of flags to consider in the inspection. To inspect all flags in the valid values list, leave this with no setting."
              }
            ]
          }
        },
        "description": "TCP flags and masks to inspect packets for, used in stateless rules <a>MatchAttributes</a> settings."
      },
      "Flags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TCPFlag"
        }
      },
      "TCPFlag": {
        "type": "string",
        "enum": [
          "FIN",
          "SYN",
          "RST",
          "PSH",
          "ACK",
          "URG",
          "ECE",
          "CWR"
        ]
      },
      "StatelessActions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CollectionMember_String"
        }
      },
      "Priority": {
        "type": "integer",
        "minimum": 1,
        "maximum": 65535
      },
      "CustomActions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CustomAction"
        }
      },
      "CustomAction": {
        "type": "object",
        "required": [
          "ActionName",
          "ActionDefinition"
        ],
        "properties": {
          "ActionName": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionName"
              },
              {
                "description": "The descriptive name of the custom action. You can't change the name of a custom action after you create it."
              }
            ]
          },
          "ActionDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionDefinition"
              },
              {
                "description": "The custom action associated with the action name."
              }
            ]
          }
        },
        "description": "<p>An optional, non-standard action to use for stateless packet handling. You can define this in addition to the standard action that you must specify. </p> <p>You define and name the custom actions that you want to be able to use, and then you reference them by name in your actions settings. </p> <p>You can use custom actions in the following places: </p> <ul> <li> <p>In a rule group's <a>StatelessRulesAndCustomActions</a> specification. The custom actions are available for use by name inside the <code>StatelessRulesAndCustomActions</code> where you define them. You can use them for your stateless rule actions to specify what to do with a packet that matches the rule's match attributes. </p> </li> <li> <p>In a <a>FirewallPolicy</a> specification, in <code>StatelessCustomActions</code>. The custom actions are available for use inside the policy where you define them. You can use them for the policy's default stateless actions settings to specify what to do with packets that don't match any of the policy's stateless rules. </p> </li> </ul>"
      },
      "ActionName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "ActionDefinition": {
        "type": "object",
        "properties": {
          "PublishMetricAction": {
            "allOf": [
              {
                "$ref": "#/$defs/PublishMetricAction"
              },
              {
                "description": "<p>Stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. This setting defines a CloudWatch dimension value to be published.</p> <p>You can pair this custom action with any of the standard stateless rule actions. For example, you could pair this in a rule action with the standard action that forwards the packet for stateful inspection. Then, when a packet matches the rule, Network Firewall publishes metrics for the packet and forwards it. </p>"
              }
            ]
          }
        },
        "description": "A custom action to use in stateless rule actions settings. This is used in <a>CustomAction</a>."
      },
      "PublishMetricAction": {
        "type": "object",
        "required": [
          "Dimensions"
        ],
        "properties": {
          "Dimensions": {
            "allOf": [
              {
                "$ref": "#/$defs/Dimensions"
              },
              {
                "description": "<p/>"
              }
            ]
          }
        },
        "description": "Stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. This setting defines a CloudWatch dimension value to be published."
      },
      "Dimensions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Dimension"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "Dimension": {
        "type": "object",
        "required": [
          "Value"
        ],
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionValue"
              },
              {
                "description": "The value to use in the custom metric dimension."
              }
            ]
          }
        },
        "description": "<p>The value to use in an Amazon CloudWatch custom metric dimension. This is used in the <code>PublishMetrics</code> <a>CustomAction</a>. A CloudWatch custom metric dimension is a name/value pair that's part of the identity of a metric. </p> <p>Network Firewall sets the dimension name to <code>CustomAction</code> and you provide the dimension value. </p> <p>For more information about CloudWatch custom metric dimensions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html#usingDimensions\">Publishing Custom Metrics</a> in the <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/WhatIsCloudWatch.html\">Amazon CloudWatch User Guide</a>.</p>"
      },
      "DimensionValue": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-_ ]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "StatefulRuleOptions": {
        "type": "object",
        "properties": {
          "RuleOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleOrder"
              },
              {
                "description": "Indicates how to manage the order of the rule evaluation for the rule group. <code>DEFAULT_ACTION_ORDER</code> is the default behavior. Stateful rules are provided to the rule engine as Suricata compatible strings, and Suricata evaluates them based on certain settings. For more information, see <a href=\"https://docs.aws.amazon.com/network-firewall/latest/developerguide/suricata-rule-evaluation-order.html\">Evaluation order for stateful rules</a> in the <i>Network Firewall Developer Guide</i>. "
              }
            ]
          }
        },
        "description": "Additional options governing how Network Firewall handles the rule group. You can only use these for stateful rule groups."
      },
      "RuleOrder": {
        "type": "string",
        "enum": [
          "DEFAULT_ACTION_ORDER",
          "STRICT_ORDER"
        ]
      },
      "RuleGroupType": {
        "type": "string",
        "enum": [
          "STATELESS",
          "STATEFUL"
        ]
      },
      "Description": {
        "type": "string",
        "pattern": "^.*$",
        "maxLength": 512
      },
      "Boolean": {
        "type": "boolean"
      },
      "EncryptionConfiguration": {
        "type": "object",
        "required": [
          "Type"
        ],
        "properties": {
          "KeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyId"
              },
              {
                "description": "The ID of the Amazon Web Services Key Management Service (KMS) customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id\">Key ID</a> in the <i>Amazon Web Services KMS Developer Guide</i>."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionType"
              },
              {
                "description": "The type of Amazon Web Services KMS key to use for encryption of your Network Firewall resources."
              }
            ]
          }
        },
        "description": "A complex type that contains optional Amazon Web Services Key Management Service (KMS) encryption settings for your Network Firewall resources. Your data is encrypted by default with an Amazon Web Services owned key that Amazon Web Services owns and manages for you. You can use either the Amazon Web Services owned key, or provide your own customer managed key. To learn more about KMS encryption of your Network Firewall resources, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/kms-encryption-at-rest.html\">Encryption at rest with Amazon Web Services Key Managment Service</a> in the <i>Network Firewall Developer Guide</i>."
      },
      "KeyId": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "EncryptionType": {
        "type": "string",
        "enum": [
          "CUSTOMER_KMS",
          "AWS_OWNED_KMS_KEY"
        ]
      },
      "SourceMetadata": {
        "type": "object",
        "properties": {
          "SourceArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the rule group that your own rule group is copied from."
              }
            ]
          },
          "SourceUpdateToken": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateToken"
              },
              {
                "description": "The update token of the Amazon Web Services managed rule group that your own rule group is copied from. To determine the update token for the managed rule group, call <a href=\"https://docs.aws.amazon.com/network-firewall/latest/APIReference/API_DescribeRuleGroup.html#networkfirewall-DescribeRuleGroup-response-UpdateToken\">DescribeRuleGroup</a>."
              }
            ]
          }
        },
        "description": "High-level information about the managed rule group that your own rule group is copied from. You can use the the metadata to track version updates made to the originating rule group. You can retrieve all objects for a rule group by calling <a href=\"https://docs.aws.amazon.com/network-firewall/latest/APIReference/API_DescribeRuleGroup.html\">DescribeRuleGroup</a>."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://network-firewall.us-east-1.amazonaws.com/#X-Amz-Target=NetworkFirewall_20201112.UpdateRuleGroup"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**UpdateToken**",
            "**RuleGroupResponse**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
