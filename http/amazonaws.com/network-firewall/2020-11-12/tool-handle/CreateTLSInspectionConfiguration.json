{
  "name": "CreateTLSInspectionConfiguration",
  "description": "<p>Creates an Network Firewall TLS inspection configuration. A TLS inspection configuration contains the Certificate Manager certificate references that Network Firewall uses to decrypt and re-encrypt inbound traffic.</p> <p>After you create a TLS inspection configuration, you associate it with a firewall policy.</p> <p>To update the settings for a TLS inspection configuration, use <a>UpdateTLSInspectionConfiguration</a>.</p> <p>To manage a TLS inspection configuration's tags, use the standard Amazon Web Services resource tagging operations, <a>ListTagsForResource</a>, <a>TagResource</a>, and <a>UntagResource</a>.</p> <p>To retrieve information about TLS inspection configurations, use <a>ListTLSInspectionConfigurations</a> and <a>DescribeTLSInspectionConfiguration</a>.</p> <p> For more information about TLS inspection configurations, see <a href=\"https://docs.aws.amazon.com/network-firewall/latest/developerguide/tls-inspection.html\">Decrypting SSL/TLS traffic with TLS inspection configurations</a> in the <i>Network Firewall Developer Guide</i>. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "NetworkFirewall_20201112.CreateTLSInspectionConfiguration"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateTLSInspectionConfigurationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateTLSInspectionConfigurationRequest": {
        "type": "object",
        "required": [
          "TLSInspectionConfigurationName",
          "TLSInspectionConfiguration"
        ],
        "title": "CreateTLSInspectionConfigurationRequest",
        "properties": {
          "TLSInspectionConfigurationName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The descriptive name of the TLS inspection configuration. You can't change the name of a TLS inspection configuration after you create it."
              }
            ]
          },
          "TLSInspectionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/TLSInspectionConfiguration"
              },
              {
                "description": "<p>The object that defines a TLS inspection configuration. This, along with <a>TLSInspectionConfigurationResponse</a>, define the TLS inspection configuration. You can retrieve all objects for a TLS inspection configuration by calling <a>DescribeTLSInspectionConfiguration</a>. </p> <p>Network Firewall uses a TLS inspection configuration to decrypt traffic. Network Firewall re-encrypts the traffic before sending it to its destination.</p> <p>To use a TLS inspection configuration, you add it to a Network Firewall firewall policy, then you apply the firewall policy to a firewall. Network Firewall acts as a proxy service to decrypt and inspect inbound traffic. You can reference a TLS inspection configuration from more than one firewall policy, and you can use a firewall policy in more than one firewall. For more information about using TLS inspection configurations, see <a href=\"https://docs.aws.amazon.com/network-firewall/latest/developerguide/tls-inspection.html\">Decrypting SSL/TLS traffic with TLS inspection configurations</a> in the <i>Network Firewall Developer Guide</i>.</p>"
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "A description of the TLS inspection configuration. "
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "The key:value pairs to associate with the resource."
              }
            ]
          },
          "EncryptionConfiguration": {
            "$ref": "#/$defs/EncryptionConfiguration"
          }
        }
      },
      "ResourceName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "TLSInspectionConfiguration": {
        "type": "object",
        "properties": {
          "ServerCertificateConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerCertificateConfigurations"
              },
              {
                "description": "Lists the server certificate configurations that are associated with the TLS configuration."
              }
            ]
          }
        },
        "description": "<p>The object that defines a TLS inspection configuration. This, along with <a>TLSInspectionConfigurationResponse</a>, define the TLS inspection configuration. You can retrieve all objects for a TLS inspection configuration by calling <a>DescribeTLSInspectionConfiguration</a>. </p> <p>Network Firewall uses a TLS inspection configuration to decrypt traffic. Network Firewall re-encrypts the traffic before sending it to its destination.</p> <p>To use a TLS inspection configuration, you add it to a Network Firewall firewall policy, then you apply the firewall policy to a firewall. Network Firewall acts as a proxy service to decrypt and inspect inbound traffic. You can reference a TLS inspection configuration from more than one firewall policy, and you can use a firewall policy in more than one firewall. For more information about using TLS inspection configurations, see <a href=\"https://docs.aws.amazon.com/network-firewall/latest/developerguide/tls-inspection.html\">Decrypting SSL/TLS traffic with TLS inspection configurations</a> in the <i>Network Firewall Developer Guide</i>.</p>"
      },
      "ServerCertificateConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ServerCertificateConfiguration"
        }
      },
      "ServerCertificateConfiguration": {
        "type": "object",
        "properties": {
          "ServerCertificates": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerCertificates"
              },
              {
                "description": "The list of a server certificate configuration's Certificate Manager SSL/TLS certificates."
              }
            ]
          },
          "Scopes": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerCertificateScopes"
              },
              {
                "description": "A list of a server certificate configuration's scopes."
              }
            ]
          }
        },
        "description": "<p>Configures the associated Certificate Manager Secure Sockets Layer/Transport Layer Security (SSL/TLS) server certificates and scope settings Network Firewall uses to decrypt traffic in a <a>TLSInspectionConfiguration</a>. For information about working with SSL/TLS certificates for TLS inspection, see <a href=\"https://docs.aws.amazon.com/network-firewall/latest/developerguide/tls-inspection-certificate-requirements.html\"> Requirements for using SSL/TLS server certficiates with TLS inspection configurations</a> in the <i>Network Firewall Developer Guide</i>.</p> <note> <p>If a server certificate that's associated with your <a>TLSInspectionConfiguration</a> is revoked, deleted, or expired it can result in client-side TLS errors.</p> </note>"
      },
      "ServerCertificates": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ServerCertificate"
        }
      },
      "ServerCertificate": {
        "type": "object",
        "properties": {
          "ResourceArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Certificate Manager SSL/TLS server certificate."
              }
            ]
          }
        },
        "description": "Any Certificate Manager Secure Sockets Layer/Transport Layer Security (SSL/TLS) server certificate that's associated with a <a>ServerCertificateConfiguration</a> used in a <a>TLSInspectionConfiguration</a>. You must request or import a SSL/TLS certificate into ACM for each domain Network Firewall needs to decrypt and inspect. Network Firewall uses the SSL/TLS certificates to decrypt specified inbound SSL/TLS traffic going to your firewall. For information about working with certificates in Certificate Manager, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-public.html\">Request a public certificate </a> or <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\">Importing certificates</a> in the <i>Certificate Manager User Guide</i>."
      },
      "ResourceArn": {
        "type": "string",
        "pattern": "^arn:aws.*",
        "minLength": 1,
        "maxLength": 256
      },
      "ServerCertificateScopes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ServerCertificateScope"
        }
      },
      "ServerCertificateScope": {
        "type": "object",
        "properties": {
          "Sources": {
            "allOf": [
              {
                "$ref": "#/$defs/Addresses"
              },
              {
                "description": "The source IP addresses and address ranges to decrypt for inspection, in CIDR notation. If not specified, this matches with any source address."
              }
            ]
          },
          "Destinations": {
            "allOf": [
              {
                "$ref": "#/$defs/Addresses"
              },
              {
                "description": "The destination IP addresses and address ranges to decrypt for inspection, in CIDR notation. If not specified, this matches with any destination address."
              }
            ]
          },
          "SourcePorts": {
            "allOf": [
              {
                "$ref": "#/$defs/PortRanges"
              },
              {
                "description": "<p>The source ports to decrypt for inspection, in Transmission Control Protocol (TCP) format. If not specified, this matches with any source port.</p> <p>You can specify individual ports, for example <code>1994</code>, and you can specify port ranges, such as <code>1990:1994</code>.</p>"
              }
            ]
          },
          "DestinationPorts": {
            "allOf": [
              {
                "$ref": "#/$defs/PortRanges"
              },
              {
                "description": "<p>The destination ports to decrypt for inspection, in Transmission Control Protocol (TCP) format. If not specified, this matches with any destination port.</p> <p>You can specify individual ports, for example <code>1994</code>, and you can specify port ranges, such as <code>1990:1994</code>.</p>"
              }
            ]
          },
          "Protocols": {
            "allOf": [
              {
                "$ref": "#/$defs/ProtocolNumbers"
              },
              {
                "description": "The protocols to decrypt for inspection, specified using each protocol's assigned internet protocol number (IANA). Network Firewall currently supports only TCP."
              }
            ]
          }
        },
        "description": "Settings that define the Secure Sockets Layer/Transport Layer Security (SSL/TLS) traffic that Network Firewall should decrypt for inspection by the stateful rule engine."
      },
      "Addresses": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Address"
        }
      },
      "Address": {
        "type": "object",
        "required": [
          "AddressDefinition"
        ],
        "properties": {
          "AddressDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/AddressDefinition"
              },
              {
                "description": "<p>Specify an IP address or a block of IP addresses in Classless Inter-Domain Routing (CIDR) notation. Network Firewall supports all address ranges for IPv4 and IPv6. </p> <p>Examples: </p> <ul> <li> <p>To configure Network Firewall to inspect for the IP address 192.0.2.44, specify <code>192.0.2.44/32</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for IP addresses from 192.0.2.0 to 192.0.2.255, specify <code>192.0.2.0/24</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for the IP address 1111:0000:0000:0000:0000:0000:0000:0111, specify <code>1111:0000:0000:0000:0000:0000:0000:0111/128</code>.</p> </li> <li> <p>To configure Network Firewall to inspect for IP addresses from 1111:0000:0000:0000:0000:0000:0000:0000 to 1111:0000:0000:0000:ffff:ffff:ffff:ffff, specify <code>1111:0000:0000:0000:0000:0000:0000:0000/64</code>.</p> </li> </ul> <p>For more information about CIDR notation, see the Wikipedia entry <a href=\"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Classless Inter-Domain Routing</a>.</p>"
              }
            ]
          }
        },
        "description": "A single IP address specification. This is used in the <a>MatchAttributes</a> source and destination specifications."
      },
      "AddressDefinition": {
        "type": "string",
        "pattern": "^([a-fA-F\\d:\\.]+($|/\\d{1,3}))$",
        "minLength": 1,
        "maxLength": 255
      },
      "PortRanges": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PortRange"
        }
      },
      "PortRange": {
        "type": "object",
        "required": [
          "FromPort",
          "ToPort"
        ],
        "properties": {
          "FromPort": {
            "allOf": [
              {
                "$ref": "#/$defs/PortRangeBound"
              },
              {
                "description": "The lower limit of the port range. This must be less than or equal to the <code>ToPort</code> specification. "
              }
            ]
          },
          "ToPort": {
            "allOf": [
              {
                "$ref": "#/$defs/PortRangeBound"
              },
              {
                "description": "The upper limit of the port range. This must be greater than or equal to the <code>FromPort</code> specification. "
              }
            ]
          }
        },
        "description": "A single port range specification. This is used for source and destination port ranges in the stateless rule <a>MatchAttributes</a>, <code>SourcePorts</code>, and <code>DestinationPorts</code> settings. "
      },
      "PortRangeBound": {
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      },
      "ProtocolNumbers": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ProtocolNumber"
        }
      },
      "ProtocolNumber": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "Description": {
        "type": "string",
        "pattern": "^.*$",
        "maxLength": 512
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 1,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as \"customer.\" Tag keys are case-sensitive."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as \"companyA\" or \"companyB.\" Tag values are case-sensitive."
              }
            ]
          }
        },
        "description": "A key:value pair associated with an Amazon Web Services resource. The key:value pair can be anything you define. Typically, the tag key represents a category (such as \"environment\") and the tag value represents a specific value within that category (such as \"test,\" \"development,\" or \"production\"). You can add up to 50 tags to each Amazon Web Services resource. "
      },
      "TagKey": {
        "type": "string",
        "pattern": "^.*$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^.*$",
        "minLength": 0,
        "maxLength": 256
      },
      "EncryptionConfiguration": {
        "type": "object",
        "required": [
          "Type"
        ],
        "properties": {
          "KeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyId"
              },
              {
                "description": "The ID of the Amazon Web Services Key Management Service (KMS) customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id\">Key ID</a> in the <i>Amazon Web Services KMS Developer Guide</i>."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionType"
              },
              {
                "description": "The type of Amazon Web Services KMS key to use for encryption of your Network Firewall resources."
              }
            ]
          }
        },
        "description": "A complex type that contains optional Amazon Web Services Key Management Service (KMS) encryption settings for your Network Firewall resources. Your data is encrypted by default with an Amazon Web Services owned key that Amazon Web Services owns and manages for you. You can use either the Amazon Web Services owned key, or provide your own customer managed key. To learn more about KMS encryption of your Network Firewall resources, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/kms-encryption-at-rest.html\">Encryption at rest with Amazon Web Services Key Managment Service</a> in the <i>Network Firewall Developer Guide</i>."
      },
      "KeyId": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "EncryptionType": {
        "type": "string",
        "enum": [
          "CUSTOMER_KMS",
          "AWS_OWNED_KMS_KEY"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://network-firewall.us-east-1.amazonaws.com/#X-Amz-Target=NetworkFirewall_20201112.CreateTLSInspectionConfiguration"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**UpdateToken**",
            "**TLSInspectionConfigurationResponse**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
