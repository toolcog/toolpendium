{
  "name": "UpdateVirtualService",
  "description": "Updates an existing virtual service in a specified service mesh.",
  "parameters": {
    "type": "object",
    "properties": {
      "meshName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The name of the service mesh that the virtual service resides in."
      },
      "meshOwner": {
        "type": "string",
        "minLength": 12,
        "maxLength": 12,
        "description": "The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html\">Working with shared meshes</a>."
      },
      "virtualServiceName": {
        "type": "string",
        "description": "The name of the virtual service to update."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "spec"
        ],
        "properties": {
          "clientToken": {
            "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.",
            "type": "string"
          },
          "spec": {
            "description": "An object that represents the specification of a virtual service.",
            "type": "object",
            "properties": {
              "provider": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VirtualServiceProvider"
                  },
                  {
                    "description": "The App Mesh object that is acting as the provider for a virtual service. You can specify a single virtual node or virtual router."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "meshName",
      "virtualServiceName",
      "body"
    ],
    "$defs": {
      "VirtualServiceProvider": {
        "type": "object",
        "properties": {
          "virtualNode": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualNodeServiceProvider"
              },
              {
                "description": "The virtual node associated with a virtual service."
              }
            ]
          },
          "virtualRouter": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualRouterServiceProvider"
              },
              {
                "description": "The virtual router associated with a virtual service."
              }
            ]
          }
        },
        "description": "An object that represents the provider for a virtual service."
      },
      "VirtualNodeServiceProvider": {
        "type": "object",
        "required": [
          "virtualNodeName"
        ],
        "properties": {
          "virtualNodeName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of the virtual node that is acting as a service provider."
              }
            ]
          }
        },
        "description": "An object that represents a virtual node service provider."
      },
      "ResourceName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "VirtualRouterServiceProvider": {
        "type": "object",
        "required": [
          "virtualRouterName"
        ],
        "properties": {
          "virtualRouterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of the virtual router that is acting as a service provider."
              }
            ]
          }
        },
        "description": "An object that represents a virtual node service provider."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://appmesh.us-east-1.amazonaws.com/v20190125/meshes/{meshName}/virtualServices/{virtualServiceName}{?meshOwner}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "<zonbook></zonbook><xhtml></xhtml>",
        "**Key properties:**",
        {
          "$ul": [
            "**virtualService**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
