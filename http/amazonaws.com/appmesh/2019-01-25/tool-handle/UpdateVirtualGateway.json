{
  "name": "UpdateVirtualGateway",
  "description": "Updates an existing virtual gateway in a specified service mesh.",
  "parameters": {
    "type": "object",
    "properties": {
      "meshName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The name of the service mesh that the virtual gateway resides in."
      },
      "meshOwner": {
        "type": "string",
        "minLength": 12,
        "maxLength": 12,
        "description": "The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html\">Working with shared meshes</a>."
      },
      "virtualGatewayName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The name of the virtual gateway to update."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "spec"
        ],
        "properties": {
          "clientToken": {
            "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.",
            "type": "string"
          },
          "spec": {
            "description": "An object that represents the specification of a service mesh resource.",
            "type": "object",
            "properties": {
              "backendDefaults": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VirtualGatewayBackendDefaults"
                  },
                  {
                    "description": "A reference to an object that represents the defaults for backends."
                  }
                ]
              },
              "listeners": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VirtualGatewayListeners"
                  },
                  {
                    "description": "The listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener."
                  }
                ]
              },
              "logging": {
                "$ref": "#/$defs/VirtualGatewayLogging"
              }
            }
          }
        }
      }
    },
    "required": [
      "meshName",
      "virtualGatewayName",
      "body"
    ],
    "$defs": {
      "VirtualGatewayBackendDefaults": {
        "type": "object",
        "properties": {
          "clientPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayClientPolicy"
              },
              {
                "description": "A reference to an object that represents a client policy."
              }
            ]
          }
        },
        "description": "An object that represents the default properties for a backend."
      },
      "VirtualGatewayClientPolicy": {
        "type": "object",
        "properties": {
          "tls": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayClientPolicyTls"
              },
              {
                "description": "A reference to an object that represents a Transport Layer Security (TLS) client policy."
              }
            ]
          }
        },
        "description": "An object that represents a client policy."
      },
      "VirtualGatewayClientPolicyTls": {
        "type": "object",
        "required": [
          "validation"
        ],
        "properties": {
          "certificate": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayClientTlsCertificate"
              },
              {
                "description": "A reference to an object that represents a virtual gateway's client's Transport Layer Security (TLS) certificate."
              }
            ]
          },
          "enforce": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Whether the policy is enforced. The default is <code>True</code>, if a value isn't specified."
              }
            ]
          },
          "ports": {
            "allOf": [
              {
                "$ref": "#/$defs/PortSet"
              },
              {
                "description": "One or more ports that the policy is enforced for."
              }
            ]
          },
          "validation": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayTlsValidationContext"
              },
              {
                "description": "A reference to an object that represents a Transport Layer Security (TLS) validation context."
              }
            ]
          }
        },
        "description": "An object that represents a Transport Layer Security (TLS) client policy."
      },
      "VirtualGatewayClientTlsCertificate": {
        "type": "object",
        "properties": {
          "file": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayListenerTlsFileCertificate"
              },
              {
                "description": "An object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/tls.html\"> Transport Layer Security (TLS) </a>."
              }
            ]
          },
          "sds": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayListenerTlsSdsCertificate"
              },
              {
                "description": "A reference to an object that represents a virtual gateway's client's Secret Discovery Service certificate."
              }
            ]
          }
        },
        "description": "An object that represents the virtual gateway's client's Transport Layer Security (TLS) certificate."
      },
      "VirtualGatewayListenerTlsFileCertificate": {
        "type": "object",
        "required": [
          "certificateChain",
          "privateKey"
        ],
        "properties": {
          "certificateChain": {
            "allOf": [
              {
                "$ref": "#/$defs/FilePath"
              },
              {
                "description": "The certificate chain for the certificate."
              }
            ]
          },
          "privateKey": {
            "allOf": [
              {
                "$ref": "#/$defs/FilePath"
              },
              {
                "description": "The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on."
              }
            ]
          }
        },
        "description": "An object that represents a local file certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/tls.html#virtual-node-tls-prerequisites\">Transport Layer Security (TLS)</a>."
      },
      "FilePath": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "VirtualGatewayListenerTlsSdsCertificate": {
        "type": "object",
        "required": [
          "secretName"
        ],
        "properties": {
          "secretName": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewaySdsSecretName"
              },
              {
                "description": "A reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain."
              }
            ]
          }
        },
        "description": "An object that represents the virtual gateway's listener's Secret Discovery Service certificate.The proxy must be configured with a local SDS provider via a Unix Domain Socket. See App Mesh<a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/tls.html\">TLS documentation</a> for more info. "
      },
      "VirtualGatewaySdsSecretName": {
        "type": "string"
      },
      "Boolean": {
        "type": "boolean"
      },
      "PortSet": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PortNumber"
        }
      },
      "PortNumber": {
        "type": "integer",
        "minimum": 1,
        "maximum": 65535
      },
      "VirtualGatewayTlsValidationContext": {
        "type": "object",
        "required": [
          "trust"
        ],
        "properties": {
          "subjectAlternativeNames": {
            "allOf": [
              {
                "$ref": "#/$defs/SubjectAlternativeNames"
              },
              {
                "description": "A reference to an object that represents the SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context."
              }
            ]
          },
          "trust": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayTlsValidationContextTrust"
              },
              {
                "description": "A reference to where to retrieve the trust chain when validating a peerâ€™s Transport Layer Security (TLS) certificate."
              }
            ]
          }
        },
        "description": "An object that represents a Transport Layer Security (TLS) validation context."
      },
      "SubjectAlternativeNames": {
        "type": "object",
        "required": [
          "match"
        ],
        "properties": {
          "match": {
            "allOf": [
              {
                "$ref": "#/$defs/SubjectAlternativeNameMatchers"
              },
              {
                "description": "An object that represents the criteria for determining a SANs match."
              }
            ]
          }
        },
        "description": "An object that represents the subject alternative names secured by the certificate."
      },
      "SubjectAlternativeNameMatchers": {
        "type": "object",
        "required": [
          "exact"
        ],
        "properties": {
          "exact": {
            "allOf": [
              {
                "$ref": "#/$defs/SubjectAlternativeNameList"
              },
              {
                "description": "The values sent must match the specified values exactly."
              }
            ]
          }
        },
        "description": "An object that represents the methods by which a subject alternative name on a peer Transport Layer Security (TLS) certificate can be matched."
      },
      "SubjectAlternativeNameList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubjectAlternativeName"
        }
      },
      "SubjectAlternativeName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 254
      },
      "VirtualGatewayTlsValidationContextTrust": {
        "type": "object",
        "properties": {
          "acm": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayTlsValidationContextAcmTrust"
              },
              {
                "description": "A reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate."
              }
            ]
          },
          "file": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayTlsValidationContextFileTrust"
              },
              {
                "description": "An object that represents a Transport Layer Security (TLS) validation context trust for a local file."
              }
            ]
          },
          "sds": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayTlsValidationContextSdsTrust"
              },
              {
                "description": "A reference to an object that represents a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust."
              }
            ]
          }
        },
        "description": "An object that represents a Transport Layer Security (TLS) validation context trust."
      },
      "VirtualGatewayTlsValidationContextAcmTrust": {
        "type": "object",
        "required": [
          "certificateAuthorityArns"
        ],
        "properties": {
          "certificateAuthorityArns": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayCertificateAuthorityArns"
              },
              {
                "description": "One or more ACM Amazon Resource Name (ARN)s."
              }
            ]
          }
        },
        "description": "An object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate."
      },
      "VirtualGatewayCertificateAuthorityArns": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Arn"
        },
        "minItems": 1,
        "maxItems": 3
      },
      "Arn": {
        "type": "string"
      },
      "VirtualGatewayTlsValidationContextFileTrust": {
        "type": "object",
        "required": [
          "certificateChain"
        ],
        "properties": {
          "certificateChain": {
            "allOf": [
              {
                "$ref": "#/$defs/FilePath"
              },
              {
                "description": "The certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on."
              }
            ]
          }
        },
        "description": "An object that represents a Transport Layer Security (TLS) validation context trust for a local file."
      },
      "VirtualGatewayTlsValidationContextSdsTrust": {
        "type": "object",
        "required": [
          "secretName"
        ],
        "properties": {
          "secretName": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewaySdsSecretName"
              },
              {
                "description": "A reference to an object that represents the name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust."
              }
            ]
          }
        },
        "description": "An object that represents a virtual gateway's listener's Transport Layer Security (TLS) Secret Discovery Service validation context trust. The proxy must be configured with a local SDS provider via a Unix Domain Socket. See App Mesh <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/tls.html\">TLS documentation</a> for more info."
      },
      "VirtualGatewayListeners": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VirtualGatewayListener"
        }
      },
      "VirtualGatewayListener": {
        "type": "object",
        "required": [
          "portMapping"
        ],
        "properties": {
          "connectionPool": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayConnectionPool"
              },
              {
                "description": "The connection pool information for the virtual gateway listener."
              }
            ]
          },
          "healthCheck": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayHealthCheckPolicy"
              },
              {
                "description": "The health check information for the listener."
              }
            ]
          },
          "portMapping": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayPortMapping"
              },
              {
                "description": "The port mapping information for the listener."
              }
            ]
          },
          "tls": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayListenerTls"
              },
              {
                "description": "A reference to an object that represents the Transport Layer Security (TLS) properties for the listener."
              }
            ]
          }
        },
        "description": "An object that represents a listener for a virtual gateway."
      },
      "VirtualGatewayConnectionPool": {
        "type": "object",
        "properties": {
          "grpc": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayGrpcConnectionPool"
              },
              {
                "description": "An object that represents a type of connection pool. "
              }
            ]
          },
          "http": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayHttpConnectionPool"
              },
              {
                "description": "An object that represents a type of connection pool."
              }
            ]
          },
          "http2": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayHttp2ConnectionPool"
              },
              {
                "description": "An object that represents a type of connection pool."
              }
            ]
          }
        },
        "description": "<p>An object that represents the type of virtual gateway connection pool.</p> <p>Only one protocol is used at a time and should be the same protocol as the one chosen under port mapping.</p> <p>If not present the default value for <code>maxPendingRequests</code> is <code>2147483647</code>.</p>"
      },
      "VirtualGatewayGrpcConnectionPool": {
        "type": "object",
        "required": [
          "maxRequests"
        ],
        "properties": {
          "maxRequests": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxRequests"
              },
              {
                "description": "Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster."
              }
            ]
          }
        },
        "description": "An object that represents a type of connection pool."
      },
      "MaxRequests": {
        "type": "integer",
        "minimum": 1
      },
      "VirtualGatewayHttpConnectionPool": {
        "type": "object",
        "required": [
          "maxConnections"
        ],
        "properties": {
          "maxConnections": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxConnections"
              },
              {
                "description": "Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster."
              }
            ]
          },
          "maxPendingRequests": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxPendingRequests"
              },
              {
                "description": "Number of overflowing requests after <code>max_connections</code> Envoy will queue to upstream cluster."
              }
            ]
          }
        },
        "description": "An object that represents a type of connection pool."
      },
      "MaxConnections": {
        "type": "integer",
        "minimum": 1
      },
      "MaxPendingRequests": {
        "type": "integer",
        "minimum": 1
      },
      "VirtualGatewayHttp2ConnectionPool": {
        "type": "object",
        "required": [
          "maxRequests"
        ],
        "properties": {
          "maxRequests": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxRequests"
              },
              {
                "description": "Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster."
              }
            ]
          }
        },
        "description": "An object that represents a type of connection pool."
      },
      "VirtualGatewayHealthCheckPolicy": {
        "type": "object",
        "required": [
          "healthyThreshold",
          "intervalMillis",
          "protocol",
          "timeoutMillis",
          "unhealthyThreshold"
        ],
        "properties": {
          "healthyThreshold": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayHealthCheckThreshold"
              },
              {
                "description": "The number of consecutive successful health checks that must occur before declaring the listener healthy."
              }
            ]
          },
          "intervalMillis": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayHealthCheckIntervalMillis"
              },
              {
                "description": "The time period in milliseconds between each health check execution."
              }
            ]
          },
          "path": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The destination path for the health check request. This value is only used if the specified protocol is HTTP or HTTP/2. For any other protocol, this value is ignored."
              }
            ]
          },
          "port": {
            "allOf": [
              {
                "$ref": "#/$defs/PortNumber"
              },
              {
                "description": "The destination port for the health check request. This port must match the port defined in the <a>PortMapping</a> for the listener."
              }
            ]
          },
          "protocol": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayPortProtocol"
              },
              {
                "description": "The protocol for the health check request. If you specify <code>grpc</code>, then your service must conform to the <a href=\"https://github.com/grpc/grpc/blob/master/doc/health-checking.md\">GRPC Health Checking Protocol</a>."
              }
            ]
          },
          "timeoutMillis": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayHealthCheckTimeoutMillis"
              },
              {
                "description": "The amount of time to wait when receiving a response from the health check, in milliseconds."
              }
            ]
          },
          "unhealthyThreshold": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayHealthCheckThreshold"
              },
              {
                "description": "The number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy."
              }
            ]
          }
        },
        "description": "An object that represents the health check policy for a virtual gateway's listener."
      },
      "VirtualGatewayHealthCheckThreshold": {
        "type": "integer",
        "minimum": 2,
        "maximum": 10
      },
      "VirtualGatewayHealthCheckIntervalMillis": {
        "type": "integer",
        "minimum": 5000,
        "maximum": 300000
      },
      "String": {
        "type": "string"
      },
      "VirtualGatewayPortProtocol": {
        "type": "string",
        "enum": [
          "http",
          "http2",
          "grpc"
        ]
      },
      "VirtualGatewayHealthCheckTimeoutMillis": {
        "type": "integer",
        "minimum": 2000,
        "maximum": 60000
      },
      "VirtualGatewayPortMapping": {
        "type": "object",
        "required": [
          "port",
          "protocol"
        ],
        "properties": {
          "port": {
            "allOf": [
              {
                "$ref": "#/$defs/PortNumber"
              },
              {
                "description": "The port used for the port mapping. Specify one protocol."
              }
            ]
          },
          "protocol": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayPortProtocol"
              },
              {
                "description": "The protocol used for the port mapping."
              }
            ]
          }
        },
        "description": "An object that represents a port mapping."
      },
      "VirtualGatewayListenerTls": {
        "type": "object",
        "required": [
          "certificate",
          "mode"
        ],
        "properties": {
          "certificate": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayListenerTlsCertificate"
              },
              {
                "description": "An object that represents a Transport Layer Security (TLS) certificate."
              }
            ]
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayListenerTlsMode"
              },
              {
                "description": "<p>Specify one of the following modes.</p> <ul> <li> <p> <b/>STRICT â€“ Listener only accepts connections with TLS enabled. </p> </li> <li> <p> <b/>PERMISSIVE â€“ Listener accepts connections with or without TLS enabled.</p> </li> <li> <p> <b/>DISABLED â€“ Listener only accepts connections without TLS. </p> </li> </ul>"
              }
            ]
          },
          "validation": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayListenerTlsValidationContext"
              },
              {
                "description": "A reference to an object that represents a virtual gateway's listener's Transport Layer Security (TLS) validation context."
              }
            ]
          }
        },
        "description": "An object that represents the Transport Layer Security (TLS) properties for a listener."
      },
      "VirtualGatewayListenerTlsCertificate": {
        "type": "object",
        "properties": {
          "acm": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayListenerTlsAcmCertificate"
              },
              {
                "description": "A reference to an object that represents an Certificate Manager certificate."
              }
            ]
          },
          "file": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayListenerTlsFileCertificate"
              },
              {
                "description": "A reference to an object that represents a local file certificate."
              }
            ]
          },
          "sds": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayListenerTlsSdsCertificate"
              },
              {
                "description": "A reference to an object that represents a virtual gateway's listener's Secret Discovery Service certificate."
              }
            ]
          }
        },
        "description": "An object that represents a listener's Transport Layer Security (TLS) certificate."
      },
      "VirtualGatewayListenerTlsAcmCertificate": {
        "type": "object",
        "required": [
          "certificateArn"
        ],
        "properties": {
          "certificateArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) for the certificate. The certificate must meet specific requirements and you must have proxy authorization enabled. For more information, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/tls.html#virtual-node-tls-prerequisites\">Transport Layer Security (TLS)</a>."
              }
            ]
          }
        },
        "description": "An object that represents an Certificate Manager certificate."
      },
      "VirtualGatewayListenerTlsMode": {
        "type": "string",
        "enum": [
          "STRICT",
          "PERMISSIVE",
          "DISABLED"
        ]
      },
      "VirtualGatewayListenerTlsValidationContext": {
        "type": "object",
        "required": [
          "trust"
        ],
        "properties": {
          "subjectAlternativeNames": {
            "allOf": [
              {
                "$ref": "#/$defs/SubjectAlternativeNames"
              },
              {
                "description": "A reference to an object that represents the SANs for a virtual gateway listener's Transport Layer Security (TLS) validation context."
              }
            ]
          },
          "trust": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayListenerTlsValidationContextTrust"
              },
              {
                "description": "A reference to where to retrieve the trust chain when validating a peerâ€™s Transport Layer Security (TLS) certificate."
              }
            ]
          }
        },
        "description": "An object that represents a virtual gateway's listener's Transport Layer Security (TLS) validation context."
      },
      "VirtualGatewayListenerTlsValidationContextTrust": {
        "type": "object",
        "properties": {
          "file": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayTlsValidationContextFileTrust"
              },
              {
                "description": "An object that represents a Transport Layer Security (TLS) validation context trust for a local file."
              }
            ]
          },
          "sds": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayTlsValidationContextSdsTrust"
              },
              {
                "description": "A reference to an object that represents a virtual gateway's listener's Transport Layer Security (TLS) Secret Discovery Service validation context trust."
              }
            ]
          }
        },
        "description": "An object that represents a virtual gateway's listener's Transport Layer Security (TLS) validation context trust."
      },
      "VirtualGatewayLogging": {
        "type": "object",
        "properties": {
          "accessLog": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayAccessLog"
              },
              {
                "description": "The access log configuration."
              }
            ]
          }
        },
        "description": "An object that represents logging information."
      },
      "VirtualGatewayAccessLog": {
        "type": "object",
        "properties": {
          "file": {
            "allOf": [
              {
                "$ref": "#/$defs/VirtualGatewayFileAccessLog"
              },
              {
                "description": "The file object to send virtual gateway access logs to."
              }
            ]
          }
        },
        "description": "The access log configuration for a virtual gateway."
      },
      "VirtualGatewayFileAccessLog": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "format": {
            "allOf": [
              {
                "$ref": "#/$defs/LoggingFormat"
              },
              {
                "description": "The specified format for the virtual gateway access logs. It can be either <code>json_format</code> or <code>text_format</code>."
              }
            ]
          },
          "path": {
            "allOf": [
              {
                "$ref": "#/$defs/FilePath"
              },
              {
                "description": "The file path to write access logs to. You can use <code>/dev/stdout</code> to send access logs to standard out and configure your Envoy container to use a log driver, such as <code>awslogs</code>, to export the access logs to a log storage service such as Amazon CloudWatch Logs. You can also specify a path in the Envoy container's file system to write the files to disk."
              }
            ]
          }
        },
        "description": "An object that represents an access log file."
      },
      "LoggingFormat": {
        "type": "object",
        "properties": {
          "json": {
            "allOf": [
              {
                "$ref": "#/$defs/JsonFormat"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "text": {
            "allOf": [
              {
                "$ref": "#/$defs/TextFormat"
              },
              {
                "description": "<p/>"
              }
            ]
          }
        },
        "description": "An object that represents the format for the logs."
      },
      "JsonFormat": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/JsonFormatRef"
        }
      },
      "JsonFormatRef": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/JsonKey"
              },
              {
                "description": "The specified key for the JSON."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/JsonValue"
              },
              {
                "description": "The specified value for the JSON."
              }
            ]
          }
        },
        "description": "An object that represents the key value pairs for the JSON."
      },
      "JsonKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "JsonValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "TextFormat": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://appmesh.us-east-1.amazonaws.com/v20190125/meshes/{meshName}/virtualGateways/{virtualGatewayName}{?meshOwner}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**virtualGateway**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
