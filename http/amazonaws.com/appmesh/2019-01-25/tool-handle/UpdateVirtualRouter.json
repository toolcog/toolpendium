{
  "name": "UpdateVirtualRouter",
  "description": "Updates an existing virtual router in a specified service mesh.",
  "parameters": {
    "type": "object",
    "properties": {
      "meshName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The name of the service mesh that the virtual router resides in."
      },
      "meshOwner": {
        "type": "string",
        "minLength": 12,
        "maxLength": 12,
        "description": "The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html\">Working with shared meshes</a>."
      },
      "virtualRouterName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The name of the virtual router to update."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "spec"
        ],
        "properties": {
          "clientToken": {
            "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.",
            "type": "string"
          },
          "spec": {
            "description": "An object that represents the specification of a virtual router.",
            "type": "object",
            "properties": {
              "listeners": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VirtualRouterListeners"
                  },
                  {
                    "description": "The listeners that the virtual router is expected to receive inbound traffic from. You can specify one listener."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "meshName",
      "virtualRouterName",
      "body"
    ],
    "$defs": {
      "VirtualRouterListeners": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VirtualRouterListener"
        }
      },
      "VirtualRouterListener": {
        "type": "object",
        "required": [
          "portMapping"
        ],
        "properties": {
          "portMapping": {
            "$ref": "#/$defs/PortMapping"
          }
        },
        "description": "An object that represents a virtual router listener."
      },
      "PortMapping": {
        "type": "object",
        "required": [
          "port",
          "protocol"
        ],
        "properties": {
          "port": {
            "allOf": [
              {
                "$ref": "#/$defs/PortNumber"
              },
              {
                "description": "The port used for the port mapping."
              }
            ]
          },
          "protocol": {
            "allOf": [
              {
                "$ref": "#/$defs/PortProtocol"
              },
              {
                "description": "The protocol used for the port mapping. Specify one protocol."
              }
            ]
          }
        },
        "description": "An object that represents a port mapping."
      },
      "PortNumber": {
        "type": "integer",
        "minimum": 1,
        "maximum": 65535
      },
      "PortProtocol": {
        "type": "string",
        "enum": [
          "http",
          "tcp",
          "http2",
          "grpc"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://appmesh.us-east-1.amazonaws.com/v20190125/meshes/{meshName}/virtualRouters/{virtualRouterName}{?meshOwner}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "<zonbook></zonbook><xhtml></xhtml>",
        "**Key properties:**",
        {
          "$ul": [
            "**virtualRouter**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
