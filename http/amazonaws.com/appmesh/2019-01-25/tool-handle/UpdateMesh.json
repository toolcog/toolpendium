{
  "name": "UpdateMesh",
  "description": "Updates an existing service mesh.",
  "parameters": {
    "type": "object",
    "properties": {
      "meshName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The name of the service mesh to update."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "clientToken": {
            "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.",
            "type": "string"
          },
          "spec": {
            "description": "An object that represents the specification of a service mesh.",
            "type": "object",
            "properties": {
              "egressFilter": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EgressFilter"
                  },
                  {
                    "description": "The egress filter rules for the service mesh."
                  }
                ]
              },
              "serviceDiscovery": {
                "$ref": "#/$defs/MeshServiceDiscovery"
              }
            }
          }
        }
      }
    },
    "required": [
      "meshName",
      "body"
    ],
    "$defs": {
      "EgressFilter": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/EgressFilterType"
              },
              {
                "description": "The egress filter type. By default, the type is <code>DROP_ALL</code>, which allows egress only from virtual nodes to other defined resources in the service mesh (and any traffic to <code>*.amazonaws.com</code> for Amazon Web Services API calls). You can set the egress filter type to <code>ALLOW_ALL</code> to allow egress to any endpoint inside or outside of the service mesh."
              }
            ]
          }
        },
        "description": "An object that represents the egress filter rules for a service mesh."
      },
      "EgressFilterType": {
        "type": "string",
        "enum": [
          "ALLOW_ALL",
          "DROP_ALL"
        ]
      },
      "MeshServiceDiscovery": {
        "type": "object",
        "properties": {
          "ipPreference": {
            "allOf": [
              {
                "$ref": "#/$defs/IpPreference"
              },
              {
                "description": "The IP version to use to control traffic within the mesh."
              }
            ]
          }
        },
        "description": "An object that represents the service discovery information for a service mesh."
      },
      "IpPreference": {
        "type": "string",
        "enum": [
          "IPv6_PREFERRED",
          "IPv4_PREFERRED",
          "IPv4_ONLY",
          "IPv6_ONLY"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://appmesh.us-east-1.amazonaws.com/v20190125/meshes/{meshName}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "<zonbook></zonbook><xhtml></xhtml>",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**mesh**: An object that represents a service mesh returned by a describe operation.",
              {
                "$ul": [
                  "**meshName**",
                  "**metadata**",
                  "**spec**",
                  "**status**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
