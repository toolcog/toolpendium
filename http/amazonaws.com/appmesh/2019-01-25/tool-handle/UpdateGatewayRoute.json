{
  "name": "UpdateGatewayRoute",
  "description": "Updates an existing gateway route that is associated to a specified virtual gateway in a service mesh.",
  "parameters": {
    "type": "object",
    "properties": {
      "gatewayRouteName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The name of the gateway route to update."
      },
      "meshName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The name of the service mesh that the gateway route resides in."
      },
      "meshOwner": {
        "type": "string",
        "minLength": 12,
        "maxLength": 12,
        "description": "The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html\">Working with shared meshes</a>."
      },
      "virtualGatewayName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The name of the virtual gateway that the gateway route is associated with."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "spec"
        ],
        "properties": {
          "clientToken": {
            "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.",
            "type": "string"
          },
          "spec": {
            "description": "An object that represents a gateway route specification. Specify one gateway route type.",
            "type": "object",
            "properties": {
              "grpcRoute": {
                "allOf": [
                  {
                    "$ref": "#/$defs/GrpcGatewayRoute"
                  },
                  {
                    "description": "An object that represents the specification of a gRPC gateway route."
                  }
                ]
              },
              "http2Route": {
                "allOf": [
                  {
                    "$ref": "#/$defs/HttpGatewayRoute"
                  },
                  {
                    "description": "An object that represents the specification of an HTTP/2 gateway route."
                  }
                ]
              },
              "httpRoute": {
                "allOf": [
                  {
                    "$ref": "#/$defs/HttpGatewayRoute"
                  },
                  {
                    "description": "An object that represents the specification of an HTTP gateway route."
                  }
                ]
              },
              "priority": {
                "allOf": [
                  {
                    "$ref": "#/$defs/GatewayRoutePriority"
                  },
                  {
                    "description": "The ordering of the gateway routes spec."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "gatewayRouteName",
      "meshName",
      "virtualGatewayName",
      "body"
    ],
    "$defs": {
      "GrpcGatewayRoute": {
        "type": "object",
        "required": [
          "action",
          "match"
        ],
        "properties": {
          "action": {
            "allOf": [
              {
                "$ref": "#/$defs/GrpcGatewayRouteAction"
              },
              {
                "description": "An object that represents the action to take if a match is determined."
              }
            ]
          },
          "match": {
            "allOf": [
              {
                "$ref": "#/$defs/GrpcGatewayRouteMatch"
              },
              {
                "description": "An object that represents the criteria for determining a request match."
              }
            ]
          }
        },
        "description": "An object that represents a gRPC gateway route."
      },
      "GrpcGatewayRouteAction": {
        "type": "object",
        "required": [
          "target"
        ],
        "properties": {
          "rewrite": {
            "allOf": [
              {
                "$ref": "#/$defs/GrpcGatewayRouteRewrite"
              },
              {
                "description": "The gateway route action to rewrite."
              }
            ]
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/$defs/GatewayRouteTarget"
              },
              {
                "description": "An object that represents the target that traffic is routed to when a request matches the gateway route."
              }
            ]
          }
        },
        "description": "An object that represents the action to take if a match is determined."
      },
      "GrpcGatewayRouteRewrite": {
        "type": "object",
        "properties": {
          "hostname": {
            "allOf": [
              {
                "$ref": "#/$defs/GatewayRouteHostnameRewrite"
              },
              {
                "description": "The host name of the gateway route to rewrite."
              }
            ]
          }
        },
        "description": "An object that represents the gateway route to rewrite."
      },
      "GatewayRouteHostnameRewrite": {
        "type": "object",
        "properties": {
          "defaultTargetHostname": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultGatewayRouteRewrite"
              },
              {
                "description": "The default target host name to write to."
              }
            ]
          }
        },
        "description": "An object representing the gateway route host name to rewrite."
      },
      "DefaultGatewayRouteRewrite": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "GatewayRouteTarget": {
        "type": "object",
        "required": [
          "virtualService"
        ],
        "properties": {
          "port": {
            "allOf": [
              {
                "$ref": "#/$defs/ListenerPort"
              },
              {
                "description": "The port number of the gateway route target."
              }
            ]
          },
          "virtualService": {
            "allOf": [
              {
                "$ref": "#/$defs/GatewayRouteVirtualService"
              },
              {
                "description": "An object that represents a virtual service gateway route target."
              }
            ]
          }
        },
        "description": "An object that represents a gateway route target."
      },
      "ListenerPort": {
        "type": "integer",
        "minimum": 1,
        "maximum": 65535
      },
      "GatewayRouteVirtualService": {
        "type": "object",
        "required": [
          "virtualServiceName"
        ],
        "properties": {
          "virtualServiceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of the virtual service that traffic is routed to."
              }
            ]
          }
        },
        "description": "An object that represents the virtual service that traffic is routed to."
      },
      "ResourceName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "GrpcGatewayRouteMatch": {
        "type": "object",
        "properties": {
          "hostname": {
            "allOf": [
              {
                "$ref": "#/$defs/GatewayRouteHostnameMatch"
              },
              {
                "description": "The gateway route host name to be matched on."
              }
            ]
          },
          "metadata": {
            "allOf": [
              {
                "$ref": "#/$defs/GrpcGatewayRouteMetadataList"
              },
              {
                "description": "The gateway route metadata to be matched on."
              }
            ]
          },
          "port": {
            "allOf": [
              {
                "$ref": "#/$defs/ListenerPort"
              },
              {
                "description": "The port number to match from the request."
              }
            ]
          },
          "serviceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceName"
              },
              {
                "description": "The fully qualified domain name for the service to match from the request."
              }
            ]
          }
        },
        "description": "An object that represents the criteria for determining a request match."
      },
      "GatewayRouteHostnameMatch": {
        "type": "object",
        "properties": {
          "exact": {
            "allOf": [
              {
                "$ref": "#/$defs/ExactHostName"
              },
              {
                "description": "The exact host name to match on."
              }
            ]
          },
          "suffix": {
            "allOf": [
              {
                "$ref": "#/$defs/SuffixHostname"
              },
              {
                "description": "The specified ending characters of the host name to match on."
              }
            ]
          }
        },
        "description": "An object representing the gateway route host name to match."
      },
      "ExactHostName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 253
      },
      "SuffixHostname": {
        "type": "string",
        "minLength": 1,
        "maxLength": 253
      },
      "GrpcGatewayRouteMetadataList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GrpcGatewayRouteMetadata"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "GrpcGatewayRouteMetadata": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "invert": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specify <code>True</code> to match anything except the match criteria. The default value is <code>False</code>."
              }
            ]
          },
          "match": {
            "allOf": [
              {
                "$ref": "#/$defs/GrpcMetadataMatchMethod"
              },
              {
                "description": "The criteria for determining a metadata match."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderName"
              },
              {
                "description": "A name for the gateway route metadata."
              }
            ]
          }
        },
        "description": "An object representing the metadata of the gateway route."
      },
      "Boolean": {
        "type": "boolean"
      },
      "GrpcMetadataMatchMethod": {
        "type": "object",
        "properties": {
          "exact": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderMatch"
              },
              {
                "description": "The exact method header to be matched on."
              }
            ]
          },
          "prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderMatch"
              },
              {
                "description": "The specified beginning characters of the method header to be matched on."
              }
            ]
          },
          "range": {
            "$ref": "#/$defs/MatchRange"
          },
          "regex": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderMatch"
              },
              {
                "description": "The regex used to match the method header."
              }
            ]
          },
          "suffix": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderMatch"
              },
              {
                "description": "The specified ending characters of the method header to match on."
              }
            ]
          }
        },
        "description": "An object representing the method header to be matched."
      },
      "HeaderMatch": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "MatchRange": {
        "type": "object",
        "required": [
          "end",
          "start"
        ],
        "properties": {
          "end": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "description": "The end of the range."
              }
            ]
          },
          "start": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "description": "The start of the range."
              }
            ]
          }
        },
        "description": "An object that represents the range of values to match on. The first character of the range is included in the range, though the last character is not. For example, if the range specified were 1-100, only values 1-99 would be matched."
      },
      "Long": {
        "type": "integer"
      },
      "HeaderName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 50
      },
      "ServiceName": {
        "type": "string"
      },
      "HttpGatewayRoute": {
        "type": "object",
        "required": [
          "action",
          "match"
        ],
        "properties": {
          "action": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpGatewayRouteAction"
              },
              {
                "description": "An object that represents the action to take if a match is determined."
              }
            ]
          },
          "match": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpGatewayRouteMatch"
              },
              {
                "description": "An object that represents the criteria for determining a request match."
              }
            ]
          }
        },
        "description": "An object that represents an HTTP gateway route."
      },
      "HttpGatewayRouteAction": {
        "type": "object",
        "required": [
          "target"
        ],
        "properties": {
          "rewrite": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpGatewayRouteRewrite"
              },
              {
                "description": "The gateway route action to rewrite."
              }
            ]
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/$defs/GatewayRouteTarget"
              },
              {
                "description": "An object that represents the target that traffic is routed to when a request matches the gateway route."
              }
            ]
          }
        },
        "description": "An object that represents the action to take if a match is determined."
      },
      "HttpGatewayRouteRewrite": {
        "type": "object",
        "properties": {
          "hostname": {
            "allOf": [
              {
                "$ref": "#/$defs/GatewayRouteHostnameRewrite"
              },
              {
                "description": "The host name to rewrite."
              }
            ]
          },
          "path": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpGatewayRoutePathRewrite"
              },
              {
                "description": "The path to rewrite."
              }
            ]
          },
          "prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpGatewayRoutePrefixRewrite"
              },
              {
                "description": "The specified beginning characters to rewrite."
              }
            ]
          }
        },
        "description": "An object representing the gateway route to rewrite."
      },
      "HttpGatewayRoutePathRewrite": {
        "type": "object",
        "properties": {
          "exact": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpPathExact"
              },
              {
                "description": "The exact path to rewrite."
              }
            ]
          }
        },
        "description": "An object that represents the path to rewrite."
      },
      "HttpPathExact": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "HttpGatewayRoutePrefixRewrite": {
        "type": "object",
        "properties": {
          "defaultPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultGatewayRouteRewrite"
              },
              {
                "description": "The default prefix used to replace the incoming route prefix when rewritten."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpGatewayRoutePrefix"
              },
              {
                "description": "The value used to replace the incoming route prefix when rewritten."
              }
            ]
          }
        },
        "description": "An object representing the beginning characters of the route to rewrite."
      },
      "HttpGatewayRoutePrefix": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "HttpGatewayRouteMatch": {
        "type": "object",
        "properties": {
          "headers": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpGatewayRouteHeaders"
              },
              {
                "description": "The client request headers to match on."
              }
            ]
          },
          "hostname": {
            "allOf": [
              {
                "$ref": "#/$defs/GatewayRouteHostnameMatch"
              },
              {
                "description": "The host name to match on."
              }
            ]
          },
          "method": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpMethod"
              },
              {
                "description": "The method to match on."
              }
            ]
          },
          "path": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpPathMatch"
              },
              {
                "description": "The path to match on."
              }
            ]
          },
          "port": {
            "allOf": [
              {
                "$ref": "#/$defs/ListenerPort"
              },
              {
                "description": "The port number to match on."
              }
            ]
          },
          "prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Specifies the path to match requests with. This parameter must always start with <code>/</code>, which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is <code>my-service.local</code> and you want the route to match requests to <code>my-service.local/metrics</code>, your prefix should be <code>/metrics</code>."
              }
            ]
          },
          "queryParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpQueryParameters"
              },
              {
                "description": "The query parameter to match on."
              }
            ]
          }
        },
        "description": "An object that represents the criteria for determining a request match."
      },
      "HttpGatewayRouteHeaders": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/HttpGatewayRouteHeader"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "HttpGatewayRouteHeader": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "invert": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specify <code>True</code> to match anything except the match criteria. The default value is <code>False</code>."
              }
            ]
          },
          "match": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderMatchMethod"
              },
              {
                "description": "An object that represents the method and value to match with the header value sent in a request. Specify one match method."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderName"
              },
              {
                "description": "A name for the HTTP header in the gateway route that will be matched on."
              }
            ]
          }
        },
        "description": "An object that represents the HTTP header in the gateway route."
      },
      "HeaderMatchMethod": {
        "type": "object",
        "properties": {
          "exact": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderMatch"
              },
              {
                "description": "The value sent by the client must match the specified value exactly."
              }
            ]
          },
          "prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderMatch"
              },
              {
                "description": "The value sent by the client must begin with the specified characters."
              }
            ]
          },
          "range": {
            "allOf": [
              {
                "$ref": "#/$defs/MatchRange"
              },
              {
                "description": "An object that represents the range of values to match on."
              }
            ]
          },
          "regex": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderMatch"
              },
              {
                "description": "The value sent by the client must include the specified characters."
              }
            ]
          },
          "suffix": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderMatch"
              },
              {
                "description": "The value sent by the client must end with the specified characters."
              }
            ]
          }
        },
        "description": "An object that represents the method and value to match with the header value sent in a request. Specify one match method."
      },
      "HttpMethod": {
        "type": "string",
        "enum": [
          "GET",
          "HEAD",
          "POST",
          "PUT",
          "DELETE",
          "CONNECT",
          "OPTIONS",
          "TRACE",
          "PATCH"
        ]
      },
      "HttpPathMatch": {
        "type": "object",
        "properties": {
          "exact": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpPathExact"
              },
              {
                "description": "The exact path to match on."
              }
            ]
          },
          "regex": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpPathRegex"
              },
              {
                "description": "The regex used to match the path."
              }
            ]
          }
        },
        "description": "An object representing the path to match in the request."
      },
      "HttpPathRegex": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "String": {
        "type": "string"
      },
      "HttpQueryParameters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/HttpQueryParameter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "HttpQueryParameter": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "match": {
            "allOf": [
              {
                "$ref": "#/$defs/QueryParameterMatch"
              },
              {
                "description": "The query parameter to match on."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/QueryParameterName"
              },
              {
                "description": "A name for the query parameter that will be matched on."
              }
            ]
          }
        },
        "description": "An object that represents the query parameter in the request."
      },
      "QueryParameterMatch": {
        "type": "object",
        "properties": {
          "exact": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The exact query parameter to match on."
              }
            ]
          }
        },
        "description": "An object representing the query parameter to match."
      },
      "QueryParameterName": {
        "type": "string"
      },
      "GatewayRoutePriority": {
        "type": "integer",
        "minimum": 0,
        "maximum": 1000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://appmesh.us-east-1.amazonaws.com/v20190125/meshes/{meshName}/virtualGateway/{virtualGatewayName}/gatewayRoutes/{gatewayRouteName}{?meshOwner}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**gatewayRoute**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
