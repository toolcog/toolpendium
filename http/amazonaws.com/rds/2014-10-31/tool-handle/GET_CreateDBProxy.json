{
  "name": "GET_CreateDBProxy",
  "description": "Creates a new DB proxy.",
  "parameters": {
    "type": "object",
    "properties": {
      "DBProxyName": {
        "type": "string",
        "description": "The identifier for the proxy. This name must be unique for all proxies owned by your Amazon Web Services account in the specified Amazon Web Services Region. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens."
      },
      "EngineFamily": {
        "type": "string",
        "enum": [
          "MYSQL",
          "POSTGRESQL",
          "SQLSERVER"
        ],
        "description": "The kinds of databases that the proxy can connect to. This value determines which database network protocol the proxy recognizes when it interprets network traffic to and from the database. For Aurora MySQL, RDS for MariaDB, and RDS for MySQL databases, specify <code>MYSQL</code>. For Aurora PostgreSQL and RDS for PostgreSQL databases, specify <code>POSTGRESQL</code>. For RDS for Microsoft SQL Server, specify <code>SQLSERVER</code>."
      },
      "Auth": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/UserAuthConfig"
        },
        "description": "The authorization mechanism that the proxy uses."
      },
      "RoleArn": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in Amazon Web Services Secrets Manager."
      },
      "VpcSubnetIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "description": "One or more VPC subnet IDs to associate with the new proxy."
      },
      "VpcSecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "description": "One or more VPC security group IDs to associate with the new proxy."
      },
      "RequireTLS": {
        "type": "boolean",
        "description": "A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy."
      },
      "IdleClientTimeout": {
        "type": "integer",
        "description": "The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database."
      },
      "DebugLogging": {
        "type": "boolean",
        "description": "Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs."
      },
      "Tags": {
        "type": "array",
        "description": "An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Tag"
            },
            {
              "xml": {
                "name": "Tag"
              }
            }
          ]
        }
      },
      "Action": {
        "type": "string",
        "enum": [
          "CreateDBProxy"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2014-10-31"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "DBProxyName",
      "EngineFamily",
      "Auth",
      "RoleArn",
      "VpcSubnetIds",
      "Action",
      "Version"
    ],
    "$defs": {
      "UserAuthConfig": {
        "type": "object",
        "properties": {
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A user-specified description about the authentication used by a proxy to log in as a specific database user."
              }
            ]
          },
          "UserName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the database user to which the proxy connects."
              }
            ]
          },
          "AuthScheme": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthScheme"
              },
              {
                "description": "The type of authentication that the proxy uses for connections from the proxy to the underlying database."
              }
            ]
          },
          "SecretArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager."
              }
            ]
          },
          "IAMAuth": {
            "allOf": [
              {
                "$ref": "#/$defs/IAMAuthMode"
              },
              {
                "description": "Whether to require or disallow Amazon Web Services Identity and Access Management (IAM) authentication for connections to the proxy. The <code>ENABLED</code> value is valid only for proxies with RDS for Microsoft SQL Server."
              }
            ]
          },
          "ClientPasswordAuthType": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientPasswordAuthType"
              },
              {
                "description": "The type of authentication the proxy uses for connections from clients."
              }
            ]
          }
        },
        "description": "Specifies the details of authentication used by a proxy to log in as a specific database user."
      },
      "String": {
        "type": "string"
      },
      "AuthScheme": {
        "type": "string",
        "enum": [
          "SECRETS"
        ]
      },
      "IAMAuthMode": {
        "type": "string",
        "enum": [
          "DISABLED",
          "REQUIRED",
          "ENABLED"
        ]
      },
      "ClientPasswordAuthType": {
        "type": "string",
        "enum": [
          "MYSQL_NATIVE_PASSWORD",
          "POSTGRES_SCRAM_SHA_256",
          "POSTGRES_MD5",
          "SQL_SERVER_AUTHENTICATION"
        ]
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with <code>aws:</code> or <code>rds:</code>. The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-@]*)$\")."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with <code>aws:</code> or <code>rds:</code>. The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-@]*)$\")."
              }
            ]
          }
        },
        "description": "<p>Metadata assigned to an Amazon RDS resource consisting of a key-value pair.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html\">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://rds.us-east-1.amazonaws.com/#Action=CreateDBProxy{?DBProxyName,EngineFamily,Auth,RoleArn,VpcSubnetIds,VpcSecurityGroupIds,RequireTLS,IdleClientTimeout,DebugLogging,Tags,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**DBProxy**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
