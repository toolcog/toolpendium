{
  "name": "GET_CreateCustomDBEngineVersion",
  "description": "Creates a custom DB engine version (CEV).",
  "parameters": {
    "type": "object",
    "properties": {
      "Engine": {
        "type": "string",
        "pattern": "^[A-Za-z0-9-]{1,35}$",
        "minLength": 1,
        "maxLength": 35,
        "description": "The database engine to use for your custom engine version (CEV). The only supported value is <code>custom-oracle-ee</code>."
      },
      "EngineVersion": {
        "type": "string",
        "pattern": "^[a-z0-9_.-]{1,60}$",
        "minLength": 1,
        "maxLength": 60,
        "description": "The name of your CEV. The name format is 19.<i>customized_string</i>. For example, a valid CEV name is <code>19.my_cev1</code>. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of <code>Engine</code> and <code>EngineVersion</code> is unique per customer per Region."
      },
      "DatabaseInstallationFilesS3BucketName": {
        "type": "string",
        "pattern": ".*",
        "minLength": 3,
        "maxLength": 63,
        "description": "The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is <code>my-custom-installation-files</code>."
      },
      "DatabaseInstallationFilesS3Prefix": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 255,
        "description": "The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is <code>123456789012/cev1</code>. If this setting isn't specified, no prefix is assumed."
      },
      "ImageId": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 255,
        "description": "The ID of the Amazon Machine Image (AMI). For RDS Custom for SQL Server, an AMI ID is required to create a CEV. For RDS Custom for Oracle, the default is the most recent AMI available, but you can specify an AMI ID that was used in a different Oracle CEV. Find the AMIs used by your CEVs by calling the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBEngineVersions.html\">DescribeDBEngineVersions</a> operation."
      },
      "KMSKeyId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_:\\-\\/]+",
        "minLength": 1,
        "maxLength": 2048,
        "description": "<p>The Amazon Web Services KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.</p> <p>If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk\"> Creating a symmetric encryption KMS key</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p> <p>You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.</p>"
      },
      "Description": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 1000,
        "description": "An optional description of your CEV."
      },
      "Manifest": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "maxLength": 51000,
        "description": "<p>The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.</p> <p>The following JSON fields are valid:</p> <dl> <dt>MediaImportTemplateVersion</dt> <dd> <p>Version of the CEV manifest. The date is in the format <code>YYYY-MM-DD</code>.</p> </dd> <dt>databaseInstallationFileNames</dt> <dd> <p>Ordered list of installation files for the CEV.</p> </dd> <dt>opatchFileNames</dt> <dd> <p>Ordered list of OPatch installers used for the Oracle DB engine.</p> </dd> <dt>psuRuPatchFileNames</dt> <dd> <p>The PSU and RU patches for this CEV.</p> </dd> <dt>OtherPatchFileNames</dt> <dd> <p>The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches.</p> </dd> </dl> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest\"> Creating the CEV manifest</a> in the <i>Amazon RDS User Guide</i>.</p>"
      },
      "Tags": {
        "type": "array",
        "description": "",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Tag"
            },
            {
              "xml": {
                "name": "Tag"
              }
            }
          ]
        }
      },
      "Action": {
        "type": "string",
        "enum": [
          "CreateCustomDBEngineVersion"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2014-10-31"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Engine",
      "EngineVersion",
      "Action",
      "Version"
    ],
    "$defs": {
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with <code>aws:</code> or <code>rds:</code>. The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-@]*)$\")."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with <code>aws:</code> or <code>rds:</code>. The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-@]*)$\")."
              }
            ]
          }
        },
        "description": "<p>Metadata assigned to an Amazon RDS resource consisting of a key-value pair.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html\">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>"
      },
      "String": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://rds.us-east-1.amazonaws.com/#Action=CreateCustomDBEngineVersion{?Engine,EngineVersion,DatabaseInstallationFilesS3BucketName,DatabaseInstallationFilesS3Prefix,ImageId,KMSKeyId,Description,Manifest,Tags,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This data type is used as a response element in the action <code>DescribeDBEngineVersions</code>.",
        "**Key properties:**",
        {
          "$ul": [
            "**Engine**",
            "**EngineVersion**",
            "**DBParameterGroupFamily**",
            "**DBEngineDescription**",
            "**DBEngineVersionDescription**",
            "**DefaultCharacterSet**",
            "**Image**",
            "**DBEngineMediaType**",
            "**SupportedCharacterSets**",
            "**SupportedNcharCharacterSets**",
            "**ValidUpgradeTarget**",
            "**SupportedTimezones**",
            "**ExportableLogTypes**",
            "**SupportsLogExportsToCloudwatchLogs**",
            "**SupportsReadReplica**",
            "**SupportedEngineModes**",
            "**SupportedFeatureNames**",
            "**Status**",
            "**SupportsParallelQuery**",
            "**SupportsGlobalDatabases**",
            "**MajorEngineVersion**",
            "**DatabaseInstallationFilesS3BucketName**",
            "**DatabaseInstallationFilesS3Prefix**",
            "**DBEngineVersionArn**",
            "**KMSKeyId**",
            "**CreateTime**",
            "**TagList**: A list of tags. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html\">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> ",
            "**SupportsBabelfish**",
            "**CustomDBEngineVersionManifest**",
            "**SupportsCertificateRotationWithoutRestart**",
            "**SupportedCACertificateIdentifiers**",
            "**SupportsLocalWriteForwarding**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
