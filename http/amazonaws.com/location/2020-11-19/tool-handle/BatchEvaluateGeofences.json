{
  "name": "BatchEvaluateGeofences",
  "description": "<p>Evaluates device positions against the geofence geometries from a given geofence collection.</p> <p>This operation always returns an empty response because geofences are asynchronously evaluated. The evaluation determines if the device has entered or exited a geofenced area, and then publishes one of the following events to Amazon EventBridge:</p> <ul> <li> <p> <code>ENTER</code> if Amazon Location determines that the tracked device has entered a geofenced area.</p> </li> <li> <p> <code>EXIT</code> if Amazon Location determines that the tracked device has exited a geofenced area.</p> </li> </ul> <note> <p>The last geofence that a device was observed within is tracked for 30 days after the most recent device position update.</p> </note> <note> <p>Geofence evaluation uses the given device position. It does not account for the optional <code>Accuracy</code> of a <code>DevicePositionUpdate</code>.</p> </note> <note> <p>The <code>DeviceID</code> is used as a string to represent the device. You do not need to have a <code>Tracker</code> associated with the <code>DeviceID</code>.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "CollectionName": {
        "type": "string",
        "pattern": "^[-._\\w]+$",
        "minLength": 1,
        "maxLength": 100,
        "description": "The geofence collection used in evaluating the position of devices against its geofences."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "DevicePositionUpdates"
        ],
        "properties": {
          "DevicePositionUpdates": {
            "description": "Contains device details for each device to be evaluated against the given geofence collection.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/DevicePositionUpdate"
            },
            "minItems": 1,
            "maxItems": 10
          }
        }
      }
    },
    "required": [
      "CollectionName",
      "body"
    ],
    "$defs": {
      "DevicePositionUpdate": {
        "type": "object",
        "required": [
          "DeviceId",
          "Position",
          "SampleTime"
        ],
        "properties": {
          "Accuracy": {
            "allOf": [
              {
                "$ref": "#/$defs/PositionalAccuracy"
              },
              {
                "description": "The accuracy of the device position."
              }
            ]
          },
          "DeviceId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The device associated to the position update."
              }
            ]
          },
          "Position": {
            "allOf": [
              {
                "$ref": "#/$defs/Position"
              },
              {
                "description": "The latest device position defined in <a href=\"https://earth-info.nga.mil/index.php?dir=wgs84&amp;action=wgs84\">WGS 84</a> format: <code>[X or longitude, Y or latitude]</code>."
              }
            ]
          },
          "PositionProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/PropertyMap"
              },
              {
                "description": "<p>Associates one of more properties with the position update. A property is a key-value pair stored with the position update and added to any geofence event the update may trigger.</p> <p>Format: <code>\"key\" : \"value\"</code> </p>"
              }
            ]
          },
          "SampleTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The timestamp at which the device's position was determined. Uses <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> "
              }
            ]
          }
        },
        "description": "Contains the position update details for a device."
      },
      "PositionalAccuracy": {
        "type": "object",
        "required": [
          "Horizontal"
        ],
        "properties": {
          "Horizontal": {
            "allOf": [
              {
                "$ref": "#/$defs/PositionalAccuracyHorizontalDouble"
              },
              {
                "description": "Estimated maximum distance, in meters, between the measured position and the true position of a device, along the Earth's surface."
              }
            ]
          }
        },
        "description": "Defines the level of certainty of the position."
      },
      "PositionalAccuracyHorizontalDouble": {
        "type": "number",
        "format": "double",
        "minimum": 0,
        "maximum": 10000
      },
      "Id": {
        "type": "string",
        "pattern": "^[-._\\p{L}\\p{N}]+$",
        "minLength": 1,
        "maxLength": 100
      },
      "Position": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Double"
        },
        "minItems": 2,
        "maxItems": 2
      },
      "Double": {
        "type": "number",
        "format": "double"
      },
      "PropertyMap": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 3,
        "additionalProperties": {
          "$ref": "#/$defs/PropertyMapValueString"
        }
      },
      "PropertyMapValueString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 40
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://geo.us-east-1.amazonaws.com/geofencing/v0/collections/{CollectionName}/positions"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
