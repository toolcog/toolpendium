{
  "name": "CalculateRoute",
  "description": "<p> <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/calculate-route.html\">Calculates a route</a> given the following required parameters: <code>DeparturePosition</code> and <code>DestinationPosition</code>. Requires that you first <a href=\"https://docs.aws.amazon.com/location-routes/latest/APIReference/API_CreateRouteCalculator.html\">create a route calculator resource</a>.</p> <p>By default, a request that doesn't specify a departure time uses the best time of day to travel with the best traffic conditions when calculating the route.</p> <p>Additional options include:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/departure-time.html\">Specifying a departure time</a> using either <code>DepartureTime</code> or <code>DepartNow</code>. This calculates a route based on predictive traffic data at the given time. </p> <note> <p>You can't specify both <code>DepartureTime</code> and <code>DepartNow</code> in a single request. Specifying both parameters returns a validation error.</p> </note> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/travel-mode.html\">Specifying a travel mode</a> using TravelMode sets the transportation mode used to calculate the routes. This also lets you specify additional route preferences in <code>CarModeOptions</code> if traveling by <code>Car</code>, or <code>TruckModeOptions</code> if traveling by <code>Truck</code>.</p> <note> <p>If you specify <code>walking</code> for the travel mode and your data provider is Esri, the start and destination must be within 40km.</p> </note> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "CalculatorName": {
        "type": "string",
        "pattern": "^[-._\\w]+$",
        "minLength": 1,
        "maxLength": 100,
        "description": "The name of the route calculator resource that you want to use to calculate the route. "
      },
      "key": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1000,
        "format": "password",
        "description": "The optional <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html\">API key</a> to authorize the request."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "DeparturePosition",
          "DestinationPosition"
        ],
        "properties": {
          "CarModeOptions": {
            "description": "Contains details about additional route preferences for requests that specify <code>TravelMode</code> as <code>Car</code>.",
            "type": "object",
            "properties": {
              "AvoidFerries": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": "<p>Avoids ferries when calculating routes.</p> <p>Default Value: <code>false</code> </p> <p>Valid Values: <code>false</code> | <code>true</code> </p>"
                  }
                ]
              },
              "AvoidTolls": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": "<p>Avoids tolls when calculating routes.</p> <p>Default Value: <code>false</code> </p> <p>Valid Values: <code>false</code> | <code>true</code> </p>"
                  }
                ]
              }
            }
          },
          "DepartNow": {
            "description": "<p>Sets the time of departure as the current time. Uses the current time to calculate a route. Otherwise, the best time of day to travel with the best traffic conditions is used to calculate the route.</p> <p>Default Value: <code>false</code> </p> <p>Valid Values: <code>false</code> | <code>true</code> </p>",
            "type": "boolean"
          },
          "DeparturePosition": {
            "description": "<p>The start position for the route. Defined in <a href=\"https://earth-info.nga.mil/index.php?dir=wgs84&amp;action=wgs84\">World Geodetic System (WGS 84)</a> format: <code>[longitude, latitude]</code>.</p> <ul> <li> <p>For example, <code>[-123.115, 49.285]</code> </p> </li> </ul> <note> <p>If you specify a departure that's not located on a road, Amazon Location <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html\">moves the position to the nearest road</a>. If Esri is the provider for your route calculator, specifying a route that is longer than 400 km returns a <code>400 RoutesValidationException</code> error.</p> </note> <p>Valid Values: <code>[-180 to 180,-90 to 90]</code> </p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Double"
            },
            "minItems": 2,
            "maxItems": 2
          },
          "DepartureTime": {
            "description": "<p>Specifies the desired time of departure. Uses the given time to calculate the route. Otherwise, the best time of day to travel with the best traffic conditions is used to calculate the route.</p> <note> <p>Setting a departure time in the past returns a <code>400 ValidationException</code> error.</p> </note> <ul> <li> <p>In <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. For example, <code>2020â€“07-2T12:15:20.000Z+01:00</code> </p> </li> </ul>",
            "type": "string",
            "format": "date-time"
          },
          "DestinationPosition": {
            "description": "<p>The finish position for the route. Defined in <a href=\"https://earth-info.nga.mil/index.php?dir=wgs84&amp;action=wgs84\">World Geodetic System (WGS 84)</a> format: <code>[longitude, latitude]</code>.</p> <ul> <li> <p> For example, <code>[-122.339, 47.615]</code> </p> </li> </ul> <note> <p>If you specify a destination that's not located on a road, Amazon Location <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html\">moves the position to the nearest road</a>. </p> </note> <p>Valid Values: <code>[-180 to 180,-90 to 90]</code> </p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Double"
            },
            "minItems": 2,
            "maxItems": 2
          },
          "DistanceUnit": {
            "description": "<p>Set the unit system to specify the distance.</p> <p>Default Value: <code>Kilometers</code> </p>",
            "type": "string",
            "enum": [
              "Kilometers",
              "Miles"
            ]
          },
          "IncludeLegGeometry": {
            "description": "<p>Set to include the geometry details in the result for each path between a pair of positions.</p> <p>Default Value: <code>false</code> </p> <p>Valid Values: <code>false</code> | <code>true</code> </p>",
            "type": "boolean"
          },
          "TravelMode": {
            "description": "<p>Specifies the mode of transport when calculating a route. Used in estimating the speed of travel and road compatibility. You can choose <code>Car</code>, <code>Truck</code>, <code>Walking</code>, <code>Bicycle</code> or <code>Motorcycle</code> as options for the <code>TravelMode</code>.</p> <note> <p> <code>Bicycle</code> and <code>Motorcycle</code> are only valid when using Grab as a data provider, and only within Southeast Asia.</p> <p> <code>Truck</code> is not available for Grab.</p> <p>For more details on the using Grab for routing, including areas of coverage, see <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/grab.html\">GrabMaps</a> in the <i>Amazon Location Service Developer Guide</i>.</p> </note> <p>The <code>TravelMode</code> you specify also determines how you specify route preferences: </p> <ul> <li> <p>If traveling by <code>Car</code> use the <code>CarModeOptions</code> parameter.</p> </li> <li> <p>If traveling by <code>Truck</code> use the <code>TruckModeOptions</code> parameter.</p> </li> </ul> <p>Default Value: <code>Car</code> </p>",
            "type": "string",
            "enum": [
              "Car",
              "Truck",
              "Walking",
              "Bicycle",
              "Motorcycle"
            ]
          },
          "TruckModeOptions": {
            "description": "Contains details about additional route preferences for requests that specify <code>TravelMode</code> as <code>Truck</code>.",
            "type": "object",
            "properties": {
              "AvoidFerries": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": "<p>Avoids ferries when calculating routes.</p> <p>Default Value: <code>false</code> </p> <p>Valid Values: <code>false</code> | <code>true</code> </p>"
                  }
                ]
              },
              "AvoidTolls": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": "<p>Avoids tolls when calculating routes.</p> <p>Default Value: <code>false</code> </p> <p>Valid Values: <code>false</code> | <code>true</code> </p>"
                  }
                ]
              },
              "Dimensions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TruckDimensions"
                  },
                  {
                    "description": "Specifies the truck's dimension specifications including length, height, width, and unit of measurement. Used to avoid roads that can't support the truck's dimensions."
                  }
                ]
              },
              "Weight": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TruckWeight"
                  },
                  {
                    "description": "Specifies the truck's weight specifications including total weight and unit of measurement. Used to avoid roads that can't support the truck's weight."
                  }
                ]
              }
            }
          },
          "WaypointPositions": {
            "description": "<p>Specifies an ordered list of up to 23 intermediate positions to include along a route between the departure position and destination position. </p> <ul> <li> <p>For example, from the <code>DeparturePosition</code> <code>[-123.115, 49.285]</code>, the route follows the order that the waypoint positions are given <code>[[-122.757, 49.0021],[-122.349, 47.620]]</code> </p> </li> </ul> <note> <p>If you specify a waypoint position that's not located on a road, Amazon Location <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html\">moves the position to the nearest road</a>. </p> <p>Specifying more than 23 waypoints returns a <code>400 ValidationException</code> error.</p> <p>If Esri is the provider for your route calculator, specifying a route that is longer than 400 km returns a <code>400 RoutesValidationException</code> error.</p> </note> <p>Valid Values: <code>[-180 to 180,-90 to 90]</code> </p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Position"
            },
            "minItems": 0,
            "maxItems": 23
          }
        }
      }
    },
    "required": [
      "CalculatorName",
      "body"
    ],
    "$defs": {
      "Boolean": {
        "type": "boolean"
      },
      "Double": {
        "type": "number",
        "format": "double"
      },
      "TruckDimensions": {
        "type": "object",
        "properties": {
          "Height": {
            "allOf": [
              {
                "$ref": "#/$defs/TruckDimensionsHeightDouble"
              },
              {
                "description": "<p>The height of the truck.</p> <ul> <li> <p>For example, <code>4.5</code>.</p> </li> </ul> <note> <p> For routes calculated with a HERE resource, this value must be between 0 and 50 meters. </p> </note>"
              }
            ]
          },
          "Length": {
            "allOf": [
              {
                "$ref": "#/$defs/TruckDimensionsLengthDouble"
              },
              {
                "description": "<p>The length of the truck.</p> <ul> <li> <p>For example, <code>15.5</code>.</p> </li> </ul> <note> <p> For routes calculated with a HERE resource, this value must be between 0 and 300 meters. </p> </note>"
              }
            ]
          },
          "Unit": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionUnit"
              },
              {
                "description": "<p> Specifies the unit of measurement for the truck dimensions.</p> <p>Default Value: <code>Meters</code> </p>"
              }
            ]
          },
          "Width": {
            "allOf": [
              {
                "$ref": "#/$defs/TruckDimensionsWidthDouble"
              },
              {
                "description": "<p>The width of the truck.</p> <ul> <li> <p>For example, <code>4.5</code>.</p> </li> </ul> <note> <p> For routes calculated with a HERE resource, this value must be between 0 and 50 meters. </p> </note>"
              }
            ]
          }
        },
        "description": "Contains details about the truck dimensions in the unit of measurement that you specify. Used to filter out roads that can't support or allow the specified dimensions for requests that specify <code>TravelMode</code> as <code>Truck</code>."
      },
      "TruckDimensionsHeightDouble": {
        "type": "number",
        "format": "double",
        "minimum": 0
      },
      "TruckDimensionsLengthDouble": {
        "type": "number",
        "format": "double",
        "minimum": 0
      },
      "DimensionUnit": {
        "type": "string",
        "enum": [
          "Meters",
          "Feet"
        ]
      },
      "TruckDimensionsWidthDouble": {
        "type": "number",
        "format": "double",
        "minimum": 0
      },
      "TruckWeight": {
        "type": "object",
        "properties": {
          "Total": {
            "allOf": [
              {
                "$ref": "#/$defs/TruckWeightTotalDouble"
              },
              {
                "description": "<p>The total weight of the truck. </p> <ul> <li> <p>For example, <code>3500</code>.</p> </li> </ul>"
              }
            ]
          },
          "Unit": {
            "allOf": [
              {
                "$ref": "#/$defs/VehicleWeightUnit"
              },
              {
                "description": "<p>The unit of measurement to use for the truck weight.</p> <p>Default Value: <code>Kilograms</code> </p>"
              }
            ]
          }
        },
        "description": "Contains details about the truck's weight specifications. Used to avoid roads that can't support or allow the total weight for requests that specify <code>TravelMode</code> as <code>Truck</code>."
      },
      "TruckWeightTotalDouble": {
        "type": "number",
        "format": "double",
        "minimum": 0
      },
      "VehicleWeightUnit": {
        "type": "string",
        "enum": [
          "Kilograms",
          "Pounds"
        ]
      },
      "Position": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Double"
        },
        "minItems": 2,
        "maxItems": 2
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://geo.us-east-1.amazonaws.com/routes/v0/calculators/{CalculatorName}/calculate/route{?key}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Returns the result of the route calculation. Metadata includes legs and route summary.",
        "**Key properties:**",
        {
          "$ul": [
            "**Legs**",
            "**Summary**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
