{
  "name": "CalculateRouteMatrix",
  "description": "<p> <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/calculate-route-matrix.html\"> Calculates a route matrix</a> given the following required parameters: <code>DeparturePositions</code> and <code>DestinationPositions</code>. <code>CalculateRouteMatrix</code> calculates routes and returns the travel time and travel distance from each departure position to each destination position in the request. For example, given departure positions A and B, and destination positions X and Y, <code>CalculateRouteMatrix</code> will return time and distance for routes from A to X, A to Y, B to X, and B to Y (in that order). The number of results returned (and routes calculated) will be the number of <code>DeparturePositions</code> times the number of <code>DestinationPositions</code>.</p> <note> <p>Your account is charged for each route calculated, not the number of requests.</p> </note> <p>Requires that you first <a href=\"https://docs.aws.amazon.com/location-routes/latest/APIReference/API_CreateRouteCalculator.html\">create a route calculator resource</a>.</p> <p>By default, a request that doesn't specify a departure time uses the best time of day to travel with the best traffic conditions when calculating routes.</p> <p>Additional options include:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/departure-time.html\"> Specifying a departure time</a> using either <code>DepartureTime</code> or <code>DepartNow</code>. This calculates routes based on predictive traffic data at the given time. </p> <note> <p>You can't specify both <code>DepartureTime</code> and <code>DepartNow</code> in a single request. Specifying both parameters returns a validation error.</p> </note> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/travel-mode.html\">Specifying a travel mode</a> using TravelMode sets the transportation mode used to calculate the routes. This also lets you specify additional route preferences in <code>CarModeOptions</code> if traveling by <code>Car</code>, or <code>TruckModeOptions</code> if traveling by <code>Truck</code>.</p> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "CalculatorName": {
        "type": "string",
        "pattern": "^[-._\\w]+$",
        "minLength": 1,
        "maxLength": 100,
        "description": "The name of the route calculator resource that you want to use to calculate the route matrix. "
      },
      "key": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1000,
        "format": "password",
        "description": "The optional <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html\">API key</a> to authorize the request."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "DeparturePositions",
          "DestinationPositions"
        ],
        "properties": {
          "CarModeOptions": {
            "description": "Contains details about additional route preferences for requests that specify <code>TravelMode</code> as <code>Car</code>.",
            "type": "object",
            "properties": {
              "AvoidFerries": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": "<p>Avoids ferries when calculating routes.</p> <p>Default Value: <code>false</code> </p> <p>Valid Values: <code>false</code> | <code>true</code> </p>"
                  }
                ]
              },
              "AvoidTolls": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": "<p>Avoids tolls when calculating routes.</p> <p>Default Value: <code>false</code> </p> <p>Valid Values: <code>false</code> | <code>true</code> </p>"
                  }
                ]
              }
            }
          },
          "DepartNow": {
            "description": "<p>Sets the time of departure as the current time. Uses the current time to calculate the route matrix. You can't set both <code>DepartureTime</code> and <code>DepartNow</code>. If neither is set, the best time of day to travel with the best traffic conditions is used to calculate the route matrix.</p> <p>Default Value: <code>false</code> </p> <p>Valid Values: <code>false</code> | <code>true</code> </p>",
            "type": "boolean"
          },
          "DeparturePositions": {
            "description": "<p>The list of departure (origin) positions for the route matrix. An array of points, each of which is itself a 2-value array defined in <a href=\"https://earth-info.nga.mil/GandG/wgs84/index.html\">WGS 84</a> format: <code>[longitude, latitude]</code>. For example, <code>[-123.115, 49.285]</code>.</p> <important> <p>Depending on the data provider selected in the route calculator resource there may be additional restrictions on the inputs you can choose. See <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/calculate-route-matrix.html#matrix-routing-position-limits\"> Position restrictions</a> in the <i>Amazon Location Service Developer Guide</i>.</p> </important> <note> <p>For route calculators that use Esri as the data provider, if you specify a departure that's not located on a road, Amazon Location <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html\"> moves the position to the nearest road</a>. The snapped value is available in the result in <code>SnappedDeparturePositions</code>.</p> </note> <p>Valid Values: <code>[-180 to 180,-90 to 90]</code> </p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Position"
            },
            "minItems": 1,
            "maxItems": 350
          },
          "DepartureTime": {
            "description": "<p>Specifies the desired time of departure. Uses the given time to calculate the route matrix. You can't set both <code>DepartureTime</code> and <code>DepartNow</code>. If neither is set, the best time of day to travel with the best traffic conditions is used to calculate the route matrix.</p> <note> <p>Setting a departure time in the past returns a <code>400 ValidationException</code> error.</p> </note> <ul> <li> <p>In <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. For example, <code>2020â€“07-2T12:15:20.000Z+01:00</code> </p> </li> </ul>",
            "type": "string",
            "format": "date-time"
          },
          "DestinationPositions": {
            "description": "<p>The list of destination positions for the route matrix. An array of points, each of which is itself a 2-value array defined in <a href=\"https://earth-info.nga.mil/GandG/wgs84/index.html\">WGS 84</a> format: <code>[longitude, latitude]</code>. For example, <code>[-122.339, 47.615]</code> </p> <important> <p>Depending on the data provider selected in the route calculator resource there may be additional restrictions on the inputs you can choose. See <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/calculate-route-matrix.html#matrix-routing-position-limits\"> Position restrictions</a> in the <i>Amazon Location Service Developer Guide</i>.</p> </important> <note> <p>For route calculators that use Esri as the data provider, if you specify a destination that's not located on a road, Amazon Location <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html\"> moves the position to the nearest road</a>. The snapped value is available in the result in <code>SnappedDestinationPositions</code>.</p> </note> <p>Valid Values: <code>[-180 to 180,-90 to 90]</code> </p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Position"
            },
            "minItems": 1,
            "maxItems": 350
          },
          "DistanceUnit": {
            "description": "<p>Set the unit system to specify the distance.</p> <p>Default Value: <code>Kilometers</code> </p>",
            "type": "string",
            "enum": [
              "Kilometers",
              "Miles"
            ]
          },
          "TravelMode": {
            "description": "<p>Specifies the mode of transport when calculating a route. Used in estimating the speed of travel and road compatibility.</p> <p>The <code>TravelMode</code> you specify also determines how you specify route preferences: </p> <ul> <li> <p>If traveling by <code>Car</code> use the <code>CarModeOptions</code> parameter.</p> </li> <li> <p>If traveling by <code>Truck</code> use the <code>TruckModeOptions</code> parameter.</p> </li> </ul> <note> <p> <code>Bicycle</code> or <code>Motorcycle</code> are only valid when using <code>Grab</code> as a data provider, and only within Southeast Asia.</p> <p> <code>Truck</code> is not available for Grab.</p> <p>For more information about using Grab as a data provider, see <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/grab.html\">GrabMaps</a> in the <i>Amazon Location Service Developer Guide</i>.</p> </note> <p>Default Value: <code>Car</code> </p>",
            "type": "string",
            "enum": [
              "Car",
              "Truck",
              "Walking",
              "Bicycle",
              "Motorcycle"
            ]
          },
          "TruckModeOptions": {
            "description": "Contains details about additional route preferences for requests that specify <code>TravelMode</code> as <code>Truck</code>.",
            "type": "object",
            "properties": {
              "AvoidFerries": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": "<p>Avoids ferries when calculating routes.</p> <p>Default Value: <code>false</code> </p> <p>Valid Values: <code>false</code> | <code>true</code> </p>"
                  }
                ]
              },
              "AvoidTolls": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": "<p>Avoids tolls when calculating routes.</p> <p>Default Value: <code>false</code> </p> <p>Valid Values: <code>false</code> | <code>true</code> </p>"
                  }
                ]
              },
              "Dimensions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TruckDimensions"
                  },
                  {
                    "description": "Specifies the truck's dimension specifications including length, height, width, and unit of measurement. Used to avoid roads that can't support the truck's dimensions."
                  }
                ]
              },
              "Weight": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TruckWeight"
                  },
                  {
                    "description": "Specifies the truck's weight specifications including total weight and unit of measurement. Used to avoid roads that can't support the truck's weight."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "CalculatorName",
      "body"
    ],
    "$defs": {
      "Boolean": {
        "type": "boolean"
      },
      "Position": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Double"
        },
        "minItems": 2,
        "maxItems": 2
      },
      "Double": {
        "type": "number",
        "format": "double"
      },
      "TruckDimensions": {
        "type": "object",
        "properties": {
          "Height": {
            "allOf": [
              {
                "$ref": "#/$defs/TruckDimensionsHeightDouble"
              },
              {
                "description": "<p>The height of the truck.</p> <ul> <li> <p>For example, <code>4.5</code>.</p> </li> </ul> <note> <p> For routes calculated with a HERE resource, this value must be between 0 and 50 meters. </p> </note>"
              }
            ]
          },
          "Length": {
            "allOf": [
              {
                "$ref": "#/$defs/TruckDimensionsLengthDouble"
              },
              {
                "description": "<p>The length of the truck.</p> <ul> <li> <p>For example, <code>15.5</code>.</p> </li> </ul> <note> <p> For routes calculated with a HERE resource, this value must be between 0 and 300 meters. </p> </note>"
              }
            ]
          },
          "Unit": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionUnit"
              },
              {
                "description": "<p> Specifies the unit of measurement for the truck dimensions.</p> <p>Default Value: <code>Meters</code> </p>"
              }
            ]
          },
          "Width": {
            "allOf": [
              {
                "$ref": "#/$defs/TruckDimensionsWidthDouble"
              },
              {
                "description": "<p>The width of the truck.</p> <ul> <li> <p>For example, <code>4.5</code>.</p> </li> </ul> <note> <p> For routes calculated with a HERE resource, this value must be between 0 and 50 meters. </p> </note>"
              }
            ]
          }
        },
        "description": "Contains details about the truck dimensions in the unit of measurement that you specify. Used to filter out roads that can't support or allow the specified dimensions for requests that specify <code>TravelMode</code> as <code>Truck</code>."
      },
      "TruckDimensionsHeightDouble": {
        "type": "number",
        "format": "double",
        "minimum": 0
      },
      "TruckDimensionsLengthDouble": {
        "type": "number",
        "format": "double",
        "minimum": 0
      },
      "DimensionUnit": {
        "type": "string",
        "enum": [
          "Meters",
          "Feet"
        ]
      },
      "TruckDimensionsWidthDouble": {
        "type": "number",
        "format": "double",
        "minimum": 0
      },
      "TruckWeight": {
        "type": "object",
        "properties": {
          "Total": {
            "allOf": [
              {
                "$ref": "#/$defs/TruckWeightTotalDouble"
              },
              {
                "description": "<p>The total weight of the truck. </p> <ul> <li> <p>For example, <code>3500</code>.</p> </li> </ul>"
              }
            ]
          },
          "Unit": {
            "allOf": [
              {
                "$ref": "#/$defs/VehicleWeightUnit"
              },
              {
                "description": "<p>The unit of measurement to use for the truck weight.</p> <p>Default Value: <code>Kilograms</code> </p>"
              }
            ]
          }
        },
        "description": "Contains details about the truck's weight specifications. Used to avoid roads that can't support or allow the total weight for requests that specify <code>TravelMode</code> as <code>Truck</code>."
      },
      "TruckWeightTotalDouble": {
        "type": "number",
        "format": "double",
        "minimum": 0
      },
      "VehicleWeightUnit": {
        "type": "string",
        "enum": [
          "Kilograms",
          "Pounds"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://geo.us-east-1.amazonaws.com/routes/v0/calculators/{CalculatorName}/calculate/route-matrix{?key}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Returns the result of the route matrix calculation.",
        "**Key properties:**",
        {
          "$ul": [
            "**RouteMatrix**",
            "**SnappedDeparturePositions**",
            "**SnappedDestinationPositions**",
            "**Summary**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
