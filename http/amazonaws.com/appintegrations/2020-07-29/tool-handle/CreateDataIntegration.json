{
  "name": "CreateDataIntegration",
  "description": "<p>Creates and persists a DataIntegration resource.</p> <note> <p>You cannot create a DataIntegration association for a DataIntegration that has been previously associated. Use a different DataIntegration, or recreate the DataIntegration using the <code>CreateDataIntegration</code> API.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Name",
          "KmsKey",
          "SourceURI",
          "ScheduleConfig"
        ],
        "properties": {
          "Name": {
            "description": "The name of the DataIntegration.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9\\/\\._\\-]+$",
            "minLength": 1,
            "maxLength": 255
          },
          "Description": {
            "description": "A description of the DataIntegration.",
            "type": "string",
            "pattern": ".*",
            "minLength": 1,
            "maxLength": 1000
          },
          "KmsKey": {
            "description": "The KMS key for the DataIntegration.",
            "type": "string",
            "pattern": ".*\\S.*",
            "minLength": 1,
            "maxLength": 255
          },
          "SourceURI": {
            "description": "The URI of the data source.",
            "type": "string",
            "pattern": "^(\\w+\\:\\/\\/[\\w.-]+[\\w/!@#+=.-]+$)|(\\w+\\:\\/\\/[\\w.-]+[\\w/!@#+=.-]+[\\w/!@#+=.-]+[\\w/!@#+=.,-]+$)",
            "minLength": 1,
            "maxLength": 1000
          },
          "ScheduleConfig": {
            "description": "The name of the data and how often it should be pulled from the source.",
            "type": "object",
            "properties": {
              "FirstExecutionFrom": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NonBlankString"
                  },
                  {
                    "description": "The start date for objects to import in the first flow run as an Unix/epoch timestamp in milliseconds or in ISO-8601 format."
                  }
                ]
              },
              "Object": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Object"
                  },
                  {
                    "description": "The name of the object to pull from the data source."
                  }
                ]
              },
              "ScheduleExpression": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NonBlankString"
                  },
                  {
                    "description": "How often the data should be pulled from data source."
                  }
                ]
              }
            }
          },
          "Tags": {
            "description": "The tags used to organize, track, or control access for this resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }.",
            "type": "object",
            "minProperties": 1,
            "maxProperties": 200,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "ClientToken": {
            "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.",
            "type": "string",
            "pattern": ".*",
            "minLength": 1,
            "maxLength": 2048
          },
          "FileConfiguration": {
            "description": "The configuration for what files should be pulled from the source.",
            "type": "object",
            "properties": {
              "Folders": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FolderList"
                  },
                  {
                    "description": "Identifiers for the source folders to pull all files from recursively."
                  }
                ]
              },
              "Filters": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FieldsMap"
                  },
                  {
                    "description": "Restrictions for what files should be pulled from the source."
                  }
                ]
              }
            }
          },
          "ObjectConfiguration": {
            "description": "The configuration for what data should be pulled from the source.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/FieldsMap"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "NonBlankString": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 255
      },
      "Object": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\/\\._\\-]+$",
        "minLength": 1,
        "maxLength": 255
      },
      "TagValue": {
        "type": "string",
        "maxLength": 256
      },
      "FolderList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NonBlankLongString"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "NonBlankLongString": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 200
      },
      "FieldsMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/FieldsList"
        }
      },
      "FieldsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Fields"
        },
        "minItems": 1,
        "maxItems": 2048
      },
      "Fields": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\/\\._\\-]+$",
        "minLength": 1,
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://app-integrations.us-east-1.amazonaws.com/dataIntegrations"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Arn**",
            "**Id**",
            "**Name**",
            "**Description**",
            "**KmsKey**",
            "**SourceURI**",
            "**ScheduleConfiguration**",
            "**Tags**",
            "**ClientToken**",
            "**FileConfiguration**",
            "**ObjectConfiguration**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
