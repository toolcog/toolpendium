{
  "name": "SearchFlowTemplates",
  "description": "Searches for summary information about workflows.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "IotThingsGraphFrontEndService.SearchFlowTemplates"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/SearchFlowTemplatesRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "SearchFlowTemplatesRequest": {
        "type": "object",
        "title": "SearchFlowTemplatesRequest",
        "properties": {
          "filters": {
            "allOf": [
              {
                "$ref": "#/$defs/FlowTemplateFilters"
              },
              {
                "description": "An array of objects that limit the result set. The only valid filter is <code>DEVICE_MODEL_ID</code>."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The string that specifies the next page of results. Use this when you're paginating results."
              }
            ]
          },
          "maxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxResults"
              },
              {
                "description": "The maximum number of results to return in the response."
              }
            ]
          }
        }
      },
      "FlowTemplateFilters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FlowTemplateFilter"
        }
      },
      "FlowTemplateFilter": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/FlowTemplateFilterName"
              },
              {
                "description": "The name of the search filter field."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/FlowTemplateFilterValues"
              },
              {
                "description": "An array of string values for the search filter field. Multiple values function as AND criteria in the search."
              }
            ]
          }
        },
        "description": "An object that filters a workflow search."
      },
      "FlowTemplateFilterName": {
        "type": "string",
        "enum": [
          "DEVICE_MODEL_ID"
        ]
      },
      "FlowTemplateFilterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FlowTemplateFilterValue"
        }
      },
      "FlowTemplateFilterValue": {
        "type": "string",
        "pattern": "^urn:tdm:(([a-z]{2}-(gov-)?[a-z]{4,9}-[0-9]{1,3}/[0-9]+/)*[\\p{Alnum}_]+(/[\\p{Alnum}_]+)*):([\\p{Alpha}]*):([\\p{Alnum}_]+(/[\\p{Alnum}_]+)*)$"
      },
      "NextToken": {
        "type": "string"
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 250
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iotthingsgraph.us-east-1.amazonaws.com/#X-Amz-Target=IotThingsGraphFrontEndService.SearchFlowTemplates{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**summaries**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
