{
  "name": "UpdateWorldTemplate",
  "description": "Updates a world template.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "template"
        ],
        "properties": {
          "template": {
            "description": "The Amazon Resource Name (arn) of the world template to update.",
            "type": "string",
            "pattern": "arn:.*",
            "minLength": 1,
            "maxLength": 1224
          },
          "name": {
            "description": "The name of the template.",
            "type": "string",
            "pattern": ".*",
            "minLength": 0,
            "maxLength": 255
          },
          "templateBody": {
            "description": "The world template body.",
            "type": "string",
            "pattern": "[\\S\\s]+",
            "minLength": 1,
            "maxLength": 262144
          },
          "templateLocation": {
            "description": "Information about a template location.",
            "type": "object",
            "properties": {
              "s3Bucket": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Bucket"
                  },
                  {
                    "description": "The Amazon S3 bucket name."
                  }
                ]
              },
              "s3Key": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Key"
                  },
                  {
                    "description": "The list of S3 keys identifying the data source files."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "S3Bucket": {
        "type": "string",
        "pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
        "minLength": 3,
        "maxLength": 63
      },
      "S3Key": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 1024
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://robomaker.us-east-1.amazonaws.com/updateWorldTemplate"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**arn**",
            "**name**",
            "**createdAt**",
            "**lastUpdatedAt**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
