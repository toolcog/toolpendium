{
  "name": "ListConfigurations",
  "description": "Retrieves a list of configuration items as specified by the value passed to the required parameter <code>configurationType</code>. Optional filtering may be applied to refine search results.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSPoseidonService_V2015_11_01.ListConfigurations"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListConfigurationsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListConfigurationsRequest": {
        "type": "object",
        "required": [
          "configurationType"
        ],
        "title": "ListConfigurationsRequest",
        "properties": {
          "configurationType": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationItemType"
              },
              {
                "description": "A valid configuration identified by Application Discovery Service. "
              }
            ]
          },
          "filters": {
            "allOf": [
              {
                "$ref": "#/$defs/Filters"
              },
              {
                "description": "<p>You can filter the request using various logical operators and a <i>key</i>-<i>value</i> format. For example: </p> <p> <code>{\"key\": \"serverType\", \"value\": \"webServer\"}</code> </p> <p>For a complete list of filter options and guidance about using them with this action, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-api-queries.html#ListConfigurations\">Using the ListConfigurations Action</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>.</p>"
              }
            ]
          },
          "maxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The total number of items to return. The maximum value is 100."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "Token to retrieve the next set of results. For example, if a previous call to ListConfigurations returned 100 items, but you set <code>ListConfigurationsRequest$maxResults</code> to 10, you received a set of 10 results along with a token. Use that token in this query to get the next set of 10."
              }
            ]
          },
          "orderBy": {
            "allOf": [
              {
                "$ref": "#/$defs/OrderByList"
              },
              {
                "description": "Certain filter criteria return output that can be sorted in ascending or descending order. For a list of output characteristics for each filter, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-api-queries.html#ListConfigurations\">Using the ListConfigurations Action</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>."
              }
            ]
          }
        }
      },
      "ConfigurationItemType": {
        "type": "string",
        "enum": [
          "SERVER",
          "PROCESS",
          "CONNECTION",
          "APPLICATION"
        ]
      },
      "Filters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Filter"
        }
      },
      "Filter": {
        "type": "object",
        "required": [
          "name",
          "values",
          "condition"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the filter."
              }
            ]
          },
          "values": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterValues"
              },
              {
                "description": "A string value on which to filter. For example, if you choose the <code>destinationServer.osVersion</code> filter name, you could specify <code>Ubuntu</code> for the value."
              }
            ]
          },
          "condition": {
            "allOf": [
              {
                "$ref": "#/$defs/Condition"
              },
              {
                "description": "A conditional operator. The following operators are valid: EQUALS, NOT_EQUALS, CONTAINS, NOT_CONTAINS. If you specify multiple filters, the system utilizes all filters as though concatenated by <i>AND</i>. If you specify multiple values for a particular filter, the system differentiates the values using <i>OR</i>. Calling either <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns attributes of matching configuration items."
              }
            ]
          }
        },
        "description": "<p>A filter that can use conditional operators.</p> <p>For more information about filters, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-api-queries.html\">Querying Discovered Configuration Items</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>. </p>"
      },
      "String": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "maxLength": 10000
      },
      "FilterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilterValue"
        }
      },
      "FilterValue": {
        "type": "string",
        "pattern": "(^$|[\\s\\S]*\\S[\\s\\S]*)",
        "maxLength": 1000
      },
      "Condition": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 200
      },
      "Integer": {
        "type": "integer"
      },
      "NextToken": {
        "type": "string"
      },
      "OrderByList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OrderByElement"
        }
      },
      "OrderByElement": {
        "type": "object",
        "required": [
          "fieldName"
        ],
        "properties": {
          "fieldName": {
            "allOf": [
              {
                "$ref": "#/$defs/OrderByElementFieldName"
              },
              {
                "description": "The field on which to order."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/orderString"
              },
              {
                "description": "Ordering direction."
              }
            ]
          }
        },
        "description": "A field and direction for ordered output."
      },
      "OrderByElementFieldName": {
        "type": "string",
        "pattern": "[\\s\\S]*\\S[\\s\\S]*",
        "maxLength": 1000
      },
      "orderString": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://discovery.us-east-1.amazonaws.com/#X-Amz-Target=AWSPoseidonService_V2015_11_01.ListConfigurations"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**configurations**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
