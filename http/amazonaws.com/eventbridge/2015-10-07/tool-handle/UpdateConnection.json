{
  "name": "UpdateConnection",
  "description": "Updates settings for a connection.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSEvents.UpdateConnection"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateConnectionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateConnectionRequest": {
        "type": "object",
        "required": [
          "Name"
        ],
        "title": "UpdateConnectionRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionName"
              },
              {
                "description": "The name of the connection to update."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionDescription"
              },
              {
                "description": "A description for the connection."
              }
            ]
          },
          "AuthorizationType": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionAuthorizationType"
              },
              {
                "description": "The type of authorization to use for the connection."
              }
            ]
          },
          "AuthParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateConnectionAuthRequestParameters"
              },
              {
                "description": "The authorization parameters to use for the connection."
              }
            ]
          }
        }
      },
      "ConnectionName": {
        "type": "string",
        "pattern": "[\\.\\-_A-Za-z0-9]+",
        "minLength": 1,
        "maxLength": 64
      },
      "ConnectionDescription": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 512
      },
      "ConnectionAuthorizationType": {
        "type": "string",
        "enum": [
          "BASIC",
          "OAUTH_CLIENT_CREDENTIALS",
          "API_KEY"
        ]
      },
      "UpdateConnectionAuthRequestParameters": {
        "type": "object",
        "properties": {
          "BasicAuthParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateConnectionBasicAuthRequestParameters"
              },
              {
                "description": "A <code>UpdateConnectionBasicAuthRequestParameters</code> object that contains the authorization parameters for Basic authorization."
              }
            ]
          },
          "OAuthParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateConnectionOAuthRequestParameters"
              },
              {
                "description": "A <code>UpdateConnectionOAuthRequestParameters</code> object that contains the authorization parameters for OAuth authorization."
              }
            ]
          },
          "ApiKeyAuthParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateConnectionApiKeyAuthRequestParameters"
              },
              {
                "description": "A <code>UpdateConnectionApiKeyAuthRequestParameters</code> object that contains the authorization parameters for API key authorization."
              }
            ]
          },
          "InvocationHttpParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionHttpParameters"
              },
              {
                "description": "A <code>ConnectionHttpParameters</code> object that contains the additional parameters to use for the connection."
              }
            ]
          }
        },
        "description": "Contains the additional parameters to use for the connection."
      },
      "UpdateConnectionBasicAuthRequestParameters": {
        "type": "object",
        "properties": {
          "Username": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthHeaderParameters"
              },
              {
                "description": "The user name to use for Basic authorization."
              }
            ]
          },
          "Password": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthHeaderParameters"
              },
              {
                "description": "The password associated with the user name to use for Basic authorization."
              }
            ]
          }
        },
        "description": "Contains the Basic authorization parameters for the connection."
      },
      "AuthHeaderParameters": {
        "type": "string",
        "pattern": "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$",
        "minLength": 1,
        "maxLength": 512
      },
      "UpdateConnectionOAuthRequestParameters": {
        "type": "object",
        "properties": {
          "ClientParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateConnectionOAuthClientRequestParameters"
              },
              {
                "description": "A <code>UpdateConnectionOAuthClientRequestParameters</code> object that contains the client parameters to use for the connection when OAuth is specified as the authorization type."
              }
            ]
          },
          "AuthorizationEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpsEndpoint"
              },
              {
                "description": "The URL to the authorization endpoint when OAuth is specified as the authorization type."
              }
            ]
          },
          "HttpMethod": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionOAuthHttpMethod"
              },
              {
                "description": "The method used to connect to the HTTP endpoint."
              }
            ]
          },
          "OAuthHttpParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionHttpParameters"
              },
              {
                "description": "The additional HTTP parameters used for the OAuth authorization request."
              }
            ]
          }
        },
        "description": "Contains the OAuth request parameters to use for the connection."
      },
      "UpdateConnectionOAuthClientRequestParameters": {
        "type": "object",
        "properties": {
          "ClientID": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthHeaderParameters"
              },
              {
                "description": "The client ID to use for OAuth authorization."
              }
            ]
          },
          "ClientSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthHeaderParameters"
              },
              {
                "description": "The client secret assciated with the client ID to use for OAuth authorization."
              }
            ]
          }
        },
        "description": "Contains the OAuth authorization parameters to use for the connection."
      },
      "HttpsEndpoint": {
        "type": "string",
        "pattern": "^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$",
        "minLength": 1,
        "maxLength": 2048
      },
      "ConnectionOAuthHttpMethod": {
        "type": "string",
        "enum": [
          "GET",
          "POST",
          "PUT"
        ]
      },
      "ConnectionHttpParameters": {
        "type": "object",
        "properties": {
          "HeaderParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionHeaderParametersList"
              },
              {
                "description": "Contains additional header parameters for the connection."
              }
            ]
          },
          "QueryStringParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionQueryStringParametersList"
              },
              {
                "description": "Contains additional query string parameters for the connection."
              }
            ]
          },
          "BodyParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionBodyParametersList"
              },
              {
                "description": "Contains additional body string parameters for the connection."
              }
            ]
          }
        },
        "description": "Contains additional parameters for the connection."
      },
      "ConnectionHeaderParametersList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConnectionHeaderParameter"
        },
        "minItems": 0,
        "maxItems": 100
      },
      "ConnectionHeaderParameter": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderKey"
              },
              {
                "description": "The key for the parameter."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderValue"
              },
              {
                "description": "The value associated with the key."
              }
            ]
          },
          "IsValueSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specified whether the value is a secret."
              }
            ]
          }
        },
        "description": "Additional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB."
      },
      "HeaderKey": {
        "type": "string",
        "pattern": "^[!#$%&'*+-.^_`|~0-9a-zA-Z]+$",
        "maxLength": 512
      },
      "HeaderValue": {
        "type": "string",
        "pattern": "^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*$",
        "maxLength": 512
      },
      "Boolean": {
        "type": "boolean"
      },
      "ConnectionQueryStringParametersList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConnectionQueryStringParameter"
        },
        "minItems": 0,
        "maxItems": 100
      },
      "ConnectionQueryStringParameter": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/QueryStringKey"
              },
              {
                "description": "The key for a query string parameter."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/QueryStringValue"
              },
              {
                "description": "The value associated with the key for the query string parameter."
              }
            ]
          },
          "IsValueSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether the value is secret."
              }
            ]
          }
        },
        "description": "Additional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB."
      },
      "QueryStringKey": {
        "type": "string",
        "pattern": "[^\\x00-\\x1F\\x7F]+",
        "maxLength": 512
      },
      "QueryStringValue": {
        "type": "string",
        "pattern": "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+",
        "maxLength": 512
      },
      "ConnectionBodyParametersList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConnectionBodyParameter"
        },
        "minItems": 0,
        "maxItems": 100
      },
      "ConnectionBodyParameter": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The key for the parameter."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value associated with the key."
              }
            ]
          },
          "IsValueSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specified whether the value is secret."
              }
            ]
          }
        },
        "description": "Additional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB."
      },
      "String": {
        "type": "string"
      },
      "UpdateConnectionApiKeyAuthRequestParameters": {
        "type": "object",
        "properties": {
          "ApiKeyName": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthHeaderParameters"
              },
              {
                "description": "The name of the API key to use for authorization."
              }
            ]
          },
          "ApiKeyValue": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthHeaderParameters"
              },
              {
                "description": "The value associated with teh API key to use for authorization."
              }
            ]
          }
        },
        "description": "Contains the API key authorization parameters to use to update the connection."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://events.us-east-1.amazonaws.com/#X-Amz-Target=AWSEvents.UpdateConnection"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ConnectionArn**",
            "**ConnectionState**",
            "**CreationTime**",
            "**LastModifiedTime**",
            "**LastAuthorizedTime**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
