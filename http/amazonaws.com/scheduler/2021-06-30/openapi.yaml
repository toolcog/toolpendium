openapi: 3.0.0
info:
  version: '2021-06-30'
  x-release: v4
  title: Amazon EventBridge Scheduler
  description: ' Amazon EventBridge Scheduler is a serverless scheduler that allows you to create, run, and manage tasks from one central, managed service. EventBridge Scheduler delivers your tasks reliably, with built-in mechanisms that adjust your schedules based on the availability of downstream targets. The following reference lists the available API actions, and data types for EventBridge Scheduler. '
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: scheduler
  x-aws-signingName: scheduler
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/scheduler-2021-06-30.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/scheduler/'
servers:
  - url: 'http://scheduler.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon EventBridge Scheduler multi-region endpoint
  - url: 'https://scheduler.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon EventBridge Scheduler multi-region endpoint
  - url: 'http://scheduler.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon EventBridge Scheduler endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://scheduler.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon EventBridge Scheduler endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/schedules/{Name}':
    post:
      operationId: CreateSchedule
      description: Creates the specified schedule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateScheduleOutput'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the schedule that you are creating.
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FlexibleTimeWindow
                - ScheduleExpression
                - Target
              properties:
                ActionAfterCompletion:
                  description: Specifies the action that EventBridge Scheduler applies to the schedule after the schedule completes invoking the target.
                  type: string
                  enum:
                    - NONE
                    - DELETE
                ClientToken:
                  description: ' Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, EventBridge Scheduler uses a randomly generated token for the request to ensure idempotency. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
                Description:
                  description: The description you specify for the schedule.
                  type: string
                  minLength: 0
                  maxLength: 512
                EndDate:
                  description: 'The date, in UTC, before which the schedule can invoke its target. Depending on the schedule''s recurrence expression, invocations might stop on, or before, the <code>EndDate</code> you specify. EventBridge Scheduler ignores <code>EndDate</code> for one-time schedules.'
                  type: string
                  format: date-time
                FlexibleTimeWindow:
                  description: Allows you to configure a time window during which EventBridge Scheduler invokes the schedule.
                  type: object
                  properties:
                    MaximumWindowInMinutes:
                      allOf:
                        - $ref: '#/components/schemas/MaximumWindowInMinutes'
                        - description: The maximum time window during which a schedule can be invoked.
                    Mode:
                      allOf:
                        - $ref: '#/components/schemas/FlexibleTimeWindowMode'
                        - description: Determines whether the schedule is invoked within a flexible time window.
                GroupName:
                  description: 'The name of the schedule group to associate with this schedule. If you omit this, the default schedule group is used.'
                  type: string
                  pattern: '^[0-9a-zA-Z-_.]+$'
                  minLength: 1
                  maxLength: 64
                KmsKeyArn:
                  description: The Amazon Resource Name (ARN) for the customer managed KMS key that EventBridge Scheduler will use to encrypt and decrypt your data.
                  type: string
                  pattern: '^arn:aws(-[a-z]+)?:kms:[a-z0-9\-]+:\d{12}:(key|alias)\/[0-9a-zA-Z-_]*$'
                  minLength: 1
                  maxLength: 2048
                ScheduleExpression:
                  description: '<p> The expression that defines when the schedule runs. The following formats are supported. </p> <ul> <li> <p> <code>at</code> expression - <code>at(yyyy-mm-ddThh:mm:ss)</code> </p> </li> <li> <p> <code>rate</code> expression - <code>rate(value unit)</code> </p> </li> <li> <p> <code>cron</code> expression - <code>cron(fields)</code> </p> </li> </ul> <p> You can use <code>at</code> expressions to create one-time schedules that invoke a target once, at the time and in the time zone, that you specify. You can use <code>rate</code> and <code>cron</code> expressions to create recurring schedules. Rate-based schedules are useful when you want to invoke a target at regular intervals, such as every 15 minutes or every five days. Cron-based schedules are useful when you want to invoke a target periodically at a specific time, such as at 8:00 am (UTC+0) every 1st day of the month. </p> <p> A <code>cron</code> expression consists of six fields separated by white spaces: <code>(minutes hours day_of_month month day_of_week year)</code>. </p> <p> A <code>rate</code> expression consists of a <i>value</i> as a positive integer, and a <i>unit</i> with the following options: <code>minute</code> | <code>minutes</code> | <code>hour</code> | <code>hours</code> | <code>day</code> | <code>days</code> </p> <p> For more information and examples, see <a href="https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html">Schedule types on EventBridge Scheduler</a> in the <i>EventBridge Scheduler User Guide</i>. </p>'
                  type: string
                  minLength: 1
                  maxLength: 256
                ScheduleExpressionTimezone:
                  description: The timezone in which the scheduling expression is evaluated.
                  type: string
                  minLength: 1
                  maxLength: 50
                StartDate:
                  description: 'The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule''s recurrence expression, invocations might occur on, or after, the <code>StartDate</code> you specify. EventBridge Scheduler ignores <code>StartDate</code> for one-time schedules.'
                  type: string
                  format: date-time
                State:
                  description: Specifies whether the schedule is enabled or disabled.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                Target:
                  description: 'The schedule''s target. EventBridge Scheduler supports templated target that invoke common API operations, as well as universal targets that you can customize to invoke over 6,000 API operations across more than 270 services. You can only specify one templated or universal target for a schedule.'
                  type: object
                  properties:
                    Arn:
                      allOf:
                        - $ref: '#/components/schemas/TargetArn'
                        - description: The Amazon Resource Name (ARN) of the target.
                    DeadLetterConfig:
                      allOf:
                        - $ref: '#/components/schemas/DeadLetterConfig'
                        - description: 'An object that contains information about an Amazon SQS queue that EventBridge Scheduler uses as a dead-letter queue for your schedule. If specified, EventBridge Scheduler delivers failed events that could not be successfully delivered to a target to the queue.'
                    EcsParameters:
                      allOf:
                        - $ref: '#/components/schemas/EcsParameters'
                        - description: 'The templated target type for the Amazon ECS <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html"> <code>RunTask</code> </a> API operation.'
                    EventBridgeParameters:
                      allOf:
                        - $ref: '#/components/schemas/EventBridgeParameters'
                        - description: 'The templated target type for the EventBridge <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html"> <code>PutEvents</code> </a> API operation.'
                    Input:
                      allOf:
                        - $ref: '#/components/schemas/TargetInput'
                        - description: 'The text, or well-formed JSON, passed to the target. If you are configuring a templated Lambda, AWS Step Functions, or Amazon EventBridge target, the input must be a well-formed JSON. For all other target types, a JSON is not required. If you do not specify anything for this field, EventBridge Scheduler delivers a default notification to the target.'
                    KinesisParameters:
                      allOf:
                        - $ref: '#/components/schemas/KinesisParameters'
                        - description: The templated target type for the Amazon Kinesis <a href="kinesis/latest/APIReference/API_PutRecord.html"> <code>PutRecord</code> </a> API operation.
                    RetryPolicy:
                      allOf:
                        - $ref: '#/components/schemas/RetryPolicy'
                        - description: 'A <code>RetryPolicy</code> object that includes information about the retry policy settings, including the maximum age of an event, and the maximum number of times EventBridge Scheduler will try to deliver the event to a target.'
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/RoleArn'
                        - description: The Amazon Resource Name (ARN) of the IAM role that EventBridge Scheduler will use for this target when the schedule is invoked.
                    SageMakerPipelineParameters:
                      allOf:
                        - $ref: '#/components/schemas/SageMakerPipelineParameters'
                        - description: 'The templated target type for the Amazon SageMaker <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_StartPipelineExecution.html"> <code>StartPipelineExecution</code> </a> API operation.'
                    SqsParameters:
                      allOf:
                        - $ref: '#/components/schemas/SqsParameters'
                        - description: 'The templated target type for the Amazon SQS <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessage.html"> <code>SendMessage</code> </a> API operation. Contains the message group ID to use when the target is a FIFO queue. If you specify an Amazon SQS FIFO queue as a target, the queue must have content-based deduplication enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-messagededuplicationid-property.html">Using the Amazon SQS message deduplication ID</a> in the <i>Amazon SQS Developer Guide</i>.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteSchedule
      description: Deletes the specified schedule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteScheduleOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: clientToken
          in: query
          required: false
          description: ' Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, EventBridge Scheduler uses a randomly generated token for the request to ensure idempotency. '
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-_]+$'
            minLength: 1
            maxLength: 64
        - name: groupName
          in: query
          required: false
          description: 'The name of the schedule group associated with this schedule. If you omit this, the default schedule group is used.'
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
        - name: Name
          in: path
          required: true
          description: The name of the schedule to delete.
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
    get:
      operationId: GetSchedule
      description: Retrieves the specified schedule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScheduleOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: groupName
          in: query
          required: false
          description: 'The name of the schedule group associated with this schedule. If you omit this, EventBridge Scheduler assumes that the schedule is associated with the default group.'
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
        - name: Name
          in: path
          required: true
          description: The name of the schedule to retrieve.
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
    put:
      operationId: UpdateSchedule
      description: '<p> Updates the specified schedule. When you call <code>UpdateSchedule</code>, EventBridge Scheduler uses all values, including empty values, specified in the request and overrides the existing schedule. This is by design. This means that if you do not set an optional field in your request, that field will be set to its system-default value after the update. </p> <p> Before calling this operation, we recommend that you call the <code>GetSchedule</code> API operation and make a note of all optional parameters for your <code>UpdateSchedule</code> call. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateScheduleOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the schedule that you are updating.
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FlexibleTimeWindow
                - ScheduleExpression
                - Target
              properties:
                ActionAfterCompletion:
                  description: Specifies the action that EventBridge Scheduler applies to the schedule after the schedule completes invoking the target.
                  type: string
                  enum:
                    - NONE
                    - DELETE
                ClientToken:
                  description: ' Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, EventBridge Scheduler uses a randomly generated token for the request to ensure idempotency. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
                Description:
                  description: The description you specify for the schedule.
                  type: string
                  minLength: 0
                  maxLength: 512
                EndDate:
                  description: 'The date, in UTC, before which the schedule can invoke its target. Depending on the schedule''s recurrence expression, invocations might stop on, or before, the <code>EndDate</code> you specify. EventBridge Scheduler ignores <code>EndDate</code> for one-time schedules.'
                  type: string
                  format: date-time
                FlexibleTimeWindow:
                  description: Allows you to configure a time window during which EventBridge Scheduler invokes the schedule.
                  type: object
                  properties:
                    MaximumWindowInMinutes:
                      allOf:
                        - $ref: '#/components/schemas/MaximumWindowInMinutes'
                        - description: The maximum time window during which a schedule can be invoked.
                    Mode:
                      allOf:
                        - $ref: '#/components/schemas/FlexibleTimeWindowMode'
                        - description: Determines whether the schedule is invoked within a flexible time window.
                GroupName:
                  description: 'The name of the schedule group with which the schedule is associated. You must provide this value in order for EventBridge Scheduler to find the schedule you want to update. If you omit this value, EventBridge Scheduler assumes the group is associated to the default group.'
                  type: string
                  pattern: '^[0-9a-zA-Z-_.]+$'
                  minLength: 1
                  maxLength: 64
                KmsKeyArn:
                  description: The ARN for the customer managed KMS key that that you want EventBridge Scheduler to use to encrypt and decrypt your data.
                  type: string
                  pattern: '^arn:aws(-[a-z]+)?:kms:[a-z0-9\-]+:\d{12}:(key|alias)\/[0-9a-zA-Z-_]*$'
                  minLength: 1
                  maxLength: 2048
                ScheduleExpression:
                  description: '<p> The expression that defines when the schedule runs. The following formats are supported. </p> <ul> <li> <p> <code>at</code> expression - <code>at(yyyy-mm-ddThh:mm:ss)</code> </p> </li> <li> <p> <code>rate</code> expression - <code>rate(value unit)</code> </p> </li> <li> <p> <code>cron</code> expression - <code>cron(fields)</code> </p> </li> </ul> <p> You can use <code>at</code> expressions to create one-time schedules that invoke a target once, at the time and in the time zone, that you specify. You can use <code>rate</code> and <code>cron</code> expressions to create recurring schedules. Rate-based schedules are useful when you want to invoke a target at regular intervals, such as every 15 minutes or every five days. Cron-based schedules are useful when you want to invoke a target periodically at a specific time, such as at 8:00 am (UTC+0) every 1st day of the month. </p> <p> A <code>cron</code> expression consists of six fields separated by white spaces: <code>(minutes hours day_of_month month day_of_week year)</code>. </p> <p> A <code>rate</code> expression consists of a <i>value</i> as a positive integer, and a <i>unit</i> with the following options: <code>minute</code> | <code>minutes</code> | <code>hour</code> | <code>hours</code> | <code>day</code> | <code>days</code> </p> <p> For more information and examples, see <a href="https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html">Schedule types on EventBridge Scheduler</a> in the <i>EventBridge Scheduler User Guide</i>. </p>'
                  type: string
                  minLength: 1
                  maxLength: 256
                ScheduleExpressionTimezone:
                  description: The timezone in which the scheduling expression is evaluated.
                  type: string
                  minLength: 1
                  maxLength: 50
                StartDate:
                  description: 'The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule''s recurrence expression, invocations might occur on, or after, the <code>StartDate</code> you specify. EventBridge Scheduler ignores <code>StartDate</code> for one-time schedules.'
                  type: string
                  format: date-time
                State:
                  description: Specifies whether the schedule is enabled or disabled.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                Target:
                  description: 'The schedule''s target. EventBridge Scheduler supports templated target that invoke common API operations, as well as universal targets that you can customize to invoke over 6,000 API operations across more than 270 services. You can only specify one templated or universal target for a schedule.'
                  type: object
                  properties:
                    Arn:
                      allOf:
                        - $ref: '#/components/schemas/TargetArn'
                        - description: The Amazon Resource Name (ARN) of the target.
                    DeadLetterConfig:
                      allOf:
                        - $ref: '#/components/schemas/DeadLetterConfig'
                        - description: 'An object that contains information about an Amazon SQS queue that EventBridge Scheduler uses as a dead-letter queue for your schedule. If specified, EventBridge Scheduler delivers failed events that could not be successfully delivered to a target to the queue.'
                    EcsParameters:
                      allOf:
                        - $ref: '#/components/schemas/EcsParameters'
                        - description: 'The templated target type for the Amazon ECS <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html"> <code>RunTask</code> </a> API operation.'
                    EventBridgeParameters:
                      allOf:
                        - $ref: '#/components/schemas/EventBridgeParameters'
                        - description: 'The templated target type for the EventBridge <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html"> <code>PutEvents</code> </a> API operation.'
                    Input:
                      allOf:
                        - $ref: '#/components/schemas/TargetInput'
                        - description: 'The text, or well-formed JSON, passed to the target. If you are configuring a templated Lambda, AWS Step Functions, or Amazon EventBridge target, the input must be a well-formed JSON. For all other target types, a JSON is not required. If you do not specify anything for this field, EventBridge Scheduler delivers a default notification to the target.'
                    KinesisParameters:
                      allOf:
                        - $ref: '#/components/schemas/KinesisParameters'
                        - description: The templated target type for the Amazon Kinesis <a href="kinesis/latest/APIReference/API_PutRecord.html"> <code>PutRecord</code> </a> API operation.
                    RetryPolicy:
                      allOf:
                        - $ref: '#/components/schemas/RetryPolicy'
                        - description: 'A <code>RetryPolicy</code> object that includes information about the retry policy settings, including the maximum age of an event, and the maximum number of times EventBridge Scheduler will try to deliver the event to a target.'
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/RoleArn'
                        - description: The Amazon Resource Name (ARN) of the IAM role that EventBridge Scheduler will use for this target when the schedule is invoked.
                    SageMakerPipelineParameters:
                      allOf:
                        - $ref: '#/components/schemas/SageMakerPipelineParameters'
                        - description: 'The templated target type for the Amazon SageMaker <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_StartPipelineExecution.html"> <code>StartPipelineExecution</code> </a> API operation.'
                    SqsParameters:
                      allOf:
                        - $ref: '#/components/schemas/SqsParameters'
                        - description: 'The templated target type for the Amazon SQS <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessage.html"> <code>SendMessage</code> </a> API operation. Contains the message group ID to use when the target is a FIFO queue. If you specify an Amazon SQS FIFO queue as a target, the queue must have content-based deduplication enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-messagededuplicationid-property.html">Using the Amazon SQS message deduplication ID</a> in the <i>Amazon SQS Developer Guide</i>.'
  '/schedule-groups/{Name}':
    post:
      operationId: CreateScheduleGroup
      description: Creates the specified schedule group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateScheduleGroupOutput'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the schedule group that you are creating.
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  description: ' Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, EventBridge Scheduler uses a randomly generated token for the request to ensure idempotency. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
                Tags:
                  description: The list of tags to associate with the schedule group.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteScheduleGroup
      description: '<p>Deletes the specified schedule group. Deleting a schedule group results in EventBridge Scheduler deleting all schedules associated with the group. When you delete a group, it remains in a <code>DELETING</code> state until all of its associated schedules are deleted. Schedules associated with the group that are set to run while the schedule group is in the process of being deleted might continue to invoke their targets until the schedule group and its associated schedules are deleted.</p> <note> <p> This operation is eventually consistent. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteScheduleGroupOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: clientToken
          in: query
          required: false
          description: ' Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, EventBridge Scheduler uses a randomly generated token for the request to ensure idempotency. '
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-_]+$'
            minLength: 1
            maxLength: 64
        - name: Name
          in: path
          required: true
          description: The name of the schedule group to delete.
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
    get:
      operationId: GetScheduleGroup
      description: Retrieves the specified schedule group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScheduleGroupOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the schedule group to retrieve.
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
  /schedule-groups:
    get:
      operationId: ListScheduleGroups
      description: Returns a paginated list of your schedule groups.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScheduleGroupsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MaxResults
          in: query
          required: false
          description: 'If specified, limits the number of results returned by this operation. The operation also returns a <code>NextToken</code> which you can use in a subsequent operation to retrieve the next set of results.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: NamePrefix
          in: query
          required: false
          description: The name prefix that you can use to return a filtered list of your schedule groups.
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
        - name: NextToken
          in: query
          required: false
          description: The token returned by a previous call to retrieve the next set of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /schedules:
    get:
      operationId: ListSchedules
      description: Returns a paginated list of your EventBridge Scheduler schedules.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchedulesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: ScheduleGroup
          in: query
          required: false
          description: 'If specified, only lists the schedules whose associated schedule group matches the given filter.'
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
        - name: MaxResults
          in: query
          required: false
          description: 'If specified, limits the number of results returned by this operation. The operation also returns a <code>NextToken</code> which you can use in a subsequent operation to retrieve the next set of results.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: NamePrefix
          in: query
          required: false
          description: Schedule name prefix to return the filtered list of resources.
          schema:
            type: string
            pattern: '^[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 64
        - name: NextToken
          in: query
          required: false
          description: The token returned by a previous call to retrieve the next set of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
        - name: State
          in: query
          required: false
          description: 'If specified, only lists the schedules whose current state matches the given filter.'
          schema:
            type: string
            enum:
              - ENABLED
              - DISABLED
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{ResourceArn}':
    get:
      operationId: ListTagsForResource
      description: Lists the tags associated with the Scheduler resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The ARN of the EventBridge Scheduler resource for which you want to view tags.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]+)?:scheduler:[a-z0-9\-]+:\d{12}:schedule-group\/[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 1011
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Assigns one or more tags (key-value pairs) to the specified EventBridge Scheduler resource. You can only assign tags to schedule groups.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the schedule group that you are adding tags to.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]+)?:scheduler:[a-z0-9\-]+:\d{12}:schedule-group\/[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 1011
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The list of tags to associate with the schedule group.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
  '/tags/{ResourceArn}#TagKeys':
    delete:
      operationId: UntagResource
      description: Removes one or more tags from the specified EventBridge Scheduler schedule group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the schedule group from which you are removing tags.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]+)?:scheduler:[a-z0-9\-]+:\d{12}:schedule-group\/[0-9a-zA-Z-_.]+$'
            minLength: 1
            maxLength: 1011
        - name: TagKeys
          in: query
          required: true
          description: The list of tag keys to remove from the resource.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 0
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateScheduleOutput:
      type: object
      required:
        - ScheduleArn
      properties:
        ScheduleArn:
          allOf:
            - $ref: '#/components/schemas/ScheduleArn'
            - description: The Amazon Resource Name (ARN) of the schedule.
    MaximumWindowInMinutes:
      type: integer
      minimum: 1
      maximum: 1440
    FlexibleTimeWindowMode:
      type: string
      enum:
        - 'OFF'
        - FLEXIBLE
    TargetArn:
      type: string
      minLength: 1
      maxLength: 1600
    DeadLetterConfig:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/DeadLetterConfigArnString'
            - description: The Amazon Resource Name (ARN) of the SQS queue specified as the destination for the dead-letter queue.
      description: 'An object that contains information about an Amazon SQS queue that EventBridge Scheduler uses as a dead-letter queue for your schedule. If specified, EventBridge Scheduler delivers failed events that could not be successfully delivered to a target to the queue.'
    EcsParameters:
      type: object
      required:
        - TaskDefinitionArn
      properties:
        CapacityProviderStrategy:
          allOf:
            - $ref: '#/components/schemas/CapacityProviderStrategy'
            - description: The capacity provider strategy to use for the task.
        EnableECSManagedTags:
          allOf:
            - $ref: '#/components/schemas/EnableECSManagedTags'
            - description: 'Specifies whether to enable Amazon ECS managed tags for the task. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging Your Amazon ECS Resources</a> in the <i>Amazon ECS Developer Guide</i>.'
        EnableExecuteCommand:
          allOf:
            - $ref: '#/components/schemas/EnableExecuteCommand'
            - description: 'Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.'
        Group:
          allOf:
            - $ref: '#/components/schemas/Group'
            - description: Specifies an ECS task group for the task. The maximum length is 255 characters.
        LaunchType:
          allOf:
            - $ref: '#/components/schemas/LaunchType'
            - description: 'Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The <code>FARGATE</code> value is supported only in the Regions where Fargate with Amazon ECS is supported. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS_Fargate.html">AWS Fargate on Amazon ECS</a> in the <i>Amazon ECS Developer Guide</i>.'
        NetworkConfiguration:
          allOf:
            - $ref: '#/components/schemas/NetworkConfiguration'
            - description: This structure specifies the network configuration for an ECS task.
        PlacementConstraints:
          allOf:
            - $ref: '#/components/schemas/PlacementConstraints'
            - description: An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime).
        PlacementStrategy:
          allOf:
            - $ref: '#/components/schemas/PlacementStrategies'
            - description: The task placement strategy for a task or service.
        PlatformVersion:
          allOf:
            - $ref: '#/components/schemas/PlatformVersion'
            - description: 'Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as <code>1.1.0</code>.'
        PropagateTags:
          allOf:
            - $ref: '#/components/schemas/PropagateTags'
            - description: 'Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use Amazon ECS''s <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_TagResource.html"> <code>TagResource</code> </a> API action. '
        ReferenceId:
          allOf:
            - $ref: '#/components/schemas/ReferenceId'
            - description: The reference ID to use for the task.
        Tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - description: 'The metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html"> <code>RunTask</code> </a> in the <i>Amazon ECS API Reference</i>.'
        TaskCount:
          allOf:
            - $ref: '#/components/schemas/TaskCount'
            - description: The number of tasks to create based on <code>TaskDefinition</code>. The default is <code>1</code>.
        TaskDefinitionArn:
          allOf:
            - $ref: '#/components/schemas/TaskDefinitionArn'
            - description: The Amazon Resource Name (ARN) of the task definition to use if the event target is an Amazon ECS task.
      description: 'The templated target type for the Amazon ECS <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html"> <code>RunTask</code> </a> API operation.'
    EventBridgeParameters:
      type: object
      required:
        - DetailType
        - Source
      properties:
        DetailType:
          allOf:
            - $ref: '#/components/schemas/DetailType'
            - description: 'A free-form string, with a maximum of 128 characters, used to decide what fields to expect in the event detail.'
        Source:
          allOf:
            - $ref: '#/components/schemas/Source'
            - description: The source of the event.
      description: 'The templated target type for the EventBridge <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html"> <code>PutEvents</code> </a> API operation.'
    TargetInput:
      type: string
      minLength: 1
    KinesisParameters:
      type: object
      required:
        - PartitionKey
      properties:
        PartitionKey:
          allOf:
            - $ref: '#/components/schemas/TargetPartitionKey'
            - description: 'Specifies the shard to which EventBridge Scheduler sends the event. For more information, see <a href="https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html">Amazon Kinesis Data Streams terminology and concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.'
      description: The templated target type for the Amazon Kinesis <a href="kinesis/latest/APIReference/API_PutRecord.html"> <code>PutRecord</code> </a> API operation.
    RetryPolicy:
      type: object
      properties:
        MaximumEventAgeInSeconds:
          allOf:
            - $ref: '#/components/schemas/MaximumEventAgeInSeconds'
            - description: 'The maximum amount of time, in seconds, to continue to make retry attempts.'
        MaximumRetryAttempts:
          allOf:
            - $ref: '#/components/schemas/MaximumRetryAttempts'
            - description: The maximum number of retry attempts to make before the request fails. Retry attempts with exponential backoff continue until either the maximum number of attempts is made or until the duration of the <code>MaximumEventAgeInSeconds</code> is reached.
      description: 'A <code>RetryPolicy</code> object that includes information about the retry policy settings, including the maximum age of an event, and the maximum number of times EventBridge Scheduler will try to deliver the event to a target.'
    RoleArn:
      type: string
      pattern: '^arn:aws(-[a-z]+)?:iam::\d{12}:role\/[\w+=,.@\/-]+$'
      minLength: 1
      maxLength: 1600
    SageMakerPipelineParameters:
      type: object
      properties:
        PipelineParameterList:
          allOf:
            - $ref: '#/components/schemas/SageMakerPipelineParameterList'
            - description: List of parameter names and values to use when executing the SageMaker Model Building Pipeline.
      description: 'The templated target type for the Amazon SageMaker <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_StartPipelineExecution.html"> <code>StartPipelineExecution</code> </a> API operation.'
    SqsParameters:
      type: object
      properties:
        MessageGroupId:
          allOf:
            - $ref: '#/components/schemas/MessageGroupId'
            - description: The FIFO message group ID to use as the target.
      description: 'The templated target type for the Amazon SQS <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessage.html"> <code>SendMessage</code> </a> API operation. Contains the message group ID to use when the target is a FIFO queue. If you specify an Amazon SQS FIFO queue as a target, the queue must have content-based deduplication enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-messagededuplicationid-property.html">Using the Amazon SQS message deduplication ID</a> in the <i>Amazon SQS Developer Guide</i>. '
    ServiceQuotaExceededException: {}
    ValidationException: {}
    InternalServerException: {}
    ConflictException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    CreateScheduleGroupOutput:
      type: object
      required:
        - ScheduleGroupArn
      properties:
        ScheduleGroupArn:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupArn'
            - description: The Amazon Resource Name (ARN) of the schedule group.
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/TagKey'
            - description: The key for the tag.
        Value:
          allOf:
            - $ref: '#/components/schemas/TagValue'
            - description: The value for the tag.
      description: Tag to associate with a schedule group.
    DeleteScheduleOutput:
      type: object
      properties: {}
    DeleteScheduleGroupOutput:
      type: object
      properties: {}
    GetScheduleOutput:
      type: object
      properties:
        ActionAfterCompletion:
          allOf:
            - $ref: '#/components/schemas/ActionAfterCompletion'
            - description: Indicates the action that EventBridge Scheduler applies to the schedule after the schedule completes invoking the target.
        Arn:
          allOf:
            - $ref: '#/components/schemas/ScheduleArn'
            - description: The Amazon Resource Name (ARN) of the schedule.
        CreationDate:
          allOf:
            - $ref: '#/components/schemas/CreationDate'
            - description: The time at which the schedule was created.
        Description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the schedule.
        EndDate:
          allOf:
            - $ref: '#/components/schemas/EndDate'
            - description: 'The date, in UTC, before which the schedule can invoke its target. Depending on the schedule''s recurrence expression, invocations might stop on, or before, the <code>EndDate</code> you specify. EventBridge Scheduler ignores <code>EndDate</code> for one-time schedules.'
        FlexibleTimeWindow:
          allOf:
            - $ref: '#/components/schemas/FlexibleTimeWindow'
            - description: Allows you to configure a time window during which EventBridge Scheduler invokes the schedule.
        GroupName:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupName'
            - description: The name of the schedule group associated with this schedule.
        KmsKeyArn:
          allOf:
            - $ref: '#/components/schemas/KmsKeyArn'
            - description: The ARN for a customer managed KMS Key that is be used to encrypt and decrypt your data.
        LastModificationDate:
          allOf:
            - $ref: '#/components/schemas/LastModificationDate'
            - description: The time at which the schedule was last modified.
        Name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the schedule.
        ScheduleExpression:
          allOf:
            - $ref: '#/components/schemas/ScheduleExpression'
            - description: '<p> The expression that defines when the schedule runs. The following formats are supported. </p> <ul> <li> <p> <code>at</code> expression - <code>at(yyyy-mm-ddThh:mm:ss)</code> </p> </li> <li> <p> <code>rate</code> expression - <code>rate(value unit)</code> </p> </li> <li> <p> <code>cron</code> expression - <code>cron(fields)</code> </p> </li> </ul> <p> You can use <code>at</code> expressions to create one-time schedules that invoke a target once, at the time and in the time zone, that you specify. You can use <code>rate</code> and <code>cron</code> expressions to create recurring schedules. Rate-based schedules are useful when you want to invoke a target at regular intervals, such as every 15 minutes or every five days. Cron-based schedules are useful when you want to invoke a target periodically at a specific time, such as at 8:00 am (UTC+0) every 1st day of the month. </p> <p> A <code>cron</code> expression consists of six fields separated by white spaces: <code>(minutes hours day_of_month month day_of_week year)</code>. </p> <p> A <code>rate</code> expression consists of a <i>value</i> as a positive integer, and a <i>unit</i> with the following options: <code>minute</code> | <code>minutes</code> | <code>hour</code> | <code>hours</code> | <code>day</code> | <code>days</code> </p> <p> For more information and examples, see <a href="https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html">Schedule types on EventBridge Scheduler</a> in the <i>EventBridge Scheduler User Guide</i>. </p>'
        ScheduleExpressionTimezone:
          allOf:
            - $ref: '#/components/schemas/ScheduleExpressionTimezone'
            - description: The timezone in which the scheduling expression is evaluated.
        StartDate:
          allOf:
            - $ref: '#/components/schemas/StartDate'
            - description: 'The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule''s recurrence expression, invocations might occur on, or after, the <code>StartDate</code> you specify. EventBridge Scheduler ignores <code>StartDate</code> for one-time schedules.'
        State:
          allOf:
            - $ref: '#/components/schemas/ScheduleState'
            - description: Specifies whether the schedule is enabled or disabled.
        Target:
          allOf:
            - $ref: '#/components/schemas/Target'
            - description: The schedule target.
    GetScheduleGroupOutput:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupArn'
            - description: The Amazon Resource Name (ARN) of the schedule group.
        CreationDate:
          allOf:
            - $ref: '#/components/schemas/CreationDate'
            - description: The time at which the schedule group was created.
        LastModificationDate:
          allOf:
            - $ref: '#/components/schemas/LastModificationDate'
            - description: The time at which the schedule group was last modified.
        Name:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupName'
            - description: The name of the schedule group.
        State:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupState'
            - description: Specifies the state of the schedule group.
    ListScheduleGroupsOutput:
      type: object
      required:
        - ScheduleGroups
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'Indicates whether there are additional results to retrieve. If the value is null, there are no more results.'
        ScheduleGroups:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupList'
            - description: The schedule groups that match the specified criteria.
    ListSchedulesOutput:
      type: object
      required:
        - Schedules
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'Indicates whether there are additional results to retrieve. If the value is null, there are no more results.'
        Schedules:
          allOf:
            - $ref: '#/components/schemas/ScheduleList'
            - description: The schedules that match the specified criteria.
    ListTagsForResourceOutput:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The list of tags associated with the specified resource.
    TagResourceOutput:
      type: object
      properties: {}
    UntagResourceOutput:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateScheduleOutput:
      type: object
      required:
        - ScheduleArn
      properties:
        ScheduleArn:
          allOf:
            - $ref: '#/components/schemas/ScheduleArn'
            - description: The Amazon Resource Name (ARN) of the schedule that you updated.
    ActionAfterCompletion:
      type: string
      enum:
        - NONE
        - DELETE
    AssignPublicIp:
      type: string
      enum:
        - ENABLED
        - DISABLED
    SecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroup'
      minItems: 1
      maxItems: 5
    Subnets:
      type: array
      items:
        $ref: '#/components/schemas/Subnet'
      minItems: 1
      maxItems: 16
    AwsVpcConfiguration:
      type: object
      required:
        - Subnets
      properties:
        AssignPublicIp:
          allOf:
            - $ref: '#/components/schemas/AssignPublicIp'
            - description: Specifies whether the task's elastic network interface receives a public IP address. You can specify <code>ENABLED</code> only when <code>LaunchType</code> in <code>EcsParameters</code> is set to <code>FARGATE</code>.
        SecurityGroups:
          allOf:
            - $ref: '#/components/schemas/SecurityGroups'
            - description: 'Specifies the security groups associated with the task. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.'
        Subnets:
          allOf:
            - $ref: '#/components/schemas/Subnets'
            - description: Specifies the subnets associated with the task. These subnets must all be in the same VPC. You can specify as many as 16 subnets.
      description: 'This structure specifies the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the awsvpc network mode.'
    CapacityProvider:
      type: string
      minLength: 1
      maxLength: 255
    CapacityProviderStrategyItem:
      type: object
      required:
        - capacityProvider
      properties:
        base:
          allOf:
            - $ref: '#/components/schemas/CapacityProviderStrategyItemBase'
            - description: 'The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default value of <code>0</code> is used.'
        capacityProvider:
          allOf:
            - $ref: '#/components/schemas/CapacityProvider'
            - description: The short name of the capacity provider.
        weight:
          allOf:
            - $ref: '#/components/schemas/CapacityProviderStrategyItemWeight'
            - description: 'The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied.'
      description: The details of a capacity provider strategy.
    CapacityProviderStrategy:
      type: array
      items:
        $ref: '#/components/schemas/CapacityProviderStrategyItem'
      minItems: 0
      maxItems: 6
    CapacityProviderStrategyItemBase:
      type: integer
      minimum: 0
      maximum: 100000
    CapacityProviderStrategyItemWeight:
      type: integer
      minimum: 0
      maximum: 1000
    ClientToken:
      type: string
      pattern: '^[a-zA-Z0-9-_]+$'
      minLength: 1
      maxLength: 64
    ScheduleGroupName:
      type: string
      pattern: '^[0-9a-zA-Z-_.]+$'
      minLength: 1
      maxLength: 64
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 200
    CreateScheduleGroupInput:
      type: object
      title: CreateScheduleGroupInput
      properties:
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: ' Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, EventBridge Scheduler uses a randomly generated token for the request to ensure idempotency. '
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The list of tags to associate with the schedule group.
    ScheduleGroupArn:
      type: string
      pattern: '^arn:aws(-[a-z]+)?:scheduler:[a-z0-9\-]+:\d{12}:schedule-group\/[0-9a-zA-Z-_.]+$'
      minLength: 1
      maxLength: 1224
    Description:
      type: string
      minLength: 0
      maxLength: 512
    EndDate:
      type: string
      format: date-time
    FlexibleTimeWindow:
      type: object
      required:
        - Mode
      properties:
        MaximumWindowInMinutes:
          allOf:
            - $ref: '#/components/schemas/MaximumWindowInMinutes'
            - description: The maximum time window during which a schedule can be invoked.
        Mode:
          allOf:
            - $ref: '#/components/schemas/FlexibleTimeWindowMode'
            - description: Determines whether the schedule is invoked within a flexible time window.
      description: Allows you to configure a time window during which EventBridge Scheduler invokes the schedule.
    KmsKeyArn:
      type: string
      pattern: '^arn:aws(-[a-z]+)?:kms:[a-z0-9\-]+:\d{12}:(key|alias)\/[0-9a-zA-Z-_]*$'
      minLength: 1
      maxLength: 2048
    Name:
      type: string
      pattern: '^[0-9a-zA-Z-_.]+$'
      minLength: 1
      maxLength: 64
    ScheduleExpression:
      type: string
      minLength: 1
      maxLength: 256
    ScheduleExpressionTimezone:
      type: string
      minLength: 1
      maxLength: 50
    StartDate:
      type: string
      format: date-time
    ScheduleState:
      type: string
      enum:
        - ENABLED
        - DISABLED
    Target:
      type: object
      required:
        - Arn
        - RoleArn
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/TargetArn'
            - description: The Amazon Resource Name (ARN) of the target.
        DeadLetterConfig:
          allOf:
            - $ref: '#/components/schemas/DeadLetterConfig'
            - description: 'An object that contains information about an Amazon SQS queue that EventBridge Scheduler uses as a dead-letter queue for your schedule. If specified, EventBridge Scheduler delivers failed events that could not be successfully delivered to a target to the queue.'
        EcsParameters:
          allOf:
            - $ref: '#/components/schemas/EcsParameters'
            - description: 'The templated target type for the Amazon ECS <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html"> <code>RunTask</code> </a> API operation.'
        EventBridgeParameters:
          allOf:
            - $ref: '#/components/schemas/EventBridgeParameters'
            - description: 'The templated target type for the EventBridge <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html"> <code>PutEvents</code> </a> API operation.'
        Input:
          allOf:
            - $ref: '#/components/schemas/TargetInput'
            - description: 'The text, or well-formed JSON, passed to the target. If you are configuring a templated Lambda, AWS Step Functions, or Amazon EventBridge target, the input must be a well-formed JSON. For all other target types, a JSON is not required. If you do not specify anything for this field, EventBridge Scheduler delivers a default notification to the target.'
        KinesisParameters:
          allOf:
            - $ref: '#/components/schemas/KinesisParameters'
            - description: The templated target type for the Amazon Kinesis <a href="kinesis/latest/APIReference/API_PutRecord.html"> <code>PutRecord</code> </a> API operation.
        RetryPolicy:
          allOf:
            - $ref: '#/components/schemas/RetryPolicy'
            - description: 'A <code>RetryPolicy</code> object that includes information about the retry policy settings, including the maximum age of an event, and the maximum number of times EventBridge Scheduler will try to deliver the event to a target.'
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: The Amazon Resource Name (ARN) of the IAM role that EventBridge Scheduler will use for this target when the schedule is invoked.
        SageMakerPipelineParameters:
          allOf:
            - $ref: '#/components/schemas/SageMakerPipelineParameters'
            - description: 'The templated target type for the Amazon SageMaker <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_StartPipelineExecution.html"> <code>StartPipelineExecution</code> </a> API operation.'
        SqsParameters:
          allOf:
            - $ref: '#/components/schemas/SqsParameters'
            - description: 'The templated target type for the Amazon SQS <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessage.html"> <code>SendMessage</code> </a> API operation. Contains the message group ID to use when the target is a FIFO queue. If you specify an Amazon SQS FIFO queue as a target, the queue must have content-based deduplication enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-messagededuplicationid-property.html">Using the Amazon SQS message deduplication ID</a> in the <i>Amazon SQS Developer Guide</i>.'
      description: 'The schedule''s target. EventBridge Scheduler supports templated target that invoke common API operations, as well as universal targets that you can customize to invoke over 6,000 API operations across more than 270 services. You can only specify one templated or universal target for a schedule.'
    CreateScheduleInput:
      type: object
      required:
        - FlexibleTimeWindow
        - ScheduleExpression
        - Target
      title: CreateScheduleInput
      properties:
        ActionAfterCompletion:
          allOf:
            - $ref: '#/components/schemas/ActionAfterCompletion'
            - description: Specifies the action that EventBridge Scheduler applies to the schedule after the schedule completes invoking the target.
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: ' Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, EventBridge Scheduler uses a randomly generated token for the request to ensure idempotency. '
        Description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description you specify for the schedule.
        EndDate:
          allOf:
            - $ref: '#/components/schemas/EndDate'
            - description: 'The date, in UTC, before which the schedule can invoke its target. Depending on the schedule''s recurrence expression, invocations might stop on, or before, the <code>EndDate</code> you specify. EventBridge Scheduler ignores <code>EndDate</code> for one-time schedules.'
        FlexibleTimeWindow:
          allOf:
            - $ref: '#/components/schemas/FlexibleTimeWindow'
            - description: Allows you to configure a time window during which EventBridge Scheduler invokes the schedule.
        GroupName:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupName'
            - description: 'The name of the schedule group to associate with this schedule. If you omit this, the default schedule group is used.'
        KmsKeyArn:
          allOf:
            - $ref: '#/components/schemas/KmsKeyArn'
            - description: The Amazon Resource Name (ARN) for the customer managed KMS key that EventBridge Scheduler will use to encrypt and decrypt your data.
        ScheduleExpression:
          allOf:
            - $ref: '#/components/schemas/ScheduleExpression'
            - description: '<p> The expression that defines when the schedule runs. The following formats are supported. </p> <ul> <li> <p> <code>at</code> expression - <code>at(yyyy-mm-ddThh:mm:ss)</code> </p> </li> <li> <p> <code>rate</code> expression - <code>rate(value unit)</code> </p> </li> <li> <p> <code>cron</code> expression - <code>cron(fields)</code> </p> </li> </ul> <p> You can use <code>at</code> expressions to create one-time schedules that invoke a target once, at the time and in the time zone, that you specify. You can use <code>rate</code> and <code>cron</code> expressions to create recurring schedules. Rate-based schedules are useful when you want to invoke a target at regular intervals, such as every 15 minutes or every five days. Cron-based schedules are useful when you want to invoke a target periodically at a specific time, such as at 8:00 am (UTC+0) every 1st day of the month. </p> <p> A <code>cron</code> expression consists of six fields separated by white spaces: <code>(minutes hours day_of_month month day_of_week year)</code>. </p> <p> A <code>rate</code> expression consists of a <i>value</i> as a positive integer, and a <i>unit</i> with the following options: <code>minute</code> | <code>minutes</code> | <code>hour</code> | <code>hours</code> | <code>day</code> | <code>days</code> </p> <p> For more information and examples, see <a href="https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html">Schedule types on EventBridge Scheduler</a> in the <i>EventBridge Scheduler User Guide</i>. </p>'
        ScheduleExpressionTimezone:
          allOf:
            - $ref: '#/components/schemas/ScheduleExpressionTimezone'
            - description: The timezone in which the scheduling expression is evaluated.
        StartDate:
          allOf:
            - $ref: '#/components/schemas/StartDate'
            - description: 'The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule''s recurrence expression, invocations might occur on, or after, the <code>StartDate</code> you specify. EventBridge Scheduler ignores <code>StartDate</code> for one-time schedules.'
        State:
          allOf:
            - $ref: '#/components/schemas/ScheduleState'
            - description: Specifies whether the schedule is enabled or disabled.
        Target:
          allOf:
            - $ref: '#/components/schemas/Target'
            - description: The schedule's target.
    ScheduleArn:
      type: string
      pattern: '^arn:aws(-[a-z]+)?:scheduler:[a-z0-9\-]+:\d{12}:schedule\/[0-9a-zA-Z-_.]+\/[0-9a-zA-Z-_.]+$'
      minLength: 1
      maxLength: 1224
    CreationDate:
      type: string
      format: date-time
    DeadLetterConfigArnString:
      type: string
      pattern: '^arn:aws(-[a-z]+)?:sqs:[a-z0-9\-]+:\d{12}:[a-zA-Z0-9\-_]+$'
      minLength: 1
      maxLength: 1600
    DeleteScheduleGroupInput:
      type: object
      title: DeleteScheduleGroupInput
      properties: {}
    DeleteScheduleInput:
      type: object
      title: DeleteScheduleInput
      properties: {}
    DetailType:
      type: string
      minLength: 1
      maxLength: 128
    EnableECSManagedTags:
      type: boolean
    EnableExecuteCommand:
      type: boolean
    Group:
      type: string
      minLength: 1
      maxLength: 255
    LaunchType:
      type: string
      enum:
        - EC2
        - FARGATE
        - EXTERNAL
    NetworkConfiguration:
      type: object
      properties:
        awsvpcConfiguration:
          allOf:
            - $ref: '#/components/schemas/AwsVpcConfiguration'
            - description: 'Specifies the Amazon VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the awsvpc network mode.'
      description: Specifies the network configuration for an ECS task.
    PlacementConstraints:
      type: array
      items:
        $ref: '#/components/schemas/PlacementConstraint'
      minItems: 0
      maxItems: 10
    PlacementStrategies:
      type: array
      items:
        $ref: '#/components/schemas/PlacementStrategy'
      minItems: 0
      maxItems: 5
    PlatformVersion:
      type: string
      minLength: 1
      maxLength: 64
    PropagateTags:
      type: string
      enum:
        - TASK_DEFINITION
    ReferenceId:
      type: string
      minLength: 0
      maxLength: 1024
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/TagMap'
      minItems: 0
      maxItems: 50
    TaskCount:
      type: integer
      minimum: 1
      maximum: 10
    TaskDefinitionArn:
      type: string
      minLength: 1
      maxLength: 1600
    Source:
      type: string
      pattern: '^(?=[/\.\-_A-Za-z0-9]+)((?!aws\.).*)|(\$(\.[\w_-]+(\[(\d+|\*)\])*)*)$'
      minLength: 1
      maxLength: 256
    GetScheduleGroupInput:
      type: object
      title: GetScheduleGroupInput
      properties: {}
    LastModificationDate:
      type: string
      format: date-time
    ScheduleGroupState:
      type: string
      enum:
        - ACTIVE
        - DELETING
    GetScheduleInput:
      type: object
      title: GetScheduleInput
      properties: {}
    TargetPartitionKey:
      type: string
      minLength: 1
      maxLength: 256
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ScheduleGroupNamePrefix:
      type: string
      pattern: '^[0-9a-zA-Z-_.]+$'
      minLength: 1
      maxLength: 64
    NextToken:
      type: string
      minLength: 1
      maxLength: 2048
    ListScheduleGroupsInput:
      type: object
      title: ListScheduleGroupsInput
      properties: {}
    ScheduleGroupList:
      type: array
      items:
        $ref: '#/components/schemas/ScheduleGroupSummary'
    NamePrefix:
      type: string
      pattern: '^[0-9a-zA-Z-_.]+$'
      minLength: 1
      maxLength: 64
    ListSchedulesInput:
      type: object
      title: ListSchedulesInput
      properties: {}
    ScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/ScheduleSummary'
    TagResourceArn:
      type: string
      pattern: '^arn:aws(-[a-z]+)?:scheduler:[a-z0-9\-]+:\d{12}:schedule-group\/[0-9a-zA-Z-_.]+$'
      minLength: 1
      maxLength: 1011
    ListTagsForResourceInput:
      type: object
      title: ListTagsForResourceInput
      properties: {}
    MaximumEventAgeInSeconds:
      type: integer
      minimum: 60
      maximum: 86400
    MaximumRetryAttempts:
      type: integer
      minimum: 0
      maximum: 185
    MessageGroupId:
      type: string
      minLength: 1
      maxLength: 128
    PlacementConstraintExpression:
      type: string
      minLength: 0
      maxLength: 2000
    PlacementConstraintType:
      type: string
      enum:
        - distinctInstance
        - memberOf
    PlacementConstraint:
      type: object
      properties:
        expression:
          allOf:
            - $ref: '#/components/schemas/PlacementConstraintExpression'
            - description: 'A cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is <code>distinctInstance</code>. For more information, see <a href="https://docs.aws.amazon.com/latest/developerguide/cluster-query-language.html">Cluster query language</a> in the <i>Amazon ECS Developer Guide</i>.'
        type:
          allOf:
            - $ref: '#/components/schemas/PlacementConstraintType'
            - description: The type of constraint. Use <code>distinctInstance</code> to ensure that each task in a particular group is running on a different container instance. Use <code>memberOf</code> to restrict the selection to a group of valid candidates.
      description: An object representing a constraint on task placement.
    PlacementStrategy:
      type: object
      properties:
        field:
          allOf:
            - $ref: '#/components/schemas/PlacementStrategyField'
            - description: 'The field to apply the placement strategy against. For the spread placement strategy, valid values are <code>instanceId</code> (or <code>instanceId</code>, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as <code>attribute:ecs.availability-zone</code>. For the binpack placement strategy, valid values are <code>cpu</code> and <code>memory</code>. For the random placement strategy, this field is not used.'
        type:
          allOf:
            - $ref: '#/components/schemas/PlacementStrategyType'
            - description: 'The type of placement strategy. The random placement strategy randomly places tasks on available candidates. The spread placement strategy spreads placement across available candidates evenly based on the field parameter. The binpack strategy places tasks on available candidates that have the least available amount of the resource that is specified with the field parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory (but still enough to run the task).'
      description: The task placement strategy for a task or service.
    PlacementStrategyField:
      type: string
      minLength: 0
      maxLength: 255
    PlacementStrategyType:
      type: string
      enum:
        - random
        - spread
        - binpack
    SageMakerPipelineParameterName:
      type: string
      pattern: '^[A-Za-z0-9\-_]*$'
      minLength: 1
      maxLength: 256
    SageMakerPipelineParameterValue:
      type: string
      minLength: 1
      maxLength: 1024
    SageMakerPipelineParameter:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/SageMakerPipelineParameterName'
            - description: Name of parameter to start execution of a SageMaker Model Building Pipeline.
        Value:
          allOf:
            - $ref: '#/components/schemas/SageMakerPipelineParameterValue'
            - description: Value of parameter to start execution of a SageMaker Model Building Pipeline.
      description: The name and value pair of a parameter to use to start execution of a SageMaker Model Building Pipeline.
    SageMakerPipelineParameterList:
      type: array
      items:
        $ref: '#/components/schemas/SageMakerPipelineParameter'
      minItems: 0
      maxItems: 200
    ScheduleGroupSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupArn'
            - description: The Amazon Resource Name (ARN) of the schedule group.
        CreationDate:
          allOf:
            - $ref: '#/components/schemas/CreationDate'
            - description: The time at which the schedule group was created.
        LastModificationDate:
          allOf:
            - $ref: '#/components/schemas/LastModificationDate'
            - description: The time at which the schedule group was last modified.
        Name:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupName'
            - description: The name of the schedule group.
        State:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupState'
            - description: Specifies the state of the schedule group.
      description: The details of a schedule group.
    ScheduleSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/ScheduleArn'
            - description: The Amazon Resource Name (ARN) of the schedule.
        CreationDate:
          allOf:
            - $ref: '#/components/schemas/CreationDate'
            - description: The time at which the schedule was created.
        GroupName:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupName'
            - description: The name of the schedule group associated with this schedule.
        LastModificationDate:
          allOf:
            - $ref: '#/components/schemas/LastModificationDate'
            - description: The time at which the schedule was last modified.
        Name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the schedule.
        State:
          allOf:
            - $ref: '#/components/schemas/ScheduleState'
            - description: Specifies whether the schedule is enabled or disabled.
        Target:
          allOf:
            - $ref: '#/components/schemas/TargetSummary'
            - description: The schedule's target details.
      description: The details of a schedule.
    TargetSummary:
      type: object
      required:
        - Arn
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/TargetArn'
            - description: The Amazon Resource Name (ARN) of the target.
      description: The details of a target.
    SecurityGroup:
      type: string
      minLength: 1
      maxLength: 1000
    Subnet:
      type: string
      minLength: 1
      maxLength: 1000
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceInput:
      type: object
      required:
        - Tags
      title: TagResourceInput
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The list of tags to associate with the schedule group.
    UntagResourceInput:
      type: object
      title: UntagResourceInput
      properties: {}
    UpdateScheduleInput:
      type: object
      required:
        - FlexibleTimeWindow
        - ScheduleExpression
        - Target
      title: UpdateScheduleInput
      properties:
        ActionAfterCompletion:
          allOf:
            - $ref: '#/components/schemas/ActionAfterCompletion'
            - description: Specifies the action that EventBridge Scheduler applies to the schedule after the schedule completes invoking the target.
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: ' Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, EventBridge Scheduler uses a randomly generated token for the request to ensure idempotency. '
        Description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description you specify for the schedule.
        EndDate:
          allOf:
            - $ref: '#/components/schemas/EndDate'
            - description: 'The date, in UTC, before which the schedule can invoke its target. Depending on the schedule''s recurrence expression, invocations might stop on, or before, the <code>EndDate</code> you specify. EventBridge Scheduler ignores <code>EndDate</code> for one-time schedules.'
        FlexibleTimeWindow:
          allOf:
            - $ref: '#/components/schemas/FlexibleTimeWindow'
            - description: Allows you to configure a time window during which EventBridge Scheduler invokes the schedule.
        GroupName:
          allOf:
            - $ref: '#/components/schemas/ScheduleGroupName'
            - description: 'The name of the schedule group with which the schedule is associated. You must provide this value in order for EventBridge Scheduler to find the schedule you want to update. If you omit this value, EventBridge Scheduler assumes the group is associated to the default group.'
        KmsKeyArn:
          allOf:
            - $ref: '#/components/schemas/KmsKeyArn'
            - description: The ARN for the customer managed KMS key that that you want EventBridge Scheduler to use to encrypt and decrypt your data.
        ScheduleExpression:
          allOf:
            - $ref: '#/components/schemas/ScheduleExpression'
            - description: '<p> The expression that defines when the schedule runs. The following formats are supported. </p> <ul> <li> <p> <code>at</code> expression - <code>at(yyyy-mm-ddThh:mm:ss)</code> </p> </li> <li> <p> <code>rate</code> expression - <code>rate(value unit)</code> </p> </li> <li> <p> <code>cron</code> expression - <code>cron(fields)</code> </p> </li> </ul> <p> You can use <code>at</code> expressions to create one-time schedules that invoke a target once, at the time and in the time zone, that you specify. You can use <code>rate</code> and <code>cron</code> expressions to create recurring schedules. Rate-based schedules are useful when you want to invoke a target at regular intervals, such as every 15 minutes or every five days. Cron-based schedules are useful when you want to invoke a target periodically at a specific time, such as at 8:00 am (UTC+0) every 1st day of the month. </p> <p> A <code>cron</code> expression consists of six fields separated by white spaces: <code>(minutes hours day_of_month month day_of_week year)</code>. </p> <p> A <code>rate</code> expression consists of a <i>value</i> as a positive integer, and a <i>unit</i> with the following options: <code>minute</code> | <code>minutes</code> | <code>hour</code> | <code>hours</code> | <code>day</code> | <code>days</code> </p> <p> For more information and examples, see <a href="https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html">Schedule types on EventBridge Scheduler</a> in the <i>EventBridge Scheduler User Guide</i>. </p>'
        ScheduleExpressionTimezone:
          allOf:
            - $ref: '#/components/schemas/ScheduleExpressionTimezone'
            - description: The timezone in which the scheduling expression is evaluated.
        StartDate:
          allOf:
            - $ref: '#/components/schemas/StartDate'
            - description: 'The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule''s recurrence expression, invocations might occur on, or after, the <code>StartDate</code> you specify. EventBridge Scheduler ignores <code>StartDate</code> for one-time schedules.'
        State:
          allOf:
            - $ref: '#/components/schemas/ScheduleState'
            - description: Specifies whether the schedule is enabled or disabled.
        Target:
          allOf:
            - $ref: '#/components/schemas/Target'
            - description: The schedule target. You can use this operation to change the target that your schedule invokes.
security:
  - hmac: []
