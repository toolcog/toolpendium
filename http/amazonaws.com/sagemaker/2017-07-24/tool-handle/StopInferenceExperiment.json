{
  "name": "StopInferenceExperiment",
  "description": "Stops an inference experiment.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.StopInferenceExperiment"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/StopInferenceExperimentRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "StopInferenceExperimentRequest": {
        "type": "object",
        "required": [
          "Name",
          "ModelVariantActions"
        ],
        "title": "StopInferenceExperimentRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/InferenceExperimentName"
              },
              {
                "description": "The name of the inference experiment to stop."
              }
            ]
          },
          "ModelVariantActions": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelVariantActionMap"
              },
              {
                "description": "<p> Array of key-value pairs, with names of variants mapped to actions. The possible actions are the following: </p> <ul> <li> <p> <code>Promote</code> - Promote the shadow variant to a production variant</p> </li> <li> <p> <code>Remove</code> - Delete the variant</p> </li> <li> <p> <code>Retain</code> - Keep the variant as it is</p> </li> </ul>"
              }
            ]
          },
          "DesiredModelVariants": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelVariantConfigList"
              },
              {
                "description": " An array of <code>ModelVariantConfig</code> objects. There is one for each variant that you want to deploy after the inference experiment stops. Each <code>ModelVariantConfig</code> describes the infrastructure configuration for deploying the corresponding variant. "
              }
            ]
          },
          "DesiredState": {
            "allOf": [
              {
                "$ref": "#/$defs/InferenceExperimentStopDesiredState"
              },
              {
                "description": "<p> The desired state of the experiment after stopping. The possible states are the following: </p> <ul> <li> <p> <code>Completed</code>: The experiment completed successfully</p> </li> <li> <p> <code>Cancelled</code>: The experiment was canceled</p> </li> </ul>"
              }
            ]
          },
          "Reason": {
            "allOf": [
              {
                "$ref": "#/$defs/InferenceExperimentStatusReason"
              },
              {
                "description": "The reason for stopping the experiment."
              }
            ]
          }
        }
      },
      "InferenceExperimentName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,119}",
        "minLength": 1,
        "maxLength": 120
      },
      "ModelVariantActionMap": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 2,
        "additionalProperties": {
          "$ref": "#/$defs/ModelVariantAction"
        }
      },
      "ModelVariantAction": {
        "type": "string",
        "enum": [
          "Retain",
          "Remove",
          "Promote"
        ]
      },
      "ModelVariantConfigList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ModelVariantConfig"
        },
        "minItems": 1,
        "maxItems": 2
      },
      "ModelVariantConfig": {
        "type": "object",
        "required": [
          "ModelName",
          "VariantName",
          "InfrastructureConfig"
        ],
        "properties": {
          "ModelName": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelName"
              },
              {
                "description": "The name of the Amazon SageMaker Model entity."
              }
            ]
          },
          "VariantName": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelVariantName"
              },
              {
                "description": "The name of the variant."
              }
            ]
          },
          "InfrastructureConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelInfrastructureConfig"
              },
              {
                "description": "The configuration for the infrastructure that the model will be deployed to."
              }
            ]
          }
        },
        "description": "Contains information about the deployment options of a model."
      },
      "ModelName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "maxLength": 63
      },
      "ModelVariantName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]([\\-a-zA-Z0-9]*[a-zA-Z0-9])?",
        "maxLength": 63
      },
      "ModelInfrastructureConfig": {
        "type": "object",
        "required": [
          "InfrastructureType",
          "RealTimeInferenceConfig"
        ],
        "properties": {
          "InfrastructureType": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelInfrastructureType"
              },
              {
                "description": "<p>The inference option to which to deploy your model. Possible values are the following:</p> <ul> <li> <p> <code>RealTime</code>: Deploy to real-time inference.</p> </li> </ul>"
              }
            ]
          },
          "RealTimeInferenceConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/RealTimeInferenceConfig"
              },
              {
                "description": "The infrastructure configuration for deploying the model to real-time inference."
              }
            ]
          }
        },
        "description": "The configuration for the infrastructure that the model will be deployed to."
      },
      "ModelInfrastructureType": {
        "type": "string",
        "enum": [
          "RealTimeInference"
        ]
      },
      "RealTimeInferenceConfig": {
        "type": "object",
        "required": [
          "InstanceType",
          "InstanceCount"
        ],
        "properties": {
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceType"
              },
              {
                "description": "The instance type the model is deployed to."
              }
            ]
          },
          "InstanceCount": {
            "allOf": [
              {
                "$ref": "#/$defs/TaskCount"
              },
              {
                "description": "The number of instances of the type specified by <code>InstanceType</code>."
              }
            ]
          }
        },
        "description": "The infrastructure configuration for deploying the model to a real-time inference endpoint."
      },
      "InstanceType": {
        "type": "string",
        "enum": [
          "ml.t2.medium",
          "ml.t2.large",
          "ml.t2.xlarge",
          "ml.t2.2xlarge",
          "ml.t3.medium",
          "ml.t3.large",
          "ml.t3.xlarge",
          "ml.t3.2xlarge",
          "ml.m4.xlarge",
          "ml.m4.2xlarge",
          "ml.m4.4xlarge",
          "ml.m4.10xlarge",
          "ml.m4.16xlarge",
          "ml.m5.xlarge",
          "ml.m5.2xlarge",
          "ml.m5.4xlarge",
          "ml.m5.12xlarge",
          "ml.m5.24xlarge",
          "ml.m5d.large",
          "ml.m5d.xlarge",
          "ml.m5d.2xlarge",
          "ml.m5d.4xlarge",
          "ml.m5d.8xlarge",
          "ml.m5d.12xlarge",
          "ml.m5d.16xlarge",
          "ml.m5d.24xlarge",
          "ml.c4.xlarge",
          "ml.c4.2xlarge",
          "ml.c4.4xlarge",
          "ml.c4.8xlarge",
          "ml.c5.xlarge",
          "ml.c5.2xlarge",
          "ml.c5.4xlarge",
          "ml.c5.9xlarge",
          "ml.c5.18xlarge",
          "ml.c5d.xlarge",
          "ml.c5d.2xlarge",
          "ml.c5d.4xlarge",
          "ml.c5d.9xlarge",
          "ml.c5d.18xlarge",
          "ml.p2.xlarge",
          "ml.p2.8xlarge",
          "ml.p2.16xlarge",
          "ml.p3.2xlarge",
          "ml.p3.8xlarge",
          "ml.p3.16xlarge",
          "ml.p3dn.24xlarge",
          "ml.g4dn.xlarge",
          "ml.g4dn.2xlarge",
          "ml.g4dn.4xlarge",
          "ml.g4dn.8xlarge",
          "ml.g4dn.12xlarge",
          "ml.g4dn.16xlarge",
          "ml.r5.large",
          "ml.r5.xlarge",
          "ml.r5.2xlarge",
          "ml.r5.4xlarge",
          "ml.r5.8xlarge",
          "ml.r5.12xlarge",
          "ml.r5.16xlarge",
          "ml.r5.24xlarge",
          "ml.g5.xlarge",
          "ml.g5.2xlarge",
          "ml.g5.4xlarge",
          "ml.g5.8xlarge",
          "ml.g5.16xlarge",
          "ml.g5.12xlarge",
          "ml.g5.24xlarge",
          "ml.g5.48xlarge",
          "ml.inf1.xlarge",
          "ml.inf1.2xlarge",
          "ml.inf1.6xlarge",
          "ml.inf1.24xlarge",
          "ml.p4d.24xlarge",
          "ml.p4de.24xlarge"
        ]
      },
      "TaskCount": {
        "type": "integer",
        "minimum": 0
      },
      "InferenceExperimentStopDesiredState": {
        "type": "string",
        "enum": [
          "Completed",
          "Cancelled"
        ]
      },
      "InferenceExperimentStatusReason": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 1024
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.StopInferenceExperiment"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**InferenceExperimentArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
