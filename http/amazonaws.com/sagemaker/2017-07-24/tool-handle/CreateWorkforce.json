{
  "name": "CreateWorkforce",
  "description": "<p>Use this operation to create a workforce. This operation will return an error if a workforce already exists in the Amazon Web Services Region that you specify. You can only create one workforce in each Amazon Web Services Region per Amazon Web Services account.</p> <p>If you want to create a new workforce in an Amazon Web Services Region where a workforce already exists, use the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteWorkforce.html\">DeleteWorkforce</a> API operation to delete the existing workforce and then use <code>CreateWorkforce</code> to create a new workforce.</p> <p>To create a private workforce using Amazon Cognito, you must specify a Cognito user pool in <code>CognitoConfig</code>. You can also create an Amazon Cognito workforce using the Amazon SageMaker console. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html\"> Create a Private Workforce (Amazon Cognito)</a>.</p> <p>To create a private workforce using your own OIDC Identity Provider (IdP), specify your IdP configuration in <code>OidcConfig</code>. Your OIDC IdP must support <i>groups</i> because groups are used by Ground Truth and Amazon A2I to create work teams. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private-oidc.html\"> Create a Private Workforce (OIDC IdP)</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateWorkforce"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateWorkforceRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateWorkforceRequest": {
        "type": "object",
        "required": [
          "WorkforceName"
        ],
        "title": "CreateWorkforceRequest",
        "properties": {
          "CognitoConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/CognitoConfig"
              },
              {
                "description": "<p>Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html\"> Amazon Cognito user pool</a>.</p> <p>Do not use <code>OidcConfig</code> if you specify values for <code>CognitoConfig</code>.</p>"
              }
            ]
          },
          "OidcConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcConfig"
              },
              {
                "description": "<p>Use this parameter to configure a private workforce using your own OIDC Identity Provider.</p> <p>Do not use <code>CognitoConfig</code> if you specify values for <code>OidcConfig</code>.</p>"
              }
            ]
          },
          "SourceIpConfig": {
            "$ref": "#/$defs/SourceIpConfig"
          },
          "WorkforceName": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkforceName"
              },
              {
                "description": "The name of the private workforce."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "An array of key-value pairs that contain metadata to help you categorize and organize our workforce. Each tag consists of a key and a value, both of which you define."
              }
            ]
          },
          "WorkforceVpcConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkforceVpcConfigRequest"
              },
              {
                "description": "Use this parameter to configure a workforce using VPC."
              }
            ]
          }
        }
      },
      "CognitoConfig": {
        "type": "object",
        "required": [
          "UserPool",
          "ClientId"
        ],
        "properties": {
          "UserPool": {
            "allOf": [
              {
                "$ref": "#/$defs/CognitoUserPool"
              },
              {
                "description": "A <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html\"> user pool</a> is a user directory in Amazon Cognito. With a user pool, your users can sign in to your web or mobile app through Amazon Cognito. Your users can also sign in through social identity providers like Google, Facebook, Amazon, or Apple, and through SAML identity providers."
              }
            ]
          },
          "ClientId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientId"
              },
              {
                "description": "The client ID for your Amazon Cognito user pool."
              }
            ]
          }
        },
        "description": "Use this parameter to configure your Amazon Cognito workforce. A single Cognito workforce is created using and corresponds to a single <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html\"> Amazon Cognito user pool</a>."
      },
      "CognitoUserPool": {
        "type": "string",
        "pattern": "[\\w-]+_[0-9a-zA-Z]+",
        "minLength": 1,
        "maxLength": 55
      },
      "ClientId": {
        "type": "string",
        "pattern": "[ -~]+",
        "minLength": 1,
        "maxLength": 1024
      },
      "OidcConfig": {
        "type": "object",
        "required": [
          "ClientId",
          "ClientSecret",
          "Issuer",
          "AuthorizationEndpoint",
          "TokenEndpoint",
          "UserInfoEndpoint",
          "LogoutEndpoint",
          "JwksUri"
        ],
        "properties": {
          "ClientId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientId"
              },
              {
                "description": "The OIDC IdP client ID used to configure your private workforce."
              }
            ]
          },
          "ClientSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientSecret"
              },
              {
                "description": "The OIDC IdP client secret used to configure your private workforce."
              }
            ]
          },
          "Issuer": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP issuer used to configure your private workforce."
              }
            ]
          },
          "AuthorizationEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP authorization endpoint used to configure your private workforce."
              }
            ]
          },
          "TokenEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP token endpoint used to configure your private workforce."
              }
            ]
          },
          "UserInfoEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP user information endpoint used to configure your private workforce."
              }
            ]
          },
          "LogoutEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP logout endpoint used to configure your private workforce."
              }
            ]
          },
          "JwksUri": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce."
              }
            ]
          }
        },
        "description": "Use this parameter to configure your OIDC Identity Provider (IdP)."
      },
      "ClientSecret": {
        "type": "string",
        "pattern": "[ -~]+",
        "minLength": 1,
        "maxLength": 1024,
        "format": "password"
      },
      "OidcEndpoint": {
        "type": "string",
        "pattern": "https://\\S+",
        "maxLength": 500
      },
      "SourceIpConfig": {
        "type": "object",
        "required": [
          "Cidrs"
        ],
        "properties": {
          "Cidrs": {
            "allOf": [
              {
                "$ref": "#/$defs/Cidrs"
              },
              {
                "description": "<p>A list of one to ten <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html\">Classless Inter-Domain Routing</a> (CIDR) values.</p> <p>Maximum: Ten CIDR values</p> <note> <p>The following Length Constraints apply to individual CIDR values in the CIDR value list.</p> </note>"
              }
            ]
          }
        },
        "description": "A list of IP address ranges (<a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html\">CIDRs</a>). Used to create an allow list of IP addresses for a private workforce. Workers will only be able to login to their worker portal from an IP address within this range. By default, a workforce isn't restricted to specific IP addresses."
      },
      "Cidrs": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Cidr"
        }
      },
      "Cidr": {
        "type": "string",
        "pattern": "(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))$)|(^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\\/(12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9]))$)",
        "minLength": 4,
        "maxLength": 64
      },
      "WorkforceName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9\\-]){0,62}$",
        "minLength": 1,
        "maxLength": 63
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      },
      "WorkforceVpcConfigRequest": {
        "type": "object",
        "properties": {
          "VpcId": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkforceVpcId"
              },
              {
                "description": "The ID of the VPC that the workforce uses for communication."
              }
            ]
          },
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkforceSecurityGroupIds"
              },
              {
                "description": "The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet."
              }
            ]
          },
          "Subnets": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkforceSubnets"
              },
              {
                "description": "The ID of the subnets in the VPC that you want to connect."
              }
            ]
          }
        },
        "description": "The VPC object you use to create or update a workforce."
      },
      "WorkforceVpcId": {
        "type": "string",
        "pattern": "^vpc-[0-9a-z]*$",
        "maxLength": 32
      },
      "WorkforceSecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/WorkforceSecurityGroupId"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "WorkforceSecurityGroupId": {
        "type": "string",
        "pattern": "^sg-[0-9a-z]*$",
        "maxLength": 32
      },
      "WorkforceSubnets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/WorkforceSubnetId"
        },
        "minItems": 1,
        "maxItems": 16
      },
      "WorkforceSubnetId": {
        "type": "string",
        "pattern": "^subnet-[0-9a-z]*$",
        "maxLength": 32
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateWorkforce"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**WorkforceArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
