{
  "name": "CreateHub",
  "description": "<p>Create a hub.</p> <note> <p>Hub APIs are only callable through SageMaker Studio.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateHub"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateHubRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateHubRequest": {
        "type": "object",
        "required": [
          "HubName",
          "HubDescription"
        ],
        "title": "CreateHubRequest",
        "properties": {
          "HubName": {
            "allOf": [
              {
                "$ref": "#/$defs/HubName"
              },
              {
                "description": "The name of the hub to create."
              }
            ]
          },
          "HubDescription": {
            "allOf": [
              {
                "$ref": "#/$defs/HubDescription"
              },
              {
                "description": "A description of the hub."
              }
            ]
          },
          "HubDisplayName": {
            "allOf": [
              {
                "$ref": "#/$defs/HubDisplayName"
              },
              {
                "description": "The display name of the hub."
              }
            ]
          },
          "HubSearchKeywords": {
            "allOf": [
              {
                "$ref": "#/$defs/HubSearchKeywordList"
              },
              {
                "description": "The searchable keywords for the hub."
              }
            ]
          },
          "S3StorageConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/HubS3StorageConfig"
              },
              {
                "description": "The Amazon S3 storage configuration for the hub."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "Any tags to associate with the hub."
              }
            ]
          }
        }
      },
      "HubName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "HubDescription": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 1023
      },
      "HubDisplayName": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 255
      },
      "HubSearchKeywordList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/HubSearchKeyword"
        },
        "maxItems": 50
      },
      "HubSearchKeyword": {
        "type": "string",
        "pattern": "^[^A-Z]*$",
        "maxLength": 255
      },
      "HubS3StorageConfig": {
        "type": "object",
        "properties": {
          "S3OutputPath": {
            "allOf": [
              {
                "$ref": "#/$defs/S3OutputPath"
              },
              {
                "description": "The Amazon S3 bucket prefix for hosting hub content."
              }
            ]
          }
        },
        "description": "The Amazon S3 storage configuration of a hub."
      },
      "S3OutputPath": {
        "type": "string",
        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "maxLength": 1024
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateHub"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**HubArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
