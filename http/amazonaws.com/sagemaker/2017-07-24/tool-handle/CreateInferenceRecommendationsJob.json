{
  "name": "CreateInferenceRecommendationsJob",
  "description": "Starts a recommendation job. You can create either an instance recommendation or load test job.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateInferenceRecommendationsJob"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateInferenceRecommendationsJobRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateInferenceRecommendationsJobRequest": {
        "type": "object",
        "required": [
          "JobName",
          "JobType",
          "RoleArn",
          "InputConfig"
        ],
        "title": "CreateInferenceRecommendationsJobRequest",
        "properties": {
          "JobName": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobName"
              },
              {
                "description": "A name for the recommendation job. The name must be unique within the Amazon Web Services Region and within your Amazon Web Services account. The job name is passed down to the resources created by the recommendation job. The names of resources (such as the model, endpoint configuration, endpoint, and compilation) that are prefixed with the job name are truncated at 40 characters."
              }
            ]
          },
          "JobType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobType"
              },
              {
                "description": "Defines the type of recommendation job. Specify <code>Default</code> to initiate an instance recommendation and <code>Advanced</code> to initiate a load test. If left unspecified, Amazon SageMaker Inference Recommender will run an instance recommendation (<code>DEFAULT</code>) job."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf."
              }
            ]
          },
          "InputConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobInputConfig"
              },
              {
                "description": "Provides information about the versioned model package Amazon Resource Name (ARN), the traffic pattern, and endpoint configurations."
              }
            ]
          },
          "JobDescription": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobDescription"
              },
              {
                "description": "Description of the recommendation job."
              }
            ]
          },
          "StoppingConditions": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobStoppingConditions"
              },
              {
                "description": "A set of conditions for stopping a recommendation job. If any of the conditions are met, the job is automatically stopped."
              }
            ]
          },
          "OutputConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobOutputConfig"
              },
              {
                "description": "Provides information about the output artifacts and the KMS key to use for Amazon S3 server-side encryption."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "The metadata that you apply to Amazon Web Services resources to help you categorize and organize them. Each tag consists of a key and a value, both of which you define. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services Resources</a> in the Amazon Web Services General Reference."
              }
            ]
          }
        }
      },
      "RecommendationJobName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}",
        "minLength": 1,
        "maxLength": 64
      },
      "RecommendationJobType": {
        "type": "string",
        "enum": [
          "Default",
          "Advanced"
        ]
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
        "minLength": 20,
        "maxLength": 2048
      },
      "RecommendationJobInputConfig": {
        "type": "object",
        "properties": {
          "ModelPackageVersionArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelPackageArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of a versioned model package."
              }
            ]
          },
          "JobDurationInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/JobDurationInSeconds"
              },
              {
                "description": "Specifies the maximum duration of the job, in seconds. The maximum value is 7200."
              }
            ]
          },
          "TrafficPattern": {
            "allOf": [
              {
                "$ref": "#/$defs/TrafficPattern"
              },
              {
                "description": "Specifies the traffic pattern of the job."
              }
            ]
          },
          "ResourceLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobResourceLimit"
              },
              {
                "description": "Defines the resource limit of the job."
              }
            ]
          },
          "EndpointConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointInputConfigurations"
              },
              {
                "description": "Specifies the endpoint configuration to use for a job."
              }
            ]
          },
          "VolumeKmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "<p>The Amazon Resource Name (ARN) of a Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint. This key will be passed to SageMaker Hosting for endpoint creation. </p> <p>The SageMaker execution role must have <code>kms:CreateGrant</code> permission in order to encrypt data on the storage volume of the endpoints created for inference recommendation. The inference recommendation job will fail asynchronously during endpoint configuration creation if the role passed does not have <code>kms:CreateGrant</code> permission.</p> <p>The <code>KmsKeyId</code> can be any of the following formats:</p> <ul> <li> <p>// KMS Key ID</p> <p> <code>\"1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>\"arn:aws:kms:&lt;region&gt;:&lt;account&gt;:key/&lt;key-id-12ab-34cd-56ef-1234567890ab&gt;\"</code> </p> </li> <li> <p>// KMS Key Alias</p> <p> <code>\"alias/ExampleAlias\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key Alias</p> <p> <code>\"arn:aws:kms:&lt;region&gt;:&lt;account&gt;:alias/&lt;ExampleAlias&gt;\"</code> </p> </li> </ul> <p>For more information about key identifiers, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-id\">Key identifiers (KeyID)</a> in the Amazon Web Services Key Management Service (Amazon Web Services KMS) documentation.</p>"
              }
            ]
          },
          "ContainerConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobContainerConfig"
              },
              {
                "description": "Specifies mandatory fields for running an Inference Recommender job. The fields specified in <code>ContainerConfig</code> override the corresponding fields in the model package."
              }
            ]
          },
          "Endpoints": {
            "allOf": [
              {
                "$ref": "#/$defs/Endpoints"
              },
              {
                "description": "Existing customer endpoints on which to run an Inference Recommender job."
              }
            ]
          },
          "VpcConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobVpcConfig"
              },
              {
                "description": "Inference Recommender provisions SageMaker endpoints with access to VPC in the inference recommendation job."
              }
            ]
          },
          "ModelName": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelName"
              },
              {
                "description": "The name of the created model."
              }
            ]
          }
        },
        "description": "The input configuration of the recommendation job."
      },
      "ModelPackageArn": {
        "type": "string",
        "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:model-package/.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "JobDurationInSeconds": {
        "type": "integer",
        "minimum": 1
      },
      "TrafficPattern": {
        "type": "object",
        "properties": {
          "TrafficType": {
            "allOf": [
              {
                "$ref": "#/$defs/TrafficType"
              },
              {
                "description": "Defines the traffic patterns. Choose either <code>PHASES</code> or <code>STAIRS</code>."
              }
            ]
          },
          "Phases": {
            "allOf": [
              {
                "$ref": "#/$defs/Phases"
              },
              {
                "description": "Defines the phases traffic specification."
              }
            ]
          },
          "Stairs": {
            "allOf": [
              {
                "$ref": "#/$defs/Stairs"
              },
              {
                "description": "Defines the stairs traffic pattern."
              }
            ]
          }
        },
        "description": "Defines the traffic pattern of the load test."
      },
      "TrafficType": {
        "type": "string",
        "enum": [
          "PHASES",
          "STAIRS"
        ]
      },
      "Phases": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Phase"
        },
        "minItems": 1
      },
      "Phase": {
        "type": "object",
        "properties": {
          "InitialNumberOfUsers": {
            "allOf": [
              {
                "$ref": "#/$defs/InitialNumberOfUsers"
              },
              {
                "description": "Specifies how many concurrent users to start with. The value should be between 1 and 3."
              }
            ]
          },
          "SpawnRate": {
            "allOf": [
              {
                "$ref": "#/$defs/SpawnRate"
              },
              {
                "description": "Specified how many new users to spawn in a minute."
              }
            ]
          },
          "DurationInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/TrafficDurationInSeconds"
              },
              {
                "description": "Specifies how long a traffic phase should be. For custom load tests, the value should be between 120 and 3600. This value should not exceed <code>JobDurationInSeconds</code>."
              }
            ]
          }
        },
        "description": "Defines the traffic pattern."
      },
      "InitialNumberOfUsers": {
        "type": "integer",
        "minimum": 1
      },
      "SpawnRate": {
        "type": "integer",
        "minimum": 0
      },
      "TrafficDurationInSeconds": {
        "type": "integer",
        "minimum": 1
      },
      "Stairs": {
        "type": "object",
        "properties": {
          "DurationInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/TrafficDurationInSeconds"
              },
              {
                "description": "Defines how long each traffic step should be."
              }
            ]
          },
          "NumberOfSteps": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberOfSteps"
              },
              {
                "description": "Specifies how many steps to perform during traffic."
              }
            ]
          },
          "UsersPerStep": {
            "allOf": [
              {
                "$ref": "#/$defs/UsersPerStep"
              },
              {
                "description": "Specifies how many new users to spawn in each step."
              }
            ]
          }
        },
        "description": "<p>Defines the stairs traffic pattern for an Inference Recommender load test. This pattern type consists of multiple steps where the number of users increases at each step.</p> <p>Specify either the stairs or phases traffic pattern.</p>"
      },
      "NumberOfSteps": {
        "type": "integer",
        "minimum": 1
      },
      "UsersPerStep": {
        "type": "integer",
        "minimum": 1,
        "maximum": 3
      },
      "RecommendationJobResourceLimit": {
        "type": "object",
        "properties": {
          "MaxNumberOfTests": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxNumberOfTests"
              },
              {
                "description": "Defines the maximum number of load tests."
              }
            ]
          },
          "MaxParallelOfTests": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxParallelOfTests"
              },
              {
                "description": "Defines the maximum number of parallel load tests."
              }
            ]
          }
        },
        "description": "Specifies the maximum number of jobs that can run in parallel and the maximum number of jobs that can run."
      },
      "MaxNumberOfTests": {
        "type": "integer",
        "minimum": 1
      },
      "MaxParallelOfTests": {
        "type": "integer",
        "minimum": 1
      },
      "EndpointInputConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EndpointInputConfiguration"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "EndpointInputConfiguration": {
        "type": "object",
        "properties": {
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProductionVariantInstanceType"
              },
              {
                "description": "The instance types to use for the load test."
              }
            ]
          },
          "InferenceSpecificationName": {
            "allOf": [
              {
                "$ref": "#/$defs/InferenceSpecificationName"
              },
              {
                "description": "The inference specification name in the model package version."
              }
            ]
          },
          "EnvironmentParameterRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/EnvironmentParameterRanges"
              },
              {
                "description": " The parameter you want to benchmark against."
              }
            ]
          },
          "ServerlessConfig": {
            "$ref": "#/$defs/ProductionVariantServerlessConfig"
          }
        },
        "description": "The endpoint configuration for the load test."
      },
      "ProductionVariantInstanceType": {
        "type": "string",
        "enum": [
          "ml.t2.medium",
          "ml.t2.large",
          "ml.t2.xlarge",
          "ml.t2.2xlarge",
          "ml.m4.xlarge",
          "ml.m4.2xlarge",
          "ml.m4.4xlarge",
          "ml.m4.10xlarge",
          "ml.m4.16xlarge",
          "ml.m5.large",
          "ml.m5.xlarge",
          "ml.m5.2xlarge",
          "ml.m5.4xlarge",
          "ml.m5.12xlarge",
          "ml.m5.24xlarge",
          "ml.m5d.large",
          "ml.m5d.xlarge",
          "ml.m5d.2xlarge",
          "ml.m5d.4xlarge",
          "ml.m5d.12xlarge",
          "ml.m5d.24xlarge",
          "ml.c4.large",
          "ml.c4.xlarge",
          "ml.c4.2xlarge",
          "ml.c4.4xlarge",
          "ml.c4.8xlarge",
          "ml.p2.xlarge",
          "ml.p2.8xlarge",
          "ml.p2.16xlarge",
          "ml.p3.2xlarge",
          "ml.p3.8xlarge",
          "ml.p3.16xlarge",
          "ml.c5.large",
          "ml.c5.xlarge",
          "ml.c5.2xlarge",
          "ml.c5.4xlarge",
          "ml.c5.9xlarge",
          "ml.c5.18xlarge",
          "ml.c5d.large",
          "ml.c5d.xlarge",
          "ml.c5d.2xlarge",
          "ml.c5d.4xlarge",
          "ml.c5d.9xlarge",
          "ml.c5d.18xlarge",
          "ml.g4dn.xlarge",
          "ml.g4dn.2xlarge",
          "ml.g4dn.4xlarge",
          "ml.g4dn.8xlarge",
          "ml.g4dn.12xlarge",
          "ml.g4dn.16xlarge",
          "ml.r5.large",
          "ml.r5.xlarge",
          "ml.r5.2xlarge",
          "ml.r5.4xlarge",
          "ml.r5.12xlarge",
          "ml.r5.24xlarge",
          "ml.r5d.large",
          "ml.r5d.xlarge",
          "ml.r5d.2xlarge",
          "ml.r5d.4xlarge",
          "ml.r5d.12xlarge",
          "ml.r5d.24xlarge",
          "ml.inf1.xlarge",
          "ml.inf1.2xlarge",
          "ml.inf1.6xlarge",
          "ml.inf1.24xlarge",
          "ml.c6i.large",
          "ml.c6i.xlarge",
          "ml.c6i.2xlarge",
          "ml.c6i.4xlarge",
          "ml.c6i.8xlarge",
          "ml.c6i.12xlarge",
          "ml.c6i.16xlarge",
          "ml.c6i.24xlarge",
          "ml.c6i.32xlarge",
          "ml.g5.xlarge",
          "ml.g5.2xlarge",
          "ml.g5.4xlarge",
          "ml.g5.8xlarge",
          "ml.g5.12xlarge",
          "ml.g5.16xlarge",
          "ml.g5.24xlarge",
          "ml.g5.48xlarge",
          "ml.p4d.24xlarge",
          "ml.c7g.large",
          "ml.c7g.xlarge",
          "ml.c7g.2xlarge",
          "ml.c7g.4xlarge",
          "ml.c7g.8xlarge",
          "ml.c7g.12xlarge",
          "ml.c7g.16xlarge",
          "ml.m6g.large",
          "ml.m6g.xlarge",
          "ml.m6g.2xlarge",
          "ml.m6g.4xlarge",
          "ml.m6g.8xlarge",
          "ml.m6g.12xlarge",
          "ml.m6g.16xlarge",
          "ml.m6gd.large",
          "ml.m6gd.xlarge",
          "ml.m6gd.2xlarge",
          "ml.m6gd.4xlarge",
          "ml.m6gd.8xlarge",
          "ml.m6gd.12xlarge",
          "ml.m6gd.16xlarge",
          "ml.c6g.large",
          "ml.c6g.xlarge",
          "ml.c6g.2xlarge",
          "ml.c6g.4xlarge",
          "ml.c6g.8xlarge",
          "ml.c6g.12xlarge",
          "ml.c6g.16xlarge",
          "ml.c6gd.large",
          "ml.c6gd.xlarge",
          "ml.c6gd.2xlarge",
          "ml.c6gd.4xlarge",
          "ml.c6gd.8xlarge",
          "ml.c6gd.12xlarge",
          "ml.c6gd.16xlarge",
          "ml.c6gn.large",
          "ml.c6gn.xlarge",
          "ml.c6gn.2xlarge",
          "ml.c6gn.4xlarge",
          "ml.c6gn.8xlarge",
          "ml.c6gn.12xlarge",
          "ml.c6gn.16xlarge",
          "ml.r6g.large",
          "ml.r6g.xlarge",
          "ml.r6g.2xlarge",
          "ml.r6g.4xlarge",
          "ml.r6g.8xlarge",
          "ml.r6g.12xlarge",
          "ml.r6g.16xlarge",
          "ml.r6gd.large",
          "ml.r6gd.xlarge",
          "ml.r6gd.2xlarge",
          "ml.r6gd.4xlarge",
          "ml.r6gd.8xlarge",
          "ml.r6gd.12xlarge",
          "ml.r6gd.16xlarge",
          "ml.p4de.24xlarge",
          "ml.trn1.2xlarge",
          "ml.trn1.32xlarge",
          "ml.inf2.xlarge",
          "ml.inf2.8xlarge",
          "ml.inf2.24xlarge",
          "ml.inf2.48xlarge"
        ]
      },
      "InferenceSpecificationName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$",
        "minLength": 1,
        "maxLength": 63
      },
      "EnvironmentParameterRanges": {
        "type": "object",
        "properties": {
          "CategoricalParameterRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoricalParameters"
              },
              {
                "description": "Specified a list of parameters for each category."
              }
            ]
          }
        },
        "description": "Specifies the range of environment parameters"
      },
      "CategoricalParameters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CategoricalParameter"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "CategoricalParameter": {
        "type": "object",
        "required": [
          "Name",
          "Value"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String64"
              },
              {
                "description": "The Name of the environment variable."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoricalParameterRangeValues"
              },
              {
                "description": "The list of values you can pass."
              }
            ]
          }
        },
        "description": "Environment parameters you want to benchmark your load test against."
      },
      "String64": {
        "type": "string",
        "maxLength": 64
      },
      "CategoricalParameterRangeValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String128"
        },
        "minItems": 1,
        "maxItems": 3
      },
      "String128": {
        "type": "string",
        "maxLength": 128
      },
      "ProductionVariantServerlessConfig": {
        "type": "object",
        "required": [
          "MemorySizeInMB",
          "MaxConcurrency"
        ],
        "properties": {
          "MemorySizeInMB": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerlessMemorySizeInMB"
              },
              {
                "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB."
              }
            ]
          },
          "MaxConcurrency": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerlessMaxConcurrency"
              },
              {
                "description": "The maximum number of concurrent invocations your serverless endpoint can process."
              }
            ]
          },
          "ProvisionedConcurrency": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerlessProvisionedConcurrency"
              },
              {
                "description": "<p>The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to <code>MaxConcurrency</code>.</p> <note> <p>This field is not supported for serverless endpoint recommendations for Inference Recommender jobs. For more information about creating an Inference Recommender job, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateInferenceRecommendationsJob.html\">CreateInferenceRecommendationsJobs</a>.</p> </note>"
              }
            ]
          }
        },
        "description": "Specifies the serverless configuration for an endpoint variant."
      },
      "ServerlessMemorySizeInMB": {
        "type": "integer",
        "minimum": 1024,
        "maximum": 6144
      },
      "ServerlessMaxConcurrency": {
        "type": "integer",
        "minimum": 1,
        "maximum": 200
      },
      "ServerlessProvisionedConcurrency": {
        "type": "integer",
        "minimum": 1,
        "maximum": 200
      },
      "KmsKeyId": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 2048
      },
      "RecommendationJobContainerConfig": {
        "type": "object",
        "properties": {
          "Domain": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The machine learning domain of the model and its components.</p> <p>Valid Values: <code>COMPUTER_VISION | NATURAL_LANGUAGE_PROCESSING | MACHINE_LEARNING</code> </p>"
              }
            ]
          },
          "Task": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The machine learning task that the model accomplishes.</p> <p>Valid Values: <code>IMAGE_CLASSIFICATION | OBJECT_DETECTION | TEXT_GENERATION | IMAGE_SEGMENTATION | FILL_MASK | CLASSIFICATION | REGRESSION | OTHER</code> </p>"
              }
            ]
          },
          "Framework": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The machine learning framework of the container image.</p> <p>Valid Values: <code>TENSORFLOW | PYTORCH | XGBOOST | SAGEMAKER-SCIKIT-LEARN</code> </p>"
              }
            ]
          },
          "FrameworkVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The framework version of the container image."
              }
            ]
          },
          "PayloadConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobPayloadConfig"
              },
              {
                "description": "Specifies the <code>SamplePayloadUrl</code> and all other sample payload-related fields."
              }
            ]
          },
          "NearestModelName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The name of a pre-trained machine learning model benchmarked by Amazon SageMaker Inference Recommender that matches your model.</p> <p>Valid Values: <code>efficientnetb7 | unet | xgboost | faster-rcnn-resnet101 | nasnetlarge | vgg16 | inception-v3 | mask-rcnn | sagemaker-scikit-learn | densenet201-gluon | resnet18v2-gluon | xception | densenet201 | yolov4 | resnet152 | bert-base-cased | xceptionV1-keras | resnet50 | retinanet</code> </p>"
              }
            ]
          },
          "SupportedInstanceTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobSupportedInstanceTypes"
              },
              {
                "description": "A list of the instance types that are used to generate inferences in real-time."
              }
            ]
          },
          "DataInputConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobDataInputConfig"
              },
              {
                "description": "Specifies the name and shape of the expected data inputs for your trained model with a JSON dictionary form. This field is used for optimizing your model using SageMaker Neo. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_InputConfig.html#sagemaker-Type-InputConfig-DataInputConfig\">DataInputConfig</a>."
              }
            ]
          },
          "SupportedEndpointType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobSupportedEndpointType"
              },
              {
                "description": "The endpoint type to receive recommendations for. By default this is null, and the results of the inference recommendation job return a combined list of both real-time and serverless benchmarks. By specifying a value for this field, you can receive a longer list of benchmarks for the desired endpoint type."
              }
            ]
          }
        },
        "description": "Specifies mandatory fields for running an Inference Recommender job directly in the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateInferenceRecommendationsJob.html\">CreateInferenceRecommendationsJob</a> API. The fields specified in <code>ContainerConfig</code> override the corresponding fields in the model package. Use <code>ContainerConfig</code> if you want to specify these fields for the recommendation job but don't want to edit them in your model package."
      },
      "String": {
        "type": "string"
      },
      "RecommendationJobPayloadConfig": {
        "type": "object",
        "properties": {
          "SamplePayloadUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Amazon Simple Storage Service (Amazon S3) path where the sample payload is stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix)."
              }
            ]
          },
          "SupportedContentTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobSupportedContentTypes"
              },
              {
                "description": "The supported MIME types for the input data."
              }
            ]
          }
        },
        "description": "The configuration for the payload for a recommendation job."
      },
      "RecommendationJobSupportedContentTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "RecommendationJobSupportedInstanceTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "RecommendationJobDataInputConfig": {
        "type": "string",
        "pattern": "[\\S\\s]+",
        "minLength": 1,
        "maxLength": 1024
      },
      "RecommendationJobSupportedEndpointType": {
        "type": "string",
        "enum": [
          "RealTime",
          "Serverless"
        ]
      },
      "Endpoints": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EndpointInfo"
        },
        "maxItems": 1
      },
      "EndpointInfo": {
        "type": "object",
        "required": [
          "EndpointName"
        ],
        "properties": {
          "EndpointName": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointName"
              },
              {
                "description": "The name of a customer's endpoint."
              }
            ]
          }
        },
        "description": "Details about a customer endpoint that was compared in an Inference Recommender job."
      },
      "EndpointName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "RecommendationJobVpcConfig": {
        "type": "object",
        "required": [
          "SecurityGroupIds",
          "Subnets"
        ],
        "properties": {
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobVpcSecurityGroupIds"
              },
              {
                "description": "The VPC security group IDs. IDs have the form of <code>sg-xxxxxxxx</code>. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field."
              }
            ]
          },
          "Subnets": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobVpcSubnets"
              },
              {
                "description": "The ID of the subnets in the VPC to which you want to connect your model."
              }
            ]
          }
        },
        "description": "Inference Recommender provisions SageMaker endpoints with access to VPC in the inference recommendation job."
      },
      "RecommendationJobVpcSecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RecommendationJobVpcSecurityGroupId"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "RecommendationJobVpcSecurityGroupId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "RecommendationJobVpcSubnets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RecommendationJobVpcSubnetId"
        },
        "minItems": 1,
        "maxItems": 16
      },
      "RecommendationJobVpcSubnetId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "ModelName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "maxLength": 63
      },
      "RecommendationJobDescription": {
        "type": "string",
        "maxLength": 128
      },
      "RecommendationJobStoppingConditions": {
        "type": "object",
        "properties": {
          "MaxInvocations": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum number of requests per minute expected for the endpoint."
              }
            ]
          },
          "ModelLatencyThresholds": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelLatencyThresholds"
              },
              {
                "description": "The interval of time taken by a model to respond as viewed from SageMaker. The interval includes the local communication time taken to send the request and to fetch the response from the container of a model and the time taken to complete the inference in the container."
              }
            ]
          },
          "FlatInvocations": {
            "allOf": [
              {
                "$ref": "#/$defs/FlatInvocations"
              },
              {
                "description": "Stops a load test when the number of invocations (TPS) peaks and flattens, which means that the instance has reached capacity. The default value is <code>Stop</code>. If you want the load test to continue after invocations have flattened, set the value to <code>Continue</code>."
              }
            ]
          }
        },
        "description": "Specifies conditions for stopping a job. When a job reaches a stopping condition limit, SageMaker ends the job."
      },
      "Integer": {
        "type": "integer"
      },
      "ModelLatencyThresholds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ModelLatencyThreshold"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "ModelLatencyThreshold": {
        "type": "object",
        "properties": {
          "Percentile": {
            "allOf": [
              {
                "$ref": "#/$defs/String64"
              },
              {
                "description": "The model latency percentile threshold. For custom load tests, specify the value as <code>P95</code>."
              }
            ]
          },
          "ValueInMilliseconds": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The model latency percentile value in milliseconds."
              }
            ]
          }
        },
        "description": "The model latency threshold."
      },
      "FlatInvocations": {
        "type": "string",
        "enum": [
          "Continue",
          "Stop"
        ]
      },
      "RecommendationJobOutputConfig": {
        "type": "object",
        "properties": {
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "<p>The Amazon Resource Name (ARN) of a Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt your output artifacts with Amazon S3 server-side encryption. The SageMaker execution role must have <code>kms:GenerateDataKey</code> permission.</p> <p>The <code>KmsKeyId</code> can be any of the following formats:</p> <ul> <li> <p>// KMS Key ID</p> <p> <code>\"1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>\"arn:aws:kms:&lt;region&gt;:&lt;account&gt;:key/&lt;key-id-12ab-34cd-56ef-1234567890ab&gt;\"</code> </p> </li> <li> <p>// KMS Key Alias</p> <p> <code>\"alias/ExampleAlias\"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key Alias</p> <p> <code>\"arn:aws:kms:&lt;region&gt;:&lt;account&gt;:alias/&lt;ExampleAlias&gt;\"</code> </p> </li> </ul> <p>For more information about key identifiers, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-id\">Key identifiers (KeyID)</a> in the Amazon Web Services Key Management Service (Amazon Web Services KMS) documentation.</p>"
              }
            ]
          },
          "CompiledOutputConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommendationJobCompiledOutputConfig"
              },
              {
                "description": "Provides information about the output configuration for the compiled model."
              }
            ]
          }
        },
        "description": "Provides information about the output configuration for the compiled model."
      },
      "RecommendationJobCompiledOutputConfig": {
        "type": "object",
        "properties": {
          "S3OutputUri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "Identifies the Amazon S3 bucket where you want SageMaker to store the compiled model artifacts."
              }
            ]
          }
        },
        "description": "Provides information about the output configuration for the compiled model."
      },
      "S3Uri": {
        "type": "string",
        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "maxLength": 1024
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateInferenceRecommendationsJob"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**JobArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
