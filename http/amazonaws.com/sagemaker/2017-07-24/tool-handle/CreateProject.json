{
  "name": "CreateProject",
  "description": "Creates a machine learning (ML) project that can contain one or more templates that set up an ML pipeline from training to deploying an approved model.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateProject"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateProjectInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateProjectInput": {
        "type": "object",
        "required": [
          "ProjectName",
          "ServiceCatalogProvisioningDetails"
        ],
        "title": "CreateProjectInput",
        "properties": {
          "ProjectName": {
            "allOf": [
              {
                "$ref": "#/$defs/ProjectEntityName"
              },
              {
                "description": "The name of the project."
              }
            ]
          },
          "ProjectDescription": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityDescription"
              },
              {
                "description": "A description for the project."
              }
            ]
          },
          "ServiceCatalogProvisioningDetails": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceCatalogProvisioningDetails"
              },
              {
                "description": "The product ID and provisioning artifact ID to provision a service catalog. The provisioning artifact ID will default to the latest provisioning artifact ID of the product, if you don't provide the provisioning artifact ID. For more information, see <a href=\"https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html\">What is Amazon Web Services Service Catalog</a>."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "An array of key-value pairs that you want to use to organize and track your Amazon Web Services resource costs. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>."
              }
            ]
          }
        }
      },
      "ProjectEntityName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,31}",
        "minLength": 1,
        "maxLength": 32
      },
      "EntityDescription": {
        "type": "string",
        "pattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*",
        "maxLength": 1024
      },
      "ServiceCatalogProvisioningDetails": {
        "type": "object",
        "required": [
          "ProductId"
        ],
        "properties": {
          "ProductId": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceCatalogEntityId"
              },
              {
                "description": "The ID of the product to provision."
              }
            ]
          },
          "ProvisioningArtifactId": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceCatalogEntityId"
              },
              {
                "description": "The ID of the provisioning artifact."
              }
            ]
          },
          "PathId": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceCatalogEntityId"
              },
              {
                "description": "The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. "
              }
            ]
          },
          "ProvisioningParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisioningParameters"
              },
              {
                "description": "A list of key value pairs that you specify when you provision a product."
              }
            ]
          }
        },
        "description": "Details that you specify to provision a service catalog product. For information about service catalog, see <a href=\"https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html\">What is Amazon Web Services Service Catalog</a>."
      },
      "ServiceCatalogEntityId": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-]*",
        "minLength": 1,
        "maxLength": 100
      },
      "ProvisioningParameters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ProvisioningParameter"
        }
      },
      "ProvisioningParameter": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisioningParameterKey"
              },
              {
                "description": "The key that identifies a provisioning parameter."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisioningParameterValue"
              },
              {
                "description": "The value of the provisioning parameter."
              }
            ]
          }
        },
        "description": "A key value pair used when you provision a project as a service catalog product. For information, see <a href=\"https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html\">What is Amazon Web Services Service Catalog</a>."
      },
      "ProvisioningParameterKey": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 1000
      },
      "ProvisioningParameterValue": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 4096
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateProject"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ProjectArn**",
            "**ProjectId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
