{
  "name": "UpdateTrialComponent",
  "description": "Updates one or more properties of a trial component.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.UpdateTrialComponent"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateTrialComponentRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateTrialComponentRequest": {
        "type": "object",
        "required": [
          "TrialComponentName"
        ],
        "title": "UpdateTrialComponentRequest",
        "properties": {
          "TrialComponentName": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentEntityName"
              },
              {
                "description": "The name of the component to update."
              }
            ]
          },
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentEntityName"
              },
              {
                "description": "The name of the component as displayed. The name doesn't need to be unique. If <code>DisplayName</code> isn't specified, <code>TrialComponentName</code> is displayed."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentStatus"
              },
              {
                "description": "The new status of the component."
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "When the component started."
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "When the component ended."
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentParameters"
              },
              {
                "description": "Replaces all of the component's hyperparameters with the specified hyperparameters or add new hyperparameters. Existing hyperparameters are replaced if the trial component is updated with an identical hyperparameter key."
              }
            ]
          },
          "ParametersToRemove": {
            "allOf": [
              {
                "$ref": "#/$defs/ListTrialComponentKey256"
              },
              {
                "description": "The hyperparameters to remove from the component."
              }
            ]
          },
          "InputArtifacts": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentArtifacts"
              },
              {
                "description": "Replaces all of the component's input artifacts with the specified artifacts or adds new input artifacts. Existing input artifacts are replaced if the trial component is updated with an identical input artifact key."
              }
            ]
          },
          "InputArtifactsToRemove": {
            "allOf": [
              {
                "$ref": "#/$defs/ListTrialComponentKey256"
              },
              {
                "description": "The input artifacts to remove from the component."
              }
            ]
          },
          "OutputArtifacts": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentArtifacts"
              },
              {
                "description": "Replaces all of the component's output artifacts with the specified artifacts or adds new output artifacts. Existing output artifacts are replaced if the trial component is updated with an identical output artifact key."
              }
            ]
          },
          "OutputArtifactsToRemove": {
            "allOf": [
              {
                "$ref": "#/$defs/ListTrialComponentKey256"
              },
              {
                "description": "The output artifacts to remove from the component."
              }
            ]
          }
        }
      },
      "ExperimentEntityName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,119}",
        "minLength": 1,
        "maxLength": 120
      },
      "TrialComponentStatus": {
        "type": "object",
        "properties": {
          "PrimaryStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentPrimaryStatus"
              },
              {
                "description": "The status of the trial component."
              }
            ]
          },
          "Message": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentStatusMessage"
              },
              {
                "description": "If the component failed, a message describing why."
              }
            ]
          }
        },
        "description": "The status of the trial component."
      },
      "TrialComponentPrimaryStatus": {
        "type": "string",
        "enum": [
          "InProgress",
          "Completed",
          "Failed",
          "Stopping",
          "Stopped"
        ]
      },
      "TrialComponentStatusMessage": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 1024
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "TrialComponentParameters": {
        "type": "object",
        "maxProperties": 150,
        "additionalProperties": {
          "$ref": "#/$defs/TrialComponentParameterValue"
        }
      },
      "TrialComponentParameterValue": {
        "type": "object",
        "properties": {
          "StringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StringParameterValue"
              },
              {
                "description": "The string value of a categorical hyperparameter. If you specify a value for this parameter, you can't specify the <code>NumberValue</code> parameter."
              }
            ]
          },
          "NumberValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DoubleParameterValue"
              },
              {
                "description": "The numeric value of a numeric hyperparameter. If you specify a value for this parameter, you can't specify the <code>StringValue</code> parameter."
              }
            ]
          }
        },
        "description": "<p>The value of a hyperparameter. Only one of <code>NumberValue</code> or <code>StringValue</code> can be specified.</p> <p>This object is specified in the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrialComponent.html\">CreateTrialComponent</a> request.</p>"
      },
      "StringParameterValue": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "DoubleParameterValue": {
        "type": "number",
        "format": "double"
      },
      "ListTrialComponentKey256": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TrialComponentKey256"
        }
      },
      "TrialComponentKey256": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "TrialComponentArtifacts": {
        "type": "object",
        "maxProperties": 30,
        "additionalProperties": {
          "$ref": "#/$defs/TrialComponentArtifact"
        }
      },
      "TrialComponentArtifact": {
        "type": "object",
        "required": [
          "Value"
        ],
        "properties": {
          "MediaType": {
            "allOf": [
              {
                "$ref": "#/$defs/MediaType"
              },
              {
                "description": "The media type of the artifact, which indicates the type of data in the artifact file. The media type consists of a <i>type</i> and a <i>subtype</i> concatenated with a slash (/) character, for example, text/csv, image/jpeg, and s3/uri. The type specifies the category of the media. The subtype specifies the kind of data."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentArtifactValue"
              },
              {
                "description": "The location of the artifact."
              }
            ]
          }
        },
        "description": "<p>Represents an input or output artifact of a trial component. You specify <code>TrialComponentArtifact</code> as part of the <code>InputArtifacts</code> and <code>OutputArtifacts</code> parameters in the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrialComponent.html\">CreateTrialComponent</a> request.</p> <p>Examples of input artifacts are datasets, algorithms, hyperparameters, source code, and instance types. Examples of output artifacts are metrics, snapshots, logs, and images.</p>"
      },
      "MediaType": {
        "type": "string",
        "pattern": "^[-\\w]+\\/[-\\w+]+$",
        "maxLength": 64
      },
      "TrialComponentArtifactValue": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.UpdateTrialComponent"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**TrialComponentArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
