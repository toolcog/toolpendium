{
  "name": "UpdateTrainingJob",
  "description": "Update a model training job to request a new Debugger profiling configuration or to change warm pool retention length.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.UpdateTrainingJob"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateTrainingJobRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateTrainingJobRequest": {
        "type": "object",
        "required": [
          "TrainingJobName"
        ],
        "title": "UpdateTrainingJobRequest",
        "properties": {
          "TrainingJobName": {
            "allOf": [
              {
                "$ref": "#/$defs/TrainingJobName"
              },
              {
                "description": "The name of a training job to update the Debugger profiling configuration."
              }
            ]
          },
          "ProfilerConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ProfilerConfigForUpdate"
              },
              {
                "description": "Configuration information for Amazon SageMaker Debugger system monitoring, framework profiling, and storage paths."
              }
            ]
          },
          "ProfilerRuleConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/ProfilerRuleConfigurations"
              },
              {
                "description": "Configuration information for Amazon SageMaker Debugger rules for profiling system and framework metrics."
              }
            ]
          },
          "ResourceConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceConfigForUpdate"
              },
              {
                "description": "The training job <code>ResourceConfig</code> to update warm pool retention length."
              }
            ]
          }
        }
      },
      "TrainingJobName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "minLength": 1,
        "maxLength": 63
      },
      "ProfilerConfigForUpdate": {
        "type": "object",
        "properties": {
          "S3OutputPath": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "Path to Amazon S3 storage location for system and framework metrics."
              }
            ]
          },
          "ProfilingIntervalInMilliseconds": {
            "allOf": [
              {
                "$ref": "#/$defs/ProfilingIntervalInMilliseconds"
              },
              {
                "description": "A time interval for capturing system metrics in milliseconds. Available values are 100, 200, 500, 1000 (1 second), 5000 (5 seconds), and 60000 (1 minute) milliseconds. The default value is 500 milliseconds."
              }
            ]
          },
          "ProfilingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ProfilingParameters"
              },
              {
                "description": "Configuration information for capturing framework metrics. Available key strings for different profiling options are <code>DetailedProfilingConfig</code>, <code>PythonProfilingConfig</code>, and <code>DataLoaderProfilingConfig</code>. The following codes are configuration structures for the <code>ProfilingParameters</code> parameter. To learn more about how to configure the <code>ProfilingParameters</code> parameter, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html\">Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job</a>. "
              }
            ]
          },
          "DisableProfiler": {
            "allOf": [
              {
                "$ref": "#/$defs/DisableProfiler"
              },
              {
                "description": "To turn off Amazon SageMaker Debugger monitoring and profiling while a training job is in progress, set to <code>True</code>."
              }
            ]
          }
        },
        "description": "Configuration information for updating the Amazon SageMaker Debugger profile parameters, system and framework metrics configurations, and storage paths."
      },
      "S3Uri": {
        "type": "string",
        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "maxLength": 1024
      },
      "ProfilingIntervalInMilliseconds": {
        "type": "integer"
      },
      "ProfilingParameters": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 20,
        "additionalProperties": {
          "$ref": "#/$defs/ConfigValue"
        }
      },
      "ConfigValue": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "DisableProfiler": {
        "type": "boolean"
      },
      "ProfilerRuleConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ProfilerRuleConfiguration"
        },
        "minItems": 0,
        "maxItems": 20
      },
      "ProfilerRuleConfiguration": {
        "type": "object",
        "required": [
          "RuleConfigurationName",
          "RuleEvaluatorImage"
        ],
        "properties": {
          "RuleConfigurationName": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleConfigurationName"
              },
              {
                "description": "The name of the rule configuration. It must be unique relative to other rule configuration names."
              }
            ]
          },
          "LocalPath": {
            "allOf": [
              {
                "$ref": "#/$defs/DirectoryPath"
              },
              {
                "description": "Path to local storage location for output of rules. Defaults to <code>/opt/ml/processing/output/rule/</code>. "
              }
            ]
          },
          "S3OutputPath": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "Path to Amazon S3 storage location for rules."
              }
            ]
          },
          "RuleEvaluatorImage": {
            "allOf": [
              {
                "$ref": "#/$defs/AlgorithmImage"
              },
              {
                "description": "The Amazon Elastic Container Registry Image for the managed rule evaluation."
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingInstanceType"
              },
              {
                "description": "The instance type to deploy a custom rule for profiling a training job."
              }
            ]
          },
          "VolumeSizeInGB": {
            "allOf": [
              {
                "$ref": "#/$defs/OptionalVolumeSizeInGB"
              },
              {
                "description": "The size, in GB, of the ML storage volume attached to the processing instance."
              }
            ]
          },
          "RuleParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleParameters"
              },
              {
                "description": "Runtime configuration for rule container."
              }
            ]
          }
        },
        "description": "Configuration information for profiling rules."
      },
      "RuleConfigurationName": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 256
      },
      "DirectoryPath": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 4096
      },
      "AlgorithmImage": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 255
      },
      "ProcessingInstanceType": {
        "type": "string",
        "enum": [
          "ml.t3.medium",
          "ml.t3.large",
          "ml.t3.xlarge",
          "ml.t3.2xlarge",
          "ml.m4.xlarge",
          "ml.m4.2xlarge",
          "ml.m4.4xlarge",
          "ml.m4.10xlarge",
          "ml.m4.16xlarge",
          "ml.c4.xlarge",
          "ml.c4.2xlarge",
          "ml.c4.4xlarge",
          "ml.c4.8xlarge",
          "ml.p2.xlarge",
          "ml.p2.8xlarge",
          "ml.p2.16xlarge",
          "ml.p3.2xlarge",
          "ml.p3.8xlarge",
          "ml.p3.16xlarge",
          "ml.c5.xlarge",
          "ml.c5.2xlarge",
          "ml.c5.4xlarge",
          "ml.c5.9xlarge",
          "ml.c5.18xlarge",
          "ml.m5.large",
          "ml.m5.xlarge",
          "ml.m5.2xlarge",
          "ml.m5.4xlarge",
          "ml.m5.12xlarge",
          "ml.m5.24xlarge",
          "ml.r5.large",
          "ml.r5.xlarge",
          "ml.r5.2xlarge",
          "ml.r5.4xlarge",
          "ml.r5.8xlarge",
          "ml.r5.12xlarge",
          "ml.r5.16xlarge",
          "ml.r5.24xlarge",
          "ml.g4dn.xlarge",
          "ml.g4dn.2xlarge",
          "ml.g4dn.4xlarge",
          "ml.g4dn.8xlarge",
          "ml.g4dn.12xlarge",
          "ml.g4dn.16xlarge"
        ]
      },
      "OptionalVolumeSizeInGB": {
        "type": "integer",
        "minimum": 0
      },
      "RuleParameters": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 100,
        "additionalProperties": {
          "$ref": "#/$defs/ConfigValue"
        }
      },
      "ResourceConfigForUpdate": {
        "type": "object",
        "required": [
          "KeepAlivePeriodInSeconds"
        ],
        "properties": {
          "KeepAlivePeriodInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/KeepAlivePeriodInSeconds"
              },
              {
                "description": "The <code>KeepAlivePeriodInSeconds</code> value specified in the <code>ResourceConfig</code> to update."
              }
            ]
          }
        },
        "description": "The <code>ResourceConfig</code> to update <code>KeepAlivePeriodInSeconds</code>. Other fields in the <code>ResourceConfig</code> cannot be updated."
      },
      "KeepAlivePeriodInSeconds": {
        "type": "integer",
        "minimum": 0,
        "maximum": 3600
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.UpdateTrainingJob"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**TrainingJobArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
