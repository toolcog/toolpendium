{
  "name": "CreateContext",
  "description": "Creates a <i>context</i>. A context is a lineage tracking entity that represents a logical grouping of other tracking or experiment entities. Some examples are an endpoint and a model package. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/lineage-tracking.html\">Amazon SageMaker ML Lineage Tracking</a>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateContext"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateContextRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateContextRequest": {
        "type": "object",
        "required": [
          "ContextName",
          "Source",
          "ContextType"
        ],
        "title": "CreateContextRequest",
        "properties": {
          "ContextName": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentEntityName"
              },
              {
                "description": "The name of the context. Must be unique to your account in an Amazon Web Services Region."
              }
            ]
          },
          "Source": {
            "allOf": [
              {
                "$ref": "#/$defs/ContextSource"
              },
              {
                "description": "The source type, ID, and URI."
              }
            ]
          },
          "ContextType": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "The context type."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentDescription"
              },
              {
                "description": "The description of the context."
              }
            ]
          },
          "Properties": {
            "allOf": [
              {
                "$ref": "#/$defs/LineageEntityParameters"
              },
              {
                "description": "A list of properties to add to the context."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "A list of tags to apply to the context."
              }
            ]
          }
        }
      },
      "ExperimentEntityName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,119}",
        "minLength": 1,
        "maxLength": 120
      },
      "ContextSource": {
        "type": "object",
        "required": [
          "SourceUri"
        ],
        "properties": {
          "SourceUri": {
            "allOf": [
              {
                "$ref": "#/$defs/String2048"
              },
              {
                "description": "The URI of the source."
              }
            ]
          },
          "SourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "The type of the source."
              }
            ]
          },
          "SourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "The ID of the source."
              }
            ]
          }
        },
        "description": "A structure describing the source of a context."
      },
      "String2048": {
        "type": "string",
        "maxLength": 2048
      },
      "String256": {
        "type": "string",
        "maxLength": 256
      },
      "ExperimentDescription": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 3072
      },
      "LineageEntityParameters": {
        "type": "object",
        "maxProperties": 30,
        "additionalProperties": {
          "$ref": "#/$defs/StringParameterValue"
        }
      },
      "StringParameterValue": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateContext"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ContextArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
