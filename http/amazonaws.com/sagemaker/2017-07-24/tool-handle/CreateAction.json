{
  "name": "CreateAction",
  "description": "Creates an <i>action</i>. An action is a lineage tracking entity that represents an action or activity. For example, a model deployment or an HPO job. Generally, an action involves at least one input or output artifact. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/lineage-tracking.html\">Amazon SageMaker ML Lineage Tracking</a>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateAction"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateActionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateActionRequest": {
        "type": "object",
        "required": [
          "ActionName",
          "Source",
          "ActionType"
        ],
        "title": "CreateActionRequest",
        "properties": {
          "ActionName": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentEntityName"
              },
              {
                "description": "The name of the action. Must be unique to your account in an Amazon Web Services Region."
              }
            ]
          },
          "Source": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionSource"
              },
              {
                "description": "The source type, ID, and URI."
              }
            ]
          },
          "ActionType": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "The action type."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentDescription"
              },
              {
                "description": "The description of the action."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionStatus"
              },
              {
                "description": "The status of the action."
              }
            ]
          },
          "Properties": {
            "allOf": [
              {
                "$ref": "#/$defs/LineageEntityParameters"
              },
              {
                "description": "A list of properties to add to the action."
              }
            ]
          },
          "MetadataProperties": {
            "$ref": "#/$defs/MetadataProperties"
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "A list of tags to apply to the action."
              }
            ]
          }
        }
      },
      "ExperimentEntityName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,119}",
        "minLength": 1,
        "maxLength": 120
      },
      "ActionSource": {
        "type": "object",
        "required": [
          "SourceUri"
        ],
        "properties": {
          "SourceUri": {
            "allOf": [
              {
                "$ref": "#/$defs/String2048"
              },
              {
                "description": "The URI of the source."
              }
            ]
          },
          "SourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "The type of the source."
              }
            ]
          },
          "SourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "The ID of the source."
              }
            ]
          }
        },
        "description": "A structure describing the source of an action."
      },
      "String2048": {
        "type": "string",
        "maxLength": 2048
      },
      "String256": {
        "type": "string",
        "maxLength": 256
      },
      "ExperimentDescription": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 3072
      },
      "ActionStatus": {
        "type": "string",
        "enum": [
          "Unknown",
          "InProgress",
          "Completed",
          "Failed",
          "Stopping",
          "Stopped"
        ]
      },
      "LineageEntityParameters": {
        "type": "object",
        "maxProperties": 30,
        "additionalProperties": {
          "$ref": "#/$defs/StringParameterValue"
        }
      },
      "StringParameterValue": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "MetadataProperties": {
        "type": "object",
        "properties": {
          "CommitId": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataPropertyValue"
              },
              {
                "description": "The commit ID."
              }
            ]
          },
          "Repository": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataPropertyValue"
              },
              {
                "description": "The repository."
              }
            ]
          },
          "GeneratedBy": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataPropertyValue"
              },
              {
                "description": "The entity this entity was generated by."
              }
            ]
          },
          "ProjectId": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataPropertyValue"
              },
              {
                "description": "The project ID."
              }
            ]
          }
        },
        "description": "Metadata properties of the tracking entity, trial, or trial component."
      },
      "MetadataPropertyValue": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 1024
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateAction"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ActionArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
