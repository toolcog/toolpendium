{
  "name": "ListNotebookInstances",
  "description": "Returns a list of the SageMaker notebook instances in the requester's account in an Amazon Web Services Region. ",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.ListNotebookInstances"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListNotebookInstancesInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListNotebookInstancesInput": {
        "type": "object",
        "title": "ListNotebookInstancesInput",
        "properties": {
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "<p> If the previous call to the <code>ListNotebookInstances</code> is truncated, the response includes a <code>NextToken</code>. You can use this token in your subsequent <code>ListNotebookInstances</code> request to fetch the next set of notebook instances. </p> <note> <p>You might specify a filter or a sort order in your request. When response is truncated, you must use the same values for the filer and sort order in the next request. </p> </note>"
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxResults"
              },
              {
                "description": "The maximum number of notebook instances to return."
              }
            ]
          },
          "SortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/NotebookInstanceSortKey"
              },
              {
                "description": "The field to sort results by. The default is <code>Name</code>."
              }
            ]
          },
          "SortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/NotebookInstanceSortOrder"
              },
              {
                "description": "The sort order for results. "
              }
            ]
          },
          "NameContains": {
            "allOf": [
              {
                "$ref": "#/$defs/NotebookInstanceNameContains"
              },
              {
                "description": "A string in the notebook instances' name. This filter returns only notebook instances whose name contains the specified string."
              }
            ]
          },
          "CreationTimeBefore": {
            "allOf": [
              {
                "$ref": "#/$defs/CreationTime"
              },
              {
                "description": "A filter that returns only notebook instances that were created before the specified time (timestamp). "
              }
            ]
          },
          "CreationTimeAfter": {
            "allOf": [
              {
                "$ref": "#/$defs/CreationTime"
              },
              {
                "description": "A filter that returns only notebook instances that were created after the specified time (timestamp)."
              }
            ]
          },
          "LastModifiedTimeBefore": {
            "allOf": [
              {
                "$ref": "#/$defs/LastModifiedTime"
              },
              {
                "description": "A filter that returns only notebook instances that were modified before the specified time (timestamp)."
              }
            ]
          },
          "LastModifiedTimeAfter": {
            "allOf": [
              {
                "$ref": "#/$defs/LastModifiedTime"
              },
              {
                "description": "A filter that returns only notebook instances that were modified after the specified time (timestamp)."
              }
            ]
          },
          "StatusEquals": {
            "allOf": [
              {
                "$ref": "#/$defs/NotebookInstanceStatus"
              },
              {
                "description": "A filter that returns only notebook instances with the specified status."
              }
            ]
          },
          "NotebookInstanceLifecycleConfigNameContains": {
            "allOf": [
              {
                "$ref": "#/$defs/NotebookInstanceLifecycleConfigName"
              },
              {
                "description": "A string in the name of a notebook instances lifecycle configuration associated with this notebook instance. This filter returns only notebook instances associated with a lifecycle configuration with a name that contains the specified string."
              }
            ]
          },
          "DefaultCodeRepositoryContains": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeRepositoryContains"
              },
              {
                "description": "A string in the name or URL of a Git repository associated with this notebook instance. This filter returns only notebook instances associated with a git repository with a name that contains the specified string."
              }
            ]
          },
          "AdditionalCodeRepositoryEquals": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeRepositoryNameOrUrl"
              },
              {
                "description": "A filter that returns only notebook instances with associated with the specified git repository."
              }
            ]
          }
        }
      },
      "NextToken": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 8192
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "NotebookInstanceSortKey": {
        "type": "string",
        "enum": [
          "Name",
          "CreationTime",
          "Status"
        ]
      },
      "NotebookInstanceSortOrder": {
        "type": "string",
        "enum": [
          "Ascending",
          "Descending"
        ]
      },
      "NotebookInstanceNameContains": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]+",
        "maxLength": 63
      },
      "CreationTime": {
        "type": "string",
        "format": "date-time"
      },
      "LastModifiedTime": {
        "type": "string",
        "format": "date-time"
      },
      "NotebookInstanceStatus": {
        "type": "string",
        "enum": [
          "Pending",
          "InService",
          "Stopping",
          "Stopped",
          "Failed",
          "Deleting",
          "Updating"
        ]
      },
      "NotebookInstanceLifecycleConfigName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "maxLength": 63
      },
      "CodeRepositoryContains": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]+",
        "maxLength": 1024
      },
      "CodeRepositoryNameOrUrl": {
        "type": "string",
        "pattern": "^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "minLength": 1,
        "maxLength": 1024
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.ListNotebookInstances{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NextToken**",
            "**NotebookInstances**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
