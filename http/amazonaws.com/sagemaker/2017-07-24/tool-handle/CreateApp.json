{
  "name": "CreateApp",
  "description": "Creates a running app for the specified UserProfile. This operation is automatically invoked by Amazon SageMaker Studio upon access to the associated Domain, and when new kernel configurations are selected by the user. A user may have multiple Apps active simultaneously.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateApp"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateAppRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateAppRequest": {
        "type": "object",
        "required": [
          "DomainId",
          "AppType",
          "AppName"
        ],
        "title": "CreateAppRequest",
        "properties": {
          "DomainId": {
            "allOf": [
              {
                "$ref": "#/$defs/DomainId"
              },
              {
                "description": "The domain ID."
              }
            ]
          },
          "UserProfileName": {
            "allOf": [
              {
                "$ref": "#/$defs/UserProfileName"
              },
              {
                "description": "The user profile name. If this value is not set, then <code>SpaceName</code> must be set."
              }
            ]
          },
          "AppType": {
            "allOf": [
              {
                "$ref": "#/$defs/AppType"
              },
              {
                "description": "The type of app."
              }
            ]
          },
          "AppName": {
            "allOf": [
              {
                "$ref": "#/$defs/AppName"
              },
              {
                "description": "The name of the app."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "Each tag consists of a key and an optional value. Tag keys must be unique per resource."
              }
            ]
          },
          "ResourceSpec": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceSpec"
              },
              {
                "description": "<p>The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.</p> <note> <p>The value of <code>InstanceType</code> passed as part of the <code>ResourceSpec</code> in the <code>CreateApp</code> call overrides the value passed as part of the <code>ResourceSpec</code> configured for the user profile or the domain. If <code>InstanceType</code> is not specified in any of those three <code>ResourceSpec</code> values for a <code>KernelGateway</code> app, the <code>CreateApp</code> call fails with a request validation error.</p> </note>"
              }
            ]
          },
          "SpaceName": {
            "allOf": [
              {
                "$ref": "#/$defs/SpaceName"
              },
              {
                "description": "The name of the space. If this value is not set, then <code>UserProfileName</code> must be set."
              }
            ]
          }
        }
      },
      "DomainId": {
        "type": "string",
        "maxLength": 63
      },
      "UserProfileName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "AppType": {
        "type": "string",
        "enum": [
          "JupyterServer",
          "KernelGateway",
          "TensorBoard",
          "RStudioServerPro",
          "RSessionGateway"
        ]
      },
      "AppName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      },
      "ResourceSpec": {
        "type": "object",
        "properties": {
          "SageMakerImageArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageArn"
              },
              {
                "description": "The ARN of the SageMaker image that the image version belongs to."
              }
            ]
          },
          "SageMakerImageVersionArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageVersionArn"
              },
              {
                "description": "The ARN of the image version created on the instance."
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/AppInstanceType"
              },
              {
                "description": "<p>The instance type that the image version runs on.</p> <note> <p> <b>JupyterServer apps</b> only support the <code>system</code> value.</p> <p>For <b>KernelGateway apps</b>, the <code>system</code> value is translated to <code>ml.t3.medium</code>. KernelGateway apps also support all other values for available instance types.</p> </note>"
              }
            ]
          },
          "LifecycleConfigArn": {
            "allOf": [
              {
                "$ref": "#/$defs/StudioLifecycleConfigArn"
              },
              {
                "description": " The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource."
              }
            ]
          }
        },
        "description": "Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on."
      },
      "ImageArn": {
        "type": "string",
        "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
        "maxLength": 256
      },
      "ImageVersionArn": {
        "type": "string",
        "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
        "maxLength": 256
      },
      "AppInstanceType": {
        "type": "string",
        "enum": [
          "system",
          "ml.t3.micro",
          "ml.t3.small",
          "ml.t3.medium",
          "ml.t3.large",
          "ml.t3.xlarge",
          "ml.t3.2xlarge",
          "ml.m5.large",
          "ml.m5.xlarge",
          "ml.m5.2xlarge",
          "ml.m5.4xlarge",
          "ml.m5.8xlarge",
          "ml.m5.12xlarge",
          "ml.m5.16xlarge",
          "ml.m5.24xlarge",
          "ml.m5d.large",
          "ml.m5d.xlarge",
          "ml.m5d.2xlarge",
          "ml.m5d.4xlarge",
          "ml.m5d.8xlarge",
          "ml.m5d.12xlarge",
          "ml.m5d.16xlarge",
          "ml.m5d.24xlarge",
          "ml.c5.large",
          "ml.c5.xlarge",
          "ml.c5.2xlarge",
          "ml.c5.4xlarge",
          "ml.c5.9xlarge",
          "ml.c5.12xlarge",
          "ml.c5.18xlarge",
          "ml.c5.24xlarge",
          "ml.p3.2xlarge",
          "ml.p3.8xlarge",
          "ml.p3.16xlarge",
          "ml.p3dn.24xlarge",
          "ml.g4dn.xlarge",
          "ml.g4dn.2xlarge",
          "ml.g4dn.4xlarge",
          "ml.g4dn.8xlarge",
          "ml.g4dn.12xlarge",
          "ml.g4dn.16xlarge",
          "ml.r5.large",
          "ml.r5.xlarge",
          "ml.r5.2xlarge",
          "ml.r5.4xlarge",
          "ml.r5.8xlarge",
          "ml.r5.12xlarge",
          "ml.r5.16xlarge",
          "ml.r5.24xlarge",
          "ml.g5.xlarge",
          "ml.g5.2xlarge",
          "ml.g5.4xlarge",
          "ml.g5.8xlarge",
          "ml.g5.16xlarge",
          "ml.g5.12xlarge",
          "ml.g5.24xlarge",
          "ml.g5.48xlarge",
          "ml.geospatial.interactive",
          "ml.p4d.24xlarge",
          "ml.p4de.24xlarge"
        ]
      },
      "StudioLifecycleConfigArn": {
        "type": "string",
        "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
        "maxLength": 256
      },
      "SpaceName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateApp"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AppArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
