{
  "name": "CreateMonitoringSchedule",
  "description": "Creates a schedule that regularly starts Amazon SageMaker Processing Jobs to monitor the data captured for an Amazon SageMaker Endpoint.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateMonitoringSchedule"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateMonitoringScheduleRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateMonitoringScheduleRequest": {
        "type": "object",
        "required": [
          "MonitoringScheduleName",
          "MonitoringScheduleConfig"
        ],
        "title": "CreateMonitoringScheduleRequest",
        "properties": {
          "MonitoringScheduleName": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringScheduleName"
              },
              {
                "description": "The name of the monitoring schedule. The name must be unique within an Amazon Web Services Region within an Amazon Web Services account."
              }
            ]
          },
          "MonitoringScheduleConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringScheduleConfig"
              },
              {
                "description": "The configuration object that specifies the monitoring schedule and defines the monitoring job."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "(Optional) An array of key-value pairs. For more information, see <a href=\" https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL\">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>."
              }
            ]
          }
        }
      },
      "MonitoringScheduleName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$",
        "minLength": 1,
        "maxLength": 63
      },
      "MonitoringScheduleConfig": {
        "type": "object",
        "properties": {
          "ScheduleConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduleConfig"
              },
              {
                "description": "Configures the monitoring schedule."
              }
            ]
          },
          "MonitoringJobDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringJobDefinition"
              },
              {
                "description": "Defines the monitoring job."
              }
            ]
          },
          "MonitoringJobDefinitionName": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringJobDefinitionName"
              },
              {
                "description": "The name of the monitoring job definition to schedule."
              }
            ]
          },
          "MonitoringType": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringType"
              },
              {
                "description": "The type of the monitoring job definition to schedule."
              }
            ]
          }
        },
        "description": "Configures the monitoring schedule and defines the monitoring job."
      },
      "ScheduleConfig": {
        "type": "object",
        "required": [
          "ScheduleExpression"
        ],
        "properties": {
          "ScheduleExpression": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduleExpression"
              },
              {
                "description": "<p>A cron expression that describes details about the monitoring schedule.</p> <p>Currently the only supported cron expressions are:</p> <ul> <li> <p>If you want to set the job to start every hour, please use the following:</p> <p> <code>Hourly: cron(0 * ? * * *)</code> </p> </li> <li> <p>If you want to start the job daily:</p> <p> <code>cron(0 [00-23] ? * * *)</code> </p> </li> </ul> <p>For example, the following are valid cron expressions:</p> <ul> <li> <p>Daily at noon UTC: <code>cron(0 12 ? * * *)</code> </p> </li> <li> <p>Daily at midnight UTC: <code>cron(0 0 ? * * *)</code> </p> </li> </ul> <p>To support running every 6, 12 hours, the following are also supported:</p> <p> <code>cron(0 [00-23]/[01-24] ? * * *)</code> </p> <p>For example, the following are valid cron expressions:</p> <ul> <li> <p>Every 12 hours, starting at 5pm UTC: <code>cron(0 17/12 ? * * *)</code> </p> </li> <li> <p>Every two hours starting at midnight: <code>cron(0 0/2 ? * * *)</code> </p> </li> </ul> <note> <ul> <li> <p>Even though the cron expression is set to start at 5PM UTC, note that there could be a delay of 0-20 minutes from the actual requested time to run the execution. </p> </li> <li> <p>We recommend that if you would like a daily schedule, you do not provide this parameter. Amazon SageMaker will pick a time for running every day.</p> </li> </ul> </note>"
              }
            ]
          }
        },
        "description": "Configuration details about the monitoring schedule."
      },
      "ScheduleExpression": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "MonitoringJobDefinition": {
        "type": "object",
        "required": [
          "MonitoringInputs",
          "MonitoringOutputConfig",
          "MonitoringResources",
          "MonitoringAppSpecification",
          "RoleArn"
        ],
        "properties": {
          "BaselineConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringBaselineConfig"
              },
              {
                "description": "Baseline configuration used to validate that the data conforms to the specified constraints and statistics"
              }
            ]
          },
          "MonitoringInputs": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringInputs"
              },
              {
                "description": "The array of inputs for the monitoring job. Currently we support monitoring an Amazon SageMaker Endpoint."
              }
            ]
          },
          "MonitoringOutputConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringOutputConfig"
              },
              {
                "description": "The array of outputs from the monitoring job to be uploaded to Amazon Simple Storage Service (Amazon S3)."
              }
            ]
          },
          "MonitoringResources": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringResources"
              },
              {
                "description": "Identifies the resources, ML compute instances, and ML storage volumes to deploy for a monitoring job. In distributed processing, you specify more than one instance."
              }
            ]
          },
          "MonitoringAppSpecification": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringAppSpecification"
              },
              {
                "description": "Configures the monitoring job to run a specified Docker container image."
              }
            ]
          },
          "StoppingCondition": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringStoppingCondition"
              },
              {
                "description": "Specifies a time limit for how long the monitoring job is allowed to run."
              }
            ]
          },
          "Environment": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringEnvironmentMap"
              },
              {
                "description": "Sets the environment variables in the Docker container."
              }
            ]
          },
          "NetworkConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkConfig"
              },
              {
                "description": "Specifies networking options for an monitoring job."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
              }
            ]
          }
        },
        "description": "Defines the monitoring job."
      },
      "MonitoringBaselineConfig": {
        "type": "object",
        "properties": {
          "BaseliningJobName": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingJobName"
              },
              {
                "description": "The name of the job that performs baselining for the monitoring job."
              }
            ]
          },
          "ConstraintsResource": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringConstraintsResource"
              },
              {
                "description": "The baseline constraint file in Amazon S3 that the current monitoring job should validated against."
              }
            ]
          },
          "StatisticsResource": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringStatisticsResource"
              },
              {
                "description": "The baseline statistics file in Amazon S3 that the current monitoring job should be validated against."
              }
            ]
          }
        },
        "description": "Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically."
      },
      "ProcessingJobName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "minLength": 1,
        "maxLength": 63
      },
      "MonitoringConstraintsResource": {
        "type": "object",
        "properties": {
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The Amazon S3 URI for the constraints resource."
              }
            ]
          }
        },
        "description": "The constraints resource for a monitoring job."
      },
      "S3Uri": {
        "type": "string",
        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "maxLength": 1024
      },
      "MonitoringStatisticsResource": {
        "type": "object",
        "properties": {
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The Amazon S3 URI for the statistics resource."
              }
            ]
          }
        },
        "description": "The statistics resource for a monitoring job."
      },
      "MonitoringInputs": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MonitoringInput"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "MonitoringInput": {
        "type": "object",
        "properties": {
          "EndpointInput": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointInput"
              },
              {
                "description": "The endpoint for a monitoring job."
              }
            ]
          },
          "BatchTransformInput": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchTransformInput"
              },
              {
                "description": "Input object for the batch transform job."
              }
            ]
          }
        },
        "description": "The inputs for a monitoring job."
      },
      "EndpointInput": {
        "type": "object",
        "required": [
          "EndpointName",
          "LocalPath"
        ],
        "properties": {
          "EndpointName": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointName"
              },
              {
                "description": "An endpoint in customer's account which has enabled <code>DataCaptureConfig</code> enabled."
              }
            ]
          },
          "LocalPath": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingLocalPath"
              },
              {
                "description": "Path to the filesystem where the endpoint data is available to the container."
              }
            ]
          },
          "S3InputMode": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3InputMode"
              },
              {
                "description": "Whether the <code>Pipe</code> or <code>File</code> is used as the input mode for transferring data for the monitoring job. <code>Pipe</code> mode is recommended for large datasets. <code>File</code> mode is useful for small files that fit in memory. Defaults to <code>File</code>."
              }
            ]
          },
          "S3DataDistributionType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3DataDistributionType"
              },
              {
                "description": "Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to <code>FullyReplicated</code> "
              }
            ]
          },
          "FeaturesAttribute": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The attributes of the input data that are the input features."
              }
            ]
          },
          "InferenceAttribute": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The attribute of the input data that represents the ground truth label."
              }
            ]
          },
          "ProbabilityAttribute": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "In a classification problem, the attribute that represents the class probability."
              }
            ]
          },
          "ProbabilityThresholdAttribute": {
            "allOf": [
              {
                "$ref": "#/$defs/ProbabilityThresholdAttribute"
              },
              {
                "description": "The threshold for the class probability to be evaluated as a positive result."
              }
            ]
          },
          "StartTimeOffset": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringTimeOffsetString"
              },
              {
                "description": "If specified, monitoring jobs substract this time from the start time. For information about using offsets for scheduling monitoring jobs, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-model-quality-schedule.html\">Schedule Model Quality Monitoring Jobs</a>."
              }
            ]
          },
          "EndTimeOffset": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringTimeOffsetString"
              },
              {
                "description": "If specified, monitoring jobs substract this time from the end time. For information about using offsets for scheduling monitoring jobs, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-model-quality-schedule.html\">Schedule Model Quality Monitoring Jobs</a>."
              }
            ]
          }
        },
        "description": "Input object for the endpoint"
      },
      "EndpointName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "ProcessingLocalPath": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "ProcessingS3InputMode": {
        "type": "string",
        "enum": [
          "Pipe",
          "File"
        ]
      },
      "ProcessingS3DataDistributionType": {
        "type": "string",
        "enum": [
          "FullyReplicated",
          "ShardedByS3Key"
        ]
      },
      "String": {
        "type": "string"
      },
      "ProbabilityThresholdAttribute": {
        "type": "number",
        "format": "double"
      },
      "MonitoringTimeOffsetString": {
        "type": "string",
        "pattern": "^.?P.*",
        "minLength": 1,
        "maxLength": 15
      },
      "BatchTransformInput": {
        "type": "object",
        "required": [
          "DataCapturedDestinationS3Uri",
          "DatasetFormat",
          "LocalPath"
        ],
        "properties": {
          "DataCapturedDestinationS3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/DestinationS3Uri"
              },
              {
                "description": "The Amazon S3 location being used to capture the data."
              }
            ]
          },
          "DatasetFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringDatasetFormat"
              },
              {
                "description": "The dataset format for your batch transform job."
              }
            ]
          },
          "LocalPath": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingLocalPath"
              },
              {
                "description": "Path to the filesystem where the batch transform data is available to the container."
              }
            ]
          },
          "S3InputMode": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3InputMode"
              },
              {
                "description": "Whether the <code>Pipe</code> or <code>File</code> is used as the input mode for transferring data for the monitoring job. <code>Pipe</code> mode is recommended for large datasets. <code>File</code> mode is useful for small files that fit in memory. Defaults to <code>File</code>."
              }
            ]
          },
          "S3DataDistributionType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3DataDistributionType"
              },
              {
                "description": "Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to <code>FullyReplicated</code> "
              }
            ]
          },
          "FeaturesAttribute": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The attributes of the input data that are the input features."
              }
            ]
          },
          "InferenceAttribute": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The attribute of the input data that represents the ground truth label."
              }
            ]
          },
          "ProbabilityAttribute": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "In a classification problem, the attribute that represents the class probability."
              }
            ]
          },
          "ProbabilityThresholdAttribute": {
            "allOf": [
              {
                "$ref": "#/$defs/ProbabilityThresholdAttribute"
              },
              {
                "description": "The threshold for the class probability to be evaluated as a positive result."
              }
            ]
          },
          "StartTimeOffset": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringTimeOffsetString"
              },
              {
                "description": "If specified, monitoring jobs substract this time from the start time. For information about using offsets for scheduling monitoring jobs, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-model-quality-schedule.html\">Schedule Model Quality Monitoring Jobs</a>."
              }
            ]
          },
          "EndTimeOffset": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringTimeOffsetString"
              },
              {
                "description": "If specified, monitoring jobs subtract this time from the end time. For information about using offsets for scheduling monitoring jobs, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-model-quality-schedule.html\">Schedule Model Quality Monitoring Jobs</a>."
              }
            ]
          }
        },
        "description": "Input object for the batch transform job."
      },
      "DestinationS3Uri": {
        "type": "string",
        "pattern": "^(https|s3)://([^/])/?(.*)$",
        "maxLength": 512
      },
      "MonitoringDatasetFormat": {
        "type": "object",
        "properties": {
          "Csv": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringCsvDatasetFormat"
              },
              {
                "description": "The CSV dataset used in the monitoring job."
              }
            ]
          },
          "Json": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringJsonDatasetFormat"
              },
              {
                "description": "The JSON dataset used in the monitoring job"
              }
            ]
          },
          "Parquet": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringParquetDatasetFormat"
              },
              {
                "description": "The Parquet dataset used in the monitoring job"
              }
            ]
          }
        },
        "description": "Represents the dataset format used when running a monitoring job."
      },
      "MonitoringCsvDatasetFormat": {
        "type": "object",
        "properties": {
          "Header": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates if the CSV data has a header."
              }
            ]
          }
        },
        "description": "Represents the CSV dataset format used when running a monitoring job."
      },
      "Boolean": {
        "type": "boolean"
      },
      "MonitoringJsonDatasetFormat": {
        "type": "object",
        "properties": {
          "Line": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates if the file should be read as a json object per line. "
              }
            ]
          }
        },
        "description": "Represents the JSON dataset format used when running a monitoring job."
      },
      "MonitoringParquetDatasetFormat": {
        "type": "object",
        "properties": {},
        "description": "Represents the Parquet dataset format used when running a monitoring job."
      },
      "MonitoringOutputConfig": {
        "type": "object",
        "required": [
          "MonitoringOutputs"
        ],
        "properties": {
          "MonitoringOutputs": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringOutputs"
              },
              {
                "description": "Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded."
              }
            ]
          },
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption."
              }
            ]
          }
        },
        "description": "The output configuration for monitoring jobs."
      },
      "MonitoringOutputs": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MonitoringOutput"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "MonitoringOutput": {
        "type": "object",
        "required": [
          "S3Output"
        ],
        "properties": {
          "S3Output": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringS3Output"
              },
              {
                "description": "The Amazon S3 storage location where the results of a monitoring job are saved."
              }
            ]
          }
        },
        "description": "The output object for a monitoring job."
      },
      "MonitoringS3Output": {
        "type": "object",
        "required": [
          "S3Uri",
          "LocalPath"
        ],
        "properties": {
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringS3Uri"
              },
              {
                "description": "A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job."
              }
            ]
          },
          "LocalPath": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingLocalPath"
              },
              {
                "description": "The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data."
              }
            ]
          },
          "S3UploadMode": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3UploadMode"
              },
              {
                "description": "Whether to upload the results of the monitoring job continuously or after the job completes."
              }
            ]
          }
        },
        "description": "Information about where and how you want to store the results of a monitoring job."
      },
      "MonitoringS3Uri": {
        "type": "string",
        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "maxLength": 512
      },
      "ProcessingS3UploadMode": {
        "type": "string",
        "enum": [
          "Continuous",
          "EndOfJob"
        ]
      },
      "KmsKeyId": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 2048
      },
      "MonitoringResources": {
        "type": "object",
        "required": [
          "ClusterConfig"
        ],
        "properties": {
          "ClusterConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringClusterConfig"
              },
              {
                "description": "The configuration for the cluster resources used to run the processing job."
              }
            ]
          }
        },
        "description": "Identifies the resources to deploy for a monitoring job."
      },
      "MonitoringClusterConfig": {
        "type": "object",
        "required": [
          "InstanceCount",
          "InstanceType",
          "VolumeSizeInGB"
        ],
        "properties": {
          "InstanceCount": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingInstanceCount"
              },
              {
                "description": "The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1."
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingInstanceType"
              },
              {
                "description": "The ML compute instance type for the processing job."
              }
            ]
          },
          "VolumeSizeInGB": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingVolumeSizeInGB"
              },
              {
                "description": "The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario."
              }
            ]
          },
          "VolumeKmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job."
              }
            ]
          }
        },
        "description": "Configuration for the cluster used to run model monitoring jobs."
      },
      "ProcessingInstanceCount": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "ProcessingInstanceType": {
        "type": "string",
        "enum": [
          "ml.t3.medium",
          "ml.t3.large",
          "ml.t3.xlarge",
          "ml.t3.2xlarge",
          "ml.m4.xlarge",
          "ml.m4.2xlarge",
          "ml.m4.4xlarge",
          "ml.m4.10xlarge",
          "ml.m4.16xlarge",
          "ml.c4.xlarge",
          "ml.c4.2xlarge",
          "ml.c4.4xlarge",
          "ml.c4.8xlarge",
          "ml.p2.xlarge",
          "ml.p2.8xlarge",
          "ml.p2.16xlarge",
          "ml.p3.2xlarge",
          "ml.p3.8xlarge",
          "ml.p3.16xlarge",
          "ml.c5.xlarge",
          "ml.c5.2xlarge",
          "ml.c5.4xlarge",
          "ml.c5.9xlarge",
          "ml.c5.18xlarge",
          "ml.m5.large",
          "ml.m5.xlarge",
          "ml.m5.2xlarge",
          "ml.m5.4xlarge",
          "ml.m5.12xlarge",
          "ml.m5.24xlarge",
          "ml.r5.large",
          "ml.r5.xlarge",
          "ml.r5.2xlarge",
          "ml.r5.4xlarge",
          "ml.r5.8xlarge",
          "ml.r5.12xlarge",
          "ml.r5.16xlarge",
          "ml.r5.24xlarge",
          "ml.g4dn.xlarge",
          "ml.g4dn.2xlarge",
          "ml.g4dn.4xlarge",
          "ml.g4dn.8xlarge",
          "ml.g4dn.12xlarge",
          "ml.g4dn.16xlarge"
        ]
      },
      "ProcessingVolumeSizeInGB": {
        "type": "integer",
        "minimum": 1,
        "maximum": 16384
      },
      "MonitoringAppSpecification": {
        "type": "object",
        "required": [
          "ImageUri"
        ],
        "properties": {
          "ImageUri": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageUri"
              },
              {
                "description": "The container image to be run by the monitoring job."
              }
            ]
          },
          "ContainerEntrypoint": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerEntrypoint"
              },
              {
                "description": "Specifies the entrypoint for a container used to run the monitoring job."
              }
            ]
          },
          "ContainerArguments": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringContainerArguments"
              },
              {
                "description": "An array of arguments for the container used to run the monitoring job."
              }
            ]
          },
          "RecordPreprocessorSourceUri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers."
              }
            ]
          },
          "PostAnalyticsProcessorSourceUri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers."
              }
            ]
          }
        },
        "description": "Container image configuration object for the monitoring job."
      },
      "ImageUri": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 255
      },
      "ContainerEntrypoint": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ContainerEntrypointString"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "ContainerEntrypointString": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "MonitoringContainerArguments": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ContainerArgument"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "ContainerArgument": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "MonitoringStoppingCondition": {
        "type": "object",
        "required": [
          "MaxRuntimeInSeconds"
        ],
        "properties": {
          "MaxRuntimeInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringMaxRuntimeInSeconds"
              },
              {
                "description": "<p>The maximum runtime allowed in seconds.</p> <note> <p>The <code>MaxRuntimeInSeconds</code> cannot exceed the frequency of the job. For data quality and model explainability, this can be up to 3600 seconds for an hourly schedule. For model bias and model quality hourly schedules, this can be up to 1800 seconds.</p> </note>"
              }
            ]
          }
        },
        "description": "A time limit for how long the monitoring job is allowed to run before stopping."
      },
      "MonitoringMaxRuntimeInSeconds": {
        "type": "integer",
        "minimum": 1,
        "maximum": 86400
      },
      "MonitoringEnvironmentMap": {
        "type": "object",
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/ProcessingEnvironmentValue"
        }
      },
      "ProcessingEnvironmentValue": {
        "type": "string",
        "pattern": "[\\S\\s]*",
        "maxLength": 256
      },
      "NetworkConfig": {
        "type": "object",
        "properties": {
          "EnableInterContainerTrafficEncryption": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Whether to encrypt all communications between distributed processing jobs. Choose <code>True</code> to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer."
              }
            ]
          },
          "EnableNetworkIsolation": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Whether to allow inbound and outbound network calls to and from the containers used for the processing job."
              }
            ]
          },
          "VpcConfig": {
            "$ref": "#/$defs/VpcConfig"
          }
        },
        "description": "Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs."
      },
      "VpcConfig": {
        "type": "object",
        "required": [
          "SecurityGroupIds",
          "Subnets"
        ],
        "properties": {
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcSecurityGroupIds"
              },
              {
                "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field."
              }
            ]
          },
          "Subnets": {
            "allOf": [
              {
                "$ref": "#/$defs/Subnets"
              },
              {
                "description": "The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/instance-types-az.html\">Supported Instance Types and Availability Zones</a>."
              }
            ]
          }
        },
        "description": "Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html\">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html\">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. "
      },
      "VpcSecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SecurityGroupId"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "SecurityGroupId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "Subnets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetId"
        },
        "minItems": 1,
        "maxItems": 16
      },
      "SubnetId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
        "minLength": 20,
        "maxLength": 2048
      },
      "MonitoringJobDefinitionName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
        "minLength": 1,
        "maxLength": 63
      },
      "MonitoringType": {
        "type": "string",
        "enum": [
          "DataQuality",
          "ModelQuality",
          "ModelBias",
          "ModelExplainability"
        ]
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateMonitoringSchedule"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**MonitoringScheduleArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
