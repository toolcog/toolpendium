{
  "name": "UpdateDevices",
  "description": "Updates one or more devices in a fleet.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.UpdateDevices"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateDevicesRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateDevicesRequest": {
        "type": "object",
        "required": [
          "DeviceFleetName",
          "Devices"
        ],
        "title": "UpdateDevicesRequest",
        "properties": {
          "DeviceFleetName": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityName"
              },
              {
                "description": "The name of the fleet the devices belong to."
              }
            ]
          },
          "Devices": {
            "allOf": [
              {
                "$ref": "#/$defs/Devices"
              },
              {
                "description": "List of devices to register with Edge Manager agent."
              }
            ]
          }
        }
      },
      "EntityName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$",
        "minLength": 1,
        "maxLength": 63
      },
      "Devices": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Device"
        }
      },
      "Device": {
        "type": "object",
        "required": [
          "DeviceName"
        ],
        "properties": {
          "DeviceName": {
            "allOf": [
              {
                "$ref": "#/$defs/DeviceName"
              },
              {
                "description": "The name of the device."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/DeviceDescription"
              },
              {
                "description": "Description of the device."
              }
            ]
          },
          "IotThingName": {
            "allOf": [
              {
                "$ref": "#/$defs/ThingName"
              },
              {
                "description": "Amazon Web Services Internet of Things (IoT) object name."
              }
            ]
          }
        },
        "description": "Information of a particular device."
      },
      "DeviceName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$",
        "minLength": 1,
        "maxLength": 63
      },
      "DeviceDescription": {
        "type": "string",
        "pattern": "[\\S\\s]+",
        "minLength": 1,
        "maxLength": 40
      },
      "ThingName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9:_-]+",
        "maxLength": 128
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.UpdateDevices"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {}
}
