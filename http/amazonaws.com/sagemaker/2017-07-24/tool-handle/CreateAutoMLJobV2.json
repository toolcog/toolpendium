{
  "name": "CreateAutoMLJobV2",
  "description": "<p>Creates an Autopilot job also referred to as Autopilot experiment or AutoML job V2.</p> <note> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateAutoMLJobV2.html\">CreateAutoMLJobV2</a> and <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeAutoMLJobV2.html\">DescribeAutoMLJobV2</a> are new versions of <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateAutoMLJob.html\">CreateAutoMLJob</a> and <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeAutoMLJob.html\">DescribeAutoMLJob</a> which offer backward compatibility.</p> <p> <code>CreateAutoMLJobV2</code> can manage tabular problem types identical to those of its previous version <code>CreateAutoMLJob</code>, as well as non-tabular problem types such as image or text classification.</p> <p>Find guidelines about how to migrate a <code>CreateAutoMLJob</code> to <code>CreateAutoMLJobV2</code> in <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-automate-model-development-create-experiment-api.html#autopilot-create-experiment-api-migrate-v1-v2\">Migrate a CreateAutoMLJob to CreateAutoMLJobV2</a>.</p> </note> <p>For the list of available problem types supported by <code>CreateAutoMLJobV2</code>, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLProblemTypeConfig.html\">AutoMLProblemTypeConfig</a>.</p> <p>You can find the best-performing model after you run an AutoML job V2 by calling <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeAutoMLJobV2.html\">DescribeAutoMLJobV2</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateAutoMLJobV2"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateAutoMLJobV2Request"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateAutoMLJobV2Request": {
        "type": "object",
        "required": [
          "AutoMLJobName",
          "AutoMLJobInputDataConfig",
          "OutputDataConfig",
          "AutoMLProblemTypeConfig",
          "RoleArn"
        ],
        "title": "CreateAutoMLJobV2Request",
        "properties": {
          "AutoMLJobName": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLJobName"
              },
              {
                "description": "Identifies an Autopilot job. The name must be unique to your account and is case insensitive."
              }
            ]
          },
          "AutoMLJobInputDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLJobInputDataConfig"
              },
              {
                "description": "<p>An array of channel objects describing the input data and their location. Each channel is a named input source. Similar to the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateAutoMLJob.html#sagemaker-CreateAutoMLJob-request-InputDataConfig\">InputDataConfig</a> attribute in the <code>CreateAutoMLJob</code> input parameters. The supported formats depend on the problem type:</p> <ul> <li> <p>For tabular problem types: <code>S3Prefix</code>, <code>ManifestFile</code>.</p> </li> <li> <p>For image classification: <code>S3Prefix</code>, <code>ManifestFile</code>, <code>AugmentedManifestFile</code>.</p> </li> <li> <p>For text classification: <code>S3Prefix</code>.</p> </li> <li> <p>For time-series forecasting: <code>S3Prefix</code>.</p> </li> </ul>"
              }
            ]
          },
          "OutputDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLOutputDataConfig"
              },
              {
                "description": "Provides information about encryption and the Amazon S3 output path needed to store artifacts from an AutoML job."
              }
            ]
          },
          "AutoMLProblemTypeConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLProblemTypeConfig"
              },
              {
                "description": "Defines the configuration settings of one of the supported problem types."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The ARN of the role that is used to access the data."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, such as by purpose, owner, or environment. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web ServicesResources</a>. Tag keys must be unique per resource."
              }
            ]
          },
          "SecurityConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLSecurityConfig"
              },
              {
                "description": "The security configuration for traffic encryption or Amazon VPC settings."
              }
            ]
          },
          "AutoMLJobObjective": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLJobObjective"
              },
              {
                "description": "<p>Specifies a metric to minimize or maximize as the objective of a job. If not specified, the default objective metric depends on the problem type. For the list of default values per problem type, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLJobObjective.html\">AutoMLJobObjective</a>.</p> <note> <p>For tabular problem types, you must either provide both the <code>AutoMLJobObjective</code> and indicate the type of supervised learning problem in <code>AutoMLProblemTypeConfig</code> (<code>TabularJobConfig.ProblemType</code>), or none at all.</p> </note>"
              }
            ]
          },
          "ModelDeployConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelDeployConfig"
              },
              {
                "description": "Specifies how to generate the endpoint name for an automatic one-click Autopilot model deployment."
              }
            ]
          },
          "DataSplitConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLDataSplitConfig"
              },
              {
                "description": "<p>This structure specifies how to split the data into train and validation datasets.</p> <p>The validation and training datasets must contain the same headers. For jobs created by calling <code>CreateAutoMLJob</code>, the validation dataset must be less than 2 GB in size.</p> <note> <p>This attribute must not be set for the time-series forecasting problem type, as Autopilot automatically splits the input dataset into training and validation sets.</p> </note>"
              }
            ]
          }
        }
      },
      "AutoMLJobName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,31}",
        "minLength": 1,
        "maxLength": 32
      },
      "AutoMLJobInputDataConfig": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AutoMLJobChannel"
        },
        "minItems": 1,
        "maxItems": 2
      },
      "AutoMLJobChannel": {
        "type": "object",
        "properties": {
          "ChannelType": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLChannelType"
              },
              {
                "description": "<p>The type of channel. Defines whether the data are used for training or validation. The default value is <code>training</code>. Channels for <code>training</code> and <code>validation</code> must share the same <code>ContentType</code> </p> <note> <p>The type of channel defaults to <code>training</code> for the time-series forecasting problem type.</p> </note>"
              }
            ]
          },
          "ContentType": {
            "allOf": [
              {
                "$ref": "#/$defs/ContentType"
              },
              {
                "description": "<p>The content type of the data from the input source. The following are the allowed content types for different problems:</p> <ul> <li> <p>For tabular problem types: <code>text/csv;header=present</code> or <code>x-application/vnd.amazon+parquet</code>. The default value is <code>text/csv;header=present</code>.</p> </li> <li> <p>For image classification: <code>image/png</code>, <code>image/jpeg</code>, or <code>image/*</code>. The default value is <code>image/*</code>.</p> </li> <li> <p>For text classification: <code>text/csv;header=present</code> or <code>x-application/vnd.amazon+parquet</code>. The default value is <code>text/csv;header=present</code>.</p> </li> <li> <p>For time-series forecasting: <code>text/csv;header=present</code> or <code>x-application/vnd.amazon+parquet</code>. The default value is <code>text/csv;header=present</code>.</p> </li> </ul>"
              }
            ]
          },
          "CompressionType": {
            "allOf": [
              {
                "$ref": "#/$defs/CompressionType"
              },
              {
                "description": "The allowed compression types depend on the input format and problem type. We allow the compression type <code>Gzip</code> for <code>S3Prefix</code> inputs on tabular data only. For all other inputs, the compression type should be <code>None</code>. If no compression type is provided, we default to <code>None</code>."
              }
            ]
          },
          "DataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLDataSource"
              },
              {
                "description": "The data source for an AutoML channel (Required)."
              }
            ]
          }
        },
        "description": "A channel is a named input source that training algorithms can consume. This channel is used for AutoML jobs V2 (jobs created by calling <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateAutoMLJobV2.html\">CreateAutoMLJobV2</a>)."
      },
      "AutoMLChannelType": {
        "type": "string",
        "enum": [
          "training",
          "validation"
        ]
      },
      "ContentType": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "CompressionType": {
        "type": "string",
        "enum": [
          "None",
          "Gzip"
        ]
      },
      "AutoMLDataSource": {
        "type": "object",
        "required": [
          "S3DataSource"
        ],
        "properties": {
          "S3DataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLS3DataSource"
              },
              {
                "description": "The Amazon S3 location of the input data."
              }
            ]
          }
        },
        "description": "The data source for the Autopilot job."
      },
      "AutoMLS3DataSource": {
        "type": "object",
        "required": [
          "S3DataType",
          "S3Uri"
        ],
        "properties": {
          "S3DataType": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLS3DataType"
              },
              {
                "description": "<p>The data type. </p> <ul> <li> <p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. SageMaker uses all objects that match the specified key name prefix for model training.</p> <p>The <code>S3Prefix</code> should have the following format:</p> <p> <code>s3://DOC-EXAMPLE-BUCKET/DOC-EXAMPLE-FOLDER-OR-FILE</code> </p> </li> <li> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want SageMaker to use for model training.</p> <p>A <code>ManifestFile</code> should have the format shown below:</p> <p> <code>[ {\"prefix\": \"s3://DOC-EXAMPLE-BUCKET/DOC-EXAMPLE-FOLDER/DOC-EXAMPLE-PREFIX/\"}, </code> </p> <p> <code>\"DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAMPLE-FOLDER/DATA-1\",</code> </p> <p> <code>\"DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAMPLE-FOLDER/DATA-2\",</code> </p> <p> <code>... \"DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAMPLE-FOLDER/DATA-N\" ]</code> </p> </li> <li> <p>If you choose <code>AugmentedManifestFile</code>, <code>S3Uri</code> identifies an object that is an augmented manifest file in JSON lines format. This file contains the data you want to use for model training. <code>AugmentedManifestFile</code> is available for V2 API jobs only (for example, for jobs created by calling <code>CreateAutoMLJobV2</code>).</p> <p>Here is a minimal, single-record example of an <code>AugmentedManifestFile</code>:</p> <p> <code>{\"source-ref\": \"s3://DOC-EXAMPLE-BUCKET/DOC-EXAMPLE-FOLDER/cats/cat.jpg\",</code> </p> <p> <code>\"label-metadata\": {\"class-name\": \"cat\"</code> }</p> <p>For more information on <code>AugmentedManifestFile</code>, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/augmented-manifest.html\">Provide Dataset Metadata to Training Jobs with an Augmented Manifest File</a>.</p> </li> </ul>"
              }
            ]
          },
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The URL to the Amazon S3 data source. The Uri refers to the Amazon S3 prefix or ManifestFile depending on the data type."
              }
            ]
          }
        },
        "description": "Describes the Amazon S3 data source."
      },
      "AutoMLS3DataType": {
        "type": "string",
        "enum": [
          "ManifestFile",
          "S3Prefix",
          "AugmentedManifestFile"
        ]
      },
      "S3Uri": {
        "type": "string",
        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "maxLength": 1024
      },
      "AutoMLOutputDataConfig": {
        "type": "object",
        "required": [
          "S3OutputPath"
        ],
        "properties": {
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "The Key Management Service (KMS) encryption key ID."
              }
            ]
          },
          "S3OutputPath": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The Amazon S3 output path. Must be 128 characters or less."
              }
            ]
          }
        },
        "description": "The output data configuration."
      },
      "KmsKeyId": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 2048
      },
      "AutoMLProblemTypeConfig": {
        "type": "object",
        "properties": {
          "ImageClassificationJobConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageClassificationJobConfig"
              },
              {
                "description": "Settings used to configure an AutoML job V2 for the image classification problem type."
              }
            ]
          },
          "TextClassificationJobConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/TextClassificationJobConfig"
              },
              {
                "description": "Settings used to configure an AutoML job V2 for the text classification problem type."
              }
            ]
          },
          "TabularJobConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/TabularJobConfig"
              },
              {
                "description": "Settings used to configure an AutoML job V2 for a tabular problem type (regression, classification)."
              }
            ]
          },
          "TimeSeriesForecastingJobConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeSeriesForecastingJobConfig"
              },
              {
                "description": "<p>Settings used to configure an AutoML job V2 for a time-series forecasting problem type.</p> <note> <p>The <code>TimeSeriesForecastingJobConfig</code> problem type is only available in private beta. Contact Amazon Web Services Support or your account manager to learn more about access privileges.</p> </note>"
              }
            ]
          }
        },
        "description": "A collection of settings specific to the problem type used to configure an AutoML job V2. There must be one and only one config of the following type."
      },
      "ImageClassificationJobConfig": {
        "type": "object",
        "properties": {
          "CompletionCriteria": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLJobCompletionCriteria"
              },
              {
                "description": "How long a job is allowed to run, or how many candidates a job is allowed to generate."
              }
            ]
          }
        },
        "description": "Stores the configuration information for the image classification problem of an AutoML job V2."
      },
      "AutoMLJobCompletionCriteria": {
        "type": "object",
        "properties": {
          "MaxCandidates": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxCandidates"
              },
              {
                "description": "<p>The maximum number of times a training job is allowed to run.</p> <p>For text and image classification, as well as time-series forecasting problem types, the supported value is 1. For tabular problem types, the maximum value is 750.</p>"
              }
            ]
          },
          "MaxRuntimePerTrainingJobInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxRuntimePerTrainingJobInSeconds"
              },
              {
                "description": "<p>The maximum time, in seconds, that each training job executed inside hyperparameter tuning is allowed to run as part of a hyperparameter tuning job. For more information, see the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_StoppingCondition.html\">StoppingCondition</a> used by the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateHyperParameterTuningJob.html\">CreateHyperParameterTuningJob</a> action.</p> <p>For job V2s (jobs created by calling <code>CreateAutoMLJobV2</code>), this field controls the runtime of the job candidate.</p>"
              }
            ]
          },
          "MaxAutoMLJobRuntimeInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxAutoMLJobRuntimeInSeconds"
              },
              {
                "description": "<p>The maximum runtime, in seconds, an AutoML job has to complete.</p> <p>If an AutoML job exceeds the maximum runtime, the job is stopped automatically and its processing is ended gracefully. The AutoML job identifies the best model whose training was completed and marks it as the best-performing model. Any unfinished steps of the job, such as automatic one-click Autopilot model deployment, are not completed.</p>"
              }
            ]
          }
        },
        "description": "How long a job is allowed to run, or how many candidates a job is allowed to generate."
      },
      "MaxCandidates": {
        "type": "integer",
        "minimum": 1,
        "maximum": 750
      },
      "MaxRuntimePerTrainingJobInSeconds": {
        "type": "integer",
        "minimum": 1
      },
      "MaxAutoMLJobRuntimeInSeconds": {
        "type": "integer",
        "minimum": 1
      },
      "TextClassificationJobConfig": {
        "type": "object",
        "required": [
          "ContentColumn",
          "TargetLabelColumn"
        ],
        "properties": {
          "CompletionCriteria": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLJobCompletionCriteria"
              },
              {
                "description": "How long a job is allowed to run, or how many candidates a job is allowed to generate."
              }
            ]
          },
          "ContentColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/ContentColumn"
              },
              {
                "description": "The name of the column used to provide the sentences to be classified. It should not be the same as the target column."
              }
            ]
          },
          "TargetLabelColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetLabelColumn"
              },
              {
                "description": "The name of the column used to provide the class labels. It should not be same as the content column."
              }
            ]
          }
        },
        "description": "Stores the configuration information for the text classification problem of an AutoML job V2."
      },
      "ContentColumn": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "TargetLabelColumn": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "TabularJobConfig": {
        "type": "object",
        "required": [
          "TargetAttributeName"
        ],
        "properties": {
          "CandidateGenerationConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/CandidateGenerationConfig"
              },
              {
                "description": "The configuration information of how model candidates are generated."
              }
            ]
          },
          "CompletionCriteria": {
            "$ref": "#/$defs/AutoMLJobCompletionCriteria"
          },
          "FeatureSpecificationS3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "<p>A URL to the Amazon S3 data source containing selected features from the input data source to run an Autopilot job V2. You can input <code>FeatureAttributeNames</code> (optional) in JSON format as shown below: </p> <p> <code>{ \"FeatureAttributeNames\":[\"col1\", \"col2\", ...] }</code>.</p> <p>You can also specify the data type of the feature (optional) in the format shown below:</p> <p> <code>{ \"FeatureDataTypes\":{\"col1\":\"numeric\", \"col2\":\"categorical\" ... } }</code> </p> <note> <p>These column keys may not include the target column.</p> </note> <p>In ensembling mode, Autopilot only supports the following data types: <code>numeric</code>, <code>categorical</code>, <code>text</code>, and <code>datetime</code>. In HPO mode, Autopilot can support <code>numeric</code>, <code>categorical</code>, <code>text</code>, <code>datetime</code>, and <code>sequence</code>.</p> <p>If only <code>FeatureDataTypes</code> is provided, the column keys (<code>col1</code>, <code>col2</code>,..) should be a subset of the column names in the input data. </p> <p>If both <code>FeatureDataTypes</code> and <code>FeatureAttributeNames</code> are provided, then the column keys should be a subset of the column names provided in <code>FeatureAttributeNames</code>. </p> <p>The key name <code>FeatureAttributeNames</code> is fixed. The values listed in <code>[\"col1\", \"col2\", ...]</code> are case sensitive and should be a list of strings containing unique values that are a subset of the column names in the input data. The list of columns provided must not include the target column.</p>"
              }
            ]
          },
          "Mode": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLMode"
              },
              {
                "description": "<p>The method that Autopilot uses to train the data. You can either specify the mode manually or let Autopilot choose for you based on the dataset size by selecting <code>AUTO</code>. In <code>AUTO</code> mode, Autopilot chooses <code>ENSEMBLING</code> for datasets smaller than 100 MB, and <code>HYPERPARAMETER_TUNING</code> for larger ones.</p> <p>The <code>ENSEMBLING</code> mode uses a multi-stack ensemble model to predict classification and regression tasks directly from your dataset. This machine learning mode combines several base models to produce an optimal predictive model. It then uses a stacking ensemble method to combine predictions from contributing members. A multi-stack ensemble model can provide better performance over a single model by combining the predictive capabilities of multiple models. See <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-model-support-validation.html#autopilot-algorithm-support\">Autopilot algorithm support</a> for a list of algorithms supported by <code>ENSEMBLING</code> mode.</p> <p>The <code>HYPERPARAMETER_TUNING</code> (HPO) mode uses the best hyperparameters to train the best version of a model. HPO automatically selects an algorithm for the type of problem you want to solve. Then HPO finds the best hyperparameters according to your objective metric. See <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-model-support-validation.html#autopilot-algorithm-support\">Autopilot algorithm support</a> for a list of algorithms supported by <code>HYPERPARAMETER_TUNING</code> mode.</p>"
              }
            ]
          },
          "GenerateCandidateDefinitionsOnly": {
            "allOf": [
              {
                "$ref": "#/$defs/GenerateCandidateDefinitionsOnly"
              },
              {
                "description": "Generates possible candidates without training the models. A model candidate is a combination of data preprocessors, algorithms, and algorithm parameter settings."
              }
            ]
          },
          "ProblemType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProblemType"
              },
              {
                "description": "<p>The type of supervised learning problem available for the model candidates of the AutoML job V2. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-datasets-problem-types.html#autopilot-problem-types\"> Amazon SageMaker Autopilot problem types</a>.</p> <note> <p>You must either specify the type of supervised learning problem in <code>ProblemType</code> and provide the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateAutoMLJobV2.html#sagemaker-CreateAutoMLJobV2-request-AutoMLJobObjective\">AutoMLJobObjective</a> metric, or none at all.</p> </note>"
              }
            ]
          },
          "TargetAttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetAttributeName"
              },
              {
                "description": "The name of the target variable in supervised learning, usually represented by 'y'."
              }
            ]
          },
          "SampleWeightAttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/SampleWeightAttributeName"
              },
              {
                "description": "<p>If specified, this column name indicates which column of the dataset should be treated as sample weights for use by the objective metric during the training, evaluation, and the selection of the best model. This column is not considered as a predictive feature. For more information on Autopilot metrics, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-metrics-validation.html\">Metrics and validation</a>.</p> <p>Sample weights should be numeric, non-negative, with larger values indicating which rows are more important than others. Data points that have invalid or no weight value are excluded.</p> <p>Support for sample weights is available in <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLAlgorithmConfig.html\">Ensembling</a> mode only.</p>"
              }
            ]
          }
        },
        "description": "The collection of settings used by an AutoML job V2 for the <code>TABULAR</code> problem type."
      },
      "CandidateGenerationConfig": {
        "type": "object",
        "properties": {
          "AlgorithmsConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLAlgorithmsConfig"
              },
              {
                "description": "<p>Stores the configuration information for the selection of algorithms used to train model candidates on tabular data.</p> <p>The list of available algorithms to choose from depends on the training mode set in <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_TabularJobConfig.html\"> <code>TabularJobConfig.Mode</code> </a>.</p> <ul> <li> <p> <code>AlgorithmsConfig</code> should not be set in <code>AUTO</code> training mode.</p> </li> <li> <p>When <code>AlgorithmsConfig</code> is provided, one <code>AutoMLAlgorithms</code> attribute must be set and one only.</p> <p>If the list of algorithms provided as values for <code>AutoMLAlgorithms</code> is empty, <code>CandidateGenerationConfig</code> uses the full set of algorithms for the given training mode.</p> </li> <li> <p>When <code>AlgorithmsConfig</code> is not provided, <code>CandidateGenerationConfig</code> uses the full set of algorithms for the given training mode.</p> </li> </ul> <p>For the list of all algorithms per problem type and training mode, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLAlgorithmConfig.html\"> AutoMLAlgorithmConfig</a>.</p> <p>For more information on each algorithm, see the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-model-support-validation.html#autopilot-algorithm-support\">Algorithm support</a> section in Autopilot developer guide.</p>"
              }
            ]
          }
        },
        "description": "Stores the configuration information for how model candidates are generated using an AutoML job V2."
      },
      "AutoMLAlgorithmsConfig": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AutoMLAlgorithmConfig"
        },
        "maxItems": 1
      },
      "AutoMLAlgorithmConfig": {
        "type": "object",
        "required": [
          "AutoMLAlgorithms"
        ],
        "properties": {
          "AutoMLAlgorithms": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLAlgorithms"
              },
              {
                "description": "<p>The selection of algorithms run on a dataset to train the model candidates of an Autopilot job. </p> <note> <p>Selected algorithms must belong to the list corresponding to the training mode set in <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLJobConfig.html#sagemaker-Type-AutoMLJobConfig-Mode\">AutoMLJobConfig.Mode</a> (<code>ENSEMBLING</code> or <code>HYPERPARAMETER_TUNING</code>). Choose a minimum of 1 algorithm. </p> </note> <ul> <li> <p>In <code>ENSEMBLING</code> mode:</p> <ul> <li> <p>\"catboost\"</p> </li> <li> <p>\"extra-trees\"</p> </li> <li> <p>\"fastai\"</p> </li> <li> <p>\"lightgbm\"</p> </li> <li> <p>\"linear-learner\"</p> </li> <li> <p>\"nn-torch\"</p> </li> <li> <p>\"randomforest\"</p> </li> <li> <p>\"xgboost\"</p> </li> </ul> </li> <li> <p>In <code>HYPERPARAMETER_TUNING</code> mode:</p> <ul> <li> <p>\"linear-learner\"</p> </li> <li> <p>\"mlp\"</p> </li> <li> <p>\"xgboost\"</p> </li> </ul> </li> </ul>"
              }
            ]
          }
        },
        "description": "The collection of algorithms run on a dataset for training the model candidates of an Autopilot job."
      },
      "AutoMLAlgorithms": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AutoMLAlgorithm"
        },
        "maxItems": 11
      },
      "AutoMLAlgorithm": {
        "type": "string",
        "enum": [
          "xgboost",
          "linear-learner",
          "mlp",
          "lightgbm",
          "catboost",
          "randomforest",
          "extra-trees",
          "nn-torch",
          "fastai"
        ]
      },
      "AutoMLMode": {
        "type": "string",
        "enum": [
          "AUTO",
          "ENSEMBLING",
          "HYPERPARAMETER_TUNING"
        ]
      },
      "GenerateCandidateDefinitionsOnly": {
        "type": "boolean"
      },
      "ProblemType": {
        "type": "string",
        "enum": [
          "BinaryClassification",
          "MulticlassClassification",
          "Regression"
        ]
      },
      "TargetAttributeName": {
        "type": "string",
        "minLength": 1
      },
      "SampleWeightAttributeName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_-]+$",
        "minLength": 1,
        "maxLength": 256
      },
      "TimeSeriesForecastingJobConfig": {
        "type": "object",
        "required": [
          "ForecastFrequency",
          "ForecastHorizon",
          "TimeSeriesConfig"
        ],
        "properties": {
          "FeatureSpecificationS3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "<p>A URL to the Amazon S3 data source containing additional selected features that complement the target, itemID, timestamp, and grouped columns set in <code>TimeSeriesConfig</code>. When not provided, the AutoML job V2 includes all the columns from the original dataset that are not already declared in <code>TimeSeriesConfig</code>. If provided, the AutoML job V2 only considers these additional columns as a complement to the ones declared in <code>TimeSeriesConfig</code>.</p> <p>You can input <code>FeatureAttributeNames</code> (optional) in JSON format as shown below: </p> <p> <code>{ \"FeatureAttributeNames\":[\"col1\", \"col2\", ...] }</code>.</p> <p>You can also specify the data type of the feature (optional) in the format shown below:</p> <p> <code>{ \"FeatureDataTypes\":{\"col1\":\"numeric\", \"col2\":\"categorical\" ... } }</code> </p> <p>Autopilot supports the following data types: <code>numeric</code>, <code>categorical</code>, <code>text</code>, and <code>datetime</code>.</p> <note> <p>These column keys must not include any column set in <code>TimeSeriesConfig</code>.</p> </note>"
              }
            ]
          },
          "CompletionCriteria": {
            "$ref": "#/$defs/AutoMLJobCompletionCriteria"
          },
          "ForecastFrequency": {
            "allOf": [
              {
                "$ref": "#/$defs/ForecastFrequency"
              },
              {
                "description": "<p>The frequency of predictions in a forecast.</p> <p>Valid intervals are an integer followed by Y (Year), M (Month), W (Week), D (Day), H (Hour), and min (Minute). For example, <code>1D</code> indicates every day and <code>15min</code> indicates every 15 minutes. The value of a frequency must not overlap with the next larger frequency. For example, you must use a frequency of <code>1H</code> instead of <code>60min</code>.</p> <p>The valid values for each frequency are the following:</p> <ul> <li> <p>Minute - 1-59</p> </li> <li> <p>Hour - 1-23</p> </li> <li> <p>Day - 1-6</p> </li> <li> <p>Week - 1-4</p> </li> <li> <p>Month - 1-11</p> </li> <li> <p>Year - 1</p> </li> </ul>"
              }
            ]
          },
          "ForecastHorizon": {
            "allOf": [
              {
                "$ref": "#/$defs/ForecastHorizon"
              },
              {
                "description": "The number of time-steps that the model predicts. The forecast horizon is also called the prediction length. The maximum forecast horizon is the lesser of 500 time-steps or 1/4 of the time-steps in the dataset."
              }
            ]
          },
          "ForecastQuantiles": {
            "allOf": [
              {
                "$ref": "#/$defs/ForecastQuantiles"
              },
              {
                "description": "The quantiles used to train the model for forecasts at a specified quantile. You can specify quantiles from <code>0.01</code> (p1) to <code>0.99</code> (p99), by increments of 0.01 or higher. Up to five forecast quantiles can be specified. When <code>ForecastQuantiles</code> is not provided, the AutoML job uses the quantiles p10, p50, and p90 as default."
              }
            ]
          },
          "Transformations": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeSeriesTransformations"
              },
              {
                "description": "The transformations modifying specific attributes of the time-series, such as filling strategies for missing values."
              }
            ]
          },
          "TimeSeriesConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeSeriesConfig"
              },
              {
                "description": "The collection of components that defines the time-series."
              }
            ]
          }
        },
        "description": "<p>The collection of settings used by an AutoML job V2 for the time-series forecasting problem type.</p> <note> <p>The <code>TimeSeriesForecastingJobConfig</code> problem type is only available in private beta. Contact Amazon Web Services Support or your account manager to learn more about access privileges.</p> </note>"
      },
      "ForecastFrequency": {
        "type": "string",
        "pattern": "^1Y|Y|([1-9]|1[0-1])M|M|[1-4]W|W|[1-6]D|D|([1-9]|1[0-9]|2[0-3])H|H|([1-9]|[1-5][0-9])min$",
        "minLength": 1,
        "maxLength": 5
      },
      "ForecastHorizon": {
        "type": "integer",
        "minimum": 1
      },
      "ForecastQuantiles": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ForecastQuantile"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "ForecastQuantile": {
        "type": "string",
        "pattern": "(^p[1-9]\\d?$)",
        "minLength": 2,
        "maxLength": 4
      },
      "TimeSeriesTransformations": {
        "type": "object",
        "properties": {
          "Filling": {
            "allOf": [
              {
                "$ref": "#/$defs/FillingTransformations"
              },
              {
                "description": "<p>A key value pair defining the filling method for a column, where the key is the column name and the value is an object which defines the filling logic. You can specify multiple filling methods for a single column.</p> <p>The supported filling methods and their corresponding options are:</p> <ul> <li> <p> <code>frontfill</code>: <code>none</code> (Supported only for target column)</p> </li> <li> <p> <code>middlefill</code>: <code>zero</code>, <code>value</code>, <code>median</code>, <code>mean</code>, <code>min</code>, <code>max</code> </p> </li> <li> <p> <code>backfill</code>: <code>zero</code>, <code>value</code>, <code>median</code>, <code>mean</code>, <code>min</code>, <code>max</code> </p> </li> <li> <p> <code>futurefill</code>: <code>zero</code>, <code>value</code>, <code>median</code>, <code>mean</code>, <code>min</code>, <code>max</code> </p> </li> </ul> <p>To set a filling method to a specific value, set the fill parameter to the chosen filling method value (for example <code>\"backfill\" : \"value\"</code>), and define the filling value in an additional parameter prefixed with \"_value\". For example, to set <code>backfill</code> to a value of <code>2</code>, you must include two parameters: <code>\"backfill\": \"value\"</code> and <code>\"backfill_value\":\"2\"</code>.</p>"
              }
            ]
          },
          "Aggregation": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationTransformations"
              },
              {
                "description": "<p>A key value pair defining the aggregation method for a column, where the key is the column name and the value is the aggregation method.</p> <p>The supported aggregation methods are <code>sum</code> (default), <code>avg</code>, <code>first</code>, <code>min</code>, <code>max</code>.</p> <note> <p>Aggregation is only supported for the target column.</p> </note>"
              }
            ]
          }
        },
        "description": "Transformations allowed on the dataset. Supported transformations are <code>Filling</code> and <code>Aggregation</code>. <code>Filling</code> specifies how to add values to missing values in the dataset. <code>Aggregation</code> defines how to aggregate data that does not align with forecast frequency."
      },
      "FillingTransformations": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/FillingTransformationMap"
        }
      },
      "FillingTransformationMap": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 6,
        "additionalProperties": {
          "$ref": "#/$defs/FillingTransformationValue"
        }
      },
      "FillingTransformationValue": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\_\\-]+$",
        "minLength": 1,
        "maxLength": 256
      },
      "AggregationTransformations": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/AggregationTransformationValue"
        }
      },
      "AggregationTransformationValue": {
        "type": "string",
        "enum": [
          "sum",
          "avg",
          "first",
          "min",
          "max"
        ]
      },
      "TimeSeriesConfig": {
        "type": "object",
        "required": [
          "TargetAttributeName",
          "TimestampAttributeName",
          "ItemIdentifierAttributeName"
        ],
        "properties": {
          "TargetAttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetAttributeName"
              },
              {
                "description": "The name of the column representing the target variable that you want to predict for each item in your dataset. The data type of the target variable must be numerical."
              }
            ]
          },
          "TimestampAttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampAttributeName"
              },
              {
                "description": "The name of the column indicating a point in time at which the target value of a given item is recorded."
              }
            ]
          },
          "ItemIdentifierAttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemIdentifierAttributeName"
              },
              {
                "description": "The name of the column that represents the set of item identifiers for which you want to predict the target value."
              }
            ]
          },
          "GroupingAttributeNames": {
            "allOf": [
              {
                "$ref": "#/$defs/GroupingAttributeNames"
              },
              {
                "description": "A set of columns names that can be grouped with the item identifier column to create a composite key for which a target value is predicted."
              }
            ]
          }
        },
        "description": "The collection of components that defines the time-series."
      },
      "TimestampAttributeName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "ItemIdentifierAttributeName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "GroupingAttributeNames": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GroupingAttributeName"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "GroupingAttributeName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
        "minLength": 20,
        "maxLength": 2048
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      },
      "AutoMLSecurityConfig": {
        "type": "object",
        "properties": {
          "VolumeKmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "The key used to encrypt stored data."
              }
            ]
          },
          "EnableInterContainerTrafficEncryption": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Whether to use traffic encryption between the container layers."
              }
            ]
          },
          "VpcConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcConfig"
              },
              {
                "description": "The VPC configuration."
              }
            ]
          }
        },
        "description": "Security options."
      },
      "Boolean": {
        "type": "boolean"
      },
      "VpcConfig": {
        "type": "object",
        "required": [
          "SecurityGroupIds",
          "Subnets"
        ],
        "properties": {
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcSecurityGroupIds"
              },
              {
                "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field."
              }
            ]
          },
          "Subnets": {
            "allOf": [
              {
                "$ref": "#/$defs/Subnets"
              },
              {
                "description": "The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/instance-types-az.html\">Supported Instance Types and Availability Zones</a>."
              }
            ]
          }
        },
        "description": "Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html\">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html\">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. "
      },
      "VpcSecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SecurityGroupId"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "SecurityGroupId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "Subnets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetId"
        },
        "minItems": 1,
        "maxItems": 16
      },
      "SubnetId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "AutoMLJobObjective": {
        "type": "object",
        "required": [
          "MetricName"
        ],
        "properties": {
          "MetricName": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLMetricEnum"
              },
              {
                "description": "<p>The name of the objective metric used to measure the predictive quality of a machine learning system. During training, the model's parameters are updated iteratively to optimize its performance based on the feedback provided by the objective metric when evaluating the model on the validation dataset.</p> <p>For the list of all available metrics supported by Autopilot, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-metrics-validation.html#autopilot-metrics\">Autopilot metrics</a>.</p> <p>If you do not specify a metric explicitly, the default behavior is to automatically use:</p> <ul> <li> <p>For tabular problem types:</p> <ul> <li> <p>Regression: <code>MSE</code>.</p> </li> <li> <p>Binary classification: <code>F1</code>.</p> </li> <li> <p>Multiclass classification: <code>Accuracy</code>.</p> </li> </ul> </li> <li> <p>For image or text classification problem types: <code>Accuracy</code> </p> </li> <li> <p>For time-series forecasting problem types: <code>AverageWeightedQuantileLoss</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Specifies a metric to minimize or maximize as the objective of a job."
      },
      "AutoMLMetricEnum": {
        "type": "string",
        "enum": [
          "Accuracy",
          "MSE",
          "F1",
          "F1macro",
          "AUC",
          "RMSE",
          "MAE",
          "R2",
          "BalancedAccuracy",
          "Precision",
          "PrecisionMacro",
          "Recall",
          "RecallMacro",
          "MAPE",
          "MASE",
          "WAPE",
          "AverageWeightedQuantileLoss"
        ]
      },
      "ModelDeployConfig": {
        "type": "object",
        "properties": {
          "AutoGenerateEndpointName": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoGenerateEndpointName"
              },
              {
                "description": "<p>Set to <code>True</code> to automatically generate an endpoint name for a one-click Autopilot model deployment; set to <code>False</code> otherwise. The default value is <code>False</code>.</p> <note> <p>If you set <code>AutoGenerateEndpointName</code> to <code>True</code>, do not specify the <code>EndpointName</code>; otherwise a 400 error is thrown.</p> </note>"
              }
            ]
          },
          "EndpointName": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointName"
              },
              {
                "description": "<p>Specifies the endpoint name to use for a one-click Autopilot model deployment if the endpoint name is not generated automatically.</p> <note> <p>Specify the <code>EndpointName</code> if and only if you set <code>AutoGenerateEndpointName</code> to <code>False</code>; otherwise a 400 error is thrown.</p> </note>"
              }
            ]
          }
        },
        "description": "Specifies how to generate the endpoint name for an automatic one-click Autopilot model deployment."
      },
      "AutoGenerateEndpointName": {
        "type": "boolean"
      },
      "EndpointName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "AutoMLDataSplitConfig": {
        "type": "object",
        "properties": {
          "ValidationFraction": {
            "allOf": [
              {
                "$ref": "#/$defs/ValidationFraction"
              },
              {
                "description": "The validation fraction (optional) is a float that specifies the portion of the training dataset to be used for validation. The default value is 0.2, and values must be greater than 0 and less than 1. We recommend setting this value to be less than 0.5."
              }
            ]
          }
        },
        "description": "<p>This structure specifies how to split the data into train and validation datasets.</p> <p>The validation and training datasets must contain the same headers. For jobs created by calling <code>CreateAutoMLJob</code>, the validation dataset must be less than 2 GB in size.</p>"
      },
      "ValidationFraction": {
        "type": "number",
        "format": "float",
        "minimum": 0,
        "maximum": 1
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateAutoMLJobV2"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AutoMLJobArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
