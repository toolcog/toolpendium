{
  "name": "CreateInferenceExperiment",
  "description": "<p> Creates an inference experiment using the configurations specified in the request. </p> <p> Use this API to setup and schedule an experiment to compare model variants on a Amazon SageMaker inference endpoint. For more information about inference experiments, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/shadow-tests.html\">Shadow tests</a>. </p> <p> Amazon SageMaker begins your experiment at the scheduled time and routes traffic to your endpoint's model variants based on your specified configuration. </p> <p> While the experiment is in progress or after it has concluded, you can view metrics that compare your model variants. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/shadow-tests-view-monitor-edit.html\">View, monitor, and edit shadow tests</a>. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateInferenceExperiment"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateInferenceExperimentRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateInferenceExperimentRequest": {
        "type": "object",
        "required": [
          "Name",
          "Type",
          "RoleArn",
          "EndpointName",
          "ModelVariants",
          "ShadowModeConfig"
        ],
        "title": "CreateInferenceExperimentRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/InferenceExperimentName"
              },
              {
                "description": "The name for the inference experiment."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/InferenceExperimentType"
              },
              {
                "description": "<p> The type of the inference experiment that you want to run. The following types of experiments are possible: </p> <ul> <li> <p> <code>ShadowMode</code>: You can use this type to validate a shadow variant. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/shadow-tests.html\">Shadow tests</a>. </p> </li> </ul>"
              }
            ]
          },
          "Schedule": {
            "allOf": [
              {
                "$ref": "#/$defs/InferenceExperimentSchedule"
              },
              {
                "description": " The duration for which you want the inference experiment to run. If you don't specify this field, the experiment automatically starts immediately upon creation and concludes after 7 days. "
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/InferenceExperimentDescription"
              },
              {
                "description": "A description for the inference experiment."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": " The ARN of the IAM role that Amazon SageMaker can assume to access model artifacts and container images, and manage Amazon SageMaker Inference endpoints for model deployment. "
              }
            ]
          },
          "EndpointName": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointName"
              },
              {
                "description": " The name of the Amazon SageMaker endpoint on which you want to run the inference experiment. "
              }
            ]
          },
          "ModelVariants": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelVariantConfigList"
              },
              {
                "description": " An array of <code>ModelVariantConfig</code> objects. There is one for each variant in the inference experiment. Each <code>ModelVariantConfig</code> object in the array describes the infrastructure configuration for the corresponding variant. "
              }
            ]
          },
          "DataStorageConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/InferenceExperimentDataStorageConfig"
              },
              {
                "description": "<p> The Amazon S3 location and configuration for storing inference request and response data. </p> <p> This is an optional parameter that you can use for data capture. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-data-capture.html\">Capture data</a>. </p>"
              }
            ]
          },
          "ShadowModeConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ShadowModeConfig"
              },
              {
                "description": " The configuration of <code>ShadowMode</code> inference experiment type. Use this field to specify a production variant which takes all the inference requests, and a shadow variant to which Amazon SageMaker replicates a percentage of the inference requests. For the shadow variant also specify the percentage of requests that Amazon SageMaker replicates. "
              }
            ]
          },
          "KmsKey": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "<p> The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint. The <code>KmsKey</code> can be any of the following formats: </p> <ul> <li> <p>KMS key ID</p> <p> <code>\"1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS key</p> <p> <code>\"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"</code> </p> </li> <li> <p>KMS key Alias</p> <p> <code>\"alias/ExampleAlias\"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS key Alias</p> <p> <code>\"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"</code> </p> </li> </ul> <p> If you use a KMS key ID or an alias of your KMS key, the Amazon SageMaker execution role must include permissions to call <code>kms:Encrypt</code>. If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account. Amazon SageMaker uses server-side encryption with KMS managed keys for <code>OutputDataConfig</code>. If you use a bucket policy with an <code>s3:PutObject</code> permission that only allows objects with server-side encryption, set the condition key of <code>s3:x-amz-server-side-encryption</code> to <code>\"aws:kms\"</code>. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">KMS managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p> The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateEndpoint</code> and <code>UpdateEndpoint</code> requests. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html\">Using Key Policies in Amazon Web Services KMS</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>. </p>"
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": " Array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href=\"https://docs.aws.amazon.com/ARG/latest/userguide/tagging.html\">Tagging your Amazon Web Services Resources</a>. "
              }
            ]
          }
        }
      },
      "InferenceExperimentName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,119}",
        "minLength": 1,
        "maxLength": 120
      },
      "InferenceExperimentType": {
        "type": "string",
        "enum": [
          "ShadowMode"
        ]
      },
      "InferenceExperimentSchedule": {
        "type": "object",
        "properties": {
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The timestamp at which the inference experiment started or will start."
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The timestamp at which the inference experiment ended or will end."
              }
            ]
          }
        },
        "description": "<p>The start and end times of an inference experiment.</p> <p>The maximum duration that you can set for an inference experiment is 30 days.</p>"
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "InferenceExperimentDescription": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 1024
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
        "minLength": 20,
        "maxLength": 2048
      },
      "EndpointName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "ModelVariantConfigList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ModelVariantConfig"
        },
        "minItems": 1,
        "maxItems": 2
      },
      "ModelVariantConfig": {
        "type": "object",
        "required": [
          "ModelName",
          "VariantName",
          "InfrastructureConfig"
        ],
        "properties": {
          "ModelName": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelName"
              },
              {
                "description": "The name of the Amazon SageMaker Model entity."
              }
            ]
          },
          "VariantName": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelVariantName"
              },
              {
                "description": "The name of the variant."
              }
            ]
          },
          "InfrastructureConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelInfrastructureConfig"
              },
              {
                "description": "The configuration for the infrastructure that the model will be deployed to."
              }
            ]
          }
        },
        "description": "Contains information about the deployment options of a model."
      },
      "ModelName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "maxLength": 63
      },
      "ModelVariantName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]([\\-a-zA-Z0-9]*[a-zA-Z0-9])?",
        "maxLength": 63
      },
      "ModelInfrastructureConfig": {
        "type": "object",
        "required": [
          "InfrastructureType",
          "RealTimeInferenceConfig"
        ],
        "properties": {
          "InfrastructureType": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelInfrastructureType"
              },
              {
                "description": "<p>The inference option to which to deploy your model. Possible values are the following:</p> <ul> <li> <p> <code>RealTime</code>: Deploy to real-time inference.</p> </li> </ul>"
              }
            ]
          },
          "RealTimeInferenceConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/RealTimeInferenceConfig"
              },
              {
                "description": "The infrastructure configuration for deploying the model to real-time inference."
              }
            ]
          }
        },
        "description": "The configuration for the infrastructure that the model will be deployed to."
      },
      "ModelInfrastructureType": {
        "type": "string",
        "enum": [
          "RealTimeInference"
        ]
      },
      "RealTimeInferenceConfig": {
        "type": "object",
        "required": [
          "InstanceType",
          "InstanceCount"
        ],
        "properties": {
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceType"
              },
              {
                "description": "The instance type the model is deployed to."
              }
            ]
          },
          "InstanceCount": {
            "allOf": [
              {
                "$ref": "#/$defs/TaskCount"
              },
              {
                "description": "The number of instances of the type specified by <code>InstanceType</code>."
              }
            ]
          }
        },
        "description": "The infrastructure configuration for deploying the model to a real-time inference endpoint."
      },
      "InstanceType": {
        "type": "string",
        "enum": [
          "ml.t2.medium",
          "ml.t2.large",
          "ml.t2.xlarge",
          "ml.t2.2xlarge",
          "ml.t3.medium",
          "ml.t3.large",
          "ml.t3.xlarge",
          "ml.t3.2xlarge",
          "ml.m4.xlarge",
          "ml.m4.2xlarge",
          "ml.m4.4xlarge",
          "ml.m4.10xlarge",
          "ml.m4.16xlarge",
          "ml.m5.xlarge",
          "ml.m5.2xlarge",
          "ml.m5.4xlarge",
          "ml.m5.12xlarge",
          "ml.m5.24xlarge",
          "ml.m5d.large",
          "ml.m5d.xlarge",
          "ml.m5d.2xlarge",
          "ml.m5d.4xlarge",
          "ml.m5d.8xlarge",
          "ml.m5d.12xlarge",
          "ml.m5d.16xlarge",
          "ml.m5d.24xlarge",
          "ml.c4.xlarge",
          "ml.c4.2xlarge",
          "ml.c4.4xlarge",
          "ml.c4.8xlarge",
          "ml.c5.xlarge",
          "ml.c5.2xlarge",
          "ml.c5.4xlarge",
          "ml.c5.9xlarge",
          "ml.c5.18xlarge",
          "ml.c5d.xlarge",
          "ml.c5d.2xlarge",
          "ml.c5d.4xlarge",
          "ml.c5d.9xlarge",
          "ml.c5d.18xlarge",
          "ml.p2.xlarge",
          "ml.p2.8xlarge",
          "ml.p2.16xlarge",
          "ml.p3.2xlarge",
          "ml.p3.8xlarge",
          "ml.p3.16xlarge",
          "ml.p3dn.24xlarge",
          "ml.g4dn.xlarge",
          "ml.g4dn.2xlarge",
          "ml.g4dn.4xlarge",
          "ml.g4dn.8xlarge",
          "ml.g4dn.12xlarge",
          "ml.g4dn.16xlarge",
          "ml.r5.large",
          "ml.r5.xlarge",
          "ml.r5.2xlarge",
          "ml.r5.4xlarge",
          "ml.r5.8xlarge",
          "ml.r5.12xlarge",
          "ml.r5.16xlarge",
          "ml.r5.24xlarge",
          "ml.g5.xlarge",
          "ml.g5.2xlarge",
          "ml.g5.4xlarge",
          "ml.g5.8xlarge",
          "ml.g5.16xlarge",
          "ml.g5.12xlarge",
          "ml.g5.24xlarge",
          "ml.g5.48xlarge",
          "ml.inf1.xlarge",
          "ml.inf1.2xlarge",
          "ml.inf1.6xlarge",
          "ml.inf1.24xlarge",
          "ml.p4d.24xlarge",
          "ml.p4de.24xlarge"
        ]
      },
      "TaskCount": {
        "type": "integer",
        "minimum": 0
      },
      "InferenceExperimentDataStorageConfig": {
        "type": "object",
        "required": [
          "Destination"
        ],
        "properties": {
          "Destination": {
            "allOf": [
              {
                "$ref": "#/$defs/DestinationS3Uri"
              },
              {
                "description": "The Amazon S3 bucket where the inference request and response data is stored. "
              }
            ]
          },
          "KmsKey": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": " The Amazon Web Services Key Management Service key that Amazon SageMaker uses to encrypt captured data at rest using Amazon S3 server-side encryption. "
              }
            ]
          },
          "ContentType": {
            "$ref": "#/$defs/CaptureContentTypeHeader"
          }
        },
        "description": "The Amazon S3 location and configuration for storing inference request and response data."
      },
      "DestinationS3Uri": {
        "type": "string",
        "pattern": "^(https|s3)://([^/])/?(.*)$",
        "maxLength": 512
      },
      "KmsKeyId": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 2048
      },
      "CaptureContentTypeHeader": {
        "type": "object",
        "properties": {
          "CsvContentTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/CsvContentTypes"
              },
              {
                "description": "The list of all content type headers that SageMaker will treat as CSV and capture accordingly."
              }
            ]
          },
          "JsonContentTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/JsonContentTypes"
              },
              {
                "description": "The list of all content type headers that SageMaker will treat as JSON and capture accordingly."
              }
            ]
          }
        },
        "description": "Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data."
      },
      "CsvContentTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CsvContentType"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "CsvContentType": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*\\/[a-zA-Z0-9](-*[a-zA-Z0-9.])*",
        "minLength": 1,
        "maxLength": 256
      },
      "JsonContentTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/JsonContentType"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "JsonContentType": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*\\/[a-zA-Z0-9](-*[a-zA-Z0-9.])*",
        "minLength": 1,
        "maxLength": 256
      },
      "ShadowModeConfig": {
        "type": "object",
        "required": [
          "SourceModelVariantName",
          "ShadowModelVariants"
        ],
        "properties": {
          "SourceModelVariantName": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelVariantName"
              },
              {
                "description": " The name of the production variant, which takes all the inference requests. "
              }
            ]
          },
          "ShadowModelVariants": {
            "allOf": [
              {
                "$ref": "#/$defs/ShadowModelVariantConfigList"
              },
              {
                "description": "List of shadow variant configurations."
              }
            ]
          }
        },
        "description": " The configuration of <code>ShadowMode</code> inference experiment type, which specifies a production variant to take all the inference requests, and a shadow variant to which Amazon SageMaker replicates a percentage of the inference requests. For the shadow variant it also specifies the percentage of requests that Amazon SageMaker replicates. "
      },
      "ShadowModelVariantConfigList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ShadowModelVariantConfig"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "ShadowModelVariantConfig": {
        "type": "object",
        "required": [
          "ShadowModelVariantName",
          "SamplingPercentage"
        ],
        "properties": {
          "ShadowModelVariantName": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelVariantName"
              },
              {
                "description": "The name of the shadow variant."
              }
            ]
          },
          "SamplingPercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/Percentage"
              },
              {
                "description": " The percentage of inference requests that Amazon SageMaker replicates from the production variant to the shadow variant. "
              }
            ]
          }
        },
        "description": "The name and sampling percentage of a shadow variant."
      },
      "Percentage": {
        "type": "integer",
        "maximum": 100
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateInferenceExperiment"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**InferenceExperimentArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
