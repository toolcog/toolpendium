{
  "name": "CreateDomain",
  "description": "<p>Creates a <code>Domain</code> used by Amazon SageMaker Studio. A domain consists of an associated Amazon Elastic File System (EFS) volume, a list of authorized users, and a variety of security, application, policy, and Amazon Virtual Private Cloud (VPC) configurations. Users within a domain can share notebook files and other artifacts with each other.</p> <p> <b>EFS storage</b> </p> <p>When a domain is created, an EFS volume is created for use by all of the users within the domain. Each user receives a private home directory within the EFS volume for notebooks, Git repositories, and data files.</p> <p>SageMaker uses the Amazon Web Services Key Management Service (Amazon Web Services KMS) to encrypt the EFS volume attached to the domain with an Amazon Web Services managed key by default. For more control, you can specify a customer managed key. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/encryption-at-rest.html\">Protect Data at Rest Using Encryption</a>.</p> <p> <b>VPC configuration</b> </p> <p>All SageMaker Studio traffic between the domain and the EFS volume is through the specified VPC and subnets. For other Studio traffic, you can specify the <code>AppNetworkAccessType</code> parameter. <code>AppNetworkAccessType</code> corresponds to the network access type that you choose when you onboard to Studio. The following options are available:</p> <ul> <li> <p> <code>PublicInternetOnly</code> - Non-EFS traffic goes through a VPC managed by Amazon SageMaker, which allows internet access. This is the default value.</p> </li> <li> <p> <code>VpcOnly</code> - All Studio traffic is through the specified VPC and subnets. Internet access is disabled by default. To allow internet access, you must specify a NAT gateway.</p> <p>When internet access is disabled, you won't be able to run a Studio notebook or to train or host models unless your VPC has an interface endpoint to the SageMaker API and runtime or a NAT gateway and your security groups allow outbound connections.</p> </li> </ul> <important> <p>NFS traffic over TCP on port 2049 needs to be allowed in both inbound and outbound rules in order to launch a SageMaker Studio app successfully.</p> </important> <p>For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/studio-notebooks-and-internet-access.html\">Connect SageMaker Studio Notebooks to Resources in a VPC</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateDomain"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateDomainRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateDomainRequest": {
        "type": "object",
        "required": [
          "DomainName",
          "AuthMode",
          "DefaultUserSettings",
          "SubnetIds",
          "VpcId"
        ],
        "title": "CreateDomainRequest",
        "properties": {
          "DomainName": {
            "allOf": [
              {
                "$ref": "#/$defs/DomainName"
              },
              {
                "description": "A name for the domain."
              }
            ]
          },
          "AuthMode": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthMode"
              },
              {
                "description": "The mode of authentication that members use to access the domain."
              }
            ]
          },
          "DefaultUserSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/UserSettings"
              },
              {
                "description": "<p>The default settings to use to create a user profile when <code>UserSettings</code> isn't specified in the call to the <code>CreateUserProfile</code> API.</p> <p> <code>SecurityGroups</code> is aggregated when specified in both calls. For all other settings in <code>UserSettings</code>, the values specified in <code>CreateUserProfile</code> take precedence over those specified in <code>CreateDomain</code>.</p>"
              }
            ]
          },
          "SubnetIds": {
            "allOf": [
              {
                "$ref": "#/$defs/Subnets"
              },
              {
                "description": "The VPC subnets that Studio uses for communication."
              }
            ]
          },
          "VpcId": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcId"
              },
              {
                "description": "The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "<p>Tags to associated with the Domain. Each tag consists of a key and an optional value. Tag keys must be unique per resource. Tags are searchable using the <code>Search</code> API.</p> <p>Tags that you specify for the Domain are also added to all Apps that the Domain launches.</p>"
              }
            ]
          },
          "AppNetworkAccessType": {
            "allOf": [
              {
                "$ref": "#/$defs/AppNetworkAccessType"
              },
              {
                "description": "<p>Specifies the VPC used for non-EFS traffic. The default value is <code>PublicInternetOnly</code>.</p> <ul> <li> <p> <code>PublicInternetOnly</code> - Non-EFS traffic is through a VPC managed by Amazon SageMaker, which allows direct internet access</p> </li> <li> <p> <code>VpcOnly</code> - All Studio traffic is through the specified VPC and subnets</p> </li> </ul>"
              }
            ]
          },
          "HomeEfsFileSystemKmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "deprecated": true,
                "description": "Use <code>KmsKeyId</code>.This property is deprecated, use KmsKeyId instead."
              }
            ]
          },
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "SageMaker uses Amazon Web Services KMS to encrypt the EFS volume attached to the domain with an Amazon Web Services managed key by default. For more control, specify a customer managed key."
              }
            ]
          },
          "AppSecurityGroupManagement": {
            "allOf": [
              {
                "$ref": "#/$defs/AppSecurityGroupManagement"
              },
              {
                "description": "The entity that creates and manages the required security groups for inter-app communication in <code>VPCOnly</code> mode. Required when <code>CreateDomain.AppNetworkAccessType</code> is <code>VPCOnly</code> and <code>DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn</code> is provided. If setting up the domain for use with RStudio, this value must be set to <code>Service</code>."
              }
            ]
          },
          "DomainSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/DomainSettings"
              },
              {
                "description": "A collection of <code>Domain</code> settings."
              }
            ]
          },
          "DefaultSpaceSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultSpaceSettings"
              },
              {
                "description": "The default settings used to create a space."
              }
            ]
          }
        }
      },
      "DomainName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "AuthMode": {
        "type": "string",
        "enum": [
          "SSO",
          "IAM"
        ]
      },
      "UserSettings": {
        "type": "object",
        "properties": {
          "ExecutionRole": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The execution role for the user."
              }
            ]
          },
          "SecurityGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityGroupIds"
              },
              {
                "description": "<p>The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.</p> <p>Optional when the <code>CreateDomain.AppNetworkAccessType</code> parameter is set to <code>PublicInternetOnly</code>.</p> <p>Required when the <code>CreateDomain.AppNetworkAccessType</code> parameter is set to <code>VpcOnly</code>, unless specified as part of the <code>DefaultUserSettings</code> for the domain.</p> <p>Amazon SageMaker adds a security group to allow NFS traffic from SageMaker Studio. Therefore, the number of security groups that you can specify is one less than the maximum number shown.</p>"
              }
            ]
          },
          "SharingSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/SharingSettings"
              },
              {
                "description": "Specifies options for sharing SageMaker Studio notebooks."
              }
            ]
          },
          "JupyterServerAppSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/JupyterServerAppSettings"
              },
              {
                "description": "The Jupyter server's app settings."
              }
            ]
          },
          "KernelGatewayAppSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/KernelGatewayAppSettings"
              },
              {
                "description": "The kernel gateway app settings."
              }
            ]
          },
          "TensorBoardAppSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/TensorBoardAppSettings"
              },
              {
                "description": "The TensorBoard app settings."
              }
            ]
          },
          "RStudioServerProAppSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/RStudioServerProAppSettings"
              },
              {
                "description": "A collection of settings that configure user interaction with the <code>RStudioServerPro</code> app."
              }
            ]
          },
          "RSessionAppSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/RSessionAppSettings"
              },
              {
                "description": "A collection of settings that configure the <code>RSessionGateway</code> app."
              }
            ]
          },
          "CanvasAppSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/CanvasAppSettings"
              },
              {
                "description": "The Canvas app settings."
              }
            ]
          }
        },
        "description": "<p>A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the <code>CreateUserProfile</code> API is called, and as <code>DefaultUserSettings</code> when the <code>CreateDomain</code> API is called.</p> <p> <code>SecurityGroups</code> is aggregated when specified in both calls. For all other settings in <code>UserSettings</code>, the values specified in <code>CreateUserProfile</code> take precedence over those specified in <code>CreateDomain</code>.</p>"
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
        "minLength": 20,
        "maxLength": 2048
      },
      "SecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SecurityGroupId"
        },
        "maxItems": 5
      },
      "SecurityGroupId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "SharingSettings": {
        "type": "object",
        "properties": {
          "NotebookOutputOption": {
            "allOf": [
              {
                "$ref": "#/$defs/NotebookOutputOption"
              },
              {
                "description": "Whether to include the notebook cell output when sharing the notebook. The default is <code>Disabled</code>."
              }
            ]
          },
          "S3OutputPath": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "When <code>NotebookOutputOption</code> is <code>Allowed</code>, the Amazon S3 bucket used to store the shared notebook snapshots."
              }
            ]
          },
          "S3KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "When <code>NotebookOutputOption</code> is <code>Allowed</code>, the Amazon Web Services Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket."
              }
            ]
          }
        },
        "description": "Specifies options for sharing SageMaker Studio notebooks. These settings are specified as part of <code>DefaultUserSettings</code> when the <code>CreateDomain</code> API is called, and as part of <code>UserSettings</code> when the <code>CreateUserProfile</code> API is called. When <code>SharingSettings</code> is not specified, notebook sharing isn't allowed."
      },
      "NotebookOutputOption": {
        "type": "string",
        "enum": [
          "Allowed",
          "Disabled"
        ]
      },
      "S3Uri": {
        "type": "string",
        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "maxLength": 1024
      },
      "KmsKeyId": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 2048
      },
      "JupyterServerAppSettings": {
        "type": "object",
        "properties": {
          "DefaultResourceSpec": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceSpec"
              },
              {
                "description": "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterServer app. If you use the <code>LifecycleConfigArns</code> parameter, then this parameter is also required."
              }
            ]
          },
          "LifecycleConfigArns": {
            "allOf": [
              {
                "$ref": "#/$defs/LifecycleConfigArns"
              },
              {
                "description": "<p> The Amazon Resource Name (ARN) of the Lifecycle Configurations attached to the JupyterServerApp. If you use this parameter, the <code>DefaultResourceSpec</code> parameter is also required.</p> <note> <p>To remove a Lifecycle Config, you must set <code>LifecycleConfigArns</code> to an empty list.</p> </note>"
              }
            ]
          },
          "CodeRepositories": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeRepositories"
              },
              {
                "description": "A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application."
              }
            ]
          }
        },
        "description": "The JupyterServer app settings."
      },
      "ResourceSpec": {
        "type": "object",
        "properties": {
          "SageMakerImageArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageArn"
              },
              {
                "description": "The ARN of the SageMaker image that the image version belongs to."
              }
            ]
          },
          "SageMakerImageVersionArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageVersionArn"
              },
              {
                "description": "The ARN of the image version created on the instance."
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/AppInstanceType"
              },
              {
                "description": "<p>The instance type that the image version runs on.</p> <note> <p> <b>JupyterServer apps</b> only support the <code>system</code> value.</p> <p>For <b>KernelGateway apps</b>, the <code>system</code> value is translated to <code>ml.t3.medium</code>. KernelGateway apps also support all other values for available instance types.</p> </note>"
              }
            ]
          },
          "LifecycleConfigArn": {
            "allOf": [
              {
                "$ref": "#/$defs/StudioLifecycleConfigArn"
              },
              {
                "description": " The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource."
              }
            ]
          }
        },
        "description": "Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on."
      },
      "ImageArn": {
        "type": "string",
        "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
        "maxLength": 256
      },
      "ImageVersionArn": {
        "type": "string",
        "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
        "maxLength": 256
      },
      "AppInstanceType": {
        "type": "string",
        "enum": [
          "system",
          "ml.t3.micro",
          "ml.t3.small",
          "ml.t3.medium",
          "ml.t3.large",
          "ml.t3.xlarge",
          "ml.t3.2xlarge",
          "ml.m5.large",
          "ml.m5.xlarge",
          "ml.m5.2xlarge",
          "ml.m5.4xlarge",
          "ml.m5.8xlarge",
          "ml.m5.12xlarge",
          "ml.m5.16xlarge",
          "ml.m5.24xlarge",
          "ml.m5d.large",
          "ml.m5d.xlarge",
          "ml.m5d.2xlarge",
          "ml.m5d.4xlarge",
          "ml.m5d.8xlarge",
          "ml.m5d.12xlarge",
          "ml.m5d.16xlarge",
          "ml.m5d.24xlarge",
          "ml.c5.large",
          "ml.c5.xlarge",
          "ml.c5.2xlarge",
          "ml.c5.4xlarge",
          "ml.c5.9xlarge",
          "ml.c5.12xlarge",
          "ml.c5.18xlarge",
          "ml.c5.24xlarge",
          "ml.p3.2xlarge",
          "ml.p3.8xlarge",
          "ml.p3.16xlarge",
          "ml.p3dn.24xlarge",
          "ml.g4dn.xlarge",
          "ml.g4dn.2xlarge",
          "ml.g4dn.4xlarge",
          "ml.g4dn.8xlarge",
          "ml.g4dn.12xlarge",
          "ml.g4dn.16xlarge",
          "ml.r5.large",
          "ml.r5.xlarge",
          "ml.r5.2xlarge",
          "ml.r5.4xlarge",
          "ml.r5.8xlarge",
          "ml.r5.12xlarge",
          "ml.r5.16xlarge",
          "ml.r5.24xlarge",
          "ml.g5.xlarge",
          "ml.g5.2xlarge",
          "ml.g5.4xlarge",
          "ml.g5.8xlarge",
          "ml.g5.16xlarge",
          "ml.g5.12xlarge",
          "ml.g5.24xlarge",
          "ml.g5.48xlarge",
          "ml.geospatial.interactive",
          "ml.p4d.24xlarge",
          "ml.p4de.24xlarge"
        ]
      },
      "StudioLifecycleConfigArn": {
        "type": "string",
        "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
        "maxLength": 256
      },
      "LifecycleConfigArns": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StudioLifecycleConfigArn"
        }
      },
      "CodeRepositories": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CodeRepository"
        },
        "maxItems": 10
      },
      "CodeRepository": {
        "type": "object",
        "required": [
          "RepositoryUrl"
        ],
        "properties": {
          "RepositoryUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryUrl"
              },
              {
                "description": "The URL of the Git repository."
              }
            ]
          }
        },
        "description": "A Git repository that SageMaker automatically displays to users for cloning in the JupyterServer application."
      },
      "RepositoryUrl": {
        "type": "string",
        "pattern": "^https://([.\\-_a-zA-Z0-9]+/?){3,1016}$",
        "maxLength": 1024
      },
      "KernelGatewayAppSettings": {
        "type": "object",
        "properties": {
          "DefaultResourceSpec": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceSpec"
              },
              {
                "description": "<p>The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.</p> <note> <p>The Amazon SageMaker Studio UI does not use the default instance type value set here. The default instance type set here is used when Apps are created using the Amazon Web Services Command Line Interface or Amazon Web Services CloudFormation and the instance type parameter value is not passed.</p> </note>"
              }
            ]
          },
          "CustomImages": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomImages"
              },
              {
                "description": "A list of custom SageMaker images that are configured to run as a KernelGateway app."
              }
            ]
          },
          "LifecycleConfigArns": {
            "allOf": [
              {
                "$ref": "#/$defs/LifecycleConfigArns"
              },
              {
                "description": "<p> The Amazon Resource Name (ARN) of the Lifecycle Configurations attached to the the user profile or domain.</p> <note> <p>To remove a Lifecycle Config, you must set <code>LifecycleConfigArns</code> to an empty list.</p> </note>"
              }
            ]
          }
        },
        "description": "The KernelGateway app settings."
      },
      "CustomImages": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CustomImage"
        },
        "maxItems": 200
      },
      "CustomImage": {
        "type": "object",
        "required": [
          "ImageName",
          "AppImageConfigName"
        ],
        "properties": {
          "ImageName": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageName"
              },
              {
                "description": "The name of the CustomImage. Must be unique to your account."
              }
            ]
          },
          "ImageVersionNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageVersionNumber"
              },
              {
                "description": "The version number of the CustomImage."
              }
            ]
          },
          "AppImageConfigName": {
            "allOf": [
              {
                "$ref": "#/$defs/AppImageConfigName"
              },
              {
                "description": "The name of the AppImageConfig."
              }
            ]
          }
        },
        "description": "A custom SageMaker image. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html\">Bring your own SageMaker image</a>."
      },
      "ImageName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$",
        "minLength": 1,
        "maxLength": 63
      },
      "ImageVersionNumber": {
        "type": "integer",
        "minimum": 0
      },
      "AppImageConfigName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "TensorBoardAppSettings": {
        "type": "object",
        "properties": {
          "DefaultResourceSpec": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceSpec"
              },
              {
                "description": "The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance."
              }
            ]
          }
        },
        "description": "The TensorBoard app settings."
      },
      "RStudioServerProAppSettings": {
        "type": "object",
        "properties": {
          "AccessStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/RStudioServerProAccessStatus"
              },
              {
                "description": "Indicates whether the current user has access to the <code>RStudioServerPro</code> app."
              }
            ]
          },
          "UserGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/RStudioServerProUserGroup"
              },
              {
                "description": "The level of permissions that the user has within the <code>RStudioServerPro</code> app. This value defaults to `User`. The `Admin` value allows the user access to the RStudio Administrative Dashboard."
              }
            ]
          }
        },
        "description": "A collection of settings that configure user interaction with the <code>RStudioServerPro</code> app."
      },
      "RStudioServerProAccessStatus": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "RStudioServerProUserGroup": {
        "type": "string",
        "enum": [
          "R_STUDIO_ADMIN",
          "R_STUDIO_USER"
        ]
      },
      "RSessionAppSettings": {
        "type": "object",
        "properties": {
          "DefaultResourceSpec": {
            "$ref": "#/$defs/ResourceSpec"
          },
          "CustomImages": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomImages"
              },
              {
                "description": "A list of custom SageMaker images that are configured to run as a RSession app."
              }
            ]
          }
        },
        "description": "A collection of settings that apply to an <code>RSessionGateway</code> app."
      },
      "CanvasAppSettings": {
        "type": "object",
        "properties": {
          "TimeSeriesForecastingSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeSeriesForecastingSettings"
              },
              {
                "description": "Time series forecast settings for the Canvas application."
              }
            ]
          },
          "ModelRegisterSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelRegisterSettings"
              },
              {
                "description": "The model registry settings for the SageMaker Canvas application."
              }
            ]
          },
          "WorkspaceSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkspaceSettings"
              },
              {
                "description": "The workspace settings for the SageMaker Canvas application."
              }
            ]
          }
        },
        "description": "The SageMaker Canvas application settings."
      },
      "TimeSeriesForecastingSettings": {
        "type": "object",
        "properties": {
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/FeatureStatus"
              },
              {
                "description": "Describes whether time series forecasting is enabled or disabled in the Canvas application."
              }
            ]
          },
          "AmazonForecastRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The IAM role that Canvas passes to Amazon Forecast for time series forecasting. By default, Canvas uses the execution role specified in the <code>UserProfile</code> that launches the Canvas application. If an execution role is not specified in the <code>UserProfile</code>, Canvas uses the execution role specified in the Domain that owns the <code>UserProfile</code>. To allow time series forecasting, this IAM role should have the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-canvas.html#security-iam-awsmanpol-AmazonSageMakerCanvasForecastAccess\"> AmazonSageMakerCanvasForecastAccess</a> policy attached and <code>forecast.amazonaws.com</code> added in the trust relationship as a service principal."
              }
            ]
          }
        },
        "description": "Time series forecast settings for the SageMaker Canvas application."
      },
      "FeatureStatus": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "ModelRegisterSettings": {
        "type": "object",
        "properties": {
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/FeatureStatus"
              },
              {
                "description": "Describes whether the integration to the model registry is enabled or disabled in the Canvas application."
              }
            ]
          },
          "CrossAccountModelRegisterRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the SageMaker model registry account. Required only to register model versions created by a different SageMaker Canvas Amazon Web Services account than the Amazon Web Services account in which SageMaker model registry is set up."
              }
            ]
          }
        },
        "description": "The model registry settings for the SageMaker Canvas application."
      },
      "WorkspaceSettings": {
        "type": "object",
        "properties": {
          "S3ArtifactPath": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location."
              }
            ]
          },
          "S3KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket."
              }
            ]
          }
        },
        "description": "The workspace settings for the SageMaker Canvas application."
      },
      "Subnets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetId"
        },
        "minItems": 1,
        "maxItems": 16
      },
      "SubnetId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "VpcId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      },
      "AppNetworkAccessType": {
        "type": "string",
        "enum": [
          "PublicInternetOnly",
          "VpcOnly"
        ]
      },
      "AppSecurityGroupManagement": {
        "type": "string",
        "enum": [
          "Service",
          "Customer"
        ]
      },
      "DomainSettings": {
        "type": "object",
        "properties": {
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/DomainSecurityGroupIds"
              },
              {
                "description": "The security groups for the Amazon Virtual Private Cloud that the <code>Domain</code> uses for communication between Domain-level apps and user apps."
              }
            ]
          },
          "RStudioServerProDomainSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/RStudioServerProDomainSettings"
              },
              {
                "description": "A collection of settings that configure the <code>RStudioServerPro</code> Domain-level app."
              }
            ]
          },
          "ExecutionRoleIdentityConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ExecutionRoleIdentityConfig"
              },
              {
                "description": "The configuration for attaching a SageMaker user profile name to the execution role as a <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html\">sts:SourceIdentity key</a>."
              }
            ]
          }
        },
        "description": "A collection of settings that apply to the <code>SageMaker Domain</code>. These settings are specified through the <code>CreateDomain</code> API call."
      },
      "DomainSecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SecurityGroupId"
        },
        "maxItems": 3
      },
      "RStudioServerProDomainSettings": {
        "type": "object",
        "required": [
          "DomainExecutionRoleArn"
        ],
        "properties": {
          "DomainExecutionRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The ARN of the execution role for the <code>RStudioServerPro</code> Domain-level app."
              }
            ]
          },
          "RStudioConnectUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A URL pointing to an RStudio Connect server."
              }
            ]
          },
          "RStudioPackageManagerUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A URL pointing to an RStudio Package Manager server."
              }
            ]
          },
          "DefaultResourceSpec": {
            "$ref": "#/$defs/ResourceSpec"
          }
        },
        "description": "A collection of settings that configure the <code>RStudioServerPro</code> Domain-level app."
      },
      "String": {
        "type": "string"
      },
      "ExecutionRoleIdentityConfig": {
        "type": "string",
        "enum": [
          "USER_PROFILE_NAME",
          "DISABLED"
        ]
      },
      "DefaultSpaceSettings": {
        "type": "object",
        "properties": {
          "ExecutionRole": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The ARN of the execution role for the space."
              }
            ]
          },
          "SecurityGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityGroupIds"
              },
              {
                "description": "The security group IDs for the Amazon Virtual Private Cloud that the space uses for communication."
              }
            ]
          },
          "JupyterServerAppSettings": {
            "$ref": "#/$defs/JupyterServerAppSettings"
          },
          "KernelGatewayAppSettings": {
            "$ref": "#/$defs/KernelGatewayAppSettings"
          }
        },
        "description": "A collection of settings that apply to spaces created in the Domain."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateDomain"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**DomainArn**",
            "**Url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
