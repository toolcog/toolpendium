{
  "name": "ListAssociations",
  "description": "Lists the associations in your account and their properties.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.ListAssociations"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListAssociationsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListAssociationsRequest": {
        "type": "object",
        "title": "ListAssociationsRequest",
        "properties": {
          "SourceArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AssociationEntityArn"
              },
              {
                "description": "A filter that returns only associations with the specified source ARN."
              }
            ]
          },
          "DestinationArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AssociationEntityArn"
              },
              {
                "description": "A filter that returns only associations with the specified destination Amazon Resource Name (ARN)."
              }
            ]
          },
          "SourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "A filter that returns only associations with the specified source type."
              }
            ]
          },
          "DestinationType": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "A filter that returns only associations with the specified destination type."
              }
            ]
          },
          "AssociationType": {
            "allOf": [
              {
                "$ref": "#/$defs/AssociationEdgeType"
              },
              {
                "description": "A filter that returns only associations of the specified type."
              }
            ]
          },
          "CreatedAfter": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "A filter that returns only associations created on or after the specified time."
              }
            ]
          },
          "CreatedBefore": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "A filter that returns only associations created on or before the specified time."
              }
            ]
          },
          "SortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/SortAssociationsBy"
              },
              {
                "description": "The property used to sort results. The default value is <code>CreationTime</code>."
              }
            ]
          },
          "SortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The sort order. The default value is <code>Descending</code>."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "If the previous call to <code>ListAssociations</code> didn't return the full set of associations, the call returns a token for getting the next set of associations."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxResults"
              },
              {
                "description": "The maximum number of associations to return in the response. The default value is 10."
              }
            ]
          }
        }
      },
      "AssociationEntityArn": {
        "type": "string",
        "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:(experiment|experiment-trial-component|artifact|action|context)/.*",
        "maxLength": 256
      },
      "String256": {
        "type": "string",
        "maxLength": 256
      },
      "AssociationEdgeType": {
        "type": "string",
        "enum": [
          "ContributedTo",
          "AssociatedWith",
          "DerivedFrom",
          "Produced"
        ]
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "SortAssociationsBy": {
        "type": "string",
        "enum": [
          "SourceArn",
          "DestinationArn",
          "SourceType",
          "DestinationType",
          "CreationTime"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "Ascending",
          "Descending"
        ]
      },
      "NextToken": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 8192
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.ListAssociations{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AssociationSummaries**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
