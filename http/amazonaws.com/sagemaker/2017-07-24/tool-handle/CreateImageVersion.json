{
  "name": "CreateImageVersion",
  "description": "Creates a version of the SageMaker image specified by <code>ImageName</code>. The version represents the Amazon Elastic Container Registry (ECR) container image specified by <code>BaseImage</code>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateImageVersion"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateImageVersionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateImageVersionRequest": {
        "type": "object",
        "required": [
          "BaseImage",
          "ClientToken",
          "ImageName"
        ],
        "title": "CreateImageVersionRequest",
        "properties": {
          "BaseImage": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageBaseImage"
              },
              {
                "description": "<p>The registry path of the container image to use as the starting point for this version. The path is an Amazon Elastic Container Registry (ECR) URI in the following format:</p> <p> <code>&lt;acct-id&gt;.dkr.ecr.&lt;region&gt;.amazonaws.com/&lt;repo-name[:tag] or [@digest]&gt;</code> </p>"
              }
            ]
          },
          "ClientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientToken"
              },
              {
                "description": "A unique ID. If not specified, the Amazon Web Services CLI and Amazon Web Services SDKs, such as the SDK for Python (Boto3), add a unique value to the call."
              }
            ]
          },
          "ImageName": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageName"
              },
              {
                "description": "The <code>ImageName</code> of the <code>Image</code> to create a version of."
              }
            ]
          },
          "Aliases": {
            "allOf": [
              {
                "$ref": "#/$defs/SageMakerImageVersionAliases"
              },
              {
                "description": "A list of aliases created with the image version."
              }
            ]
          },
          "VendorGuidance": {
            "allOf": [
              {
                "$ref": "#/$defs/VendorGuidance"
              },
              {
                "description": "<p>The stability of the image version, specified by the maintainer.</p> <ul> <li> <p> <code>NOT_PROVIDED</code>: The maintainers did not provide a status for image version stability.</p> </li> <li> <p> <code>STABLE</code>: The image version is stable.</p> </li> <li> <p> <code>TO_BE_ARCHIVED</code>: The image version is set to be archived. Custom image versions that are set to be archived are automatically archived after three months.</p> </li> <li> <p> <code>ARCHIVED</code>: The image version is archived. Archived image versions are not searchable and are no longer actively supported. </p> </li> </ul>"
              }
            ]
          },
          "JobType": {
            "allOf": [
              {
                "$ref": "#/$defs/JobType"
              },
              {
                "description": "<p>Indicates SageMaker job type compatibility.</p> <ul> <li> <p> <code>TRAINING</code>: The image version is compatible with SageMaker training jobs.</p> </li> <li> <p> <code>INFERENCE</code>: The image version is compatible with SageMaker inference jobs.</p> </li> <li> <p> <code>NOTEBOOK_KERNEL</code>: The image version is compatible with SageMaker notebook kernels.</p> </li> </ul>"
              }
            ]
          },
          "MLFramework": {
            "allOf": [
              {
                "$ref": "#/$defs/MLFramework"
              },
              {
                "description": "The machine learning framework vended in the image version."
              }
            ]
          },
          "ProgrammingLang": {
            "allOf": [
              {
                "$ref": "#/$defs/ProgrammingLang"
              },
              {
                "description": "The supported programming language and its version."
              }
            ]
          },
          "Processor": {
            "allOf": [
              {
                "$ref": "#/$defs/Processor"
              },
              {
                "description": "<p>Indicates CPU or GPU compatibility.</p> <ul> <li> <p> <code>CPU</code>: The image version is compatible with CPU.</p> </li> <li> <p> <code>GPU</code>: The image version is compatible with GPU.</p> </li> </ul>"
              }
            ]
          },
          "Horovod": {
            "allOf": [
              {
                "$ref": "#/$defs/Horovod"
              },
              {
                "description": "Indicates Horovod compatibility."
              }
            ]
          },
          "ReleaseNotes": {
            "allOf": [
              {
                "$ref": "#/$defs/ReleaseNotes"
              },
              {
                "description": "The maintainer description of the image version."
              }
            ]
          }
        }
      },
      "ImageBaseImage": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 255
      },
      "ClientToken": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]+$",
        "minLength": 1,
        "maxLength": 36
      },
      "ImageName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$",
        "minLength": 1,
        "maxLength": 63
      },
      "SageMakerImageVersionAliases": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SageMakerImageVersionAlias"
        }
      },
      "SageMakerImageVersionAlias": {
        "type": "string",
        "pattern": "(?!^[.-])^([a-zA-Z0-9-_.]+)$",
        "minLength": 1,
        "maxLength": 128
      },
      "VendorGuidance": {
        "type": "string",
        "enum": [
          "NOT_PROVIDED",
          "STABLE",
          "TO_BE_ARCHIVED",
          "ARCHIVED"
        ]
      },
      "JobType": {
        "type": "string",
        "enum": [
          "TRAINING",
          "INFERENCE",
          "NOTEBOOK_KERNEL"
        ]
      },
      "MLFramework": {
        "type": "string",
        "pattern": "^[a-zA-Z]+ ?\\d+\\.\\d+(\\.\\d+)?$",
        "minLength": 1,
        "maxLength": 128
      },
      "ProgrammingLang": {
        "type": "string",
        "pattern": "^[a-zA-Z]+ ?\\d+\\.\\d+(\\.\\d+)?$",
        "minLength": 1,
        "maxLength": 128
      },
      "Processor": {
        "type": "string",
        "enum": [
          "CPU",
          "GPU"
        ]
      },
      "Horovod": {
        "type": "boolean"
      },
      "ReleaseNotes": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateImageVersion"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ImageVersionArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
