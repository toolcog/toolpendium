{
  "name": "ListModelMetadata",
  "description": "Lists the domain, framework, task, and model name of standard machine learning models found in common model zoos.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.ListModelMetadata"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListModelMetadataRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListModelMetadataRequest": {
        "type": "object",
        "title": "ListModelMetadataRequest",
        "properties": {
          "SearchExpression": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelMetadataSearchExpression"
              },
              {
                "description": "One or more filters that searches for the specified resource or resources in a search. All resource objects that satisfy the expression's condition are included in the search results. Specify the Framework, FrameworkVersion, Domain or Task to filter supported. Filter names and values are case-sensitive."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "If the response to a previous <code>ListModelMetadataResponse</code> request was truncated, the response includes a NextToken. To retrieve the next set of model metadata, use the token in the next request."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxResults"
              },
              {
                "description": "The maximum number of models to return in the response."
              }
            ]
          }
        }
      },
      "ModelMetadataSearchExpression": {
        "type": "object",
        "properties": {
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelMetadataFilters"
              },
              {
                "description": "A list of filter objects."
              }
            ]
          }
        },
        "description": "One or more filters that searches for the specified resource or resources in a search. All resource objects that satisfy the expression's condition are included in the search results"
      },
      "ModelMetadataFilters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ModelMetadataFilter"
        },
        "minItems": 1,
        "maxItems": 4
      },
      "ModelMetadataFilter": {
        "type": "object",
        "required": [
          "Name",
          "Value"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelMetadataFilterType"
              },
              {
                "description": "The name of the of the model to filter by."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "The value to filter the model metadata."
              }
            ]
          }
        },
        "description": "Part of the search expression. You can specify the name and value (domain, task, framework, framework version, task, and model)."
      },
      "ModelMetadataFilterType": {
        "type": "string",
        "enum": [
          "Domain",
          "Framework",
          "Task",
          "FrameworkVersion"
        ]
      },
      "String256": {
        "type": "string",
        "maxLength": 256
      },
      "NextToken": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 8192
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.ListModelMetadata{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ModelMetadataSummaries**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
