{
  "name": "UpdateWorkforce",
  "description": "<p>Use this operation to update your workforce. You can use this operation to require that workers use specific IP addresses to work on tasks and to update your OpenID Connect (OIDC) Identity Provider (IdP) workforce configuration.</p> <p>The worker portal is now supported in VPC and public internet.</p> <p> Use <code>SourceIpConfig</code> to restrict worker access to tasks to a specific range of IP addresses. You specify allowed IP addresses by creating a list of up to ten <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html\">CIDRs</a>. By default, a workforce isn't restricted to specific IP addresses. If you specify a range of IP addresses, workers who attempt to access tasks using any IP address outside the specified range are denied and get a <code>Not Found</code> error message on the worker portal.</p> <p>To restrict access to all the workers in public internet, add the <code>SourceIpConfig</code> CIDR value as \"10.0.0.0/16\".</p> <important> <p>Amazon SageMaker does not support Source Ip restriction for worker portals in VPC.</p> </important> <p>Use <code>OidcConfig</code> to update the configuration of a workforce created using your own OIDC IdP. </p> <important> <p>You can only update your OIDC IdP configuration when there are no work teams associated with your workforce. You can delete work teams using the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteWorkteam.html\">DeleteWorkteam</a> operation.</p> </important> <p>After restricting access to a range of IP addresses or updating your OIDC IdP configuration with this operation, you can view details about your update workforce using the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeWorkforce.html\">DescribeWorkforce</a> operation.</p> <important> <p>This operation only applies to private workforces.</p> </important>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.UpdateWorkforce"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateWorkforceRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateWorkforceRequest": {
        "type": "object",
        "required": [
          "WorkforceName"
        ],
        "title": "UpdateWorkforceRequest",
        "properties": {
          "WorkforceName": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkforceName"
              },
              {
                "description": "The name of the private workforce that you want to update. You can find your workforce name by using the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ListWorkforces.html\">ListWorkforces</a> operation."
              }
            ]
          },
          "SourceIpConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceIpConfig"
              },
              {
                "description": "<p>A list of one to ten worker IP address ranges (<a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html\">CIDRs</a>) that can be used to access tasks assigned to this workforce.</p> <p>Maximum: Ten CIDR values</p>"
              }
            ]
          },
          "OidcConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcConfig"
              },
              {
                "description": "Use this parameter to update your OIDC Identity Provider (IdP) configuration for a workforce made using your own IdP."
              }
            ]
          },
          "WorkforceVpcConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkforceVpcConfigRequest"
              },
              {
                "description": "Use this parameter to update your VPC configuration for a workforce."
              }
            ]
          }
        }
      },
      "WorkforceName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9\\-]){0,62}$",
        "minLength": 1,
        "maxLength": 63
      },
      "SourceIpConfig": {
        "type": "object",
        "required": [
          "Cidrs"
        ],
        "properties": {
          "Cidrs": {
            "allOf": [
              {
                "$ref": "#/$defs/Cidrs"
              },
              {
                "description": "<p>A list of one to ten <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html\">Classless Inter-Domain Routing</a> (CIDR) values.</p> <p>Maximum: Ten CIDR values</p> <note> <p>The following Length Constraints apply to individual CIDR values in the CIDR value list.</p> </note>"
              }
            ]
          }
        },
        "description": "A list of IP address ranges (<a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html\">CIDRs</a>). Used to create an allow list of IP addresses for a private workforce. Workers will only be able to login to their worker portal from an IP address within this range. By default, a workforce isn't restricted to specific IP addresses."
      },
      "Cidrs": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Cidr"
        }
      },
      "Cidr": {
        "type": "string",
        "pattern": "(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))$)|(^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\\/(12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9]))$)",
        "minLength": 4,
        "maxLength": 64
      },
      "OidcConfig": {
        "type": "object",
        "required": [
          "ClientId",
          "ClientSecret",
          "Issuer",
          "AuthorizationEndpoint",
          "TokenEndpoint",
          "UserInfoEndpoint",
          "LogoutEndpoint",
          "JwksUri"
        ],
        "properties": {
          "ClientId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientId"
              },
              {
                "description": "The OIDC IdP client ID used to configure your private workforce."
              }
            ]
          },
          "ClientSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientSecret"
              },
              {
                "description": "The OIDC IdP client secret used to configure your private workforce."
              }
            ]
          },
          "Issuer": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP issuer used to configure your private workforce."
              }
            ]
          },
          "AuthorizationEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP authorization endpoint used to configure your private workforce."
              }
            ]
          },
          "TokenEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP token endpoint used to configure your private workforce."
              }
            ]
          },
          "UserInfoEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP user information endpoint used to configure your private workforce."
              }
            ]
          },
          "LogoutEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP logout endpoint used to configure your private workforce."
              }
            ]
          },
          "JwksUri": {
            "allOf": [
              {
                "$ref": "#/$defs/OidcEndpoint"
              },
              {
                "description": "The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce."
              }
            ]
          }
        },
        "description": "Use this parameter to configure your OIDC Identity Provider (IdP)."
      },
      "ClientId": {
        "type": "string",
        "pattern": "[ -~]+",
        "minLength": 1,
        "maxLength": 1024
      },
      "ClientSecret": {
        "type": "string",
        "pattern": "[ -~]+",
        "minLength": 1,
        "maxLength": 1024,
        "format": "password"
      },
      "OidcEndpoint": {
        "type": "string",
        "pattern": "https://\\S+",
        "maxLength": 500
      },
      "WorkforceVpcConfigRequest": {
        "type": "object",
        "properties": {
          "VpcId": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkforceVpcId"
              },
              {
                "description": "The ID of the VPC that the workforce uses for communication."
              }
            ]
          },
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkforceSecurityGroupIds"
              },
              {
                "description": "The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet."
              }
            ]
          },
          "Subnets": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkforceSubnets"
              },
              {
                "description": "The ID of the subnets in the VPC that you want to connect."
              }
            ]
          }
        },
        "description": "The VPC object you use to create or update a workforce."
      },
      "WorkforceVpcId": {
        "type": "string",
        "pattern": "^vpc-[0-9a-z]*$",
        "maxLength": 32
      },
      "WorkforceSecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/WorkforceSecurityGroupId"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "WorkforceSecurityGroupId": {
        "type": "string",
        "pattern": "^sg-[0-9a-z]*$",
        "maxLength": 32
      },
      "WorkforceSubnets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/WorkforceSubnetId"
        },
        "minItems": 1,
        "maxItems": 16
      },
      "WorkforceSubnetId": {
        "type": "string",
        "pattern": "^subnet-[0-9a-z]*$",
        "maxLength": 32
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.UpdateWorkforce"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Workforce**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
