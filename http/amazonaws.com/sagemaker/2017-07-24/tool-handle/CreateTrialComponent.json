{
  "name": "CreateTrialComponent",
  "description": "<p>Creates a <i>trial component</i>, which is a stage of a machine learning <i>trial</i>. A trial is composed of one or more trial components. A trial component can be used in multiple trials.</p> <p>Trial components include pre-processing jobs, training jobs, and batch transform jobs.</p> <p>When you use SageMaker Studio or the SageMaker Python SDK, all experiments, trials, and trial components are automatically tracked, logged, and indexed. When you use the Amazon Web Services SDK for Python (Boto), you must use the logging APIs provided by the SDK.</p> <p>You can add tags to a trial component and then use the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Search.html\">Search</a> API to search for the tags.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateTrialComponent"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateTrialComponentRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateTrialComponentRequest": {
        "type": "object",
        "required": [
          "TrialComponentName"
        ],
        "title": "CreateTrialComponentRequest",
        "properties": {
          "TrialComponentName": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentEntityName"
              },
              {
                "description": "The name of the component. The name must be unique in your Amazon Web Services account and is not case-sensitive."
              }
            ]
          },
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentEntityName"
              },
              {
                "description": "The name of the component as displayed. The name doesn't need to be unique. If <code>DisplayName</code> isn't specified, <code>TrialComponentName</code> is displayed."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentStatus"
              },
              {
                "description": "<p>The status of the component. States include:</p> <ul> <li> <p>InProgress</p> </li> <li> <p>Completed</p> </li> <li> <p>Failed</p> </li> </ul>"
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "When the component started."
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "When the component ended."
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentParameters"
              },
              {
                "description": "The hyperparameters for the component."
              }
            ]
          },
          "InputArtifacts": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentArtifacts"
              },
              {
                "description": "The input artifacts for the component. Examples of input artifacts are datasets, algorithms, hyperparameters, source code, and instance types."
              }
            ]
          },
          "OutputArtifacts": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentArtifacts"
              },
              {
                "description": "The output artifacts for the component. Examples of output artifacts are metrics, snapshots, logs, and images."
              }
            ]
          },
          "MetadataProperties": {
            "$ref": "#/$defs/MetadataProperties"
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "A list of tags to associate with the component. You can use <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Search.html\">Search</a> API to search on the tags."
              }
            ]
          }
        }
      },
      "ExperimentEntityName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,119}",
        "minLength": 1,
        "maxLength": 120
      },
      "TrialComponentStatus": {
        "type": "object",
        "properties": {
          "PrimaryStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentPrimaryStatus"
              },
              {
                "description": "The status of the trial component."
              }
            ]
          },
          "Message": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentStatusMessage"
              },
              {
                "description": "If the component failed, a message describing why."
              }
            ]
          }
        },
        "description": "The status of the trial component."
      },
      "TrialComponentPrimaryStatus": {
        "type": "string",
        "enum": [
          "InProgress",
          "Completed",
          "Failed",
          "Stopping",
          "Stopped"
        ]
      },
      "TrialComponentStatusMessage": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 1024
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "TrialComponentParameters": {
        "type": "object",
        "maxProperties": 150,
        "additionalProperties": {
          "$ref": "#/$defs/TrialComponentParameterValue"
        }
      },
      "TrialComponentParameterValue": {
        "type": "object",
        "properties": {
          "StringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StringParameterValue"
              },
              {
                "description": "The string value of a categorical hyperparameter. If you specify a value for this parameter, you can't specify the <code>NumberValue</code> parameter."
              }
            ]
          },
          "NumberValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DoubleParameterValue"
              },
              {
                "description": "The numeric value of a numeric hyperparameter. If you specify a value for this parameter, you can't specify the <code>StringValue</code> parameter."
              }
            ]
          }
        },
        "description": "<p>The value of a hyperparameter. Only one of <code>NumberValue</code> or <code>StringValue</code> can be specified.</p> <p>This object is specified in the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrialComponent.html\">CreateTrialComponent</a> request.</p>"
      },
      "StringParameterValue": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "DoubleParameterValue": {
        "type": "number",
        "format": "double"
      },
      "TrialComponentArtifacts": {
        "type": "object",
        "maxProperties": 30,
        "additionalProperties": {
          "$ref": "#/$defs/TrialComponentArtifact"
        }
      },
      "TrialComponentArtifact": {
        "type": "object",
        "required": [
          "Value"
        ],
        "properties": {
          "MediaType": {
            "allOf": [
              {
                "$ref": "#/$defs/MediaType"
              },
              {
                "description": "The media type of the artifact, which indicates the type of data in the artifact file. The media type consists of a <i>type</i> and a <i>subtype</i> concatenated with a slash (/) character, for example, text/csv, image/jpeg, and s3/uri. The type specifies the category of the media. The subtype specifies the kind of data."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TrialComponentArtifactValue"
              },
              {
                "description": "The location of the artifact."
              }
            ]
          }
        },
        "description": "<p>Represents an input or output artifact of a trial component. You specify <code>TrialComponentArtifact</code> as part of the <code>InputArtifacts</code> and <code>OutputArtifacts</code> parameters in the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrialComponent.html\">CreateTrialComponent</a> request.</p> <p>Examples of input artifacts are datasets, algorithms, hyperparameters, source code, and instance types. Examples of output artifacts are metrics, snapshots, logs, and images.</p>"
      },
      "MediaType": {
        "type": "string",
        "pattern": "^[-\\w]+\\/[-\\w+]+$",
        "maxLength": 64
      },
      "TrialComponentArtifactValue": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 2048
      },
      "MetadataProperties": {
        "type": "object",
        "properties": {
          "CommitId": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataPropertyValue"
              },
              {
                "description": "The commit ID."
              }
            ]
          },
          "Repository": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataPropertyValue"
              },
              {
                "description": "The repository."
              }
            ]
          },
          "GeneratedBy": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataPropertyValue"
              },
              {
                "description": "The entity this entity was generated by."
              }
            ]
          },
          "ProjectId": {
            "allOf": [
              {
                "$ref": "#/$defs/MetadataPropertyValue"
              },
              {
                "description": "The project ID."
              }
            ]
          }
        },
        "description": "Metadata properties of the tracking entity, trial, or trial component."
      },
      "MetadataPropertyValue": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 1024
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateTrialComponent"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**TrialComponentArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
