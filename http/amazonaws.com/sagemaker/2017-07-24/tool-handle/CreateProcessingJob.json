{
  "name": "CreateProcessingJob",
  "description": "Creates a processing job.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateProcessingJob"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateProcessingJobRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateProcessingJobRequest": {
        "type": "object",
        "required": [
          "ProcessingJobName",
          "ProcessingResources",
          "AppSpecification",
          "RoleArn"
        ],
        "title": "CreateProcessingJobRequest",
        "properties": {
          "ProcessingInputs": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingInputs"
              },
              {
                "description": "An array of inputs configuring the data to download into the processing container."
              }
            ]
          },
          "ProcessingOutputConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingOutputConfig"
              },
              {
                "description": "Output configuration for the processing job."
              }
            ]
          },
          "ProcessingJobName": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingJobName"
              },
              {
                "description": " The name of the processing job. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account."
              }
            ]
          },
          "ProcessingResources": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingResources"
              },
              {
                "description": "Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance."
              }
            ]
          },
          "StoppingCondition": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingStoppingCondition"
              },
              {
                "description": "The time limit for how long the processing job is allowed to run."
              }
            ]
          },
          "AppSpecification": {
            "allOf": [
              {
                "$ref": "#/$defs/AppSpecification"
              },
              {
                "description": "Configures the processing job to run a specified Docker container image."
              }
            ]
          },
          "Environment": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingEnvironmentMap"
              },
              {
                "description": "The environment variables to set in the Docker container. Up to 100 key and values entries in the map are supported."
              }
            ]
          },
          "NetworkConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkConfig"
              },
              {
                "description": "Networking options for a processing job, such as whether to allow inbound and outbound network calls to and from processing containers, and the VPC subnets and security groups to use for VPC-enabled processing jobs."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "(Optional) An array of key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL\">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>."
              }
            ]
          },
          "ExperimentConfig": {
            "$ref": "#/$defs/ExperimentConfig"
          }
        }
      },
      "ProcessingInputs": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ProcessingInput"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "ProcessingInput": {
        "type": "object",
        "required": [
          "InputName"
        ],
        "properties": {
          "InputName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name for the processing job input."
              }
            ]
          },
          "AppManaged": {
            "allOf": [
              {
                "$ref": "#/$defs/AppManaged"
              },
              {
                "description": "When <code>True</code>, input operations such as data download are managed natively by the processing job application. When <code>False</code> (default), input operations are managed by Amazon SageMaker."
              }
            ]
          },
          "S3Input": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3Input"
              },
              {
                "description": "Configuration for downloading input data from Amazon S3 into the processing container."
              }
            ]
          },
          "DatasetDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetDefinition"
              },
              {
                "description": "Configuration for a Dataset Definition input. "
              }
            ]
          }
        },
        "description": "The inputs for a processing job. The processing input must specify exactly one of either <code>S3Input</code> or <code>DatasetDefinition</code> types."
      },
      "String": {
        "type": "string"
      },
      "AppManaged": {
        "type": "boolean"
      },
      "ProcessingS3Input": {
        "type": "object",
        "required": [
          "S3Uri",
          "S3DataType"
        ],
        "properties": {
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The URI of the Amazon S3 prefix Amazon SageMaker downloads data required to run a processing job."
              }
            ]
          },
          "LocalPath": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingLocalPath"
              },
              {
                "description": "The local path in your container where you want Amazon SageMaker to write input data to. <code>LocalPath</code> is an absolute path to the input data and must begin with <code>/opt/ml/processing/</code>. <code>LocalPath</code> is a required parameter when <code>AppManaged</code> is <code>False</code> (default)."
              }
            ]
          },
          "S3DataType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3DataType"
              },
              {
                "description": "Whether you use an <code>S3Prefix</code> or a <code>ManifestFile</code> for the data type. If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for the processing job. If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for the processing job."
              }
            ]
          },
          "S3InputMode": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3InputMode"
              },
              {
                "description": "Whether to use <code>File</code> or <code>Pipe</code> input mode. In File mode, Amazon SageMaker copies the data from the input source onto the local ML storage volume before starting your processing container. This is the most commonly used input mode. In <code>Pipe</code> mode, Amazon SageMaker streams input data from the source directly to your processing container into named pipes without using the ML storage volume."
              }
            ]
          },
          "S3DataDistributionType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3DataDistributionType"
              },
              {
                "description": "Whether to distribute the data from Amazon S3 to all processing instances with <code>FullyReplicated</code>, or whether the data from Amazon S3 is shared by Amazon S3 key, downloading one shard of data to each processing instance."
              }
            ]
          },
          "S3CompressionType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3CompressionType"
              },
              {
                "description": "Whether to GZIP-decompress the data in Amazon S3 as it is streamed into the processing container. <code>Gzip</code> can only be used when <code>Pipe</code> mode is specified as the <code>S3InputMode</code>. In <code>Pipe</code> mode, Amazon SageMaker streams input data from the source directly to your container without using the EBS volume."
              }
            ]
          }
        },
        "description": "Configuration for downloading input data from Amazon S3 into the processing container."
      },
      "S3Uri": {
        "type": "string",
        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "maxLength": 1024
      },
      "ProcessingLocalPath": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "ProcessingS3DataType": {
        "type": "string",
        "enum": [
          "ManifestFile",
          "S3Prefix"
        ]
      },
      "ProcessingS3InputMode": {
        "type": "string",
        "enum": [
          "Pipe",
          "File"
        ]
      },
      "ProcessingS3DataDistributionType": {
        "type": "string",
        "enum": [
          "FullyReplicated",
          "ShardedByS3Key"
        ]
      },
      "ProcessingS3CompressionType": {
        "type": "string",
        "enum": [
          "None",
          "Gzip"
        ]
      },
      "DatasetDefinition": {
        "type": "object",
        "properties": {
          "AthenaDatasetDefinition": {
            "$ref": "#/$defs/AthenaDatasetDefinition"
          },
          "RedshiftDatasetDefinition": {
            "$ref": "#/$defs/RedshiftDatasetDefinition"
          },
          "LocalPath": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingLocalPath"
              },
              {
                "description": "The local path where you want Amazon SageMaker to download the Dataset Definition inputs to run a processing job. <code>LocalPath</code> is an absolute path to the input data. This is a required parameter when <code>AppManaged</code> is <code>False</code> (default)."
              }
            ]
          },
          "DataDistributionType": {
            "allOf": [
              {
                "$ref": "#/$defs/DataDistributionType"
              },
              {
                "description": "Whether the generated dataset is <code>FullyReplicated</code> or <code>ShardedByS3Key</code> (default)."
              }
            ]
          },
          "InputMode": {
            "allOf": [
              {
                "$ref": "#/$defs/InputMode"
              },
              {
                "description": "Whether to use <code>File</code> or <code>Pipe</code> input mode. In <code>File</code> (default) mode, Amazon SageMaker copies the data from the input source onto the local Amazon Elastic Block Store (Amazon EBS) volumes before starting your training algorithm. This is the most commonly used input mode. In <code>Pipe</code> mode, Amazon SageMaker streams input data from the source directly to your algorithm without using the EBS volume."
              }
            ]
          }
        },
        "description": "Configuration for Dataset Definition inputs. The Dataset Definition input must specify exactly one of either <code>AthenaDatasetDefinition</code> or <code>RedshiftDatasetDefinition</code> types."
      },
      "AthenaDatasetDefinition": {
        "type": "object",
        "required": [
          "Catalog",
          "Database",
          "QueryString",
          "OutputS3Uri",
          "OutputFormat"
        ],
        "properties": {
          "Catalog": {
            "$ref": "#/$defs/AthenaCatalog"
          },
          "Database": {
            "$ref": "#/$defs/AthenaDatabase"
          },
          "QueryString": {
            "$ref": "#/$defs/AthenaQueryString"
          },
          "WorkGroup": {
            "$ref": "#/$defs/AthenaWorkGroup"
          },
          "OutputS3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The location in Amazon S3 where Athena query results are stored."
              }
            ]
          },
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data generated from an Athena query execution."
              }
            ]
          },
          "OutputFormat": {
            "$ref": "#/$defs/AthenaResultFormat"
          },
          "OutputCompression": {
            "$ref": "#/$defs/AthenaResultCompressionType"
          }
        },
        "description": "Configuration for Athena Dataset Definition input."
      },
      "AthenaCatalog": {
        "type": "string",
        "description": "The name of the data catalog used in Athena query execution.",
        "minLength": 1,
        "maxLength": 256,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "AthenaDatabase": {
        "type": "string",
        "pattern": ".*",
        "description": "The name of the database used in the Athena query execution.",
        "minLength": 1,
        "maxLength": 255
      },
      "AthenaQueryString": {
        "type": "string",
        "pattern": "[\\s\\S]+",
        "description": "The SQL query statements, to be executed.",
        "minLength": 1,
        "maxLength": 4096
      },
      "AthenaWorkGroup": {
        "type": "string",
        "pattern": "[a-zA-Z0-9._-]+",
        "description": "The name of the workgroup in which the Athena query is being started.",
        "minLength": 1,
        "maxLength": 128
      },
      "KmsKeyId": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 2048
      },
      "AthenaResultFormat": {
        "type": "string",
        "enum": [
          "PARQUET",
          "ORC",
          "AVRO",
          "JSON",
          "TEXTFILE"
        ],
        "description": "The data storage format for Athena query results."
      },
      "AthenaResultCompressionType": {
        "type": "string",
        "enum": [
          "GZIP",
          "SNAPPY",
          "ZLIB"
        ],
        "description": "The compression used for Athena query results."
      },
      "RedshiftDatasetDefinition": {
        "type": "object",
        "required": [
          "ClusterId",
          "Database",
          "DbUser",
          "QueryString",
          "ClusterRoleArn",
          "OutputS3Uri",
          "OutputFormat"
        ],
        "properties": {
          "ClusterId": {
            "$ref": "#/$defs/RedshiftClusterId"
          },
          "Database": {
            "$ref": "#/$defs/RedshiftDatabase"
          },
          "DbUser": {
            "$ref": "#/$defs/RedshiftUserName"
          },
          "QueryString": {
            "$ref": "#/$defs/RedshiftQueryString"
          },
          "ClusterRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The IAM role attached to your Redshift cluster that Amazon SageMaker uses to generate datasets."
              }
            ]
          },
          "OutputS3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The location in Amazon S3 where the Redshift query results are stored."
              }
            ]
          },
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data from a Redshift execution."
              }
            ]
          },
          "OutputFormat": {
            "$ref": "#/$defs/RedshiftResultFormat"
          },
          "OutputCompression": {
            "$ref": "#/$defs/RedshiftResultCompressionType"
          }
        },
        "description": "Configuration for Redshift Dataset Definition input."
      },
      "RedshiftClusterId": {
        "type": "string",
        "pattern": ".*",
        "description": "The Redshift cluster Identifier.",
        "minLength": 1,
        "maxLength": 63
      },
      "RedshiftDatabase": {
        "type": "string",
        "pattern": ".*",
        "description": "The name of the Redshift database used in Redshift query execution.",
        "minLength": 1,
        "maxLength": 64
      },
      "RedshiftUserName": {
        "type": "string",
        "pattern": ".*",
        "description": "The database user name used in Redshift query execution.",
        "minLength": 1,
        "maxLength": 128
      },
      "RedshiftQueryString": {
        "type": "string",
        "pattern": "[\\s\\S]+",
        "description": "The SQL query statements to be executed.",
        "minLength": 1,
        "maxLength": 4096
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
        "minLength": 20,
        "maxLength": 2048
      },
      "RedshiftResultFormat": {
        "type": "string",
        "enum": [
          "PARQUET",
          "CSV"
        ],
        "description": "The data storage format for Redshift query results."
      },
      "RedshiftResultCompressionType": {
        "type": "string",
        "enum": [
          "None",
          "GZIP",
          "BZIP2",
          "ZSTD",
          "SNAPPY"
        ],
        "description": "The compression used for Redshift query results."
      },
      "DataDistributionType": {
        "type": "string",
        "enum": [
          "FullyReplicated",
          "ShardedByS3Key"
        ]
      },
      "InputMode": {
        "type": "string",
        "enum": [
          "Pipe",
          "File"
        ]
      },
      "ProcessingOutputConfig": {
        "type": "object",
        "required": [
          "Outputs"
        ],
        "properties": {
          "Outputs": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingOutputs"
              },
              {
                "description": "An array of outputs configuring the data to upload from the processing container."
              }
            ]
          },
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the processing job output. <code>KmsKeyId</code> can be an ID of a KMS key, ARN of a KMS key, alias of a KMS key, or alias of a KMS key. The <code>KmsKeyId</code> is applied to all outputs."
              }
            ]
          }
        },
        "description": "Configuration for uploading output from the processing container."
      },
      "ProcessingOutputs": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ProcessingOutput"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "ProcessingOutput": {
        "type": "object",
        "required": [
          "OutputName"
        ],
        "properties": {
          "OutputName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name for the processing job output."
              }
            ]
          },
          "S3Output": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3Output"
              },
              {
                "description": "Configuration for processing job outputs in Amazon S3."
              }
            ]
          },
          "FeatureStoreOutput": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingFeatureStoreOutput"
              },
              {
                "description": "Configuration for processing job outputs in Amazon SageMaker Feature Store. This processing output type is only supported when <code>AppManaged</code> is specified. "
              }
            ]
          },
          "AppManaged": {
            "allOf": [
              {
                "$ref": "#/$defs/AppManaged"
              },
              {
                "description": "When <code>True</code>, output operations such as data upload are managed natively by the processing job application. When <code>False</code> (default), output operations are managed by Amazon SageMaker."
              }
            ]
          }
        },
        "description": "Describes the results of a processing job. The processing output must specify exactly one of either <code>S3Output</code> or <code>FeatureStoreOutput</code> types."
      },
      "ProcessingS3Output": {
        "type": "object",
        "required": [
          "S3Uri",
          "LocalPath",
          "S3UploadMode"
        ],
        "properties": {
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "A URI that identifies the Amazon S3 bucket where you want Amazon SageMaker to save the results of a processing job."
              }
            ]
          },
          "LocalPath": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingLocalPath"
              },
              {
                "description": "The local path of a directory where you want Amazon SageMaker to upload its contents to Amazon S3. <code>LocalPath</code> is an absolute path to a directory containing output files. This directory will be created by the platform and exist when your container's entrypoint is invoked."
              }
            ]
          },
          "S3UploadMode": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingS3UploadMode"
              },
              {
                "description": "Whether to upload the results of the processing job continuously or after the job completes."
              }
            ]
          }
        },
        "description": "Configuration for uploading output data to Amazon S3 from the processing container."
      },
      "ProcessingS3UploadMode": {
        "type": "string",
        "enum": [
          "Continuous",
          "EndOfJob"
        ]
      },
      "ProcessingFeatureStoreOutput": {
        "type": "object",
        "required": [
          "FeatureGroupName"
        ],
        "properties": {
          "FeatureGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/FeatureGroupName"
              },
              {
                "description": "The name of the Amazon SageMaker FeatureGroup to use as the destination for processing job output. Note that your processing script is responsible for putting records into your Feature Store."
              }
            ]
          }
        },
        "description": "Configuration for processing job outputs in Amazon SageMaker Feature Store."
      },
      "FeatureGroupName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]([_-]*[a-zA-Z0-9]){0,63}",
        "minLength": 1,
        "maxLength": 64
      },
      "ProcessingJobName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "minLength": 1,
        "maxLength": 63
      },
      "ProcessingResources": {
        "type": "object",
        "required": [
          "ClusterConfig"
        ],
        "properties": {
          "ClusterConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingClusterConfig"
              },
              {
                "description": "The configuration for the resources in a cluster used to run the processing job."
              }
            ]
          }
        },
        "description": "Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance."
      },
      "ProcessingClusterConfig": {
        "type": "object",
        "required": [
          "InstanceCount",
          "InstanceType",
          "VolumeSizeInGB"
        ],
        "properties": {
          "InstanceCount": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingInstanceCount"
              },
              {
                "description": "The number of ML compute instances to use in the processing job. For distributed processing jobs, specify a value greater than 1. The default value is 1."
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingInstanceType"
              },
              {
                "description": "The ML compute instance type for the processing job."
              }
            ]
          },
          "VolumeSizeInGB": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingVolumeSizeInGB"
              },
              {
                "description": "<p>The size of the ML storage volume in gigabytes that you want to provision. You must specify sufficient ML storage for your scenario.</p> <note> <p>Certain Nitro-based instances include local storage with a fixed total size, dependent on the instance type. When using these instances for processing, Amazon SageMaker mounts the local instance storage instead of Amazon EBS gp2 storage. You can't request a <code>VolumeSizeInGB</code> greater than the total size of the local instance storage.</p> <p>For a list of instance types that support local instance storage, including the total size per instance type, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes\">Instance Store Volumes</a>.</p> </note>"
              }
            ]
          },
          "VolumeKmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "<p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the processing job. </p> <note> <p>Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can't request a <code>VolumeKmsKeyId</code> when using an instance type with local storage.</p> <p>For a list of instance types that support local instance storage, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes\">Instance Store Volumes</a>.</p> <p>For more information about local instance storage encryption, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html\">SSD Instance Store Volumes</a>.</p> </note>"
              }
            ]
          }
        },
        "description": "Configuration for the cluster used to run a processing job."
      },
      "ProcessingInstanceCount": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "ProcessingInstanceType": {
        "type": "string",
        "enum": [
          "ml.t3.medium",
          "ml.t3.large",
          "ml.t3.xlarge",
          "ml.t3.2xlarge",
          "ml.m4.xlarge",
          "ml.m4.2xlarge",
          "ml.m4.4xlarge",
          "ml.m4.10xlarge",
          "ml.m4.16xlarge",
          "ml.c4.xlarge",
          "ml.c4.2xlarge",
          "ml.c4.4xlarge",
          "ml.c4.8xlarge",
          "ml.p2.xlarge",
          "ml.p2.8xlarge",
          "ml.p2.16xlarge",
          "ml.p3.2xlarge",
          "ml.p3.8xlarge",
          "ml.p3.16xlarge",
          "ml.c5.xlarge",
          "ml.c5.2xlarge",
          "ml.c5.4xlarge",
          "ml.c5.9xlarge",
          "ml.c5.18xlarge",
          "ml.m5.large",
          "ml.m5.xlarge",
          "ml.m5.2xlarge",
          "ml.m5.4xlarge",
          "ml.m5.12xlarge",
          "ml.m5.24xlarge",
          "ml.r5.large",
          "ml.r5.xlarge",
          "ml.r5.2xlarge",
          "ml.r5.4xlarge",
          "ml.r5.8xlarge",
          "ml.r5.12xlarge",
          "ml.r5.16xlarge",
          "ml.r5.24xlarge",
          "ml.g4dn.xlarge",
          "ml.g4dn.2xlarge",
          "ml.g4dn.4xlarge",
          "ml.g4dn.8xlarge",
          "ml.g4dn.12xlarge",
          "ml.g4dn.16xlarge"
        ]
      },
      "ProcessingVolumeSizeInGB": {
        "type": "integer",
        "minimum": 1,
        "maximum": 16384
      },
      "ProcessingStoppingCondition": {
        "type": "object",
        "required": [
          "MaxRuntimeInSeconds"
        ],
        "properties": {
          "MaxRuntimeInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingMaxRuntimeInSeconds"
              },
              {
                "description": "Specifies the maximum runtime in seconds."
              }
            ]
          }
        },
        "description": "Configures conditions under which the processing job should be stopped, such as how long the processing job has been running. After the condition is met, the processing job is stopped."
      },
      "ProcessingMaxRuntimeInSeconds": {
        "type": "integer",
        "minimum": 1,
        "maximum": 604800
      },
      "AppSpecification": {
        "type": "object",
        "required": [
          "ImageUri"
        ],
        "properties": {
          "ImageUri": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageUri"
              },
              {
                "description": "The container image to be run by the processing job."
              }
            ]
          },
          "ContainerEntrypoint": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerEntrypoint"
              },
              {
                "description": "The entrypoint for a container used to run a processing job."
              }
            ]
          },
          "ContainerArguments": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerArguments"
              },
              {
                "description": "The arguments for a container used to run a processing job."
              }
            ]
          }
        },
        "description": "Configuration to run a processing job in a specified container image."
      },
      "ImageUri": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 255
      },
      "ContainerEntrypoint": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ContainerEntrypointString"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "ContainerEntrypointString": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "ContainerArguments": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ContainerArgument"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "ContainerArgument": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "ProcessingEnvironmentMap": {
        "type": "object",
        "maxProperties": 100,
        "additionalProperties": {
          "$ref": "#/$defs/ProcessingEnvironmentValue"
        }
      },
      "ProcessingEnvironmentValue": {
        "type": "string",
        "pattern": "[\\S\\s]*",
        "maxLength": 256
      },
      "NetworkConfig": {
        "type": "object",
        "properties": {
          "EnableInterContainerTrafficEncryption": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Whether to encrypt all communications between distributed processing jobs. Choose <code>True</code> to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer."
              }
            ]
          },
          "EnableNetworkIsolation": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Whether to allow inbound and outbound network calls to and from the containers used for the processing job."
              }
            ]
          },
          "VpcConfig": {
            "$ref": "#/$defs/VpcConfig"
          }
        },
        "description": "Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs."
      },
      "Boolean": {
        "type": "boolean"
      },
      "VpcConfig": {
        "type": "object",
        "required": [
          "SecurityGroupIds",
          "Subnets"
        ],
        "properties": {
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcSecurityGroupIds"
              },
              {
                "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field."
              }
            ]
          },
          "Subnets": {
            "allOf": [
              {
                "$ref": "#/$defs/Subnets"
              },
              {
                "description": "The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/instance-types-az.html\">Supported Instance Types and Availability Zones</a>."
              }
            ]
          }
        },
        "description": "Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html\">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html\">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. "
      },
      "VpcSecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SecurityGroupId"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "SecurityGroupId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "Subnets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetId"
        },
        "minItems": 1,
        "maxItems": 16
      },
      "SubnetId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      },
      "ExperimentConfig": {
        "type": "object",
        "properties": {
          "ExperimentName": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentEntityName"
              },
              {
                "description": "The name of an existing experiment to associate with the trial component."
              }
            ]
          },
          "TrialName": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentEntityName"
              },
              {
                "description": "The name of an existing trial to associate the trial component with. If not specified, a new trial is created."
              }
            ]
          },
          "TrialComponentDisplayName": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentEntityName"
              },
              {
                "description": "The display name for the trial component. If this key isn't specified, the display name is the trial component name."
              }
            ]
          },
          "RunName": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentEntityName"
              },
              {
                "description": "The name of the experiment run to associate with the trial component."
              }
            ]
          }
        },
        "description": "<p>Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateProcessingJob.html\">CreateProcessingJob</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html\">CreateTrainingJob</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTransformJob.html\">CreateTransformJob</a> </p> </li> </ul>"
      },
      "ExperimentEntityName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,119}",
        "minLength": 1,
        "maxLength": 120
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateProcessingJob"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ProcessingJobArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
