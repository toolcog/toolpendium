{
  "name": "UpdateEndpoint",
  "description": "<p>Deploys the new <code>EndpointConfig</code> specified in the request, switches to using newly created endpoint, and then deletes resources provisioned for the endpoint using the previous <code>EndpointConfig</code> (there is no availability loss). </p> <p>When SageMaker receives the request, it sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeEndpoint.html\">DescribeEndpoint</a> API. </p> <note> <p>You must not delete an <code>EndpointConfig</code> in use by an endpoint that is live or while the <code>UpdateEndpoint</code> or <code>CreateEndpoint</code> operations are being performed on the endpoint. To update an endpoint, you must create a new <code>EndpointConfig</code>.</p> <p>If you delete the <code>EndpointConfig</code> of an endpoint that is active or being created or updated you may lose visibility into the instance type the endpoint is using. The endpoint must be deleted in order to stop incurring charges.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.UpdateEndpoint"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateEndpointInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateEndpointInput": {
        "type": "object",
        "required": [
          "EndpointName",
          "EndpointConfigName"
        ],
        "title": "UpdateEndpointInput",
        "properties": {
          "EndpointName": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointName"
              },
              {
                "description": "The name of the endpoint whose configuration you want to update."
              }
            ]
          },
          "EndpointConfigName": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointConfigName"
              },
              {
                "description": "The name of the new endpoint configuration."
              }
            ]
          },
          "RetainAllVariantProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "When updating endpoint resources, enables or disables the retention of <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_VariantProperty.html\">variant properties</a>, such as the instance count or the variant weight. To retain the variant properties of an endpoint when updating it, set <code>RetainAllVariantProperties</code> to <code>true</code>. To use the variant properties specified in a new <code>EndpointConfig</code> call when updating an endpoint, set <code>RetainAllVariantProperties</code> to <code>false</code>. The default is <code>false</code>."
              }
            ]
          },
          "ExcludeRetainedVariantProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/VariantPropertyList"
              },
              {
                "description": "When you are updating endpoint resources with <code>RetainAllVariantProperties</code>, whose value is set to <code>true</code>, <code>ExcludeRetainedVariantProperties</code> specifies the list of type <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_VariantProperty.html\">VariantProperty</a> to override with the values provided by <code>EndpointConfig</code>. If you don't specify a value for <code>ExcludeRetainedVariantProperties</code>, no variant properties are overridden. "
              }
            ]
          },
          "DeploymentConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/DeploymentConfig"
              },
              {
                "description": "The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations."
              }
            ]
          },
          "RetainDeploymentConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether to reuse the last deployment configuration. The default value is false (the configuration is not reused)."
              }
            ]
          }
        }
      },
      "EndpointName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "EndpointConfigName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "Boolean": {
        "type": "boolean"
      },
      "VariantPropertyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VariantProperty"
        },
        "minItems": 0,
        "maxItems": 3
      },
      "VariantProperty": {
        "type": "object",
        "required": [
          "VariantPropertyType"
        ],
        "properties": {
          "VariantPropertyType": {
            "allOf": [
              {
                "$ref": "#/$defs/VariantPropertyType"
              },
              {
                "description": "<p>The type of variant property. The supported values are:</p> <ul> <li> <p> <code>DesiredInstanceCount</code>: Overrides the existing variant instance counts using the <code>InitialInstanceCount</code> values in the <code>ProductionVariants</code> of <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpointConfig.html\">CreateEndpointConfig</a>.</p> </li> <li> <p> <code>DesiredWeight</code>: Overrides the existing variant weights using the <code>InitialVariantWeight</code> values in the <code>ProductionVariants</code> of <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpointConfig.html\">CreateEndpointConfig</a>.</p> </li> <li> <p> <code>DataCaptureConfig</code>: (Not currently supported.)</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "<p>Specifies a production variant property type for an Endpoint.</p> <p>If you are updating an endpoint with the <code>RetainAllVariantProperties</code> option of <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_UpdateEndpoint.html\">UpdateEndpointInput</a> set to <code>true</code>, the <code>VariantProperty</code> objects listed in the <code>ExcludeRetainedVariantProperties</code> parameter of <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_UpdateEndpoint.html\">UpdateEndpointInput</a> override the existing variant properties of the endpoint.</p>"
      },
      "VariantPropertyType": {
        "type": "string",
        "enum": [
          "DesiredInstanceCount",
          "DesiredWeight",
          "DataCaptureConfig"
        ]
      },
      "DeploymentConfig": {
        "type": "object",
        "properties": {
          "BlueGreenUpdatePolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/BlueGreenUpdatePolicy"
              },
              {
                "description": "Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default."
              }
            ]
          },
          "AutoRollbackConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoRollbackConfig"
              },
              {
                "description": "Automatic rollback configuration for handling endpoint deployment failures and recovery."
              }
            ]
          },
          "RollingUpdatePolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/RollingUpdatePolicy"
              },
              {
                "description": "Specifies a rolling deployment strategy for updating a SageMaker endpoint."
              }
            ]
          }
        },
        "description": "The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations."
      },
      "BlueGreenUpdatePolicy": {
        "type": "object",
        "required": [
          "TrafficRoutingConfiguration"
        ],
        "properties": {
          "TrafficRoutingConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/TrafficRoutingConfig"
              },
              {
                "description": "Defines the traffic routing strategy to shift traffic from the old fleet to the new fleet during an endpoint deployment."
              }
            ]
          },
          "TerminationWaitInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/TerminationWaitInSeconds"
              },
              {
                "description": "Additional waiting time in seconds after the completion of an endpoint deployment before terminating the old endpoint fleet. Default is 0."
              }
            ]
          },
          "MaximumExecutionTimeoutInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/MaximumExecutionTimeoutInSeconds"
              },
              {
                "description": "Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in <code>TerminationWaitInSeconds</code> and <code>WaitIntervalInSeconds</code>."
              }
            ]
          }
        },
        "description": "Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default."
      },
      "TrafficRoutingConfig": {
        "type": "object",
        "required": [
          "Type",
          "WaitIntervalInSeconds"
        ],
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/TrafficRoutingConfigType"
              },
              {
                "description": "<p>Traffic routing strategy type.</p> <ul> <li> <p> <code>ALL_AT_ONCE</code>: Endpoint traffic shifts to the new fleet in a single step. </p> </li> <li> <p> <code>CANARY</code>: Endpoint traffic shifts to the new fleet in two steps. The first step is the canary, which is a small portion of the traffic. The second step is the remainder of the traffic. </p> </li> <li> <p> <code>LINEAR</code>: Endpoint traffic shifts to the new fleet in n steps of a configurable size. </p> </li> </ul>"
              }
            ]
          },
          "WaitIntervalInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/WaitIntervalInSeconds"
              },
              {
                "description": "The waiting time (in seconds) between incremental steps to turn on traffic on the new endpoint fleet."
              }
            ]
          },
          "CanarySize": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacitySize"
              },
              {
                "description": "Batch size for the first step to turn on traffic on the new endpoint fleet. <code>Value</code> must be less than or equal to 50% of the variant's total instance count."
              }
            ]
          },
          "LinearStepSize": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacitySize"
              },
              {
                "description": "Batch size for each step to turn on traffic on the new endpoint fleet. <code>Value</code> must be 10-50% of the variant's total instance count."
              }
            ]
          }
        },
        "description": "Defines the traffic routing strategy during an endpoint deployment to shift traffic from the old fleet to the new fleet."
      },
      "TrafficRoutingConfigType": {
        "type": "string",
        "enum": [
          "ALL_AT_ONCE",
          "CANARY",
          "LINEAR"
        ]
      },
      "WaitIntervalInSeconds": {
        "type": "integer",
        "minimum": 0,
        "maximum": 3600
      },
      "CapacitySize": {
        "type": "object",
        "required": [
          "Type",
          "Value"
        ],
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacitySizeType"
              },
              {
                "description": "<p>Specifies the endpoint capacity type.</p> <ul> <li> <p> <code>INSTANCE_COUNT</code>: The endpoint activates based on the number of instances.</p> </li> <li> <p> <code>CAPACITY_PERCENT</code>: The endpoint activates based on the specified percentage of capacity.</p> </li> </ul>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacitySizeValue"
              },
              {
                "description": "Defines the capacity size, either as a number of instances or a capacity percentage."
              }
            ]
          }
        },
        "description": "<p>Specifies the type and size of the endpoint capacity to activate for a blue/green deployment, a rolling deployment, or a rollback strategy. You can specify your batches as either instance count or the overall percentage or your fleet.</p> <p>For a rollback strategy, if you don't specify the fields in this object, or if you set the <code>Value</code> to 100%, then SageMaker uses a blue/green rollback strategy and rolls all traffic back to the blue fleet.</p>"
      },
      "CapacitySizeType": {
        "type": "string",
        "enum": [
          "INSTANCE_COUNT",
          "CAPACITY_PERCENT"
        ]
      },
      "CapacitySizeValue": {
        "type": "integer",
        "minimum": 1
      },
      "TerminationWaitInSeconds": {
        "type": "integer",
        "minimum": 0,
        "maximum": 3600
      },
      "MaximumExecutionTimeoutInSeconds": {
        "type": "integer",
        "minimum": 600,
        "maximum": 28800
      },
      "AutoRollbackConfig": {
        "type": "object",
        "properties": {
          "Alarms": {
            "allOf": [
              {
                "$ref": "#/$defs/AlarmList"
              },
              {
                "description": "List of CloudWatch alarms in your account that are configured to monitor metrics on an endpoint. If any alarms are tripped during a deployment, SageMaker rolls back the deployment."
              }
            ]
          }
        },
        "description": "Automatic rollback configuration for handling endpoint deployment failures and recovery."
      },
      "AlarmList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Alarm"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "Alarm": {
        "type": "object",
        "properties": {
          "AlarmName": {
            "allOf": [
              {
                "$ref": "#/$defs/AlarmName"
              },
              {
                "description": "The name of a CloudWatch alarm in your account."
              }
            ]
          }
        },
        "description": "An Amazon CloudWatch alarm configured to monitor metrics on an endpoint."
      },
      "AlarmName": {
        "type": "string",
        "pattern": "^(?!\\s*$).+",
        "minLength": 1,
        "maxLength": 255
      },
      "RollingUpdatePolicy": {
        "type": "object",
        "required": [
          "MaximumBatchSize",
          "WaitIntervalInSeconds"
        ],
        "properties": {
          "MaximumBatchSize": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacitySize"
              },
              {
                "description": "Batch size for each rolling step to provision capacity and turn on traffic on the new endpoint fleet, and terminate capacity on the old endpoint fleet. Value must be between 5% to 50% of the variant's total instance count."
              }
            ]
          },
          "WaitIntervalInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/WaitIntervalInSeconds"
              },
              {
                "description": "The length of the baking period, during which SageMaker monitors alarms for each batch on the new fleet."
              }
            ]
          },
          "MaximumExecutionTimeoutInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/MaximumExecutionTimeoutInSeconds"
              },
              {
                "description": "The time limit for the total deployment. Exceeding this limit causes a timeout."
              }
            ]
          },
          "RollbackMaximumBatchSize": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacitySize"
              },
              {
                "description": "Batch size for rollback to the old endpoint fleet. Each rolling step to provision capacity and turn on traffic on the old endpoint fleet, and terminate capacity on the new endpoint fleet. If this field is absent, the default value will be set to 100% of total capacity which means to bring up the whole capacity of the old fleet at once during rollback."
              }
            ]
          }
        },
        "description": "Specifies a rolling deployment strategy for updating a SageMaker endpoint."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.UpdateEndpoint"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**EndpointArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
