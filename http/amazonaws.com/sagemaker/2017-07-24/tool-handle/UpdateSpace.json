{
  "name": "UpdateSpace",
  "description": "Updates the settings of a space.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.UpdateSpace"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateSpaceRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateSpaceRequest": {
        "type": "object",
        "required": [
          "DomainId",
          "SpaceName"
        ],
        "title": "UpdateSpaceRequest",
        "properties": {
          "DomainId": {
            "allOf": [
              {
                "$ref": "#/$defs/DomainId"
              },
              {
                "description": "The ID of the associated Domain."
              }
            ]
          },
          "SpaceName": {
            "allOf": [
              {
                "$ref": "#/$defs/SpaceName"
              },
              {
                "description": "The name of the space."
              }
            ]
          },
          "SpaceSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/SpaceSettings"
              },
              {
                "description": "A collection of space settings."
              }
            ]
          }
        }
      },
      "DomainId": {
        "type": "string",
        "maxLength": 63
      },
      "SpaceName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      },
      "SpaceSettings": {
        "type": "object",
        "properties": {
          "JupyterServerAppSettings": {
            "$ref": "#/$defs/JupyterServerAppSettings"
          },
          "KernelGatewayAppSettings": {
            "$ref": "#/$defs/KernelGatewayAppSettings"
          }
        },
        "description": "A collection of space settings."
      },
      "JupyterServerAppSettings": {
        "type": "object",
        "properties": {
          "DefaultResourceSpec": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceSpec"
              },
              {
                "description": "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterServer app. If you use the <code>LifecycleConfigArns</code> parameter, then this parameter is also required."
              }
            ]
          },
          "LifecycleConfigArns": {
            "allOf": [
              {
                "$ref": "#/$defs/LifecycleConfigArns"
              },
              {
                "description": "<p> The Amazon Resource Name (ARN) of the Lifecycle Configurations attached to the JupyterServerApp. If you use this parameter, the <code>DefaultResourceSpec</code> parameter is also required.</p> <note> <p>To remove a Lifecycle Config, you must set <code>LifecycleConfigArns</code> to an empty list.</p> </note>"
              }
            ]
          },
          "CodeRepositories": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeRepositories"
              },
              {
                "description": "A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application."
              }
            ]
          }
        },
        "description": "The JupyterServer app settings."
      },
      "ResourceSpec": {
        "type": "object",
        "properties": {
          "SageMakerImageArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageArn"
              },
              {
                "description": "The ARN of the SageMaker image that the image version belongs to."
              }
            ]
          },
          "SageMakerImageVersionArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageVersionArn"
              },
              {
                "description": "The ARN of the image version created on the instance."
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/AppInstanceType"
              },
              {
                "description": "<p>The instance type that the image version runs on.</p> <note> <p> <b>JupyterServer apps</b> only support the <code>system</code> value.</p> <p>For <b>KernelGateway apps</b>, the <code>system</code> value is translated to <code>ml.t3.medium</code>. KernelGateway apps also support all other values for available instance types.</p> </note>"
              }
            ]
          },
          "LifecycleConfigArn": {
            "allOf": [
              {
                "$ref": "#/$defs/StudioLifecycleConfigArn"
              },
              {
                "description": " The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource."
              }
            ]
          }
        },
        "description": "Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on."
      },
      "ImageArn": {
        "type": "string",
        "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
        "maxLength": 256
      },
      "ImageVersionArn": {
        "type": "string",
        "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
        "maxLength": 256
      },
      "AppInstanceType": {
        "type": "string",
        "enum": [
          "system",
          "ml.t3.micro",
          "ml.t3.small",
          "ml.t3.medium",
          "ml.t3.large",
          "ml.t3.xlarge",
          "ml.t3.2xlarge",
          "ml.m5.large",
          "ml.m5.xlarge",
          "ml.m5.2xlarge",
          "ml.m5.4xlarge",
          "ml.m5.8xlarge",
          "ml.m5.12xlarge",
          "ml.m5.16xlarge",
          "ml.m5.24xlarge",
          "ml.m5d.large",
          "ml.m5d.xlarge",
          "ml.m5d.2xlarge",
          "ml.m5d.4xlarge",
          "ml.m5d.8xlarge",
          "ml.m5d.12xlarge",
          "ml.m5d.16xlarge",
          "ml.m5d.24xlarge",
          "ml.c5.large",
          "ml.c5.xlarge",
          "ml.c5.2xlarge",
          "ml.c5.4xlarge",
          "ml.c5.9xlarge",
          "ml.c5.12xlarge",
          "ml.c5.18xlarge",
          "ml.c5.24xlarge",
          "ml.p3.2xlarge",
          "ml.p3.8xlarge",
          "ml.p3.16xlarge",
          "ml.p3dn.24xlarge",
          "ml.g4dn.xlarge",
          "ml.g4dn.2xlarge",
          "ml.g4dn.4xlarge",
          "ml.g4dn.8xlarge",
          "ml.g4dn.12xlarge",
          "ml.g4dn.16xlarge",
          "ml.r5.large",
          "ml.r5.xlarge",
          "ml.r5.2xlarge",
          "ml.r5.4xlarge",
          "ml.r5.8xlarge",
          "ml.r5.12xlarge",
          "ml.r5.16xlarge",
          "ml.r5.24xlarge",
          "ml.g5.xlarge",
          "ml.g5.2xlarge",
          "ml.g5.4xlarge",
          "ml.g5.8xlarge",
          "ml.g5.16xlarge",
          "ml.g5.12xlarge",
          "ml.g5.24xlarge",
          "ml.g5.48xlarge",
          "ml.geospatial.interactive",
          "ml.p4d.24xlarge",
          "ml.p4de.24xlarge"
        ]
      },
      "StudioLifecycleConfigArn": {
        "type": "string",
        "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
        "maxLength": 256
      },
      "LifecycleConfigArns": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StudioLifecycleConfigArn"
        }
      },
      "CodeRepositories": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CodeRepository"
        },
        "maxItems": 10
      },
      "CodeRepository": {
        "type": "object",
        "required": [
          "RepositoryUrl"
        ],
        "properties": {
          "RepositoryUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryUrl"
              },
              {
                "description": "The URL of the Git repository."
              }
            ]
          }
        },
        "description": "A Git repository that SageMaker automatically displays to users for cloning in the JupyterServer application."
      },
      "RepositoryUrl": {
        "type": "string",
        "pattern": "^https://([.\\-_a-zA-Z0-9]+/?){3,1016}$",
        "maxLength": 1024
      },
      "KernelGatewayAppSettings": {
        "type": "object",
        "properties": {
          "DefaultResourceSpec": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceSpec"
              },
              {
                "description": "<p>The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.</p> <note> <p>The Amazon SageMaker Studio UI does not use the default instance type value set here. The default instance type set here is used when Apps are created using the Amazon Web Services Command Line Interface or Amazon Web Services CloudFormation and the instance type parameter value is not passed.</p> </note>"
              }
            ]
          },
          "CustomImages": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomImages"
              },
              {
                "description": "A list of custom SageMaker images that are configured to run as a KernelGateway app."
              }
            ]
          },
          "LifecycleConfigArns": {
            "allOf": [
              {
                "$ref": "#/$defs/LifecycleConfigArns"
              },
              {
                "description": "<p> The Amazon Resource Name (ARN) of the Lifecycle Configurations attached to the the user profile or domain.</p> <note> <p>To remove a Lifecycle Config, you must set <code>LifecycleConfigArns</code> to an empty list.</p> </note>"
              }
            ]
          }
        },
        "description": "The KernelGateway app settings."
      },
      "CustomImages": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CustomImage"
        },
        "maxItems": 200
      },
      "CustomImage": {
        "type": "object",
        "required": [
          "ImageName",
          "AppImageConfigName"
        ],
        "properties": {
          "ImageName": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageName"
              },
              {
                "description": "The name of the CustomImage. Must be unique to your account."
              }
            ]
          },
          "ImageVersionNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageVersionNumber"
              },
              {
                "description": "The version number of the CustomImage."
              }
            ]
          },
          "AppImageConfigName": {
            "allOf": [
              {
                "$ref": "#/$defs/AppImageConfigName"
              },
              {
                "description": "The name of the AppImageConfig."
              }
            ]
          }
        },
        "description": "A custom SageMaker image. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html\">Bring your own SageMaker image</a>."
      },
      "ImageName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$",
        "minLength": 1,
        "maxLength": 63
      },
      "ImageVersionNumber": {
        "type": "integer",
        "minimum": 0
      },
      "AppImageConfigName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.UpdateSpace"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**SpaceArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
