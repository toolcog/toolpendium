{
  "name": "CreateAutoMLJob",
  "description": "<p>Creates an Autopilot job also referred to as Autopilot experiment or AutoML job.</p> <note> <p>We recommend using the new versions <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateAutoMLJobV2.html\">CreateAutoMLJobV2</a> and <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeAutoMLJobV2.html\">DescribeAutoMLJobV2</a>, which offer backward compatibility.</p> <p> <code>CreateAutoMLJobV2</code> can manage tabular problem types identical to those of its previous version <code>CreateAutoMLJob</code>, as well as non-tabular problem types such as image or text classification.</p> <p>Find guidelines about how to migrate a <code>CreateAutoMLJob</code> to <code>CreateAutoMLJobV2</code> in <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-automate-model-development-create-experiment-api.html#autopilot-create-experiment-api-migrate-v1-v2\">Migrate a CreateAutoMLJob to CreateAutoMLJobV2</a>.</p> </note> <p>You can find the best-performing model after you run an AutoML job by calling <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeAutoMLJobV2.html\">DescribeAutoMLJobV2</a> (recommended) or <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeAutoMLJob.html\">DescribeAutoMLJob</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SageMaker.CreateAutoMLJob"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateAutoMLJobRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateAutoMLJobRequest": {
        "type": "object",
        "required": [
          "AutoMLJobName",
          "InputDataConfig",
          "OutputDataConfig",
          "RoleArn"
        ],
        "title": "CreateAutoMLJobRequest",
        "properties": {
          "AutoMLJobName": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLJobName"
              },
              {
                "description": "Identifies an Autopilot job. The name must be unique to your account and is case insensitive."
              }
            ]
          },
          "InputDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLInputDataConfig"
              },
              {
                "description": "An array of channel objects that describes the input data and its location. Each channel is a named input source. Similar to <code>InputDataConfig</code> supported by <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html\">HyperParameterTrainingJobDefinition</a>. Format(s) supported: CSV, Parquet. A minimum of 500 rows is required for the training dataset. There is not a minimum number of rows required for the validation dataset."
              }
            ]
          },
          "OutputDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLOutputDataConfig"
              },
              {
                "description": "Provides information about encryption and the Amazon S3 output path needed to store artifacts from an AutoML job. Format(s) supported: CSV."
              }
            ]
          },
          "ProblemType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProblemType"
              },
              {
                "description": "Defines the type of supervised learning problem available for the candidates. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-datasets-problem-types.html#autopilot-problem-types\"> Amazon SageMaker Autopilot problem types</a>."
              }
            ]
          },
          "AutoMLJobObjective": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLJobObjective"
              },
              {
                "description": "Specifies a metric to minimize or maximize as the objective of a job. If not specified, the default objective metric depends on the problem type. See <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLJobObjective.html\">AutoMLJobObjective</a> for the default values."
              }
            ]
          },
          "AutoMLJobConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLJobConfig"
              },
              {
                "description": "A collection of settings used to configure an AutoML job."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The ARN of the role that is used to access the data."
              }
            ]
          },
          "GenerateCandidateDefinitionsOnly": {
            "allOf": [
              {
                "$ref": "#/$defs/GenerateCandidateDefinitionsOnly"
              },
              {
                "description": "Generates possible candidates without training the models. A candidate is a combination of data preprocessors, algorithms, and algorithm parameter settings."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web ServicesResources</a>. Tag keys must be unique per resource."
              }
            ]
          },
          "ModelDeployConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelDeployConfig"
              },
              {
                "description": "Specifies how to generate the endpoint name for an automatic one-click Autopilot model deployment."
              }
            ]
          }
        }
      },
      "AutoMLJobName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,31}",
        "minLength": 1,
        "maxLength": 32
      },
      "AutoMLInputDataConfig": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AutoMLChannel"
        },
        "minItems": 1,
        "maxItems": 2
      },
      "AutoMLChannel": {
        "type": "object",
        "required": [
          "DataSource",
          "TargetAttributeName"
        ],
        "properties": {
          "DataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLDataSource"
              },
              {
                "description": "The data source for an AutoML channel."
              }
            ]
          },
          "CompressionType": {
            "allOf": [
              {
                "$ref": "#/$defs/CompressionType"
              },
              {
                "description": "You can use <code>Gzip</code> or <code>None</code>. The default value is <code>None</code>."
              }
            ]
          },
          "TargetAttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetAttributeName"
              },
              {
                "description": "The name of the target variable in supervised learning, usually represented by 'y'."
              }
            ]
          },
          "ContentType": {
            "allOf": [
              {
                "$ref": "#/$defs/ContentType"
              },
              {
                "description": "The content type of the data from the input source. You can use <code>text/csv;header=present</code> or <code>x-application/vnd.amazon+parquet</code>. The default value is <code>text/csv;header=present</code>."
              }
            ]
          },
          "ChannelType": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLChannelType"
              },
              {
                "description": "The channel type (optional) is an <code>enum</code> string. The default value is <code>training</code>. Channels for training and validation must share the same <code>ContentType</code> and <code>TargetAttributeName</code>. For information on specifying training and validation channel types, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-datasets-problem-types.html#autopilot-data-sources-training-or-validation\">How to specify training and validation datasets</a>."
              }
            ]
          },
          "SampleWeightAttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/SampleWeightAttributeName"
              },
              {
                "description": "<p>If specified, this column name indicates which column of the dataset should be treated as sample weights for use by the objective metric during the training, evaluation, and the selection of the best model. This column is not considered as a predictive feature. For more information on Autopilot metrics, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-metrics-validation.html\">Metrics and validation</a>.</p> <p>Sample weights should be numeric, non-negative, with larger values indicating which rows are more important than others. Data points that have invalid or no weight value are excluded.</p> <p>Support for sample weights is available in <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLAlgorithmConfig.html\">Ensembling</a> mode only.</p>"
              }
            ]
          }
        },
        "description": "<p>A channel is a named input source that training algorithms can consume. The validation dataset size is limited to less than 2 GB. The training dataset size must be less than 100 GB. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Channel.html\"> Channel</a>.</p> <note> <p>A validation dataset must contain the same headers as the training dataset.</p> </note> <p/>"
      },
      "AutoMLDataSource": {
        "type": "object",
        "required": [
          "S3DataSource"
        ],
        "properties": {
          "S3DataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLS3DataSource"
              },
              {
                "description": "The Amazon S3 location of the input data."
              }
            ]
          }
        },
        "description": "The data source for the Autopilot job."
      },
      "AutoMLS3DataSource": {
        "type": "object",
        "required": [
          "S3DataType",
          "S3Uri"
        ],
        "properties": {
          "S3DataType": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLS3DataType"
              },
              {
                "description": "<p>The data type. </p> <ul> <li> <p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. SageMaker uses all objects that match the specified key name prefix for model training.</p> <p>The <code>S3Prefix</code> should have the following format:</p> <p> <code>s3://DOC-EXAMPLE-BUCKET/DOC-EXAMPLE-FOLDER-OR-FILE</code> </p> </li> <li> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want SageMaker to use for model training.</p> <p>A <code>ManifestFile</code> should have the format shown below:</p> <p> <code>[ {\"prefix\": \"s3://DOC-EXAMPLE-BUCKET/DOC-EXAMPLE-FOLDER/DOC-EXAMPLE-PREFIX/\"}, </code> </p> <p> <code>\"DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAMPLE-FOLDER/DATA-1\",</code> </p> <p> <code>\"DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAMPLE-FOLDER/DATA-2\",</code> </p> <p> <code>... \"DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAMPLE-FOLDER/DATA-N\" ]</code> </p> </li> <li> <p>If you choose <code>AugmentedManifestFile</code>, <code>S3Uri</code> identifies an object that is an augmented manifest file in JSON lines format. This file contains the data you want to use for model training. <code>AugmentedManifestFile</code> is available for V2 API jobs only (for example, for jobs created by calling <code>CreateAutoMLJobV2</code>).</p> <p>Here is a minimal, single-record example of an <code>AugmentedManifestFile</code>:</p> <p> <code>{\"source-ref\": \"s3://DOC-EXAMPLE-BUCKET/DOC-EXAMPLE-FOLDER/cats/cat.jpg\",</code> </p> <p> <code>\"label-metadata\": {\"class-name\": \"cat\"</code> }</p> <p>For more information on <code>AugmentedManifestFile</code>, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/augmented-manifest.html\">Provide Dataset Metadata to Training Jobs with an Augmented Manifest File</a>.</p> </li> </ul>"
              }
            ]
          },
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The URL to the Amazon S3 data source. The Uri refers to the Amazon S3 prefix or ManifestFile depending on the data type."
              }
            ]
          }
        },
        "description": "Describes the Amazon S3 data source."
      },
      "AutoMLS3DataType": {
        "type": "string",
        "enum": [
          "ManifestFile",
          "S3Prefix",
          "AugmentedManifestFile"
        ]
      },
      "S3Uri": {
        "type": "string",
        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "maxLength": 1024
      },
      "CompressionType": {
        "type": "string",
        "enum": [
          "None",
          "Gzip"
        ]
      },
      "TargetAttributeName": {
        "type": "string",
        "minLength": 1
      },
      "ContentType": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 256
      },
      "AutoMLChannelType": {
        "type": "string",
        "enum": [
          "training",
          "validation"
        ]
      },
      "SampleWeightAttributeName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_-]+$",
        "minLength": 1,
        "maxLength": 256
      },
      "AutoMLOutputDataConfig": {
        "type": "object",
        "required": [
          "S3OutputPath"
        ],
        "properties": {
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "The Key Management Service (KMS) encryption key ID."
              }
            ]
          },
          "S3OutputPath": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The Amazon S3 output path. Must be 128 characters or less."
              }
            ]
          }
        },
        "description": "The output data configuration."
      },
      "KmsKeyId": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 2048
      },
      "ProblemType": {
        "type": "string",
        "enum": [
          "BinaryClassification",
          "MulticlassClassification",
          "Regression"
        ]
      },
      "AutoMLJobObjective": {
        "type": "object",
        "required": [
          "MetricName"
        ],
        "properties": {
          "MetricName": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLMetricEnum"
              },
              {
                "description": "<p>The name of the objective metric used to measure the predictive quality of a machine learning system. During training, the model's parameters are updated iteratively to optimize its performance based on the feedback provided by the objective metric when evaluating the model on the validation dataset.</p> <p>For the list of all available metrics supported by Autopilot, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-metrics-validation.html#autopilot-metrics\">Autopilot metrics</a>.</p> <p>If you do not specify a metric explicitly, the default behavior is to automatically use:</p> <ul> <li> <p>For tabular problem types:</p> <ul> <li> <p>Regression: <code>MSE</code>.</p> </li> <li> <p>Binary classification: <code>F1</code>.</p> </li> <li> <p>Multiclass classification: <code>Accuracy</code>.</p> </li> </ul> </li> <li> <p>For image or text classification problem types: <code>Accuracy</code> </p> </li> <li> <p>For time-series forecasting problem types: <code>AverageWeightedQuantileLoss</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Specifies a metric to minimize or maximize as the objective of a job."
      },
      "AutoMLMetricEnum": {
        "type": "string",
        "enum": [
          "Accuracy",
          "MSE",
          "F1",
          "F1macro",
          "AUC",
          "RMSE",
          "MAE",
          "R2",
          "BalancedAccuracy",
          "Precision",
          "PrecisionMacro",
          "Recall",
          "RecallMacro",
          "MAPE",
          "MASE",
          "WAPE",
          "AverageWeightedQuantileLoss"
        ]
      },
      "AutoMLJobConfig": {
        "type": "object",
        "properties": {
          "CompletionCriteria": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLJobCompletionCriteria"
              },
              {
                "description": "How long an AutoML job is allowed to run, or how many candidates a job is allowed to generate."
              }
            ]
          },
          "SecurityConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLSecurityConfig"
              },
              {
                "description": "The security configuration for traffic encryption or Amazon VPC settings."
              }
            ]
          },
          "DataSplitConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLDataSplitConfig"
              },
              {
                "description": "<p>The configuration for splitting the input training dataset.</p> <p>Type: AutoMLDataSplitConfig</p>"
              }
            ]
          },
          "CandidateGenerationConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLCandidateGenerationConfig"
              },
              {
                "description": "The configuration for generating a candidate for an AutoML job (optional). "
              }
            ]
          },
          "Mode": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLMode"
              },
              {
                "description": "<p>The method that Autopilot uses to train the data. You can either specify the mode manually or let Autopilot choose for you based on the dataset size by selecting <code>AUTO</code>. In <code>AUTO</code> mode, Autopilot chooses <code>ENSEMBLING</code> for datasets smaller than 100 MB, and <code>HYPERPARAMETER_TUNING</code> for larger ones.</p> <p>The <code>ENSEMBLING</code> mode uses a multi-stack ensemble model to predict classification and regression tasks directly from your dataset. This machine learning mode combines several base models to produce an optimal predictive model. It then uses a stacking ensemble method to combine predictions from contributing members. A multi-stack ensemble model can provide better performance over a single model by combining the predictive capabilities of multiple models. See <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-model-support-validation.html#autopilot-algorithm-support\">Autopilot algorithm support</a> for a list of algorithms supported by <code>ENSEMBLING</code> mode.</p> <p>The <code>HYPERPARAMETER_TUNING</code> (HPO) mode uses the best hyperparameters to train the best version of a model. HPO automatically selects an algorithm for the type of problem you want to solve. Then HPO finds the best hyperparameters according to your objective metric. See <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-model-support-validation.html#autopilot-algorithm-support\">Autopilot algorithm support</a> for a list of algorithms supported by <code>HYPERPARAMETER_TUNING</code> mode.</p>"
              }
            ]
          }
        },
        "description": "A collection of settings used for an AutoML job."
      },
      "AutoMLJobCompletionCriteria": {
        "type": "object",
        "properties": {
          "MaxCandidates": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxCandidates"
              },
              {
                "description": "<p>The maximum number of times a training job is allowed to run.</p> <p>For text and image classification, as well as time-series forecasting problem types, the supported value is 1. For tabular problem types, the maximum value is 750.</p>"
              }
            ]
          },
          "MaxRuntimePerTrainingJobInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxRuntimePerTrainingJobInSeconds"
              },
              {
                "description": "<p>The maximum time, in seconds, that each training job executed inside hyperparameter tuning is allowed to run as part of a hyperparameter tuning job. For more information, see the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_StoppingCondition.html\">StoppingCondition</a> used by the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateHyperParameterTuningJob.html\">CreateHyperParameterTuningJob</a> action.</p> <p>For job V2s (jobs created by calling <code>CreateAutoMLJobV2</code>), this field controls the runtime of the job candidate.</p>"
              }
            ]
          },
          "MaxAutoMLJobRuntimeInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxAutoMLJobRuntimeInSeconds"
              },
              {
                "description": "<p>The maximum runtime, in seconds, an AutoML job has to complete.</p> <p>If an AutoML job exceeds the maximum runtime, the job is stopped automatically and its processing is ended gracefully. The AutoML job identifies the best model whose training was completed and marks it as the best-performing model. Any unfinished steps of the job, such as automatic one-click Autopilot model deployment, are not completed.</p>"
              }
            ]
          }
        },
        "description": "How long a job is allowed to run, or how many candidates a job is allowed to generate."
      },
      "MaxCandidates": {
        "type": "integer",
        "minimum": 1,
        "maximum": 750
      },
      "MaxRuntimePerTrainingJobInSeconds": {
        "type": "integer",
        "minimum": 1
      },
      "MaxAutoMLJobRuntimeInSeconds": {
        "type": "integer",
        "minimum": 1
      },
      "AutoMLSecurityConfig": {
        "type": "object",
        "properties": {
          "VolumeKmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyId"
              },
              {
                "description": "The key used to encrypt stored data."
              }
            ]
          },
          "EnableInterContainerTrafficEncryption": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Whether to use traffic encryption between the container layers."
              }
            ]
          },
          "VpcConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcConfig"
              },
              {
                "description": "The VPC configuration."
              }
            ]
          }
        },
        "description": "Security options."
      },
      "Boolean": {
        "type": "boolean"
      },
      "VpcConfig": {
        "type": "object",
        "required": [
          "SecurityGroupIds",
          "Subnets"
        ],
        "properties": {
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcSecurityGroupIds"
              },
              {
                "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field."
              }
            ]
          },
          "Subnets": {
            "allOf": [
              {
                "$ref": "#/$defs/Subnets"
              },
              {
                "description": "The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/instance-types-az.html\">Supported Instance Types and Availability Zones</a>."
              }
            ]
          }
        },
        "description": "Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html\">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html\">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. "
      },
      "VpcSecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SecurityGroupId"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "SecurityGroupId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "Subnets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetId"
        },
        "minItems": 1,
        "maxItems": 16
      },
      "SubnetId": {
        "type": "string",
        "pattern": "[-0-9a-zA-Z]+",
        "maxLength": 32
      },
      "AutoMLDataSplitConfig": {
        "type": "object",
        "properties": {
          "ValidationFraction": {
            "allOf": [
              {
                "$ref": "#/$defs/ValidationFraction"
              },
              {
                "description": "The validation fraction (optional) is a float that specifies the portion of the training dataset to be used for validation. The default value is 0.2, and values must be greater than 0 and less than 1. We recommend setting this value to be less than 0.5."
              }
            ]
          }
        },
        "description": "<p>This structure specifies how to split the data into train and validation datasets.</p> <p>The validation and training datasets must contain the same headers. For jobs created by calling <code>CreateAutoMLJob</code>, the validation dataset must be less than 2 GB in size.</p>"
      },
      "ValidationFraction": {
        "type": "number",
        "format": "float",
        "minimum": 0,
        "maximum": 1
      },
      "AutoMLCandidateGenerationConfig": {
        "type": "object",
        "properties": {
          "FeatureSpecificationS3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "<p>A URL to the Amazon S3 data source containing selected features from the input data source to run an Autopilot job. You can input <code>FeatureAttributeNames</code> (optional) in JSON format as shown below: </p> <p> <code>{ \"FeatureAttributeNames\":[\"col1\", \"col2\", ...] }</code>.</p> <p>You can also specify the data type of the feature (optional) in the format shown below:</p> <p> <code>{ \"FeatureDataTypes\":{\"col1\":\"numeric\", \"col2\":\"categorical\" ... } }</code> </p> <note> <p>These column keys may not include the target column.</p> </note> <p>In ensembling mode, Autopilot only supports the following data types: <code>numeric</code>, <code>categorical</code>, <code>text</code>, and <code>datetime</code>. In HPO mode, Autopilot can support <code>numeric</code>, <code>categorical</code>, <code>text</code>, <code>datetime</code>, and <code>sequence</code>.</p> <p>If only <code>FeatureDataTypes</code> is provided, the column keys (<code>col1</code>, <code>col2</code>,..) should be a subset of the column names in the input data. </p> <p>If both <code>FeatureDataTypes</code> and <code>FeatureAttributeNames</code> are provided, then the column keys should be a subset of the column names provided in <code>FeatureAttributeNames</code>. </p> <p>The key name <code>FeatureAttributeNames</code> is fixed. The values listed in <code>[\"col1\", \"col2\", ...]</code> are case sensitive and should be a list of strings containing unique values that are a subset of the column names in the input data. The list of columns provided must not include the target column.</p>"
              }
            ]
          },
          "AlgorithmsConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLAlgorithmsConfig"
              },
              {
                "description": "<p>Stores the configuration information for the selection of algorithms used to train the model candidates.</p> <p>The list of available algorithms to choose from depends on the training mode set in <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLJobConfig.html\"> <code>AutoMLJobConfig.Mode</code> </a>.</p> <ul> <li> <p> <code>AlgorithmsConfig</code> should not be set in <code>AUTO</code> training mode.</p> </li> <li> <p>When <code>AlgorithmsConfig</code> is provided, one <code>AutoMLAlgorithms</code> attribute must be set and one only.</p> <p>If the list of algorithms provided as values for <code>AutoMLAlgorithms</code> is empty, <code>AutoMLCandidateGenerationConfig</code> uses the full set of algorithms for the given training mode.</p> </li> <li> <p>When <code>AlgorithmsConfig</code> is not provided, <code>AutoMLCandidateGenerationConfig</code> uses the full set of algorithms for the given training mode.</p> </li> </ul> <p>For the list of all algorithms per training mode, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLAlgorithmConfig.html\"> AutoMLAlgorithmConfig</a>.</p> <p>For more information on each algorithm, see the <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-model-support-validation.html#autopilot-algorithm-support\">Algorithm support</a> section in Autopilot developer guide.</p>"
              }
            ]
          }
        },
        "description": "Stores the configuration information for how a candidate is generated (optional)."
      },
      "AutoMLAlgorithmsConfig": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AutoMLAlgorithmConfig"
        },
        "maxItems": 1
      },
      "AutoMLAlgorithmConfig": {
        "type": "object",
        "required": [
          "AutoMLAlgorithms"
        ],
        "properties": {
          "AutoMLAlgorithms": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLAlgorithms"
              },
              {
                "description": "<p>The selection of algorithms run on a dataset to train the model candidates of an Autopilot job. </p> <note> <p>Selected algorithms must belong to the list corresponding to the training mode set in <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLJobConfig.html#sagemaker-Type-AutoMLJobConfig-Mode\">AutoMLJobConfig.Mode</a> (<code>ENSEMBLING</code> or <code>HYPERPARAMETER_TUNING</code>). Choose a minimum of 1 algorithm. </p> </note> <ul> <li> <p>In <code>ENSEMBLING</code> mode:</p> <ul> <li> <p>\"catboost\"</p> </li> <li> <p>\"extra-trees\"</p> </li> <li> <p>\"fastai\"</p> </li> <li> <p>\"lightgbm\"</p> </li> <li> <p>\"linear-learner\"</p> </li> <li> <p>\"nn-torch\"</p> </li> <li> <p>\"randomforest\"</p> </li> <li> <p>\"xgboost\"</p> </li> </ul> </li> <li> <p>In <code>HYPERPARAMETER_TUNING</code> mode:</p> <ul> <li> <p>\"linear-learner\"</p> </li> <li> <p>\"mlp\"</p> </li> <li> <p>\"xgboost\"</p> </li> </ul> </li> </ul>"
              }
            ]
          }
        },
        "description": "The collection of algorithms run on a dataset for training the model candidates of an Autopilot job."
      },
      "AutoMLAlgorithms": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AutoMLAlgorithm"
        },
        "maxItems": 11
      },
      "AutoMLAlgorithm": {
        "type": "string",
        "enum": [
          "xgboost",
          "linear-learner",
          "mlp",
          "lightgbm",
          "catboost",
          "randomforest",
          "extra-trees",
          "nn-torch",
          "fastai"
        ]
      },
      "AutoMLMode": {
        "type": "string",
        "enum": [
          "AUTO",
          "ENSEMBLING",
          "HYPERPARAMETER_TUNING"
        ]
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
        "minLength": 20,
        "maxLength": 2048
      },
      "GenerateCandidateDefinitionsOnly": {
        "type": "boolean"
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag key. Tag keys must be unique per resource."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag value."
              }
            ]
          }
        },
        "description": "<p>A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html\">AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href=\"https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf\">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      },
      "ModelDeployConfig": {
        "type": "object",
        "properties": {
          "AutoGenerateEndpointName": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoGenerateEndpointName"
              },
              {
                "description": "<p>Set to <code>True</code> to automatically generate an endpoint name for a one-click Autopilot model deployment; set to <code>False</code> otherwise. The default value is <code>False</code>.</p> <note> <p>If you set <code>AutoGenerateEndpointName</code> to <code>True</code>, do not specify the <code>EndpointName</code>; otherwise a 400 error is thrown.</p> </note>"
              }
            ]
          },
          "EndpointName": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointName"
              },
              {
                "description": "<p>Specifies the endpoint name to use for a one-click Autopilot model deployment if the endpoint name is not generated automatically.</p> <note> <p>Specify the <code>EndpointName</code> if and only if you set <code>AutoGenerateEndpointName</code> to <code>False</code>; otherwise a 400 error is thrown.</p> </note>"
              }
            ]
          }
        },
        "description": "Specifies how to generate the endpoint name for an automatic one-click Autopilot model deployment."
      },
      "AutoGenerateEndpointName": {
        "type": "boolean"
      },
      "EndpointName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
        "maxLength": 63
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sagemaker.us-east-1.amazonaws.com/#X-Amz-Target=SageMaker.CreateAutoMLJob"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AutoMLJobArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
