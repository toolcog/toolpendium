openapi: 3.0.0
info:
  version: '2016-11-23'
  x-release: v4
  title: AWS Step Functions
  description: '<fullname>Step Functions</fullname> <p>Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on Amazon Web Services, your own servers, or any system that has access to Amazon Web Services. You can access and use Step Functions using the console, the Amazon Web Services SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href="https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html">Step Functions Developer Guide</a> </i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: states
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/states-2016-11-23.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/states/'
servers:
  - url: 'http://states.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS SFN multi-region endpoint
  - url: 'https://states.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS SFN multi-region endpoint
  - url: 'http://states.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS SFN endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://states.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS SFN endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AWSStepFunctions.CreateActivity:
    post:
      operationId: CreateActivity
      description: '<p>Creates an activity. An activity is a task that you write in any programming language and host on any machine that has access to Step Functions. Activities must poll Step Functions using the <code>GetActivityTask</code> API action and respond using <code>SendTask*</code> API actions. This function lets Step Functions know the existence of your activity and returns an identifier for use in a state machine and when polling from the activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <note> <p> <code>CreateActivity</code> is an idempotent API. Subsequent requests won’t create a duplicate resource if it was already created. <code>CreateActivity</code>''s idempotency check is based on the activity <code>name</code>. If a following request has different <code>tags</code> values, Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, <code>tags</code> will not be updated, even if they are different.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActivityOutput'
        '480':
          description: ActivityLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLimitExceeded'
        '481':
          description: InvalidName
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidName'
        '482':
          description: TooManyTags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTags'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivityInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.CreateActivity
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.CreateStateMachine:
    post:
      operationId: CreateStateMachine
      description: '<p>Creates a state machine. A state machine consists of a collection of states that can do work (<code>Task</code> states), determine to which states to transition next (<code>Choice</code> states), stop an execution with an error (<code>Fail</code> states), and so on. State machines are specified using a JSON-based, structured language. For more information, see <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html">Amazon States Language</a> in the Step Functions User Guide.</p> <p>If you set the <code>publish</code> parameter of this API action to <code>true</code>, it publishes version <code>1</code> as the first revision of the state machine.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <note> <p> <code>CreateStateMachine</code> is an idempotent API. Subsequent requests won’t create a duplicate resource if it was already created. <code>CreateStateMachine</code>''s idempotency check is based on the state machine <code>name</code>, <code>definition</code>, <code>type</code>, <code>LoggingConfiguration</code>, and <code>TracingConfiguration</code>. The check is also based on the <code>publish</code> and <code>versionDescription</code> parameters. If a following request has a different <code>roleArn</code> or <code>tags</code>, Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, <code>roleArn</code> and <code>tags</code> will not be updated, even if they are different.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStateMachineOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '481':
          description: InvalidDefinition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDefinition'
        '482':
          description: InvalidName
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidName'
        '483':
          description: InvalidLoggingConfiguration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLoggingConfiguration'
        '484':
          description: InvalidTracingConfiguration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTracingConfiguration'
        '485':
          description: StateMachineAlreadyExists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineAlreadyExists'
        '486':
          description: StateMachineDeleting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDeleting'
        '487':
          description: StateMachineLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineLimitExceeded'
        '488':
          description: StateMachineTypeNotSupported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineTypeNotSupported'
        '489':
          description: TooManyTags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTags'
        '490':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '491':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStateMachineInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.CreateStateMachine
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.CreateStateMachineAlias:
    post:
      operationId: CreateStateMachineAlias
      description: '<p>Creates an <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html">alias</a> for a state machine that points to one or two <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html">versions</a> of the same state machine. You can set your application to call <a>StartExecution</a> with an alias and update the version the alias uses without changing the client''s code.</p> <p>You can also map an alias to split <a>StartExecution</a> requests between two versions of a state machine. To do this, add a second <code>RoutingConfig</code> object in the <code>routingConfiguration</code> parameter. You must also specify the percentage of execution run requests each version should receive in both <code>RoutingConfig</code> objects. Step Functions randomly chooses which version runs a given execution based on the percentage you specify.</p> <p>To create an alias that points to a single version, specify a single <code>RoutingConfig</code> object with a <code>weight</code> set to 100.</p> <p>You can create up to 100 aliases for each state machine. You must delete unused aliases using the <a>DeleteStateMachineAlias</a> API action.</p> <p> <code>CreateStateMachineAlias</code> is an idempotent API. Step Functions bases the idempotency check on the <code>stateMachineArn</code>, <code>description</code>, <code>name</code>, and <code>routingConfiguration</code> parameters. Requests that contain the same values for these parameters return a successful idempotent response without creating a duplicate resource.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>DescribeStateMachineAlias</a> </p> </li> <li> <p> <a>ListStateMachineAliases</a> </p> </li> <li> <p> <a>UpdateStateMachineAlias</a> </p> </li> <li> <p> <a>DeleteStateMachineAlias</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStateMachineAliasOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '481':
          description: InvalidName
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidName'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: StateMachineDeleting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDeleting'
        '484':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStateMachineAliasInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.CreateStateMachineAlias
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.DeleteActivity:
    post:
      operationId: DeleteActivity
      description: Deletes an activity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivityOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteActivityInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DeleteActivity
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.DeleteStateMachine:
    post:
      operationId: DeleteStateMachine
      description: '<p>Deletes a state machine. This is an asynchronous operation: It sets the state machine''s status to <code>DELETING</code> and begins the deletion process. </p> <p>A qualified state machine ARN can either refer to a <i>Distributed Map state</i> defined within a state machine, a version ARN, or an alias ARN.</p> <p>The following are some examples of qualified and unqualified state machine ARNs:</p> <ul> <li> <p>The following qualified state machine ARN refers to a <i>Distributed Map state</i> with a label <code>mapStateLabel</code> in a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:partition:states:region:account-id:stateMachine:myStateMachine/mapStateLabel</code> </p> <note> <p>If you provide a qualified state machine ARN that refers to a <i>Distributed Map state</i>, the request fails with <code>ValidationException</code>.</p> </note> </li> <li> <p>The following unqualified state machine ARN refers to a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:partition:states:region:account-id:stateMachine:myStateMachine</code> </p> </li> </ul> <p>This API action also deletes all <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html">versions</a> and <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html">aliases</a> associated with a state machine.</p> <note> <p>For <code>EXPRESS</code> state machines, the deletion happens eventually (usually in less than a minute). Running executions may emit logs after <code>DeleteStateMachine</code> API is called.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStateMachineOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStateMachineInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DeleteStateMachine
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.DeleteStateMachineAlias:
    post:
      operationId: DeleteStateMachineAlias
      description: '<p>Deletes a state machine <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html">alias</a>.</p> <p>After you delete a state machine alias, you can''t use it to start executions. When you delete a state machine alias, Step Functions doesn''t delete the state machine versions that alias references.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>CreateStateMachineAlias</a> </p> </li> <li> <p> <a>DescribeStateMachineAlias</a> </p> </li> <li> <p> <a>ListStateMachineAliases</a> </p> </li> <li> <p> <a>UpdateStateMachineAlias</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStateMachineAliasOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStateMachineAliasInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DeleteStateMachineAlias
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.DeleteStateMachineVersion:
    post:
      operationId: DeleteStateMachineVersion
      description: '<p>Deletes a state machine <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html">version</a>. After you delete a version, you can''t call <a>StartExecution</a> using that version''s ARN or use the version with a state machine <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html">alias</a>.</p> <note> <p>Deleting a state machine version won''t terminate its in-progress executions.</p> </note> <note> <p>You can''t delete a state machine version currently referenced by one or more aliases. Before you delete a version, you must either delete the aliases or update them to point to another state machine version.</p> </note> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>PublishStateMachineVersion</a> </p> </li> <li> <p> <a>ListStateMachineVersions</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStateMachineVersionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStateMachineVersionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DeleteStateMachineVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.DescribeActivity:
    post:
      operationId: DescribeActivity
      description: <p>Describes an activity.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeActivityOutput'
        '480':
          description: ActivityDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityDoesNotExist'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeActivityInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DescribeActivity
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.DescribeExecution:
    post:
      operationId: DescribeExecution
      description: '<p>Provides information about a state machine execution, such as the state machine associated with the execution, the execution input and output, and relevant execution metadata. Use this API action to return the Map Run Amazon Resource Name (ARN) if the execution was dispatched by a Map Run.</p> <p>If you specify a version or alias ARN when you call the <a>StartExecution</a> API action, <code>DescribeExecution</code> returns that ARN.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>Executions of an <code>EXPRESS</code> state machinearen''t supported by <code>DescribeExecution</code> unless a Map Run dispatched them.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeExecutionOutput'
        '480':
          description: ExecutionDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionDoesNotExist'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DescribeExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.DescribeMapRun:
    post:
      operationId: DescribeMapRun
      description: 'Provides information about a Map Run''s configuration, progress, and results. For more information, see <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-examine-map-run.html">Examining Map Run</a> in the <i>Step Functions Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMapRunOutput'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMapRunInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DescribeMapRun
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.DescribeStateMachine:
    post:
      operationId: DescribeStateMachine
      description: '<p>Provides information about a state machine''s definition, its IAM role Amazon Resource Name (ARN), and configuration.</p> <p>A qualified state machine ARN can either refer to a <i>Distributed Map state</i> defined within a state machine, a version ARN, or an alias ARN.</p> <p>The following are some examples of qualified and unqualified state machine ARNs:</p> <ul> <li> <p>The following qualified state machine ARN refers to a <i>Distributed Map state</i> with a label <code>mapStateLabel</code> in a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:partition:states:region:account-id:stateMachine:myStateMachine/mapStateLabel</code> </p> <note> <p>If you provide a qualified state machine ARN that refers to a <i>Distributed Map state</i>, the request fails with <code>ValidationException</code>.</p> </note> </li> <li> <p>The following qualified state machine ARN refers to an alias named <code>PROD</code>.</p> <p> <code>arn:&lt;partition&gt;:states:&lt;region&gt;:&lt;account-id&gt;:stateMachine:&lt;myStateMachine:PROD&gt;</code> </p> <note> <p>If you provide a qualified state machine ARN that refers to a version ARN or an alias ARN, the request starts execution for that version or alias.</p> </note> </li> <li> <p>The following unqualified state machine ARN refers to a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:&lt;partition&gt;:states:&lt;region&gt;:&lt;account-id&gt;:stateMachine:&lt;myStateMachine&gt;</code> </p> </li> </ul> <p>This API action returns the details for a state machine version if the <code>stateMachineArn</code> you specify is a state machine version ARN.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeStateMachineOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '481':
          description: StateMachineDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDoesNotExist'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStateMachineInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DescribeStateMachine
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.DescribeStateMachineAlias:
    post:
      operationId: DescribeStateMachineAlias
      description: '<p>Returns details about a state machine <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html">alias</a>.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>CreateStateMachineAlias</a> </p> </li> <li> <p> <a>ListStateMachineAliases</a> </p> </li> <li> <p> <a>UpdateStateMachineAlias</a> </p> </li> <li> <p> <a>DeleteStateMachineAlias</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeStateMachineAliasOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStateMachineAliasInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DescribeStateMachineAlias
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.DescribeStateMachineForExecution:
    post:
      operationId: DescribeStateMachineForExecution
      description: '<p>Provides information about a state machine''s definition, its execution role ARN, and configuration. If a Map Run dispatched the execution, this action returns the Map Run Amazon Resource Name (ARN) in the response. The state machine returned is the state machine associated with the Map Run.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeStateMachineForExecutionOutput'
        '480':
          description: ExecutionDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionDoesNotExist'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStateMachineForExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.DescribeStateMachineForExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.GetActivityTask:
    post:
      operationId: GetActivityTask
      description: '<p>Used by workers to retrieve a task (with the specified activity ARN) which has been scheduled for execution by a running state machine. This initiates a long poll, where the service holds the HTTP connection open and responds as soon as a task becomes available (i.e. an execution of a task of this type is needed.) The maximum time the service holds on to the request before responding is 60 seconds. If no task is available within 60 seconds, the poll returns a <code>taskToken</code> with a null string.</p> <note> <p>This API action isn''t logged in CloudTrail.</p> </note> <important> <p>Workers should set their client side socket timeout to at least 65 seconds (5 seconds higher than the maximum time the service may hold the poll request).</p> <p>Polling with <code>GetActivityTask</code> can cause latency in some implementations. See <a href="https://docs.aws.amazon.com/step-functions/latest/dg/bp-activity-pollers.html">Avoid Latency When Polling for Activity Tasks</a> in the Step Functions Developer Guide.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActivityTaskOutput'
        '480':
          description: ActivityDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityDoesNotExist'
        '481':
          description: ActivityWorkerLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityWorkerLimitExceeded'
        '482':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActivityTaskInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.GetActivityTask
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.GetExecutionHistory:
    post:
      operationId: GetExecutionHistory
      description: '<p>Returns the history of the specified execution as a list of events. By default, the results are returned in ascending order of the <code>timeStamp</code> of the events. Use the <code>reverseOrder</code> parameter to get the latest events first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExecutionHistoryOutput'
        '480':
          description: ExecutionDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionDoesNotExist'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '482':
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetExecutionHistoryInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.GetExecutionHistory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.ListActivities:
    post:
      operationId: ListActivities
      description: '<p>Lists the existing activities.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActivitiesOutput'
        '480':
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListActivitiesInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.ListActivities
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.ListExecutions:
    post:
      operationId: ListExecutions
      description: '<p>Lists all executions of a state machine or a Map Run. You can list all executions related to a state machine by specifying a state machine Amazon Resource Name (ARN), or those related to a Map Run by specifying a Map Run ARN.</p> <p>You can also provide a state machine <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html">alias</a> ARN or <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html">version</a> ARN to list the executions associated with a specific alias or version.</p> <p>Results are sorted by time, with the most recent execution first.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '481':
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
        '482':
          description: StateMachineDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDoesNotExist'
        '483':
          description: StateMachineTypeNotSupported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineTypeNotSupported'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListExecutionsInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.ListExecutions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.ListMapRuns:
    post:
      operationId: ListMapRuns
      description: 'Lists all Map Runs that were started by a given state machine execution. Use this API action to obtain Map Run ARNs, and then call <code>DescribeMapRun</code> to obtain more information, if needed.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMapRunsOutput'
        '480':
          description: ExecutionDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionDoesNotExist'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '482':
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMapRunsInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.ListMapRuns
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.ListStateMachineAliases:
    post:
      operationId: ListStateMachineAliases
      description: '<p>Lists <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html">aliases</a> for a specified state machine ARN. Results are sorted by time, with the most recently created aliases listed first. </p> <p>To list aliases that reference a state machine <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html">version</a>, you can specify the version ARN in the <code>stateMachineArn</code> parameter.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>CreateStateMachineAlias</a> </p> </li> <li> <p> <a>DescribeStateMachineAlias</a> </p> </li> <li> <p> <a>UpdateStateMachineAlias</a> </p> </li> <li> <p> <a>DeleteStateMachineAlias</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStateMachineAliasesOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '481':
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '483':
          description: StateMachineDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDoesNotExist'
        '484':
          description: StateMachineDeleting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDeleting'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStateMachineAliasesInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.ListStateMachineAliases
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.ListStateMachineVersions:
    post:
      operationId: ListStateMachineVersions
      description: '<p>Lists <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html">versions</a> for the specified state machine Amazon Resource Name (ARN).</p> <p>The results are sorted in descending order of the version creation time.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>PublishStateMachineVersion</a> </p> </li> <li> <p> <a>DeleteStateMachineVersion</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStateMachineVersionsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '482':
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStateMachineVersionsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.ListStateMachineVersions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.ListStateMachines:
    post:
      operationId: ListStateMachines
      description: '<p>Lists the existing state machines.</p> <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStateMachinesOutput'
        '480':
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStateMachinesInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.ListStateMachines
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: '<p>List tags for a given resource.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.PublishStateMachineVersion:
    post:
      operationId: PublishStateMachineVersion
      description: '<p>Creates a <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html">version</a> from the current revision of a state machine. Use versions to create immutable snapshots of your state machine. You can start executions from versions either directly or with an alias. To create an alias, use <a>CreateStateMachineAlias</a>.</p> <p>You can publish up to 1000 versions for each state machine. You must manually delete unused versions using the <a>DeleteStateMachineVersion</a> API action.</p> <p> <code>PublishStateMachineVersion</code> is an idempotent API. It doesn''t create a duplicate state machine version if it already exists for the current revision. Step Functions bases <code>PublishStateMachineVersion</code>''s idempotency check on the <code>stateMachineArn</code>, <code>name</code>, and <code>revisionId</code> parameters. Requests with the same parameters return a successful idempotent response. If you don''t specify a <code>revisionId</code>, Step Functions checks for a previously published version of the state machine''s current revision.</p> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>DeleteStateMachineVersion</a> </p> </li> <li> <p> <a>ListStateMachineVersions</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishStateMachineVersionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: StateMachineDeleting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDeleting'
        '482':
          description: StateMachineDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDoesNotExist'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishStateMachineVersionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.PublishStateMachineVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.SendTaskFailure:
    post:
      operationId: SendTaskFailure
      description: 'Used by activity workers and task states using the <a href="https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token">callback</a> pattern to report that the task identified by the <code>taskToken</code> failed.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTaskFailureOutput'
        '480':
          description: TaskDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDoesNotExist'
        '481':
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
        '482':
          description: TaskTimedOut
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTimedOut'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTaskFailureInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.SendTaskFailure
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.SendTaskHeartbeat:
    post:
      operationId: SendTaskHeartbeat
      description: '<p>Used by activity workers and task states using the <a href="https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token">callback</a> pattern to report to Step Functions that the task represented by the specified <code>taskToken</code> is still making progress. This action resets the <code>Heartbeat</code> clock. The <code>Heartbeat</code> threshold is specified in the state machine''s Amazon States Language definition (<code>HeartbeatSeconds</code>). This action does not in itself create an event in the execution history. However, if the task times out, the execution history contains an <code>ActivityTimedOut</code> entry for activities, or a <code>TaskTimedOut</code> entry for for tasks using the <a href="https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-sync">job run</a> or <a href="https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token">callback</a> pattern.</p> <note> <p>The <code>Timeout</code> of a task, defined in the state machine''s Amazon States Language definition, is its maximum allowed duration, regardless of the number of <a>SendTaskHeartbeat</a> requests received. Use <code>HeartbeatSeconds</code> to configure the timeout interval for heartbeats.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTaskHeartbeatOutput'
        '480':
          description: TaskDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDoesNotExist'
        '481':
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
        '482':
          description: TaskTimedOut
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTimedOut'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTaskHeartbeatInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.SendTaskHeartbeat
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.SendTaskSuccess:
    post:
      operationId: SendTaskSuccess
      description: 'Used by activity workers and task states using the <a href="https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token">callback</a> pattern to report that the task identified by the <code>taskToken</code> completed successfully.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTaskSuccessOutput'
        '480':
          description: TaskDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDoesNotExist'
        '481':
          description: InvalidOutput
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOutput'
        '482':
          description: InvalidToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidToken'
        '483':
          description: TaskTimedOut
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTimedOut'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTaskSuccessInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.SendTaskSuccess
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.StartExecution:
    post:
      operationId: StartExecution
      description: '<p>Starts a state machine execution.</p> <p>A qualified state machine ARN can either refer to a <i>Distributed Map state</i> defined within a state machine, a version ARN, or an alias ARN.</p> <p>The following are some examples of qualified and unqualified state machine ARNs:</p> <ul> <li> <p>The following qualified state machine ARN refers to a <i>Distributed Map state</i> with a label <code>mapStateLabel</code> in a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:partition:states:region:account-id:stateMachine:myStateMachine/mapStateLabel</code> </p> <note> <p>If you provide a qualified state machine ARN that refers to a <i>Distributed Map state</i>, the request fails with <code>ValidationException</code>.</p> </note> </li> <li> <p>The following qualified state machine ARN refers to an alias named <code>PROD</code>.</p> <p> <code>arn:&lt;partition&gt;:states:&lt;region&gt;:&lt;account-id&gt;:stateMachine:&lt;myStateMachine:PROD&gt;</code> </p> <note> <p>If you provide a qualified state machine ARN that refers to a version ARN or an alias ARN, the request starts execution for that version or alias.</p> </note> </li> <li> <p>The following unqualified state machine ARN refers to a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:&lt;partition&gt;:states:&lt;region&gt;:&lt;account-id&gt;:stateMachine:&lt;myStateMachine&gt;</code> </p> </li> </ul> <p>If you start an execution with an unqualified state machine ARN, Step Functions uses the latest revision of the state machine for the execution.</p> <p>To start executions of a state machine <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html">version</a>, call <code>StartExecution</code> and provide the version ARN or the ARN of an <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html">alias</a> that points to the version.</p> <note> <p> <code>StartExecution</code> is idempotent for <code>STANDARD</code> workflows. For a <code>STANDARD</code> workflow, if you call <code>StartExecution</code> with the same name and input as a running execution, the call succeeds and return the same response as the original request. If the execution is closed or if the input is different, it returns a <code>400 ExecutionAlreadyExists</code> error. You can reuse names after 90 days. </p> <p> <code>StartExecution</code> isn''t idempotent for <code>EXPRESS</code> workflows. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartExecutionOutput'
        '480':
          description: ExecutionLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionLimitExceeded'
        '481':
          description: ExecutionAlreadyExists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionAlreadyExists'
        '482':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '483':
          description: InvalidExecutionInput
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidExecutionInput'
        '484':
          description: InvalidName
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidName'
        '485':
          description: StateMachineDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDoesNotExist'
        '486':
          description: StateMachineDeleting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDeleting'
        '487':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.StartExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.StartSyncExecution:
    post:
      operationId: StartSyncExecution
      description: '<p>Starts a Synchronous Express state machine execution. <code>StartSyncExecution</code> is not available for <code>STANDARD</code> workflows.</p> <note> <p> <code>StartSyncExecution</code> will return a <code>200 OK</code> response, even if your execution fails, because the status code in the API response doesn''t reflect function errors. Error codes are reserved for errors that prevent your execution from running, such as permissions errors, limit errors, or issues with your state machine code and configuration. </p> </note> <note> <p>This API action isn''t logged in CloudTrail.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSyncExecutionOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '481':
          description: InvalidExecutionInput
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidExecutionInput'
        '482':
          description: InvalidName
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidName'
        '483':
          description: StateMachineDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDoesNotExist'
        '484':
          description: StateMachineDeleting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDeleting'
        '485':
          description: StateMachineTypeNotSupported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineTypeNotSupported'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSyncExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.StartSyncExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.StopExecution:
    post:
      operationId: StopExecution
      description: <p>Stops an execution.</p> <p>This API action is not supported by <code>EXPRESS</code> state machines.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopExecutionOutput'
        '480':
          description: ExecutionDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionDoesNotExist'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.StopExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.TagResource:
    post:
      operationId: TagResource
      description: '<p>Add a tag to a Step Functions resource.</p> <p>An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>, and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html">Controlling Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '482':
          description: TooManyTags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTags'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.UntagResource:
    post:
      operationId: UntagResource
      description: Remove a tag from a Step Functions resource
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.UpdateMapRun:
    post:
      operationId: UpdateMapRun
      description: Updates an in-progress Map Run's configuration to include changes to the settings that control maximum concurrency and Map Run failure.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMapRunOutput'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMapRunInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.UpdateMapRun
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.UpdateStateMachine:
    post:
      operationId: UpdateStateMachine
      description: '<p>Updates an existing state machine by modifying its <code>definition</code>, <code>roleArn</code>, or <code>loggingConfiguration</code>. Running executions will continue to use the previous <code>definition</code> and <code>roleArn</code>. You must include at least one of <code>definition</code> or <code>roleArn</code> or you will receive a <code>MissingRequiredParameter</code> error.</p> <p>A qualified state machine ARN refers to a <i>Distributed Map state</i> defined within a state machine. For example, the qualified state machine ARN <code>arn:partition:states:region:account-id:stateMachine:stateMachineName/mapStateLabel</code> refers to a <i>Distributed Map state</i> with a label <code>mapStateLabel</code> in the state machine named <code>stateMachineName</code>.</p> <p>A qualified state machine ARN can either refer to a <i>Distributed Map state</i> defined within a state machine, a version ARN, or an alias ARN.</p> <p>The following are some examples of qualified and unqualified state machine ARNs:</p> <ul> <li> <p>The following qualified state machine ARN refers to a <i>Distributed Map state</i> with a label <code>mapStateLabel</code> in a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:partition:states:region:account-id:stateMachine:myStateMachine/mapStateLabel</code> </p> <note> <p>If you provide a qualified state machine ARN that refers to a <i>Distributed Map state</i>, the request fails with <code>ValidationException</code>.</p> </note> </li> <li> <p>The following qualified state machine ARN refers to an alias named <code>PROD</code>.</p> <p> <code>arn:&lt;partition&gt;:states:&lt;region&gt;:&lt;account-id&gt;:stateMachine:&lt;myStateMachine:PROD&gt;</code> </p> <note> <p>If you provide a qualified state machine ARN that refers to a version ARN or an alias ARN, the request starts execution for that version or alias.</p> </note> </li> <li> <p>The following unqualified state machine ARN refers to a state machine named <code>myStateMachine</code>.</p> <p> <code>arn:&lt;partition&gt;:states:&lt;region&gt;:&lt;account-id&gt;:stateMachine:&lt;myStateMachine&gt;</code> </p> </li> </ul> <p>After you update your state machine, you can set the <code>publish</code> parameter to <code>true</code> in the same action to publish a new <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html">version</a>. This way, you can opt-in to strict versioning of your state machine.</p> <note> <p>Step Functions assigns monotonically increasing integers for state machine versions, starting at version number 1.</p> </note> <note> <p>All <code>StartExecution</code> calls within a few seconds use the updated <code>definition</code> and <code>roleArn</code>. Executions started immediately after you call <code>UpdateStateMachine</code> may use the previous state machine <code>definition</code> and <code>roleArn</code>. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStateMachineOutput'
        '480':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '481':
          description: InvalidDefinition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDefinition'
        '482':
          description: InvalidLoggingConfiguration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLoggingConfiguration'
        '483':
          description: InvalidTracingConfiguration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTracingConfiguration'
        '484':
          description: MissingRequiredParameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameter'
        '485':
          description: StateMachineDeleting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDeleting'
        '486':
          description: StateMachineDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateMachineDoesNotExist'
        '487':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '488':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '489':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStateMachineInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.UpdateStateMachine
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSStepFunctions.UpdateStateMachineAlias:
    post:
      operationId: UpdateStateMachineAlias
      description: '<p>Updates the configuration of an existing state machine <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html">alias</a> by modifying its <code>description</code> or <code>routingConfiguration</code>.</p> <p>You must specify at least one of the <code>description</code> or <code>routingConfiguration</code> parameters to update a state machine alias.</p> <note> <p> <code>UpdateStateMachineAlias</code> is an idempotent API. Step Functions bases the idempotency check on the <code>stateMachineAliasArn</code>, <code>description</code>, and <code>routingConfiguration</code> parameters. Requests with the same parameters return an idempotent response.</p> </note> <note> <p>This operation is eventually consistent. All <a>StartExecution</a> requests made within a few seconds use the latest alias configuration. Executions started immediately after calling <code>UpdateStateMachineAlias</code> may use the previous routing configuration.</p> </note> <p> <b>Related operations:</b> </p> <ul> <li> <p> <a>CreateStateMachineAlias</a> </p> </li> <li> <p> <a>DescribeStateMachineAlias</a> </p> </li> <li> <p> <a>ListStateMachineAliases</a> </p> </li> <li> <p> <a>DeleteStateMachineAlias</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStateMachineAliasOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidArn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArn'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStateMachineAliasInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSStepFunctions.UpdateStateMachineAlias
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateActivityOutput:
      type: object
      required:
        - activityArn
        - creationDate
      properties:
        activityArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the created activity.
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the activity is created.
    CreateActivityInput:
      type: object
      required:
        - name
      title: CreateActivityInput
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: '<p>The name of the activity to create. This name must be unique for your Amazon Web Services account and region for 90 days. For more information, see <a href="https://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions"> Limits Related to State Machine Executions</a> in the <i>Step Functions Developer Guide</i>.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: '<p>The list of tags to add to a resource.</p> <p>An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>, and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html">Controlling Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>'
    ActivityLimitExceeded: {}
    InvalidName: {}
    TooManyTags: {}
    CreateStateMachineOutput:
      type: object
      required:
        - stateMachineArn
        - creationDate
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the created state machine.
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the state machine is created.
        stateMachineVersionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: 'The Amazon Resource Name (ARN) that identifies the created state machine version. If you do not set the <code>publish</code> parameter to <code>true</code>, this field returns null value.'
    CreateStateMachineInput:
      type: object
      required:
        - name
        - definition
        - roleArn
      title: CreateStateMachineInput
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: '<p>The name of the state machine. </p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>'
        definition:
          allOf:
            - $ref: '#/components/schemas/Definition'
            - description: 'The Amazon States Language definition of the state machine. See <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html">Amazon States Language</a>.'
        roleArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
        type:
          allOf:
            - $ref: '#/components/schemas/StateMachineType'
            - description: Determines whether a Standard or Express state machine is created. The default is <code>STANDARD</code>. You cannot update the <code>type</code> of a state machine once it has been created.
        loggingConfiguration:
          allOf:
            - $ref: '#/components/schemas/LoggingConfiguration'
            - description: '<p>Defines what execution history events are logged and where they are logged.</p> <note> <p>By default, the <code>level</code> is set to <code>OFF</code>. For more information see <a href="https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html">Log Levels</a> in the Step Functions User Guide.</p> </note>'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: '<p>Tags to be added when creating a state machine.</p> <p>An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>, and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html">Controlling Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>'
        tracingConfiguration:
          allOf:
            - $ref: '#/components/schemas/TracingConfiguration'
            - description: Selects whether X-Ray tracing is enabled.
        publish:
          allOf:
            - $ref: '#/components/schemas/Publish'
            - description: Set to <code>true</code> to publish the first version of the state machine during creation. The default is <code>false</code>.
        versionDescription:
          allOf:
            - $ref: '#/components/schemas/VersionDescription'
            - description: 'Sets description about the state machine version. You can only set the description if the <code>publish</code> parameter is set to <code>true</code>. Otherwise, if you set <code>versionDescription</code>, but <code>publish</code> to <code>false</code>, this API action throws <code>ValidationException</code>.'
    InvalidArn: {}
    InvalidDefinition: {}
    InvalidLoggingConfiguration: {}
    InvalidTracingConfiguration: {}
    StateMachineAlreadyExists: {}
    StateMachineDeleting: {}
    StateMachineLimitExceeded: {}
    StateMachineTypeNotSupported: {}
    ValidationException: {}
    ConflictException: {}
    CreateStateMachineAliasOutput:
      type: object
      required:
        - stateMachineAliasArn
        - creationDate
      properties:
        stateMachineAliasArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the created state machine alias.
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the state machine alias was created.
    CreateStateMachineAliasInput:
      type: object
      required:
        - name
        - routingConfiguration
      title: CreateStateMachineAliasInput
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/AliasDescription'
            - description: A description for the state machine alias.
        name:
          allOf:
            - $ref: '#/components/schemas/CharacterRestrictedName'
            - description: '<p>The name of the state machine alias.</p> <p>To avoid conflict with version ARNs, don''t use an integer in the name of the alias.</p>'
        routingConfiguration:
          allOf:
            - $ref: '#/components/schemas/RoutingConfigurationList'
            - description: The routing configuration of a state machine alias. The routing configuration shifts execution traffic between two state machine versions. <code>routingConfiguration</code> contains an array of <code>RoutingConfig</code> objects that specify up to two state machine versions. Step Functions then randomly choses which version to run an execution with based on the weight assigned to each <code>RoutingConfig</code>.
    ResourceNotFound: {}
    ServiceQuotaExceededException: {}
    DeleteActivityOutput:
      type: object
      properties: {}
    DeleteActivityInput:
      type: object
      required:
        - activityArn
      title: DeleteActivityInput
      properties:
        activityArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the activity to delete.
    DeleteStateMachineOutput:
      type: object
      properties: {}
    DeleteStateMachineInput:
      type: object
      required:
        - stateMachineArn
      title: DeleteStateMachineInput
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the state machine to delete.
    DeleteStateMachineAliasOutput:
      type: object
      properties: {}
    DeleteStateMachineAliasInput:
      type: object
      required:
        - stateMachineAliasArn
      title: DeleteStateMachineAliasInput
      properties:
        stateMachineAliasArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the state machine alias to delete.
    DeleteStateMachineVersionOutput:
      type: object
      properties: {}
    DeleteStateMachineVersionInput:
      type: object
      required:
        - stateMachineVersionArn
      title: DeleteStateMachineVersionInput
      properties:
        stateMachineVersionArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: The Amazon Resource Name (ARN) of the state machine version to delete.
    DescribeActivityOutput:
      type: object
      required:
        - activityArn
        - name
        - creationDate
      properties:
        activityArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the activity.
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: '<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>'
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the activity is created.
    DescribeActivityInput:
      type: object
      required:
        - activityArn
      title: DescribeActivityInput
      properties:
        activityArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the activity to describe.
    ActivityDoesNotExist: {}
    DescribeExecutionOutput:
      type: object
      required:
        - executionArn
        - stateMachineArn
        - status
        - startDate
      properties:
        executionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the execution.
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the executed stated machine.
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: '<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>'
        status:
          allOf:
            - $ref: '#/components/schemas/ExecutionStatus'
            - description: The current status of the execution.
        startDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the execution is started.
        stopDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'If the execution ended, the date the execution stopped.'
        input:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The string that contains the JSON input data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        inputDetails:
          $ref: '#/components/schemas/CloudWatchEventsExecutionDataDetails'
        output:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: '<p>The JSON output data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p> <note> <p>This field is set only if the execution succeeds. If the execution fails, this field is null.</p> </note>'
        outputDetails:
          $ref: '#/components/schemas/CloudWatchEventsExecutionDataDetails'
        traceHeader:
          allOf:
            - $ref: '#/components/schemas/TraceHeader'
            - description: The X-Ray trace header that was passed to the execution.
        mapRunArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: 'The Amazon Resource Name (ARN) that identifies a Map Run, which dispatched this execution.'
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error string if the state machine execution failed.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: The cause string if the state machine execution failed.
        stateMachineVersionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) of the state machine version associated with the execution. The version ARN is a combination of state machine ARN and the version number separated by a colon (:). For example, <code>stateMachineARN:1</code>.</p> <p>If you start an execution from a <code>StartExecution</code> request without specifying a state machine version or alias ARN, Step Functions returns a null value.</p>'
        stateMachineAliasArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) of the state machine alias associated with the execution. The alias ARN is a combination of state machine ARN and the alias name separated by a colon (:). For example, <code>stateMachineARN:PROD</code>.</p> <p>If you start an execution from a <code>StartExecution</code> request with a state machine version ARN, this field will be null.</p>'
    DescribeExecutionInput:
      type: object
      required:
        - executionArn
      title: DescribeExecutionInput
      properties:
        executionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the execution to describe.
    ExecutionDoesNotExist: {}
    DescribeMapRunOutput:
      type: object
      required:
        - mapRunArn
        - executionArn
        - status
        - startDate
        - maxConcurrency
        - toleratedFailurePercentage
        - toleratedFailureCount
        - itemCounts
        - executionCounts
      properties:
        mapRunArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: The Amazon Resource Name (ARN) that identifies a Map Run.
        executionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the execution in which the Map Run was started.
        status:
          allOf:
            - $ref: '#/components/schemas/MapRunStatus'
            - description: The current status of the Map Run.
        startDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date when the Map Run was started.
        stopDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date when the Map Run was stopped.
        maxConcurrency:
          allOf:
            - $ref: '#/components/schemas/MaxConcurrency'
            - description: The maximum number of child workflow executions configured to run in parallel for the Map Run at the same time.
        toleratedFailurePercentage:
          allOf:
            - $ref: '#/components/schemas/ToleratedFailurePercentage'
            - description: The maximum percentage of failed child workflow executions before the Map Run fails.
        toleratedFailureCount:
          allOf:
            - $ref: '#/components/schemas/ToleratedFailureCount'
            - description: The maximum number of failed child workflow executions before the Map Run fails.
        itemCounts:
          allOf:
            - $ref: '#/components/schemas/MapRunItemCounts'
            - description: 'A JSON object that contains information about the total number of items, and the item count for each processing status, such as <code>pending</code> and <code>failed</code>.'
        executionCounts:
          allOf:
            - $ref: '#/components/schemas/MapRunExecutionCounts'
            - description: 'A JSON object that contains information about the total number of child workflow executions for the Map Run, and the count of child workflow executions for each status, such as <code>failed</code> and <code>succeeded</code>.'
    DescribeMapRunInput:
      type: object
      required:
        - mapRunArn
      title: DescribeMapRunInput
      properties:
        mapRunArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: The Amazon Resource Name (ARN) that identifies a Map Run.
    DescribeStateMachineOutput:
      type: object
      required:
        - stateMachineArn
        - name
        - definition
        - roleArn
        - type
        - creationDate
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) that identifies the state machine.</p> <p>If you specified a state machine version ARN in your request, the API returns the version ARN. The version ARN is a combination of state machine ARN and the version number separated by a colon (:). For example, <code>stateMachineARN:1</code>.</p>'
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: '<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>'
        status:
          allOf:
            - $ref: '#/components/schemas/StateMachineStatus'
            - description: The current status of the state machine.
        definition:
          allOf:
            - $ref: '#/components/schemas/Definition'
            - description: 'The Amazon States Language definition of the state machine. See <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html">Amazon States Language</a>.'
        roleArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the IAM role used when creating this state machine. (The IAM role maintains security by granting Step Functions access to Amazon Web Services resources.)
        type:
          allOf:
            - $ref: '#/components/schemas/StateMachineType'
            - description: The <code>type</code> of the state machine (<code>STANDARD</code> or <code>EXPRESS</code>).
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: '<p>The date the state machine is created.</p> <p>For a state machine version, <code>creationDate</code> is the date the version was created.</p>'
        loggingConfiguration:
          $ref: '#/components/schemas/LoggingConfiguration'
        tracingConfiguration:
          allOf:
            - $ref: '#/components/schemas/TracingConfiguration'
            - description: Selects whether X-Ray tracing is enabled.
        label:
          allOf:
            - $ref: '#/components/schemas/MapRunLabel'
            - description: A user-defined or an auto-generated string that identifies a <code>Map</code> state. This parameter is present only if the <code>stateMachineArn</code> specified in input is a qualified state machine ARN.
        revisionId:
          allOf:
            - $ref: '#/components/schemas/RevisionId'
            - description: '<p>The revision identifier for the state machine.</p> <p>Use the <code>revisionId</code> parameter to compare between versions of a state machine configuration used for executions without performing a diff of the properties, such as <code>definition</code> and <code>roleArn</code>.</p>'
        description:
          allOf:
            - $ref: '#/components/schemas/VersionDescription'
            - description: The description of the state machine version.
    DescribeStateMachineInput:
      type: object
      required:
        - stateMachineArn
      title: DescribeStateMachineInput
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) of the state machine for which you want the information.</p> <p>If you specify a state machine version ARN, this API returns details about that version. The version ARN is a combination of state machine ARN and the version number separated by a colon (:). For example, <code>stateMachineARN:1</code>.</p>'
    StateMachineDoesNotExist: {}
    DescribeStateMachineAliasOutput:
      type: object
      properties:
        stateMachineAliasArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the state machine alias.
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the state machine alias.
        description:
          allOf:
            - $ref: '#/components/schemas/AliasDescription'
            - description: A description of the alias.
        routingConfiguration:
          allOf:
            - $ref: '#/components/schemas/RoutingConfigurationList'
            - description: The routing configuration of the alias.
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the state machine alias was created.
        updateDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: '<p>The date the state machine alias was last updated.</p> <p>For a newly created state machine, this is the same as the creation date.</p>'
    DescribeStateMachineAliasInput:
      type: object
      required:
        - stateMachineAliasArn
      title: DescribeStateMachineAliasInput
      properties:
        stateMachineAliasArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the state machine alias.
    DescribeStateMachineForExecutionOutput:
      type: object
      required:
        - stateMachineArn
        - name
        - definition
        - roleArn
        - updateDate
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the state machine associated with the execution.
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the state machine associated with the execution.
        definition:
          allOf:
            - $ref: '#/components/schemas/Definition'
            - description: 'The Amazon States Language definition of the state machine. See <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html">Amazon States Language</a>.'
        roleArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: 'The Amazon Resource Name (ARN) of the IAM role of the State Machine for the execution. '
        updateDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time the state machine associated with an execution was updated. For a newly created state machine, this is the creation date.'
        loggingConfiguration:
          $ref: '#/components/schemas/LoggingConfiguration'
        tracingConfiguration:
          allOf:
            - $ref: '#/components/schemas/TracingConfiguration'
            - description: Selects whether X-Ray tracing is enabled.
        mapRunArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: The Amazon Resource Name (ARN) of the Map Run that started the child workflow execution. This field is returned only if the <code>executionArn</code> is a child workflow execution that was started by a Distributed Map state.
        label:
          allOf:
            - $ref: '#/components/schemas/MapRunLabel'
            - description: A user-defined or an auto-generated string that identifies a <code>Map</code> state. This ﬁeld is returned only if the <code>executionArn</code> is a child workflow execution that was started by a Distributed Map state.
        revisionId:
          allOf:
            - $ref: '#/components/schemas/RevisionId'
            - description: '<p>The revision identifier for the state machine. The first revision ID when you create the state machine is null.</p> <p>Use the state machine <code>revisionId</code> parameter to compare the revision of a state machine with the configuration of the state machine used for executions without performing a diff of the properties, such as <code>definition</code> and <code>roleArn</code>.</p>'
    DescribeStateMachineForExecutionInput:
      type: object
      required:
        - executionArn
      title: DescribeStateMachineForExecutionInput
      properties:
        executionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the execution you want state machine information for.
    GetActivityTaskOutput:
      type: object
      properties:
        taskToken:
          allOf:
            - $ref: '#/components/schemas/TaskToken'
            - description: 'A token that identifies the scheduled task. This token must be copied and included in subsequent calls to <a>SendTaskHeartbeat</a>, <a>SendTaskSuccess</a> or <a>SendTaskFailure</a> in order to report the progress or completion of the task.'
        input:
          allOf:
            - $ref: '#/components/schemas/SensitiveDataJobInput'
            - description: 'The string that contains the JSON input data for the task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
    GetActivityTaskInput:
      type: object
      required:
        - activityArn
      title: GetActivityTaskInput
      properties:
        activityArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the activity to retrieve tasks from (assigned when you create the task using <a>CreateActivity</a>.)
        workerName:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: You can provide an arbitrary name in order to identify the worker that the task is assigned to. This name is used when it is logged in the execution history.
    ActivityWorkerLimitExceeded: {}
    GetExecutionHistoryOutput:
      type: object
      required:
        - events
      properties:
        events:
          allOf:
            - $ref: '#/components/schemas/HistoryEventList'
            - description: The list of events that occurred in the execution.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
    GetExecutionHistoryInput:
      type: object
      required:
        - executionArn
      title: GetExecutionHistoryInput
      properties:
        executionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the execution.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/PageSize'
            - description: <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
        reverseOrder:
          allOf:
            - $ref: '#/components/schemas/ReverseOrder'
            - description: Lists events in descending order of their <code>timeStamp</code>.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
        includeExecutionData:
          allOf:
            - $ref: '#/components/schemas/IncludeExecutionDataGetExecutionHistory'
            - description: You can select whether execution data (input or output of a history event) is returned. The default is <code>true</code>.
    InvalidToken: {}
    ListActivitiesOutput:
      type: object
      required:
        - activities
      properties:
        activities:
          allOf:
            - $ref: '#/components/schemas/ActivityList'
            - description: The list of activities.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
    ListActivitiesInput:
      type: object
      title: ListActivitiesInput
      properties:
        maxResults:
          allOf:
            - $ref: '#/components/schemas/PageSize'
            - description: <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
    ListExecutionsOutput:
      type: object
      required:
        - executions
      properties:
        executions:
          allOf:
            - $ref: '#/components/schemas/ExecutionList'
            - description: The list of matching executions.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/ListExecutionsPageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
    ListExecutionsInput:
      type: object
      title: ListExecutionsInput
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) of the state machine whose executions is listed.</p> <p>You can specify either a <code>mapRunArn</code> or a <code>stateMachineArn</code>, but not both.</p> <p>You can also return a list of executions associated with a specific <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-alias.html">alias</a> or <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-state-machine-version.html">version</a>, by specifying an alias ARN or a version ARN in the <code>stateMachineArn</code> parameter.</p>'
        statusFilter:
          allOf:
            - $ref: '#/components/schemas/ExecutionStatus'
            - description: 'If specified, only list the executions whose current execution status matches the given filter.'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/PageSize'
            - description: <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
        nextToken:
          allOf:
            - $ref: '#/components/schemas/ListExecutionsPageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
        mapRunArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: '<p>The Amazon Resource Name (ARN) of the Map Run that started the child workflow executions. If the <code>mapRunArn</code> field is specified, a list of all of the child workflow executions started by a Map Run is returned. For more information, see <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-examine-map-run.html">Examining Map Run</a> in the <i>Step Functions Developer Guide</i>.</p> <p>You can specify either a <code>mapRunArn</code> or a <code>stateMachineArn</code>, but not both.</p>'
    ListMapRunsOutput:
      type: object
      required:
        - mapRuns
      properties:
        mapRuns:
          allOf:
            - $ref: '#/components/schemas/MapRunList'
            - description: 'An array that lists information related to a Map Run, such as the Amazon Resource Name (ARN) of the Map Run and the ARN of the state machine that started the Map Run.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
    ListMapRunsInput:
      type: object
      required:
        - executionArn
      title: ListMapRunsInput
      properties:
        executionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the execution for which the Map Runs must be listed.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/PageSize'
            - description: <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
    ListStateMachineAliasesOutput:
      type: object
      required:
        - stateMachineAliases
      properties:
        stateMachineAliases:
          allOf:
            - $ref: '#/components/schemas/StateMachineAliasList'
            - description: Aliases for the state machine.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
    ListStateMachineAliasesInput:
      type: object
      required:
        - stateMachineArn
      title: ListStateMachineAliasesInput
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) of the state machine for which you want to list aliases.</p> <p>If you specify a state machine version ARN, this API returns a list of aliases for that version.</p>'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/PageSize'
            - description: <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
    ListStateMachineVersionsOutput:
      type: object
      required:
        - stateMachineVersions
      properties:
        stateMachineVersions:
          allOf:
            - $ref: '#/components/schemas/StateMachineVersionList'
            - description: Versions for the state machine.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
    ListStateMachineVersionsInput:
      type: object
      required:
        - stateMachineArn
      title: ListStateMachineVersionsInput
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the state machine.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/PageSize'
            - description: <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
    ListStateMachinesOutput:
      type: object
      required:
        - stateMachines
      properties:
        stateMachines:
          $ref: '#/components/schemas/StateMachineList'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
    ListStateMachinesInput:
      type: object
      title: ListStateMachinesInput
      properties:
        maxResults:
          allOf:
            - $ref: '#/components/schemas/PageSize'
            - description: <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PageToken'
            - description: 'If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.'
    ListTagsForResourceOutput:
      type: object
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: An array of tags associated with the resource.
    ListTagsForResourceInput:
      type: object
      required:
        - resourceArn
      title: ListTagsForResourceInput
      properties:
        resourceArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) for the Step Functions state machine or activity.
    PublishStateMachineVersionOutput:
      type: object
      required:
        - creationDate
        - stateMachineVersionArn
      properties:
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the version was created.
        stateMachineVersionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) (ARN) that identifies the state machine version.
    PublishStateMachineVersionInput:
      type: object
      required:
        - stateMachineArn
      title: PublishStateMachineVersionInput
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the state machine.
        revisionId:
          allOf:
            - $ref: '#/components/schemas/RevisionId'
            - description: '<p>Only publish the state machine version if the current state machine''s revision ID matches the specified ID.</p> <p>Use this option to avoid publishing a version if the state machine changed since you last updated it. If the specified revision ID doesn''t match the state machine''s current revision ID, the API returns <code>ConflictException</code>.</p> <note> <p>To specify an initial revision ID for a state machine with no revision ID assigned, specify the string <code>INITIAL</code> for the <code>revisionId</code> parameter. For example, you can specify a <code>revisionID</code> of <code>INITIAL</code> when you create a state machine using the <a>CreateStateMachine</a> API action.</p> </note>'
        description:
          allOf:
            - $ref: '#/components/schemas/VersionDescription'
            - description: An optional description of the state machine version.
    SendTaskFailureOutput:
      type: object
      properties: {}
    SendTaskFailureInput:
      type: object
      required:
        - taskToken
      title: SendTaskFailureInput
      properties:
        taskToken:
          allOf:
            - $ref: '#/components/schemas/TaskToken'
            - description: 'The token that represents this task. Task tokens are generated by Step Functions when tasks are assigned to a worker, or in the <a href="https://docs.aws.amazon.com/step-functions/latest/dg/input-output-contextobject.html">context object</a> when a workflow enters a task state. See <a>GetActivityTaskOutput$taskToken</a>.'
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
    TaskDoesNotExist: {}
    TaskTimedOut: {}
    SendTaskHeartbeatOutput:
      type: object
      properties: {}
    SendTaskHeartbeatInput:
      type: object
      required:
        - taskToken
      title: SendTaskHeartbeatInput
      properties:
        taskToken:
          allOf:
            - $ref: '#/components/schemas/TaskToken'
            - description: 'The token that represents this task. Task tokens are generated by Step Functions when tasks are assigned to a worker, or in the <a href="https://docs.aws.amazon.com/step-functions/latest/dg/input-output-contextobject.html">context object</a> when a workflow enters a task state. See <a>GetActivityTaskOutput$taskToken</a>.'
    SendTaskSuccessOutput:
      type: object
      properties: {}
    SendTaskSuccessInput:
      type: object
      required:
        - taskToken
        - output
      title: SendTaskSuccessInput
      properties:
        taskToken:
          allOf:
            - $ref: '#/components/schemas/TaskToken'
            - description: 'The token that represents this task. Task tokens are generated by Step Functions when tasks are assigned to a worker, or in the <a href="https://docs.aws.amazon.com/step-functions/latest/dg/input-output-contextobject.html">context object</a> when a workflow enters a task state. See <a>GetActivityTaskOutput$taskToken</a>.'
        output:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The JSON output of the task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
    InvalidOutput: {}
    StartExecutionOutput:
      type: object
      required:
        - executionArn
        - startDate
      properties:
        executionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the execution.
        startDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the execution is started.
    StartExecutionInput:
      type: object
      required:
        - stateMachineArn
      title: StartExecutionInput
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) of the state machine to execute.</p> <p>The <code>stateMachineArn</code> parameter accepts one of the following inputs:</p> <ul> <li> <p> <b>An unqualified state machine ARN</b> – Refers to a state machine ARN that isn''t qualified with a version or alias ARN. The following is an example of an unqualified state machine ARN.</p> <p> <code>arn:&lt;partition&gt;:states:&lt;region&gt;:&lt;account-id&gt;:stateMachine:&lt;myStateMachine&gt;</code> </p> <p>Step Functions doesn''t associate state machine executions that you start with an unqualified ARN with a version. This is true even if that version uses the same revision that the execution used.</p> </li> <li> <p> <b>A state machine version ARN</b> – Refers to a version ARN, which is a combination of state machine ARN and the version number separated by a colon (:). The following is an example of the ARN for version 10. </p> <p> <code>arn:&lt;partition&gt;:states:&lt;region&gt;:&lt;account-id&gt;:stateMachine:&lt;myStateMachine&gt;:10</code> </p> <p>Step Functions doesn''t associate executions that you start with a version ARN with any aliases that point to that version.</p> </li> <li> <p> <b>A state machine alias ARN</b> – Refers to an alias ARN, which is a combination of state machine ARN and the alias name separated by a colon (:). The following is an example of the ARN for an alias named <code>PROD</code>.</p> <p> <code>arn:&lt;partition&gt;:states:&lt;region&gt;:&lt;account-id&gt;:stateMachine:&lt;myStateMachine:PROD&gt;</code> </p> <p>Step Functions associates executions that you start with an alias ARN with that alias and the state machine version used for that execution.</p> </li> </ul>'
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: '<p>Optional name of the execution. This name must be unique for your Amazon Web Services account, Region, and state machine for 90 days. For more information, see <a href="https://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions"> Limits Related to State Machine Executions</a> in the <i>Step Functions Developer Guide</i>.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>'
        input:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: '<p>The string that contains the JSON input data for the execution, for example:</p> <p> <code>"input": "{\"first_name\" : \"test\"}"</code> </p> <note> <p>If you don''t include any JSON input data, you still must include the two braces, for example: <code>"input": "{}"</code> </p> </note> <p>Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p>'
        traceHeader:
          allOf:
            - $ref: '#/components/schemas/TraceHeader'
            - description: Passes the X-Ray trace header. The trace header can also be passed in the request payload.
    ExecutionLimitExceeded: {}
    ExecutionAlreadyExists: {}
    InvalidExecutionInput: {}
    StartSyncExecutionOutput:
      type: object
      required:
        - executionArn
        - startDate
        - stopDate
        - status
      properties:
        executionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the execution.
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the state machine.
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the execution.
        startDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the execution is started.
        stopDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'If the execution has already ended, the date the execution stopped.'
        status:
          allOf:
            - $ref: '#/components/schemas/SyncExecutionStatus'
            - description: The current status of the execution.
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
        input:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The string that contains the JSON input data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        inputDetails:
          $ref: '#/components/schemas/CloudWatchEventsExecutionDataDetails'
        output:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: '<p>The JSON output data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p> <note> <p>This field is set only if the execution succeeds. If the execution fails, this field is null.</p> </note>'
        outputDetails:
          $ref: '#/components/schemas/CloudWatchEventsExecutionDataDetails'
        traceHeader:
          allOf:
            - $ref: '#/components/schemas/TraceHeader'
            - description: The X-Ray trace header that was passed to the execution.
        billingDetails:
          allOf:
            - $ref: '#/components/schemas/BillingDetails'
            - description: 'An object that describes workflow billing details, including billed duration and memory use.'
    StartSyncExecutionInput:
      type: object
      required:
        - stateMachineArn
      title: StartSyncExecutionInput
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the state machine to execute.
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the execution.
        input:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: '<p>The string that contains the JSON input data for the execution, for example:</p> <p> <code>"input": "{\"first_name\" : \"test\"}"</code> </p> <note> <p>If you don''t include any JSON input data, you still must include the two braces, for example: <code>"input": "{}"</code> </p> </note> <p>Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p>'
        traceHeader:
          allOf:
            - $ref: '#/components/schemas/TraceHeader'
            - description: Passes the X-Ray trace header. The trace header can also be passed in the request payload.
    StopExecutionOutput:
      type: object
      required:
        - stopDate
      properties:
        stopDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the execution is stopped.
    StopExecutionInput:
      type: object
      required:
        - executionArn
      title: StopExecutionInput
      properties:
        executionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the execution to stop.
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
    TagResourceOutput:
      type: object
      properties: {}
    TagResourceInput:
      type: object
      required:
        - resourceArn
        - tags
      title: TagResourceInput
      properties:
        resourceArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) for the Step Functions state machine or activity.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: '<p>The list of tags to add to a resource.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>'
    UntagResourceOutput:
      type: object
      properties: {}
    UntagResourceInput:
      type: object
      required:
        - resourceArn
        - tagKeys
      title: UntagResourceInput
      properties:
        resourceArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) for the Step Functions state machine or activity.
        tagKeys:
          allOf:
            - $ref: '#/components/schemas/TagKeyList'
            - description: The list of tags to remove from the resource.
    UpdateMapRunOutput:
      type: object
      properties: {}
    UpdateMapRunInput:
      type: object
      required:
        - mapRunArn
      title: UpdateMapRunInput
      properties:
        mapRunArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: The Amazon Resource Name (ARN) of a Map Run.
        maxConcurrency:
          allOf:
            - $ref: '#/components/schemas/MaxConcurrency'
            - description: The maximum number of child workflow executions that can be specified to run in parallel for the Map Run at the same time.
        toleratedFailurePercentage:
          allOf:
            - $ref: '#/components/schemas/ToleratedFailurePercentage'
            - description: The maximum percentage of failed items before the Map Run fails.
        toleratedFailureCount:
          allOf:
            - $ref: '#/components/schemas/ToleratedFailureCount'
            - description: The maximum number of failed items before the Map Run fails.
    UpdateStateMachineOutput:
      type: object
      required:
        - updateDate
      properties:
        updateDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time the state machine was updated.
        revisionId:
          allOf:
            - $ref: '#/components/schemas/RevisionId'
            - description: The revision identifier for the updated state machine.
        stateMachineVersionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) of the published state machine version.</p> <p>If the <code>publish</code> parameter isn''t set to <code>true</code>, this field returns null.</p>'
    UpdateStateMachineInput:
      type: object
      required:
        - stateMachineArn
      title: UpdateStateMachineInput
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the state machine.
        definition:
          allOf:
            - $ref: '#/components/schemas/Definition'
            - description: 'The Amazon States Language definition of the state machine. See <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html">Amazon States Language</a>.'
        roleArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the IAM role of the state machine.
        loggingConfiguration:
          allOf:
            - $ref: '#/components/schemas/LoggingConfiguration'
            - description: Use the <code>LoggingConfiguration</code> data type to set CloudWatch Logs options.
        tracingConfiguration:
          allOf:
            - $ref: '#/components/schemas/TracingConfiguration'
            - description: Selects whether X-Ray tracing is enabled.
        publish:
          allOf:
            - $ref: '#/components/schemas/Publish'
            - description: 'Specifies whether the state machine version is published. The default is <code>false</code>. To publish a version after updating the state machine, set <code>publish</code> to <code>true</code>.'
        versionDescription:
          allOf:
            - $ref: '#/components/schemas/VersionDescription'
            - description: <p>An optional description of the state machine version to publish.</p> <p>You can only specify the <code>versionDescription</code> parameter if you've set <code>publish</code> to <code>true</code>.</p>
    MissingRequiredParameter: {}
    UpdateStateMachineAliasOutput:
      type: object
      required:
        - updateDate
      properties:
        updateDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time the state machine alias was updated.
    UpdateStateMachineAliasInput:
      type: object
      required:
        - stateMachineAliasArn
      title: UpdateStateMachineAliasInput
      properties:
        stateMachineAliasArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the state machine alias.
        description:
          allOf:
            - $ref: '#/components/schemas/AliasDescription'
            - description: A description of the state machine alias.
        routingConfiguration:
          allOf:
            - $ref: '#/components/schemas/RoutingConfigurationList'
            - description: <p>The routing configuration of the state machine alias.</p> <p>An array of <code>RoutingConfig</code> objects that specifies up to two state machine versions that the alias starts executions for.</p>
    SensitiveError:
      type: string
      minLength: 0
      maxLength: 256
      format: password
    SensitiveCause:
      type: string
      minLength: 0
      maxLength: 32768
      format: password
    ActivityFailedEventDetails:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about an activity that failed during an execution.
    ActivityListItem:
      type: object
      required:
        - activityArn
        - name
        - creationDate
      properties:
        activityArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the activity.
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: '<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>'
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the activity is created.
      description: Contains details about an activity.
    ActivityList:
      type: array
      items:
        $ref: '#/components/schemas/ActivityListItem'
    Arn:
      type: string
      minLength: 1
      maxLength: 256
    Name:
      type: string
      minLength: 1
      maxLength: 80
    Timestamp:
      type: string
      format: date-time
    ActivityScheduleFailedEventDetails:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about an activity schedule failure that occurred during an execution.
    SensitiveData:
      type: string
      maxLength: 262144
      format: password
    HistoryEventExecutionDataDetails:
      type: object
      properties:
        truncated:
          allOf:
            - $ref: '#/components/schemas/truncated'
            - description: Indicates whether input or output was truncated in the response. Always <code>false</code> for API calls.
      description: Provides details about input or output in an execution history event.
    TimeoutInSeconds:
      type: integer
    ActivityScheduledEventDetails:
      type: object
      required:
        - resource
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the scheduled activity.
        input:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The JSON data input to the activity task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        inputDetails:
          allOf:
            - $ref: '#/components/schemas/HistoryEventExecutionDataDetails'
            - description: Contains details about the input for an execution history event.
        timeoutInSeconds:
          allOf:
            - $ref: '#/components/schemas/TimeoutInSeconds'
            - description: The maximum allowed duration of the activity task.
        heartbeatInSeconds:
          allOf:
            - $ref: '#/components/schemas/TimeoutInSeconds'
            - description: The maximum allowed duration between two heartbeats for the activity task.
      description: Contains details about an activity scheduled during an execution.
    Identity:
      type: string
      maxLength: 256
    ActivityStartedEventDetails:
      type: object
      properties:
        workerName:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The name of the worker that the task is assigned to. These names are provided by the workers when calling <a>GetActivityTask</a>.
      description: Contains details about the start of an activity during an execution.
    ActivitySucceededEventDetails:
      type: object
      properties:
        output:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The JSON data output by the activity task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        outputDetails:
          allOf:
            - $ref: '#/components/schemas/HistoryEventExecutionDataDetails'
            - description: Contains details about the output of an execution history event.
      description: Contains details about an activity that successfully terminated during an execution.
    ActivityTimedOutEventDetails:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the timeout.
      description: Contains details about an activity timeout that occurred during an execution.
    AliasDescription:
      type: string
      maxLength: 256
      format: password
    BilledDuration:
      type: integer
      minimum: 0
    BilledMemoryUsed:
      type: integer
      minimum: 0
    BillingDetails:
      type: object
      properties:
        billedMemoryUsedInMB:
          allOf:
            - $ref: '#/components/schemas/BilledMemoryUsed'
            - description: 'Billed memory consumption of your workflow, in MB.'
        billedDurationInMilliseconds:
          allOf:
            - $ref: '#/components/schemas/BilledDuration'
            - description: 'Billed duration of your workflow, in milliseconds.'
      description: An object that describes workflow billing details.
    CharacterRestrictedName:
      type: string
      pattern: '^(?=.*[a-zA-Z_\-\.])[a-zA-Z0-9_\-\.]+$'
      minLength: 1
      maxLength: 80
    includedDetails:
      type: boolean
    CloudWatchEventsExecutionDataDetails:
      type: object
      properties:
        included:
          allOf:
            - $ref: '#/components/schemas/includedDetails'
            - description: 'Indicates whether input or output was included in the response. Always <code>true</code> for API calls. '
      description: Provides details about execution input or output.
    CloudWatchLogsLogGroup:
      type: object
      properties:
        logGroupArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: 'The ARN of the the CloudWatch log group to which you want your logs emitted to. The ARN must end with <code>:*</code> '
      description: <p/>
    ConnectorParameters:
      type: string
      minLength: 0
      maxLength: 262144
      format: password
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    RoutingConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingConfigurationListItem'
      minItems: 1
      maxItems: 2
    Definition:
      type: string
      minLength: 1
      maxLength: 1048576
      format: password
    StateMachineType:
      type: string
      enum:
        - STANDARD
        - EXPRESS
    LoggingConfiguration:
      type: object
      properties:
        level:
          allOf:
            - $ref: '#/components/schemas/LogLevel'
            - description: Defines which category of execution history events are logged.
        includeExecutionData:
          allOf:
            - $ref: '#/components/schemas/IncludeExecutionData'
            - description: 'Determines whether execution data is included in your log. When set to <code>false</code>, data is excluded.'
        destinations:
          allOf:
            - $ref: '#/components/schemas/LogDestinationList'
            - description: 'An array of objects that describes where your execution history events will be logged. Limited to size 1. Required, if your log level is not set to <code>OFF</code>.'
      description: The <code>LoggingConfiguration</code> data type is used to set CloudWatch Logs options.
    TracingConfiguration:
      type: object
      properties:
        enabled:
          allOf:
            - $ref: '#/components/schemas/Enabled'
            - description: 'When set to <code>true</code>, X-Ray tracing is enabled.'
      description: 'Selects whether or not the state machine''s X-Ray tracing is enabled. Default is <code>false</code> '
    Publish:
      type: boolean
    VersionDescription:
      type: string
      maxLength: 256
      format: password
    LongArn:
      type: string
      minLength: 1
      maxLength: 2000
    ExecutionStatus:
      type: string
      enum:
        - RUNNING
        - SUCCEEDED
        - FAILED
        - TIMED_OUT
        - ABORTED
    TraceHeader:
      type: string
      pattern: '\p{ASCII}*'
      minLength: 0
      maxLength: 256
    MapRunStatus:
      type: string
      enum:
        - RUNNING
        - SUCCEEDED
        - FAILED
        - ABORTED
    MaxConcurrency:
      type: integer
      minimum: 0
    ToleratedFailurePercentage:
      type: number
      format: float
      minimum: 0
      maximum: 100
    ToleratedFailureCount:
      type: integer
      minimum: 0
    MapRunItemCounts:
      type: object
      required:
        - pending
        - running
        - succeeded
        - failed
        - timedOut
        - aborted
        - total
        - resultsWritten
      properties:
        pending:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: The total number of items to process in child workflow executions that haven't started running yet.
        running:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: The total number of items being processed in child workflow executions that are currently in-progress.
        succeeded:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: The total number of items processed in child workflow executions that have completed successfully.
        failed:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: The total number of items processed in child workflow executions that have failed.
        timedOut:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: The total number of items processed in child workflow executions that have timed out.
        aborted:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: 'The total number of items processed in child workflow executions that were either stopped by the user or by Step Functions, because the Map Run failed.'
        total:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: The total number of items processed in all the child workflow executions started by a Map Run.
        resultsWritten:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: 'Returns the count of items whose results were written by <code>ResultWriter</code>. For more information, see <a href="https://docs.aws.amazon.com/step-functions/latest/dg/input-output-resultwriter.html">ResultWriter</a> in the <i>Step Functions Developer Guide</i>.'
      description: Contains details about items that were processed in all of the child workflow executions that were started by a Map Run.
    MapRunExecutionCounts:
      type: object
      required:
        - pending
        - running
        - succeeded
        - failed
        - timedOut
        - aborted
        - total
        - resultsWritten
      properties:
        pending:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: 'The total number of child workflow executions that were started by a Map Run, but haven''t started executing yet. '
        running:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: The total number of child workflow executions that were started by a Map Run and are currently in-progress.
        succeeded:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: The total number of child workflow executions that were started by a Map Run and have completed successfully.
        failed:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: 'The total number of child workflow executions that were started by a Map Run, but have failed.'
        timedOut:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: The total number of child workflow executions that were started by a Map Run and have timed out.
        aborted:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: 'The total number of child workflow executions that were started by a Map Run and were running, but were either stopped by the user or by Step Functions because the Map Run failed. '
        total:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: The total number of child workflow executions that were started by a Map Run.
        resultsWritten:
          allOf:
            - $ref: '#/components/schemas/UnsignedLong'
            - description: 'Returns the count of child workflow executions whose results were written by <code>ResultWriter</code>. For more information, see <a href="https://docs.aws.amazon.com/step-functions/latest/dg/input-output-resultwriter.html">ResultWriter</a> in the <i>Step Functions Developer Guide</i>.'
      description: Contains details about all of the child workflow executions started by a Map Run.
    MapRunLabel:
      type: string
    RevisionId:
      type: string
    StateMachineStatus:
      type: string
      enum:
        - ACTIVE
        - DELETING
    Enabled:
      type: boolean
    EventId:
      type: integer
    ExecutionAbortedEventDetails:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about an abort of an execution.
    ExecutionFailedEventDetails:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about an execution failure event.
    ExecutionListItem:
      type: object
      required:
        - executionArn
        - stateMachineArn
        - name
        - status
        - startDate
      properties:
        executionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the execution.
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the state machine that ran the execution.
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: '<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>'
        status:
          allOf:
            - $ref: '#/components/schemas/ExecutionStatus'
            - description: The current status of the execution.
        startDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the execution started.
        stopDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'If the execution already ended, the date the execution stopped.'
        mapRunArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: 'The Amazon Resource Name (ARN) of a Map Run. This field is returned only if <code>mapRunArn</code> was specified in the <code>ListExecutions</code> API action. If <code>stateMachineArn</code> was specified in <code>ListExecutions</code>, the <code>mapRunArn</code> isn''t returned.'
        itemCount:
          allOf:
            - $ref: '#/components/schemas/UnsignedInteger'
            - description: 'The total number of items processed in a child workflow execution. This field is returned only if <code>mapRunArn</code> was specified in the <code>ListExecutions</code> API action. If <code>stateMachineArn</code> was specified in <code>ListExecutions</code>, the <code>itemCount</code> field isn''t returned.'
        stateMachineVersionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) of the state machine version associated with the execution.</p> <p>If the state machine execution was started with an unqualified ARN, it returns null.</p> <p>If the execution was started using a <code>stateMachineAliasArn</code>, both the <code>stateMachineAliasArn</code> and <code>stateMachineVersionArn</code> parameters contain the respective values.</p>'
        stateMachineAliasArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) of the state machine alias used to start an execution.</p> <p>If the state machine execution was started with an unqualified ARN or a version ARN, it returns null.</p>'
      description: Contains details about an execution.
    ExecutionList:
      type: array
      items:
        $ref: '#/components/schemas/ExecutionListItem'
    UnsignedInteger:
      type: integer
      minimum: 0
    ExecutionStartedEventDetails:
      type: object
      properties:
        input:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The JSON data input to the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        inputDetails:
          allOf:
            - $ref: '#/components/schemas/HistoryEventExecutionDataDetails'
            - description: Contains details about the input for an execution history event.
        roleArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the IAM role used for executing Lambda tasks.
        stateMachineAliasArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies a state machine alias used for starting the state machine execution.
        stateMachineVersionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies a state machine version used for starting the state machine execution.
      description: Contains details about the start of the execution.
    ExecutionSucceededEventDetails:
      type: object
      properties:
        output:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The JSON data output by the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        outputDetails:
          allOf:
            - $ref: '#/components/schemas/HistoryEventExecutionDataDetails'
            - description: Contains details about the output of an execution history event.
      description: Contains details about the successful termination of the execution.
    ExecutionTimedOutEventDetails:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the timeout.
      description: Contains details about the execution timeout that occurred during the execution.
    TaskToken:
      type: string
      minLength: 1
      maxLength: 1024
    SensitiveDataJobInput:
      type: string
      maxLength: 262144
      format: password
    PageSize:
      type: integer
      minimum: 0
      maximum: 1000
    ReverseOrder:
      type: boolean
    PageToken:
      type: string
      minLength: 1
      maxLength: 1024
    IncludeExecutionDataGetExecutionHistory:
      type: boolean
    HistoryEventList:
      type: array
      description: Contains details about the events that occurred during an execution.
      items:
        $ref: '#/components/schemas/HistoryEvent'
    HistoryEventType:
      type: string
      enum:
        - ActivityFailed
        - ActivityScheduled
        - ActivityScheduleFailed
        - ActivityStarted
        - ActivitySucceeded
        - ActivityTimedOut
        - ChoiceStateEntered
        - ChoiceStateExited
        - ExecutionAborted
        - ExecutionFailed
        - ExecutionStarted
        - ExecutionSucceeded
        - ExecutionTimedOut
        - FailStateEntered
        - LambdaFunctionFailed
        - LambdaFunctionScheduled
        - LambdaFunctionScheduleFailed
        - LambdaFunctionStarted
        - LambdaFunctionStartFailed
        - LambdaFunctionSucceeded
        - LambdaFunctionTimedOut
        - MapIterationAborted
        - MapIterationFailed
        - MapIterationStarted
        - MapIterationSucceeded
        - MapStateAborted
        - MapStateEntered
        - MapStateExited
        - MapStateFailed
        - MapStateStarted
        - MapStateSucceeded
        - ParallelStateAborted
        - ParallelStateEntered
        - ParallelStateExited
        - ParallelStateFailed
        - ParallelStateStarted
        - ParallelStateSucceeded
        - PassStateEntered
        - PassStateExited
        - SucceedStateEntered
        - SucceedStateExited
        - TaskFailed
        - TaskScheduled
        - TaskStarted
        - TaskStartFailed
        - TaskStateAborted
        - TaskStateEntered
        - TaskStateExited
        - TaskSubmitFailed
        - TaskSubmitted
        - TaskSucceeded
        - TaskTimedOut
        - WaitStateAborted
        - WaitStateEntered
        - WaitStateExited
        - MapRunAborted
        - MapRunFailed
        - MapRunStarted
        - MapRunSucceeded
    TaskFailedEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The service name of the resource in a task state.
        resource:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The action of the resource called by a task state.
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about a task failure event.
    TaskScheduledEventDetails:
      type: object
      required:
        - resourceType
        - resource
        - region
        - parameters
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The service name of the resource in a task state.
        resource:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The action of the resource called by a task state.
        region:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The region of the scheduled task
        parameters:
          allOf:
            - $ref: '#/components/schemas/ConnectorParameters'
            - description: 'The JSON data passed to the resource referenced in a task state. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        timeoutInSeconds:
          allOf:
            - $ref: '#/components/schemas/TimeoutInSeconds'
            - description: The maximum allowed duration of the task.
        heartbeatInSeconds:
          allOf:
            - $ref: '#/components/schemas/TimeoutInSeconds'
            - description: The maximum allowed duration between two heartbeats for the task.
        taskCredentials:
          allOf:
            - $ref: '#/components/schemas/TaskCredentials'
            - description: The credentials that Step Functions uses for the task.
      description: Contains details about a task scheduled during an execution.
    TaskStartFailedEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The service name of the resource in a task state.
        resource:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The action of the resource called by a task state.
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about a task that failed to start during an execution.
    TaskStartedEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The service name of the resource in a task state.
        resource:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The action of the resource called by a task state.
      description: Contains details about the start of a task during an execution.
    TaskSubmitFailedEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The service name of the resource in a task state.
        resource:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The action of the resource called by a task state.
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about a task that failed to submit during an execution.
    TaskSubmittedEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The service name of the resource in a task state.
        resource:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The action of the resource called by a task state.
        output:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The response from a resource when a task has started. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        outputDetails:
          allOf:
            - $ref: '#/components/schemas/HistoryEventExecutionDataDetails'
            - description: Contains details about the output of an execution history event.
      description: Contains details about a task submitted to a resource .
    TaskSucceededEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The service name of the resource in a task state.
        resource:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The action of the resource called by a task state.
        output:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The full JSON response from a resource when a task has succeeded. This response becomes the output of the related task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        outputDetails:
          allOf:
            - $ref: '#/components/schemas/HistoryEventExecutionDataDetails'
            - description: Contains details about the output of an execution history event.
      description: Contains details about the successful completion of a task state.
    TaskTimedOutEventDetails:
      type: object
      required:
        - resourceType
        - resource
      properties:
        resourceType:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The service name of the resource in a task state.
        resource:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The action of the resource called by a task state.
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about a resource timeout that occurred during an execution.
    MapStateStartedEventDetails:
      type: object
      properties:
        length:
          allOf:
            - $ref: '#/components/schemas/UnsignedInteger'
            - description: The size of the array for Map state iterations.
      description: Details about a Map state that was started.
    MapIterationEventDetails:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the iteration’s parent Map state.
        index:
          allOf:
            - $ref: '#/components/schemas/UnsignedInteger'
            - description: The index of the array belonging to the Map state iteration.
      description: Contains details about an iteration of a Map state.
    LambdaFunctionFailedEventDetails:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about a Lambda function that failed during an execution.
    LambdaFunctionScheduleFailedEventDetails:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about a failed Lambda function schedule event that occurred during an execution.
    LambdaFunctionScheduledEventDetails:
      type: object
      required:
        - resource
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the scheduled Lambda function.
        input:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The JSON data input to the Lambda function. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        inputDetails:
          allOf:
            - $ref: '#/components/schemas/HistoryEventExecutionDataDetails'
            - description: Contains details about input for an execution history event.
        timeoutInSeconds:
          allOf:
            - $ref: '#/components/schemas/TimeoutInSeconds'
            - description: The maximum allowed duration of the Lambda function.
        taskCredentials:
          allOf:
            - $ref: '#/components/schemas/TaskCredentials'
            - description: The credentials that Step Functions uses for the task.
      description: Contains details about a Lambda function scheduled during an execution.
    LambdaFunctionStartFailedEventDetails:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about a lambda function that failed to start during an execution.
    LambdaFunctionSucceededEventDetails:
      type: object
      properties:
        output:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The JSON data output by the Lambda function. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        outputDetails:
          allOf:
            - $ref: '#/components/schemas/HistoryEventExecutionDataDetails'
            - description: Contains details about the output of an execution history event.
      description: Contains details about a Lambda function that successfully terminated during an execution.
    LambdaFunctionTimedOutEventDetails:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the timeout.
      description: Contains details about a Lambda function timeout that occurred during an execution.
    StateEnteredEventDetails:
      type: object
      required:
        - name
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: The name of the state.
        input:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The string that contains the JSON input data for the state. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        inputDetails:
          allOf:
            - $ref: '#/components/schemas/HistoryEventExecutionDataDetails'
            - description: Contains details about the input for an execution history event.
      description: Contains details about a state entered during an execution.
    StateExitedEventDetails:
      type: object
      required:
        - name
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: '<p>The name of the state.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>'
        output:
          allOf:
            - $ref: '#/components/schemas/SensitiveData'
            - description: 'The JSON output data of the state. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.'
        outputDetails:
          allOf:
            - $ref: '#/components/schemas/HistoryEventExecutionDataDetails'
            - description: Contains details about the output of an execution history event.
      description: Contains details about an exit from a state during an execution.
    MapRunStartedEventDetails:
      type: object
      properties:
        mapRunArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: The Amazon Resource Name (ARN) of a Map Run that was started.
      description: Contains details about a Map Run that was started during a state machine execution.
    MapRunFailedEventDetails:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/SensitiveError'
            - description: The error code of the Map Run failure.
        cause:
          allOf:
            - $ref: '#/components/schemas/SensitiveCause'
            - description: A more detailed explanation of the cause of the failure.
      description: Contains details about a Map Run failure event that occurred during a state machine execution.
    HistoryEvent:
      type: object
      required:
        - timestamp
        - type
        - id
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time the event occurred.
        type:
          allOf:
            - $ref: '#/components/schemas/HistoryEventType'
            - description: The type of the event.
        id:
          allOf:
            - $ref: '#/components/schemas/EventId'
            - description: 'The id of the event. Events are numbered sequentially, starting at one.'
        previousEventId:
          allOf:
            - $ref: '#/components/schemas/EventId'
            - description: The id of the previous event.
        activityFailedEventDetails:
          $ref: '#/components/schemas/ActivityFailedEventDetails'
        activityScheduleFailedEventDetails:
          allOf:
            - $ref: '#/components/schemas/ActivityScheduleFailedEventDetails'
            - description: Contains details about an activity schedule event that failed during an execution.
        activityScheduledEventDetails:
          $ref: '#/components/schemas/ActivityScheduledEventDetails'
        activityStartedEventDetails:
          $ref: '#/components/schemas/ActivityStartedEventDetails'
        activitySucceededEventDetails:
          $ref: '#/components/schemas/ActivitySucceededEventDetails'
        activityTimedOutEventDetails:
          $ref: '#/components/schemas/ActivityTimedOutEventDetails'
        taskFailedEventDetails:
          allOf:
            - $ref: '#/components/schemas/TaskFailedEventDetails'
            - description: Contains details about the failure of a task.
        taskScheduledEventDetails:
          allOf:
            - $ref: '#/components/schemas/TaskScheduledEventDetails'
            - description: Contains details about a task that was scheduled.
        taskStartFailedEventDetails:
          allOf:
            - $ref: '#/components/schemas/TaskStartFailedEventDetails'
            - description: Contains details about a task that failed to start.
        taskStartedEventDetails:
          allOf:
            - $ref: '#/components/schemas/TaskStartedEventDetails'
            - description: Contains details about a task that was started.
        taskSubmitFailedEventDetails:
          allOf:
            - $ref: '#/components/schemas/TaskSubmitFailedEventDetails'
            - description: Contains details about a task that where the submit failed.
        taskSubmittedEventDetails:
          allOf:
            - $ref: '#/components/schemas/TaskSubmittedEventDetails'
            - description: Contains details about a submitted task.
        taskSucceededEventDetails:
          allOf:
            - $ref: '#/components/schemas/TaskSucceededEventDetails'
            - description: Contains details about a task that succeeded.
        taskTimedOutEventDetails:
          allOf:
            - $ref: '#/components/schemas/TaskTimedOutEventDetails'
            - description: Contains details about a task that timed out.
        executionFailedEventDetails:
          $ref: '#/components/schemas/ExecutionFailedEventDetails'
        executionStartedEventDetails:
          $ref: '#/components/schemas/ExecutionStartedEventDetails'
        executionSucceededEventDetails:
          $ref: '#/components/schemas/ExecutionSucceededEventDetails'
        executionAbortedEventDetails:
          $ref: '#/components/schemas/ExecutionAbortedEventDetails'
        executionTimedOutEventDetails:
          $ref: '#/components/schemas/ExecutionTimedOutEventDetails'
        mapStateStartedEventDetails:
          allOf:
            - $ref: '#/components/schemas/MapStateStartedEventDetails'
            - description: Contains details about Map state that was started.
        mapIterationStartedEventDetails:
          allOf:
            - $ref: '#/components/schemas/MapIterationEventDetails'
            - description: Contains details about an iteration of a Map state that was started.
        mapIterationSucceededEventDetails:
          allOf:
            - $ref: '#/components/schemas/MapIterationEventDetails'
            - description: Contains details about an iteration of a Map state that succeeded.
        mapIterationFailedEventDetails:
          allOf:
            - $ref: '#/components/schemas/MapIterationEventDetails'
            - description: Contains details about an iteration of a Map state that failed.
        mapIterationAbortedEventDetails:
          allOf:
            - $ref: '#/components/schemas/MapIterationEventDetails'
            - description: Contains details about an iteration of a Map state that was aborted.
        lambdaFunctionFailedEventDetails:
          $ref: '#/components/schemas/LambdaFunctionFailedEventDetails'
        lambdaFunctionScheduleFailedEventDetails:
          $ref: '#/components/schemas/LambdaFunctionScheduleFailedEventDetails'
        lambdaFunctionScheduledEventDetails:
          $ref: '#/components/schemas/LambdaFunctionScheduledEventDetails'
        lambdaFunctionStartFailedEventDetails:
          allOf:
            - $ref: '#/components/schemas/LambdaFunctionStartFailedEventDetails'
            - description: Contains details about a lambda function that failed to start during an execution.
        lambdaFunctionSucceededEventDetails:
          allOf:
            - $ref: '#/components/schemas/LambdaFunctionSucceededEventDetails'
            - description: Contains details about a Lambda function that terminated successfully during an execution.
        lambdaFunctionTimedOutEventDetails:
          $ref: '#/components/schemas/LambdaFunctionTimedOutEventDetails'
        stateEnteredEventDetails:
          $ref: '#/components/schemas/StateEnteredEventDetails'
        stateExitedEventDetails:
          $ref: '#/components/schemas/StateExitedEventDetails'
        mapRunStartedEventDetails:
          allOf:
            - $ref: '#/components/schemas/MapRunStartedEventDetails'
            - description: 'Contains details, such as <code>mapRunArn</code>, and the start date and time of a Map Run. <code>mapRunArn</code> is the Amazon Resource Name (ARN) of the Map Run that was started.'
        mapRunFailedEventDetails:
          allOf:
            - $ref: '#/components/schemas/MapRunFailedEventDetails'
            - description: Contains error and cause details about a Map Run that failed.
      description: Contains details about the events of an execution.
    truncated:
      type: boolean
    IncludeExecutionData:
      type: boolean
    TaskCredentials:
      type: object
      properties:
        roleArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: The ARN of an IAM role that Step Functions assumes for the task. The role can allow cross-account access to resources.
      description: Contains details about the credentials that Step Functions uses for a task.
    ListExecutionsPageToken:
      type: string
      minLength: 1
      maxLength: 3096
    MapRunList:
      type: array
      items:
        $ref: '#/components/schemas/MapRunListItem'
    StateMachineAliasList:
      type: array
      items:
        $ref: '#/components/schemas/StateMachineAliasListItem'
    StateMachineVersionList:
      type: array
      items:
        $ref: '#/components/schemas/StateMachineVersionListItem'
    StateMachineList:
      type: array
      items:
        $ref: '#/components/schemas/StateMachineListItem'
    LogDestination:
      type: object
      properties:
        cloudWatchLogsLogGroup:
          allOf:
            - $ref: '#/components/schemas/CloudWatchLogsLogGroup'
            - description: 'An object describing a CloudWatch log group. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html">AWS::Logs::LogGroup</a> in the CloudFormation User Guide.'
      description: <p/>
    LogDestinationList:
      type: array
      items:
        $ref: '#/components/schemas/LogDestination'
    LogLevel:
      type: string
      enum:
        - ALL
        - ERROR
        - FATAL
        - 'OFF'
    UnsignedLong:
      type: integer
      minimum: 0
    MapRunListItem:
      type: object
      required:
        - executionArn
        - mapRunArn
        - stateMachineArn
        - startDate
      properties:
        executionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The <code>executionArn</code> of the execution from which the Map Run was started.
        mapRunArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: The Amazon Resource Name (ARN) of the Map Run.
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) of the executed state machine.
        startDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date on which the Map Run started.
        stopDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date on which the Map Run stopped.
      description: Contains details about a specific Map Run.
    RoutingConfigurationListItem:
      type: object
      required:
        - stateMachineVersionArn
        - weight
      properties:
        stateMachineVersionArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: '<p>The Amazon Resource Name (ARN) that identifies one or two state machine versions defined in the routing configuration.</p> <p>If you specify the ARN of a second version, it must belong to the same state machine as the first version.</p>'
        weight:
          allOf:
            - $ref: '#/components/schemas/VersionWeight'
            - description: The percentage of traffic you want to route to the second state machine version. The sum of the weights in the routing configuration must be equal to 100.
      description: 'Contains details about the routing configuration of a state machine alias. In a routing configuration, you define an array of objects that specify up to two state machine versions. You also specify the percentage of traffic to be routed to each version.'
    VersionWeight:
      type: integer
      minimum: 0
      maximum: 100
    SyncExecutionStatus:
      type: string
      enum:
        - SUCCEEDED
        - FAILED
        - TIMED_OUT
    StateMachineAliasListItem:
      type: object
      required:
        - stateMachineAliasArn
        - creationDate
      properties:
        stateMachineAliasArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: 'The Amazon Resource Name (ARN) that identifies a state machine alias. The alias ARN is a combination of state machine ARN and the alias name separated by a colon (:). For example, <code>stateMachineARN:PROD</code>.'
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The creation date of a state machine alias.
      description: Contains details about a specific state machine alias.
    StateMachineListItem:
      type: object
      required:
        - stateMachineArn
        - name
        - type
        - creationDate
      properties:
        stateMachineArn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The Amazon Resource Name (ARN) that identifies the state machine.
        name:
          allOf:
            - $ref: '#/components/schemas/Name'
            - description: '<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>white space</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul> <p>To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.</p>'
        type:
          allOf:
            - $ref: '#/components/schemas/StateMachineType'
            - description: <p/>
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date the state machine is created.
      description: Contains details about the state machine.
    StateMachineVersionListItem:
      type: object
      required:
        - stateMachineVersionArn
        - creationDate
      properties:
        stateMachineVersionArn:
          allOf:
            - $ref: '#/components/schemas/LongArn'
            - description: 'The Amazon Resource Name (ARN) that identifies a state machine version. The version ARN is a combination of state machine ARN and the version number separated by a colon (:). For example, <code>stateMachineARN:1</code>.'
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The creation date of a state machine version.
      description: Contains details about a specific state machine version.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/TagKey'
            - description: The key of a tag.
        value:
          allOf:
            - $ref: '#/components/schemas/TagValue'
            - description: The value of a tag.
      description: '<p>Tags are key-value pairs that can be associated with Step Functions state machines and activities.</p> <p>An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>, and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html">Controlling Access Using IAM Tags</a>.</p> <p>Tags may only contain Unicode letters, digits, white space, or these symbols: <code>_ . : / = + - @</code>.</p>'
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
security:
  - hmac: []
