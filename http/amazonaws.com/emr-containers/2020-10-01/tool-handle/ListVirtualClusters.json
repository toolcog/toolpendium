{
  "name": "ListVirtualClusters",
  "description": "Lists information about the specified virtual cluster. Virtual cluster is a managed entity on Amazon EMR on EKS. You can create, describe, list and delete virtual clusters. They do not consume any additional resource in your system. A single virtual cluster maps to a single Kubernetes namespace. Given this relationship, you can model virtual clusters the same way you model Kubernetes namespaces to meet your requirements.",
  "parameters": {
    "type": "object",
    "properties": {
      "containerProviderId": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 1024,
        "description": "The container provider ID of the virtual cluster."
      },
      "containerProviderType": {
        "type": "string",
        "enum": [
          "EKS"
        ],
        "description": "The container provider type of the virtual cluster. Amazon EKS is the only supported type as of now."
      },
      "createdAfter": {
        "type": "string",
        "format": "date-time",
        "description": "The date and time after which the virtual clusters are created."
      },
      "createdBefore": {
        "type": "string",
        "format": "date-time",
        "description": "The date and time before which the virtual clusters are created."
      },
      "states": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VirtualClusterState"
        },
        "maxItems": 10,
        "description": "The states of the requested virtual clusters."
      },
      "maxResults": {
        "type": "integer",
        "description": "The maximum number of virtual clusters that can be listed."
      },
      "nextToken": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 1024,
        "description": "The token for the next set of virtual clusters to return. "
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "$defs": {
      "VirtualClusterState": {
        "type": "string",
        "enum": [
          "RUNNING",
          "TERMINATING",
          "TERMINATED",
          "ARRESTED"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://emr-containers.us-east-1.amazonaws.com/virtualclusters{?containerProviderId,containerProviderType,createdAfter,createdBefore,states,maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**virtualClusters**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
