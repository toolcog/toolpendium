{
  "name": "CreateVirtualCluster",
  "description": "Creates a virtual cluster. Virtual cluster is a managed entity on Amazon EMR on EKS. You can create, describe, list and delete virtual clusters. They do not consume any additional resource in your system. A single virtual cluster maps to a single Kubernetes namespace. Given this relationship, you can model virtual clusters the same way you model Kubernetes namespaces to meet your requirements.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "name",
          "containerProvider",
          "clientToken"
        ],
        "properties": {
          "name": {
            "description": "The specified name of the virtual cluster.",
            "type": "string",
            "pattern": "[\\.\\-_/#A-Za-z0-9]+",
            "minLength": 1,
            "maxLength": 64
          },
          "containerProvider": {
            "description": "The information about the container provider.",
            "type": "object",
            "properties": {
              "type": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ContainerProviderType"
                  },
                  {
                    "description": "The type of the container provider. Amazon EKS is the only supported type as of now."
                  }
                ]
              },
              "id": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ClusterId"
                  },
                  {
                    "description": "The ID of the container cluster."
                  }
                ]
              },
              "info": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ContainerInfo"
                  },
                  {
                    "description": "The information about the container cluster."
                  }
                ]
              }
            }
          },
          "clientToken": {
            "description": "The client token of the virtual cluster.",
            "type": "string",
            "pattern": ".*\\S.*",
            "minLength": 1,
            "maxLength": 64
          },
          "tags": {
            "description": "The tags assigned to the virtual cluster.",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/StringEmpty256"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ContainerProviderType": {
        "type": "string",
        "enum": [
          "EKS"
        ]
      },
      "ClusterId": {
        "type": "string",
        "pattern": "^[0-9A-Za-z][A-Za-z0-9\\-_]*",
        "minLength": 1,
        "maxLength": 100
      },
      "ContainerInfo": {
        "type": "object",
        "properties": {
          "eksInfo": {
            "allOf": [
              {
                "$ref": "#/$defs/EksInfo"
              },
              {
                "description": "The information about the Amazon EKS cluster."
              }
            ]
          }
        },
        "description": "The information about the container used for a job run or a managed endpoint."
      },
      "EksInfo": {
        "type": "object",
        "properties": {
          "namespace": {
            "allOf": [
              {
                "$ref": "#/$defs/KubernetesNamespace"
              },
              {
                "description": "The namespaces of the Amazon EKS cluster."
              }
            ]
          }
        },
        "description": "The information about the Amazon EKS cluster."
      },
      "KubernetesNamespace": {
        "type": "string",
        "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?",
        "minLength": 1,
        "maxLength": 63
      },
      "StringEmpty256": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://emr-containers.us-east-1.amazonaws.com/virtualclusters"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**",
            "**name**",
            "**arn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
