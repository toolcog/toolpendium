{
  "name": "StartJobRun",
  "description": "Starts a job run.",
  "parameters": {
    "type": "object",
    "properties": {
      "applicationId": {
        "type": "string",
        "pattern": "[0-9a-z]+",
        "minLength": 1,
        "maxLength": 64,
        "description": "The ID of the application on which to run the job."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "clientToken",
          "executionRoleArn"
        ],
        "properties": {
          "clientToken": {
            "description": "The client idempotency token of the job run to start. Its value must be unique for each request.",
            "type": "string",
            "pattern": "[A-Za-z0-9._-]+",
            "minLength": 1,
            "maxLength": 64
          },
          "executionRoleArn": {
            "description": "The execution role ARN for the job run.",
            "type": "string",
            "pattern": "arn:(aws[a-zA-Z0-9-]*):iam::(\\d{12})?:(role((\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F))[\\w+=,.@-]+)",
            "minLength": 20,
            "maxLength": 2048
          },
          "jobDriver": {
            "description": "The driver that the job runs on.",
            "type": "object",
            "properties": {
              "sparkSubmit": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SparkSubmit"
                  },
                  {
                    "description": "The job driver parameters specified for Spark."
                  }
                ]
              },
              "hive": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Hive"
                  },
                  {
                    "description": "The job driver parameters specified for Hive."
                  }
                ]
              }
            }
          },
          "configurationOverrides": {
            "description": "A configuration specification to be used to override existing configurations.",
            "type": "object",
            "properties": {
              "applicationConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ConfigurationList"
                  },
                  {
                    "description": "The override configurations for the application."
                  }
                ]
              },
              "monitoringConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MonitoringConfiguration"
                  },
                  {
                    "description": "The override configurations for monitoring."
                  }
                ]
              }
            }
          },
          "tags": {
            "description": "The tags assigned to the job run.",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 200,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "executionTimeoutMinutes": {
            "description": "The maximum duration for the job run to run. If the job run runs beyond this duration, it will be automatically cancelled.",
            "type": "integer",
            "minimum": 0,
            "maximum": 1000000
          },
          "name": {
            "description": "The optional job run name. This doesn't have to be unique.",
            "type": "string",
            "pattern": ".*\\S.*",
            "minLength": 1,
            "maxLength": 256
          }
        }
      }
    },
    "required": [
      "applicationId",
      "body"
    ],
    "$defs": {
      "SparkSubmit": {
        "type": "object",
        "required": [
          "entryPoint"
        ],
        "properties": {
          "entryPoint": {
            "allOf": [
              {
                "$ref": "#/$defs/EntryPointPath"
              },
              {
                "description": "The entry point for the Spark submit job run."
              }
            ]
          },
          "entryPointArguments": {
            "allOf": [
              {
                "$ref": "#/$defs/EntryPointArguments"
              },
              {
                "description": "The arguments for the Spark submit job run."
              }
            ]
          },
          "sparkSubmitParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/SparkSubmitParameters"
              },
              {
                "description": "The parameters for the Spark submit job run."
              }
            ]
          }
        },
        "description": "The configurations for the Spark submit job driver."
      },
      "EntryPointPath": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 256,
        "format": "password"
      },
      "EntryPointArguments": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EntryPointArgument"
        }
      },
      "EntryPointArgument": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 10280,
        "format": "password"
      },
      "SparkSubmitParameters": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 102400,
        "format": "password"
      },
      "Hive": {
        "type": "object",
        "required": [
          "query"
        ],
        "properties": {
          "query": {
            "allOf": [
              {
                "$ref": "#/$defs/Query"
              },
              {
                "description": "The query for the Hive job run."
              }
            ]
          },
          "initQueryFile": {
            "allOf": [
              {
                "$ref": "#/$defs/InitScriptPath"
              },
              {
                "description": "The query file for the Hive job run."
              }
            ]
          },
          "parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/HiveCliParameters"
              },
              {
                "description": "The parameters for the Hive job run."
              }
            ]
          }
        },
        "description": "The configurations for the Hive job driver."
      },
      "Query": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 10280,
        "format": "password"
      },
      "InitScriptPath": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 256,
        "format": "password"
      },
      "HiveCliParameters": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 102400,
        "format": "password"
      },
      "ConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Configuration"
        },
        "minItems": 0,
        "maxItems": 100
      },
      "Configuration": {
        "type": "object",
        "required": [
          "classification"
        ],
        "properties": {
          "classification": {
            "allOf": [
              {
                "$ref": "#/$defs/String1024"
              },
              {
                "description": "The classification within a configuration."
              }
            ]
          },
          "properties": {
            "description": "A set of properties specified within a configuration classification."
          },
          "configurations": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationList"
              },
              {
                "description": "A list of additional configurations to apply within a configuration object."
              }
            ]
          }
        },
        "description": "A configuration specification to be used when provisioning an application. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file."
      },
      "String1024": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 1024
      },
      "MonitoringConfiguration": {
        "type": "object",
        "properties": {
          "s3MonitoringConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/S3MonitoringConfiguration"
              },
              {
                "description": "The Amazon S3 configuration for monitoring log publishing."
              }
            ]
          },
          "managedPersistenceMonitoringConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ManagedPersistenceMonitoringConfiguration"
              },
              {
                "description": "The managed log persistence configuration for a job run."
              }
            ]
          },
          "cloudWatchLoggingConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLoggingConfiguration"
              },
              {
                "description": "The Amazon CloudWatch configuration for monitoring logs. You can configure your jobs to send log information to CloudWatch."
              }
            ]
          }
        },
        "description": "The configuration setting for monitoring."
      },
      "S3MonitoringConfiguration": {
        "type": "object",
        "properties": {
          "logUri": {
            "allOf": [
              {
                "$ref": "#/$defs/UriString"
              },
              {
                "description": "The Amazon S3 destination URI for log publishing."
              }
            ]
          },
          "encryptionKeyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionKeyArn"
              },
              {
                "description": "The KMS key ARN to encrypt the logs published to the given Amazon S3 destination."
              }
            ]
          }
        },
        "description": "The Amazon S3 configuration for monitoring log publishing. You can configure your jobs to send log information to Amazon S3."
      },
      "UriString": {
        "type": "string",
        "pattern": ".*[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDBFF-\\uDC00\\uDFFF\\r\\n\\t]*.*",
        "minLength": 1,
        "maxLength": 10280
      },
      "EncryptionKeyArn": {
        "type": "string",
        "pattern": "arn:(aws[a-zA-Z0-9-]*):kms:[a-zA-Z0-9\\-]*:(\\d{12})?:key\\/[a-zA-Z0-9-]+",
        "minLength": 20,
        "maxLength": 2048
      },
      "ManagedPersistenceMonitoringConfiguration": {
        "type": "object",
        "properties": {
          "enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Enables managed logging and defaults to true. If set to false, managed logging will be turned off."
              }
            ]
          },
          "encryptionKeyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionKeyArn"
              },
              {
                "description": "The KMS key ARN to encrypt the logs stored in managed log persistence."
              }
            ]
          }
        },
        "description": "The managed log persistence configuration for a job run."
      },
      "Boolean": {
        "type": "boolean"
      },
      "CloudWatchLoggingConfiguration": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Enables CloudWatch logging."
              }
            ]
          },
          "logGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/LogGroupName"
              },
              {
                "description": "The name of the log group in Amazon CloudWatch Logs where you want to publish your logs."
              }
            ]
          },
          "logStreamNamePrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/LogStreamNamePrefix"
              },
              {
                "description": "Prefix for the CloudWatch log stream name."
              }
            ]
          },
          "encryptionKeyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionKeyArn"
              },
              {
                "description": "The Key Management Service (KMS) key ARN to encrypt the logs that you store in CloudWatch Logs."
              }
            ]
          },
          "logTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/LogTypeMap"
              },
              {
                "description": "<p>The types of logs that you want to publish to CloudWatch. If you don't specify any log types, driver STDOUT and STDERR logs will be published to CloudWatch Logs by default. For more information including the supported worker types for Hive and Spark, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/logging.html#jobs-log-storage-cw\">Logging for EMR Serverless with CloudWatch</a>.</p> <ul> <li> <p> <b>Key Valid Values</b>: <code>SPARK_DRIVER</code>, <code>SPARK_EXECUTOR</code>, <code>HIVE_DRIVER</code>, <code>TEZ_TASK</code> </p> </li> <li> <p> <b>Array Members Valid Values</b>: <code>STDOUT</code>, <code>STDERR</code>, <code>HIVE_LOG</code>, <code>TEZ_AM</code>, <code>SYSTEM_LOGS</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The Amazon CloudWatch configuration for monitoring logs. You can configure your jobs to send log information to CloudWatch."
      },
      "LogGroupName": {
        "type": "string",
        "pattern": "[\\.\\-_/#A-Za-z0-9]+",
        "minLength": 1,
        "maxLength": 512
      },
      "LogStreamNamePrefix": {
        "type": "string",
        "pattern": "[^:*]*",
        "minLength": 1,
        "maxLength": 512
      },
      "LogTypeMap": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 4,
        "additionalProperties": {
          "$ref": "#/$defs/LogTypeList"
        }
      },
      "LogTypeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LogTypeString"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "LogTypeString": {
        "type": "string",
        "pattern": "[a-zA-Z]+[-_]*[a-zA-Z]+",
        "description": "Log type for a Spark/Hive job-run.",
        "minLength": 1,
        "maxLength": 50
      },
      "TagValue": {
        "type": "string",
        "pattern": "[A-Za-z0-9 /_.:=+@-]*",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://emr-serverless.us-east-1.amazonaws.com/applications/{applicationId}/jobruns"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**applicationId**",
            "**jobRunId**",
            "**arn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
