openapi: 3.0.0
info:
  version: '2018-05-10'
  x-release: v4
  title: Amazon Security Lake
  description: '<p>Amazon Security Lake is a fully managed security data lake service. You can use Security Lake to automatically centralize security data from cloud, on-premises, and custom sources into a data lake that''s stored in your Amazon Web Services account. Amazon Web Services Organizations is an account management service that lets you consolidate multiple Amazon Web Services accounts into an organization that you create and centrally manage. With Organizations, you can create member accounts and invite existing accounts to join your organization. Security Lake helps you analyze security data for a more complete understanding of your security posture across the entire organization. It can also help you improve the protection of your workloads, applications, and data.</p> <p>The data lake is backed by Amazon Simple Storage Service (Amazon S3) buckets, and you retain ownership over your data.</p> <p>Amazon Security Lake integrates with CloudTrail, a service that provides a record of actions taken by a user, role, or an Amazon Web Services service. In Security Lake, CloudTrail captures API calls for Security Lake as events. The calls captured include calls from the Security Lake console and code calls to the Security Lake API operations. If you create a trail, you can enable continuous delivery of CloudTrail events to an Amazon S3 bucket, including events for Security Lake. If you don''t configure a trail, you can still view the most recent events in the CloudTrail console in Event history. Using the information collected by CloudTrail you can determine the request that was made to Security Lake, the IP address from which the request was made, who made the request, when it was made, and additional details. To learn more about Security Lake information in CloudTrail, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/securitylake-cloudtrail.html">Amazon Security Lake User Guide</a>.</p> <p>Security Lake automates the collection of security-related log and event data from integrated Amazon Web Services and third-party services. It also helps you manage the lifecycle of data with customizable retention and replication settings. Security Lake converts ingested data into Apache Parquet format and a standard open-source schema called the Open Cybersecurity Schema Framework (OCSF).</p> <p>Other Amazon Web Services and third-party services can subscribe to the data that''s stored in Security Lake for incident response and security data analytics.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: securitylake
  x-aws-signingName: securitylake
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/securitylake-2018-05-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/securitylake/'
servers:
  - url: 'http://securitylake.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Security Lake multi-region endpoint
  - url: 'https://securitylake.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Security Lake multi-region endpoint
  - url: 'http://securitylake.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Security Lake endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://securitylake.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Security Lake endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /v1/datalake/logsources/aws:
    post:
      operationId: CreateAwsLogSource
      description: '<p>Adds a natively supported Amazon Web Service as an Amazon Security Lake source. Enables source types for member accounts in required Amazon Web Services Regions, based on the parameters you specify. You can choose any source type in any Region for either accounts that are part of a trusted organization or standalone accounts. Once you add an Amazon Web Service as a source, Security Lake starts collecting logs and events from it.</p> <p>You can use this API only to enable natively supported Amazon Web Services as a source. Use <code>CreateCustomLogSource</code> to enable data collection from a custom source.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAwsLogSourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sources
              properties:
                sources:
                  description: Specify the natively-supported Amazon Web Services service to add as a source in Security Lake.
                  type: array
                  items:
                    $ref: '#/components/schemas/AwsLogSourceConfiguration'
                  minItems: 0
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/datalake/logsources/custom:
    post:
      operationId: CreateCustomLogSource
      description: 'Adds a third-party custom source in Amazon Security Lake, from the Amazon Web Services Region where you want to create a custom source. Security Lake can collect logs and events from third-party custom sources. After creating the appropriate IAM role to invoke Glue crawler, use this API to add a custom source name in Security Lake. This operation creates a partition in the Amazon S3 bucket for Security Lake as the target location for log files from the custom source. In addition, this operation also creates an associated Glue table and an Glue crawler.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomLogSourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceName
              properties:
                configuration:
                  description: The configuration for the third-party custom source.
                  type: object
                  properties:
                    crawlerConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/CustomLogSourceCrawlerConfiguration'
                        - description: The configuration for the Glue Crawler for the third-party custom source.
                    providerIdentity:
                      allOf:
                        - $ref: '#/components/schemas/AwsIdentity'
                        - description: The identity of the log provider for the third-party custom source.
                eventClasses:
                  description: '<p>The Open Cybersecurity Schema Framework (OCSF) event classes which describes the type of data that the custom source will send to Security Lake. The supported event classes are:</p> <ul> <li> <p> <code>ACCESS_ACTIVITY</code> </p> </li> <li> <p> <code>FILE_ACTIVITY</code> </p> </li> <li> <p> <code>KERNEL_ACTIVITY</code> </p> </li> <li> <p> <code>KERNEL_EXTENSION</code> </p> </li> <li> <p> <code>MEMORY_ACTIVITY</code> </p> </li> <li> <p> <code>MODULE_ACTIVITY</code> </p> </li> <li> <p> <code>PROCESS_ACTIVITY</code> </p> </li> <li> <p> <code>REGISTRY_KEY_ACTIVITY</code> </p> </li> <li> <p> <code>REGISTRY_VALUE_ACTIVITY</code> </p> </li> <li> <p> <code>RESOURCE_ACTIVITY</code> </p> </li> <li> <p> <code>SCHEDULED_JOB_ACTIVITY</code> </p> </li> <li> <p> <code>SECURITY_FINDING</code> </p> </li> <li> <p> <code>ACCOUNT_CHANGE</code> </p> </li> <li> <p> <code>AUTHENTICATION</code> </p> </li> <li> <p> <code>AUTHORIZATION</code> </p> </li> <li> <p> <code>ENTITY_MANAGEMENT_AUDIT</code> </p> </li> <li> <p> <code>DHCP_ACTIVITY</code> </p> </li> <li> <p> <code>NETWORK_ACTIVITY</code> </p> </li> <li> <p> <code>DNS_ACTIVITY</code> </p> </li> <li> <p> <code>FTP_ACTIVITY</code> </p> </li> <li> <p> <code>HTTP_ACTIVITY</code> </p> </li> <li> <p> <code>RDP_ACTIVITY</code> </p> </li> <li> <p> <code>SMB_ACTIVITY</code> </p> </li> <li> <p> <code>SSH_ACTIVITY</code> </p> </li> <li> <p> <code>CONFIG_STATE</code> </p> </li> <li> <p> <code>INVENTORY_INFO</code> </p> </li> <li> <p> <code>EMAIL_ACTIVITY</code> </p> </li> <li> <p> <code>API_ACTIVITY</code> </p> </li> <li> <p> <code>CLOUD_API</code> </p> </li> </ul>'
                  type: array
                  items:
                    $ref: '#/components/schemas/OcsfEventClass'
                sourceName:
                  description: Specify the name for a third-party custom source. This must be a Regionally unique value.
                  type: string
                  pattern: '^[\\\w\-_:/.]*$'
                  minLength: 1
                  maxLength: 64
                sourceVersion:
                  description: 'Specify the source version for the third-party custom source, to limit log collection to a specific version of custom data source.'
                  type: string
                  pattern: '^[A-Za-z0-9\-\.\_]*$'
                  minLength: 1
                  maxLength: 32
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/datalake:
    post:
      operationId: CreateDataLake
      description: '<p>Initializes an Amazon Security Lake instance with the provided (or default) configuration. You can enable Security Lake in Amazon Web Services Regions with customized settings before enabling log collection in Regions. To specify particular Regions, configure these Regions using the <code>configurations</code> parameter. If you have already enabled Security Lake in a Region when you call this command, the command will update the Region if you provide new configuration parameters. If you have not already enabled Security Lake in the Region when you call this API, it will set up the data lake in the Region with the specified configurations.</p> <p>When you enable Security Lake, it starts ingesting security data after the <code>CreateAwsLogSource</code> call. This includes ingesting security data from sources, storing data, and making data accessible to subscribers. Security Lake also enables all the existing settings and resources that it stores or maintains for your Amazon Web Services account in the current Region, including security log and event data. For more information, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/what-is-security-lake.html">Amazon Security Lake User Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataLakeResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - configurations
                - metaStoreManagerRoleArn
              properties:
                configurations:
                  description: Specify the Region or Regions that will contribute data to the rollup region.
                  type: array
                  items:
                    $ref: '#/components/schemas/DataLakeConfiguration'
                metaStoreManagerRoleArn:
                  description: The Amazon Resource Name (ARN) used to create and update the Glue table. This table contains partitions generated by the ingestion and normalization of Amazon Web Services log sources and custom sources.
                  type: string
                  pattern: '^arn:.*$'
                tags:
                  description: 'An array of objects, one for each tag to associate with the data lake configuration. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateDataLake
      description: Specifies where to store your security data and for how long. You can add a rollup Region to consolidate data from multiple Amazon Web Services Regions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataLakeResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - configurations
              properties:
                configurations:
                  description: Specify the Region or Regions that will contribute data to the rollup region.
                  type: array
                  items:
                    $ref: '#/components/schemas/DataLakeConfiguration'
  /v1/datalake/exceptions/subscription:
    post:
      operationId: CreateDataLakeExceptionSubscription
      description: Creates the specified notification subscription in Amazon Security Lake for the organization you specify.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataLakeExceptionSubscriptionResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - notificationEndpoint
                - subscriptionProtocol
              properties:
                exceptionTimeToLive:
                  description: The expiration period and time-to-live (TTL).
                  type: integer
                  minimum: 1
                notificationEndpoint:
                  description: The Amazon Web Services account where you want to receive exception notifications.
                  type: string
                  pattern: '^[\\\w\-_:/.@=+]*$'
                subscriptionProtocol:
                  description: The subscription protocol to which exception notifications are posted.
                  type: string
                  pattern: '^[a-z\-]*$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteDataLakeExceptionSubscription
      description: Deletes the specified notification subscription in Amazon Security Lake for the organization you specify.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataLakeExceptionSubscriptionResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
    get:
      operationId: GetDataLakeExceptionSubscription
      description: Retrieves the details of exception notifications for the account in Amazon Security Lake.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataLakeExceptionSubscriptionResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
    put:
      operationId: UpdateDataLakeExceptionSubscription
      description: Updates the specified notification subscription in Amazon Security Lake for the organization you specify.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataLakeExceptionSubscriptionResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - notificationEndpoint
                - subscriptionProtocol
              properties:
                exceptionTimeToLive:
                  description: The time-to-live (TTL) for the exception message to remain.
                  type: integer
                  minimum: 1
                notificationEndpoint:
                  description: The account that is subscribed to receive exception notifications.
                  type: string
                  pattern: '^[\\\w\-_:/.@=+]*$'
                subscriptionProtocol:
                  description: The subscription protocol to which exception messages are posted.
                  type: string
                  pattern: '^[a-z\-]*$'
  /v1/datalake/organization/configuration:
    post:
      operationId: CreateDataLakeOrganizationConfiguration
      description: Automatically enables Amazon Security Lake for new member accounts in your organization. Security Lake is not automatically enabled for any existing member accounts in your organization.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataLakeOrganizationConfigurationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - autoEnableNewAccount
              properties:
                autoEnableNewAccount:
                  description: 'Enable Security Lake with the specified configuration settings, to begin collecting security data for new accounts in your organization.'
                  type: array
                  items:
                    $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfiguration'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetDataLakeOrganizationConfiguration
      description: Retrieves the configuration that will be automatically set up for accounts added to the organization after the organization has onboarded to Amazon Security Lake. This API does not take input parameters.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataLakeOrganizationConfigurationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
  /v1/subscribers:
    post:
      operationId: CreateSubscriber
      description: Creates a subscription permission for accounts that are already enabled in Amazon Security Lake. You can create a subscriber with access to data in the current Amazon Web Services Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubscriberResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sources
                - subscriberIdentity
                - subscriberName
              properties:
                accessTypes:
                  description: The Amazon S3 or Lake Formation access type.
                  type: array
                  items:
                    $ref: '#/components/schemas/AccessType'
                sources:
                  description: The supported Amazon Web Services from which logs and events are collected. Security Lake supports log and event collection for natively supported Amazon Web Services.
                  type: array
                  items:
                    $ref: '#/components/schemas/LogSourceResource'
                subscriberDescription:
                  description: The description for your subscriber account in Security Lake.
                  type: string
                  pattern: '^[\\\w\s\-_:/,.@=+]*$'
                subscriberIdentity:
                  description: The AWS identity.
                  type: object
                  properties:
                    externalId:
                      allOf:
                        - $ref: '#/components/schemas/ExternalId'
                        - description: The external ID used to estalish trust relationship with the AWS identity.
                    principal:
                      allOf:
                        - $ref: '#/components/schemas/AwsPrincipal'
                        - description: The AWS identity principal.
                subscriberName:
                  description: The name of your Security Lake subscriber account.
                  type: string
                  minLength: 0
                  maxLength: 64
                tags:
                  description: 'An array of objects, one for each tag to associate with the subscriber. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListSubscribers
      description: List all subscribers for the specific Amazon Security Lake account ID. You can retrieve a list of subscriptions associated with a specific organization or Amazon Web Services account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscribersResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of accounts for which the configuration is displayed.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'If nextToken is returned, there are more results available. You can repeat the call using the returned token to retrieve the next page.'
          schema:
            type: string
            pattern: '^[\\\w\-_:/.@=+]*$'
  '/v1/subscribers/{subscriberId}/notification':
    post:
      operationId: CreateSubscriberNotification
      description: Notifies the subscriber when new data is written to the data lake for the sources that the subscriber consumes in Security Lake. You can create only one subscriber notification per subscriber.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubscriberNotificationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: subscriberId
          in: path
          required: true
          description: The subscriber ID for the notification subscription.
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - configuration
              properties:
                configuration:
                  description: 'Specify the configurations you want to use for subscriber notification to notify the subscriber when new data is written to the data lake for sources that the subscriber consumes in Security Lake. '
                  type: object
                  properties:
                    httpsNotificationConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/HttpsNotificationConfiguration'
                        - description: The configurations for HTTPS subscriber notification.
                    sqsNotificationConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/SqsNotificationConfiguration'
                        - description: The configurations for SQS subscriber notification.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteSubscriberNotification
      description: Deletes the specified notification subscription in Amazon Security Lake for the organization you specify.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubscriberNotificationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: subscriberId
          in: path
          required: true
          description: The ID of the Security Lake subscriber account.
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    put:
      operationId: UpdateSubscriberNotification
      description: Updates an existing notification method for the subscription (SQS or HTTPs endpoint) or switches the notification subscription endpoint for a subscriber.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSubscriberNotificationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: subscriberId
          in: path
          required: true
          description: The subscription ID for which the subscription notification is specified.
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - configuration
              properties:
                configuration:
                  description: 'Specify the configurations you want to use for subscriber notification to notify the subscriber when new data is written to the data lake for sources that the subscriber consumes in Security Lake. '
                  type: object
                  properties:
                    httpsNotificationConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/HttpsNotificationConfiguration'
                        - description: The configurations for HTTPS subscriber notification.
                    sqsNotificationConfiguration:
                      allOf:
                        - $ref: '#/components/schemas/SqsNotificationConfiguration'
                        - description: The configurations for SQS subscriber notification.
  /v1/datalake/logsources/aws/delete:
    post:
      operationId: DeleteAwsLogSource
      description: '<p>Removes a natively supported Amazon Web Service as an Amazon Security Lake source. You can remove a source for one or more Regions. When you remove the source, Security Lake stops collecting data from that source in the specified Regions and accounts, and subscribers can no longer consume new data from the source. However, subscribers can still consume data that Security Lake collected from the source before removal.</p> <p>You can choose any source type in any Amazon Web Services Region for either accounts that are part of a trusted organization or standalone accounts. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAwsLogSourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sources
              properties:
                sources:
                  description: Specify the natively-supported Amazon Web Services service to remove as a source in Security Lake.
                  type: array
                  items:
                    $ref: '#/components/schemas/AwsLogSourceConfiguration'
                  minItems: 0
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/datalake/logsources/custom/{sourceName}':
    delete:
      operationId: DeleteCustomLogSource
      description: 'Removes a custom log source from Amazon Security Lake, to stop sending data from the custom source to Security Lake.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomLogSourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: sourceName
          in: path
          required: true
          description: The source name of custom log source that you want to delete.
          schema:
            type: string
            pattern: '^[\\\w\-_:/.]*$'
            minLength: 1
            maxLength: 64
        - name: sourceVersion
          in: query
          required: false
          description: The source version for the third-party custom source. You can limit the custom source removal to the specified source version.
          schema:
            type: string
            pattern: '^[A-Za-z0-9\-\.\_]*$'
            minLength: 1
            maxLength: 32
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/datalake/delete:
    post:
      operationId: DeleteDataLake
      description: '<p>When you disable Amazon Security Lake from your account, Security Lake is disabled in all Amazon Web Services Regions and it stops collecting data from your sources. Also, this API automatically takes steps to remove the account from Security Lake. However, Security Lake retains all of your existing settings and the resources that it created in your Amazon Web Services account in the current Amazon Web Services Region.</p> <p>The <code>DeleteDataLake</code> operation does not delete the data that is stored in your Amazon S3 bucket, which is owned by your Amazon Web Services account. For more information, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/disable-security-lake.html">Amazon Security Lake User Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataLakeResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - regions
              properties:
                regions:
                  description: The list of Regions where Security Lake is enabled.
                  type: array
                  items:
                    $ref: '#/components/schemas/Region'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/datalake/organization/configuration/delete:
    post:
      operationId: DeleteDataLakeOrganizationConfiguration
      description: 'Turns off automatic enablement of Amazon Security Lake for member accounts that are added to an organization in Organizations. Only the delegated Security Lake administrator for an organization can perform this operation. If the delegated Security Lake administrator performs this operation, new member accounts won''t automatically contribute data to the data lake.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataLakeOrganizationConfigurationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - autoEnableNewAccount
              properties:
                autoEnableNewAccount:
                  description: Turns off automatic enablement of Security Lake for member accounts that are added to an organization.
                  type: array
                  items:
                    $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfiguration'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/subscribers/{subscriberId}':
    delete:
      operationId: DeleteSubscriber
      description: 'Deletes the subscription permission and all notification settings for accounts that are already enabled in Amazon Security Lake. When you run <code>DeleteSubscriber</code>, the subscriber will no longer consume data from Security Lake and the subscriber is removed. This operation deletes the subscriber and removes access to data in the current Amazon Web Services Region.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubscriberResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: subscriberId
          in: path
          required: true
          description: A value created by Security Lake that uniquely identifies your <code>DeleteSubscriber</code> API request.
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetSubscriber
      description: Retrieves the subscription information for the specified subscription ID. You can get information about a specific subscriber.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubscriberResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: subscriberId
          in: path
          required: true
          description: A value created by Amazon Security Lake that uniquely identifies your <code>GetSubscriber</code> API request.
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    put:
      operationId: UpdateSubscriber
      description: Updates an existing subscription for the given Amazon Security Lake account ID. You can update a subscriber by changing the sources that the subscriber consumes data from.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSubscriberResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: subscriberId
          in: path
          required: true
          description: A value created by Security Lake that uniquely identifies your subscription.
          schema:
            type: string
            pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sources:
                  description: 'The supported Amazon Web Services from which logs and events are collected. For the list of supported Amazon Web Services, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html">Amazon Security Lake User Guide</a>.'
                  type: array
                  items:
                    $ref: '#/components/schemas/LogSourceResource'
                subscriberDescription:
                  description: The description of the Security Lake account subscriber.
                  type: string
                  pattern: '^[\\\w\s\-_:/,.@=+]*$'
                subscriberIdentity:
                  description: The AWS identity.
                  type: object
                  properties:
                    externalId:
                      allOf:
                        - $ref: '#/components/schemas/ExternalId'
                        - description: The external ID used to estalish trust relationship with the AWS identity.
                    principal:
                      allOf:
                        - $ref: '#/components/schemas/AwsPrincipal'
                        - description: The AWS identity principal.
                subscriberName:
                  description: The name of the Security Lake account subscriber.
                  type: string
                  pattern: '^[\\\w\-_:/.@=+]*$'
                  minLength: 0
                  maxLength: 64
  /v1/datalake/delegate:
    delete:
      operationId: DeregisterDataLakeDelegatedAdministrator
      description: Deletes the Amazon Security Lake delegated administrator account for the organization. This API can only be called by the organization management account. The organization management account cannot be the delegated administrator account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterDataLakeDelegatedAdministratorResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: RegisterDataLakeDelegatedAdministrator
      description: Designates the Amazon Security Lake delegated administrator account for the organization. This API can only be called by the organization management account. The organization management account cannot be the delegated administrator account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterDataLakeDelegatedAdministratorResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accountId
              properties:
                accountId:
                  description: The Amazon Web Services account ID of the Security Lake delegated administrator.
                  type: string
                  pattern: '^[\\\w\-_:/.@=+]*$'
  /v1/datalake/sources:
    post:
      operationId: GetDataLakeSources
      description: 'Retrieves a snapshot of the current Region, including whether Amazon Security Lake is enabled for those accounts and which sources Security Lake is collecting data from.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataLakeSourcesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accounts:
                  description: 'The Amazon Web Services account ID for which a static snapshot of the current Amazon Web Services Region, including enabled accounts and log sources, is retrieved.'
                  type: array
                  items:
                    $ref: '#/components/schemas/AwsAccountId'
                maxResults:
                  description: 'The maximum limit of accounts for which the static snapshot of the current Region, including enabled accounts and log sources, is retrieved.'
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: <p>Lists if there are more results available. The value of nextToken is a unique pagination token for each page. Repeat the call using the returned token to retrieve the next page. Keep all other arguments unchanged.</p> <p>Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>
                  type: string
                  pattern: '^[\\\w\-_:/.@=+]*$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/datalake/exceptions:
    post:
      operationId: ListDataLakeExceptions
      description: Lists the Amazon Security Lake exceptions that you can use to find the source of problems and fix them.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataLakeExceptionsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  description: List the maximum number of failures in Security Lake.
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: <p>List if there are more results available. The value of nextToken is a unique pagination token for each page. Repeat the call using the returned token to retrieve the next page. Keep all other arguments unchanged.</p> <p>Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>
                  type: string
                  pattern: '^[\\\w\-_:/.@=+]*$'
                regions:
                  description: List the Amazon Web Services Regions from which exceptions are retrieved.
                  type: array
                  items:
                    $ref: '#/components/schemas/Region'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/datalakes:
    get:
      operationId: ListDataLakes
      description: Retrieves the Amazon Security Lake configuration object for the specified Amazon Web Services Regions. You can use this operation to determine whether Security Lake is enabled for a Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataLakesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: regions
          in: query
          required: false
          description: The list of regions where Security Lake is enabled.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Region'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/datalake/logsources/list:
    post:
      operationId: ListLogSources
      description: Retrieves the log sources in the current Amazon Web Services Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLogSourcesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accounts:
                  description: The list of Amazon Web Services accounts for which log sources are displayed.
                  type: array
                  items:
                    $ref: '#/components/schemas/AwsAccountId'
                maxResults:
                  description: The maximum number of accounts for which the log sources are displayed.
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: 'If nextToken is returned, there are more results available. You can repeat the call using the returned token to retrieve the next page.'
                  type: string
                  pattern: '^[\\\w\-_:/.@=+]*$'
                regions:
                  description: The list of regions for which log sources are displayed.
                  type: array
                  items:
                    $ref: '#/components/schemas/Region'
                sources:
                  description: The list of sources for which log sources are displayed.
                  type: array
                  items:
                    $ref: '#/components/schemas/LogSourceResource'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: 'Retrieves the tags (keys and values) that are associated with an Amazon Security Lake resource: a subscriber, or the data lake configuration for your Amazon Web Services account in a particular Amazon Web Services Region.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the Amazon Security Lake resource to retrieve the tags for.
          schema:
            type: string
            pattern: '^arn:aws:securitylake:[A-za-z0-9_/.\-]{0,63}:[A-za-z0-9_/.\-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.\-]{0,127}$'
            minLength: 1
            maxLength: 1011
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: 'Adds or updates one or more tags that are associated with an Amazon Security Lake resource: a subscriber, or the data lake configuration for your Amazon Web Services account in a particular Amazon Web Services Region. A <i>tag</i> is a label that you can define and associate with Amazon Web Services resources. Each tag consists of a required <i>tag key</i> and an associated <i>tag value</i>. A <i>tag key</i> is a general label that acts as a category for a more specific tag value. A <i>tag value</i> acts as a descriptor for a tag key. Tags can help you identify, categorize, and manage resources in different ways, such as by owner, environment, or other criteria. For more information, see <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html">Tagging Amazon Security Lake resources</a> in the <i>Amazon Security Lake User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the Amazon Security Lake resource to add or update the tags for.
          schema:
            type: string
            pattern: '^arn:aws:securitylake:[A-za-z0-9_/.\-]{0,63}:[A-za-z0-9_/.\-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.\-]{0,127}$'
            minLength: 1
            maxLength: 1011
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: 'An array of objects, one for each tag (key and value) to associate with the Amazon Security Lake resource. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 50
  '/v1/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: 'Removes one or more tags (keys and values) from an Amazon Security Lake resource: a subscriber, or the data lake configuration for your Amazon Web Services account in a particular Amazon Web Services Region.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the Amazon Security Lake resource to remove one or more tags from.
          schema:
            type: string
            pattern: '^arn:aws:securitylake:[A-za-z0-9_/.\-]{0,63}:[A-za-z0-9_/.\-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.\-]{0,127}$'
            minLength: 1
            maxLength: 1011
        - name: tagKeys
          in: query
          required: true
          description: 'A list of one or more tag keys. For each value in the list, specify the tag key for a tag to remove from the Amazon Security Lake resource.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 0
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateAwsLogSourceResponse:
      type: object
      properties:
        failed:
          allOf:
            - $ref: '#/components/schemas/AccountList'
            - description: Lists all accounts in which enabling a natively supported Amazon Web Service as a Security Lake source failed. The failure occurred as these accounts are not part of an organization.
    AwsLogSourceConfiguration:
      type: object
      required:
        - regions
        - sourceName
      properties:
        accounts:
          allOf:
            - $ref: '#/components/schemas/AccountList'
            - description: Specify the Amazon Web Services account information where you want to enable Security Lake.
        regions:
          allOf:
            - $ref: '#/components/schemas/RegionList'
            - description: Specify the Regions where you want to enable Security Lake.
        sourceName:
          allOf:
            - $ref: '#/components/schemas/AwsLogSourceName'
            - description: The name for a Amazon Web Services source. This must be a Regionally unique value.
        sourceVersion:
          allOf:
            - $ref: '#/components/schemas/AwsLogSourceVersion'
            - description: The version for a Amazon Web Services source. This must be a Regionally unique value.
      description: 'The Security Lake logs source configuration file describes the information needed to generate Security Lake logs. '
    BadRequestException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    AccessDeniedException: {}
    ConflictException: {}
    ThrottlingException: {}
    CreateCustomLogSourceResponse:
      type: object
      properties:
        source:
          allOf:
            - $ref: '#/components/schemas/CustomLogSourceResource'
            - description: The created third-party custom source.
    CustomLogSourceCrawlerConfiguration:
      type: object
      required:
        - roleArn
      properties:
        roleArn:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: '<p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be used by the Glue crawler. The recommended IAM policies are:</p> <ul> <li> <p>The managed policy <code>AWSGlueServiceRole</code> </p> </li> <li> <p>A custom policy granting access to your Amazon S3 Data Lake</p> </li> </ul>'
      description: The configuration for the Glue Crawler for the third-party custom source.
    AwsIdentity:
      type: object
      required:
        - externalId
        - principal
      properties:
        externalId:
          allOf:
            - $ref: '#/components/schemas/ExternalId'
            - description: The external ID used to estalish trust relationship with the AWS identity.
        principal:
          allOf:
            - $ref: '#/components/schemas/AwsPrincipal'
            - description: The AWS identity principal.
      description: The AWS identity.
    OcsfEventClass:
      type: string
      pattern: '^[A-Z\_0-9]*$'
    CreateDataLakeResponse:
      type: object
      properties:
        dataLakes:
          allOf:
            - $ref: '#/components/schemas/DataLakeResourceList'
            - description: The created Security Lake configuration object.
    DataLakeConfiguration:
      type: object
      required:
        - region
      properties:
        encryptionConfiguration:
          allOf:
            - $ref: '#/components/schemas/DataLakeEncryptionConfiguration'
            - description: Provides encryption details of Amazon Security Lake object.
        lifecycleConfiguration:
          allOf:
            - $ref: '#/components/schemas/DataLakeLifecycleConfiguration'
            - description: Provides lifecycle details of Amazon Security Lake object.
        region:
          allOf:
            - $ref: '#/components/schemas/Region'
            - description: The Amazon Web Services Regions where Security Lake is automatically enabled.
        replicationConfiguration:
          allOf:
            - $ref: '#/components/schemas/DataLakeReplicationConfiguration'
            - description: Provides replication details of Amazon Security Lake object.
      description: Provides details of Amazon Security Lake object.
    Tag:
      type: object
      required:
        - key
        - value
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/TagKey'
            - description: The name of the tag. This is a general label that acts as a category for a more specific tag value (<code>value</code>).
        value:
          allOf:
            - $ref: '#/components/schemas/TagValue'
            - description: 'The value that’s associated with the specified tag key (<code>key</code>). This value acts as a descriptor for the tag key. A tag value cannot be null, but it can be an empty string.'
      description: '<p>A <i>tag</i> is a label that you can define and associate with Amazon Web Services resources, including certain types of Amazon Security Lake resources. Tags can help you identify, categorize, and manage resources in different ways, such as by owner, environment, or other criteria. You can associate tags with the following types of Security Lake resources: subscribers, and the data lake configuration for your Amazon Web Services account in individual Amazon Web Services Regions.</p> <p>A resource can have up to 50 tags. Each tag consists of a required <i>tag key</i> and an associated <i>tag value</i>. A <i>tag key</i> is a general label that acts as a category for a more specific tag value. Each tag key must be unique and it can have only one tag value. A <i>tag value</i> acts as a descriptor for a tag key. Tag keys and values are case sensitive. They can contain letters, numbers, spaces, or the following symbols: _ . : / = + @ -</p> <p>For more information, see <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html">Tagging Amazon Security Lake resources</a> in the <i>Amazon Security Lake User Guide</i>.</p>'
    CreateDataLakeExceptionSubscriptionResponse:
      type: object
      properties: {}
    CreateDataLakeOrganizationConfigurationResponse:
      type: object
      properties: {}
    DataLakeAutoEnableNewAccountConfiguration:
      type: object
      required:
        - region
        - sources
      properties:
        region:
          allOf:
            - $ref: '#/components/schemas/Region'
            - description: The Amazon Web Services Regions where Security Lake is automatically enabled.
        sources:
          allOf:
            - $ref: '#/components/schemas/AwsLogSourceResourceList'
            - description: The Amazon Web Services sources that are automatically enabled in Security Lake.
      description: Automatically enable new organization accounts as member accounts from an Amazon Security Lake administrator account.
    CreateSubscriberResponse:
      type: object
      properties:
        subscriber:
          allOf:
            - $ref: '#/components/schemas/SubscriberResource'
            - description: Retrieve information about the subscriber created using the <code>CreateSubscriber</code> API.
    AccessType:
      type: string
      enum:
        - LAKEFORMATION
        - S3
    LogSourceResource:
      type: object
      properties:
        awsLogSource:
          allOf:
            - $ref: '#/components/schemas/AwsLogSourceResource'
            - description: 'Amazon Security Lake supports log and event collection for natively supported Amazon Web Services. For more information, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html">Amazon Security Lake User Guide</a>.'
        customLogSource:
          allOf:
            - $ref: '#/components/schemas/CustomLogSourceResource'
            - description: 'Amazon Security Lake supports custom source types. For more information, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/custom-sources.html">Amazon Security Lake User Guide</a>.'
      description: 'The supported source types from which logs and events are collected in Amazon Security Lake. For a list of supported Amazon Web Services, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html">Amazon Security Lake User Guide</a>.'
    ExternalId:
      type: string
      pattern: '^[\w+=,.@:\/-]*$'
      minLength: 2
      maxLength: 1224
    AwsPrincipal:
      type: string
      pattern: '^([0-9]{12}|[a-z0-9\.\-]*\.(amazonaws|amazon)\.com)$'
    CreateSubscriberNotificationResponse:
      type: object
      properties:
        subscriberEndpoint:
          allOf:
            - $ref: '#/components/schemas/SafeString'
            - description: The subscriber endpoint to which exception messages are posted.
    HttpsNotificationConfiguration:
      type: object
      required:
        - endpoint
        - targetRoleArn
      properties:
        authorizationApiKeyName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The key name for the notification subscription.
        authorizationApiKeyValue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The key value for the notification subscription.
        endpoint:
          allOf:
            - $ref: '#/components/schemas/HttpsNotificationConfigurationEndpointString'
            - description: 'The subscription endpoint in Security Lake. If you prefer notification with an HTTPs endpoint, populate this field.'
        httpMethod:
          allOf:
            - $ref: '#/components/schemas/HttpMethod'
            - description: The HTTPS method used for the notification subscription.
        targetRoleArn:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: 'The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you created. For more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com//security-lake/latest/userguide/subscriber-data-access.html">Managing data access</a> and <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/security-iam-awsmanpol.html">Amazon Web Services Managed Policies</a> in the <i>Amazon Security Lake User Guide</i>.'
      description: The configurations for HTTPS subscriber notification.
    SqsNotificationConfiguration:
      type: object
      properties: {}
      description: The configurations for SQS subscriber notification.
    DeleteAwsLogSourceResponse:
      type: object
      properties:
        failed:
          allOf:
            - $ref: '#/components/schemas/AccountList'
            - description: Deletion of the Amazon Web Services sources failed as the account is not a part of the organization.
    DeleteCustomLogSourceResponse:
      type: object
      properties: {}
    DeleteDataLakeResponse:
      type: object
      properties: {}
    Region:
      type: string
      pattern: '^(af|ap|ca|eu|me|sa|us)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-\d+$'
    DeleteDataLakeExceptionSubscriptionResponse:
      type: object
      properties: {}
    DeleteDataLakeOrganizationConfigurationResponse:
      type: object
      properties: {}
    DeleteSubscriberResponse:
      type: object
      properties: {}
    DeleteSubscriberNotificationResponse:
      type: object
      properties: {}
    DeregisterDataLakeDelegatedAdministratorResponse:
      type: object
      properties: {}
    GetDataLakeExceptionSubscriptionResponse:
      type: object
      properties:
        exceptionTimeToLive:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The expiration period and time-to-live (TTL).
        notificationEndpoint:
          allOf:
            - $ref: '#/components/schemas/SafeString'
            - description: The Amazon Web Services account where you receive exception notifications.
        subscriptionProtocol:
          allOf:
            - $ref: '#/components/schemas/SubscriptionProtocol'
            - description: The subscription protocol to which exception notifications are posted.
    GetDataLakeOrganizationConfigurationResponse:
      type: object
      properties:
        autoEnableNewAccount:
          allOf:
            - $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfigurationList'
            - description: The configuration for new accounts.
    GetDataLakeSourcesResponse:
      type: object
      properties:
        dataLakeArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: 'The Amazon Resource Name (ARN) created by you to provide to the subscriber. For more information about ARNs and how to use them in policies, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/subscriber-management.html">Amazon Security Lake User Guide</a>.'
        dataLakeSources:
          allOf:
            - $ref: '#/components/schemas/DataLakeSourceList'
            - description: The list of enabled accounts and enabled sources.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: <p>Lists if there are more results available. The value of nextToken is a unique pagination token for each page. Repeat the call using the returned token to retrieve the next page. Keep all other arguments unchanged.</p> <p>Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>
    AwsAccountId:
      type: string
      pattern: '^[0-9]{12}$'
      minLength: 12
      maxLength: 12
    GetSubscriberResponse:
      type: object
      properties:
        subscriber:
          allOf:
            - $ref: '#/components/schemas/SubscriberResource'
            - description: The subscriber information for the specified subscriber ID.
    ListDataLakeExceptionsResponse:
      type: object
      properties:
        exceptions:
          allOf:
            - $ref: '#/components/schemas/DataLakeExceptionList'
            - description: Lists the failures that cannot be retried in the current Region.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: <p>List if there are more results available. The value of nextToken is a unique pagination token for each page. Repeat the call using the returned token to retrieve the next page. Keep all other arguments unchanged.</p> <p>Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>
    ListDataLakesResponse:
      type: object
      properties:
        dataLakes:
          allOf:
            - $ref: '#/components/schemas/DataLakeResourceList'
            - description: Retrieves the Security Lake configuration object.
    ListLogSourcesResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If nextToken is returned, there are more results available. You can repeat the call using the returned token to retrieve the next page.'
        sources:
          allOf:
            - $ref: '#/components/schemas/LogSourceList'
            - description: The list of log sources in your organization that send data to the data lake.
    ListSubscribersResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If nextToken is returned, there are more results available. You can repeat the call using the returned token to retrieve the next page.'
        subscribers:
          allOf:
            - $ref: '#/components/schemas/SubscriberResourceList'
            - description: The subscribers available for the specified Security Lake account ID.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: 'An array of objects, one for each tag (key and value) that’s associated with the Amazon Security Lake resource.'
    RegisterDataLakeDelegatedAdministratorResponse:
      type: object
      properties: {}
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateDataLakeResponse:
      type: object
      properties:
        dataLakes:
          allOf:
            - $ref: '#/components/schemas/DataLakeResourceList'
            - description: The created Security Lake configuration object.
    UpdateDataLakeExceptionSubscriptionResponse:
      type: object
      properties: {}
    UpdateSubscriberResponse:
      type: object
      properties:
        subscriber:
          allOf:
            - $ref: '#/components/schemas/SubscriberResource'
            - description: The updated subscriber information.
    UpdateSubscriberNotificationResponse:
      type: object
      properties:
        subscriberEndpoint:
          allOf:
            - $ref: '#/components/schemas/SafeString'
            - description: The subscriber endpoint to which exception messages are posted.
    AccessTypeList:
      type: array
      items:
        $ref: '#/components/schemas/AccessType'
    AccountList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAccountId'
    AmazonResourceName:
      type: string
      pattern: '^arn:aws:securitylake:[A-za-z0-9_/.\-]{0,63}:[A-za-z0-9_/.\-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.\-]{0,127}$'
      minLength: 1
      maxLength: 1011
    RegionList:
      type: array
      items:
        $ref: '#/components/schemas/Region'
    AwsLogSourceName:
      type: string
      enum:
        - ROUTE53
        - VPC_FLOW
        - SH_FINDINGS
        - CLOUD_TRAIL_MGMT
        - LAMBDA_EXECUTION
        - S3_DATA
    AwsLogSourceVersion:
      type: string
      pattern: '^(latest|[0-9]\.[0-9])$'
    AwsLogSourceConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/AwsLogSourceConfiguration'
      minItems: 0
      maxItems: 50
    AwsLogSourceResource:
      type: object
      properties:
        sourceName:
          allOf:
            - $ref: '#/components/schemas/AwsLogSourceName'
            - description: The name for a Amazon Web Services source. This must be a Regionally unique value.
        sourceVersion:
          allOf:
            - $ref: '#/components/schemas/AwsLogSourceVersion'
            - description: The version for a Amazon Web Services source. This must be a Regionally unique value.
      description: Amazon Security Lake can collect logs and events from natively-supported Amazon Web Services services.
    AwsLogSourceResourceList:
      type: array
      items:
        $ref: '#/components/schemas/AwsLogSourceResource'
    CreateAwsLogSourceRequest:
      type: object
      required:
        - sources
      title: CreateAwsLogSourceRequest
      properties:
        sources:
          allOf:
            - $ref: '#/components/schemas/AwsLogSourceConfigurationList'
            - description: Specify the natively-supported Amazon Web Services service to add as a source in Security Lake.
    CustomLogSourceConfiguration:
      type: object
      required:
        - crawlerConfiguration
        - providerIdentity
      properties:
        crawlerConfiguration:
          allOf:
            - $ref: '#/components/schemas/CustomLogSourceCrawlerConfiguration'
            - description: The configuration for the Glue Crawler for the third-party custom source.
        providerIdentity:
          allOf:
            - $ref: '#/components/schemas/AwsIdentity'
            - description: The identity of the log provider for the third-party custom source.
      description: The configuration for the third-party custom source.
    OcsfEventClassList:
      type: array
      items:
        $ref: '#/components/schemas/OcsfEventClass'
    CustomLogSourceName:
      type: string
      pattern: '^[\\\w\-_:/.]*$'
      minLength: 1
      maxLength: 64
    CustomLogSourceVersion:
      type: string
      pattern: '^[A-Za-z0-9\-\.\_]*$'
      minLength: 1
      maxLength: 32
    CreateCustomLogSourceRequest:
      type: object
      required:
        - sourceName
      title: CreateCustomLogSourceRequest
      properties:
        configuration:
          allOf:
            - $ref: '#/components/schemas/CustomLogSourceConfiguration'
            - description: The configuration for the third-party custom source.
        eventClasses:
          allOf:
            - $ref: '#/components/schemas/OcsfEventClassList'
            - description: '<p>The Open Cybersecurity Schema Framework (OCSF) event classes which describes the type of data that the custom source will send to Security Lake. The supported event classes are:</p> <ul> <li> <p> <code>ACCESS_ACTIVITY</code> </p> </li> <li> <p> <code>FILE_ACTIVITY</code> </p> </li> <li> <p> <code>KERNEL_ACTIVITY</code> </p> </li> <li> <p> <code>KERNEL_EXTENSION</code> </p> </li> <li> <p> <code>MEMORY_ACTIVITY</code> </p> </li> <li> <p> <code>MODULE_ACTIVITY</code> </p> </li> <li> <p> <code>PROCESS_ACTIVITY</code> </p> </li> <li> <p> <code>REGISTRY_KEY_ACTIVITY</code> </p> </li> <li> <p> <code>REGISTRY_VALUE_ACTIVITY</code> </p> </li> <li> <p> <code>RESOURCE_ACTIVITY</code> </p> </li> <li> <p> <code>SCHEDULED_JOB_ACTIVITY</code> </p> </li> <li> <p> <code>SECURITY_FINDING</code> </p> </li> <li> <p> <code>ACCOUNT_CHANGE</code> </p> </li> <li> <p> <code>AUTHENTICATION</code> </p> </li> <li> <p> <code>AUTHORIZATION</code> </p> </li> <li> <p> <code>ENTITY_MANAGEMENT_AUDIT</code> </p> </li> <li> <p> <code>DHCP_ACTIVITY</code> </p> </li> <li> <p> <code>NETWORK_ACTIVITY</code> </p> </li> <li> <p> <code>DNS_ACTIVITY</code> </p> </li> <li> <p> <code>FTP_ACTIVITY</code> </p> </li> <li> <p> <code>HTTP_ACTIVITY</code> </p> </li> <li> <p> <code>RDP_ACTIVITY</code> </p> </li> <li> <p> <code>SMB_ACTIVITY</code> </p> </li> <li> <p> <code>SSH_ACTIVITY</code> </p> </li> <li> <p> <code>CONFIG_STATE</code> </p> </li> <li> <p> <code>INVENTORY_INFO</code> </p> </li> <li> <p> <code>EMAIL_ACTIVITY</code> </p> </li> <li> <p> <code>API_ACTIVITY</code> </p> </li> <li> <p> <code>CLOUD_API</code> </p> </li> </ul>'
        sourceName:
          allOf:
            - $ref: '#/components/schemas/CustomLogSourceName'
            - description: Specify the name for a third-party custom source. This must be a Regionally unique value.
        sourceVersion:
          allOf:
            - $ref: '#/components/schemas/CustomLogSourceVersion'
            - description: 'Specify the source version for the third-party custom source, to limit log collection to a specific version of custom data source.'
    CustomLogSourceResource:
      type: object
      properties:
        attributes:
          allOf:
            - $ref: '#/components/schemas/CustomLogSourceAttributes'
            - description: The attributes of a third-party custom source.
        provider:
          allOf:
            - $ref: '#/components/schemas/CustomLogSourceProvider'
            - description: The details of the log provider for a third-party custom source.
        sourceName:
          allOf:
            - $ref: '#/components/schemas/CustomLogSourceName'
            - description: The name for a third-party custom source. This must be a Regionally unique value.
        sourceVersion:
          allOf:
            - $ref: '#/components/schemas/CustomLogSourceVersion'
            - description: The version for a third-party custom source. This must be a Regionally unique value.
      description: Amazon Security Lake can collect logs and events from third-party custom sources.
    CreateDataLakeExceptionSubscriptionRequestExceptionTimeToLiveLong:
      type: integer
      minimum: 1
    SafeString:
      type: string
      pattern: '^[\\\w\-_:/.@=+]*$'
    SubscriptionProtocol:
      type: string
      pattern: '^[a-z\-]*$'
    CreateDataLakeExceptionSubscriptionRequest:
      type: object
      required:
        - notificationEndpoint
        - subscriptionProtocol
      title: CreateDataLakeExceptionSubscriptionRequest
      properties:
        exceptionTimeToLive:
          allOf:
            - $ref: '#/components/schemas/CreateDataLakeExceptionSubscriptionRequestExceptionTimeToLiveLong'
            - description: The expiration period and time-to-live (TTL).
        notificationEndpoint:
          allOf:
            - $ref: '#/components/schemas/SafeString'
            - description: The Amazon Web Services account where you want to receive exception notifications.
        subscriptionProtocol:
          allOf:
            - $ref: '#/components/schemas/SubscriptionProtocol'
            - description: The subscription protocol to which exception notifications are posted.
    DataLakeAutoEnableNewAccountConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfiguration'
    CreateDataLakeOrganizationConfigurationRequest:
      type: object
      required:
        - autoEnableNewAccount
      title: CreateDataLakeOrganizationConfigurationRequest
      properties:
        autoEnableNewAccount:
          allOf:
            - $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfigurationList'
            - description: 'Enable Security Lake with the specified configuration settings, to begin collecting security data for new accounts in your organization.'
    DataLakeConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/DataLakeConfiguration'
    RoleArn:
      type: string
      pattern: '^arn:.*$'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 50
    CreateDataLakeRequest:
      type: object
      required:
        - configurations
        - metaStoreManagerRoleArn
      title: CreateDataLakeRequest
      properties:
        configurations:
          allOf:
            - $ref: '#/components/schemas/DataLakeConfigurationList'
            - description: Specify the Region or Regions that will contribute data to the rollup region.
        metaStoreManagerRoleArn:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: The Amazon Resource Name (ARN) used to create and update the Glue table. This table contains partitions generated by the ingestion and normalization of Amazon Web Services log sources and custom sources.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: 'An array of objects, one for each tag to associate with the data lake configuration. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.'
    DataLakeResourceList:
      type: array
      items:
        $ref: '#/components/schemas/DataLakeResource'
    NotificationConfiguration:
      type: object
      properties:
        httpsNotificationConfiguration:
          allOf:
            - $ref: '#/components/schemas/HttpsNotificationConfiguration'
            - description: The configurations for HTTPS subscriber notification.
        sqsNotificationConfiguration:
          allOf:
            - $ref: '#/components/schemas/SqsNotificationConfiguration'
            - description: The configurations for SQS subscriber notification.
      description: 'Specify the configurations you want to use for subscriber notification to notify the subscriber when new data is written to the data lake for sources that the subscriber consumes in Security Lake. '
    UUID:
      type: string
      pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    CreateSubscriberNotificationRequest:
      type: object
      required:
        - configuration
      title: CreateSubscriberNotificationRequest
      properties:
        configuration:
          allOf:
            - $ref: '#/components/schemas/NotificationConfiguration'
            - description: Specify the configuration using which you want to create the subscriber notification.
    LogSourceResourceList:
      type: array
      items:
        $ref: '#/components/schemas/LogSourceResource'
    DescriptionString:
      type: string
      pattern: '^[\\\w\s\-_:/,.@=+]*$'
    CreateSubscriberRequestSubscriberNameString:
      type: string
      minLength: 0
      maxLength: 64
    CreateSubscriberRequest:
      type: object
      required:
        - sources
        - subscriberIdentity
        - subscriberName
      title: CreateSubscriberRequest
      properties:
        accessTypes:
          allOf:
            - $ref: '#/components/schemas/AccessTypeList'
            - description: The Amazon S3 or Lake Formation access type.
        sources:
          allOf:
            - $ref: '#/components/schemas/LogSourceResourceList'
            - description: The supported Amazon Web Services from which logs and events are collected. Security Lake supports log and event collection for natively supported Amazon Web Services.
        subscriberDescription:
          allOf:
            - $ref: '#/components/schemas/DescriptionString'
            - description: The description for your subscriber account in Security Lake.
        subscriberIdentity:
          allOf:
            - $ref: '#/components/schemas/AwsIdentity'
            - description: The AWS identity used to access your data.
        subscriberName:
          allOf:
            - $ref: '#/components/schemas/CreateSubscriberRequestSubscriberNameString'
            - description: The name of your Security Lake subscriber account.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: 'An array of objects, one for each tag to associate with the subscriber. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.'
    SubscriberResource:
      type: object
      required:
        - sources
        - subscriberArn
        - subscriberId
        - subscriberIdentity
        - subscriberName
      properties:
        accessTypes:
          allOf:
            - $ref: '#/components/schemas/AccessTypeList'
            - description: <p>You can choose to notify subscribers of new objects with an Amazon Simple Queue Service (Amazon SQS) queue or through messaging to an HTTPS endpoint provided by the subscriber.</p> <p> Subscribers can consume data by directly querying Lake Formation tables in your Amazon S3 bucket through services like Amazon Athena. This subscription type is defined as <code>LAKEFORMATION</code>.</p>
        createdAt:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: The date and time when the subscriber was created.
        resourceShareArn:
          allOf:
            - $ref: '#/components/schemas/ResourceShareArn'
            - description: '<p>The Amazon Resource Name (ARN) which uniquely defines the AWS RAM resource share. Before accepting the RAM resource share invitation, you can view details related to the RAM resource share.</p> <p>This field is available only for Lake Formation subscribers created after March 8, 2023.</p>'
        resourceShareName:
          allOf:
            - $ref: '#/components/schemas/ResourceShareName'
            - description: The name of the resource share.
        roleArn:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: The Amazon Resource Name (ARN) specifying the role of the subscriber.
        s3BucketArn:
          allOf:
            - $ref: '#/components/schemas/S3BucketArn'
            - description: The ARN for the Amazon S3 bucket.
        sources:
          allOf:
            - $ref: '#/components/schemas/LogSourceResourceList'
            - description: 'Amazon Security Lake supports log and event collection for natively supported Amazon Web Services. For more information, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/source-management.html">Amazon Security Lake User Guide</a>.'
        subscriberArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: The subscriber ARN of the Amazon Security Lake subscriber account.
        subscriberDescription:
          allOf:
            - $ref: '#/components/schemas/SafeString'
            - description: 'The subscriber descriptions for a subscriber account. The description for a subscriber includes <code>subscriberName</code>, <code>accountID</code>, <code>externalID</code>, and <code>subscriberId</code>.'
        subscriberEndpoint:
          allOf:
            - $ref: '#/components/schemas/SafeString'
            - description: The subscriber endpoint to which exception messages are posted.
        subscriberId:
          allOf:
            - $ref: '#/components/schemas/UUID'
            - description: The subscriber ID of the Amazon Security Lake subscriber account.
        subscriberIdentity:
          allOf:
            - $ref: '#/components/schemas/AwsIdentity'
            - description: The AWS identity used to access your data.
        subscriberName:
          allOf:
            - $ref: '#/components/schemas/SafeString'
            - description: The name of your Amazon Security Lake subscriber account.
        subscriberStatus:
          allOf:
            - $ref: '#/components/schemas/SubscriberStatus'
            - description: The subscriber status of the Amazon Security Lake subscriber account.
        updatedAt:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: The date and time when the subscriber was last updated.
      description: Provides details about the Amazon Security Lake account subscription. Subscribers are notified of new objects for a source as the data is written to your Amazon S3 bucket for Security Lake.
    CustomLogSourceAttributes:
      type: object
      properties:
        crawlerArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: The ARN of the Glue crawler.
        databaseArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: 'The ARN of the Glue database where results are written, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>.'
        tableArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: The ARN of the Glue table.
      description: The attributes of a third-party custom source.
    S3URI:
      type: string
      pattern: '^s3[an]?://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/[^/].*)+$'
      description: A complete S3 URI pointing to a valid S3 object.
      minLength: 0
      maxLength: 1024
    CustomLogSourceProvider:
      type: object
      properties:
        location:
          allOf:
            - $ref: '#/components/schemas/S3URI'
            - description: The location of the partition in the Amazon S3 bucket for Security Lake.
        roleArn:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: 'The ARN of the IAM role to be used by the entity putting logs into your custom source partition. Security Lake will apply the correct access policies to this role, but you must first manually create the trust policy for this role. The IAM role name must start with the text ''Security Lake''. The IAM role must trust the <code>logProviderAccountId</code> to assume the role.'
      description: The details of the log provider for a third-party custom source.
    DataLakeEncryptionConfiguration:
      type: object
      properties:
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The id of KMS encryption key used by Amazon Security Lake to encrypt the Security Lake object.
      description: Provides encryption details of Amazon Security Lake object.
    DataLakeLifecycleConfiguration:
      type: object
      properties:
        expiration:
          allOf:
            - $ref: '#/components/schemas/DataLakeLifecycleExpiration'
            - description: Provides data expiration details of Amazon Security Lake object.
        transitions:
          allOf:
            - $ref: '#/components/schemas/DataLakeLifecycleTransitionList'
            - description: Provides data storage transition details of Amazon Security Lake object.
      description: Provides lifecycle details of Amazon Security Lake object.
    DataLakeReplicationConfiguration:
      type: object
      properties:
        regions:
          allOf:
            - $ref: '#/components/schemas/RegionList'
            - description: '<p>Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Amazon S3 buckets that are configured for object replication can be owned by the same Amazon Web Services account or by different accounts. You can replicate objects to a single destination bucket or to multiple destination buckets. The destination buckets can be in different Amazon Web Services Regions or within the same Region as the source bucket.</p> <p>Set up one or more rollup Regions by providing the Region or Regions that should contribute to the central rollup Region.</p>'
        roleArn:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: 'Replication settings for the Amazon S3 buckets. This parameter uses the Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.'
      description: Provides replication details of Amazon Security Lake object.
    String:
      type: string
    SyntheticTimestamp_date_time:
      type: string
      format: date-time
    DataLakeException:
      type: object
      properties:
        exception:
          allOf:
            - $ref: '#/components/schemas/SafeString'
            - description: The underlying exception of a Security Lake exception.
        region:
          allOf:
            - $ref: '#/components/schemas/Region'
            - description: The Amazon Web Services Regions where the exception occurred.
        remediation:
          allOf:
            - $ref: '#/components/schemas/SafeString'
            - description: List of all remediation steps for a Security Lake exception.
        timestamp:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: 'This error can occur if you configure the wrong timestamp format, or if the subset of entries used for validation had errors or missing values.'
      description: The details for an Amazon Security Lake exception.
    DataLakeExceptionList:
      type: array
      items:
        $ref: '#/components/schemas/DataLakeException'
    DataLakeLifecycleExpiration:
      type: object
      properties:
        days:
          allOf:
            - $ref: '#/components/schemas/DataLakeLifecycleExpirationDaysInteger'
            - description: Number of days before data expires in the Amazon Security Lake object.
      description: Provide expiration lifecycle details of Amazon Security Lake object.
    DataLakeLifecycleTransitionList:
      type: array
      items:
        $ref: '#/components/schemas/DataLakeLifecycleTransition'
    DataLakeLifecycleExpirationDaysInteger:
      type: integer
      minimum: 1
    DataLakeLifecycleTransitionDaysInteger:
      type: integer
      minimum: 1
    DataLakeStorageClass:
      type: string
    DataLakeLifecycleTransition:
      type: object
      properties:
        days:
          allOf:
            - $ref: '#/components/schemas/DataLakeLifecycleTransitionDaysInteger'
            - description: Number of days before data transitions to a different S3 Storage Class in the Amazon Security Lake object.
        storageClass:
          allOf:
            - $ref: '#/components/schemas/DataLakeStorageClass'
            - description: 'The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads.'
      description: Provide transition lifecycle details of Amazon Security Lake object.
    DataLakeStatus:
      type: string
      enum:
        - INITIALIZED
        - PENDING
        - COMPLETED
        - FAILED
    S3BucketArn:
      type: string
    DataLakeUpdateStatus:
      type: object
      properties:
        exception:
          allOf:
            - $ref: '#/components/schemas/DataLakeUpdateException'
            - description: The details of the last <code>UpdateDataLake</code>or <code>DeleteDataLake</code> API request which failed.
        requestId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique ID for the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code> API request.
        status:
          allOf:
            - $ref: '#/components/schemas/DataLakeStatus'
            - description: The status of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code> API request that was requested.
      description: 'The status of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code> API request. This is set to Completed after the configuration is updated, or removed if deletion of the data lake is successful.'
    DataLakeResource:
      type: object
      required:
        - dataLakeArn
        - region
      properties:
        createStatus:
          allOf:
            - $ref: '#/components/schemas/DataLakeStatus'
            - description: Retrieves the status of the configuration operation for an account in Amazon Security Lake.
        dataLakeArn:
          allOf:
            - $ref: '#/components/schemas/AmazonResourceName'
            - description: 'The Amazon Resource Name (ARN) created by you to provide to the subscriber. For more information about ARNs and how to use them in policies, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/subscriber-management.html">Amazon Security Lake User Guide</a>.'
        encryptionConfiguration:
          allOf:
            - $ref: '#/components/schemas/DataLakeEncryptionConfiguration'
            - description: Provides encryption details of Amazon Security Lake object.
        lifecycleConfiguration:
          allOf:
            - $ref: '#/components/schemas/DataLakeLifecycleConfiguration'
            - description: Provides lifecycle details of Amazon Security Lake object.
        region:
          allOf:
            - $ref: '#/components/schemas/Region'
            - description: The Amazon Web Services Regions where Security Lake is enabled.
        replicationConfiguration:
          allOf:
            - $ref: '#/components/schemas/DataLakeReplicationConfiguration'
            - description: Provides replication details of Amazon Security Lake object.
        s3BucketArn:
          allOf:
            - $ref: '#/components/schemas/S3BucketArn'
            - description: The ARN for the Amazon Security Lake Amazon S3 bucket.
        updateStatus:
          allOf:
            - $ref: '#/components/schemas/DataLakeUpdateStatus'
            - description: The status of the last <code>UpdateDataLake </code>or <code>DeleteDataLake</code> API request.
      description: Provides details of Amazon Security Lake object.
    DataLakeSourceStatusList:
      type: array
      items:
        $ref: '#/components/schemas/DataLakeSourceStatus'
    DataLakeSource:
      type: object
      properties:
        account:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the Security Lake account for which logs are collected.
        eventClasses:
          allOf:
            - $ref: '#/components/schemas/OcsfEventClassList'
            - description: '<p>The Open Cybersecurity Schema Framework (OCSF) event classes which describes the type of data that the custom source will send to Security Lake. The supported event classes are:</p> <ul> <li> <p> <code>ACCESS_ACTIVITY</code> </p> </li> <li> <p> <code>FILE_ACTIVITY</code> </p> </li> <li> <p> <code>KERNEL_ACTIVITY</code> </p> </li> <li> <p> <code>KERNEL_EXTENSION</code> </p> </li> <li> <p> <code>MEMORY_ACTIVITY</code> </p> </li> <li> <p> <code>MODULE_ACTIVITY</code> </p> </li> <li> <p> <code>PROCESS_ACTIVITY</code> </p> </li> <li> <p> <code>REGISTRY_KEY_ACTIVITY</code> </p> </li> <li> <p> <code>REGISTRY_VALUE_ACTIVITY</code> </p> </li> <li> <p> <code>RESOURCE_ACTIVITY</code> </p> </li> <li> <p> <code>SCHEDULED_JOB_ACTIVITY</code> </p> </li> <li> <p> <code>SECURITY_FINDING</code> </p> </li> <li> <p> <code>ACCOUNT_CHANGE</code> </p> </li> <li> <p> <code>AUTHENTICATION</code> </p> </li> <li> <p> <code>AUTHORIZATION</code> </p> </li> <li> <p> <code>ENTITY_MANAGEMENT_AUDIT</code> </p> </li> <li> <p> <code>DHCP_ACTIVITY</code> </p> </li> <li> <p> <code>NETWORK_ACTIVITY</code> </p> </li> <li> <p> <code>DNS_ACTIVITY</code> </p> </li> <li> <p> <code>FTP_ACTIVITY</code> </p> </li> <li> <p> <code>HTTP_ACTIVITY</code> </p> </li> <li> <p> <code>RDP_ACTIVITY</code> </p> </li> <li> <p> <code>SMB_ACTIVITY</code> </p> </li> <li> <p> <code>SSH_ACTIVITY</code> </p> </li> <li> <p> <code>CONFIG_STATE</code> </p> </li> <li> <p> <code>INVENTORY_INFO</code> </p> </li> <li> <p> <code>EMAIL_ACTIVITY</code> </p> </li> <li> <p> <code>API_ACTIVITY</code> </p> </li> <li> <p> <code>CLOUD_API</code> </p> </li> </ul>'
        sourceName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The supported Amazon Web Services from which logs and events are collected. Amazon Security Lake supports log and event collection for natively supported Amazon Web Services.
        sourceStatuses:
          allOf:
            - $ref: '#/components/schemas/DataLakeSourceStatusList'
            - description: The log status for the Security Lake account.
      description: 'Amazon Security Lake collects logs and events from supported Amazon Web Services and custom sources. For the list of supported Amazon Web Services, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html">Amazon Security Lake User Guide</a>.'
    DataLakeSourceList:
      type: array
      items:
        $ref: '#/components/schemas/DataLakeSource'
    SourceCollectionStatus:
      type: string
      enum:
        - COLLECTING
        - MISCONFIGURED
        - NOT_COLLECTING
    DataLakeSourceStatus:
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Defines path the stored logs are available which has information on your systems, applications, and services.'
        status:
          allOf:
            - $ref: '#/components/schemas/SourceCollectionStatus'
            - description: 'The health status of services, including error codes and patterns.'
      description: Retrieves the Logs status for the Amazon Security Lake account.
    DataLakeUpdateException:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason code for the exception of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code> API request.
        reason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The reason for the exception of the last <code>UpdateDataLake</code>or <code>DeleteDataLake</code> API request.
      description: The details of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code> API request which failed.
    DeleteAwsLogSourceRequest:
      type: object
      required:
        - sources
      title: DeleteAwsLogSourceRequest
      properties:
        sources:
          allOf:
            - $ref: '#/components/schemas/AwsLogSourceConfigurationList'
            - description: Specify the natively-supported Amazon Web Services service to remove as a source in Security Lake.
    DeleteCustomLogSourceRequest:
      type: object
      title: DeleteCustomLogSourceRequest
      properties: {}
    DeleteDataLakeExceptionSubscriptionRequest:
      type: object
      title: DeleteDataLakeExceptionSubscriptionRequest
      properties: {}
    DeleteDataLakeOrganizationConfigurationRequest:
      type: object
      required:
        - autoEnableNewAccount
      title: DeleteDataLakeOrganizationConfigurationRequest
      properties:
        autoEnableNewAccount:
          allOf:
            - $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfigurationList'
            - description: Turns off automatic enablement of Security Lake for member accounts that are added to an organization.
    DeleteDataLakeRequest:
      type: object
      required:
        - regions
      title: DeleteDataLakeRequest
      properties:
        regions:
          allOf:
            - $ref: '#/components/schemas/RegionList'
            - description: The list of Regions where Security Lake is enabled.
    DeleteSubscriberNotificationRequest:
      type: object
      title: DeleteSubscriberNotificationRequest
      properties: {}
    DeleteSubscriberRequest:
      type: object
      title: DeleteSubscriberRequest
      properties: {}
    DeregisterDataLakeDelegatedAdministratorRequest:
      type: object
      title: DeregisterDataLakeDelegatedAdministratorRequest
      properties: {}
    GetDataLakeExceptionSubscriptionRequest:
      type: object
      title: GetDataLakeExceptionSubscriptionRequest
      properties: {}
    Long:
      type: integer
    GetDataLakeOrganizationConfigurationRequest:
      type: object
      title: GetDataLakeOrganizationConfigurationRequest
      properties: {}
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      pattern: '^[\\\w\-_:/.@=+]*$'
    GetDataLakeSourcesRequest:
      type: object
      title: GetDataLakeSourcesRequest
      properties:
        accounts:
          allOf:
            - $ref: '#/components/schemas/AccountList'
            - description: 'The Amazon Web Services account ID for which a static snapshot of the current Amazon Web Services Region, including enabled accounts and log sources, is retrieved.'
        maxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResults'
            - description: 'The maximum limit of accounts for which the static snapshot of the current Region, including enabled accounts and log sources, is retrieved.'
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: <p>Lists if there are more results available. The value of nextToken is a unique pagination token for each page. Repeat the call using the returned token to retrieve the next page. Keep all other arguments unchanged.</p> <p>Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>
    GetSubscriberRequest:
      type: object
      title: GetSubscriberRequest
      properties: {}
    HttpMethod:
      type: string
      enum:
        - POST
        - PUT
    HttpsNotificationConfigurationEndpointString:
      type: string
      pattern: '^https?://.+$'
    ListDataLakeExceptionsRequest:
      type: object
      title: ListDataLakeExceptionsRequest
      properties:
        maxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResults'
            - description: List the maximum number of failures in Security Lake.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: <p>List if there are more results available. The value of nextToken is a unique pagination token for each page. Repeat the call using the returned token to retrieve the next page. Keep all other arguments unchanged.</p> <p>Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>
        regions:
          allOf:
            - $ref: '#/components/schemas/RegionList'
            - description: List the Amazon Web Services Regions from which exceptions are retrieved.
    ListDataLakesRequest:
      type: object
      title: ListDataLakesRequest
      properties: {}
    ListLogSourcesRequest:
      type: object
      title: ListLogSourcesRequest
      properties:
        accounts:
          allOf:
            - $ref: '#/components/schemas/AccountList'
            - description: The list of Amazon Web Services accounts for which log sources are displayed.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResults'
            - description: The maximum number of accounts for which the log sources are displayed.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If nextToken is returned, there are more results available. You can repeat the call using the returned token to retrieve the next page.'
        regions:
          allOf:
            - $ref: '#/components/schemas/RegionList'
            - description: The list of regions for which log sources are displayed.
        sources:
          allOf:
            - $ref: '#/components/schemas/LogSourceResourceList'
            - description: The list of sources for which log sources are displayed.
    LogSourceList:
      type: array
      items:
        $ref: '#/components/schemas/LogSource'
    ListSubscribersRequest:
      type: object
      title: ListSubscribersRequest
      properties: {}
    SubscriberResourceList:
      type: array
      items:
        $ref: '#/components/schemas/SubscriberResource'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    LogSource:
      type: object
      properties:
        account:
          allOf:
            - $ref: '#/components/schemas/AwsAccountId'
            - description: Specify the account from which you want to collect logs.
        region:
          allOf:
            - $ref: '#/components/schemas/Region'
            - description: Specify the Regions from which you want to collect logs.
        sources:
          allOf:
            - $ref: '#/components/schemas/LogSourceResourceList'
            - description: Specify the sources from which you want to collect logs.
      description: 'Amazon Security Lake can collect logs and events from natively-supported Amazon Web Services services and custom sources. '
    RegisterDataLakeDelegatedAdministratorRequest:
      type: object
      required:
        - accountId
      title: RegisterDataLakeDelegatedAdministratorRequest
      properties:
        accountId:
          allOf:
            - $ref: '#/components/schemas/SafeString'
            - description: The Amazon Web Services account ID of the Security Lake delegated administrator.
    ResourceShareArn:
      type: string
    ResourceShareName:
      type: string
      pattern: '^LakeFormation(?:-V[0-9]+)-([a-zA-Z0-9]+)-([\\\w\-_:/.@=+]*)$'
    SubscriberStatus:
      type: string
      enum:
        - ACTIVE
        - DEACTIVATED
        - PENDING
        - READY
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: 'An array of objects, one for each tag (key and value) to associate with the Amazon Security Lake resource. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.'
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateDataLakeExceptionSubscriptionRequestExceptionTimeToLiveLong:
      type: integer
      minimum: 1
    UpdateDataLakeExceptionSubscriptionRequest:
      type: object
      required:
        - notificationEndpoint
        - subscriptionProtocol
      title: UpdateDataLakeExceptionSubscriptionRequest
      properties:
        exceptionTimeToLive:
          allOf:
            - $ref: '#/components/schemas/UpdateDataLakeExceptionSubscriptionRequestExceptionTimeToLiveLong'
            - description: The time-to-live (TTL) for the exception message to remain.
        notificationEndpoint:
          allOf:
            - $ref: '#/components/schemas/SafeString'
            - description: The account that is subscribed to receive exception notifications.
        subscriptionProtocol:
          allOf:
            - $ref: '#/components/schemas/SubscriptionProtocol'
            - description: The subscription protocol to which exception messages are posted.
    UpdateDataLakeRequest:
      type: object
      required:
        - configurations
      title: UpdateDataLakeRequest
      properties:
        configurations:
          allOf:
            - $ref: '#/components/schemas/DataLakeConfigurationList'
            - description: Specify the Region or Regions that will contribute data to the rollup region.
    UpdateSubscriberNotificationRequest:
      type: object
      required:
        - configuration
      title: UpdateSubscriberNotificationRequest
      properties:
        configuration:
          allOf:
            - $ref: '#/components/schemas/NotificationConfiguration'
            - description: The configuration for subscriber notification.
    UpdateSubscriberRequestSubscriberNameString:
      type: string
      pattern: '^[\\\w\-_:/.@=+]*$'
      minLength: 0
      maxLength: 64
    UpdateSubscriberRequest:
      type: object
      title: UpdateSubscriberRequest
      properties:
        sources:
          allOf:
            - $ref: '#/components/schemas/LogSourceResourceList'
            - description: 'The supported Amazon Web Services from which logs and events are collected. For the list of supported Amazon Web Services, see the <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html">Amazon Security Lake User Guide</a>.'
        subscriberDescription:
          allOf:
            - $ref: '#/components/schemas/DescriptionString'
            - description: The description of the Security Lake account subscriber.
        subscriberIdentity:
          allOf:
            - $ref: '#/components/schemas/AwsIdentity'
            - description: The AWS identity used to access your data.
        subscriberName:
          allOf:
            - $ref: '#/components/schemas/UpdateSubscriberRequestSubscriberNameString'
            - description: The name of the Security Lake account subscriber.
security:
  - hmac: []
