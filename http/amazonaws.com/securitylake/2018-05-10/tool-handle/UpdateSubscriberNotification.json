{
  "name": "UpdateSubscriberNotification",
  "description": "Updates an existing notification method for the subscription (SQS or HTTPs endpoint) or switches the notification subscription endpoint for a subscriber.",
  "parameters": {
    "type": "object",
    "properties": {
      "subscriberId": {
        "type": "string",
        "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
        "description": "The subscription ID for which the subscription notification is specified."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "configuration"
        ],
        "properties": {
          "configuration": {
            "description": "Specify the configurations you want to use for subscriber notification to notify the subscriber when new data is written to the data lake for sources that the subscriber consumes in Security Lake. ",
            "type": "object",
            "properties": {
              "httpsNotificationConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/HttpsNotificationConfiguration"
                  },
                  {
                    "description": "The configurations for HTTPS subscriber notification."
                  }
                ]
              },
              "sqsNotificationConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SqsNotificationConfiguration"
                  },
                  {
                    "description": "The configurations for SQS subscriber notification."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "subscriberId",
      "body"
    ],
    "$defs": {
      "HttpsNotificationConfiguration": {
        "type": "object",
        "required": [
          "endpoint",
          "targetRoleArn"
        ],
        "properties": {
          "authorizationApiKeyName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The key name for the notification subscription."
              }
            ]
          },
          "authorizationApiKeyValue": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The key value for the notification subscription."
              }
            ]
          },
          "endpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpsNotificationConfigurationEndpointString"
              },
              {
                "description": "The subscription endpoint in Security Lake. If you prefer notification with an HTTPs endpoint, populate this field."
              }
            ]
          },
          "httpMethod": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpMethod"
              },
              {
                "description": "The HTTPS method used for the notification subscription."
              }
            ]
          },
          "targetRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you created. For more information about ARNs and how to use them in policies, see <a href=\"https://docs.aws.amazon.com//security-lake/latest/userguide/subscriber-data-access.html\">Managing data access</a> and <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/security-iam-awsmanpol.html\">Amazon Web Services Managed Policies</a> in the <i>Amazon Security Lake User Guide</i>."
              }
            ]
          }
        },
        "description": "The configurations for HTTPS subscriber notification."
      },
      "String": {
        "type": "string"
      },
      "HttpsNotificationConfigurationEndpointString": {
        "type": "string",
        "pattern": "^https?://.+$"
      },
      "HttpMethod": {
        "type": "string",
        "enum": [
          "POST",
          "PUT"
        ]
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:.*$"
      },
      "SqsNotificationConfiguration": {
        "type": "object",
        "properties": {},
        "description": "The configurations for SQS subscriber notification."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://securitylake.us-east-1.amazonaws.com/v1/subscribers/{subscriberId}/notification"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**subscriberEndpoint**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
