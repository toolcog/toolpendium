{
  "name": "DeleteDataLakeOrganizationConfiguration",
  "description": "Turns off automatic enablement of Amazon Security Lake for member accounts that are added to an organization in Organizations. Only the delegated Security Lake administrator for an organization can perform this operation. If the delegated Security Lake administrator performs this operation, new member accounts won't automatically contribute data to the data lake.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "autoEnableNewAccount"
        ],
        "properties": {
          "autoEnableNewAccount": {
            "description": "Turns off automatic enablement of Security Lake for member accounts that are added to an organization.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/DataLakeAutoEnableNewAccountConfiguration"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "DataLakeAutoEnableNewAccountConfiguration": {
        "type": "object",
        "required": [
          "region",
          "sources"
        ],
        "properties": {
          "region": {
            "allOf": [
              {
                "$ref": "#/$defs/Region"
              },
              {
                "description": "The Amazon Web Services Regions where Security Lake is automatically enabled."
              }
            ]
          },
          "sources": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsLogSourceResourceList"
              },
              {
                "description": "The Amazon Web Services sources that are automatically enabled in Security Lake."
              }
            ]
          }
        },
        "description": "Automatically enable new organization accounts as member accounts from an Amazon Security Lake administrator account."
      },
      "Region": {
        "type": "string",
        "pattern": "^(af|ap|ca|eu|me|sa|us)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-\\d+$"
      },
      "AwsLogSourceResourceList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AwsLogSourceResource"
        }
      },
      "AwsLogSourceResource": {
        "type": "object",
        "properties": {
          "sourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsLogSourceName"
              },
              {
                "description": "The name for a Amazon Web Services source. This must be a Regionally unique value."
              }
            ]
          },
          "sourceVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsLogSourceVersion"
              },
              {
                "description": "The version for a Amazon Web Services source. This must be a Regionally unique value."
              }
            ]
          }
        },
        "description": "Amazon Security Lake can collect logs and events from natively-supported Amazon Web Services services."
      },
      "AwsLogSourceName": {
        "type": "string",
        "enum": [
          "ROUTE53",
          "VPC_FLOW",
          "SH_FINDINGS",
          "CLOUD_TRAIL_MGMT",
          "LAMBDA_EXECUTION",
          "S3_DATA"
        ]
      },
      "AwsLogSourceVersion": {
        "type": "string",
        "pattern": "^(latest|[0-9]\\.[0-9])$"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://securitylake.us-east-1.amazonaws.com/v1/datalake/organization/configuration/delete"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
