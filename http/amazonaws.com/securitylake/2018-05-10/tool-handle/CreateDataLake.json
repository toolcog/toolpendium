{
  "name": "CreateDataLake",
  "description": "<p>Initializes an Amazon Security Lake instance with the provided (or default) configuration. You can enable Security Lake in Amazon Web Services Regions with customized settings before enabling log collection in Regions. To specify particular Regions, configure these Regions using the <code>configurations</code> parameter. If you have already enabled Security Lake in a Region when you call this command, the command will update the Region if you provide new configuration parameters. If you have not already enabled Security Lake in the Region when you call this API, it will set up the data lake in the Region with the specified configurations.</p> <p>When you enable Security Lake, it starts ingesting security data after the <code>CreateAwsLogSource</code> call. This includes ingesting security data from sources, storing data, and making data accessible to subscribers. Security Lake also enables all the existing settings and resources that it stores or maintains for your Amazon Web Services account in the current Region, including security log and event data. For more information, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/what-is-security-lake.html\">Amazon Security Lake User Guide</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "configurations",
          "metaStoreManagerRoleArn"
        ],
        "properties": {
          "configurations": {
            "description": "Specify the Region or Regions that will contribute data to the rollup region.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/DataLakeConfiguration"
            }
          },
          "metaStoreManagerRoleArn": {
            "description": "The Amazon Resource Name (ARN) used to create and update the Glue table. This table contains partitions generated by the ingestion and normalization of Amazon Web Services log sources and custom sources.",
            "type": "string",
            "pattern": "^arn:.*$"
          },
          "tags": {
            "description": "An array of objects, one for each tag to associate with the data lake configuration. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 0,
            "maxItems": 50
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "DataLakeConfiguration": {
        "type": "object",
        "required": [
          "region"
        ],
        "properties": {
          "encryptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLakeEncryptionConfiguration"
              },
              {
                "description": "Provides encryption details of Amazon Security Lake object."
              }
            ]
          },
          "lifecycleConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLakeLifecycleConfiguration"
              },
              {
                "description": "Provides lifecycle details of Amazon Security Lake object."
              }
            ]
          },
          "region": {
            "allOf": [
              {
                "$ref": "#/$defs/Region"
              },
              {
                "description": "The Amazon Web Services Regions where Security Lake is automatically enabled."
              }
            ]
          },
          "replicationConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLakeReplicationConfiguration"
              },
              {
                "description": "Provides replication details of Amazon Security Lake object."
              }
            ]
          }
        },
        "description": "Provides details of Amazon Security Lake object."
      },
      "DataLakeEncryptionConfiguration": {
        "type": "object",
        "properties": {
          "kmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The id of KMS encryption key used by Amazon Security Lake to encrypt the Security Lake object."
              }
            ]
          }
        },
        "description": "Provides encryption details of Amazon Security Lake object."
      },
      "String": {
        "type": "string"
      },
      "DataLakeLifecycleConfiguration": {
        "type": "object",
        "properties": {
          "expiration": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLakeLifecycleExpiration"
              },
              {
                "description": "Provides data expiration details of Amazon Security Lake object."
              }
            ]
          },
          "transitions": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLakeLifecycleTransitionList"
              },
              {
                "description": "Provides data storage transition details of Amazon Security Lake object."
              }
            ]
          }
        },
        "description": "Provides lifecycle details of Amazon Security Lake object."
      },
      "DataLakeLifecycleExpiration": {
        "type": "object",
        "properties": {
          "days": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLakeLifecycleExpirationDaysInteger"
              },
              {
                "description": "Number of days before data expires in the Amazon Security Lake object."
              }
            ]
          }
        },
        "description": "Provide expiration lifecycle details of Amazon Security Lake object."
      },
      "DataLakeLifecycleExpirationDaysInteger": {
        "type": "integer",
        "minimum": 1
      },
      "DataLakeLifecycleTransitionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DataLakeLifecycleTransition"
        }
      },
      "DataLakeLifecycleTransition": {
        "type": "object",
        "properties": {
          "days": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLakeLifecycleTransitionDaysInteger"
              },
              {
                "description": "Number of days before data transitions to a different S3 Storage Class in the Amazon Security Lake object."
              }
            ]
          },
          "storageClass": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLakeStorageClass"
              },
              {
                "description": "The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads."
              }
            ]
          }
        },
        "description": "Provide transition lifecycle details of Amazon Security Lake object."
      },
      "DataLakeLifecycleTransitionDaysInteger": {
        "type": "integer",
        "minimum": 1
      },
      "DataLakeStorageClass": {
        "type": "string"
      },
      "Region": {
        "type": "string",
        "pattern": "^(af|ap|ca|eu|me|sa|us)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-\\d+$"
      },
      "DataLakeReplicationConfiguration": {
        "type": "object",
        "properties": {
          "regions": {
            "allOf": [
              {
                "$ref": "#/$defs/RegionList"
              },
              {
                "description": "<p>Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Amazon S3 buckets that are configured for object replication can be owned by the same Amazon Web Services account or by different accounts. You can replicate objects to a single destination bucket or to multiple destination buckets. The destination buckets can be in different Amazon Web Services Regions or within the same Region as the source bucket.</p> <p>Set up one or more rollup Regions by providing the Region or Regions that should contribute to the central rollup Region.</p>"
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "Replication settings for the Amazon S3 buckets. This parameter uses the Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct."
              }
            ]
          }
        },
        "description": "Provides replication details of Amazon Security Lake object."
      },
      "RegionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Region"
        }
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:.*$"
      },
      "Tag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The name of the tag. This is a general label that acts as a category for a more specific tag value (<code>value</code>)."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value that’s associated with the specified tag key (<code>key</code>). This value acts as a descriptor for the tag key. A tag value cannot be null, but it can be an empty string."
              }
            ]
          }
        },
        "description": "<p>A <i>tag</i> is a label that you can define and associate with Amazon Web Services resources, including certain types of Amazon Security Lake resources. Tags can help you identify, categorize, and manage resources in different ways, such as by owner, environment, or other criteria. You can associate tags with the following types of Security Lake resources: subscribers, and the data lake configuration for your Amazon Web Services account in individual Amazon Web Services Regions.</p> <p>A resource can have up to 50 tags. Each tag consists of a required <i>tag key</i> and an associated <i>tag value</i>. A <i>tag key</i> is a general label that acts as a category for a more specific tag value. Each tag key must be unique and it can have only one tag value. A <i>tag value</i> acts as a descriptor for a tag key. Tag keys and values are case sensitive. They can contain letters, numbers, spaces, or the following symbols: _ . : / = + @ -</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html\">Tagging Amazon Security Lake resources</a> in the <i>Amazon Security Lake User Guide</i>.</p>"
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://securitylake.us-east-1.amazonaws.com/v1/datalake"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**dataLakes**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
