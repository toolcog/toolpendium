{
  "name": "DeleteAwsLogSource",
  "description": "<p>Removes a natively supported Amazon Web Service as an Amazon Security Lake source. You can remove a source for one or more Regions. When you remove the source, Security Lake stops collecting data from that source in the specified Regions and accounts, and subscribers can no longer consume new data from the source. However, subscribers can still consume data that Security Lake collected from the source before removal.</p> <p>You can choose any source type in any Amazon Web Services Region for either accounts that are part of a trusted organization or standalone accounts. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "sources"
        ],
        "properties": {
          "sources": {
            "description": "Specify the natively-supported Amazon Web Services service to remove as a source in Security Lake.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AwsLogSourceConfiguration"
            },
            "minItems": 0,
            "maxItems": 50
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "AwsLogSourceConfiguration": {
        "type": "object",
        "required": [
          "regions",
          "sourceName"
        ],
        "properties": {
          "accounts": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountList"
              },
              {
                "description": "Specify the Amazon Web Services account information where you want to enable Security Lake."
              }
            ]
          },
          "regions": {
            "allOf": [
              {
                "$ref": "#/$defs/RegionList"
              },
              {
                "description": "Specify the Regions where you want to enable Security Lake."
              }
            ]
          },
          "sourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsLogSourceName"
              },
              {
                "description": "The name for a Amazon Web Services source. This must be a Regionally unique value."
              }
            ]
          },
          "sourceVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsLogSourceVersion"
              },
              {
                "description": "The version for a Amazon Web Services source. This must be a Regionally unique value."
              }
            ]
          }
        },
        "description": "The Security Lake logs source configuration file describes the information needed to generate Security Lake logs. "
      },
      "AccountList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AwsAccountId"
        }
      },
      "AwsAccountId": {
        "type": "string",
        "pattern": "^[0-9]{12}$",
        "minLength": 12,
        "maxLength": 12
      },
      "RegionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Region"
        }
      },
      "Region": {
        "type": "string",
        "pattern": "^(af|ap|ca|eu|me|sa|us)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-\\d+$"
      },
      "AwsLogSourceName": {
        "type": "string",
        "enum": [
          "ROUTE53",
          "VPC_FLOW",
          "SH_FINDINGS",
          "CLOUD_TRAIL_MGMT",
          "LAMBDA_EXECUTION",
          "S3_DATA"
        ]
      },
      "AwsLogSourceVersion": {
        "type": "string",
        "pattern": "^(latest|[0-9]\\.[0-9])$"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://securitylake.us-east-1.amazonaws.com/v1/datalake/logsources/aws/delete"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**failed**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
