{
  "name": "CreateSubscriber",
  "description": "Creates a subscription permission for accounts that are already enabled in Amazon Security Lake. You can create a subscriber with access to data in the current Amazon Web Services Region.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "sources",
          "subscriberIdentity",
          "subscriberName"
        ],
        "properties": {
          "accessTypes": {
            "description": "The Amazon S3 or Lake Formation access type.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AccessType"
            }
          },
          "sources": {
            "description": "The supported Amazon Web Services from which logs and events are collected. Security Lake supports log and event collection for natively supported Amazon Web Services.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/LogSourceResource"
            }
          },
          "subscriberDescription": {
            "description": "The description for your subscriber account in Security Lake.",
            "type": "string",
            "pattern": "^[\\\\\\w\\s\\-_:/,.@=+]*$"
          },
          "subscriberIdentity": {
            "description": "The AWS identity.",
            "type": "object",
            "properties": {
              "externalId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExternalId"
                  },
                  {
                    "description": "The external ID used to estalish trust relationship with the AWS identity."
                  }
                ]
              },
              "principal": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AwsPrincipal"
                  },
                  {
                    "description": "The AWS identity principal."
                  }
                ]
              }
            }
          },
          "subscriberName": {
            "description": "The name of your Security Lake subscriber account.",
            "type": "string",
            "minLength": 0,
            "maxLength": 64
          },
          "tags": {
            "description": "An array of objects, one for each tag to associate with the subscriber. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 0,
            "maxItems": 50
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "AccessType": {
        "type": "string",
        "enum": [
          "LAKEFORMATION",
          "S3"
        ]
      },
      "LogSourceResource": {
        "type": "object",
        "properties": {
          "awsLogSource": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsLogSourceResource"
              },
              {
                "description": "Amazon Security Lake supports log and event collection for natively supported Amazon Web Services. For more information, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html\">Amazon Security Lake User Guide</a>."
              }
            ]
          },
          "customLogSource": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomLogSourceResource"
              },
              {
                "description": "Amazon Security Lake supports custom source types. For more information, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/custom-sources.html\">Amazon Security Lake User Guide</a>."
              }
            ]
          }
        },
        "description": "The supported source types from which logs and events are collected in Amazon Security Lake. For a list of supported Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html\">Amazon Security Lake User Guide</a>."
      },
      "AwsLogSourceResource": {
        "type": "object",
        "properties": {
          "sourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsLogSourceName"
              },
              {
                "description": "The name for a Amazon Web Services source. This must be a Regionally unique value."
              }
            ]
          },
          "sourceVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsLogSourceVersion"
              },
              {
                "description": "The version for a Amazon Web Services source. This must be a Regionally unique value."
              }
            ]
          }
        },
        "description": "Amazon Security Lake can collect logs and events from natively-supported Amazon Web Services services."
      },
      "AwsLogSourceName": {
        "type": "string",
        "enum": [
          "ROUTE53",
          "VPC_FLOW",
          "SH_FINDINGS",
          "CLOUD_TRAIL_MGMT",
          "LAMBDA_EXECUTION",
          "S3_DATA"
        ]
      },
      "AwsLogSourceVersion": {
        "type": "string",
        "pattern": "^(latest|[0-9]\\.[0-9])$"
      },
      "CustomLogSourceResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomLogSourceAttributes"
              },
              {
                "description": "The attributes of a third-party custom source."
              }
            ]
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomLogSourceProvider"
              },
              {
                "description": "The details of the log provider for a third-party custom source."
              }
            ]
          },
          "sourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomLogSourceName"
              },
              {
                "description": "The name for a third-party custom source. This must be a Regionally unique value."
              }
            ]
          },
          "sourceVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomLogSourceVersion"
              },
              {
                "description": "The version for a third-party custom source. This must be a Regionally unique value."
              }
            ]
          }
        },
        "description": "Amazon Security Lake can collect logs and events from third-party custom sources."
      },
      "CustomLogSourceAttributes": {
        "type": "object",
        "properties": {
          "crawlerArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The ARN of the Glue crawler."
              }
            ]
          },
          "databaseArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The ARN of the Glue database where results are written, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>."
              }
            ]
          },
          "tableArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The ARN of the Glue table."
              }
            ]
          }
        },
        "description": "The attributes of a third-party custom source."
      },
      "AmazonResourceName": {
        "type": "string",
        "pattern": "^arn:aws:securitylake:[A-za-z0-9_/.\\-]{0,63}:[A-za-z0-9_/.\\-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.\\-]{0,127}$",
        "minLength": 1,
        "maxLength": 1011
      },
      "CustomLogSourceProvider": {
        "type": "object",
        "properties": {
          "location": {
            "allOf": [
              {
                "$ref": "#/$defs/S3URI"
              },
              {
                "description": "The location of the partition in the Amazon S3 bucket for Security Lake."
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The ARN of the IAM role to be used by the entity putting logs into your custom source partition. Security Lake will apply the correct access policies to this role, but you must first manually create the trust policy for this role. The IAM role name must start with the text 'Security Lake'. The IAM role must trust the <code>logProviderAccountId</code> to assume the role."
              }
            ]
          }
        },
        "description": "The details of the log provider for a third-party custom source."
      },
      "S3URI": {
        "type": "string",
        "pattern": "^s3[an]?://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/[^/].*)+$",
        "description": "A complete S3 URI pointing to a valid S3 object.",
        "minLength": 0,
        "maxLength": 1024
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:.*$"
      },
      "CustomLogSourceName": {
        "type": "string",
        "pattern": "^[\\\\\\w\\-_:/.]*$",
        "minLength": 1,
        "maxLength": 64
      },
      "CustomLogSourceVersion": {
        "type": "string",
        "pattern": "^[A-Za-z0-9\\-\\.\\_]*$",
        "minLength": 1,
        "maxLength": 32
      },
      "ExternalId": {
        "type": "string",
        "pattern": "^[\\w+=,.@:\\/-]*$",
        "minLength": 2,
        "maxLength": 1224
      },
      "AwsPrincipal": {
        "type": "string",
        "pattern": "^([0-9]{12}|[a-z0-9\\.\\-]*\\.(amazonaws|amazon)\\.com)$"
      },
      "Tag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The name of the tag. This is a general label that acts as a category for a more specific tag value (<code>value</code>)."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value that’s associated with the specified tag key (<code>key</code>). This value acts as a descriptor for the tag key. A tag value cannot be null, but it can be an empty string."
              }
            ]
          }
        },
        "description": "<p>A <i>tag</i> is a label that you can define and associate with Amazon Web Services resources, including certain types of Amazon Security Lake resources. Tags can help you identify, categorize, and manage resources in different ways, such as by owner, environment, or other criteria. You can associate tags with the following types of Security Lake resources: subscribers, and the data lake configuration for your Amazon Web Services account in individual Amazon Web Services Regions.</p> <p>A resource can have up to 50 tags. Each tag consists of a required <i>tag key</i> and an associated <i>tag value</i>. A <i>tag key</i> is a general label that acts as a category for a more specific tag value. Each tag key must be unique and it can have only one tag value. A <i>tag value</i> acts as a descriptor for a tag key. Tag keys and values are case sensitive. They can contain letters, numbers, spaces, or the following symbols: _ . : / = + @ -</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html\">Tagging Amazon Security Lake resources</a> in the <i>Amazon Security Lake User Guide</i>.</p>"
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://securitylake.us-east-1.amazonaws.com/v1/subscribers"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**subscriber**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
