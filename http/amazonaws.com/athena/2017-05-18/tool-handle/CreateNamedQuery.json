{
  "name": "CreateNamedQuery",
  "description": "<p>Creates a named query in the specified workgroup. Requires that you have access to the workgroup.</p> <p>For code samples using the Amazon Web Services SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonAthena.CreateNamedQuery"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateNamedQueryInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateNamedQueryInput": {
        "type": "object",
        "required": [
          "Name",
          "Database",
          "QueryString"
        ],
        "title": "CreateNamedQueryInput",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The query name."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/DescriptionString"
              },
              {
                "description": "The query description."
              }
            ]
          },
          "Database": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseString"
              },
              {
                "description": "The database to which the query belongs."
              }
            ]
          },
          "QueryString": {
            "allOf": [
              {
                "$ref": "#/$defs/QueryString"
              },
              {
                "description": "The contents of the query with all query statements."
              }
            ]
          },
          "ClientRequestToken": {
            "allOf": [
              {
                "$ref": "#/$defs/IdempotencyToken"
              },
              {
                "description": "<p>A unique case-sensitive string used to ensure the request to create the query is idempotent (executes only once). If another <code>CreateNamedQuery</code> request is received, the same response is returned and another query is not created. If a parameter has changed, for example, the <code>QueryString</code>, an error is returned.</p> <important> <p>This token is listed as not required because Amazon Web Services SDKs (for example the Amazon Web Services SDK for Java) auto-generate the token for users. If you are not using the Amazon Web Services SDK or the Amazon Web Services CLI, you must provide this token or the action will fail.</p> </important>"
              }
            ]
          },
          "WorkGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkGroupName"
              },
              {
                "description": "The name of the workgroup in which the named query is being created."
              }
            ]
          }
        }
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "DescriptionString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "DatabaseString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "QueryString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 262144
      },
      "IdempotencyToken": {
        "type": "string",
        "minLength": 32,
        "maxLength": 128
      },
      "WorkGroupName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9._-]{1,128}"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://athena.us-east-1.amazonaws.com/#X-Amz-Target=AmazonAthena.CreateNamedQuery"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NamedQueryId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
