{
  "name": "CreateWorkGroup",
  "description": "Creates a workgroup with the specified name. A workgroup can be an Apache Spark enabled workgroup or an Athena SQL workgroup.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonAthena.CreateWorkGroup"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateWorkGroupInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateWorkGroupInput": {
        "type": "object",
        "required": [
          "Name"
        ],
        "title": "CreateWorkGroupInput",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkGroupName"
              },
              {
                "description": "The workgroup name."
              }
            ]
          },
          "Configuration": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkGroupConfiguration"
              },
              {
                "description": "Contains configuration information for creating an Athena SQL workgroup or Spark enabled Athena workgroup. Athena SQL workgroup configuration includes the location in Amazon S3 where query and calculation results are stored, the encryption configuration, if any, used for encrypting query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, the limit for the amount of bytes scanned (cutoff) per query, if it is specified, and whether workgroup's settings (specified with <code>EnforceWorkGroupConfiguration</code>) in the <code>WorkGroupConfiguration</code> override client-side settings. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkGroupDescriptionString"
              },
              {
                "description": "The workgroup description."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "A list of comma separated tags to add to the workgroup that is created."
              }
            ]
          }
        }
      },
      "WorkGroupName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9._-]{1,128}"
      },
      "WorkGroupConfiguration": {
        "type": "object",
        "properties": {
          "ResultConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ResultConfiguration"
              },
              {
                "description": "The configuration for the workgroup, which includes the location in Amazon S3 where query and calculation results are stored and the encryption option, if any, used for query and calculation results. To run the query, you must specify the query results location using one of the ways: either in the workgroup using this setting, or for individual queries (client-side), using <a>ResultConfiguration$OutputLocation</a>. If none of them is set, Athena issues an error that no output location is provided. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Working with query results, recent queries, and output files</a>."
              }
            ]
          },
          "EnforceWorkGroupConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "If set to \"true\", the settings for the workgroup override client-side settings. If set to \"false\", client-side settings are used. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>."
              }
            ]
          },
          "PublishCloudWatchMetricsEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "Indicates that the Amazon CloudWatch metrics are enabled for the workgroup."
              }
            ]
          },
          "BytesScannedCutoffPerQuery": {
            "allOf": [
              {
                "$ref": "#/$defs/BytesScannedCutoffValue"
              },
              {
                "description": "The upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan."
              }
            ]
          },
          "RequesterPaysEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "If set to <code>true</code>, allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to <code>false</code>, workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is <code>false</code>. For more information about Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html\">Requester Pays Buckets</a> in the <i>Amazon Simple Storage Service Developer Guide</i>."
              }
            ]
          },
          "EngineVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/EngineVersion"
              },
              {
                "description": "The engine version that all queries running on the workgroup use. Queries on the <code>AmazonAthenaPreviewFunctionality</code> workgroup run on the preview engine regardless of this setting."
              }
            ]
          },
          "AdditionalConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "Specifies a user defined JSON string that is passed to the notebook engine."
              }
            ]
          },
          "ExecutionRole": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "Role used in a session for accessing the user's resources."
              }
            ]
          },
          "CustomerContentEncryptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomerContentEncryptionConfiguration"
              },
              {
                "description": "Specifies the KMS key that is used to encrypt the user's data stores in Athena. This setting does not apply to Athena SQL workgroups."
              }
            ]
          },
          "EnableMinimumEncryptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "<p>Enforces a minimal level of encryption for the workgroup for query and calculation results that are written to Amazon S3. When enabled, workgroup users can set encryption only to the minimum level set by the administrator or higher when they submit queries.</p> <p>The <code>EnforceWorkGroupConfiguration</code> setting takes precedence over the <code>EnableMinimumEncryptionConfiguration</code> flag. This means that if <code>EnforceWorkGroupConfiguration</code> is true, the <code>EnableMinimumEncryptionConfiguration</code> flag is ignored, and the workgroup configuration for encryption is used.</p>"
              }
            ]
          }
        },
        "description": "The configuration of the workgroup, which includes the location in Amazon S3 where query and calculation results are stored, the encryption option, if any, used for query and calculation results, whether the Amazon CloudWatch Metrics are enabled for the workgroup and whether workgroup settings override query settings, and the data usage limits for the amount of data scanned per query or per workgroup. The workgroup settings override is specified in <code>EnforceWorkGroupConfiguration</code> (true/false) in the <code>WorkGroupConfiguration</code>. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>. "
      },
      "ResultConfiguration": {
        "type": "object",
        "properties": {
          "OutputLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/ResultOutputLocation"
              },
              {
                "description": "The location in Amazon S3 where your query and calculation results are stored, such as <code>s3://path/to/query/bucket/</code>. To run the query, you must specify the query results location using one of the ways: either for individual queries using either this setting (client-side), or in the workgroup, using <a>WorkGroupConfiguration</a>. If none of them is set, Athena issues an error that no output location is provided. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Working with query results, recent queries, and output files</a>. If workgroup settings override client-side settings, then the query uses the settings specified for the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>."
              }
            ]
          },
          "EncryptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionConfiguration"
              },
              {
                "description": "If query and calculation results are encrypted in Amazon S3, indicates the encryption option used (for example, <code>SSE_KMS</code> or <code>CSE_KMS</code>) and key information. This is a client-side setting. If workgroup settings override client-side settings, then the query uses the encryption configuration that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a> and <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>."
              }
            ]
          },
          "ExpectedBucketOwner": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsAccountId"
              },
              {
                "description": "<p>The Amazon Web Services account ID that you expect to be the owner of the Amazon S3 bucket specified by <a>ResultConfiguration$OutputLocation</a>. If set, Athena uses the value for <code>ExpectedBucketOwner</code> when it makes Amazon S3 calls to your specified output location. If the <code>ExpectedBucketOwner</code> Amazon Web Services account ID does not match the actual owner of the Amazon S3 bucket, the call fails with a permissions error.</p> <p>This is a client-side setting. If workgroup settings override client-side settings, then the query uses the <code>ExpectedBucketOwner</code> setting that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a> and <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>.</p>"
              }
            ]
          },
          "AclConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/AclConfiguration"
              },
              {
                "description": "Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. Currently the only supported canned ACL is <code>BUCKET_OWNER_FULL_CONTROL</code>. This is a client-side setting. If workgroup settings override client-side settings, then the query uses the ACL configuration that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. For more information, see <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a> and <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>."
              }
            ]
          }
        },
        "description": "The location in Amazon S3 where query and calculation results are stored and the encryption option, if any, used for query and calculation results. These are known as \"client-side settings\". If workgroup settings override client-side settings, then the query uses the workgroup settings."
      },
      "ResultOutputLocation": {
        "type": "string"
      },
      "EncryptionConfiguration": {
        "type": "object",
        "required": [
          "EncryptionOption"
        ],
        "properties": {
          "EncryptionOption": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionOption"
              },
              {
                "description": "<p>Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (<code>SSE_S3</code>), server-side encryption with KMS-managed keys (<code>SSE_KMS</code>), or client-side encryption with KMS-managed keys (<code>CSE_KMS</code>) is used.</p> <p>If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup. </p>"
              }
            ]
          },
          "KmsKey": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "For <code>SSE_KMS</code> and <code>CSE_KMS</code>, this is the KMS key ARN or ID."
              }
            ]
          }
        },
        "description": "If query and calculation results are encrypted in Amazon S3, indicates the encryption option used (for example, <code>SSE_KMS</code> or <code>CSE_KMS</code>) and key information."
      },
      "EncryptionOption": {
        "type": "string",
        "enum": [
          "SSE_S3",
          "SSE_KMS",
          "CSE_KMS"
        ]
      },
      "String": {
        "type": "string"
      },
      "AwsAccountId": {
        "type": "string",
        "pattern": "^[0-9]+$",
        "minLength": 12,
        "maxLength": 12
      },
      "AclConfiguration": {
        "type": "object",
        "required": [
          "S3AclOption"
        ],
        "properties": {
          "S3AclOption": {
            "allOf": [
              {
                "$ref": "#/$defs/S3AclOption"
              },
              {
                "description": "The Amazon S3 canned ACL that Athena should specify when storing query results. Currently the only supported canned ACL is <code>BUCKET_OWNER_FULL_CONTROL</code>. If a query runs in a workgroup and the workgroup overrides client-side settings, then the Amazon S3 canned ACL specified in the workgroup's settings is used for all queries that run in the workgroup. For more information about Amazon S3 canned ACLs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl\">Canned ACL</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          }
        },
        "description": "Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. When Athena stores query results in Amazon S3, the canned ACL is set with the <code>x-amz-acl</code> request header. For more information about S3 Object Ownership, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html#object-ownership-overview\">Object Ownership settings</a> in the <i>Amazon S3 User Guide</i>."
      },
      "S3AclOption": {
        "type": "string",
        "enum": [
          "BUCKET_OWNER_FULL_CONTROL"
        ]
      },
      "BoxedBoolean": {
        "type": "boolean"
      },
      "BytesScannedCutoffValue": {
        "type": "integer",
        "minimum": 10000000
      },
      "EngineVersion": {
        "type": "object",
        "properties": {
          "SelectedEngineVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The engine version requested by the user. Possible values are determined by the output of <code>ListEngineVersions</code>, including AUTO. The default is AUTO."
              }
            ]
          },
          "EffectiveEngineVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "Read only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a <code>CreateWorkGroup</code> or <code>UpdateWorkGroup</code> operation, the <code>EffectiveEngineVersion</code> field is ignored."
              }
            ]
          }
        },
        "description": "The Athena engine version for running queries, or the PySpark engine version for running sessions."
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
        "minLength": 20,
        "maxLength": 2048
      },
      "CustomerContentEncryptionConfiguration": {
        "type": "object",
        "required": [
          "KmsKey"
        ],
        "properties": {
          "KmsKey": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKey"
              },
              {
                "description": "The KMS key that is used to encrypt the user's data stores in Athena."
              }
            ]
          }
        },
        "description": "Specifies the KMS key that is used to encrypt the user's data stores in Athena. This setting does not apply to Athena SQL workgroups."
      },
      "KmsKey": {
        "type": "string",
        "pattern": "^arn:aws[a-z\\-]*:kms:([a-z0-9\\-]+):\\d{12}:key/?[a-zA-Z_0-9+=,.@\\-_/]+$|^arn:aws[a-z\\-]*:kms:([a-z0-9\\-]+):\\d{12}:alias/?[a-zA-Z_0-9+=,.@\\-_/]+$|^alias/[a-zA-Z0-9/_-]+$|[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}",
        "minLength": 1,
        "maxLength": 2048
      },
      "WorkGroupDescriptionString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "A tag key. The tag key length is from 1 to 128 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys are case-sensitive and must be unique per resource. "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "A tag value. The tag value length is from 0 to 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag values are case-sensitive. "
              }
            ]
          }
        },
        "description": "A label that you assign to a resource. Athena resources include workgroups, data catalogs, and capacity reservations. Each tag consists of a key and an optional value, both of which you define. For example, you can use tags to categorize Athena resources by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter the resources in your account. For best practices, see <a href=\"https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html\">Tagging Best Practices</a>. Tag keys can be from 1 to 128 UTF-8 Unicode characters, and tag values can be from 0 to 256 UTF-8 Unicode characters. Tags can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you specify more than one tag, separate them by commas. "
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://athena.us-east-1.amazonaws.com/#X-Amz-Target=AmazonAthena.CreateWorkGroup"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
