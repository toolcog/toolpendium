{
  "name": "UpdateWorkGroup",
  "description": "Updates the workgroup with the specified name. The workgroup's name cannot be changed. Only <code>ConfigurationUpdates</code> can be specified.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonAthena.UpdateWorkGroup"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateWorkGroupInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateWorkGroupInput": {
        "type": "object",
        "required": [
          "WorkGroup"
        ],
        "title": "UpdateWorkGroupInput",
        "properties": {
          "WorkGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkGroupName"
              },
              {
                "description": "The specified workgroup that will be updated."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkGroupDescriptionString"
              },
              {
                "description": "The workgroup description."
              }
            ]
          },
          "ConfigurationUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkGroupConfigurationUpdates"
              },
              {
                "description": "Contains configuration updates for an Athena SQL workgroup."
              }
            ]
          },
          "State": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkGroupState"
              },
              {
                "description": "The workgroup state that will be updated for the given workgroup."
              }
            ]
          }
        }
      },
      "WorkGroupName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9._-]{1,128}"
      },
      "WorkGroupDescriptionString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "WorkGroupConfigurationUpdates": {
        "type": "object",
        "properties": {
          "EnforceWorkGroupConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "If set to \"true\", the settings for the workgroup override client-side settings. If set to \"false\" client-side settings are used. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>."
              }
            ]
          },
          "ResultConfigurationUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/ResultConfigurationUpdates"
              },
              {
                "description": "The result configuration information about the queries in this workgroup that will be updated. Includes the updated results location and an updated option for encrypting query results."
              }
            ]
          },
          "PublishCloudWatchMetricsEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "Indicates whether this workgroup enables publishing metrics to Amazon CloudWatch."
              }
            ]
          },
          "BytesScannedCutoffPerQuery": {
            "allOf": [
              {
                "$ref": "#/$defs/BytesScannedCutoffValue"
              },
              {
                "description": "The upper limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan."
              }
            ]
          },
          "RemoveBytesScannedCutoffPerQuery": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "Indicates that the data usage control limit per query is removed. <a>WorkGroupConfiguration$BytesScannedCutoffPerQuery</a> "
              }
            ]
          },
          "RequesterPaysEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "If set to <code>true</code>, allows members assigned to a workgroup to specify Amazon S3 Requester Pays buckets in queries. If set to <code>false</code>, workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is <code>false</code>. For more information about Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html\">Requester Pays Buckets</a> in the <i>Amazon Simple Storage Service Developer Guide</i>."
              }
            ]
          },
          "EngineVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/EngineVersion"
              },
              {
                "description": "The engine version requested when a workgroup is updated. After the update, all queries on the workgroup run on the requested engine version. If no value was previously set, the default is Auto. Queries on the <code>AmazonAthenaPreviewFunctionality</code> workgroup run on the preview engine regardless of this setting."
              }
            ]
          },
          "RemoveCustomerContentEncryptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "Removes content encryption configuration from an Apache Spark-enabled Athena workgroup."
              }
            ]
          },
          "AdditionalConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "Contains a user defined string in JSON format for a Spark-enabled workgroup."
              }
            ]
          },
          "ExecutionRole": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "Contains the ARN of the execution role for the workgroup"
              }
            ]
          },
          "CustomerContentEncryptionConfiguration": {
            "$ref": "#/$defs/CustomerContentEncryptionConfiguration"
          },
          "EnableMinimumEncryptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "<p>Enforces a minimal level of encryption for the workgroup for query and calculation results that are written to Amazon S3. When enabled, workgroup users can set encryption only to the minimum level set by the administrator or higher when they submit queries. This setting does not apply to Spark-enabled workgroups.</p> <p>The <code>EnforceWorkGroupConfiguration</code> setting takes precedence over the <code>EnableMinimumEncryptionConfiguration</code> flag. This means that if <code>EnforceWorkGroupConfiguration</code> is true, the <code>EnableMinimumEncryptionConfiguration</code> flag is ignored, and the workgroup configuration for encryption is used.</p>"
              }
            ]
          }
        },
        "description": "The configuration information that will be updated for this workgroup, which includes the location in Amazon S3 where query and calculation results are stored, the encryption option, if any, used for query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, whether the workgroup settings override the client-side settings, and the data usage limit for the amount of bytes scanned per query, if it is specified."
      },
      "BoxedBoolean": {
        "type": "boolean"
      },
      "ResultConfigurationUpdates": {
        "type": "object",
        "properties": {
          "OutputLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/ResultOutputLocation"
              },
              {
                "description": "The location in Amazon S3 where your query and calculation results are stored, such as <code>s3://path/to/query/bucket/</code>. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Working with query results, recent queries, and output files</a>. If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup. The \"workgroup settings override\" is specified in <code>EnforceWorkGroupConfiguration</code> (true/false) in the <code>WorkGroupConfiguration</code>. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>."
              }
            ]
          },
          "RemoveOutputLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "If set to \"true\", indicates that the previously-specified query results location (also known as a client-side setting) for queries in this workgroup should be ignored and set to null. If set to \"false\" or not set, and a value is present in the <code>OutputLocation</code> in <code>ResultConfigurationUpdates</code> (the client-side setting), the <code>OutputLocation</code> in the workgroup's <code>ResultConfiguration</code> will be updated with the new value. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>."
              }
            ]
          },
          "EncryptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionConfiguration"
              },
              {
                "description": "The encryption configuration for query and calculation results."
              }
            ]
          },
          "RemoveEncryptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "If set to \"true\", indicates that the previously-specified encryption configuration (also known as the client-side setting) for queries in this workgroup should be ignored and set to null. If set to \"false\" or not set, and a value is present in the <code>EncryptionConfiguration</code> in <code>ResultConfigurationUpdates</code> (the client-side setting), the <code>EncryptionConfiguration</code> in the workgroup's <code>ResultConfiguration</code> will be updated with the new value. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>."
              }
            ]
          },
          "ExpectedBucketOwner": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsAccountId"
              },
              {
                "description": "<p>The Amazon Web Services account ID that you expect to be the owner of the Amazon S3 bucket specified by <a>ResultConfiguration$OutputLocation</a>. If set, Athena uses the value for <code>ExpectedBucketOwner</code> when it makes Amazon S3 calls to your specified output location. If the <code>ExpectedBucketOwner</code> Amazon Web Services account ID does not match the actual owner of the Amazon S3 bucket, the call fails with a permissions error.</p> <p>If workgroup settings override client-side settings, then the query uses the <code>ExpectedBucketOwner</code> setting that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a> and <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>.</p>"
              }
            ]
          },
          "RemoveExpectedBucketOwner": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "If set to \"true\", removes the Amazon Web Services account ID previously specified for <a>ResultConfiguration$ExpectedBucketOwner</a>. If set to \"false\" or not set, and a value is present in the <code>ExpectedBucketOwner</code> in <code>ResultConfigurationUpdates</code> (the client-side setting), the <code>ExpectedBucketOwner</code> in the workgroup's <code>ResultConfiguration</code> is updated with the new value. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>."
              }
            ]
          },
          "AclConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/AclConfiguration"
              },
              {
                "description": "The ACL configuration for the query results."
              }
            ]
          },
          "RemoveAclConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "If set to <code>true</code>, indicates that the previously-specified ACL configuration for queries in this workgroup should be ignored and set to null. If set to <code>false</code> or not set, and a value is present in the <code>AclConfiguration</code> of <code>ResultConfigurationUpdates</code>, the <code>AclConfiguration</code> in the workgroup's <code>ResultConfiguration</code> is updated with the new value. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>."
              }
            ]
          }
        },
        "description": "The information about the updates in the query results, such as output location and encryption configuration for the query results."
      },
      "ResultOutputLocation": {
        "type": "string"
      },
      "EncryptionConfiguration": {
        "type": "object",
        "required": [
          "EncryptionOption"
        ],
        "properties": {
          "EncryptionOption": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionOption"
              },
              {
                "description": "<p>Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (<code>SSE_S3</code>), server-side encryption with KMS-managed keys (<code>SSE_KMS</code>), or client-side encryption with KMS-managed keys (<code>CSE_KMS</code>) is used.</p> <p>If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup. </p>"
              }
            ]
          },
          "KmsKey": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "For <code>SSE_KMS</code> and <code>CSE_KMS</code>, this is the KMS key ARN or ID."
              }
            ]
          }
        },
        "description": "If query and calculation results are encrypted in Amazon S3, indicates the encryption option used (for example, <code>SSE_KMS</code> or <code>CSE_KMS</code>) and key information."
      },
      "EncryptionOption": {
        "type": "string",
        "enum": [
          "SSE_S3",
          "SSE_KMS",
          "CSE_KMS"
        ]
      },
      "String": {
        "type": "string"
      },
      "AwsAccountId": {
        "type": "string",
        "pattern": "^[0-9]+$",
        "minLength": 12,
        "maxLength": 12
      },
      "AclConfiguration": {
        "type": "object",
        "required": [
          "S3AclOption"
        ],
        "properties": {
          "S3AclOption": {
            "allOf": [
              {
                "$ref": "#/$defs/S3AclOption"
              },
              {
                "description": "The Amazon S3 canned ACL that Athena should specify when storing query results. Currently the only supported canned ACL is <code>BUCKET_OWNER_FULL_CONTROL</code>. If a query runs in a workgroup and the workgroup overrides client-side settings, then the Amazon S3 canned ACL specified in the workgroup's settings is used for all queries that run in the workgroup. For more information about Amazon S3 canned ACLs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl\">Canned ACL</a> in the <i>Amazon S3 User Guide</i>."
              }
            ]
          }
        },
        "description": "Indicates that an Amazon S3 canned ACL should be set to control ownership of stored query results. When Athena stores query results in Amazon S3, the canned ACL is set with the <code>x-amz-acl</code> request header. For more information about S3 Object Ownership, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html#object-ownership-overview\">Object Ownership settings</a> in the <i>Amazon S3 User Guide</i>."
      },
      "S3AclOption": {
        "type": "string",
        "enum": [
          "BUCKET_OWNER_FULL_CONTROL"
        ]
      },
      "BytesScannedCutoffValue": {
        "type": "integer",
        "minimum": 10000000
      },
      "EngineVersion": {
        "type": "object",
        "properties": {
          "SelectedEngineVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The engine version requested by the user. Possible values are determined by the output of <code>ListEngineVersions</code>, including AUTO. The default is AUTO."
              }
            ]
          },
          "EffectiveEngineVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "Read only. The engine version on which the query runs. If the user requests a valid engine version other than Auto, the effective engine version is the same as the engine version that the user requested. If the user requests Auto, the effective engine version is chosen by Athena. When a request to update the engine version is made by a <code>CreateWorkGroup</code> or <code>UpdateWorkGroup</code> operation, the <code>EffectiveEngineVersion</code> field is ignored."
              }
            ]
          }
        },
        "description": "The Athena engine version for running queries, or the PySpark engine version for running sessions."
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
        "minLength": 20,
        "maxLength": 2048
      },
      "CustomerContentEncryptionConfiguration": {
        "type": "object",
        "required": [
          "KmsKey"
        ],
        "properties": {
          "KmsKey": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKey"
              },
              {
                "description": "The KMS key that is used to encrypt the user's data stores in Athena."
              }
            ]
          }
        },
        "description": "Specifies the KMS key that is used to encrypt the user's data stores in Athena. This setting does not apply to Athena SQL workgroups."
      },
      "KmsKey": {
        "type": "string",
        "pattern": "^arn:aws[a-z\\-]*:kms:([a-z0-9\\-]+):\\d{12}:key/?[a-zA-Z_0-9+=,.@\\-_/]+$|^arn:aws[a-z\\-]*:kms:([a-z0-9\\-]+):\\d{12}:alias/?[a-zA-Z_0-9+=,.@\\-_/]+$|^alias/[a-zA-Z0-9/_-]+$|[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}",
        "minLength": 1,
        "maxLength": 2048
      },
      "WorkGroupState": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://athena.us-east-1.amazonaws.com/#X-Amz-Target=AmazonAthena.UpdateWorkGroup"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
