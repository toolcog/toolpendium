{
  "name": "ImportTerminology",
  "description": "<p>Creates or updates a custom terminology, depending on whether one already exists for the given terminology name. Importing a terminology with the same name as an existing one will merge the terminologies based on the chosen merge strategy. The only supported merge strategy is OVERWRITE, where the imported terminology overwrites the existing terminology of the same name.</p> <p>If you import a terminology that overwrites an existing one, the new terminology takes up to 10 minutes to fully propagate. After that, translations have access to the new terminology.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSShineFrontendService_20170701.ImportTerminology"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ImportTerminologyRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ImportTerminologyRequest": {
        "type": "object",
        "required": [
          "Name",
          "MergeStrategy",
          "TerminologyData"
        ],
        "title": "ImportTerminologyRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of the custom terminology being imported."
              }
            ]
          },
          "MergeStrategy": {
            "allOf": [
              {
                "$ref": "#/$defs/MergeStrategy"
              },
              {
                "description": "The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "The description of the custom terminology being imported."
              }
            ]
          },
          "TerminologyData": {
            "allOf": [
              {
                "$ref": "#/$defs/TerminologyData"
              },
              {
                "description": "The terminology data for the custom terminology being imported."
              }
            ]
          },
          "EncryptionKey": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionKey"
              },
              {
                "description": "The encryption key for the custom terminology being imported."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "Tags to be associated with this resource. A tag is a key-value pair that adds metadata to a resource. Each tag key for the resource must be unique. For more information, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/tagging.html\"> Tagging your resources</a>."
              }
            ]
          }
        }
      },
      "ResourceName": {
        "type": "string",
        "pattern": "^([A-Za-z0-9-]_?)+$",
        "minLength": 1,
        "maxLength": 256
      },
      "MergeStrategy": {
        "type": "string",
        "enum": [
          "OVERWRITE"
        ]
      },
      "Description": {
        "type": "string",
        "pattern": "[\\P{M}\\p{M}]{0,256}",
        "maxLength": 256
      },
      "TerminologyData": {
        "type": "object",
        "required": [
          "File",
          "Format"
        ],
        "properties": {
          "File": {
            "allOf": [
              {
                "$ref": "#/$defs/TerminologyFile"
              },
              {
                "description": "The file containing the custom terminology data. Your version of the AWS SDK performs a Base64-encoding on this field before sending a request to the AWS service. Users of the SDK should not perform Base64-encoding themselves."
              }
            ]
          },
          "Format": {
            "allOf": [
              {
                "$ref": "#/$defs/TerminologyDataFormat"
              },
              {
                "description": "The data format of the custom terminology."
              }
            ]
          },
          "Directionality": {
            "allOf": [
              {
                "$ref": "#/$defs/Directionality"
              },
              {
                "description": "<p>The directionality of your terminology resource indicates whether it has one source language (uni-directional) or multiple (multi-directional).</p> <dl> <dt>UNI</dt> <dd> <p>The terminology resource has one source language (for example, the first column in a CSV file), and all of its other languages are target languages. </p> </dd> <dt>MULTI</dt> <dd> <p>Any language in the terminology resource can be the source language or a target language. A single multi-directional terminology resource can be used for jobs that translate different language pairs. For example, if the terminology contains English and Spanish terms, it can be used for jobs that translate English to Spanish and Spanish to English.</p> </dd> </dl> <p>When you create a custom terminology resource without specifying the directionality, it behaves as uni-directional terminology, although this parameter will have a null value.</p>"
              }
            ]
          }
        },
        "description": "The data associated with the custom terminology. For information about the custom terminology file, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/creating-custom-terminology.html\"> Creating a Custom Terminology</a>."
      },
      "TerminologyFile": {
        "type": "string",
        "maxLength": 10485760,
        "format": "password"
      },
      "TerminologyDataFormat": {
        "type": "string",
        "enum": [
          "CSV",
          "TMX",
          "TSV"
        ]
      },
      "Directionality": {
        "type": "string",
        "enum": [
          "UNI",
          "MULTI"
        ]
      },
      "EncryptionKey": {
        "type": "object",
        "required": [
          "Type",
          "Id"
        ],
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionKeyType"
              },
              {
                "description": "The type of encryption key used by Amazon Translate to encrypt this object."
              }
            ]
          },
          "Id": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionKeyID"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the encryption key being used to encrypt this object."
              }
            ]
          }
        },
        "description": "The encryption key used to encrypt this object."
      },
      "EncryptionKeyType": {
        "type": "string",
        "enum": [
          "KMS"
        ]
      },
      "EncryptionKeyID": {
        "type": "string",
        "pattern": "(arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:kms:)?([a-z]{2}-[a-z]+(-[a-z]+)?-\\d:)?(\\d{12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))",
        "minLength": 1,
        "maxLength": 400
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The initial part of a key-value pair that forms a tag associated with a given resource. "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": " The second part of a key-value pair that forms a tag associated with a given resource."
              }
            ]
          }
        },
        "description": "A key-value pair that adds as a metadata to a resource used by Amazon Translate. "
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://translate.us-east-1.amazonaws.com/#X-Amz-Target=AWSShineFrontendService_20170701.ImportTerminology"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**TerminologyProperties**",
            "**AuxiliaryDataLocation**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
