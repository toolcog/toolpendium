{
  "name": "CreateParallelData",
  "description": "Creates a parallel data resource in Amazon Translate by importing an input file from Amazon S3. Parallel data files contain examples that show how you want segments of text to be translated. By adding parallel data, you can influence the style, tone, and word choice in your translation output.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSShineFrontendService_20170701.CreateParallelData"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateParallelDataRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateParallelDataRequest": {
        "type": "object",
        "required": [
          "Name",
          "ParallelDataConfig",
          "ClientToken"
        ],
        "title": "CreateParallelDataRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "A custom name for the parallel data resource in Amazon Translate. You must assign a name that is unique in the account and region."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "A custom description for the parallel data resource in Amazon Translate."
              }
            ]
          },
          "ParallelDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ParallelDataConfig"
              },
              {
                "description": "Specifies the format and S3 location of the parallel data input file."
              }
            ]
          },
          "EncryptionKey": {
            "$ref": "#/$defs/EncryptionKey"
          },
          "ClientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientTokenString"
              },
              {
                "description": "A unique identifier for the request. This token is automatically generated when you use Amazon Translate through an AWS SDK."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "Tags to be associated with this resource. A tag is a key-value pair that adds metadata to a resource. Each tag key for the resource must be unique. For more information, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/tagging.html\"> Tagging your resources</a>."
              }
            ]
          }
        }
      },
      "ResourceName": {
        "type": "string",
        "pattern": "^([A-Za-z0-9-]_?)+$",
        "minLength": 1,
        "maxLength": 256
      },
      "Description": {
        "type": "string",
        "pattern": "[\\P{M}\\p{M}]{0,256}",
        "maxLength": 256
      },
      "ParallelDataConfig": {
        "type": "object",
        "required": [
          "S3Uri",
          "Format"
        ],
        "properties": {
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The URI of the Amazon S3 folder that contains the parallel data input file. The folder must be in the same Region as the API endpoint you are calling."
              }
            ]
          },
          "Format": {
            "allOf": [
              {
                "$ref": "#/$defs/ParallelDataFormat"
              },
              {
                "description": "The format of the parallel data input file."
              }
            ]
          }
        },
        "description": "Specifies the format and S3 location of the parallel data input file."
      },
      "S3Uri": {
        "type": "string",
        "pattern": "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?",
        "maxLength": 1024
      },
      "ParallelDataFormat": {
        "type": "string",
        "enum": [
          "TSV",
          "CSV",
          "TMX"
        ]
      },
      "EncryptionKey": {
        "type": "object",
        "required": [
          "Type",
          "Id"
        ],
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionKeyType"
              },
              {
                "description": "The type of encryption key used by Amazon Translate to encrypt this object."
              }
            ]
          },
          "Id": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionKeyID"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the encryption key being used to encrypt this object."
              }
            ]
          }
        },
        "description": "The encryption key used to encrypt this object."
      },
      "EncryptionKeyType": {
        "type": "string",
        "enum": [
          "KMS"
        ]
      },
      "EncryptionKeyID": {
        "type": "string",
        "pattern": "(arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:kms:)?([a-z]{2}-[a-z]+(-[a-z]+)?-\\d:)?(\\d{12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))",
        "minLength": 1,
        "maxLength": 400
      },
      "ClientTokenString": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The initial part of a key-value pair that forms a tag associated with a given resource. "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": " The second part of a key-value pair that forms a tag associated with a given resource."
              }
            ]
          }
        },
        "description": "A key-value pair that adds as a metadata to a resource used by Amazon Translate. "
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://translate.us-east-1.amazonaws.com/#X-Amz-Target=AWSShineFrontendService_20170701.CreateParallelData"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Name**",
            "**Status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
