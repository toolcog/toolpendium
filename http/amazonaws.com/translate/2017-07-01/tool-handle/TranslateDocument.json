{
  "name": "TranslateDocument",
  "description": "<p>Translates the input document from the source language to the target language. This synchronous operation supports plain text or HTML for the input document. <code>TranslateDocument</code> supports translations from English to any supported language, and from any supported language to English. Therefore, specify either the source language code or the target language code as “en” (English). </p> <p> <code>TranslateDocument</code> does not support language auto-detection. </p> <p> If you set the <code>Formality</code> parameter, the request will fail if the target language does not support formality. For a list of target languages that support formality, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-formality.html\">Setting formality</a>. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSShineFrontendService_20170701.TranslateDocument"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/TranslateDocumentRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "TranslateDocumentRequest": {
        "type": "object",
        "required": [
          "Document",
          "SourceLanguageCode",
          "TargetLanguageCode"
        ],
        "title": "TranslateDocumentRequest",
        "properties": {
          "Document": {
            "allOf": [
              {
                "$ref": "#/$defs/Document"
              },
              {
                "description": "The content and content type for the document to be translated. The document size must not exceed 100 KB."
              }
            ]
          },
          "TerminologyNames": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceNameList"
              },
              {
                "description": "<p>The name of a terminology list file to add to the translation job. This file provides source terms and the desired translation for each term. A terminology list can contain a maximum of 256 terms. You can use one custom terminology resource in your translation request.</p> <p>Use the <a>ListTerminologies</a> operation to get the available terminology lists.</p> <p>For more information about custom terminology lists, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/how-custom-terminology.html\">Custom terminology</a>.</p>"
              }
            ]
          },
          "SourceLanguageCode": {
            "allOf": [
              {
                "$ref": "#/$defs/LanguageCodeString"
              },
              {
                "description": "The language code for the language of the source text. Do not use <code>auto</code>, because <code>TranslateDocument</code> does not support language auto-detection. For a list of supported language codes, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html\">Supported languages</a>."
              }
            ]
          },
          "TargetLanguageCode": {
            "allOf": [
              {
                "$ref": "#/$defs/LanguageCodeString"
              },
              {
                "description": "The language code requested for the translated document. For a list of supported language codes, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html\">Supported languages</a>."
              }
            ]
          },
          "Settings": {
            "$ref": "#/$defs/TranslationSettings"
          }
        }
      },
      "Document": {
        "type": "object",
        "required": [
          "Content",
          "ContentType"
        ],
        "properties": {
          "Content": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentContent"
              },
              {
                "description": "The <code>Content</code>field type is Binary large object (blob). This object contains the document content converted into base64-encoded binary data. If you use one of the AWS SDKs, the SDK performs the Base64-encoding on this field before sending the request. "
              }
            ]
          },
          "ContentType": {
            "allOf": [
              {
                "$ref": "#/$defs/ContentType"
              },
              {
                "description": "<p>Describes the format of the document. You can specify one of the following:</p> <ul> <li> <p> <code>text/html</code> - The input data consists of HTML content. Amazon Translate translates only the text in the HTML element.</p> </li> <li> <p> <code>text/plain</code> - The input data consists of unformatted text. Amazon Translate translates every character in the content. </p> </li> <li> <p> <code>application/vnd.openxmlformats-officedocument.wordprocessingml.document</code> - The input data consists of a Word document (.docx).</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The content and content type of a document."
      },
      "DocumentContent": {
        "type": "string",
        "maxLength": 102400,
        "format": "password"
      },
      "ContentType": {
        "type": "string",
        "pattern": "^[-\\w.]+\\/[-\\w.+]+$",
        "maxLength": 256
      },
      "ResourceNameList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ResourceName"
        }
      },
      "ResourceName": {
        "type": "string",
        "pattern": "^([A-Za-z0-9-]_?)+$",
        "minLength": 1,
        "maxLength": 256
      },
      "LanguageCodeString": {
        "type": "string",
        "minLength": 2,
        "maxLength": 5
      },
      "TranslationSettings": {
        "type": "object",
        "properties": {
          "Formality": {
            "allOf": [
              {
                "$ref": "#/$defs/Formality"
              },
              {
                "description": "<p>You can optionally specify the desired level of formality for translations to supported target languages. The formality setting controls the level of formal language usage (also known as <a href=\"https://en.wikipedia.org/wiki/Register_(sociolinguistics)\">register</a>) in the translation output. You can set the value to informal or formal. If you don't specify a value for formality, or if the target language doesn't support formality, the translation will ignore the formality setting.</p> <p> If you specify multiple target languages for the job, translate ignores the formality setting for any unsupported target language.</p> <p>For a list of target languages that support formality, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-formality.html#customizing-translations-formality-languages\">Supported languages</a> in the Amazon Translate Developer Guide.</p>"
              }
            ]
          },
          "Profanity": {
            "allOf": [
              {
                "$ref": "#/$defs/Profanity"
              },
              {
                "description": "<p>Enable the profanity setting if you want Amazon Translate to mask profane words and phrases in your translation output.</p> <p>To mask profane words and phrases, Amazon Translate replaces them with the grawlix string “?$#@$“. This 5-character sequence is used for each profane word or phrase, regardless of the length or number of words.</p> <p>Amazon Translate doesn't detect profanity in all of its supported languages. For languages that don't support profanity detection, see <a href=\"https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-profanity.html#customizing-translations-profanity-languages\">Unsupported languages</a> in the Amazon Translate Developer Guide.</p> <p>If you specify multiple target languages for the job, all the target languages must support profanity masking. If any of the target languages don't support profanity masking, the translation job won't mask profanity for any target language.</p>"
              }
            ]
          }
        },
        "description": "Settings to configure your translation output, including the option to set the formality level of the output text and the option to mask profane words and phrases."
      },
      "Formality": {
        "type": "string",
        "enum": [
          "FORMAL",
          "INFORMAL"
        ]
      },
      "Profanity": {
        "type": "string",
        "enum": [
          "MASK"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://translate.us-east-1.amazonaws.com/#X-Amz-Target=AWSShineFrontendService_20170701.TranslateDocument"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**TranslatedDocument**",
            "**SourceLanguageCode**",
            "**TargetLanguageCode**",
            "**AppliedTerminologies**",
            [
              "**AppliedSettings**: Settings to configure your translation output, including the option to set the formality level of the output text and the option to mask profane words and phrases.",
              {
                "$ul": [
                  "**Formality**",
                  "**Profanity**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
