{
  "name": "CreateIdentityPool",
  "description": "<p>Creates a new identity pool. The identity pool is a store of user identity information that is specific to your AWS account. The keys for <code>SupportedLoginProviders</code> are as follows:</p> <ul> <li> <p>Facebook: <code>graph.facebook.com</code> </p> </li> <li> <p>Google: <code>accounts.google.com</code> </p> </li> <li> <p>Amazon: <code>www.amazon.com</code> </p> </li> <li> <p>Twitter: <code>api.twitter.com</code> </p> </li> <li> <p>Digits: <code>www.digits.com</code> </p> </li> </ul> <p>You must use AWS Developer credentials to call this API.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSCognitoIdentityService.CreateIdentityPool"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateIdentityPoolInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateIdentityPoolInput": {
        "type": "object",
        "required": [
          "IdentityPoolName",
          "AllowUnauthenticatedIdentities"
        ],
        "title": "CreateIdentityPoolInput",
        "properties": {
          "IdentityPoolName": {
            "allOf": [
              {
                "$ref": "#/$defs/IdentityPoolName"
              },
              {
                "description": "A string that you provide."
              }
            ]
          },
          "AllowUnauthenticatedIdentities": {
            "allOf": [
              {
                "$ref": "#/$defs/IdentityPoolUnauthenticated"
              },
              {
                "description": "TRUE if the identity pool supports unauthenticated logins."
              }
            ]
          },
          "AllowClassicFlow": {
            "allOf": [
              {
                "$ref": "#/$defs/ClassicFlow"
              },
              {
                "description": "Enables or disables the Basic (Classic) authentication flow. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Identity Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>."
              }
            ]
          },
          "SupportedLoginProviders": {
            "allOf": [
              {
                "$ref": "#/$defs/IdentityProviders"
              },
              {
                "description": "Optional key:value pairs mapping provider names to provider app IDs."
              }
            ]
          },
          "DeveloperProviderName": {
            "allOf": [
              {
                "$ref": "#/$defs/DeveloperProviderName"
              },
              {
                "description": "<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>"
              }
            ]
          },
          "OpenIdConnectProviderARNs": {
            "allOf": [
              {
                "$ref": "#/$defs/OIDCProviderList"
              },
              {
                "description": "The Amazon Resource Names (ARN) of the OpenID Connect providers."
              }
            ]
          },
          "CognitoIdentityProviders": {
            "allOf": [
              {
                "$ref": "#/$defs/CognitoIdentityProviderList"
              },
              {
                "description": "An array of Amazon Cognito user pools and their client IDs."
              }
            ]
          },
          "SamlProviderARNs": {
            "allOf": [
              {
                "$ref": "#/$defs/SAMLProviderList"
              },
              {
                "description": "An array of Amazon Resource Names (ARNs) of the SAML provider for your identity pool."
              }
            ]
          },
          "IdentityPoolTags": {
            "allOf": [
              {
                "$ref": "#/$defs/IdentityPoolTagsType"
              },
              {
                "description": "Tags to assign to the identity pool. A tag is a label that you can apply to identity pools to categorize and manage them in different ways, such as by purpose, owner, environment, or other criteria."
              }
            ]
          }
        },
        "description": "Input to the CreateIdentityPool action."
      },
      "IdentityPoolName": {
        "type": "string",
        "pattern": "[\\w\\s+=,.@-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "IdentityPoolUnauthenticated": {
        "type": "boolean"
      },
      "ClassicFlow": {
        "type": "boolean"
      },
      "IdentityProviders": {
        "type": "object",
        "maxProperties": 10,
        "additionalProperties": {
          "$ref": "#/$defs/IdentityProviderId"
        }
      },
      "IdentityProviderId": {
        "type": "string",
        "pattern": "[\\w.;_/-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "DeveloperProviderName": {
        "type": "string",
        "pattern": "[\\w._-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "OIDCProviderList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ARNString"
        }
      },
      "ARNString": {
        "type": "string",
        "minLength": 20,
        "maxLength": 2048
      },
      "CognitoIdentityProviderList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CognitoIdentityProvider"
        }
      },
      "CognitoIdentityProvider": {
        "type": "object",
        "properties": {
          "ProviderName": {
            "allOf": [
              {
                "$ref": "#/$defs/CognitoIdentityProviderName"
              },
              {
                "description": "The provider name for an Amazon Cognito user pool. For example, <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>."
              }
            ]
          },
          "ClientId": {
            "allOf": [
              {
                "$ref": "#/$defs/CognitoIdentityProviderClientId"
              },
              {
                "description": "The client ID for the Amazon Cognito user pool."
              }
            ]
          },
          "ServerSideTokenCheck": {
            "allOf": [
              {
                "$ref": "#/$defs/CognitoIdentityProviderTokenCheck"
              },
              {
                "description": "<p>TRUE if server-side token validation is enabled for the identity providerâ€™s token.</p> <p>Once you set <code>ServerSideTokenCheck</code> to TRUE for an identity pool, that identity pool will check with the integrated user pools to make sure that the user has not been globally signed out or deleted before the identity pool provides an OIDC token or AWS credentials for the user.</p> <p>If the user is signed out or deleted, the identity pool will return a 400 Not Authorized error.</p>"
              }
            ]
          }
        },
        "description": "A provider representing an Amazon Cognito user pool and its client ID."
      },
      "CognitoIdentityProviderName": {
        "type": "string",
        "pattern": "[\\w._:/-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "CognitoIdentityProviderClientId": {
        "type": "string",
        "pattern": "[\\w_]+",
        "minLength": 1,
        "maxLength": 128
      },
      "CognitoIdentityProviderTokenCheck": {
        "type": "boolean"
      },
      "SAMLProviderList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ARNString"
        }
      },
      "IdentityPoolTagsType": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/TagValueType"
        }
      },
      "TagValueType": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cognito-identity.us-east-1.amazonaws.com/#X-Amz-Target=AWSCognitoIdentityService.CreateIdentityPool"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "IdentityPool"
        },
        "An object representing an Amazon Cognito identity pool.",
        "**Key properties:**",
        {
          "$ul": [
            "**IdentityPoolId**",
            "**IdentityPoolName**",
            "**AllowUnauthenticatedIdentities**",
            "**AllowClassicFlow**",
            "**SupportedLoginProviders**",
            "**DeveloperProviderName**",
            "**OpenIdConnectProviderARNs**",
            "**CognitoIdentityProviders**",
            "**SamlProviderARNs**",
            "**IdentityPoolTags**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
