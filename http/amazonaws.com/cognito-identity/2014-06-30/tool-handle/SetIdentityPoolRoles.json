{
  "name": "SetIdentityPoolRoles",
  "description": "<p>Sets the roles for an identity pool. These roles are used when making calls to <a>GetCredentialsForIdentity</a> action.</p> <p>You must use AWS Developer credentials to call this API.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSCognitoIdentityService.SetIdentityPoolRoles"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/SetIdentityPoolRolesInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "SetIdentityPoolRolesInput": {
        "type": "object",
        "required": [
          "IdentityPoolId",
          "Roles"
        ],
        "title": "SetIdentityPoolRolesInput",
        "properties": {
          "IdentityPoolId": {
            "allOf": [
              {
                "$ref": "#/$defs/IdentityPoolId"
              },
              {
                "description": "An identity pool ID in the format REGION:GUID."
              }
            ]
          },
          "Roles": {
            "allOf": [
              {
                "$ref": "#/$defs/RolesMap"
              },
              {
                "description": "The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN."
              }
            ]
          },
          "RoleMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleMappingMap"
              },
              {
                "description": "<p>How users for a specific identity provider are to mapped to roles. This is a string to <a>RoleMapping</a> object map. The string identifies the identity provider, for example, \"graph.facebook.com\" or \"cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id\".</p> <p>Up to 25 rules can be specified per identity provider.</p>"
              }
            ]
          }
        },
        "description": "Input to the <code>SetIdentityPoolRoles</code> action."
      },
      "IdentityPoolId": {
        "type": "string",
        "pattern": "[\\w-]+:[0-9a-f-]+",
        "minLength": 1,
        "maxLength": 55
      },
      "RolesMap": {
        "type": "object",
        "maxProperties": 2,
        "additionalProperties": {
          "$ref": "#/$defs/ARNString"
        }
      },
      "ARNString": {
        "type": "string",
        "minLength": 20,
        "maxLength": 2048
      },
      "RoleMappingMap": {
        "type": "object",
        "maxProperties": 10,
        "additionalProperties": {
          "$ref": "#/$defs/RoleMapping"
        }
      },
      "RoleMapping": {
        "type": "object",
        "required": [
          "Type"
        ],
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleMappingType"
              },
              {
                "description": "The role mapping type. Token will use <code>cognito:roles</code> and <code>cognito:preferred_role</code> claims from the Cognito identity provider token to map groups to roles. Rules will attempt to match claims from the token to map to a role."
              }
            ]
          },
          "AmbiguousRoleResolution": {
            "allOf": [
              {
                "$ref": "#/$defs/AmbiguousRoleResolutionType"
              },
              {
                "description": "<p>If you specify Token or Rules as the <code>Type</code>, <code>AmbiguousRoleResolution</code> is required.</p> <p>Specifies the action to be taken if either no rules match the claim value for the <code>Rules</code> type, or there is no <code>cognito:preferred_role</code> claim and there are multiple <code>cognito:roles</code> matches for the <code>Token</code> type.</p>"
              }
            ]
          },
          "RulesConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/RulesConfigurationType"
              },
              {
                "description": "<p>The rules to be used for mapping users to roles.</p> <p>If you specify Rules as the role mapping type, <code>RulesConfiguration</code> is required.</p>"
              }
            ]
          }
        },
        "description": "A role mapping."
      },
      "RoleMappingType": {
        "type": "string",
        "enum": [
          "Token",
          "Rules"
        ]
      },
      "AmbiguousRoleResolutionType": {
        "type": "string",
        "enum": [
          "AuthenticatedRole",
          "Deny"
        ]
      },
      "RulesConfigurationType": {
        "type": "object",
        "required": [
          "Rules"
        ],
        "properties": {
          "Rules": {
            "allOf": [
              {
                "$ref": "#/$defs/MappingRulesList"
              },
              {
                "description": "<p>An array of rules. You can specify up to 25 rules per identity provider.</p> <p>Rules are evaluated in order. The first one to match specifies the role.</p>"
              }
            ]
          }
        },
        "description": "A container for rules."
      },
      "MappingRulesList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MappingRule"
        },
        "minItems": 1,
        "maxItems": 400
      },
      "MappingRule": {
        "type": "object",
        "required": [
          "Claim",
          "MatchType",
          "Value",
          "RoleARN"
        ],
        "properties": {
          "Claim": {
            "allOf": [
              {
                "$ref": "#/$defs/ClaimName"
              },
              {
                "description": "The claim name that must be present in the token, for example, \"isAdmin\" or \"paid\"."
              }
            ]
          },
          "MatchType": {
            "allOf": [
              {
                "$ref": "#/$defs/MappingRuleMatchType"
              },
              {
                "description": "The match condition that specifies how closely the claim value in the IdP token must match <code>Value</code>."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/ClaimValue"
              },
              {
                "description": "A brief string that the claim must match, for example, \"paid\" or \"yes\"."
              }
            ]
          },
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ARNString"
              },
              {
                "description": "The role ARN."
              }
            ]
          }
        },
        "description": "A rule that maps a claim name, a claim value, and a match type to a role ARN."
      },
      "ClaimName": {
        "type": "string",
        "pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+",
        "minLength": 1,
        "maxLength": 64
      },
      "MappingRuleMatchType": {
        "type": "string",
        "enum": [
          "Equals",
          "Contains",
          "StartsWith",
          "NotEqual"
        ]
      },
      "ClaimValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cognito-identity.us-east-1.amazonaws.com/#X-Amz-Target=AWSCognitoIdentityService.SetIdentityPoolRoles"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
