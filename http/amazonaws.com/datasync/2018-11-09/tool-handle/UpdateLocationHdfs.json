{
  "name": "UpdateLocationHdfs",
  "description": "Updates some parameters of a previously created location for a Hadoop Distributed File System cluster.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "FmrsService.UpdateLocationHdfs"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateLocationHdfsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateLocationHdfsRequest": {
        "type": "object",
        "required": [
          "LocationArn"
        ],
        "title": "UpdateLocationHdfsRequest",
        "properties": {
          "LocationArn": {
            "allOf": [
              {
                "$ref": "#/$defs/LocationArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the source HDFS cluster location."
              }
            ]
          },
          "Subdirectory": {
            "allOf": [
              {
                "$ref": "#/$defs/HdfsSubdirectory"
              },
              {
                "description": "A subdirectory in the HDFS cluster. This subdirectory is used to read data from or write data to the HDFS cluster."
              }
            ]
          },
          "NameNodes": {
            "allOf": [
              {
                "$ref": "#/$defs/HdfsNameNodeList"
              },
              {
                "description": "The NameNode that manages the HDFS namespace. The NameNode performs operations such as opening, closing, and renaming files and directories. The NameNode contains the information to map blocks of data to the DataNodes. You can use only one NameNode."
              }
            ]
          },
          "BlockSize": {
            "allOf": [
              {
                "$ref": "#/$defs/HdfsBlockSize"
              },
              {
                "description": "The size of the data blocks to write into the HDFS cluster. "
              }
            ]
          },
          "ReplicationFactor": {
            "allOf": [
              {
                "$ref": "#/$defs/HdfsReplicationFactor"
              },
              {
                "description": "The number of DataNodes to replicate the data to when writing to the HDFS cluster. "
              }
            ]
          },
          "KmsKeyProviderUri": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyProviderUri"
              },
              {
                "description": "The URI of the HDFS cluster's Key Management Server (KMS). "
              }
            ]
          },
          "QopConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/QopConfiguration"
              },
              {
                "description": "The Quality of Protection (QOP) configuration specifies the Remote Procedure Call (RPC) and data transfer privacy settings configured on the Hadoop Distributed File System (HDFS) cluster. "
              }
            ]
          },
          "AuthenticationType": {
            "allOf": [
              {
                "$ref": "#/$defs/HdfsAuthenticationType"
              },
              {
                "description": "The type of authentication used to determine the identity of the user. "
              }
            ]
          },
          "SimpleUser": {
            "allOf": [
              {
                "$ref": "#/$defs/HdfsUser"
              },
              {
                "description": "The user name used to identify the client on the host operating system."
              }
            ]
          },
          "KerberosPrincipal": {
            "allOf": [
              {
                "$ref": "#/$defs/KerberosPrincipal"
              },
              {
                "description": "The Kerberos principal with access to the files and folders on the HDFS cluster. "
              }
            ]
          },
          "KerberosKeytab": {
            "allOf": [
              {
                "$ref": "#/$defs/KerberosKeytabFile"
              },
              {
                "description": "The Kerberos key table (keytab) that contains mappings between the defined Kerberos principal and the encrypted keys. You can load the keytab from a file by providing the file's address. If you use the CLI, it performs base64 encoding for you. Otherwise, provide the base64-encoded text."
              }
            ]
          },
          "KerberosKrb5Conf": {
            "allOf": [
              {
                "$ref": "#/$defs/KerberosKrb5ConfFile"
              },
              {
                "description": "The <code>krb5.conf</code> file that contains the Kerberos configuration information. You can load the <code>krb5.conf</code> file by providing the file's address. If you're using the CLI, it performs the base64 encoding for you. Otherwise, provide the base64-encoded text."
              }
            ]
          },
          "AgentArns": {
            "allOf": [
              {
                "$ref": "#/$defs/AgentArnList"
              },
              {
                "description": "The ARNs of the agents that are used to connect to the HDFS cluster. "
              }
            ]
          }
        }
      },
      "LocationArn": {
        "type": "string",
        "pattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$",
        "maxLength": 128
      },
      "HdfsSubdirectory": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-\\+\\./\\(\\)\\$\\p{Zs}]+$",
        "maxLength": 4096
      },
      "HdfsNameNodeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/HdfsNameNode"
        },
        "minItems": 1
      },
      "HdfsNameNode": {
        "type": "object",
        "required": [
          "Hostname",
          "Port"
        ],
        "properties": {
          "Hostname": {
            "allOf": [
              {
                "$ref": "#/$defs/HdfsServerHostname"
              },
              {
                "description": "The hostname of the NameNode in the HDFS cluster. This value is the IP address or Domain Name Service (DNS) name of the NameNode. An agent that's installed on-premises uses this hostname to communicate with the NameNode in the network."
              }
            ]
          },
          "Port": {
            "allOf": [
              {
                "$ref": "#/$defs/HdfsServerPort"
              },
              {
                "description": "The port that the NameNode uses to listen to client requests."
              }
            ]
          }
        },
        "description": "The NameNode of the Hadoop Distributed File System (HDFS). The NameNode manages the file system's namespace. The NameNode performs operations such as opening, closing, and renaming files and directories. The NameNode contains the information to map blocks of data to the DataNodes."
      },
      "HdfsServerHostname": {
        "type": "string",
        "pattern": "^(([a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9\\-]*[A-Za-z0-9])$",
        "minLength": 1,
        "maxLength": 255
      },
      "HdfsServerPort": {
        "type": "integer",
        "minimum": 1,
        "maximum": 65536
      },
      "HdfsBlockSize": {
        "type": "integer",
        "minimum": 1048576,
        "maximum": 1073741824
      },
      "HdfsReplicationFactor": {
        "type": "integer",
        "minimum": 1,
        "maximum": 512
      },
      "KmsKeyProviderUri": {
        "type": "string",
        "pattern": "^kms:\\/\\/http[s]?@(([a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9\\-]*[A-Za-z0-9])(;(([a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9\\-]*[A-Za-z0-9]))*:[0-9]{1,5}\\/kms$",
        "minLength": 1,
        "maxLength": 255
      },
      "QopConfiguration": {
        "type": "object",
        "properties": {
          "RpcProtection": {
            "allOf": [
              {
                "$ref": "#/$defs/HdfsRpcProtection"
              },
              {
                "description": "The RPC protection setting configured on the HDFS cluster. This setting corresponds to your <code>hadoop.rpc.protection</code> setting in your <code>core-site.xml</code> file on your Hadoop cluster."
              }
            ]
          },
          "DataTransferProtection": {
            "allOf": [
              {
                "$ref": "#/$defs/HdfsDataTransferProtection"
              },
              {
                "description": "The data transfer protection setting configured on the HDFS cluster. This setting corresponds to your <code>dfs.data.transfer.protection</code> setting in the <code>hdfs-site.xml</code> file on your Hadoop cluster."
              }
            ]
          }
        },
        "description": "The Quality of Protection (QOP) configuration specifies the Remote Procedure Call (RPC) and data transfer privacy settings configured on the Hadoop Distributed File System (HDFS) cluster."
      },
      "HdfsRpcProtection": {
        "type": "string",
        "enum": [
          "DISABLED",
          "AUTHENTICATION",
          "INTEGRITY",
          "PRIVACY"
        ]
      },
      "HdfsDataTransferProtection": {
        "type": "string",
        "enum": [
          "DISABLED",
          "AUTHENTICATION",
          "INTEGRITY",
          "PRIVACY"
        ]
      },
      "HdfsAuthenticationType": {
        "type": "string",
        "enum": [
          "SIMPLE",
          "KERBEROS"
        ]
      },
      "HdfsUser": {
        "type": "string",
        "pattern": "^[_.A-Za-z0-9][-_.A-Za-z0-9]*$",
        "minLength": 1,
        "maxLength": 256
      },
      "KerberosPrincipal": {
        "type": "string",
        "pattern": "^.+$",
        "minLength": 1,
        "maxLength": 256
      },
      "KerberosKeytabFile": {
        "type": "string",
        "maxLength": 65536
      },
      "KerberosKrb5ConfFile": {
        "type": "string",
        "maxLength": 131072
      },
      "AgentArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AgentArn"
        },
        "minItems": 1,
        "maxItems": 4
      },
      "AgentArn": {
        "type": "string",
        "pattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$",
        "maxLength": 128
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://datasync.us-east-1.amazonaws.com/#X-Amz-Target=FmrsService.UpdateLocationHdfs"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
