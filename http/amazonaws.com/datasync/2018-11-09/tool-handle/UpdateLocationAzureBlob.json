{
  "name": "UpdateLocationAzureBlob",
  "description": "Modifies some configurations of the Microsoft Azure Blob Storage transfer location that you're using with DataSync.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "FmrsService.UpdateLocationAzureBlob"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateLocationAzureBlobRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateLocationAzureBlobRequest": {
        "type": "object",
        "required": [
          "LocationArn"
        ],
        "title": "UpdateLocationAzureBlobRequest",
        "properties": {
          "LocationArn": {
            "allOf": [
              {
                "$ref": "#/$defs/LocationArn"
              },
              {
                "description": "Specifies the ARN of the Azure Blob Storage transfer location that you're updating."
              }
            ]
          },
          "Subdirectory": {
            "allOf": [
              {
                "$ref": "#/$defs/AzureBlobSubdirectory"
              },
              {
                "description": "Specifies path segments if you want to limit your transfer to a virtual directory in your container (for example, <code>/my/images</code>)."
              }
            ]
          },
          "AuthenticationType": {
            "allOf": [
              {
                "$ref": "#/$defs/AzureBlobAuthenticationType"
              },
              {
                "description": "Specifies the authentication method DataSync uses to access your Azure Blob Storage. DataSync can access blob storage using a shared access signature (SAS)."
              }
            ]
          },
          "SasConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/AzureBlobSasConfiguration"
              },
              {
                "description": "Specifies the SAS configuration that allows DataSync to access your Azure Blob Storage."
              }
            ]
          },
          "BlobType": {
            "allOf": [
              {
                "$ref": "#/$defs/AzureBlobType"
              },
              {
                "description": "Specifies the type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Currently, DataSync only supports moving data into Azure Blob Storage as block blobs. For more information on blob types, see the <a href=\"https://learn.microsoft.com/en-us/rest/api/storageservices/understanding-block-blobs--append-blobs--and-page-blobs\">Azure Blob Storage documentation</a>."
              }
            ]
          },
          "AccessTier": {
            "allOf": [
              {
                "$ref": "#/$defs/AzureAccessTier"
              },
              {
                "description": "Specifies the access tier that you want your objects or files transferred into. This only applies when using the location as a transfer destination. For more information, see <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/creating-azure-blob-location.html#azure-blob-access-tiers\">Access tiers</a>."
              }
            ]
          },
          "AgentArns": {
            "allOf": [
              {
                "$ref": "#/$defs/AgentArnList"
              },
              {
                "description": "<p>Specifies the Amazon Resource Name (ARN) of the DataSync agent that can connect with your Azure Blob Storage container.</p> <p>You can specify more than one agent. For more information, see <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/multiple-agents.html\">Using multiple agents for your transfer</a>.</p>"
              }
            ]
          }
        }
      },
      "LocationArn": {
        "type": "string",
        "pattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$",
        "maxLength": 128
      },
      "AzureBlobSubdirectory": {
        "type": "string",
        "pattern": "^[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]*$",
        "maxLength": 1024
      },
      "AzureBlobAuthenticationType": {
        "type": "string",
        "enum": [
          "SAS"
        ]
      },
      "AzureBlobSasConfiguration": {
        "type": "object",
        "required": [
          "Token"
        ],
        "properties": {
          "Token": {
            "allOf": [
              {
                "$ref": "#/$defs/AzureBlobSasToken"
              },
              {
                "description": "<p>Specifies a SAS token that provides permissions at the Azure storage account, container, or folder level.</p> <p>The token is part of the SAS URI string that comes after the storage resource URI and a question mark. A token looks something like this:</p> <p> <code>sp=r&amp;st=2023-12-20T14:54:52Z&amp;se=2023-12-20T22:54:52Z&amp;spr=https&amp;sv=2021-06-08&amp;sr=c&amp;sig=aBBKDWQvyuVcTPH9EBp%2FXTI9E%2F%2Fmq171%2BZU178wcwqU%3D</code> </p>"
              }
            ]
          }
        },
        "description": "<p>The shared access signature (SAS) configuration that allows DataSync to access your Microsoft Azure Blob Storage.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/creating-azure-blob-location.html#azure-blob-sas-tokens\">SAS tokens</a> for accessing your Azure Blob Storage.</p>"
      },
      "AzureBlobSasToken": {
        "type": "string",
        "pattern": "^.+$",
        "minLength": 1,
        "maxLength": 255,
        "format": "password"
      },
      "AzureBlobType": {
        "type": "string",
        "enum": [
          "BLOCK"
        ]
      },
      "AzureAccessTier": {
        "type": "string",
        "enum": [
          "HOT",
          "COOL",
          "ARCHIVE"
        ]
      },
      "AgentArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AgentArn"
        },
        "minItems": 1,
        "maxItems": 4
      },
      "AgentArn": {
        "type": "string",
        "pattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$",
        "maxLength": 128
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://datasync.us-east-1.amazonaws.com/#X-Amz-Target=FmrsService.UpdateLocationAzureBlob"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
