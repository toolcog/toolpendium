{
  "name": "ListAnomaliesForInsight",
  "description": " Returns a list of the anomalies that belong to an insight that you specify using its ID. ",
  "parameters": {
    "type": "object",
    "properties": {
      "InsightId": {
        "type": "string",
        "pattern": "^[\\w-]*$",
        "minLength": 1,
        "maxLength": 100,
        "description": " The ID of the insight. The returned anomalies belong to this insight. "
      },
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "StartTimeRange": {
            "description": " A time range used to specify when the behavior of an insight or anomaly started. ",
            "type": "object",
            "properties": {
              "FromTime": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Timestamp"
                  },
                  {
                    "description": " The start time of the time range. "
                  }
                ]
              },
              "ToTime": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Timestamp"
                  },
                  {
                    "description": " The end time of the time range. "
                  }
                ]
              }
            }
          },
          "MaxResults": {
            "description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.",
            "type": "integer",
            "minimum": 1,
            "maximum": 500
          },
          "NextToken": {
            "description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "minLength": 36,
            "maxLength": 36
          },
          "AccountId": {
            "description": "The ID of the Amazon Web Services account. ",
            "type": "string",
            "pattern": "^\\d{12}$",
            "minLength": 12,
            "maxLength": 12
          },
          "Filters": {
            "description": " Specifies one or more service names that are used to list anomalies. ",
            "type": "object",
            "properties": {
              "ServiceCollection": {
                "$ref": "#/$defs/ServiceCollection"
              }
            }
          }
        }
      }
    },
    "required": [
      "InsightId",
      "body"
    ],
    "$defs": {
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "ServiceCollection": {
        "type": "object",
        "properties": {
          "ServiceNames": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceNames"
              },
              {
                "description": "An array of strings that each specifies the name of an Amazon Web Services service."
              }
            ]
          }
        },
        "description": "A collection of the names of Amazon Web Services services."
      },
      "ServiceNames": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ServiceName"
        }
      },
      "ServiceName": {
        "type": "string",
        "enum": [
          "API_GATEWAY",
          "APPLICATION_ELB",
          "AUTO_SCALING_GROUP",
          "CLOUD_FRONT",
          "DYNAMO_DB",
          "EC2",
          "ECS",
          "EKS",
          "ELASTIC_BEANSTALK",
          "ELASTI_CACHE",
          "ELB",
          "ES",
          "KINESIS",
          "LAMBDA",
          "NAT_GATEWAY",
          "NETWORK_ELB",
          "RDS",
          "REDSHIFT",
          "ROUTE_53",
          "S3",
          "SAGE_MAKER",
          "SNS",
          "SQS",
          "STEP_FUNCTIONS",
          "SWF"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://devops-guru.us-east-1.amazonaws.com/anomalies/insight/{InsightId}{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ProactiveAnomalies**",
            "**ReactiveAnomalies**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
