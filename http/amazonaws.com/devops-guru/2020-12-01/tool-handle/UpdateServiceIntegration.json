{
  "name": "UpdateServiceIntegration",
  "description": " Enables or disables integration with a service that can be integrated with DevOps Guru. The one service that can be integrated with DevOps Guru is Amazon Web Services Systems Manager, which can be used to create an OpsItem for each generated insight. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "ServiceIntegration"
        ],
        "properties": {
          "ServiceIntegration": {
            "description": " Information about updating the integration status of an Amazon Web Services service, such as Amazon Web Services Systems Manager, with DevOps Guru. ",
            "type": "object",
            "properties": {
              "OpsCenter": {
                "$ref": "#/$defs/OpsCenterIntegrationConfig"
              },
              "LogsAnomalyDetection": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LogsAnomalyDetectionIntegrationConfig"
                  },
                  {
                    "description": " Information about whether DevOps Guru is configured to perform log anomaly detection on Amazon CloudWatch log groups. "
                  }
                ]
              },
              "KMSServerSideEncryption": {
                "allOf": [
                  {
                    "$ref": "#/$defs/KMSServerSideEncryptionIntegrationConfig"
                  },
                  {
                    "description": " Information about whether DevOps Guru is configured to encrypt server-side data using KMS. "
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "OpsCenterIntegrationConfig": {
        "type": "object",
        "properties": {
          "OptInStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/OptInStatus"
              },
              {
                "description": " Specifies if DevOps Guru is enabled to create an Amazon Web Services Systems Manager OpsItem for each created insight. "
              }
            ]
          }
        },
        "description": " Information about whether DevOps Guru is configured to create an OpsItem in Amazon Web Services Systems Manager OpsCenter for each created insight. You can use this to update the configuration."
      },
      "OptInStatus": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ],
        "description": " Specifies if DevOps Guru is enabled to create an Amazon Web Services Systems Manager OpsItem for each created insight. "
      },
      "LogsAnomalyDetectionIntegrationConfig": {
        "type": "object",
        "properties": {
          "OptInStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/OptInStatus"
              },
              {
                "description": "Specifies if DevOps Guru is configured to perform log anomaly detection on CloudWatch log groups."
              }
            ]
          }
        },
        "description": " Information about the integration of DevOps Guru with CloudWatch log groups for log anomaly detection. You can use this to update the configuration. "
      },
      "KMSServerSideEncryptionIntegrationConfig": {
        "type": "object",
        "properties": {
          "KMSKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KMSKeyId"
              },
              {
                "description": "<p> Describes the specified KMS key.</p> <p>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using an alias name, prefix it with \"alias/\". If you specify a predefined Amazon Web Services alias (an Amazon Web Services alias with no key ID), Amazon Web Services KMS associates the alias with an Amazon Web Services managed key and returns its KeyId and Arn in the response. To specify a KMS key in a different Amazon Web Services account, you must use the key ARN or alias ARN.</p> <p>For example: </p> <p>Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab</p> <p>Key ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</p> <p>Alias name: alias/ExampleAlias</p> <p>Alias ARN: arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</p>"
              }
            ]
          },
          "OptInStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/OptInStatus"
              },
              {
                "description": " Specifies if DevOps Guru is enabled for KMS integration. "
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerSideEncryptionType"
              },
              {
                "description": " The type of KMS key used. Customer managed keys are the KMS keys that you create. Amazon Web Services owned keys are keys that are owned and managed by DevOps Guru. "
              }
            ]
          }
        },
        "description": " Information about whether DevOps Guru is configured to encrypt server-side data using KMS. "
      },
      "KMSKeyId": {
        "type": "string",
        "pattern": "^.*$",
        "minLength": 1,
        "maxLength": 2048
      },
      "ServerSideEncryptionType": {
        "type": "string",
        "enum": [
          "CUSTOMER_MANAGED_KEY",
          "AWS_OWNED_KMS_KEY"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://devops-guru.us-east-1.amazonaws.com/service-integrations"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
