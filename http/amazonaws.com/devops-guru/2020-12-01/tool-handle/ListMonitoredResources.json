{
  "name": "ListMonitoredResources",
  "description": " Returns the list of all log groups that are being monitored and tagged by DevOps Guru. ",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "Filters": {
            "description": " Filters to determine which monitored resources you want to retrieve. You can filter by resource type or resource permission status. ",
            "type": "object",
            "properties": {
              "ResourcePermission": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ResourcePermission"
                  },
                  {
                    "description": " The permission status of a resource. "
                  }
                ]
              },
              "ResourceTypeFilters": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ResourceTypeFilters"
                  },
                  {
                    "description": " The type of resource that you wish to retrieve, such as log groups. "
                  }
                ]
              }
            }
          },
          "MaxResults": {
            "description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.",
            "type": "integer",
            "minimum": 1,
            "maximum": 50
          },
          "NextToken": {
            "description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "minLength": 36,
            "maxLength": 36
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ResourcePermission": {
        "type": "string",
        "enum": [
          "FULL_PERMISSION",
          "MISSING_PERMISSION"
        ]
      },
      "ResourceTypeFilters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ResourceTypeFilter"
        }
      },
      "ResourceTypeFilter": {
        "type": "string",
        "enum": [
          "LOG_GROUPS",
          "CLOUDFRONT_DISTRIBUTION",
          "DYNAMODB_TABLE",
          "EC2_NAT_GATEWAY",
          "ECS_CLUSTER",
          "ECS_SERVICE",
          "EKS_CLUSTER",
          "ELASTIC_BEANSTALK_ENVIRONMENT",
          "ELASTIC_LOAD_BALANCER_LOAD_BALANCER",
          "ELASTIC_LOAD_BALANCING_V2_LOAD_BALANCER",
          "ELASTIC_LOAD_BALANCING_V2_TARGET_GROUP",
          "ELASTICACHE_CACHE_CLUSTER",
          "ELASTICSEARCH_DOMAIN",
          "KINESIS_STREAM",
          "LAMBDA_FUNCTION",
          "OPEN_SEARCH_SERVICE_DOMAIN",
          "RDS_DB_INSTANCE",
          "RDS_DB_CLUSTER",
          "REDSHIFT_CLUSTER",
          "ROUTE53_HOSTED_ZONE",
          "ROUTE53_HEALTH_CHECK",
          "S3_BUCKET",
          "SAGEMAKER_ENDPOINT",
          "SNS_TOPIC",
          "SQS_QUEUE",
          "STEP_FUNCTIONS_ACTIVITY",
          "STEP_FUNCTIONS_STATE_MACHINE"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://devops-guru.us-east-1.amazonaws.com/monitoredResources{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**MonitoredResourceIdentifiers**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
