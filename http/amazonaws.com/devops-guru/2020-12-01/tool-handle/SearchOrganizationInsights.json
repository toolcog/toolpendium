{
  "name": "SearchOrganizationInsights",
  "description": "<p> Returns a list of insights in your organization. You can specify which insights are returned by their start time, one or more statuses (<code>ONGOING</code>, <code>CLOSED</code>, and <code>CLOSED</code>), one or more severities (<code>LOW</code>, <code>MEDIUM</code>, and <code>HIGH</code>), and type (<code>REACTIVE</code> or <code>PROACTIVE</code>). </p> <p> Use the <code>Filters</code> parameter to specify status and severity search parameters. Use the <code>Type</code> parameter to specify <code>REACTIVE</code> or <code>PROACTIVE</code> in your search. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "AccountIds",
          "StartTimeRange",
          "Type"
        ],
        "properties": {
          "AccountIds": {
            "description": "The ID of the Amazon Web Services account. ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AwsAccountId"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "StartTimeRange": {
            "description": " A time range used to specify when the behavior of an insight or anomaly started. ",
            "type": "object",
            "properties": {
              "FromTime": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Timestamp"
                  },
                  {
                    "description": " The start time of the time range. "
                  }
                ]
              },
              "ToTime": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Timestamp"
                  },
                  {
                    "description": " The end time of the time range. "
                  }
                ]
              }
            }
          },
          "Filters": {
            "description": " Filters you can use to specify which events are returned when <code>ListEvents</code> is called. ",
            "type": "object",
            "properties": {
              "Severities": {
                "allOf": [
                  {
                    "$ref": "#/$defs/InsightSeverities"
                  },
                  {
                    "description": " An array of severity values used to search for insights. "
                  }
                ]
              },
              "Statuses": {
                "allOf": [
                  {
                    "$ref": "#/$defs/InsightStatuses"
                  },
                  {
                    "description": " An array of status values used to search for insights. "
                  }
                ]
              },
              "ResourceCollection": {
                "$ref": "#/$defs/ResourceCollection"
              },
              "ServiceCollection": {
                "$ref": "#/$defs/ServiceCollection"
              }
            }
          },
          "MaxResults": {
            "description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.",
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "NextToken": {
            "description": "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.",
            "type": "string",
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "minLength": 36,
            "maxLength": 36
          },
          "Type": {
            "description": " The type of insights you are searching for (<code>REACTIVE</code> or <code>PROACTIVE</code>). ",
            "type": "string",
            "enum": [
              "REACTIVE",
              "PROACTIVE"
            ]
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "AwsAccountId": {
        "type": "string",
        "pattern": "^\\d{12}$",
        "minLength": 12,
        "maxLength": 12
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "InsightSeverities": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InsightSeverity"
        },
        "minItems": 0,
        "maxItems": 3
      },
      "InsightSeverity": {
        "type": "string",
        "enum": [
          "LOW",
          "MEDIUM",
          "HIGH"
        ]
      },
      "InsightStatuses": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InsightStatus"
        },
        "minItems": 0,
        "maxItems": 2
      },
      "InsightStatus": {
        "type": "string",
        "enum": [
          "ONGOING",
          "CLOSED"
        ]
      },
      "ResourceCollection": {
        "type": "object",
        "properties": {
          "CloudFormation": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudFormationCollection"
              },
              {
                "description": " An array of the names of Amazon Web Services CloudFormation stacks. The stacks define Amazon Web Services resources that DevOps Guru analyzes. You can specify up to 500 Amazon Web Services CloudFormation stacks. "
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagCollections"
              },
              {
                "description": "<p>The Amazon Web Services tags that are used by resources in the resource collection.</p> <p>Tags help you identify and organize your Amazon Web Services resources. Many Amazon Web Services services support tagging, so you can assign the same tag to resources from different services to indicate that the resources are related. For example, you can assign the same tag to an Amazon DynamoDB table resource that you assign to an Lambda function. For more information about using tags, see the <a href=\"https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html\">Tagging best practices</a> whitepaper. </p> <p>Each Amazon Web Services tag has two parts. </p> <ul> <li> <p>A tag <i>key</i> (for example, <code>CostCenter</code>, <code>Environment</code>, <code>Project</code>, or <code>Secret</code>). Tag <i>keys</i> are case-sensitive.</p> </li> <li> <p>An optional field known as a tag <i>value</i> (for example, <code>111122223333</code>, <code>Production</code>, or a team name). Omitting the tag <i>value</i> is the same as using an empty string. Like tag <i>keys</i>, tag <i>values</i> are case-sensitive.</p> </li> </ul> <p>Together these are known as <i>key</i>-<i>value</i> pairs.</p> <important> <p>The string used for a <i>key</i> in a tag that you use to define your resource coverage must begin with the prefix <code>Devops-guru-</code>. The tag <i>key</i> might be <code>DevOps-Guru-deployment-application</code> or <code>devops-guru-rds-application</code>. When you create a <i>key</i>, the case of characters in the <i>key</i> can be whatever you choose. After you create a <i>key</i>, it is case-sensitive. For example, DevOps Guru works with a <i>key</i> named <code>devops-guru-rds</code> and a <i>key</i> named <code>DevOps-Guru-RDS</code>, and these act as two different <i>keys</i>. Possible <i>key</i>/<i>value</i> pairs in your application might be <code>Devops-Guru-production-application/RDS</code> or <code>Devops-Guru-production-application/containers</code>.</p> </important>"
              }
            ]
          }
        },
        "description": " A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. "
      },
      "CloudFormationCollection": {
        "type": "object",
        "properties": {
          "StackNames": {
            "allOf": [
              {
                "$ref": "#/$defs/StackNames"
              },
              {
                "description": " An array of CloudFormation stack names. "
              }
            ]
          }
        },
        "description": " Information about Amazon Web Services CloudFormation stacks. You can use up to 500 stacks to specify which Amazon Web Services resources in your account to analyze. For more information, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html\">Stacks</a> in the <i>Amazon Web Services CloudFormation User Guide</i>. "
      },
      "StackNames": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StackName"
        }
      },
      "StackName": {
        "type": "string",
        "pattern": "^[a-zA-Z*]+[a-zA-Z0-9-]*$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagCollections": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TagCollection"
        }
      },
      "TagCollection": {
        "type": "object",
        "required": [
          "AppBoundaryKey",
          "TagValues"
        ],
        "properties": {
          "AppBoundaryKey": {
            "allOf": [
              {
                "$ref": "#/$defs/AppBoundaryKey"
              },
              {
                "description": "<p>An Amazon Web Services tag <i>key</i> that is used to identify the Amazon Web Services resources that DevOps Guru analyzes. All Amazon Web Services resources in your account and Region tagged with this <i>key</i> make up your DevOps Guru application and analysis boundary.</p> <important> <p>The string used for a <i>key</i> in a tag that you use to define your resource coverage must begin with the prefix <code>Devops-guru-</code>. The tag <i>key</i> might be <code>DevOps-Guru-deployment-application</code> or <code>devops-guru-rds-application</code>. When you create a <i>key</i>, the case of characters in the <i>key</i> can be whatever you choose. After you create a <i>key</i>, it is case-sensitive. For example, DevOps Guru works with a <i>key</i> named <code>devops-guru-rds</code> and a <i>key</i> named <code>DevOps-Guru-RDS</code>, and these act as two different <i>keys</i>. Possible <i>key</i>/<i>value</i> pairs in your application might be <code>Devops-Guru-production-application/RDS</code> or <code>Devops-Guru-production-application/containers</code>.</p> </important>"
              }
            ]
          },
          "TagValues": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValues"
              },
              {
                "description": "<p>The values in an Amazon Web Services tag collection.</p> <p>The tag's <i>value</i> is an optional field used to associate a string with the tag <i>key</i> (for example, <code>111122223333</code>, <code>Production</code>, or a team name). The <i>key</i> and <i>value</i> are the tag's <i>key</i> pair. Omitting the tag <i>value</i> is the same as using an empty string. Like tag <i>keys</i>, tag <i>values</i> are case-sensitive. You can specify a maximum of 256 characters for a tag value.</p>"
              }
            ]
          }
        },
        "description": "<p>A collection of Amazon Web Services tags.</p> <p>Tags help you identify and organize your Amazon Web Services resources. Many Amazon Web Services services support tagging, so you can assign the same tag to resources from different services to indicate that the resources are related. For example, you can assign the same tag to an Amazon DynamoDB table resource that you assign to an Lambda function. For more information about using tags, see the <a href=\"https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html\">Tagging best practices</a> whitepaper. </p> <p>Each Amazon Web Services tag has two parts. </p> <ul> <li> <p>A tag <i>key</i> (for example, <code>CostCenter</code>, <code>Environment</code>, <code>Project</code>, or <code>Secret</code>). Tag <i>keys</i> are case-sensitive.</p> </li> <li> <p>An optional field known as a tag <i>value</i> (for example, <code>111122223333</code>, <code>Production</code>, or a team name). Omitting the tag <i>value</i> is the same as using an empty string. Like tag <i>keys</i>, tag <i>values</i> are case-sensitive.</p> </li> </ul> <p>Together these are known as <i>key</i>-<i>value</i> pairs.</p> <important> <p>The string used for a <i>key</i> in a tag that you use to define your resource coverage must begin with the prefix <code>Devops-guru-</code>. The tag <i>key</i> might be <code>DevOps-Guru-deployment-application</code> or <code>devops-guru-rds-application</code>. When you create a <i>key</i>, the case of characters in the <i>key</i> can be whatever you choose. After you create a <i>key</i>, it is case-sensitive. For example, DevOps Guru works with a <i>key</i> named <code>devops-guru-rds</code> and a <i>key</i> named <code>DevOps-Guru-RDS</code>, and these act as two different <i>keys</i>. Possible <i>key</i>/<i>value</i> pairs in your application might be <code>Devops-Guru-production-application/RDS</code> or <code>Devops-Guru-production-application/containers</code>.</p> </important>"
      },
      "AppBoundaryKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TagValue"
        }
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*|\\*)$",
        "minLength": 0,
        "maxLength": 256
      },
      "ServiceCollection": {
        "type": "object",
        "properties": {
          "ServiceNames": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceNames"
              },
              {
                "description": "An array of strings that each specifies the name of an Amazon Web Services service."
              }
            ]
          }
        },
        "description": "A collection of the names of Amazon Web Services services."
      },
      "ServiceNames": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ServiceName"
        }
      },
      "ServiceName": {
        "type": "string",
        "enum": [
          "API_GATEWAY",
          "APPLICATION_ELB",
          "AUTO_SCALING_GROUP",
          "CLOUD_FRONT",
          "DYNAMO_DB",
          "EC2",
          "ECS",
          "EKS",
          "ELASTIC_BEANSTALK",
          "ELASTI_CACHE",
          "ELB",
          "ES",
          "KINESIS",
          "LAMBDA",
          "NAT_GATEWAY",
          "NETWORK_ELB",
          "RDS",
          "REDSHIFT",
          "ROUTE_53",
          "S3",
          "SAGE_MAKER",
          "SNS",
          "SQS",
          "STEP_FUNCTIONS",
          "SWF"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://devops-guru.us-east-1.amazonaws.com/organization/insights/search{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ProactiveInsights**",
            "**ReactiveInsights**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
