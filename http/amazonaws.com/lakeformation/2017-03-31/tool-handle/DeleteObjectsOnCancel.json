{
  "name": "DeleteObjectsOnCancel",
  "description": "<p>For a specific governed table, provides a list of Amazon S3 objects that will be written during the current transaction and that can be automatically deleted if the transaction is canceled. Without this call, no Amazon S3 objects are automatically deleted when a transaction cancels. </p> <p> The Glue ETL library function <code>write_dynamic_frame.from_catalog()</code> includes an option to automatically call <code>DeleteObjectsOnCancel</code> before writes. For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/transactions-data-operations.html#rolling-back-writes\">Rolling Back Amazon S3 Writes</a>. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "DatabaseName",
          "TableName",
          "TransactionId",
          "Objects"
        ],
        "properties": {
          "CatalogId": {
            "description": "The Glue data catalog that contains the governed table. Defaults to the current account ID.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
          },
          "DatabaseName": {
            "description": "The database that contains the governed table.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
          },
          "TableName": {
            "description": "The name of the governed table.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
          },
          "TransactionId": {
            "description": "ID of the transaction that the writes occur in.",
            "type": "string",
            "pattern": "[\\p{L}\\p{N}\\p{P}]*",
            "minLength": 1,
            "maxLength": 255
          },
          "Objects": {
            "description": "A list of VirtualObject structures, which indicates the Amazon S3 objects to be deleted if the transaction cancels.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/VirtualObject"
            },
            "minItems": 1,
            "maxItems": 100
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "VirtualObject": {
        "type": "object",
        "required": [
          "Uri"
        ],
        "properties": {
          "Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/URI"
              },
              {
                "description": "The path to the Amazon S3 object. Must start with s3://"
              }
            ]
          },
          "ETag": {
            "allOf": [
              {
                "$ref": "#/$defs/ETagString"
              },
              {
                "description": "The ETag of the Amazon S3 object."
              }
            ]
          }
        },
        "description": "An object that defines an Amazon S3 object to be deleted if a transaction cancels, provided that <code>VirtualPut</code> was called before writing the object."
      },
      "URI": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "ETagString": {
        "type": "string",
        "pattern": "[\\p{L}\\p{N}\\p{P}]*",
        "minLength": 1,
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lakeformation.us-east-1.amazonaws.com/DeleteObjectsOnCancel"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
