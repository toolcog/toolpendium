{
  "name": "StartQueryPlanning",
  "description": "<p>Submits a request to process a query statement.</p> <p>This operation generates work units that can be retrieved with the <code>GetWorkUnits</code> operation as soon as the query state is WORKUNITS_AVAILABLE or FINISHED.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "QueryPlanningContext",
          "QueryString"
        ],
        "properties": {
          "QueryPlanningContext": {
            "description": "A structure containing information about the query plan.",
            "type": "object",
            "properties": {
              "CatalogId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CatalogIdString"
                  },
                  {
                    "description": "The ID of the Data Catalog where the partition in question resides. If none is provided, the Amazon Web Services account ID is used by default."
                  }
                ]
              },
              "DatabaseName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/QueryPlanningContextDatabaseNameString"
                  },
                  {
                    "description": "The database containing the table."
                  }
                ]
              },
              "QueryAsOfTime": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Timestamp"
                  },
                  {
                    "description": "The time as of when to read the table contents. If not set, the most recent transaction commit time will be used. Cannot be specified along with <code>TransactionId</code>."
                  }
                ]
              },
              "QueryParameters": {
                "allOf": [
                  {
                    "$ref": "#/$defs/QueryParameterMap"
                  },
                  {
                    "description": "A map consisting of key-value pairs."
                  }
                ]
              },
              "TransactionId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TransactionIdString"
                  },
                  {
                    "description": "The transaction ID at which to read the table contents. If this transaction is not committed, the read will be treated as part of that transaction and will see its writes. If this transaction has aborted, an error will be returned. If not set, defaults to the most recent committed transaction. Cannot be specified along with <code>QueryAsOfTime</code>."
                  }
                ]
              }
            }
          },
          "QueryString": {
            "description": "A PartiQL query statement used as an input to the planner service.",
            "type": "string",
            "minLength": 1,
            "format": "password"
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "CatalogIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "QueryPlanningContextDatabaseNameString": {
        "type": "string",
        "minLength": 1,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "QueryParameterMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/String"
        }
      },
      "String": {
        "type": "string"
      },
      "TransactionIdString": {
        "type": "string",
        "pattern": "[\\p{L}\\p{N}\\p{P}]*",
        "minLength": 1,
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lakeformation.us-east-1.amazonaws.com/StartQueryPlanning"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A structure for the output.",
        "**Key properties:**",
        {
          "$ul": [
            "**QueryId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
