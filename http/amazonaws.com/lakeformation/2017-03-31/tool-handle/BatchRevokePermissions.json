{
  "name": "BatchRevokePermissions",
  "description": "Batch operation to revoke permissions from the principal.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Entries"
        ],
        "properties": {
          "CatalogId": {
            "description": "The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. ",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
          },
          "Entries": {
            "description": "A list of up to 20 entries for resource permissions to be revoked by batch operation to the principal.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/BatchPermissionsRequestEntry"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "BatchPermissionsRequestEntry": {
        "type": "object",
        "required": [
          "Id"
        ],
        "properties": {
          "Id": {
            "allOf": [
              {
                "$ref": "#/$defs/Identifier"
              },
              {
                "description": "A unique identifier for the batch permissions request entry."
              }
            ]
          },
          "Principal": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLakePrincipal"
              },
              {
                "description": "The principal to be granted a permission."
              }
            ]
          },
          "Resource": {
            "allOf": [
              {
                "$ref": "#/$defs/Resource"
              },
              {
                "description": "The resource to which the principal is to be granted a permission."
              }
            ]
          },
          "Permissions": {
            "allOf": [
              {
                "$ref": "#/$defs/PermissionList"
              },
              {
                "description": "The permissions to be granted."
              }
            ]
          },
          "PermissionsWithGrantOption": {
            "allOf": [
              {
                "$ref": "#/$defs/PermissionList"
              },
              {
                "description": "Indicates if the option to pass permissions is granted."
              }
            ]
          }
        },
        "description": "A permission to a resource granted by batch operation to the principal."
      },
      "Identifier": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "DataLakePrincipal": {
        "type": "object",
        "properties": {
          "DataLakePrincipalIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLakePrincipalString"
              },
              {
                "description": "An identifier for the Lake Formation principal."
              }
            ]
          }
        },
        "description": "The Lake Formation principal. Supported principals are IAM users or IAM roles."
      },
      "DataLakePrincipalString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "Resource": {
        "type": "object",
        "properties": {
          "Catalog": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogResource"
              },
              {
                "description": "The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. "
              }
            ]
          },
          "Database": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseResource"
              },
              {
                "description": "The database for the resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database permissions to a principal. "
              }
            ]
          },
          "Table": {
            "allOf": [
              {
                "$ref": "#/$defs/TableResource"
              },
              {
                "description": "The table for the resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. "
              }
            ]
          },
          "TableWithColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/TableWithColumnsResource"
              },
              {
                "description": "The table with columns for the resource. A principal with permissions to this resource can select metadata from the columns of a table in the Data Catalog and the underlying data in Amazon S3."
              }
            ]
          },
          "DataLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLocationResource"
              },
              {
                "description": "The location of an Amazon S3 path where permissions are granted or revoked. "
              }
            ]
          },
          "DataCellsFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/DataCellsFilterResource"
              },
              {
                "description": "A data cell filter."
              }
            ]
          },
          "LFTag": {
            "allOf": [
              {
                "$ref": "#/$defs/LFTagKeyResource"
              },
              {
                "description": "The LF-tag key and values attached to a resource."
              }
            ]
          },
          "LFTagPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/LFTagPolicyResource"
              },
              {
                "description": "A list of LF-tag conditions that define a resource's LF-tag policy."
              }
            ]
          }
        },
        "description": "A structure for the resource."
      },
      "CatalogResource": {
        "type": "object",
        "properties": {},
        "description": "A structure for the catalog object."
      },
      "DatabaseResource": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogIdString"
              },
              {
                "description": "The identifier for the Data Catalog. By default, it is the account ID of the caller."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the database resource. Unique to the Data Catalog."
              }
            ]
          }
        },
        "description": "A structure for the database object."
      },
      "CatalogIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "TableResource": {
        "type": "object",
        "required": [
          "DatabaseName"
        ],
        "properties": {
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogIdString"
              },
              {
                "description": "The identifier for the Data Catalog. By default, it is the account ID of the caller."
              }
            ]
          },
          "DatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the database for the table. Unique to a Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database privileges to a principal. "
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the table."
              }
            ]
          },
          "TableWildcard": {
            "allOf": [
              {
                "$ref": "#/$defs/TableWildcard"
              },
              {
                "description": "<p>A wildcard object representing every table under a database.</p> <p>At least one of <code>TableResource$Name</code> or <code>TableResource$TableWildcard</code> is required.</p>"
              }
            ]
          }
        },
        "description": "A structure for the table object. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. "
      },
      "TableWildcard": {
        "type": "object",
        "properties": {},
        "description": "A wildcard object representing every table under a database."
      },
      "TableWithColumnsResource": {
        "type": "object",
        "required": [
          "DatabaseName",
          "Name"
        ],
        "properties": {
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogIdString"
              },
              {
                "description": "The identifier for the Data Catalog. By default, it is the account ID of the caller."
              }
            ]
          },
          "DatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the database for the table with columns resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database privileges to a principal. "
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the table resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. "
              }
            ]
          },
          "ColumnNames": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnNames"
              },
              {
                "description": "The list of column names for the table. At least one of <code>ColumnNames</code> or <code>ColumnWildcard</code> is required."
              }
            ]
          },
          "ColumnWildcard": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnWildcard"
              },
              {
                "description": "A wildcard specified by a <code>ColumnWildcard</code> object. At least one of <code>ColumnNames</code> or <code>ColumnWildcard</code> is required."
              }
            ]
          }
        },
        "description": "<p>A structure for a table with columns object. This object is only used when granting a SELECT permission.</p> <p>This object must take a value for at least one of <code>ColumnsNames</code>, <code>ColumnsIndexes</code>, or <code>ColumnsWildcard</code>.</p>"
      },
      "ColumnNames": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NameString"
        }
      },
      "ColumnWildcard": {
        "type": "object",
        "properties": {
          "ExcludedColumnNames": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnNames"
              },
              {
                "description": "Excludes column names. Any column with this name will be excluded."
              }
            ]
          }
        },
        "description": "A wildcard object, consisting of an optional list of excluded column names or indexes."
      },
      "DataLocationResource": {
        "type": "object",
        "required": [
          "ResourceArn"
        ],
        "properties": {
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogIdString"
              },
              {
                "description": "The identifier for the Data Catalog where the location is registered with Lake Formation. By default, it is the account ID of the caller."
              }
            ]
          },
          "ResourceArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceArnString"
              },
              {
                "description": "The Amazon Resource Name (ARN) that uniquely identifies the data location resource."
              }
            ]
          }
        },
        "description": "A structure for a data location object where permissions are granted or revoked. "
      },
      "ResourceArnString": {
        "type": "string"
      },
      "DataCellsFilterResource": {
        "type": "object",
        "properties": {
          "TableCatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogIdString"
              },
              {
                "description": "The ID of the catalog to which the table belongs."
              }
            ]
          },
          "DatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "A database in the Glue Data Catalog."
              }
            ]
          },
          "TableName": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the table."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The name of the data cells filter. "
              }
            ]
          }
        },
        "description": "A structure for a data cells filter resource. "
      },
      "LFTagKeyResource": {
        "type": "object",
        "required": [
          "TagKey",
          "TagValues"
        ],
        "properties": {
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogIdString"
              },
              {
                "description": "The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. "
              }
            ]
          },
          "TagKey": {
            "allOf": [
              {
                "$ref": "#/$defs/NameString"
              },
              {
                "description": "The key-name for the LF-tag."
              }
            ]
          },
          "TagValues": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValueList"
              },
              {
                "description": "A list of possible values an attribute can take."
              }
            ]
          }
        },
        "description": "A structure containing an LF-tag key and values for a resource."
      },
      "TagValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LFTagValue"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "LFTagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:\\*\\/=+\\-@%]*)$",
        "minLength": 0,
        "maxLength": 256
      },
      "LFTagPolicyResource": {
        "type": "object",
        "required": [
          "ResourceType",
          "Expression"
        ],
        "properties": {
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogIdString"
              },
              {
                "description": "The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. "
              }
            ]
          },
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceType"
              },
              {
                "description": "The resource type for which the LF-tag policy applies."
              }
            ]
          },
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "A list of LF-tag conditions that apply to the resource's LF-tag policy."
              }
            ]
          }
        },
        "description": "A structure containing a list of LF-tag conditions that apply to a resource's LF-tag policy."
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "DATABASE",
          "TABLE"
        ]
      },
      "Expression": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LFTag"
        }
      },
      "LFTag": {
        "type": "object",
        "required": [
          "TagKey",
          "TagValues"
        ],
        "properties": {
          "TagKey": {
            "allOf": [
              {
                "$ref": "#/$defs/LFTagKey"
              },
              {
                "description": "The key-name for the LF-tag."
              }
            ]
          },
          "TagValues": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValueList"
              },
              {
                "description": "A list of possible values an attribute can take."
              }
            ]
          }
        },
        "description": "A structure that allows an admin to grant user permissions on certain conditions. For example, granting a role access to all columns that do not have the LF-tag 'PII' in tables that have the LF-tag 'Prod'."
      },
      "LFTagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "PermissionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Permission"
        }
      },
      "Permission": {
        "type": "string",
        "enum": [
          "ALL",
          "SELECT",
          "ALTER",
          "DROP",
          "DELETE",
          "INSERT",
          "DESCRIBE",
          "CREATE_DATABASE",
          "CREATE_TABLE",
          "DATA_LOCATION_ACCESS",
          "CREATE_LF_TAG",
          "ASSOCIATE",
          "GRANT_WITH_LF_TAG_EXPRESSION"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lakeformation.us-east-1.amazonaws.com/BatchRevokePermissions"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Failures**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
