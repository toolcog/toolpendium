{
  "name": "GetTemporaryGluePartitionCredentials",
  "description": "This API is identical to <code>GetTemporaryTableCredentials</code> except that this is used when the target Data Catalog resource is of type Partition. Lake Formation restricts the permission of the vended credentials with the same scope down policy which restricts access to a single Amazon S3 prefix.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "TableArn",
          "Partition"
        ],
        "properties": {
          "TableArn": {
            "description": "The ARN of the partitions' table.",
            "type": "string"
          },
          "Partition": {
            "description": "Contains a list of values defining partitions.",
            "type": "object",
            "properties": {
              "Values": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ValueStringList"
                  },
                  {
                    "description": "The list of partition values."
                  }
                ]
              }
            }
          },
          "Permissions": {
            "description": "Filters the request based on the user having been granted a list of specified permissions on the requested resource(s).",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Permission"
            }
          },
          "DurationSeconds": {
            "description": "The time period, between 900 and 21,600 seconds, for the timeout of the temporary credentials.",
            "type": "integer",
            "minimum": 900,
            "maximum": 43200
          },
          "AuditContext": {
            "description": "A structure used to include auditing information on the privileged API. ",
            "type": "object",
            "properties": {
              "AdditionalAuditContext": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AuditContextString"
                  },
                  {
                    "description": "The filter engine can populate the 'AdditionalAuditContext' information with the request ID for you to track. This information will be displayed in CloudTrail log in your account."
                  }
                ]
              }
            }
          },
          "SupportedPermissionTypes": {
            "description": "A list of supported permission types for the partition. Valid values are <code>COLUMN_PERMISSION</code> and <code>CELL_FILTER_PERMISSION</code>.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/PermissionType"
            },
            "minItems": 1,
            "maxItems": 255
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ValueStringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ValueString"
        },
        "minItems": 1
      },
      "ValueString": {
        "type": "string"
      },
      "Permission": {
        "type": "string",
        "enum": [
          "ALL",
          "SELECT",
          "ALTER",
          "DROP",
          "DELETE",
          "INSERT",
          "DESCRIBE",
          "CREATE_DATABASE",
          "CREATE_TABLE",
          "DATA_LOCATION_ACCESS",
          "CREATE_LF_TAG",
          "ASSOCIATE",
          "GRANT_WITH_LF_TAG_EXPRESSION"
        ]
      },
      "AuditContextString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 2048,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "PermissionType": {
        "type": "string",
        "enum": [
          "COLUMN_PERMISSION",
          "CELL_FILTER_PERMISSION",
          "NESTED_PERMISSION",
          "NESTED_CELL_PERMISSION"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lakeformation.us-east-1.amazonaws.com/GetTemporaryGluePartitionCredentials"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AccessKeyId**",
            "**SecretAccessKey**",
            "**SessionToken**",
            "**Expiration**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
