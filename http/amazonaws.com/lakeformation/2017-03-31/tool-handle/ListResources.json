{
  "name": "ListResources",
  "description": "Lists the resources registered to be managed by the Data Catalog.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "FilterConditionList": {
            "description": "Any applicable row-level and/or column-level filtering conditions for the resources.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/FilterCondition"
            },
            "minItems": 1,
            "maxItems": 20
          },
          "MaxResults": {
            "description": "The maximum number of resource results.",
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          "NextToken": {
            "description": "A continuation token, if this is not the first call to retrieve these resources.",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "FilterCondition": {
        "type": "object",
        "properties": {
          "Field": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldNameString"
              },
              {
                "description": "The field to filter in the filter condition."
              }
            ]
          },
          "ComparisonOperator": {
            "allOf": [
              {
                "$ref": "#/$defs/ComparisonOperator"
              },
              {
                "description": "The comparison operator used in the filter condition."
              }
            ]
          },
          "StringValueList": {
            "allOf": [
              {
                "$ref": "#/$defs/StringValueList"
              },
              {
                "description": "A string with values used in evaluating the filter condition."
              }
            ]
          }
        },
        "description": "This structure describes the filtering of columns in a table based on a filter condition."
      },
      "FieldNameString": {
        "type": "string",
        "enum": [
          "RESOURCE_ARN",
          "ROLE_ARN",
          "LAST_MODIFIED"
        ]
      },
      "ComparisonOperator": {
        "type": "string",
        "enum": [
          "EQ",
          "NE",
          "LE",
          "LT",
          "GE",
          "GT",
          "CONTAINS",
          "NOT_CONTAINS",
          "BEGINS_WITH",
          "IN",
          "BETWEEN"
        ]
      },
      "StringValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StringValue"
        }
      },
      "StringValue": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lakeformation.us-east-1.amazonaws.com/ListResources{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ResourceInfoList**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
