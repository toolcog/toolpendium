{
  "name": "UpdateDataCellsFilter",
  "description": "Updates a data cell filter.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "TableData"
        ],
        "properties": {
          "TableData": {
            "description": "A structure that describes certain columns on certain rows.",
            "type": "object",
            "properties": {
              "TableCatalogId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CatalogIdString"
                  },
                  {
                    "description": "The ID of the catalog to which the table belongs."
                  }
                ]
              },
              "DatabaseName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NameString"
                  },
                  {
                    "description": "A database in the Glue Data Catalog."
                  }
                ]
              },
              "TableName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NameString"
                  },
                  {
                    "description": "A table in the database."
                  }
                ]
              },
              "Name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NameString"
                  },
                  {
                    "description": "The name given by the user to the data filter cell."
                  }
                ]
              },
              "RowFilter": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RowFilter"
                  },
                  {
                    "description": "A PartiQL predicate."
                  }
                ]
              },
              "ColumnNames": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ColumnNames"
                  },
                  {
                    "description": "A list of column names and/or nested column attributes. When specifying nested attributes, use a qualified dot (.) delimited format such as \"address\".\"zip\". Nested attributes within this list may not exceed a depth of 5."
                  }
                ]
              },
              "ColumnWildcard": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ColumnWildcard"
                  },
                  {
                    "description": "<p>A wildcard with exclusions.</p> <p>You must specify either a <code>ColumnNames</code> list or the <code>ColumnWildCard</code>. </p>"
                  }
                ]
              },
              "VersionId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VersionString"
                  },
                  {
                    "description": "The ID of the data cells filter version."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "CatalogIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "NameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      },
      "RowFilter": {
        "type": "object",
        "properties": {
          "FilterExpression": {
            "allOf": [
              {
                "$ref": "#/$defs/PredicateString"
              },
              {
                "description": "A filter expression."
              }
            ]
          },
          "AllRowsWildcard": {
            "allOf": [
              {
                "$ref": "#/$defs/AllRowsWildcard"
              },
              {
                "description": "A wildcard for all rows."
              }
            ]
          }
        },
        "description": "A PartiQL predicate."
      },
      "PredicateString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 2048,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "AllRowsWildcard": {
        "type": "object",
        "properties": {},
        "description": "A structure that you pass to indicate you want all rows in a filter. "
      },
      "ColumnNames": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NameString"
        }
      },
      "ColumnWildcard": {
        "type": "object",
        "properties": {
          "ExcludedColumnNames": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnNames"
              },
              {
                "description": "Excludes column names. Any column with this name will be excluded."
              }
            ]
          }
        },
        "description": "A wildcard object, consisting of an optional list of excluded column names or indexes."
      },
      "VersionString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lakeformation.us-east-1.amazonaws.com/UpdateDataCellsFilter"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
