openapi: 3.0.0
info:
  version: '2021-03-12'
  x-release: v4
  title: FinSpace User Environment Management service
  description: The FinSpace management service provides the APIs for managing FinSpace environments.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: finspace
  x-aws-signingName: finspace
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/finspace-2021-03-12.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/finspace/'
servers:
  - url: 'http://finspace.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The finspace multi-region endpoint
  - url: 'https://finspace.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The finspace multi-region endpoint
  - url: 'http://finspace.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The finspace endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://finspace.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The finspace endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /environment:
    post:
      operationId: CreateEnvironment
      description: Create a new FinSpace environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  description: The name of the FinSpace environment to be created.
                  type: string
                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$'
                  minLength: 1
                  maxLength: 255
                description:
                  description: The description of the FinSpace environment to be created.
                  type: string
                  pattern: '^[a-zA-Z0-9. ]{1,1000}$'
                  minLength: 1
                  maxLength: 1000
                kmsKeyId:
                  description: The KMS key id to encrypt your data in the FinSpace environment.
                  type: string
                  pattern: '^[a-zA-Z-0-9-:\/]*$'
                  minLength: 1
                  maxLength: 1000
                tags:
                  description: Add tags to your FinSpace environment.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                federationMode:
                  description: <p>Authentication mode for the environment.</p> <ul> <li> <p> <code>FEDERATED</code> - Users access FinSpace through Single Sign On (SSO) via your Identity provider.</p> </li> <li> <p> <code>LOCAL</code> - Users access FinSpace via email and password managed within the FinSpace environment.</p> </li> </ul>
                  type: string
                  enum:
                    - FEDERATED
                    - LOCAL
                federationParameters:
                  description: Configuration information when authentication mode is FEDERATED.
                  type: object
                  properties:
                    samlMetadataDocument:
                      allOf:
                        - $ref: '#/components/schemas/SamlMetadataDocument'
                        - description: SAML 2.0 Metadata document from identity provider (IdP).
                    samlMetadataURL:
                      allOf:
                        - $ref: '#/components/schemas/url'
                        - description: Provide the metadata URL from your SAML 2.0 compliant identity provider (IdP).
                    applicationCallBackURL:
                      allOf:
                        - $ref: '#/components/schemas/url'
                        - description: The redirect or sign-in URL that should be entered into the SAML 2.0 compliant identity provider configuration (IdP).
                    federationURN:
                      allOf:
                        - $ref: '#/components/schemas/urn'
                        - description: The Uniform Resource Name (URN). Also referred as Service Provider URN or Audience URI or Service Provider Entity ID.
                    federationProviderName:
                      allOf:
                        - $ref: '#/components/schemas/FederationProviderName'
                        - description: Name of the identity provider (IdP).
                    attributeMap:
                      allOf:
                        - $ref: '#/components/schemas/AttributeMap'
                        - description: 'SAML attribute name and value. The name must always be <code>Email</code> and the value should be set to the attribute definition in which user email is set. For example, name would be <code>Email</code> and value <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress</code>. Please check your SAML 2.0 compliant identity provider (IdP) documentation for details.'
                superuserParameters:
                  description: Configuration information for the superuser.
                  type: object
                  properties:
                    emailAddress:
                      allOf:
                        - $ref: '#/components/schemas/EmailId'
                        - description: The email address of the superuser.
                    firstName:
                      allOf:
                        - $ref: '#/components/schemas/NameString'
                        - description: The first name of the superuser.
                    lastName:
                      allOf:
                        - $ref: '#/components/schemas/NameString'
                        - description: The last name of the superuser.
                dataBundles:
                  description: '<p>The list of Amazon Resource Names (ARN) of the data bundles to install. Currently supported data bundle ARNs:</p> <ul> <li> <p> <code>arn:aws:finspace:${Region}::data-bundle/capital-markets-sample</code> - Contains sample Capital Markets datasets, categories and controlled vocabularies.</p> </li> <li> <p> <code>arn:aws:finspace:${Region}::data-bundle/taq</code> (default) - Contains trades and quotes data in addition to sample Capital Markets data.</p> </li> </ul>'
                  type: array
                  items:
                    $ref: '#/components/schemas/DataBundleArn'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListEnvironments
      description: A list of all of your FinSpace environments.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'A token generated by FinSpace that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the <code>nextToken</code>nextToken value from the response object of the previous page call.'
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this request.
          schema:
            type: integer
            minimum: 0
            maximum: 100
  '/kx/environments/{environmentId}/databases/{databaseName}/changesets':
    post:
      operationId: CreateKxChangeset
      description: ' Creates a changeset for a kdb database. A changeset allows you to add and delete existing files by using an ordered list of change requests. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKxChangesetResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier of the kdb environment.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 32
        - name: databaseName
          in: path
          required: true
          description: The name of the kdb database.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
            minLength: 3
            maxLength: 63
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - changeRequests
                - clientToken
              properties:
                changeRequests:
                  description: '<p>A list of change request objects that are run in order. A change request object consists of changeType , s3Path, and a dbPath. A changeType can has the following values: </p> <ul> <li> <p>PUT – Adds or updates files in a database.</p> </li> <li> <p>DELETE – Deletes files in a database.</p> </li> </ul> <p>All the change requests require a mandatory <i>dbPath</i> attribute that defines the path within the database directory. The <i>s3Path</i> attribute defines the s3 source file path and is required for a PUT change type.</p> <p>Here is an example of how you can use the change request object:</p> <p> <code>[ { "changeType": "PUT", "s3Path":"s3://bucket/db/2020.01.02/", "dbPath":"/2020.01.02/"}, { "changeType": "PUT", "s3Path":"s3://bucket/db/sym", "dbPath":"/"}, { "changeType": "DELETE", "dbPath": "/2020.01.01/"} ]</code> </p> <p>In this example, the first request with <i>PUT</i> change type allows you to add files in the given s3Path under the <i>2020.01.02</i> partition of the database. The second request with <i>PUT</i> change type allows you to add a single sym file at database root location. The last request with <i>DELETE</i> change type allows you to delete the files under the <i>2020.01.01</i> partition of the database. </p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/ChangeRequest'
                  minItems: 1
                  maxItems: 32
                clientToken:
                  description: A token that ensures idempotency. This token expires in 10 minutes.
                  type: string
                  pattern: '^[a-zA-Z0-9-]+$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListKxChangesets
      description: Returns a list of all the changesets for a database.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKxChangesetsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 32
        - name: databaseName
          in: path
          required: true
          description: The name of the kdb database.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
            minLength: 3
            maxLength: 63
        - name: nextToken
          in: query
          required: false
          description: A token that indicates where a results page should begin.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this request.
          schema:
            type: integer
            minimum: 0
            maximum: 100
  '/kx/environments/{environmentId}/clusters':
    post:
      operationId: CreateKxCluster
      description: Creates a new kdb cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKxClusterResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-z0-9]+$'
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - clusterName
                - clusterType
                - capacityConfiguration
                - releaseLabel
                - azMode
              properties:
                clientToken:
                  description: A token that ensures idempotency. This token expires in 10 minutes.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 36
                clusterName:
                  description: A unique name for the cluster that you want to create.
                  type: string
                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
                  minLength: 3
                  maxLength: 63
                clusterType:
                  description: '<p>Specifies the type of KDB database that is being created. The following types are available: </p> <ul> <li> <p>HDB – A Historical Database. The data is only accessible with read-only permissions from one of the FinSpace managed kdb databases mounted to the cluster.</p> </li> <li> <p>RDB – A Realtime Database. This type of database captures all the data from a ticker plant and stores it in memory until the end of day, after which it writes all of its data to a disk and reloads the HDB. This cluster type requires local storage for temporary storage of data during the savedown process. If you specify this field in your request, you must provide the <code>savedownStorageConfiguration</code> parameter.</p> </li> <li> <p>GATEWAY – A gateway cluster allows you to access data across processes in kdb systems. It allows you to create your own routing logic using the initialization scripts and custom code. This type of cluster does not require a writable local storage.</p> </li> </ul>'
                  type: string
                  enum:
                    - HDB
                    - RDB
                    - GATEWAY
                databases:
                  description: A list of databases that will be available for querying.
                  type: array
                  items:
                    $ref: '#/components/schemas/KxDatabaseConfiguration'
                cacheStorageConfigurations:
                  description: 'The configurations for a read only cache storage associated with a cluster. This cache will be stored as an FSx Lustre that reads from the S3 store. '
                  type: array
                  items:
                    $ref: '#/components/schemas/KxCacheStorageConfiguration'
                autoScalingConfiguration:
                  description: 'The configuration based on which FinSpace will scale in or scale out nodes in your cluster. '
                  type: object
                  properties:
                    minNodeCount:
                      allOf:
                        - $ref: '#/components/schemas/NodeCount'
                        - description: 'The lowest number of nodes to scale. This value must be at least 1 and less than the <code>maxNodeCount</code>. If the nodes in a cluster belong to multiple availability zones, then <code>minNodeCount</code> must be at least 3.'
                    maxNodeCount:
                      allOf:
                        - $ref: '#/components/schemas/NodeCount'
                        - description: The highest number of nodes to scale. This value cannot be greater than 5.
                    autoScalingMetric:
                      allOf:
                        - $ref: '#/components/schemas/AutoScalingMetric'
                        - description: ' The metric your cluster will track in order to scale in and out. For example, <code>CPU_UTILIZATION_PERCENTAGE</code> is the average CPU usage across all the nodes in a cluster.'
                    metricTarget:
                      allOf:
                        - $ref: '#/components/schemas/AutoScalingMetricTarget'
                        - description: 'The desired value of the chosen <code>autoScalingMetric</code>. When the metric drops below this value, the cluster will scale in. When the metric goes above this value, the cluster will scale out. You can set the target value between 1 and 100 percent.'
                    scaleInCooldownSeconds:
                      allOf:
                        - $ref: '#/components/schemas/CooldownTime'
                        - description: The duration in seconds that FinSpace will wait after a scale in event before initiating another scaling event.
                    scaleOutCooldownSeconds:
                      allOf:
                        - $ref: '#/components/schemas/CooldownTime'
                        - description: The duration in seconds that FinSpace will wait after a scale out event before initiating another scaling event.
                clusterDescription:
                  description: A description of the cluster.
                  type: string
                  pattern: '^[a-zA-Z0-9\_\-\.\s]+$'
                  minLength: 1
                  maxLength: 1000
                capacityConfiguration:
                  description: 'A structure for the metadata of a cluster. It includes information like the CPUs needed, memory of instances, number of instances, and the port used while establishing a connection.'
                  type: object
                  properties:
                    nodeType:
                      allOf:
                        - $ref: '#/components/schemas/NodeType'
                        - description: '<p>The type that determines the hardware of the host computer used for your cluster instance. Each node type offers different memory and storage capabilities. Choose a node type based on the requirements of the application or software that you plan to run on your instance.</p> <p>You can only specify one of the following values:</p> <ul> <li> <p> <code>kx.s.large</code> – The node type with a configuration of 12 GiB memory and 2 vCPUs.</p> </li> <li> <p> <code>kx.s.xlarge</code> – The node type with a configuration of 27 GiB memory and 4 vCPUs.</p> </li> <li> <p> <code>kx.s.2xlarge</code> – The node type with a configuration of 54 GiB memory and 8 vCPUs.</p> </li> <li> <p> <code>kx.s.4xlarge</code> – The node type with a configuration of 108 GiB memory and 16 vCPUs.</p> </li> <li> <p> <code>kx.s.8xlarge</code> – The node type with a configuration of 216 GiB memory and 32 vCPUs.</p> </li> <li> <p> <code>kx.s.16xlarge</code> – The node type with a configuration of 432 GiB memory and 64 vCPUs.</p> </li> <li> <p> <code>kx.s.32xlarge</code> – The node type with a configuration of 864 GiB memory and 128 vCPUs.</p> </li> </ul>'
                    nodeCount:
                      allOf:
                        - $ref: '#/components/schemas/NodeCount'
                        - description: The number of instances running in a cluster.
                releaseLabel:
                  description: The version of FinSpace managed kdb to run.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]+'
                  minLength: 1
                  maxLength: 16
                vpcConfiguration:
                  description: Configuration details about the network where the Privatelink endpoint of the cluster resides.
                  type: object
                  properties:
                    vpcId:
                      allOf:
                        - $ref: '#/components/schemas/VpcIdString'
                        - description: The identifier of the VPC endpoint.
                    securityGroupIds:
                      allOf:
                        - $ref: '#/components/schemas/SecurityGroupIdList'
                        - description: The unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.
                    subnetIds:
                      allOf:
                        - $ref: '#/components/schemas/SubnetIdList'
                        - description: The identifier of the subnet that the Privatelink VPC endpoint uses to connect to the cluster.
                    ipAddressType:
                      allOf:
                        - $ref: '#/components/schemas/IPAddressType'
                        - description: '<p>The IP address type for cluster network configuration parameters. The following type is available:</p> <ul> <li> <p>IP_V4 – IP address version 4</p> </li> </ul>'
                initializationScript:
                  description: 'Specifies a Q program that will be run at launch of a cluster. It is a relative path within <i>.zip</i> file that contains the custom code, which will be loaded on the cluster. It must include the file name itself. For example, <code>somedir/init.q</code>.'
                  type: string
                  pattern: '^[a-zA-Z0-9\_\-\.\/\\]+$'
                  minLength: 1
                  maxLength: 255
                commandLineArguments:
                  description: Defines the key-value pairs to make them available inside the cluster.
                  type: array
                  items:
                    $ref: '#/components/schemas/KxCommandLineArgument'
                code:
                  description: The structure of the customer code available within the running cluster.
                  type: object
                  properties:
                    s3Bucket:
                      allOf:
                        - $ref: '#/components/schemas/S3Bucket'
                        - description: A unique name for the S3 bucket.
                    s3Key:
                      allOf:
                        - $ref: '#/components/schemas/S3Key'
                        - description: The full S3 path (excluding bucket) to the .zip file. This file contains the code that is loaded onto the cluster when it's started.
                    s3ObjectVersion:
                      allOf:
                        - $ref: '#/components/schemas/S3ObjectVersion'
                        - description: The version of an S3 object.
                executionRole:
                  description: An IAM role that defines a set of permissions associated with a cluster. These permissions are assumed when a cluster attempts to access another cluster.
                  type: string
                  pattern: '^arn:aws[a-z0-9-]*:iam::\d{12}:role\/[\w-\/.@+=,]{1,1017}$'
                  minLength: 1
                  maxLength: 1024
                savedownStorageConfiguration:
                  description: The size and type of temporary storage that is used to hold data during the savedown process. All the data written to this storage space is lost when the cluster node is restarted.
                  type: object
                  properties:
                    type:
                      allOf:
                        - $ref: '#/components/schemas/KxSavedownStorageType'
                        - description: '<p>The type of writeable storage space for temporarily storing your savedown data. The valid values are:</p> <ul> <li> <p>SDS01 – This type represents 3000 IOPS and io2 ebs volume type.</p> </li> </ul>'
                    size:
                      allOf:
                        - $ref: '#/components/schemas/KxSavedownStorageSize'
                        - description: The size of temporary storage in bytes.
                azMode:
                  description: <p>The number of availability zones you want to assign per cluster. This can be one of the following </p> <ul> <li> <p> <code>SINGLE</code> – Assigns one availability zone per cluster.</p> </li> <li> <p> <code>MULTI</code> – Assigns all the availability zones per cluster.</p> </li> </ul>
                  type: string
                  enum:
                    - SINGLE
                    - MULTI
                availabilityZoneId:
                  description: The availability zone identifiers for the requested regions.
                  type: string
                tags:
                  description: A list of key-value pairs to label the cluster. You can add up to 50 tags to a cluster.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListKxClusters
      description: Returns a list of clusters.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKxClustersResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-z0-9]+$'
            minLength: 1
            maxLength: 32
        - name: clusterType
          in: query
          required: false
          description: '<p>Specifies the type of KDB database that is being created. The following types are available: </p> <ul> <li> <p>HDB – A Historical Database. The data is only accessible with read-only permissions from one of the FinSpace managed kdb databases mounted to the cluster.</p> </li> <li> <p>RDB – A Realtime Database. This type of database captures all the data from a ticker plant and stores it in memory until the end of day, after which it writes all of its data to a disk and reloads the HDB. This cluster type requires local storage for temporary storage of data during the savedown process. If you specify this field in your request, you must provide the <code>savedownStorageConfiguration</code> parameter.</p> </li> <li> <p>GATEWAY – A gateway cluster allows you to access data across processes in kdb systems. It allows you to create your own routing logic using the initialization scripts and custom code. This type of cluster does not require a writable local storage.</p> </li> </ul>'
          schema:
            type: string
            enum:
              - HDB
              - RDB
              - GATEWAY
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this request.
          schema:
            type: integer
            minimum: 0
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A token that indicates where a results page should begin.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 1000
  '/kx/environments/{environmentId}/databases':
    post:
      operationId: CreateKxDatabase
      description: Creates a new kdb database in the environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKxDatabaseResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - databaseName
                - clientToken
              properties:
                databaseName:
                  description: The name of the kdb database.
                  type: string
                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
                  minLength: 3
                  maxLength: 63
                description:
                  description: A description of the database.
                  type: string
                  pattern: '^[a-zA-Z0-9. ]{1,1000}$'
                  minLength: 1
                  maxLength: 1000
                tags:
                  description: A list of key-value pairs to label the kdb database. You can add up to 50 tags to your kdb database
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                clientToken:
                  description: A token that ensures idempotency. This token expires in 10 minutes.
                  type: string
                  pattern: '^[a-zA-Z0-9-]+$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListKxDatabases
      description: Returns a list of all the databases in the kdb environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKxDatabasesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 32
        - name: nextToken
          in: query
          required: false
          description: A token that indicates where a results page should begin.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this request.
          schema:
            type: integer
            minimum: 0
            maximum: 100
  /kx/environments:
    post:
      operationId: CreateKxEnvironment
      description: Creates a managed kdb environment for the account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKxEnvironmentResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - kmsKeyId
              properties:
                name:
                  description: The name of the kdb environment that you want to create.
                  type: string
                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
                  minLength: 3
                  maxLength: 63
                description:
                  description: A description for the kdb environment.
                  type: string
                  pattern: '^[a-zA-Z0-9. ]{1,1000}$'
                  minLength: 1
                  maxLength: 1000
                kmsKeyId:
                  description: The KMS key ID to encrypt your data in the FinSpace environment.
                  type: string
                  pattern: '^arn:aws:kms:.*:\d+:.*$'
                  minLength: 1
                  maxLength: 1000
                tags:
                  description: A list of key-value pairs to label the kdb environment. You can add up to 50 tags to your kdb environment.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                clientToken:
                  description: A token that ensures idempotency. This token expires in 10 minutes.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListKxEnvironments
      description: Returns a list of kdb environments created in an account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKxEnvironmentsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: A token that indicates where a results page should begin.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this request.
          schema:
            type: integer
  '/kx/environments/{environmentId}/users':
    post:
      operationId: CreateKxUser
      description: Creates a user in FinSpace kdb environment with an associated IAM role.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKxUserResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment where you want to create a user.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userName
                - iamRole
              properties:
                userName:
                  description: A unique identifier for the user.
                  type: string
                  pattern: '^[0-9A-Za-z_-]{1,50}$'
                  minLength: 1
                  maxLength: 50
                iamRole:
                  description: The IAM role ARN that will be associated with the user.
                  type: string
                  pattern: '^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
                  minLength: 20
                  maxLength: 2048
                tags:
                  description: A list of key-value pairs to label the user. You can add up to 50 tags to a user.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                clientToken:
                  description: A token that ensures idempotency. This token expires in 10 minutes.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListKxUsers
      description: Lists all the users in a kdb environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKxUsersResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
        - name: nextToken
          in: query
          required: false
          description: A token that indicates where a results page should begin.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this request.
          schema:
            type: integer
            minimum: 0
            maximum: 100
  '/environment/{environmentId}':
    delete:
      operationId: DeleteEnvironment
      description: Delete an FinSpace environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: The identifier for the FinSpace environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetEnvironment
      description: Returns the FinSpace environment object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: The identifier of the FinSpace environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
    put:
      operationId: UpdateEnvironment
      description: Update your FinSpace environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: The identifier of the FinSpace environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: The name of the environment.
                  type: string
                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$'
                  minLength: 1
                  maxLength: 255
                description:
                  description: The description of the environment.
                  type: string
                  pattern: '^[a-zA-Z0-9. ]{1,1000}$'
                  minLength: 1
                  maxLength: 1000
                federationMode:
                  description: <p>Authentication mode for the environment.</p> <ul> <li> <p> <code>FEDERATED</code> - Users access FinSpace through Single Sign On (SSO) via your Identity provider.</p> </li> <li> <p> <code>LOCAL</code> - Users access FinSpace via email and password managed within the FinSpace environment.</p> </li> </ul>
                  type: string
                  enum:
                    - FEDERATED
                    - LOCAL
                federationParameters:
                  description: Configuration information when authentication mode is FEDERATED.
                  type: object
                  properties:
                    samlMetadataDocument:
                      allOf:
                        - $ref: '#/components/schemas/SamlMetadataDocument'
                        - description: SAML 2.0 Metadata document from identity provider (IdP).
                    samlMetadataURL:
                      allOf:
                        - $ref: '#/components/schemas/url'
                        - description: Provide the metadata URL from your SAML 2.0 compliant identity provider (IdP).
                    applicationCallBackURL:
                      allOf:
                        - $ref: '#/components/schemas/url'
                        - description: The redirect or sign-in URL that should be entered into the SAML 2.0 compliant identity provider configuration (IdP).
                    federationURN:
                      allOf:
                        - $ref: '#/components/schemas/urn'
                        - description: The Uniform Resource Name (URN). Also referred as Service Provider URN or Audience URI or Service Provider Entity ID.
                    federationProviderName:
                      allOf:
                        - $ref: '#/components/schemas/FederationProviderName'
                        - description: Name of the identity provider (IdP).
                    attributeMap:
                      allOf:
                        - $ref: '#/components/schemas/AttributeMap'
                        - description: 'SAML attribute name and value. The name must always be <code>Email</code> and the value should be set to the attribute definition in which user email is set. For example, name would be <code>Email</code> and value <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress</code>. Please check your SAML 2.0 compliant identity provider (IdP) documentation for details.'
  '/kx/environments/{environmentId}/clusters/{clusterName}':
    delete:
      operationId: DeleteKxCluster
      description: Deletes a kdb cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKxClusterResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-z0-9]+$'
            minLength: 1
            maxLength: 32
        - name: clusterName
          in: path
          required: true
          description: The name of the cluster that you want to delete.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
            minLength: 3
            maxLength: 63
        - name: clientToken
          in: query
          required: false
          description: A token that ensures idempotency. This token expires in 10 minutes.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
            minLength: 1
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetKxCluster
      description: Retrieves information about a kdb cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKxClusterResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-z0-9]+$'
            minLength: 1
            maxLength: 32
        - name: clusterName
          in: path
          required: true
          description: The name of the cluster that you want to retrieve.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
            minLength: 3
            maxLength: 63
  '/kx/environments/{environmentId}/databases/{databaseName}#clientToken':
    delete:
      operationId: DeleteKxDatabase
      description: Deletes the specified database and all of its associated data. This action is irreversible. You must copy any data out of the database before deleting it if the data is to be retained.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKxDatabaseResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 32
        - name: databaseName
          in: path
          required: true
          description: The name of the kdb database that you want to delete.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
            minLength: 3
            maxLength: 63
        - name: clientToken
          in: query
          required: true
          description: A token that ensures idempotency. This token expires in 10 minutes.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
            minLength: 1
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/kx/environments/{environmentId}':
    delete:
      operationId: DeleteKxEnvironment
      description: 'Deletes the kdb environment. This action is irreversible. Deleting a kdb environment will remove all the associated data and any services running in it. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKxEnvironmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetKxEnvironment
      description: Retrieves all the information for the specified kdb environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKxEnvironmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
    put:
      operationId: UpdateKxEnvironment
      description: Updates information for the given kdb environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKxEnvironmentResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: The name of the kdb environment.
                  type: string
                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
                  minLength: 3
                  maxLength: 63
                description:
                  description: A description of the kdb environment.
                  type: string
                  pattern: '^[a-zA-Z0-9. ]{1,1000}$'
                  minLength: 1
                  maxLength: 1000
                clientToken:
                  description: A token that ensures idempotency. This token expires in 10 minutes.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 36
  '/kx/environments/{environmentId}/users/{userName}':
    delete:
      operationId: DeleteKxUser
      description: Deletes a user in the specified kdb environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKxUserResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: userName
          in: path
          required: true
          description: A unique identifier for the user that you want to delete.
          schema:
            type: string
            pattern: '^[0-9A-Za-z_-]{1,50}$'
            minLength: 1
            maxLength: 50
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetKxUser
      description: Retrieves information about the specified kdb user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKxUserResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: userName
          in: path
          required: true
          description: A unique identifier for the user.
          schema:
            type: string
            pattern: '^[0-9A-Za-z_-]{1,50}$'
            minLength: 1
            maxLength: 50
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
    put:
      operationId: UpdateKxUser
      description: Updates the user details. You can only update the IAM role associated with a user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKxUserResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
        - name: userName
          in: path
          required: true
          description: A unique identifier for the user.
          schema:
            type: string
            pattern: '^[0-9A-Za-z_-]{1,50}$'
            minLength: 1
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - iamRole
              properties:
                iamRole:
                  description: The IAM role ARN that is associated with the user.
                  type: string
                  pattern: '^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
                  minLength: 20
                  maxLength: 2048
                clientToken:
                  description: A token that ensures idempotency. This token expires in 10 minutes.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 36
  '/kx/environments/{environmentId}/databases/{databaseName}/changesets/{changesetId}':
    get:
      operationId: GetKxChangeset
      description: Returns information about a kdb changeset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKxChangesetResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 32
        - name: databaseName
          in: path
          required: true
          description: The name of the kdb database.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
            minLength: 3
            maxLength: 63
        - name: changesetId
          in: path
          required: true
          description: A unique identifier of the changeset for which you want to retrieve data.
          schema:
            type: string
            minLength: 1
            maxLength: 26
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/kx/environments/{environmentId}/connectionString#userArn&clusterName':
    get:
      operationId: GetKxConnectionString
      description: 'Retrieves a connection string for a user to connect to a kdb cluster. You must call this API using the same role that you have defined while creating a user. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKxConnectionStringResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: userArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see <a href="IAM/latest/UserGuide/reference_identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>. '
          schema:
            type: string
            pattern: '^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:kxEnvironment/[0-9A-Za-z_-]{1,128}/kxUser/[0-9A-Za-z_-]{1,128}$'
            minLength: 20
            maxLength: 2048
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
        - name: clusterName
          in: query
          required: true
          description: A name of the kdb cluster.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
            minLength: 3
            maxLength: 63
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/kx/environments/{environmentId}/databases/{databaseName}':
    get:
      operationId: GetKxDatabase
      description: Returns database information for the specified environment ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKxDatabaseResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 32
        - name: databaseName
          in: path
          required: true
          description: The name of the kdb database.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
            minLength: 3
            maxLength: 63
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateKxDatabase
      description: Updates information for the given kdb database.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKxDatabaseResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 32
        - name: databaseName
          in: path
          required: true
          description: The name of the kdb database.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
            minLength: 3
            maxLength: 63
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - clientToken
              properties:
                description:
                  description: A description of the database.
                  type: string
                  pattern: '^[a-zA-Z0-9. ]{1,1000}$'
                  minLength: 1
                  maxLength: 1000
                clientToken:
                  description: A token that ensures idempotency. This token expires in 10 minutes.
                  type: string
                  pattern: '^[a-zA-Z0-9-]+$'
                  minLength: 1
                  maxLength: 64
  '/kx/environments/{environmentId}/clusters/{clusterName}/nodes':
    get:
      operationId: ListKxClusterNodes
      description: Lists all the nodes in a kdb cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKxClusterNodesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-z0-9]+$'
            minLength: 1
            maxLength: 32
        - name: clusterName
          in: path
          required: true
          description: A unique name for the cluster.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
            minLength: 3
            maxLength: 63
        - name: nextToken
          in: query
          required: false
          description: A token that indicates where a results page should begin.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 1000
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this request.
          schema:
            type: integer
            minimum: 0
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: A list of all tags for a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name of the resource.
          schema:
            type: string
            pattern: '^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:(environment|kxEnvironment)/[0-9A-Za-z_-]{1,128}(/(kxDatabase|kxCluster|kxUser)/[a-zA-Z0-9_-]{1,255})?$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds metadata tags to a FinSpace resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) for the resource.
          schema:
            type: string
            pattern: '^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:(environment|kxEnvironment)/[0-9A-Za-z_-]{1,128}(/(kxDatabase|kxCluster|kxUser)/[a-zA-Z0-9_-]{1,255})?$'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: One or more tags to be assigned to the resource.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes metadata tags from a FinSpace resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: A FinSpace resource from which you want to remove a tag or tags. The value for this parameter is an Amazon Resource Name (ARN).
          schema:
            type: string
            pattern: '^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:(environment|kxEnvironment)/[0-9A-Za-z_-]{1,128}(/(kxDatabase|kxCluster|kxUser)/[a-zA-Z0-9_-]{1,255})?$'
            minLength: 20
            maxLength: 2048
        - name: tagKeys
          in: query
          required: true
          description: The tag keys (names) of one or more tags to be removed.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/kx/environments/{environmentId}/clusters/{clusterName}/configuration/databases':
    put:
      operationId: UpdateKxClusterDatabases
      description: '<p>Updates the databases mounted on a kdb cluster, which includes the <code>changesetId</code> and all the dbPaths to be cached. This API does not allow you to change a database name or add a database if you created a cluster without one. </p> <p>Using this API you can point a cluster to a different changeset and modify a list of partitions being cached.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKxClusterDatabasesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: The unique identifier of a kdb environment.
          schema:
            type: string
            pattern: '^[a-z0-9]+$'
            minLength: 1
            maxLength: 32
        - name: clusterName
          in: path
          required: true
          description: A unique name for the cluster that you want to modify.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
            minLength: 3
            maxLength: 63
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - databases
              properties:
                clientToken:
                  description: A token that ensures idempotency. This token expires in 10 minutes.
                  type: string
                  pattern: '^[a-zA-Z0-9-]+$'
                  minLength: 1
                  maxLength: 64
                databases:
                  description: ' The structure of databases mounted on the cluster.'
                  type: array
                  items:
                    $ref: '#/components/schemas/KxDatabaseConfiguration'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/kx/environments/{environmentId}/network':
    put:
      operationId: UpdateKxEnvironmentNetwork
      description: '<p>Updates environment network to connect to your internal network by using a transit gateway. This API supports request to create a transit gateway attachment from FinSpace VPC to your transit gateway ID and create a custom Route-53 outbound resolvers.</p> <p>Once you send a request to update a network, you cannot change it again. Network update might require termination of any clusters that are running in the existing network.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKxEnvironmentNetworkResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: environmentId
          in: path
          required: true
          description: A unique identifier for the kdb environment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{1,26}$'
            minLength: 1
            maxLength: 26
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transitGatewayConfiguration:
                  description: The structure of the transit gateway and network configuration that is used to connect the kdb environment to an internal network.
                  type: object
                  properties:
                    transitGatewayID:
                      allOf:
                        - $ref: '#/components/schemas/TransitGatewayID'
                        - description: The identifier of the transit gateway created by the customer to connect outbound traffics from kdb network to your internal network.
                    routableCIDRSpace:
                      allOf:
                        - $ref: '#/components/schemas/ValidCIDRSpace'
                        - description: 'The routing CIDR on behalf of kdb environment. It could be any "/26 range in the 100.64.0.0 CIDR space. After providing, it will be added to the customer''s transit gateway routing table so that the traffics could be routed to kdb network.'
                customDNSConfiguration:
                  description: A list of DNS server name and server IP. This is used to set up Route-53 outbound resolvers.
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomDNSServer'
                clientToken:
                  description: A token that ensures idempotency. This token expires in 10 minutes.
                  type: string
                  pattern: .*\S.*
                  minLength: 1
                  maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateEnvironmentResponse:
      type: object
      properties:
        environmentId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: The unique identifier for FinSpace environment that you created.
        environmentArn:
          allOf:
            - $ref: '#/components/schemas/EnvironmentArn'
            - description: The Amazon Resource Name (ARN) of the FinSpace environment that you created.
        environmentUrl:
          allOf:
            - $ref: '#/components/schemas/url'
            - description: The sign-in URL for the web application of the FinSpace environment you created.
    TagValue:
      type: string
      pattern: '^[a-zA-Z0-9+-=._:@ ]+$'
      minLength: 1
      maxLength: 256
    SamlMetadataDocument:
      type: string
      pattern: .*
      minLength: 1000
      maxLength: 10000000
    url:
      type: string
      pattern: '^https?://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]'
      minLength: 1
      maxLength: 1000
    urn:
      type: string
      pattern: '^[A-Za-z0-9._\-:\/#\+]+$'
      minLength: 1
      maxLength: 255
    FederationProviderName:
      type: string
      pattern: '[^_\p{Z}][\p{L}\p{M}\p{S}\p{N}\p{P}][^_\p{Z}]+'
      minLength: 1
      maxLength: 32
    AttributeMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FederationAttributeValue'
    EmailId:
      type: string
      pattern: '[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+[.]+[A-Za-z]+'
      minLength: 1
      maxLength: 128
      format: password
    NameString:
      type: string
      pattern: '^[a-zA-Z0-9]{1,50}$'
      minLength: 1
      maxLength: 50
    DataBundleArn:
      type: string
      pattern: '^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d*:data-bundle/[0-9A-Za-z_-]{1,128}$'
      description: The Amazon Resource Name (ARN) of the data bundle.
      minLength: 20
      maxLength: 2048
    InternalServerException: {}
    ValidationException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    ServiceQuotaExceededException: {}
    LimitExceededException: {}
    CreateKxChangesetResponse:
      type: object
      properties:
        changesetId:
          allOf:
            - $ref: '#/components/schemas/ChangesetId'
            - description: A unique identifier for the changeset.
        databaseName:
          allOf:
            - $ref: '#/components/schemas/DatabaseName'
            - description: The name of the kdb database.
        environmentId:
          allOf:
            - $ref: '#/components/schemas/EnvironmentId'
            - description: A unique identifier for the kdb environment.
        changeRequests:
          allOf:
            - $ref: '#/components/schemas/ChangeRequests'
            - description: A list of change requests.
        createdTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the changeset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        lastModifiedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the changeset was updated in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        status:
          allOf:
            - $ref: '#/components/schemas/ChangesetStatus'
            - description: <p>Status of the changeset creation process.</p> <ul> <li> <p>Pending – Changeset creation is pending.</p> </li> <li> <p>Processing – Changeset creation is running.</p> </li> <li> <p>Failed – Changeset creation has failed.</p> </li> <li> <p>Complete – Changeset creation has succeeded.</p> </li> </ul>
        errorInfo:
          allOf:
            - $ref: '#/components/schemas/ErrorInfo'
            - description: The details of the error that you receive when creating a changeset. It consists of the type of error and the error message.
    ChangeRequest:
      type: object
      required:
        - changeType
        - dbPath
      properties:
        changeType:
          allOf:
            - $ref: '#/components/schemas/ChangeType'
            - description: '<p>Defines the type of change request. A <code>changeType</code> can have the following values:</p> <ul> <li> <p>PUT – Adds or updates files in a database.</p> </li> <li> <p>DELETE – Deletes files in a database.</p> </li> </ul>'
        s3Path:
          allOf:
            - $ref: '#/components/schemas/S3Path'
            - description: Defines the S3 path of the source file that is required to add or update files in a database.
        dbPath:
          allOf:
            - $ref: '#/components/schemas/DbPath'
            - description: 'Defines the path within the database directory. '
      description: A list of change request objects.
    ResourceNotFoundException: {}
    ConflictException: {}
    CreateKxClusterResponse:
      type: object
      properties:
        environmentId:
          allOf:
            - $ref: '#/components/schemas/KxEnvironmentId'
            - description: A unique identifier for the kdb environment.
        status:
          allOf:
            - $ref: '#/components/schemas/KxClusterStatus'
            - description: <p>The status of cluster creation.</p> <ul> <li> <p>PENDING – The cluster is pending creation.</p> </li> <li> <p>CREATING – The cluster creation process is in progress.</p> </li> <li> <p>CREATE_FAILED – The cluster creation process has failed.</p> </li> <li> <p>RUNNING – The cluster creation process is running.</p> </li> <li> <p>UPDATING – The cluster is in the process of being updated.</p> </li> <li> <p>DELETING – The cluster is in the process of being deleted.</p> </li> <li> <p>DELETED – The cluster has been deleted.</p> </li> <li> <p>DELETE_FAILED – The cluster failed to delete.</p> </li> </ul>
        statusReason:
          allOf:
            - $ref: '#/components/schemas/KxClusterStatusReason'
            - description: 'The error message when a failed state occurs. '
        clusterName:
          allOf:
            - $ref: '#/components/schemas/KxClusterName'
            - description: A unique name for the cluster.
        clusterType:
          allOf:
            - $ref: '#/components/schemas/KxClusterType'
            - description: '<p>Specifies the type of KDB database that is being created. The following types are available: </p> <ul> <li> <p>HDB – A Historical Database. The data is only accessible with read-only permissions from one of the FinSpace managed kdb databases mounted to the cluster.</p> </li> <li> <p>RDB – A Realtime Database. This type of database captures all the data from a ticker plant and stores it in memory until the end of day, after which it writes all of its data to a disk and reloads the HDB. This cluster type requires local storage for temporary storage of data during the savedown process. If you specify this field in your request, you must provide the <code>savedownStorageConfiguration</code> parameter.</p> </li> <li> <p>GATEWAY – A gateway cluster allows you to access data across processes in kdb systems. It allows you to create your own routing logic using the initialization scripts and custom code. This type of cluster does not require a writable local storage.</p> </li> </ul>'
        databases:
          allOf:
            - $ref: '#/components/schemas/KxDatabaseConfigurations'
            - description: A list of databases that will be available for querying.
        cacheStorageConfigurations:
          allOf:
            - $ref: '#/components/schemas/KxCacheStorageConfigurations'
            - description: 'The configurations for a read only cache storage associated with a cluster. This cache will be stored as an FSx Lustre that reads from the S3 store. '
        autoScalingConfiguration:
          allOf:
            - $ref: '#/components/schemas/AutoScalingConfiguration'
            - description: The configuration based on which FinSpace will scale in or scale out nodes in your cluster.
        clusterDescription:
          allOf:
            - $ref: '#/components/schemas/KxClusterDescription'
            - description: A description of the cluster.
        capacityConfiguration:
          allOf:
            - $ref: '#/components/schemas/CapacityConfiguration'
            - description: 'A structure for the metadata of a cluster. It includes information like the CPUs needed, memory of instances, number of instances, and the port used while establishing a connection.'
        releaseLabel:
          allOf:
            - $ref: '#/components/schemas/ReleaseLabel'
            - description: A version of the FinSpace managed kdb to run.
        vpcConfiguration:
          allOf:
            - $ref: '#/components/schemas/VpcConfiguration'
            - description: Configuration details about the network where the Privatelink endpoint of the cluster resides.
        initializationScript:
          allOf:
            - $ref: '#/components/schemas/InitializationScriptFilePath'
            - description: 'Specifies a Q program that will be run at launch of a cluster. It is a relative path within <i>.zip</i> file that contains the custom code, which will be loaded on the cluster. It must include the file name itself. For example, <code>somedir/init.q</code>.'
        commandLineArguments:
          allOf:
            - $ref: '#/components/schemas/KxCommandLineArguments'
            - description: Defines the key-value pairs to make them available inside the cluster.
        code:
          allOf:
            - $ref: '#/components/schemas/CodeConfiguration'
            - description: 'The details of the custom code that you want to use inside a cluster when analyzing a data. It consists of the S3 source bucket, location, S3 object version, and the relative path from where the custom code is loaded into the cluster. '
        executionRole:
          allOf:
            - $ref: '#/components/schemas/ExecutionRoleArn'
            - description: ' An IAM role that defines a set of permissions associated with a cluster. These permissions are assumed when a cluster attempts to access another cluster. '
        lastModifiedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The last time that the cluster was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        savedownStorageConfiguration:
          allOf:
            - $ref: '#/components/schemas/KxSavedownStorageConfiguration'
            - description: The size and type of the temporary storage that is used to hold data during the savedown process. This parameter is required when you choose <code>clusterType</code> as RDB. All the data written to this storage space is lost when the cluster node is restarted.
        azMode:
          allOf:
            - $ref: '#/components/schemas/KxAzMode'
            - description: <p>The number of availability zones you want to assign per cluster. This can be one of the following </p> <ul> <li> <p> <code>SINGLE</code> – Assigns one availability zone per cluster.</p> </li> <li> <p> <code>MULTI</code> – Assigns all the availability zones per cluster.</p> </li> </ul>
        availabilityZoneId:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneId'
            - description: ' The availability zone identifiers for the requested regions. '
        createdTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the cluster was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
    KxDatabaseConfiguration:
      type: object
      required:
        - databaseName
      properties:
        databaseName:
          allOf:
            - $ref: '#/components/schemas/DatabaseName'
            - description: 'The name of the kdb database. When this parameter is specified in the structure, S3 with the whole database is included by default.'
        cacheConfigurations:
          allOf:
            - $ref: '#/components/schemas/KxDatabaseCacheConfigurations'
            - description: Configuration details for the disk cache used to increase performance reading from a kdb database mounted to the cluster.
        changesetId:
          allOf:
            - $ref: '#/components/schemas/ChangesetId'
            - description: A unique identifier of the changeset that is associated with the cluster.
      description: The configuration of data that is available for querying from this database.
    KxCacheStorageConfiguration:
      type: object
      required:
        - type
        - size
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/KxCacheStorageType'
            - description: '<p>The type of cache storage . The valid values are: </p> <ul> <li> <p>CACHE_1000 – This type provides at least 1000 MB/s disk access throughput. </p> </li> </ul>'
        size:
          allOf:
            - $ref: '#/components/schemas/KxCacheStorageSize'
            - description: The size of cache in Gigabytes.
      description: The configuration for read only disk cache associated with a cluster.
    NodeCount:
      type: integer
      minimum: 1
      maximum: 5
    AutoScalingMetric:
      type: string
      enum:
        - CPU_UTILIZATION_PERCENTAGE
    AutoScalingMetricTarget:
      type: number
      format: double
      minimum: 1
      maximum: 100
    CooldownTime:
      type: number
      format: double
      minimum: 0
      maximum: 100000
    NodeType:
      type: string
      pattern: '^[a-zA-Z0-9._]+'
      minLength: 1
      maxLength: 32
    VpcIdString:
      type: string
      pattern: '^vpc-([a-z0-9]{8}$|[a-z0-9]{17}$)'
      minLength: 1
      maxLength: 1024
    SecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupIdString'
    SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetIdString'
    IPAddressType:
      type: string
      enum:
        - IP_V4
    KxCommandLineArgument:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/KxCommandLineArgumentKey'
            - description: The name of the key.
        value:
          allOf:
            - $ref: '#/components/schemas/KxCommandLineArgumentValue'
            - description: The value of the key.
      description: Defines the key-value pairs to make them available inside the cluster.
    S3Bucket:
      type: string
      pattern: '^[a-z0-9][a-z0-9\.\-]*[a-z0-9]$'
      minLength: 3
      maxLength: 255
    S3Key:
      type: string
      pattern: '^[a-zA-Z0-9\/\!\-_\.\*''\(\)]+$'
      minLength: 1
      maxLength: 1024
    S3ObjectVersion:
      type: string
      minLength: 1
      maxLength: 1000
    KxSavedownStorageType:
      type: string
      enum:
        - SDS01
    KxSavedownStorageSize:
      type: integer
      minimum: 4
      maximum: 16000
    CreateKxDatabaseResponse:
      type: object
      properties:
        databaseName:
          allOf:
            - $ref: '#/components/schemas/DatabaseName'
            - description: The name of the kdb database.
        databaseArn:
          allOf:
            - $ref: '#/components/schemas/DatabaseArn'
            - description: The ARN identifier of the database.
        environmentId:
          allOf:
            - $ref: '#/components/schemas/EnvironmentId'
            - description: A unique identifier for the kdb environment.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description of the database.
        createdTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the database is created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        lastModifiedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The last time that the database was updated in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
    ResourceAlreadyExistsException: {}
    CreateKxEnvironmentResponse:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/KxEnvironmentName'
            - description: The name of the kdb environment.
        status:
          allOf:
            - $ref: '#/components/schemas/EnvironmentStatus'
            - description: The status of the kdb environment.
        environmentId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the kdb environment.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description for the kdb environment.
        environmentArn:
          allOf:
            - $ref: '#/components/schemas/EnvironmentArn'
            - description: The ARN identifier of the environment.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: The KMS key ID to encrypt your data in the FinSpace environment.
        creationTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp at which the kdb environment was created in FinSpace.
    CreateKxUserResponse:
      type: object
      properties:
        userName:
          allOf:
            - $ref: '#/components/schemas/KxUserNameString'
            - description: A unique identifier for the user.
        userArn:
          allOf:
            - $ref: '#/components/schemas/KxUserArn'
            - description: ' The Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see <a href="IAM/latest/UserGuide/reference_identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>. '
        environmentId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the kdb environment.
        iamRole:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: The IAM role ARN that will be associated with the user.
    DeleteEnvironmentResponse:
      type: object
      properties: {}
    DeleteKxClusterResponse:
      type: object
      properties: {}
    DeleteKxDatabaseResponse:
      type: object
      properties: {}
    DeleteKxEnvironmentResponse:
      type: object
      properties: {}
    DeleteKxUserResponse:
      type: object
      properties: {}
    GetEnvironmentResponse:
      type: object
      properties:
        environment:
          allOf:
            - $ref: '#/components/schemas/Environment'
            - description: The name of the FinSpace environment.
    GetKxChangesetResponse:
      type: object
      properties:
        changesetId:
          allOf:
            - $ref: '#/components/schemas/ChangesetId'
            - description: A unique identifier for the changeset.
        databaseName:
          allOf:
            - $ref: '#/components/schemas/DatabaseName'
            - description: The name of the kdb database.
        environmentId:
          allOf:
            - $ref: '#/components/schemas/EnvironmentId'
            - description: A unique identifier for the kdb environment.
        changeRequests:
          allOf:
            - $ref: '#/components/schemas/ChangeRequests'
            - description: A list of change request objects that are run in order.
        createdTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the changeset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        activeFromTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'Beginning time from which the changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        lastModifiedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the changeset was updated in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        status:
          allOf:
            - $ref: '#/components/schemas/ChangesetStatus'
            - description: <p>Status of the changeset creation process.</p> <ul> <li> <p>Pending – Changeset creation is pending.</p> </li> <li> <p>Processing – Changeset creation is running.</p> </li> <li> <p>Failed – Changeset creation has failed.</p> </li> <li> <p>Complete – Changeset creation has succeeded.</p> </li> </ul>
        errorInfo:
          allOf:
            - $ref: '#/components/schemas/ErrorInfo'
            - description: 'Provides details in the event of a failed flow, including the error type and the related error message.'
    GetKxClusterResponse:
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/KxClusterStatus'
            - description: <p>The status of cluster creation.</p> <ul> <li> <p>PENDING – The cluster is pending creation.</p> </li> <li> <p>CREATING – The cluster creation process is in progress.</p> </li> <li> <p>CREATE_FAILED – The cluster creation process has failed.</p> </li> <li> <p>RUNNING – The cluster creation process is running.</p> </li> <li> <p>UPDATING – The cluster is in the process of being updated.</p> </li> <li> <p>DELETING – The cluster is in the process of being deleted.</p> </li> <li> <p>DELETED – The cluster has been deleted.</p> </li> <li> <p>DELETE_FAILED – The cluster failed to delete.</p> </li> </ul>
        statusReason:
          allOf:
            - $ref: '#/components/schemas/KxClusterStatusReason'
            - description: 'The error message when a failed state occurs. '
        clusterName:
          allOf:
            - $ref: '#/components/schemas/KxClusterName'
            - description: A unique name for the cluster.
        clusterType:
          allOf:
            - $ref: '#/components/schemas/KxClusterType'
            - description: '<p>Specifies the type of KDB database that is being created. The following types are available: </p> <ul> <li> <p>HDB – A Historical Database. The data is only accessible with read-only permissions from one of the FinSpace managed kdb databases mounted to the cluster.</p> </li> <li> <p>RDB – A Realtime Database. This type of database captures all the data from a ticker plant and stores it in memory until the end of day, after which it writes all of its data to a disk and reloads the HDB. This cluster type requires local storage for temporary storage of data during the savedown process. If you specify this field in your request, you must provide the <code>savedownStorageConfiguration</code> parameter.</p> </li> <li> <p>GATEWAY – A gateway cluster allows you to access data across processes in kdb systems. It allows you to create your own routing logic using the initialization scripts and custom code. This type of cluster does not require a writable local storage.</p> </li> </ul>'
        databases:
          allOf:
            - $ref: '#/components/schemas/KxDatabaseConfigurations'
            - description: ' A list of databases mounted on the cluster.'
        cacheStorageConfigurations:
          allOf:
            - $ref: '#/components/schemas/KxCacheStorageConfigurations'
            - description: 'The configurations for a read only cache storage associated with a cluster. This cache will be stored as an FSx Lustre that reads from the S3 store. '
        autoScalingConfiguration:
          allOf:
            - $ref: '#/components/schemas/AutoScalingConfiguration'
            - description: The configuration based on which FinSpace will scale in or scale out nodes in your cluster.
        clusterDescription:
          allOf:
            - $ref: '#/components/schemas/KxClusterDescription'
            - description: A description of the cluster.
        capacityConfiguration:
          allOf:
            - $ref: '#/components/schemas/CapacityConfiguration'
            - description: 'A structure for the metadata of a cluster. It includes information like the CPUs needed, memory of instances, number of instances, and the port used while establishing a connection.'
        releaseLabel:
          allOf:
            - $ref: '#/components/schemas/ReleaseLabel'
            - description: The version of FinSpace managed kdb to run.
        vpcConfiguration:
          allOf:
            - $ref: '#/components/schemas/VpcConfiguration'
            - description: Configuration details about the network where the Privatelink endpoint of the cluster resides.
        initializationScript:
          allOf:
            - $ref: '#/components/schemas/InitializationScriptFilePath'
            - description: 'Specifies a Q program that will be run at launch of a cluster. It is a relative path within <i>.zip</i> file that contains the custom code, which will be loaded on the cluster. It must include the file name itself. For example, <code>somedir/init.q</code>.'
        commandLineArguments:
          allOf:
            - $ref: '#/components/schemas/KxCommandLineArguments'
            - description: Defines key-value pairs to make them available inside the cluster.
        code:
          allOf:
            - $ref: '#/components/schemas/CodeConfiguration'
            - description: 'The details of the custom code that you want to use inside a cluster when analyzing a data. It consists of the S3 source bucket, location, S3 object version, and the relative path from where the custom code is loaded into the cluster. '
        executionRole:
          allOf:
            - $ref: '#/components/schemas/ExecutionRoleArn'
            - description: ' An IAM role that defines a set of permissions associated with a cluster. These permissions are assumed when a cluster attempts to access another cluster. '
        lastModifiedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The last time that the cluster was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        savedownStorageConfiguration:
          allOf:
            - $ref: '#/components/schemas/KxSavedownStorageConfiguration'
            - description: The size and type of the temporary storage that is used to hold data during the savedown process. This parameter is required when you choose <code>clusterType</code> as RDB. All the data written to this storage space is lost when the cluster node is restarted.
        azMode:
          allOf:
            - $ref: '#/components/schemas/KxAzMode'
            - description: <p>The number of availability zones you want to assign per cluster. This can be one of the following </p> <ul> <li> <p> <code>SINGLE</code> – Assigns one availability zone per cluster.</p> </li> <li> <p> <code>MULTI</code> – Assigns all the availability zones per cluster.</p> </li> </ul>
        availabilityZoneId:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneId'
            - description: ' The availability zone identifiers for the requested regions. '
        createdTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the cluster was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
    GetKxConnectionStringResponse:
      type: object
      properties:
        signedConnectionString:
          allOf:
            - $ref: '#/components/schemas/SignedKxConnectionString'
            - description: The signed connection string that you can use to connect to clusters.
    GetKxDatabaseResponse:
      type: object
      properties:
        databaseName:
          allOf:
            - $ref: '#/components/schemas/DatabaseName'
            - description: The name of the kdb database for which the information is retrieved.
        databaseArn:
          allOf:
            - $ref: '#/components/schemas/DatabaseArn'
            - description: The ARN identifier of the database.
        environmentId:
          allOf:
            - $ref: '#/components/schemas/EnvironmentId'
            - description: A unique identifier for the kdb environment.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description of the database.
        createdTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the database is created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        lastModifiedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The last time that the database was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        lastCompletedChangesetId:
          allOf:
            - $ref: '#/components/schemas/ChangesetId'
            - description: A unique identifier for the changeset.
        numBytes:
          allOf:
            - $ref: '#/components/schemas/numBytes'
            - description: The total number of bytes in the database.
        numChangesets:
          allOf:
            - $ref: '#/components/schemas/numChangesets'
            - description: The total number of changesets in the database.
        numFiles:
          allOf:
            - $ref: '#/components/schemas/numFiles'
            - description: The total number of files in the database.
    GetKxEnvironmentResponse:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/KxEnvironmentName'
            - description: The name of the kdb environment.
        environmentId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the kdb environment.
        awsAccountId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: The unique identifier of the AWS account that is used to create the kdb environment.
        status:
          allOf:
            - $ref: '#/components/schemas/EnvironmentStatus'
            - description: The status of the kdb environment.
        tgwStatus:
          allOf:
            - $ref: '#/components/schemas/tgwStatus'
            - description: The status of the network configuration.
        dnsStatus:
          allOf:
            - $ref: '#/components/schemas/dnsStatus'
            - description: The status of DNS configuration.
        errorMessage:
          allOf:
            - $ref: '#/components/schemas/EnvironmentErrorMessage'
            - description: Specifies the error message that appears if a flow fails.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description for the kdb environment.
        environmentArn:
          allOf:
            - $ref: '#/components/schemas/EnvironmentArn'
            - description: The ARN identifier of the environment.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: The KMS key ID to encrypt your data in the FinSpace environment.
        dedicatedServiceAccountId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the AWS environment infrastructure account.
        transitGatewayConfiguration:
          $ref: '#/components/schemas/TransitGatewayConfiguration'
        customDNSConfiguration:
          allOf:
            - $ref: '#/components/schemas/CustomDNSConfiguration'
            - description: A list of DNS server name and server IP. This is used to set up Route-53 outbound resolvers.
        creationTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the kdb environment was created in FinSpace. '
        updateTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the kdb environment was updated. '
        availabilityZoneIds:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneIds'
            - description: The identifier of the availability zones where subnets for the environment are created.
        certificateAuthorityArn:
          allOf:
            - $ref: '#/components/schemas/stringValueLength1to255'
            - description: The Amazon Resource Name (ARN) of the certificate authority of the kdb environment.
    GetKxUserResponse:
      type: object
      properties:
        userName:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the user.
        userArn:
          allOf:
            - $ref: '#/components/schemas/KxUserArn'
            - description: ' The Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see <a href="IAM/latest/UserGuide/reference_identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>. '
        environmentId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the kdb environment.
        iamRole:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: The IAM role ARN that is associated with the user.
    ListEnvironmentsResponse:
      type: object
      properties:
        environments:
          allOf:
            - $ref: '#/components/schemas/EnvironmentList'
            - description: A list of all of your FinSpace environments.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: A token that you can use in a subsequent call to retrieve the next set of results.
    ListKxChangesetsResponse:
      type: object
      properties:
        kxChangesets:
          allOf:
            - $ref: '#/components/schemas/KxChangesets'
            - description: A list of changesets for a database.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: A token that indicates where a results page should begin.
    ListKxClusterNodesResponse:
      type: object
      properties:
        nodes:
          allOf:
            - $ref: '#/components/schemas/KxNodeSummaries'
            - description: A list of nodes associated with the cluster.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: A token that indicates where a results page should begin.
    ListKxClustersResponse:
      type: object
      properties:
        kxClusterSummaries:
          allOf:
            - $ref: '#/components/schemas/KxClusters'
            - description: Lists the cluster details.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: A token that indicates where a results page should begin.
    ListKxDatabasesResponse:
      type: object
      properties:
        kxDatabases:
          allOf:
            - $ref: '#/components/schemas/KxDatabases'
            - description: A list of databases in the kdb environment.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: A token that indicates where a results page should begin.
    ListKxEnvironmentsResponse:
      type: object
      properties:
        environments:
          allOf:
            - $ref: '#/components/schemas/KxEnvironmentList'
            - description: A list of environments in an account.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: A token that indicates where a results page should begin.
    ListKxUsersResponse:
      type: object
      properties:
        users:
          allOf:
            - $ref: '#/components/schemas/KxUserList'
            - description: A list of users in a kdb environment.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: A token that indicates where a results page should begin.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: A list of all tags for a resource.
    InvalidRequestException: {}
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
      minLength: 1
      maxLength: 128
    UpdateEnvironmentResponse:
      type: object
      properties:
        environment:
          allOf:
            - $ref: '#/components/schemas/Environment'
            - description: Returns the FinSpace environment object.
    UpdateKxClusterDatabasesResponse:
      type: object
      properties: {}
    UpdateKxDatabaseResponse:
      type: object
      properties:
        databaseName:
          allOf:
            - $ref: '#/components/schemas/DatabaseName'
            - description: The name of the kdb database.
        environmentId:
          allOf:
            - $ref: '#/components/schemas/EnvironmentId'
            - description: A unique identifier for the kdb environment.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description of the database.
        lastModifiedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The last time that the database was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
    UpdateKxEnvironmentResponse:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/KxEnvironmentName'
            - description: The name of the kdb environment.
        environmentId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the kdb environment.
        awsAccountId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: The unique identifier of the AWS account that is used to create the kdb environment.
        status:
          allOf:
            - $ref: '#/components/schemas/EnvironmentStatus'
            - description: The status of the kdb environment.
        tgwStatus:
          allOf:
            - $ref: '#/components/schemas/tgwStatus'
            - description: The status of the network configuration.
        dnsStatus:
          allOf:
            - $ref: '#/components/schemas/dnsStatus'
            - description: The status of DNS configuration.
        errorMessage:
          allOf:
            - $ref: '#/components/schemas/EnvironmentErrorMessage'
            - description: Specifies the error message that appears if a flow fails.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the environment.
        environmentArn:
          allOf:
            - $ref: '#/components/schemas/EnvironmentArn'
            - description: The ARN identifier of the environment.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: The KMS key ID to encrypt your data in the FinSpace environment.
        dedicatedServiceAccountId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the AWS environment infrastructure account.
        transitGatewayConfiguration:
          $ref: '#/components/schemas/TransitGatewayConfiguration'
        customDNSConfiguration:
          allOf:
            - $ref: '#/components/schemas/CustomDNSConfiguration'
            - description: A list of DNS server name and server IP. This is used to set up Route-53 outbound resolvers.
        creationTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the kdb environment was created in FinSpace. '
        updateTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the kdb environment was updated. '
        availabilityZoneIds:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneIds'
            - description: The identifier of the availability zones where subnets for the environment are created.
    UpdateKxEnvironmentNetworkResponse:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/KxEnvironmentName'
            - description: The name of the kdb environment.
        environmentId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the kdb environment.
        awsAccountId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: The unique identifier of the AWS account that is used to create the kdb environment.
        status:
          allOf:
            - $ref: '#/components/schemas/EnvironmentStatus'
            - description: The status of the kdb environment.
        tgwStatus:
          allOf:
            - $ref: '#/components/schemas/tgwStatus'
            - description: The status of the network configuration.
        dnsStatus:
          allOf:
            - $ref: '#/components/schemas/dnsStatus'
            - description: The status of DNS configuration.
        errorMessage:
          allOf:
            - $ref: '#/components/schemas/EnvironmentErrorMessage'
            - description: Specifies the error message that appears if a flow fails.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the environment.
        environmentArn:
          allOf:
            - $ref: '#/components/schemas/EnvironmentArn'
            - description: The ARN identifier of the environment.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: The KMS key ID to encrypt your data in the FinSpace environment.
        dedicatedServiceAccountId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the AWS environment infrastructure account.
        transitGatewayConfiguration:
          $ref: '#/components/schemas/TransitGatewayConfiguration'
        customDNSConfiguration:
          allOf:
            - $ref: '#/components/schemas/CustomDNSConfiguration'
            - description: A list of DNS server name and server IP. This is used to set up Route-53 outbound resolvers.
        creationTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the kdb environment was created in FinSpace. '
        updateTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the kdb environment was updated. '
        availabilityZoneIds:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneIds'
            - description: The identifier of the availability zones where subnets for the environment are created.
    TransitGatewayID:
      type: string
      minLength: 1
      maxLength: 32
    ValidCIDRSpace:
      type: string
      pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/26$'
    CustomDNSServer:
      type: object
      required:
        - customDNSServerName
        - customDNSServerIP
      properties:
        customDNSServerName:
          allOf:
            - $ref: '#/components/schemas/ValidHostname'
            - description: The name of the DNS server.
        customDNSServerIP:
          allOf:
            - $ref: '#/components/schemas/ValidIPAddress'
            - description: The IP address of the DNS server.
      description: A list of DNS server name and server IP. This is used to set up Route-53 outbound resolvers.
    UpdateKxUserResponse:
      type: object
      properties:
        userName:
          allOf:
            - $ref: '#/components/schemas/KxUserNameString'
            - description: A unique identifier for the user.
        userArn:
          allOf:
            - $ref: '#/components/schemas/KxUserArn'
            - description: ' The Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see <a href="IAM/latest/UserGuide/reference_identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>. '
        environmentId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the kdb environment.
        iamRole:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: The IAM role ARN that is associated with the user.
    FederationAttributeValue:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1000
    AutoScalingConfiguration:
      type: object
      properties:
        minNodeCount:
          allOf:
            - $ref: '#/components/schemas/NodeCount'
            - description: 'The lowest number of nodes to scale. This value must be at least 1 and less than the <code>maxNodeCount</code>. If the nodes in a cluster belong to multiple availability zones, then <code>minNodeCount</code> must be at least 3.'
        maxNodeCount:
          allOf:
            - $ref: '#/components/schemas/NodeCount'
            - description: The highest number of nodes to scale. This value cannot be greater than 5.
        autoScalingMetric:
          allOf:
            - $ref: '#/components/schemas/AutoScalingMetric'
            - description: ' The metric your cluster will track in order to scale in and out. For example, <code>CPU_UTILIZATION_PERCENTAGE</code> is the average CPU usage across all the nodes in a cluster.'
        metricTarget:
          allOf:
            - $ref: '#/components/schemas/AutoScalingMetricTarget'
            - description: 'The desired value of the chosen <code>autoScalingMetric</code>. When the metric drops below this value, the cluster will scale in. When the metric goes above this value, the cluster will scale out. You can set the target value between 1 and 100 percent.'
        scaleInCooldownSeconds:
          allOf:
            - $ref: '#/components/schemas/CooldownTime'
            - description: The duration in seconds that FinSpace will wait after a scale in event before initiating another scaling event.
        scaleOutCooldownSeconds:
          allOf:
            - $ref: '#/components/schemas/CooldownTime'
            - description: The duration in seconds that FinSpace will wait after a scale out event before initiating another scaling event.
      description: 'The configuration based on which FinSpace will scale in or scale out nodes in your cluster. '
    AvailabilityZoneId:
      type: string
    AvailabilityZoneIds:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZoneId'
    BoxedInteger:
      type: integer
    CapacityConfiguration:
      type: object
      properties:
        nodeType:
          allOf:
            - $ref: '#/components/schemas/NodeType'
            - description: '<p>The type that determines the hardware of the host computer used for your cluster instance. Each node type offers different memory and storage capabilities. Choose a node type based on the requirements of the application or software that you plan to run on your instance.</p> <p>You can only specify one of the following values:</p> <ul> <li> <p> <code>kx.s.large</code> – The node type with a configuration of 12 GiB memory and 2 vCPUs.</p> </li> <li> <p> <code>kx.s.xlarge</code> – The node type with a configuration of 27 GiB memory and 4 vCPUs.</p> </li> <li> <p> <code>kx.s.2xlarge</code> – The node type with a configuration of 54 GiB memory and 8 vCPUs.</p> </li> <li> <p> <code>kx.s.4xlarge</code> – The node type with a configuration of 108 GiB memory and 16 vCPUs.</p> </li> <li> <p> <code>kx.s.8xlarge</code> – The node type with a configuration of 216 GiB memory and 32 vCPUs.</p> </li> <li> <p> <code>kx.s.16xlarge</code> – The node type with a configuration of 432 GiB memory and 64 vCPUs.</p> </li> <li> <p> <code>kx.s.32xlarge</code> – The node type with a configuration of 864 GiB memory and 128 vCPUs.</p> </li> </ul>'
        nodeCount:
          allOf:
            - $ref: '#/components/schemas/NodeCount'
            - description: The number of instances running in a cluster.
      description: 'A structure for the metadata of a cluster. It includes information like the CPUs needed, memory of instances, number of instances, and the port used while establishing a connection.'
    ChangeType:
      type: string
      enum:
        - PUT
        - DELETE
    S3Path:
      type: string
      pattern: '^s3:\/\/[a-z0-9][a-z0-9-]{1,61}[a-z0-9]\/([^\/]+\/)*[^\/]*$'
      minLength: 9
      maxLength: 1093
    DbPath:
      type: string
      pattern: '^\/([^\/]+\/){0,2}[^\/]*$'
      minLength: 1
      maxLength: 1025
    ChangeRequests:
      type: array
      items:
        $ref: '#/components/schemas/ChangeRequest'
      minItems: 1
      maxItems: 32
    ChangesetId:
      type: string
      minLength: 1
      maxLength: 26
    ChangesetStatus:
      type: string
      enum:
        - PENDING
        - PROCESSING
        - FAILED
        - COMPLETED
    ClientToken:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 36
    ClientTokenString:
      type: string
      pattern: '^[a-zA-Z0-9-]+$'
      minLength: 1
      maxLength: 64
    CodeConfiguration:
      type: object
      properties:
        s3Bucket:
          allOf:
            - $ref: '#/components/schemas/S3Bucket'
            - description: A unique name for the S3 bucket.
        s3Key:
          allOf:
            - $ref: '#/components/schemas/S3Key'
            - description: The full S3 path (excluding bucket) to the .zip file. This file contains the code that is loaded onto the cluster when it's started.
        s3ObjectVersion:
          allOf:
            - $ref: '#/components/schemas/S3ObjectVersion'
            - description: The version of an S3 object.
      description: The structure of the customer code available within the running cluster.
    EnvironmentName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$'
      minLength: 1
      maxLength: 255
    Description:
      type: string
      pattern: '^[a-zA-Z0-9. ]{1,1000}$'
      minLength: 1
      maxLength: 1000
    KmsKeyId:
      type: string
      pattern: '^[a-zA-Z-0-9-:\/]*$'
      minLength: 1
      maxLength: 1000
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    FederationMode:
      type: string
      enum:
        - FEDERATED
        - LOCAL
    FederationParameters:
      type: object
      properties:
        samlMetadataDocument:
          allOf:
            - $ref: '#/components/schemas/SamlMetadataDocument'
            - description: SAML 2.0 Metadata document from identity provider (IdP).
        samlMetadataURL:
          allOf:
            - $ref: '#/components/schemas/url'
            - description: Provide the metadata URL from your SAML 2.0 compliant identity provider (IdP).
        applicationCallBackURL:
          allOf:
            - $ref: '#/components/schemas/url'
            - description: The redirect or sign-in URL that should be entered into the SAML 2.0 compliant identity provider configuration (IdP).
        federationURN:
          allOf:
            - $ref: '#/components/schemas/urn'
            - description: The Uniform Resource Name (URN). Also referred as Service Provider URN or Audience URI or Service Provider Entity ID.
        federationProviderName:
          allOf:
            - $ref: '#/components/schemas/FederationProviderName'
            - description: Name of the identity provider (IdP).
        attributeMap:
          allOf:
            - $ref: '#/components/schemas/AttributeMap'
            - description: 'SAML attribute name and value. The name must always be <code>Email</code> and the value should be set to the attribute definition in which user email is set. For example, name would be <code>Email</code> and value <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress</code>. Please check your SAML 2.0 compliant identity provider (IdP) documentation for details.'
      description: Configuration information when authentication mode is FEDERATED.
    SuperuserParameters:
      type: object
      required:
        - emailAddress
        - firstName
        - lastName
      properties:
        emailAddress:
          allOf:
            - $ref: '#/components/schemas/EmailId'
            - description: The email address of the superuser.
        firstName:
          allOf:
            - $ref: '#/components/schemas/NameString'
            - description: The first name of the superuser.
        lastName:
          allOf:
            - $ref: '#/components/schemas/NameString'
            - description: The last name of the superuser.
      description: Configuration information for the superuser.
    DataBundleArns:
      type: array
      items:
        $ref: '#/components/schemas/DataBundleArn'
    CreateEnvironmentRequest:
      type: object
      required:
        - name
      title: CreateEnvironmentRequest
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/EnvironmentName'
            - description: The name of the FinSpace environment to be created.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the FinSpace environment to be created.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: The KMS key id to encrypt your data in the FinSpace environment.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: Add tags to your FinSpace environment.
        federationMode:
          allOf:
            - $ref: '#/components/schemas/FederationMode'
            - description: <p>Authentication mode for the environment.</p> <ul> <li> <p> <code>FEDERATED</code> - Users access FinSpace through Single Sign On (SSO) via your Identity provider.</p> </li> <li> <p> <code>LOCAL</code> - Users access FinSpace via email and password managed within the FinSpace environment.</p> </li> </ul>
        federationParameters:
          allOf:
            - $ref: '#/components/schemas/FederationParameters'
            - description: Configuration information when authentication mode is FEDERATED.
        superuserParameters:
          allOf:
            - $ref: '#/components/schemas/SuperuserParameters'
            - description: Configuration information for the superuser.
        dataBundles:
          allOf:
            - $ref: '#/components/schemas/DataBundleArns'
            - description: '<p>The list of Amazon Resource Names (ARN) of the data bundles to install. Currently supported data bundle ARNs:</p> <ul> <li> <p> <code>arn:aws:finspace:${Region}::data-bundle/capital-markets-sample</code> - Contains sample Capital Markets datasets, categories and controlled vocabularies.</p> </li> <li> <p> <code>arn:aws:finspace:${Region}::data-bundle/taq</code> (default) - Contains trades and quotes data in addition to sample Capital Markets data.</p> </li> </ul>'
    IdType:
      type: string
      pattern: '^[a-zA-Z0-9]{1,26}$'
      minLength: 1
      maxLength: 26
    EnvironmentArn:
      type: string
      pattern: '^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:environment/[0-9A-Za-z_-]{1,128}$'
      minLength: 20
      maxLength: 2048
    EnvironmentId:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 32
    DatabaseName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
      minLength: 3
      maxLength: 63
    CreateKxChangesetRequest:
      type: object
      required:
        - changeRequests
        - clientToken
      title: CreateKxChangesetRequest
      properties:
        changeRequests:
          allOf:
            - $ref: '#/components/schemas/ChangeRequests'
            - description: '<p>A list of change request objects that are run in order. A change request object consists of changeType , s3Path, and a dbPath. A changeType can has the following values: </p> <ul> <li> <p>PUT – Adds or updates files in a database.</p> </li> <li> <p>DELETE – Deletes files in a database.</p> </li> </ul> <p>All the change requests require a mandatory <i>dbPath</i> attribute that defines the path within the database directory. The <i>s3Path</i> attribute defines the s3 source file path and is required for a PUT change type.</p> <p>Here is an example of how you can use the change request object:</p> <p> <code>[ { "changeType": "PUT", "s3Path":"s3://bucket/db/2020.01.02/", "dbPath":"/2020.01.02/"}, { "changeType": "PUT", "s3Path":"s3://bucket/db/sym", "dbPath":"/"}, { "changeType": "DELETE", "dbPath": "/2020.01.01/"} ]</code> </p> <p>In this example, the first request with <i>PUT</i> change type allows you to add files in the given s3Path under the <i>2020.01.02</i> partition of the database. The second request with <i>PUT</i> change type allows you to add a single sym file at database root location. The last request with <i>DELETE</i> change type allows you to delete the files under the <i>2020.01.01</i> partition of the database. </p>'
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientTokenString'
            - description: A token that ensures idempotency. This token expires in 10 minutes.
    Timestamp:
      type: string
      format: date-time
    ErrorInfo:
      type: object
      properties:
        errorMessage:
          allOf:
            - $ref: '#/components/schemas/ErrorMessage'
            - description: 'Specifies the error message that appears if a flow fails. '
        errorType:
          allOf:
            - $ref: '#/components/schemas/ErrorDetails'
            - description: Specifies the type of error.
      description: 'Provides details in the event of a failed flow, including the error type and the related error message.'
    KxEnvironmentId:
      type: string
      pattern: '^[a-z0-9]+$'
      minLength: 1
      maxLength: 32
    KxClusterName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
      minLength: 3
      maxLength: 63
    KxClusterType:
      type: string
      enum:
        - HDB
        - RDB
        - GATEWAY
    KxDatabaseConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/KxDatabaseConfiguration'
    KxCacheStorageConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/KxCacheStorageConfiguration'
    KxClusterDescription:
      type: string
      pattern: '^[a-zA-Z0-9\_\-\.\s]+$'
      minLength: 1
      maxLength: 1000
    ReleaseLabel:
      type: string
      pattern: '^[a-zA-Z0-9._-]+'
      minLength: 1
      maxLength: 16
    VpcConfiguration:
      type: object
      properties:
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcIdString'
            - description: The identifier of the VPC endpoint.
        securityGroupIds:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupIdList'
            - description: The unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.
        subnetIds:
          allOf:
            - $ref: '#/components/schemas/SubnetIdList'
            - description: The identifier of the subnet that the Privatelink VPC endpoint uses to connect to the cluster.
        ipAddressType:
          allOf:
            - $ref: '#/components/schemas/IPAddressType'
            - description: '<p>The IP address type for cluster network configuration parameters. The following type is available:</p> <ul> <li> <p>IP_V4 – IP address version 4</p> </li> </ul>'
      description: Configuration details about the network where the Privatelink endpoint of the cluster resides.
    InitializationScriptFilePath:
      type: string
      pattern: '^[a-zA-Z0-9\_\-\.\/\\]+$'
      minLength: 1
      maxLength: 255
    KxCommandLineArguments:
      type: array
      items:
        $ref: '#/components/schemas/KxCommandLineArgument'
    ExecutionRoleArn:
      type: string
      pattern: '^arn:aws[a-z0-9-]*:iam::\d{12}:role\/[\w-\/.@+=,]{1,1017}$'
      minLength: 1
      maxLength: 1024
    KxSavedownStorageConfiguration:
      type: object
      required:
        - type
        - size
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/KxSavedownStorageType'
            - description: '<p>The type of writeable storage space for temporarily storing your savedown data. The valid values are:</p> <ul> <li> <p>SDS01 – This type represents 3000 IOPS and io2 ebs volume type.</p> </li> </ul>'
        size:
          allOf:
            - $ref: '#/components/schemas/KxSavedownStorageSize'
            - description: The size of temporary storage in bytes.
      description: The size and type of temporary storage that is used to hold data during the savedown process. All the data written to this storage space is lost when the cluster node is restarted.
    KxAzMode:
      type: string
      enum:
        - SINGLE
        - MULTI
    CreateKxClusterRequest:
      type: object
      required:
        - clusterName
        - clusterType
        - capacityConfiguration
        - releaseLabel
        - azMode
      title: CreateKxClusterRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: A token that ensures idempotency. This token expires in 10 minutes.
        clusterName:
          allOf:
            - $ref: '#/components/schemas/KxClusterName'
            - description: A unique name for the cluster that you want to create.
        clusterType:
          allOf:
            - $ref: '#/components/schemas/KxClusterType'
            - description: '<p>Specifies the type of KDB database that is being created. The following types are available: </p> <ul> <li> <p>HDB – A Historical Database. The data is only accessible with read-only permissions from one of the FinSpace managed kdb databases mounted to the cluster.</p> </li> <li> <p>RDB – A Realtime Database. This type of database captures all the data from a ticker plant and stores it in memory until the end of day, after which it writes all of its data to a disk and reloads the HDB. This cluster type requires local storage for temporary storage of data during the savedown process. If you specify this field in your request, you must provide the <code>savedownStorageConfiguration</code> parameter.</p> </li> <li> <p>GATEWAY – A gateway cluster allows you to access data across processes in kdb systems. It allows you to create your own routing logic using the initialization scripts and custom code. This type of cluster does not require a writable local storage.</p> </li> </ul>'
        databases:
          allOf:
            - $ref: '#/components/schemas/KxDatabaseConfigurations'
            - description: A list of databases that will be available for querying.
        cacheStorageConfigurations:
          allOf:
            - $ref: '#/components/schemas/KxCacheStorageConfigurations'
            - description: 'The configurations for a read only cache storage associated with a cluster. This cache will be stored as an FSx Lustre that reads from the S3 store. '
        autoScalingConfiguration:
          allOf:
            - $ref: '#/components/schemas/AutoScalingConfiguration'
            - description: The configuration based on which FinSpace will scale in or scale out nodes in your cluster.
        clusterDescription:
          allOf:
            - $ref: '#/components/schemas/KxClusterDescription'
            - description: A description of the cluster.
        capacityConfiguration:
          allOf:
            - $ref: '#/components/schemas/CapacityConfiguration'
            - description: 'A structure for the metadata of a cluster. It includes information about like the CPUs needed, memory of instances, number of instances, and the port used while establishing a connection.'
        releaseLabel:
          allOf:
            - $ref: '#/components/schemas/ReleaseLabel'
            - description: The version of FinSpace managed kdb to run.
        vpcConfiguration:
          allOf:
            - $ref: '#/components/schemas/VpcConfiguration'
            - description: Configuration details about the network where the Privatelink endpoint of the cluster resides.
        initializationScript:
          allOf:
            - $ref: '#/components/schemas/InitializationScriptFilePath'
            - description: 'Specifies a Q program that will be run at launch of a cluster. It is a relative path within <i>.zip</i> file that contains the custom code, which will be loaded on the cluster. It must include the file name itself. For example, <code>somedir/init.q</code>.'
        commandLineArguments:
          allOf:
            - $ref: '#/components/schemas/KxCommandLineArguments'
            - description: Defines the key-value pairs to make them available inside the cluster.
        code:
          allOf:
            - $ref: '#/components/schemas/CodeConfiguration'
            - description: 'The details of the custom code that you want to use inside a cluster when analyzing a data. It consists of the S3 source bucket, location, S3 object version, and the relative path from where the custom code is loaded into the cluster. '
        executionRole:
          allOf:
            - $ref: '#/components/schemas/ExecutionRoleArn'
            - description: An IAM role that defines a set of permissions associated with a cluster. These permissions are assumed when a cluster attempts to access another cluster.
        savedownStorageConfiguration:
          allOf:
            - $ref: '#/components/schemas/KxSavedownStorageConfiguration'
            - description: The size and type of the temporary storage that is used to hold data during the savedown process. This parameter is required when you choose <code>clusterType</code> as RDB. All the data written to this storage space is lost when the cluster node is restarted.
        azMode:
          allOf:
            - $ref: '#/components/schemas/KxAzMode'
            - description: <p>The number of availability zones you want to assign per cluster. This can be one of the following </p> <ul> <li> <p> <code>SINGLE</code> – Assigns one availability zone per cluster.</p> </li> <li> <p> <code>MULTI</code> – Assigns all the availability zones per cluster.</p> </li> </ul>
        availabilityZoneId:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneId'
            - description: The availability zone identifiers for the requested regions.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: A list of key-value pairs to label the cluster. You can add up to 50 tags to a cluster.
    KxClusterStatus:
      type: string
      enum:
        - PENDING
        - CREATING
        - CREATE_FAILED
        - RUNNING
        - UPDATING
        - DELETING
        - DELETED
        - DELETE_FAILED
    KxClusterStatusReason:
      type: string
      pattern: '^[a-zA-Z0-9\_\-\.\s]+$'
      minLength: 1
      maxLength: 250
    CreateKxDatabaseRequest:
      type: object
      required:
        - databaseName
        - clientToken
      title: CreateKxDatabaseRequest
      properties:
        databaseName:
          allOf:
            - $ref: '#/components/schemas/DatabaseName'
            - description: The name of the kdb database.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description of the database.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: A list of key-value pairs to label the kdb database. You can add up to 50 tags to your kdb database
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientTokenString'
            - description: A token that ensures idempotency. This token expires in 10 minutes.
    DatabaseArn:
      type: string
    KxEnvironmentName:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$'
      minLength: 3
      maxLength: 63
    KmsKeyARN:
      type: string
      pattern: '^arn:aws:kms:.*:\d+:.*$'
      minLength: 1
      maxLength: 1000
    CreateKxEnvironmentRequest:
      type: object
      required:
        - name
        - kmsKeyId
      title: CreateKxEnvironmentRequest
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/KxEnvironmentName'
            - description: The name of the kdb environment that you want to create.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description for the kdb environment.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyARN'
            - description: The KMS key ID to encrypt your data in the FinSpace environment.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: A list of key-value pairs to label the kdb environment. You can add up to 50 tags to your kdb environment.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: A token that ensures idempotency. This token expires in 10 minutes.
    EnvironmentStatus:
      type: string
      enum:
        - CREATE_REQUESTED
        - CREATING
        - CREATED
        - DELETE_REQUESTED
        - DELETING
        - DELETED
        - FAILED_CREATION
        - RETRY_DELETION
        - FAILED_DELETION
        - UPDATE_NETWORK_REQUESTED
        - UPDATING_NETWORK
        - FAILED_UPDATING_NETWORK
        - SUSPENDED
    KxUserNameString:
      type: string
      pattern: '^[0-9A-Za-z_-]{1,50}$'
      minLength: 1
      maxLength: 50
    RoleArn:
      type: string
      pattern: '^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
      minLength: 20
      maxLength: 2048
    CreateKxUserRequest:
      type: object
      required:
        - userName
        - iamRole
      title: CreateKxUserRequest
      properties:
        userName:
          allOf:
            - $ref: '#/components/schemas/KxUserNameString'
            - description: A unique identifier for the user.
        iamRole:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: The IAM role ARN that will be associated with the user.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: A list of key-value pairs to label the user. You can add up to 50 tags to a user.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: A token that ensures idempotency. This token expires in 10 minutes.
    KxUserArn:
      type: string
      pattern: '^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:kxEnvironment/[0-9A-Za-z_-]{1,128}/kxUser/[0-9A-Za-z_-]{1,128}$'
      minLength: 20
      maxLength: 2048
    CustomDNSConfiguration:
      type: array
      items:
        $ref: '#/components/schemas/CustomDNSServer'
    ValidHostname:
      type: string
      pattern: '^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$'
      minLength: 3
      maxLength: 255
    ValidIPAddress:
      type: string
      pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
    DbPaths:
      type: array
      items:
        $ref: '#/components/schemas/DbPath'
    DeleteEnvironmentRequest:
      type: object
      title: DeleteEnvironmentRequest
      properties: {}
    DeleteKxClusterRequest:
      type: object
      title: DeleteKxClusterRequest
      properties: {}
    DeleteKxDatabaseRequest:
      type: object
      title: DeleteKxDatabaseRequest
      properties: {}
    DeleteKxEnvironmentRequest:
      type: object
      title: DeleteKxEnvironmentRequest
      properties: {}
    DeleteKxUserRequest:
      type: object
      title: DeleteKxUserRequest
      properties: {}
    SmsDomainUrl:
      type: string
      pattern: '^[a-zA-Z-0-9-:\/.]*$'
      minLength: 1
      maxLength: 1000
    Environment:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/EnvironmentName'
            - description: The name of the FinSpace environment.
        environmentId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: The identifier of the FinSpace environment.
        awsAccountId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: The ID of the AWS account in which the FinSpace environment is created.
        status:
          allOf:
            - $ref: '#/components/schemas/EnvironmentStatus'
            - description: The current status of creation of the FinSpace environment.
        environmentUrl:
          allOf:
            - $ref: '#/components/schemas/url'
            - description: The sign-in URL for the web application of your FinSpace environment.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the FinSpace environment.
        environmentArn:
          allOf:
            - $ref: '#/components/schemas/EnvironmentArn'
            - description: The Amazon Resource Name (ARN) of your FinSpace environment.
        sageMakerStudioDomainUrl:
          allOf:
            - $ref: '#/components/schemas/SmsDomainUrl'
            - description: The URL of the integrated FinSpace notebook environment in your web application.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: The KMS key id used to encrypt in the FinSpace environment.
        dedicatedServiceAccountId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: The AWS account ID of the dedicated service account associated with your FinSpace environment.
        federationMode:
          allOf:
            - $ref: '#/components/schemas/FederationMode'
            - description: The authentication mode for the environment.
        federationParameters:
          allOf:
            - $ref: '#/components/schemas/FederationParameters'
            - description: Configuration information when authentication mode is FEDERATED.
      description: Represents an FinSpace environment.
    EnvironmentErrorMessage:
      type: string
      pattern: '^[a-zA-Z0-9. ]{1,1000}$'
      minLength: 0
      maxLength: 1000
    EnvironmentList:
      type: array
      items:
        $ref: '#/components/schemas/Environment'
    ErrorDetails:
      type: string
      enum:
        - The inputs to this request are invalid.
        - Service limits have been exceeded.
        - Missing required permission to perform this request.
        - One or more inputs to this request were not found.
        - The system temporarily lacks sufficient resources to process the request.
        - An internal error has occurred.
        - Cancelled
        - A user recoverable error has occurred
    ErrorMessage:
      type: string
      maxLength: 1000
    FederationAttributeKey:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 32
    FinSpaceTaggableArn:
      type: string
      pattern: '^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\d+:(environment|kxEnvironment)/[0-9A-Za-z_-]{1,128}(/(kxDatabase|kxCluster|kxUser)/[a-zA-Z0-9_-]{1,255})?$'
      minLength: 20
      maxLength: 2048
    GetEnvironmentRequest:
      type: object
      title: GetEnvironmentRequest
      properties: {}
    GetKxChangesetRequest:
      type: object
      title: GetKxChangesetRequest
      properties: {}
    GetKxClusterRequest:
      type: object
      title: GetKxClusterRequest
      properties: {}
    GetKxConnectionStringRequest:
      type: object
      title: GetKxConnectionStringRequest
      properties: {}
    SignedKxConnectionString:
      type: string
      pattern: '^(:|:tcps:\/\/)[a-zA-Z0-9-\.\_]+:\d+:[a-zA-Z0-9-\.\_]+:\S+$'
      minLength: 1
      maxLength: 2048
      format: password
    GetKxDatabaseRequest:
      type: object
      title: GetKxDatabaseRequest
      properties: {}
    numBytes:
      type: integer
    numChangesets:
      type: integer
    numFiles:
      type: integer
    GetKxEnvironmentRequest:
      type: object
      title: GetKxEnvironmentRequest
      properties: {}
    tgwStatus:
      type: string
      enum:
        - NONE
        - UPDATE_REQUESTED
        - UPDATING
        - FAILED_UPDATE
        - SUCCESSFULLY_UPDATED
    dnsStatus:
      type: string
      enum:
        - NONE
        - UPDATE_REQUESTED
        - UPDATING
        - FAILED_UPDATE
        - SUCCESSFULLY_UPDATED
    TransitGatewayConfiguration:
      type: object
      required:
        - transitGatewayID
        - routableCIDRSpace
      properties:
        transitGatewayID:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayID'
            - description: The identifier of the transit gateway created by the customer to connect outbound traffics from kdb network to your internal network.
        routableCIDRSpace:
          allOf:
            - $ref: '#/components/schemas/ValidCIDRSpace'
            - description: 'The routing CIDR on behalf of kdb environment. It could be any "/26 range in the 100.64.0.0 CIDR space. After providing, it will be added to the customer''s transit gateway routing table so that the traffics could be routed to kdb network.'
      description: The structure of the transit gateway and network configuration that is used to connect the kdb environment to an internal network.
    stringValueLength1to255:
      type: string
      minLength: 1
      maxLength: 255
    GetKxUserRequest:
      type: object
      title: GetKxUserRequest
      properties: {}
    KxCacheStorageType:
      type: string
      minLength: 8
      maxLength: 10
    KxCacheStorageSize:
      type: integer
      minimum: 1200
      maximum: 33600
    KxChangesetListEntry:
      type: object
      properties:
        changesetId:
          allOf:
            - $ref: '#/components/schemas/ChangesetId'
            - description: A unique identifier for the changeset.
        createdTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the changeset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        activeFromTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'Beginning time from which the changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        lastModifiedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the changeset was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        status:
          allOf:
            - $ref: '#/components/schemas/ChangesetStatus'
            - description: <p> Status of the changeset.</p> <ul> <li> <p>Pending – Changeset creation is pending.</p> </li> <li> <p>Processing – Changeset creation is running.</p> </li> <li> <p>Failed – Changeset creation has failed.</p> </li> <li> <p>Complete – Changeset creation has succeeded.</p> </li> </ul>
      description: Details of changeset.
    KxChangesets:
      type: array
      items:
        $ref: '#/components/schemas/KxChangesetListEntry'
    KxCluster:
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/KxClusterStatus'
            - description: <p>The status of a cluster.</p> <ul> <li> <p>PENDING – The cluster is pending creation.</p> </li> <li> <p>CREATING –The cluster creation process is in progress.</p> </li> <li> <p>CREATE_FAILED– The cluster creation process has failed.</p> </li> <li> <p>RUNNING – The cluster creation process is running.</p> </li> <li> <p>UPDATING – The cluster is in the process of being updated.</p> </li> <li> <p> DELETING – The cluster is in the process of being deleted.</p> </li> <li> <p>DELETED – The cluster has been deleted.</p> </li> <li> <p>DELETE_FAILED – The cluster failed to delete.</p> </li> </ul>
        statusReason:
          allOf:
            - $ref: '#/components/schemas/KxClusterStatusReason'
            - description: 'The error message when a failed state occurs. '
        clusterName:
          allOf:
            - $ref: '#/components/schemas/KxClusterName'
            - description: A unique name for the cluster.
        clusterType:
          allOf:
            - $ref: '#/components/schemas/KxClusterType'
            - description: '<p>Specifies the type of KDB database that is being created. The following types are available: </p> <ul> <li> <p>HDB – A Historical Database. The data is only accessible with read-only permissions from one of the FinSpace managed kdb databases mounted to the cluster.</p> </li> <li> <p>RDB – A Realtime Database. This type of database captures all the data from a ticker plant and stores it in memory until the end of day, after which it writes all of its data to a disk and reloads the HDB. This cluster type requires local storage for temporary storage of data during the savedown process. If you specify this field in your request, you must provide the <code>savedownStorageConfiguration</code> parameter.</p> </li> <li> <p>GATEWAY – A gateway cluster allows you to access data across processes in kdb systems. It allows you to create your own routing logic using the initialization scripts and custom code. This type of cluster does not require a writable local storage.</p> </li> </ul>'
        clusterDescription:
          allOf:
            - $ref: '#/components/schemas/KxClusterDescription'
            - description: A description of the cluster.
        releaseLabel:
          allOf:
            - $ref: '#/components/schemas/ReleaseLabel'
            - description: A version of the FinSpace managed kdb to run.
        initializationScript:
          allOf:
            - $ref: '#/components/schemas/InitializationScriptFilePath'
            - description: 'Specifies a Q program that will be run at launch of a cluster. It is a relative path within <i>.zip</i> file that contains the custom code, which will be loaded on the cluster. It must include the file name itself. For example, <code>somedir/init.q</code>.'
        executionRole:
          allOf:
            - $ref: '#/components/schemas/ExecutionRoleArn'
            - description: ' An IAM role that defines a set of permissions associated with a cluster. These permissions are assumed when a cluster attempts to access another cluster. '
        azMode:
          allOf:
            - $ref: '#/components/schemas/KxAzMode'
            - description: <p>The number of availability zones assigned per cluster. This can be one of the following </p> <ul> <li> <p> <code>SINGLE</code> – Assigns one availability zone per cluster.</p> </li> <li> <p> <code>MULTI</code> – Assigns all the availability zones per cluster.</p> </li> </ul>
        availabilityZoneId:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneId'
            - description: ' The availability zone identifiers for the requested regions. '
        lastModifiedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The last time that the cluster was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        createdTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the cluster was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
      description: The details of a kdb cluster.
    KxClusterNodeIdString:
      type: string
      minLength: 1
      maxLength: 40
    KxClusters:
      type: array
      items:
        $ref: '#/components/schemas/KxCluster'
    KxCommandLineArgumentKey:
      type: string
      pattern: '^(?![Aa][Ww][Ss])(s|([a-zA-Z][a-zA-Z0-9_]+))'
      minLength: 1
      maxLength: 50
    KxCommandLineArgumentValue:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9_:.]*'
      minLength: 1
      maxLength: 50
    KxDatabaseCacheConfiguration:
      type: object
      required:
        - cacheType
        - dbPaths
      properties:
        cacheType:
          allOf:
            - $ref: '#/components/schemas/KxCacheStorageType'
            - description: '<p>The type of disk cache. This parameter is used to map the database path to cache storage. The valid values are:</p> <ul> <li> <p>CACHE_1000 – This type provides at least 1000 MB/s disk access throughput. </p> </li> </ul>'
        dbPaths:
          allOf:
            - $ref: '#/components/schemas/DbPaths'
            - description: Specifies the portions of database that will be loaded into the cache for access.
      description: The structure of database cache configuration that is used for mapping database paths to cache types in clusters.
    KxDatabaseCacheConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/KxDatabaseCacheConfiguration'
    KxDatabaseListEntry:
      type: object
      properties:
        databaseName:
          allOf:
            - $ref: '#/components/schemas/DatabaseName'
            - description: The name of the kdb database.
        createdTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the database was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        lastModifiedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The last time that the database was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
      description: Details about a FinSpace managed kdb database
    KxDatabases:
      type: array
      items:
        $ref: '#/components/schemas/KxDatabaseListEntry'
    KxEnvironment:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/KxEnvironmentName'
            - description: The name of the kdb environment.
        environmentId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the kdb environment.
        awsAccountId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: The unique identifier of the AWS account in which you create the kdb environment.
        status:
          allOf:
            - $ref: '#/components/schemas/EnvironmentStatus'
            - description: '<p>The status of the environment creation. </p> <ul> <li> <p>CREATE_REQUESTED – Environment creation has been requested.</p> </li> <li> <p>CREATING – Environment is in the process of being created.</p> </li> <li> <p>FAILED_CREATION – Environment creation has failed.</p> </li> <li> <p>CREATED – Environment is successfully created and is currently active.</p> </li> <li> <p>DELETE REQUESTED – Environment deletion has been requested.</p> </li> <li> <p>DELETING – Environment is in the process of being deleted.</p> </li> <li> <p>RETRY_DELETION – Initial environment deletion failed, system is reattempting delete.</p> </li> <li> <p>DELETED – Environment has been deleted.</p> </li> <li> <p>FAILED_DELETION – Environment deletion has failed.</p> </li> </ul>'
        tgwStatus:
          allOf:
            - $ref: '#/components/schemas/tgwStatus'
            - description: The status of the network configuration.
        dnsStatus:
          allOf:
            - $ref: '#/components/schemas/dnsStatus'
            - description: The status of DNS configuration.
        errorMessage:
          allOf:
            - $ref: '#/components/schemas/EnvironmentErrorMessage'
            - description: 'Specifies the error message that appears if a flow fails. '
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description of the kdb environment.
        environmentArn:
          allOf:
            - $ref: '#/components/schemas/EnvironmentArn'
            - description: The Amazon Resource Name (ARN) of your kdb environment.
        kmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: The unique identifier of the KMS key.
        dedicatedServiceAccountId:
          allOf:
            - $ref: '#/components/schemas/IdType'
            - description: A unique identifier for the AWS environment infrastructure account.
        transitGatewayConfiguration:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConfiguration'
            - description: Specifies the transit gateway and network configuration to connect the kdb environment to an internal network.
        customDNSConfiguration:
          allOf:
            - $ref: '#/components/schemas/CustomDNSConfiguration'
            - description: A list of DNS server name and server IP. This is used to set up Route-53 outbound resolvers.
        creationTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the kdb environment was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        updateTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the kdb environment was modified in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
        availabilityZoneIds:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneIds'
            - description: The identifier of the availability zones where subnets for the environment are created.
        certificateAuthorityArn:
          allOf:
            - $ref: '#/components/schemas/stringValueLength1to255'
            - description: 'The Amazon Resource Name (ARN) of the certificate authority:'
      description: The details of a kdb environment.
    KxEnvironmentList:
      type: array
      items:
        $ref: '#/components/schemas/KxEnvironment'
    KxNode:
      type: object
      properties:
        nodeId:
          allOf:
            - $ref: '#/components/schemas/KxClusterNodeIdString'
            - description: A unique identifier for the node.
        availabilityZoneId:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneId'
            - description: The identifier of the availability zones where subnets for the environment are created.
        launchTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The time when a particular node is started. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.'
      description: A structure that stores metadata for a kdb node.
    KxNodeSummaries:
      type: array
      items:
        $ref: '#/components/schemas/KxNode'
    KxUser:
      type: object
      properties:
        userArn:
          allOf:
            - $ref: '#/components/schemas/KxUserArn'
            - description: ' The Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see <a href="IAM/latest/UserGuide/reference_identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>. '
        userName:
          allOf:
            - $ref: '#/components/schemas/KxUserNameString'
            - description: A unique identifier for the user.
        iamRole:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: The IAM role ARN that is associated with the user.
        createTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the kdb user was created. '
        updateTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The timestamp at which the kdb user was updated. '
      description: A structure that stores metadata for a kdb user.
    KxUserList:
      type: array
      items:
        $ref: '#/components/schemas/KxUser'
    PaginationToken:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1000
    ResultLimit:
      type: integer
      minimum: 0
      maximum: 100
    ListEnvironmentsRequest:
      type: object
      title: ListEnvironmentsRequest
      properties: {}
    MaxResults:
      type: integer
      minimum: 0
      maximum: 100
    ListKxChangesetsRequest:
      type: object
      title: ListKxChangesetsRequest
      properties: {}
    ListKxClusterNodesRequest:
      type: object
      title: ListKxClusterNodesRequest
      properties: {}
    ListKxClustersRequest:
      type: object
      title: ListKxClustersRequest
      properties: {}
    ListKxDatabasesRequest:
      type: object
      title: ListKxDatabasesRequest
      properties: {}
    ListKxEnvironmentsRequest:
      type: object
      title: ListKxEnvironmentsRequest
      properties: {}
    ListKxUsersRequest:
      type: object
      title: ListKxUsersRequest
      properties: {}
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    SecurityGroupIdString:
      type: string
      pattern: '^sg-([a-z0-9]{8}$|[a-z0-9]{17}$)'
      minLength: 1
      maxLength: 1024
    SubnetIdString:
      type: string
      pattern: '^subnet-([a-z0-9]{8}$|[a-z0-9]{17}$)'
      minLength: 1
      maxLength: 1024
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: One or more tags to be assigned to the resource.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateEnvironmentRequest:
      type: object
      title: UpdateEnvironmentRequest
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/EnvironmentName'
            - description: The name of the environment.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the environment.
        federationMode:
          allOf:
            - $ref: '#/components/schemas/FederationMode'
            - description: <p>Authentication mode for the environment.</p> <ul> <li> <p> <code>FEDERATED</code> - Users access FinSpace through Single Sign On (SSO) via your Identity provider.</p> </li> <li> <p> <code>LOCAL</code> - Users access FinSpace via email and password managed within the FinSpace environment.</p> </li> </ul>
        federationParameters:
          $ref: '#/components/schemas/FederationParameters'
    UpdateKxClusterDatabasesRequest:
      type: object
      required:
        - databases
      title: UpdateKxClusterDatabasesRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientTokenString'
            - description: A token that ensures idempotency. This token expires in 10 minutes.
        databases:
          allOf:
            - $ref: '#/components/schemas/KxDatabaseConfigurations'
            - description: ' The structure of databases mounted on the cluster.'
    UpdateKxDatabaseRequest:
      type: object
      required:
        - clientToken
      title: UpdateKxDatabaseRequest
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description of the database.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientTokenString'
            - description: A token that ensures idempotency. This token expires in 10 minutes.
    UpdateKxEnvironmentNetworkRequest:
      type: object
      title: UpdateKxEnvironmentNetworkRequest
      properties:
        transitGatewayConfiguration:
          allOf:
            - $ref: '#/components/schemas/TransitGatewayConfiguration'
            - description: Specifies the transit gateway and network configuration to connect the kdb environment to an internal network.
        customDNSConfiguration:
          allOf:
            - $ref: '#/components/schemas/CustomDNSConfiguration'
            - description: A list of DNS server name and server IP. This is used to set up Route-53 outbound resolvers.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: A token that ensures idempotency. This token expires in 10 minutes.
    UpdateKxEnvironmentRequest:
      type: object
      title: UpdateKxEnvironmentRequest
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/KxEnvironmentName'
            - description: The name of the kdb environment.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description of the kdb environment.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: A token that ensures idempotency. This token expires in 10 minutes.
    UpdateKxUserRequest:
      type: object
      required:
        - iamRole
      title: UpdateKxUserRequest
      properties:
        iamRole:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: The IAM role ARN that is associated with the user.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: A token that ensures idempotency. This token expires in 10 minutes.
security:
  - hmac: []
