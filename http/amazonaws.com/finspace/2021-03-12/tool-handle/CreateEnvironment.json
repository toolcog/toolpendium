{
  "name": "CreateEnvironment",
  "description": "Create a new FinSpace environment.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "description": "The name of the FinSpace environment to be created.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$",
            "minLength": 1,
            "maxLength": 255
          },
          "description": {
            "description": "The description of the FinSpace environment to be created.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9. ]{1,1000}$",
            "minLength": 1,
            "maxLength": 1000
          },
          "kmsKeyId": {
            "description": "The KMS key id to encrypt your data in the FinSpace environment.",
            "type": "string",
            "pattern": "^[a-zA-Z-0-9-:\\/]*$",
            "minLength": 1,
            "maxLength": 1000
          },
          "tags": {
            "description": "Add tags to your FinSpace environment.",
            "type": "object",
            "minProperties": 1,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "federationMode": {
            "description": "<p>Authentication mode for the environment.</p> <ul> <li> <p> <code>FEDERATED</code> - Users access FinSpace through Single Sign On (SSO) via your Identity provider.</p> </li> <li> <p> <code>LOCAL</code> - Users access FinSpace via email and password managed within the FinSpace environment.</p> </li> </ul>",
            "type": "string",
            "enum": [
              "FEDERATED",
              "LOCAL"
            ]
          },
          "federationParameters": {
            "description": "Configuration information when authentication mode is FEDERATED.",
            "type": "object",
            "properties": {
              "samlMetadataDocument": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SamlMetadataDocument"
                  },
                  {
                    "description": "SAML 2.0 Metadata document from identity provider (IdP)."
                  }
                ]
              },
              "samlMetadataURL": {
                "allOf": [
                  {
                    "$ref": "#/$defs/url"
                  },
                  {
                    "description": "Provide the metadata URL from your SAML 2.0 compliant identity provider (IdP)."
                  }
                ]
              },
              "applicationCallBackURL": {
                "allOf": [
                  {
                    "$ref": "#/$defs/url"
                  },
                  {
                    "description": "The redirect or sign-in URL that should be entered into the SAML 2.0 compliant identity provider configuration (IdP)."
                  }
                ]
              },
              "federationURN": {
                "allOf": [
                  {
                    "$ref": "#/$defs/urn"
                  },
                  {
                    "description": "The Uniform Resource Name (URN). Also referred as Service Provider URN or Audience URI or Service Provider Entity ID."
                  }
                ]
              },
              "federationProviderName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FederationProviderName"
                  },
                  {
                    "description": "Name of the identity provider (IdP)."
                  }
                ]
              },
              "attributeMap": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AttributeMap"
                  },
                  {
                    "description": "SAML attribute name and value. The name must always be <code>Email</code> and the value should be set to the attribute definition in which user email is set. For example, name would be <code>Email</code> and value <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress</code>. Please check your SAML 2.0 compliant identity provider (IdP) documentation for details."
                  }
                ]
              }
            }
          },
          "superuserParameters": {
            "description": "Configuration information for the superuser.",
            "type": "object",
            "properties": {
              "emailAddress": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EmailId"
                  },
                  {
                    "description": "The email address of the superuser."
                  }
                ]
              },
              "firstName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NameString"
                  },
                  {
                    "description": "The first name of the superuser."
                  }
                ]
              },
              "lastName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NameString"
                  },
                  {
                    "description": "The last name of the superuser."
                  }
                ]
              }
            }
          },
          "dataBundles": {
            "description": "<p>The list of Amazon Resource Names (ARN) of the data bundles to install. Currently supported data bundle ARNs:</p> <ul> <li> <p> <code>arn:aws:finspace:${Region}::data-bundle/capital-markets-sample</code> - Contains sample Capital Markets datasets, categories and controlled vocabularies.</p> </li> <li> <p> <code>arn:aws:finspace:${Region}::data-bundle/taq</code> (default) - Contains trades and quotes data in addition to sample Capital Markets data.</p> </li> </ul>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/DataBundleArn"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "TagValue": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9+-=._:@ ]+$",
        "minLength": 1,
        "maxLength": 256
      },
      "SamlMetadataDocument": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1000,
        "maxLength": 10000000
      },
      "url": {
        "type": "string",
        "pattern": "^https?://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
        "minLength": 1,
        "maxLength": 1000
      },
      "urn": {
        "type": "string",
        "pattern": "^[A-Za-z0-9._\\-:\\/#\\+]+$",
        "minLength": 1,
        "maxLength": 255
      },
      "FederationProviderName": {
        "type": "string",
        "pattern": "[^_\\p{Z}][\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}][^_\\p{Z}]+",
        "minLength": 1,
        "maxLength": 32
      },
      "AttributeMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/FederationAttributeValue"
        }
      },
      "FederationAttributeValue": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 1000
      },
      "EmailId": {
        "type": "string",
        "pattern": "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+[.]+[A-Za-z]+",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "NameString": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]{1,50}$",
        "minLength": 1,
        "maxLength": 50
      },
      "DataBundleArn": {
        "type": "string",
        "pattern": "^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\\d*:data-bundle/[0-9A-Za-z_-]{1,128}$",
        "description": "The Amazon Resource Name (ARN) of the data bundle.",
        "minLength": 20,
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://finspace.us-east-1.amazonaws.com/environment"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**environmentId**",
            "**environmentArn**",
            "**environmentUrl**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
