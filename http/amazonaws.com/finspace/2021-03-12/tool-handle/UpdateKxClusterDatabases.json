{
  "name": "UpdateKxClusterDatabases",
  "description": "<p>Updates the databases mounted on a kdb cluster, which includes the <code>changesetId</code> and all the dbPaths to be cached. This API does not allow you to change a database name or add a database if you created a cluster without one. </p> <p>Using this API you can point a cluster to a different changeset and modify a list of partitions being cached.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "environmentId": {
        "type": "string",
        "pattern": "^[a-z0-9]+$",
        "minLength": 1,
        "maxLength": 32,
        "description": "The unique identifier of a kdb environment."
      },
      "clusterName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$",
        "minLength": 3,
        "maxLength": 63,
        "description": "A unique name for the cluster that you want to modify."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "databases"
        ],
        "properties": {
          "clientToken": {
            "description": "A token that ensures idempotency. This token expires in 10 minutes.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]+$",
            "minLength": 1,
            "maxLength": 64
          },
          "databases": {
            "description": " The structure of databases mounted on the cluster.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/KxDatabaseConfiguration"
            }
          }
        }
      }
    },
    "required": [
      "environmentId",
      "clusterName",
      "body"
    ],
    "$defs": {
      "KxDatabaseConfiguration": {
        "type": "object",
        "required": [
          "databaseName"
        ],
        "properties": {
          "databaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseName"
              },
              {
                "description": "The name of the kdb database. When this parameter is specified in the structure, S3 with the whole database is included by default."
              }
            ]
          },
          "cacheConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/KxDatabaseCacheConfigurations"
              },
              {
                "description": "Configuration details for the disk cache used to increase performance reading from a kdb database mounted to the cluster."
              }
            ]
          },
          "changesetId": {
            "allOf": [
              {
                "$ref": "#/$defs/ChangesetId"
              },
              {
                "description": "A unique identifier of the changeset that is associated with the cluster."
              }
            ]
          }
        },
        "description": "The configuration of data that is available for querying from this database."
      },
      "DatabaseName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]*[a-zA-Z0-9]$",
        "minLength": 3,
        "maxLength": 63
      },
      "KxDatabaseCacheConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/KxDatabaseCacheConfiguration"
        }
      },
      "KxDatabaseCacheConfiguration": {
        "type": "object",
        "required": [
          "cacheType",
          "dbPaths"
        ],
        "properties": {
          "cacheType": {
            "allOf": [
              {
                "$ref": "#/$defs/KxCacheStorageType"
              },
              {
                "description": "<p>The type of disk cache. This parameter is used to map the database path to cache storage. The valid values are:</p> <ul> <li> <p>CACHE_1000 â€“ This type provides at least 1000 MB/s disk access throughput. </p> </li> </ul>"
              }
            ]
          },
          "dbPaths": {
            "allOf": [
              {
                "$ref": "#/$defs/DbPaths"
              },
              {
                "description": "Specifies the portions of database that will be loaded into the cache for access."
              }
            ]
          }
        },
        "description": "The structure of database cache configuration that is used for mapping database paths to cache types in clusters."
      },
      "KxCacheStorageType": {
        "type": "string",
        "minLength": 8,
        "maxLength": 10
      },
      "DbPaths": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DbPath"
        }
      },
      "DbPath": {
        "type": "string",
        "pattern": "^\\/([^\\/]+\\/){0,2}[^\\/]*$",
        "minLength": 1,
        "maxLength": 1025
      },
      "ChangesetId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 26
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://finspace.us-east-1.amazonaws.com/kx/environments/{environmentId}/clusters/{clusterName}/configuration/databases"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
