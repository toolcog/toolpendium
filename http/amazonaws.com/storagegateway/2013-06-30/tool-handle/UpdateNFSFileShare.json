{
  "name": "UpdateNFSFileShare",
  "description": "<p>Updates a Network File System (NFS) file share. This operation is only supported in S3 File Gateways.</p> <note> <p>To leave a file share field unchanged, set the corresponding input field to null.</p> </note> <p>Updates the following file share settings:</p> <ul> <li> <p>Default storage class for your S3 bucket</p> </li> <li> <p>Metadata defaults for your S3 bucket</p> </li> <li> <p>Allowed NFS clients for your file share</p> </li> <li> <p>Squash settings</p> </li> <li> <p>Write status of your file share</p> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "StorageGateway_20130630.UpdateNFSFileShare"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateNFSFileShareInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateNFSFileShareInput": {
        "type": "object",
        "required": [
          "FileShareARN"
        ],
        "title": "UpdateNFSFileShareInput",
        "properties": {
          "FileShareARN": {
            "allOf": [
              {
                "$ref": "#/$defs/FileShareARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the file share to be updated."
              }
            ]
          },
          "KMSEncrypted": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Set to <code>true</code> to use Amazon S3 server-side encryption with your own KMS key, or <code>false</code> to use a key managed by Amazon S3. Optional.</p> <p>Valid Values: <code>true</code> | <code>false</code> </p>"
              }
            ]
          },
          "KMSKey": {
            "allOf": [
              {
                "$ref": "#/$defs/KMSKey"
              },
              {
                "description": "The Amazon Resource Name (ARN) of a symmetric customer master key (CMK) used for Amazon S3 server-side encryption. Storage Gateway does not support asymmetric CMKs. This value can only be set when <code>KMSEncrypted</code> is <code>true</code>. Optional."
              }
            ]
          },
          "NFSFileShareDefaults": {
            "allOf": [
              {
                "$ref": "#/$defs/NFSFileShareDefaults"
              },
              {
                "description": "The default values for the file share. Optional."
              }
            ]
          },
          "DefaultStorageClass": {
            "allOf": [
              {
                "$ref": "#/$defs/StorageClass"
              },
              {
                "description": "<p>The default storage class for objects put into an Amazon S3 bucket by the S3 File Gateway. The default value is <code>S3_STANDARD</code>. Optional.</p> <p>Valid Values: <code>S3_STANDARD</code> | <code>S3_INTELLIGENT_TIERING</code> | <code>S3_STANDARD_IA</code> | <code>S3_ONEZONE_IA</code> </p>"
              }
            ]
          },
          "ObjectACL": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectACL"
              },
              {
                "description": "A value that sets the access control list (ACL) permission for objects in the S3 bucket that a S3 File Gateway puts objects into. The default value is <code>private</code>."
              }
            ]
          },
          "ClientList": {
            "allOf": [
              {
                "$ref": "#/$defs/FileShareClientList"
              },
              {
                "description": "The list of clients that are allowed to access the S3 File Gateway. The list must contain either valid IP addresses or valid CIDR blocks."
              }
            ]
          },
          "Squash": {
            "allOf": [
              {
                "$ref": "#/$defs/Squash"
              },
              {
                "description": "<p>The user mapped to anonymous user.</p> <p>Valid values are the following:</p> <ul> <li> <p> <code>RootSquash</code>: Only root is mapped to anonymous user.</p> </li> <li> <p> <code>NoSquash</code>: No one is mapped to anonymous user.</p> </li> <li> <p> <code>AllSquash</code>: Everyone is mapped to anonymous user.</p> </li> </ul>"
              }
            ]
          },
          "ReadOnly": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>A value that sets the write status of a file share. Set this value to <code>true</code> to set the write status to read-only, otherwise set to <code>false</code>.</p> <p>Valid Values: <code>true</code> | <code>false</code> </p>"
              }
            ]
          },
          "GuessMIMETypeEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>A value that enables guessing of the MIME type for uploaded objects based on file extensions. Set this value to <code>true</code> to enable MIME type guessing, otherwise set to <code>false</code>. The default value is <code>true</code>.</p> <p>Valid Values: <code>true</code> | <code>false</code> </p>"
              }
            ]
          },
          "RequesterPays": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>A value that sets who pays the cost of the request and the cost associated with data download from the S3 bucket. If this value is set to <code>true</code>, the requester pays the costs; otherwise, the S3 bucket owner pays. However, the S3 bucket owner always pays the cost of storing data.</p> <note> <p> <code>RequesterPays</code> is a configuration for the S3 bucket that backs the file share, so make sure that the configuration on the file share is the same as the S3 bucket configuration.</p> </note> <p>Valid Values: <code>true</code> | <code>false</code> </p>"
              }
            ]
          },
          "FileShareName": {
            "allOf": [
              {
                "$ref": "#/$defs/FileShareName"
              },
              {
                "description": "<p>The name of the file share. Optional.</p> <note> <p> <code>FileShareName</code> must be set if an S3 prefix name is set in <code>LocationARN</code>, or if an access point or access point alias is used.</p> </note>"
              }
            ]
          },
          "CacheAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/CacheAttributes"
              },
              {
                "description": "Specifies refresh cache information for the file share."
              }
            ]
          },
          "NotificationPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/NotificationPolicy"
              },
              {
                "description": "<p>The notification policy of the file share. <code>SettlingTimeInSeconds</code> controls the number of seconds to wait after the last point in time a client wrote to a file before generating an <code>ObjectUploaded</code> notification. Because clients can make many small writes to files, it's best to set this parameter for as long as possible to avoid generating multiple notifications for the same file in a small time period.</p> <note> <p> <code>SettlingTimeInSeconds</code> has no effect on the timing of the object uploading to Amazon S3, only the timing of the notification.</p> </note> <p>The following example sets <code>NotificationPolicy</code> on with <code>SettlingTimeInSeconds</code> set to 60.</p> <p> <code>{\\\"Upload\\\": {\\\"SettlingTimeInSeconds\\\": 60}}</code> </p> <p>The following example sets <code>NotificationPolicy</code> off.</p> <p> <code>{}</code> </p>"
              }
            ]
          },
          "AuditDestinationARN": {
            "allOf": [
              {
                "$ref": "#/$defs/AuditDestinationARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the storage used for audit logs."
              }
            ]
          }
        },
        "description": "UpdateNFSFileShareInput"
      },
      "FileShareARN": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) of the file share.",
        "minLength": 50,
        "maxLength": 500
      },
      "Boolean": {
        "type": "boolean"
      },
      "KMSKey": {
        "type": "string",
        "pattern": "(^arn:(aws|aws-cn|aws-us-gov):kms:([a-zA-Z0-9-]+):([0-9]+):(key|alias)/(\\S+)$)|(^alias/(\\S+)$)",
        "description": "The Amazon Resource Name (ARN) of a symmetric customer master key (CMK) used for Amazon S3 server-side encryption. Storage Gateway does not support asymmetric CMKs. This value can only be set when <code>KMSEncrypted</code> is <code>true</code>. Optional.",
        "minLength": 7,
        "maxLength": 2048
      },
      "NFSFileShareDefaults": {
        "type": "object",
        "properties": {
          "FileMode": {
            "allOf": [
              {
                "$ref": "#/$defs/PermissionMode"
              },
              {
                "description": "The Unix file mode in the form \"nnnn\". For example, <code>0666</code> represents the default file mode inside the file share. The default value is <code>0666</code>."
              }
            ]
          },
          "DirectoryMode": {
            "allOf": [
              {
                "$ref": "#/$defs/PermissionMode"
              },
              {
                "description": "The Unix directory mode in the form \"nnnn\". For example, <code>0666</code> represents the default access mode for all directories inside the file share. The default value is <code>0777</code>."
              }
            ]
          },
          "GroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/PermissionId"
              },
              {
                "description": "The default group ID for the file share (unless the files have another group ID specified). The default value is <code>nfsnobody</code>."
              }
            ]
          },
          "OwnerId": {
            "allOf": [
              {
                "$ref": "#/$defs/PermissionId"
              },
              {
                "description": "The default owner ID for files in the file share (unless the files have another owner ID specified). The default value is <code>nfsnobody</code>."
              }
            ]
          }
        },
        "description": "Describes Network File System (NFS) file share default values. Files and folders stored as Amazon S3 objects in S3 buckets don't, by default, have Unix file permissions assigned to them. Upon discovery in an S3 bucket by Storage Gateway, the S3 objects that represent files and folders are assigned these default Unix permissions. This operation is only supported for S3 File Gateways."
      },
      "PermissionMode": {
        "type": "string",
        "pattern": "^[0-7]{4}$",
        "minLength": 1,
        "maxLength": 4
      },
      "PermissionId": {
        "type": "integer",
        "minimum": 0,
        "maximum": 4294967294
      },
      "StorageClass": {
        "type": "string",
        "description": "<p/>",
        "minLength": 5,
        "maxLength": 50
      },
      "ObjectACL": {
        "type": "string",
        "enum": [
          "private",
          "public-read",
          "public-read-write",
          "authenticated-read",
          "bucket-owner-read",
          "bucket-owner-full-control",
          "aws-exec-read"
        ],
        "description": "A value that sets the access control list (ACL) permission for objects in the S3 bucket that an S3 File Gateway puts objects into. The default value is <code>private</code>."
      },
      "FileShareClientList": {
        "type": "array",
        "description": "The list of clients that are allowed to access the S3 File Gateway. The list must contain either valid IP addresses or valid CIDR blocks.",
        "items": {
          "$ref": "#/$defs/IPV4AddressCIDR"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "IPV4AddressCIDR": {
        "type": "string",
        "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
      },
      "Squash": {
        "type": "string",
        "description": "<p>The user mapped to anonymous user. Valid options are the following:</p> <ul> <li> <p> <code>RootSquash</code>: Only root is mapped to anonymous user.</p> </li> <li> <p> <code>NoSquash</code>: No one is mapped to anonymous user.</p> </li> <li> <p> <code>AllSquash</code>: Everyone is mapped to anonymous user.</p> </li> </ul>",
        "minLength": 5,
        "maxLength": 15
      },
      "FileShareName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "CacheAttributes": {
        "type": "object",
        "properties": {
          "CacheStaleTimeoutInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/CacheStaleTimeoutInSeconds"
              },
              {
                "description": "<p>Refreshes a file share's cache by using Time To Live (TTL). TTL is the length of time since the last refresh after which access to the directory would cause the file gateway to first refresh that directory's contents from the Amazon S3 bucket or Amazon FSx file system. The TTL duration is in seconds.</p> <p>Valid Values:0, 300 to 2,592,000 seconds (5 minutes to 30 days)</p>"
              }
            ]
          }
        },
        "description": "The refresh cache information for the file share or FSx file systems."
      },
      "CacheStaleTimeoutInSeconds": {
        "type": "integer"
      },
      "NotificationPolicy": {
        "type": "string",
        "pattern": "^\\{[\\w\\s:\\{\\}\\[\\]\"]*}$",
        "minLength": 2,
        "maxLength": 100
      },
      "AuditDestinationARN": {
        "type": "string",
        "maxLength": 1024
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://storagegateway.us-east-1.amazonaws.com/#X-Amz-Target=StorageGateway_20130630.UpdateNFSFileShare"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "UpdateNFSFileShareOutput",
        "**Key properties:**",
        {
          "$ul": [
            "**FileShareARN**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
