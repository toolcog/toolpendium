{
  "name": "CreatePricingRule",
  "description": " Creates a pricing rule can be associated to a pricing plan, or a set of pricing plans. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amzn-Client-Token": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]+",
        "minLength": 1,
        "maxLength": 64,
        "description": " The token that's needed to support idempotency. Idempotency isn't currently supported, but will be implemented in a future update. "
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Name",
          "Scope",
          "Type"
        ],
        "properties": {
          "Name": {
            "description": " The pricing rule name. The names must be unique to each pricing rule. ",
            "type": "string",
            "pattern": "[a-zA-Z0-9_\\+=\\.\\-@]+",
            "minLength": 1,
            "maxLength": 128,
            "format": "password"
          },
          "Description": {
            "description": " The pricing rule description. ",
            "type": "string",
            "minLength": 0,
            "maxLength": 1024,
            "format": "password"
          },
          "Scope": {
            "description": " The scope of pricing rule that indicates if it's globally applicable, or it's service-specific. ",
            "type": "string",
            "enum": [
              "GLOBAL",
              "SERVICE",
              "BILLING_ENTITY",
              "SKU"
            ]
          },
          "Type": {
            "description": " The type of pricing rule. ",
            "type": "string",
            "enum": [
              "MARKUP",
              "DISCOUNT",
              "TIERING"
            ]
          },
          "ModifierPercentage": {
            "description": " A percentage modifier that's applied on the public pricing rates. ",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "Service": {
            "description": " If the <code>Scope</code> attribute is set to <code>SERVICE</code> or <code>SKU</code>, the attribute indicates which service the <code>PricingRule</code> is applicable for. ",
            "type": "string",
            "pattern": "[a-zA-Z0-9]+",
            "minLength": 1,
            "maxLength": 128
          },
          "Tags": {
            "description": " A map that contains tag keys and tag values that are attached to a pricing rule. ",
            "type": "object",
            "minProperties": 1,
            "maxProperties": 200,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "BillingEntity": {
            "description": " The seller of services provided by Amazon Web Services, their affiliates, or third-party providers selling services via Amazon Web Services Marketplace. ",
            "type": "string",
            "pattern": "[a-zA-Z0-9 ]+"
          },
          "Tiering": {
            "description": " The set of tiering configurations for the pricing rule. ",
            "type": "object",
            "properties": {
              "FreeTier": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CreateFreeTierConfig"
                  },
                  {
                    "description": " The possible Amazon Web Services Free Tier configurations. "
                  }
                ]
              }
            }
          },
          "UsageType": {
            "description": "<p> Usage type is the unit that each service uses to measure the usage of a specific type of resource.</p> <p>If the <code>Scope</code> attribute is set to <code>SKU</code>, this attribute indicates which usage type the <code>PricingRule</code> is modifying. For example, <code>USW2-BoxUsage:m2.2xlarge</code> describes an<code> M2 High Memory Double Extra Large</code> instance in the US West (Oregon) Region. <pre><code>&lt;/p&gt; </code></pre>",
            "type": "string",
            "pattern": "\\S+",
            "minLength": 1,
            "maxLength": 256
          },
          "Operation": {
            "description": "<p> Operation is the specific Amazon Web Services action covered by this line item. This describes the specific usage of the line item.</p> <p> If the <code>Scope</code> attribute is set to <code>SKU</code>, this attribute indicates which operation the <code>PricingRule</code> is modifying. For example, a value of <code>RunInstances:0202</code> indicates the operation of running an Amazon EC2 instance.</p>",
            "type": "string",
            "pattern": "\\S+",
            "minLength": 1,
            "maxLength": 256
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "CreateFreeTierConfig": {
        "type": "object",
        "required": [
          "Activated"
        ],
        "properties": {
          "Activated": {
            "allOf": [
              {
                "$ref": "#/$defs/TieringActivated"
              },
              {
                "description": " Activate or deactivate Amazon Web Services Free Tier. "
              }
            ]
          }
        },
        "description": " The possible Amazon Web Services Free Tier configurations. "
      },
      "TieringActivated": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://billingconductor.us-east-1.amazonaws.com/create-pricing-rule"
    },
    "headers": {
      "X-Amzn-Client-Token": {
        "$": "X-Amzn-Client-Token"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Arn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
