{
  "name": "CreateBillingGroup",
  "description": " Creates a billing group that resembles a consolidated billing family that Amazon Web Services charges, based off of the predefined pricing plan computation. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amzn-Client-Token": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]+",
        "minLength": 1,
        "maxLength": 64,
        "description": " The token that is needed to support idempotency. Idempotency isn't currently supported, but will be implemented in a future update. "
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Name",
          "AccountGrouping",
          "ComputationPreference"
        ],
        "properties": {
          "Name": {
            "description": " The billing group name. The names must be unique. ",
            "type": "string",
            "pattern": "[a-zA-Z0-9_\\+=\\.\\-@]+",
            "minLength": 1,
            "maxLength": 128,
            "format": "password"
          },
          "AccountGrouping": {
            "description": "The set of accounts that will be under the billing group. The set of accounts resemble the linked accounts in a consolidated billing family.",
            "type": "object",
            "properties": {
              "LinkedAccountIds": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AccountIdList"
                  },
                  {
                    "description": "The account IDs that make up the billing group. Account IDs must be a part of the consolidated billing family, and not associated with another billing group."
                  }
                ]
              },
              "AutoAssociate": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": "Specifies if this billing group will automatically associate newly added Amazon Web Services accounts that join your consolidated billing family."
                  }
                ]
              }
            }
          },
          "ComputationPreference": {
            "description": "The preferences and settings that will be used to compute the Amazon Web Services charges for a billing group.",
            "type": "object",
            "properties": {
              "PricingPlanArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PricingPlanFullArn"
                  },
                  {
                    "description": " The Amazon Resource Name (ARN) of the pricing plan that's used to compute the Amazon Web Services charges for a billing group. "
                  }
                ]
              }
            }
          },
          "PrimaryAccountId": {
            "description": " The account ID that serves as the main account in a billing group. ",
            "type": "string",
            "pattern": "[0-9]{12}"
          },
          "Description": {
            "description": "The description of the billing group. ",
            "type": "string",
            "minLength": 0,
            "maxLength": 1024,
            "format": "password"
          },
          "Tags": {
            "description": " A map that contains tag keys and tag values that are attached to a billing group. This feature isn't available during the beta. ",
            "type": "object",
            "minProperties": 1,
            "maxProperties": 200,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "AccountIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccountId"
        },
        "minItems": 1,
        "maxItems": 30
      },
      "AccountId": {
        "type": "string",
        "pattern": "[0-9]{12}"
      },
      "Boolean": {
        "type": "boolean"
      },
      "PricingPlanFullArn": {
        "type": "string",
        "pattern": "arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingplan/[a-zA-Z0-9]{10}"
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://billingconductor.us-east-1.amazonaws.com/create-billing-group"
    },
    "headers": {
      "X-Amzn-Client-Token": {
        "$": "X-Amzn-Client-Token"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Arn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
