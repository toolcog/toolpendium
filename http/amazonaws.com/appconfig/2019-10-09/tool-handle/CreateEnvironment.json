{
  "name": "CreateEnvironment",
  "description": "Creates an environment. For each application, you define one or more environments. An environment is a deployment group of AppConfig targets, such as applications in a <code>Beta</code> or <code>Production</code> environment. You can also define environments for application subcomponents such as the <code>Web</code>, <code>Mobile</code> and <code>Back-end</code> components for your application. You can configure Amazon CloudWatch alarms for each environment. The system monitors alarms during a configuration deployment. If an alarm is triggered, the system rolls back the configuration.",
  "parameters": {
    "type": "object",
    "properties": {
      "ApplicationId": {
        "type": "string",
        "pattern": "[a-z0-9]{4,7}",
        "description": "The application ID."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "description": "A name for the environment.",
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "Description": {
            "description": "A description of the environment.",
            "type": "string",
            "minLength": 0,
            "maxLength": 1024
          },
          "Monitors": {
            "description": "Amazon CloudWatch alarms to monitor during the deployment process.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Monitor"
            },
            "minItems": 0,
            "maxItems": 5
          },
          "Tags": {
            "description": "Metadata to assign to the environment. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "ApplicationId",
      "body"
    ],
    "$defs": {
      "Monitor": {
        "type": "object",
        "required": [
          "AlarmArn"
        ],
        "properties": {
          "AlarmArn": {
            "allOf": [
              {
                "$ref": "#/$defs/StringWithLengthBetween1And2048"
              },
              {
                "description": "Amazon Resource Name (ARN) of the Amazon CloudWatch alarm."
              }
            ]
          },
          "AlarmRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "ARN of an Identity and Access Management (IAM) role for AppConfig to monitor <code>AlarmArn</code>."
              }
            ]
          }
        },
        "description": "Amazon CloudWatch alarms to monitor during the deployment process."
      },
      "StringWithLengthBetween1And2048": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\d{12}:role[/].*)$",
        "minLength": 20,
        "maxLength": 2048
      },
      "TagValue": {
        "type": "string",
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://appconfig.us-east-1.amazonaws.com/applications/{ApplicationId}/environments"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ApplicationId**",
            "**Id**",
            "**Name**",
            "**Description**",
            "**State**",
            "**Monitors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
