{
  "name": "GetRevision",
  "description": "Returns a revision data object for a specified document ID and block address. Also returns a proof of the specified revision for verification if <code>DigestTipAddress</code> is provided.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "pattern": "(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$",
        "minLength": 1,
        "maxLength": 32,
        "description": "The name of the ledger."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "BlockAddress",
          "DocumentId"
        ],
        "properties": {
          "BlockAddress": {
            "description": "A structure that can contain a value in multiple encoding formats.",
            "type": "object",
            "properties": {
              "IonText": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IonText"
                  },
                  {
                    "description": "An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure."
                  }
                ]
              }
            }
          },
          "DocumentId": {
            "description": "The UUID (represented in Base62-encoded text) of the document to be verified.",
            "type": "string",
            "pattern": "^[A-Za-z-0-9]+$",
            "minLength": 22,
            "maxLength": 22
          },
          "DigestTipAddress": {
            "description": "A structure that can contain a value in multiple encoding formats.",
            "type": "object",
            "properties": {
              "IonText": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IonText"
                  },
                  {
                    "description": "An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "name",
      "body"
    ],
    "$defs": {
      "IonText": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1048576,
        "format": "password"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://qldb.us-east-1.amazonaws.com/ledgers/{name}/revision"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Proof**",
            "**Revision**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
