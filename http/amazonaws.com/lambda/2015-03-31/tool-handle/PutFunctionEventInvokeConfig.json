{
  "name": "PutFunctionEventInvokeConfig",
  "description": "<p>Configures options for <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous invocation</a> on a function, version, or alias. If a configuration already exists for a function, version, or alias, this operation overwrites it. If you exclude any settings, they are removed. To set one option without affecting existing settings for other options, use <a>UpdateFunctionEventInvokeConfig</a>.</p> <p>By default, Lambda retries an asynchronous invocation twice if the function returns an error. It retains events in a queue for up to six hours. When an event fails all processing attempts or stays in the asynchronous invocation queue for too long, Lambda discards it. To retain discarded events, configure a dead-letter queue with <a>UpdateFunctionConfiguration</a>.</p> <p>To send an invocation record to a queue, topic, function, or event bus, specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations\">destination</a>. You can configure separate destinations for successful invocations (on-success) and events that fail all processing attempts (on-failure). You can configure destinations in addition to or instead of a dead-letter queue.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "FunctionName": {
        "type": "string",
        "pattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
        "minLength": 1,
        "maxLength": 140,
        "description": "<p>The name of the Lambda function, version, or alias.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>"
      },
      "Qualifier": {
        "type": "string",
        "pattern": "(|[a-zA-Z0-9$_-]+)",
        "minLength": 1,
        "maxLength": 128,
        "description": "A version number or alias name."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "MaximumRetryAttempts": {
            "description": "The maximum number of times to retry when the function returns an error.",
            "type": "integer",
            "minimum": 0,
            "maximum": 2
          },
          "MaximumEventAgeInSeconds": {
            "description": "The maximum age of a request that Lambda sends to a function for processing.",
            "type": "integer",
            "minimum": 60,
            "maximum": 21600
          },
          "DestinationConfig": {
            "description": "A configuration object that specifies the destination of an event after Lambda processes it.",
            "type": "object",
            "properties": {
              "OnSuccess": {
                "allOf": [
                  {
                    "$ref": "#/$defs/OnSuccess"
                  },
                  {
                    "description": "The destination configuration for successful invocations."
                  }
                ]
              },
              "OnFailure": {
                "allOf": [
                  {
                    "$ref": "#/$defs/OnFailure"
                  },
                  {
                    "description": "The destination configuration for failed invocations."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "FunctionName",
      "body"
    ],
    "$defs": {
      "OnSuccess": {
        "type": "object",
        "properties": {
          "Destination": {
            "allOf": [
              {
                "$ref": "#/$defs/DestinationArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the destination resource."
              }
            ]
          }
        },
        "description": "A destination for events that were processed successfully."
      },
      "DestinationArn": {
        "type": "string",
        "pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
        "minLength": 0,
        "maxLength": 350
      },
      "OnFailure": {
        "type": "object",
        "properties": {
          "Destination": {
            "allOf": [
              {
                "$ref": "#/$defs/DestinationArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the destination resource."
              }
            ]
          }
        },
        "description": "A destination for events that failed processing."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://lambda.us-east-1.amazonaws.com/2019-09-25/functions/{FunctionName}/event-invoke-config{?Qualifier}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**LastModified**",
            "**FunctionArn**",
            "**MaximumRetryAttempts**",
            "**MaximumEventAgeInSeconds**",
            "**DestinationConfig**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
