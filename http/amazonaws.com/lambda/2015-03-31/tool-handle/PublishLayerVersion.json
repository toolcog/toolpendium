{
  "name": "PublishLayerVersion",
  "description": "<p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a> from a ZIP archive. Each time you call <code>PublishLayerVersion</code> with the same layer name, a new version is created.</p> <p>Add layers to your function with <a>CreateFunction</a> or <a>UpdateFunctionConfiguration</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "LayerName": {
        "type": "string",
        "pattern": "(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+",
        "minLength": 1,
        "maxLength": 140,
        "description": "The name or Amazon Resource Name (ARN) of the layer."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Content"
        ],
        "properties": {
          "Description": {
            "description": "The description of the version.",
            "type": "string",
            "minLength": 0,
            "maxLength": 256
          },
          "Content": {
            "description": "A ZIP archive that contains the contents of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. You can specify either an Amazon S3 location, or upload a layer archive directly.",
            "type": "object",
            "properties": {
              "S3Bucket": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Bucket"
                  },
                  {
                    "description": "The Amazon S3 bucket of the layer archive."
                  }
                ]
              },
              "S3Key": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Key"
                  },
                  {
                    "description": "The Amazon S3 key of the layer archive."
                  }
                ]
              },
              "S3ObjectVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3ObjectVersion"
                  },
                  {
                    "description": "For versioned objects, the version of the layer archive object to use."
                  }
                ]
              },
              "ZipFile": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Blob"
                  },
                  {
                    "description": "The base64-encoded contents of the layer archive. Amazon Web Services SDK and Amazon Web Services CLI clients handle the encoding for you."
                  }
                ]
              }
            }
          },
          "CompatibleRuntimes": {
            "description": "<p>A list of compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">function runtimes</a>. Used for filtering with <a>ListLayers</a> and <a>ListLayerVersions</a>.</p> <p>The following list includes deprecated runtimes. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy\">Runtime deprecation policy</a>.</p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Runtime"
            },
            "maxItems": 15
          },
          "LicenseInfo": {
            "description": "<p>The layer's software license. It can be any of the following:</p> <ul> <li> <p>An <a href=\"https://spdx.org/licenses/\">SPDX license identifier</a>. For example, <code>MIT</code>.</p> </li> <li> <p>The URL of a license hosted on the internet. For example, <code>https://opensource.org/licenses/MIT</code>.</p> </li> <li> <p>The full text of the license.</p> </li> </ul>",
            "type": "string",
            "maxLength": 512
          },
          "CompatibleArchitectures": {
            "description": "A list of compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html\">instruction set architectures</a>.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Architecture"
            },
            "maxItems": 2
          }
        }
      }
    },
    "required": [
      "LayerName",
      "body"
    ],
    "$defs": {
      "S3Bucket": {
        "type": "string",
        "pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
        "minLength": 3,
        "maxLength": 63
      },
      "S3Key": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "S3ObjectVersion": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "Blob": {
        "type": "string",
        "format": "password"
      },
      "Runtime": {
        "type": "string",
        "enum": [
          "nodejs",
          "nodejs4.3",
          "nodejs6.10",
          "nodejs8.10",
          "nodejs10.x",
          "nodejs12.x",
          "nodejs14.x",
          "nodejs16.x",
          "java8",
          "java8.al2",
          "java11",
          "python2.7",
          "python3.6",
          "python3.7",
          "python3.8",
          "python3.9",
          "dotnetcore1.0",
          "dotnetcore2.0",
          "dotnetcore2.1",
          "dotnetcore3.1",
          "dotnet6",
          "nodejs4.3-edge",
          "go1.x",
          "ruby2.5",
          "ruby2.7",
          "provided",
          "provided.al2",
          "nodejs18.x",
          "python3.10",
          "java17",
          "ruby3.2",
          "python3.11"
        ]
      },
      "Architecture": {
        "type": "string",
        "enum": [
          "x86_64",
          "arm64"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lambda.us-east-1.amazonaws.com/2018-10-31/layers/{LayerName}/versions"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Content**",
            "**LayerArn**",
            "**LayerVersionArn**",
            "**Description**",
            "**CreatedDate**",
            "**Version**",
            "**CompatibleRuntimes**",
            "**LicenseInfo**",
            "**CompatibleArchitectures**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
