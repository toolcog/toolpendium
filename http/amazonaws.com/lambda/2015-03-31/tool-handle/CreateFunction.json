{
  "name": "CreateFunction",
  "description": "<p>Creates a Lambda function. To create a function, you need a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html\">deployment package</a> and an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role\">execution role</a>. The deployment package is a .zip file archive or container image that contains your function code. The execution role grants the function permission to use Amazon Web Services, such as Amazon CloudWatch Logs for log streaming and X-Ray for request tracing.</p> <p>If the deployment package is a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html\">container image</a>, then you set the package type to <code>Image</code>. For a container image, the code property must include the URI of a container image in the Amazon ECR registry. You do not need to specify the handler and runtime properties.</p> <p>If the deployment package is a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html#gettingstarted-package-zip\">.zip file archive</a>, then you set the package type to <code>Zip</code>. For a .zip file archive, the code property specifies the location of the .zip file. You must also specify the handler and runtime properties. The code in the deployment package must be compatible with the target instruction set architecture of the function (<code>x86-64</code> or <code>arm64</code>). If you do not specify the architecture, then the default value is <code>x86-64</code>.</p> <p>When you create a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute or so. During this time, you can't invoke or modify the function. The <code>State</code>, <code>StateReason</code>, and <code>StateReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the function is ready to invoke. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Lambda function states</a>.</p> <p>A function has an unpublished version, and can have published versions and aliases. The unpublished version changes when you update your function's code and configuration. A published version is a snapshot of your function code and configuration that can't be changed. An alias is a named resource that maps to a version, and can be changed to map to a different version. Use the <code>Publish</code> parameter to create version <code>1</code> of your function from its initial configuration.</p> <p>The other parameters let you configure version-specific and function-level settings. You can modify version-specific settings later with <a>UpdateFunctionConfiguration</a>. Function-level settings apply to both the unpublished and published versions of the function, and include tags (<a>TagResource</a>) and per-function concurrency limits (<a>PutFunctionConcurrency</a>).</p> <p>You can use code signing if your deployment package is a .zip file archive. To enable code signing for this function, specify the ARN of a code-signing configuration. When a user attempts to deploy a code package with <a>UpdateFunctionCode</a>, Lambda checks that the code package has a valid signature from a trusted publisher. The code-signing configuration includes set of signing profiles, which define the trusted publishers for this function.</p> <p>If another Amazon Web Services account or an Amazon Web Service invokes your function, use <a>AddPermission</a> to grant permission by creating a resource-based Identity and Access Management (IAM) policy. You can grant permissions at the function level, on a version, or on an alias.</p> <p>To invoke your function directly, use <a>Invoke</a>. To invoke your function in response to events in other Amazon Web Services, create an event source mapping (<a>CreateEventSourceMapping</a>), or configure a function trigger in the other service. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-invocation.html\">Invoking Lambda functions</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "FunctionName",
          "Role",
          "Code"
        ],
        "properties": {
          "FunctionName": {
            "description": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
            "type": "string",
            "pattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
            "minLength": 1,
            "maxLength": 140
          },
          "Runtime": {
            "description": "<p>The identifier of the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime</a>. Runtime is required if the deployment package is a .zip file archive.</p> <p>The following list includes deprecated runtimes. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy\">Runtime deprecation policy</a>.</p>",
            "type": "string",
            "enum": [
              "nodejs",
              "nodejs4.3",
              "nodejs6.10",
              "nodejs8.10",
              "nodejs10.x",
              "nodejs12.x",
              "nodejs14.x",
              "nodejs16.x",
              "java8",
              "java8.al2",
              "java11",
              "python2.7",
              "python3.6",
              "python3.7",
              "python3.8",
              "python3.9",
              "dotnetcore1.0",
              "dotnetcore2.0",
              "dotnetcore2.1",
              "dotnetcore3.1",
              "dotnet6",
              "nodejs4.3-edge",
              "go1.x",
              "ruby2.5",
              "ruby2.7",
              "provided",
              "provided.al2",
              "nodejs18.x",
              "python3.10",
              "java17",
              "ruby3.2",
              "python3.11"
            ]
          },
          "Role": {
            "description": "The Amazon Resource Name (ARN) of the function's execution role.",
            "type": "string",
            "pattern": "arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+"
          },
          "Handler": {
            "description": "The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html\">Lambda programming model</a>.",
            "type": "string",
            "pattern": "[^\\s]+",
            "maxLength": 128
          },
          "Code": {
            "description": "The code for the Lambda function. You can either specify an object in Amazon S3, upload a .zip file archive deployment package directly, or specify the URI of a container image.",
            "type": "object",
            "properties": {
              "ZipFile": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Blob"
                  },
                  {
                    "description": "The base64-encoded contents of the deployment package. Amazon Web Services SDK and CLI clients handle the encoding for you."
                  }
                ]
              },
              "S3Bucket": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Bucket"
                  },
                  {
                    "description": "An Amazon S3 bucket in the same Amazon Web Services Region as your function. The bucket can be in a different Amazon Web Services account."
                  }
                ]
              },
              "S3Key": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Key"
                  },
                  {
                    "description": "The Amazon S3 key of the deployment package."
                  }
                ]
              },
              "S3ObjectVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3ObjectVersion"
                  },
                  {
                    "description": "For versioned objects, the version of the deployment package object to use."
                  }
                ]
              },
              "ImageUri": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String"
                  },
                  {
                    "description": "URI of a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html\">container image</a> in the Amazon ECR registry."
                  }
                ]
              }
            }
          },
          "Description": {
            "description": "A description of the function.",
            "type": "string",
            "minLength": 0,
            "maxLength": 256
          },
          "Timeout": {
            "description": "The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html\">Lambda execution environment</a>.",
            "type": "integer",
            "minimum": 1
          },
          "MemorySize": {
            "description": "The amount of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console\">memory available to the function</a> at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.",
            "type": "integer",
            "minimum": 128,
            "maximum": 10240
          },
          "Publish": {
            "description": "Set to true to publish the first version of the function during creation.",
            "type": "boolean"
          },
          "VpcConfig": {
            "description": "The VPC security groups and subnets that are attached to a Lambda function. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html\">Configuring a Lambda function to access resources in a VPC</a>.",
            "type": "object",
            "properties": {
              "SubnetIds": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SubnetIds"
                  },
                  {
                    "description": "A list of VPC subnet IDs."
                  }
                ]
              },
              "SecurityGroupIds": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SecurityGroupIds"
                  },
                  {
                    "description": "A list of VPC security group IDs."
                  }
                ]
              }
            }
          },
          "PackageType": {
            "description": "The type of deployment package. Set to <code>Image</code> for container image and set to <code>Zip</code> for .zip file archive.",
            "type": "string",
            "enum": [
              "Zip",
              "Image"
            ]
          },
          "DeadLetterConfig": {
            "description": "The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">dead-letter queue</a> for failed asynchronous invocations.",
            "type": "object",
            "properties": {
              "TargetArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ResourceArn"
                  },
                  {
                    "description": "The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic."
                  }
                ]
              }
            }
          },
          "Environment": {
            "description": "A function's environment variable settings. You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration.",
            "type": "object",
            "properties": {
              "Variables": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EnvironmentVariables"
                  },
                  {
                    "description": "Environment variable key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html\">Using Lambda environment variables</a>."
                  }
                ]
              }
            }
          },
          "KMSKeyArn": {
            "description": "The ARN of the Key Management Service (KMS) customer managed key that's used to encrypt your function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption\">environment variables</a>. When <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html\">Lambda SnapStart</a> is activated, Lambda also uses this key is to encrypt your function's snapshot. If you deploy your function using a container image, Lambda also uses this key to encrypt your function when it's deployed. Note that this is not the same key that's used to protect your container image in the Amazon Elastic Container Registry (Amazon ECR). If you don't provide a customer managed key, Lambda uses a default service key.",
            "type": "string",
            "pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()"
          },
          "TracingConfig": {
            "description": "The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html\">X-Ray</a> tracing configuration. To sample and record incoming requests, set <code>Mode</code> to <code>Active</code>.",
            "type": "object",
            "properties": {
              "Mode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TracingMode"
                  },
                  {
                    "description": "The tracing mode."
                  }
                ]
              }
            }
          },
          "Tags": {
            "description": "A list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> to apply to the function.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "Layers": {
            "description": "A list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">function layers</a> to add to the function's execution environment. Specify each layer by its ARN, including the version.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/LayerVersionArn"
            }
          },
          "FileSystemConfigs": {
            "description": "Connection settings for an Amazon EFS file system.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/FileSystemConfig"
            },
            "maxItems": 1
          },
          "ImageConfig": {
            "description": "Configuration values that override the container image Dockerfile settings. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms\">Container image settings</a>.",
            "type": "object",
            "properties": {
              "EntryPoint": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringList"
                  },
                  {
                    "description": "Specifies the entry point to their application, which is typically the location of the runtime executable."
                  }
                ]
              },
              "Command": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringList"
                  },
                  {
                    "description": "Specifies parameters that you want to pass in with ENTRYPOINT."
                  }
                ]
              },
              "WorkingDirectory": {
                "allOf": [
                  {
                    "$ref": "#/$defs/WorkingDirectory"
                  },
                  {
                    "description": "Specifies the working directory."
                  }
                ]
              }
            }
          },
          "CodeSigningConfigArn": {
            "description": "To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.",
            "type": "string",
            "pattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:code-signing-config:csc-[a-z0-9]{17}",
            "maxLength": 200
          },
          "Architectures": {
            "description": "The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is <code>x86_64</code>.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Architecture"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "EphemeralStorage": {
            "description": "The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but it can be any whole number between 512 and 10,240 MB.",
            "type": "object",
            "properties": {
              "Size": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EphemeralStorageSize"
                  },
                  {
                    "description": "The size of the function's <code>/tmp</code> directory."
                  }
                ]
              }
            }
          },
          "SnapStart": {
            "description": "The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html\">Lambda SnapStart</a> setting. Set <code>ApplyOn</code> to <code>PublishedVersions</code> to create a snapshot of the initialized execution environment when you publish a function version.",
            "type": "object",
            "properties": {
              "ApplyOn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SnapStartApplyOn"
                  },
                  {
                    "description": "Set to <code>PublishedVersions</code> to create a snapshot of the initialized execution environment when you publish a function version."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Blob": {
        "type": "string",
        "format": "password"
      },
      "S3Bucket": {
        "type": "string",
        "pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
        "minLength": 3,
        "maxLength": 63
      },
      "S3Key": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "S3ObjectVersion": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "String": {
        "type": "string"
      },
      "SubnetIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetId"
        },
        "maxItems": 16
      },
      "SubnetId": {
        "type": "string"
      },
      "SecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SecurityGroupId"
        },
        "maxItems": 5
      },
      "SecurityGroupId": {
        "type": "string"
      },
      "ResourceArn": {
        "type": "string",
        "pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()"
      },
      "EnvironmentVariables": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/EnvironmentVariableValue"
        }
      },
      "EnvironmentVariableValue": {
        "type": "string",
        "format": "password"
      },
      "TracingMode": {
        "type": "string",
        "enum": [
          "Active",
          "PassThrough"
        ]
      },
      "TagValue": {
        "type": "string"
      },
      "LayerVersionArn": {
        "type": "string",
        "pattern": "arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+",
        "minLength": 1,
        "maxLength": 140
      },
      "FileSystemConfig": {
        "type": "object",
        "required": [
          "Arn",
          "LocalMountPath"
        ],
        "properties": {
          "Arn": {
            "allOf": [
              {
                "$ref": "#/$defs/FileSystemArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system."
              }
            ]
          },
          "LocalMountPath": {
            "allOf": [
              {
                "$ref": "#/$defs/LocalMountPath"
              },
              {
                "description": "The path where the function can access the file system, starting with <code>/mnt/</code>."
              }
            ]
          }
        },
        "description": "Details about the connection between a Lambda function and an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html\">Amazon EFS file system</a>."
      },
      "FileSystemArn": {
        "type": "string",
        "pattern": "arn:aws[a-zA-Z-]*:elasticfilesystem:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:access-point/fsap-[a-f0-9]{17}",
        "maxLength": 200
      },
      "LocalMountPath": {
        "type": "string",
        "pattern": "^/mnt/[a-zA-Z0-9-_.]+$",
        "maxLength": 160
      },
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "maxItems": 1500
      },
      "WorkingDirectory": {
        "type": "string",
        "maxLength": 1000
      },
      "Architecture": {
        "type": "string",
        "enum": [
          "x86_64",
          "arm64"
        ]
      },
      "EphemeralStorageSize": {
        "type": "integer",
        "minimum": 512,
        "maximum": 10240
      },
      "SnapStartApplyOn": {
        "type": "string",
        "enum": [
          "PublishedVersions",
          "None"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lambda.us-east-1.amazonaws.com/2015-03-31/functions"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Details about a function's configuration.",
        "**Key properties:**",
        {
          "$ul": [
            "**FunctionName**",
            "**FunctionArn**",
            "**Runtime**",
            "**Role**",
            "**Handler**",
            "**CodeSize**",
            "**Description**",
            "**Timeout**",
            "**MemorySize**",
            "**LastModified**",
            "**CodeSha256**",
            "**Version**",
            "**VpcConfig**",
            "**DeadLetterConfig**",
            "**Environment**",
            "**KMSKeyArn**",
            "**TracingConfig**",
            "**MasterArn**",
            "**RevisionId**",
            "**Layers**",
            "**State**",
            "**StateReason**",
            "**StateReasonCode**",
            "**LastUpdateStatus**",
            "**LastUpdateStatusReason**",
            "**LastUpdateStatusReasonCode**",
            "**FileSystemConfigs**",
            "**PackageType**",
            "**ImageConfigResponse**",
            "**SigningProfileVersionArn**",
            "**SigningJobArn**",
            "**Architectures**",
            "**EphemeralStorage**",
            "**SnapStart**",
            "**RuntimeVersionConfig**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
