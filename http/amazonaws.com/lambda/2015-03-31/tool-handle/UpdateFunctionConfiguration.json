{
  "name": "UpdateFunctionConfiguration",
  "description": "<p>Modify the version-specific settings of a Lambda function.</p> <p>When you update a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute. During this time, you can't modify the function, but you can still invoke it. The <code>LastUpdateStatus</code>, <code>LastUpdateStatusReason</code>, and <code>LastUpdateStatusReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the update is complete and the function is processing events with the new configuration. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Lambda function states</a>.</p> <p>These settings can vary between versions of a function and are locked when you publish a version. You can't modify the configuration of a published version, only the unpublished version.</p> <p>To configure function concurrency, use <a>PutFunctionConcurrency</a>. To grant invoke permissions to an Amazon Web Services account or Amazon Web Service, use <a>AddPermission</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "FunctionName": {
        "type": "string",
        "pattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
        "minLength": 1,
        "maxLength": 140,
        "description": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "Role": {
            "description": "The Amazon Resource Name (ARN) of the function's execution role.",
            "type": "string",
            "pattern": "arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+"
          },
          "Handler": {
            "description": "The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html\">Lambda programming model</a>.",
            "type": "string",
            "pattern": "[^\\s]+",
            "maxLength": 128
          },
          "Description": {
            "description": "A description of the function.",
            "type": "string",
            "minLength": 0,
            "maxLength": 256
          },
          "Timeout": {
            "description": "The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html\">Lambda execution environment</a>.",
            "type": "integer",
            "minimum": 1
          },
          "MemorySize": {
            "description": "The amount of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console\">memory available to the function</a> at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.",
            "type": "integer",
            "minimum": 128,
            "maximum": 10240
          },
          "VpcConfig": {
            "description": "The VPC security groups and subnets that are attached to a Lambda function. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html\">Configuring a Lambda function to access resources in a VPC</a>.",
            "type": "object",
            "properties": {
              "SubnetIds": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SubnetIds"
                  },
                  {
                    "description": "A list of VPC subnet IDs."
                  }
                ]
              },
              "SecurityGroupIds": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SecurityGroupIds"
                  },
                  {
                    "description": "A list of VPC security group IDs."
                  }
                ]
              }
            }
          },
          "Environment": {
            "description": "A function's environment variable settings. You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration.",
            "type": "object",
            "properties": {
              "Variables": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EnvironmentVariables"
                  },
                  {
                    "description": "Environment variable key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html\">Using Lambda environment variables</a>."
                  }
                ]
              }
            }
          },
          "Runtime": {
            "description": "<p>The identifier of the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime</a>. Runtime is required if the deployment package is a .zip file archive.</p> <p>The following list includes deprecated runtimes. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy\">Runtime deprecation policy</a>.</p>",
            "type": "string",
            "enum": [
              "nodejs",
              "nodejs4.3",
              "nodejs6.10",
              "nodejs8.10",
              "nodejs10.x",
              "nodejs12.x",
              "nodejs14.x",
              "nodejs16.x",
              "java8",
              "java8.al2",
              "java11",
              "python2.7",
              "python3.6",
              "python3.7",
              "python3.8",
              "python3.9",
              "dotnetcore1.0",
              "dotnetcore2.0",
              "dotnetcore2.1",
              "dotnetcore3.1",
              "dotnet6",
              "nodejs4.3-edge",
              "go1.x",
              "ruby2.5",
              "ruby2.7",
              "provided",
              "provided.al2",
              "nodejs18.x",
              "python3.10",
              "java17",
              "ruby3.2",
              "python3.11"
            ]
          },
          "DeadLetterConfig": {
            "description": "The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">dead-letter queue</a> for failed asynchronous invocations.",
            "type": "object",
            "properties": {
              "TargetArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ResourceArn"
                  },
                  {
                    "description": "The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic."
                  }
                ]
              }
            }
          },
          "KMSKeyArn": {
            "description": "The ARN of the Key Management Service (KMS) customer managed key that's used to encrypt your function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption\">environment variables</a>. When <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html\">Lambda SnapStart</a> is activated, Lambda also uses this key is to encrypt your function's snapshot. If you deploy your function using a container image, Lambda also uses this key to encrypt your function when it's deployed. Note that this is not the same key that's used to protect your container image in the Amazon Elastic Container Registry (Amazon ECR). If you don't provide a customer managed key, Lambda uses a default service key.",
            "type": "string",
            "pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()"
          },
          "TracingConfig": {
            "description": "The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html\">X-Ray</a> tracing configuration. To sample and record incoming requests, set <code>Mode</code> to <code>Active</code>.",
            "type": "object",
            "properties": {
              "Mode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TracingMode"
                  },
                  {
                    "description": "The tracing mode."
                  }
                ]
              }
            }
          },
          "RevisionId": {
            "description": "Update the function only if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.",
            "type": "string"
          },
          "Layers": {
            "description": "A list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">function layers</a> to add to the function's execution environment. Specify each layer by its ARN, including the version.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/LayerVersionArn"
            }
          },
          "FileSystemConfigs": {
            "description": "Connection settings for an Amazon EFS file system.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/FileSystemConfig"
            },
            "maxItems": 1
          },
          "ImageConfig": {
            "description": "Configuration values that override the container image Dockerfile settings. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms\">Container image settings</a>.",
            "type": "object",
            "properties": {
              "EntryPoint": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringList"
                  },
                  {
                    "description": "Specifies the entry point to their application, which is typically the location of the runtime executable."
                  }
                ]
              },
              "Command": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringList"
                  },
                  {
                    "description": "Specifies parameters that you want to pass in with ENTRYPOINT."
                  }
                ]
              },
              "WorkingDirectory": {
                "allOf": [
                  {
                    "$ref": "#/$defs/WorkingDirectory"
                  },
                  {
                    "description": "Specifies the working directory."
                  }
                ]
              }
            }
          },
          "EphemeralStorage": {
            "description": "The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but it can be any whole number between 512 and 10,240 MB.",
            "type": "object",
            "properties": {
              "Size": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EphemeralStorageSize"
                  },
                  {
                    "description": "The size of the function's <code>/tmp</code> directory."
                  }
                ]
              }
            }
          },
          "SnapStart": {
            "description": "The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html\">Lambda SnapStart</a> setting. Set <code>ApplyOn</code> to <code>PublishedVersions</code> to create a snapshot of the initialized execution environment when you publish a function version.",
            "type": "object",
            "properties": {
              "ApplyOn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SnapStartApplyOn"
                  },
                  {
                    "description": "Set to <code>PublishedVersions</code> to create a snapshot of the initialized execution environment when you publish a function version."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "FunctionName",
      "body"
    ],
    "$defs": {
      "SubnetIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetId"
        },
        "maxItems": 16
      },
      "SubnetId": {
        "type": "string"
      },
      "SecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SecurityGroupId"
        },
        "maxItems": 5
      },
      "SecurityGroupId": {
        "type": "string"
      },
      "EnvironmentVariables": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/EnvironmentVariableValue"
        }
      },
      "EnvironmentVariableValue": {
        "type": "string",
        "format": "password"
      },
      "ResourceArn": {
        "type": "string",
        "pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()"
      },
      "TracingMode": {
        "type": "string",
        "enum": [
          "Active",
          "PassThrough"
        ]
      },
      "LayerVersionArn": {
        "type": "string",
        "pattern": "arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+",
        "minLength": 1,
        "maxLength": 140
      },
      "FileSystemConfig": {
        "type": "object",
        "required": [
          "Arn",
          "LocalMountPath"
        ],
        "properties": {
          "Arn": {
            "allOf": [
              {
                "$ref": "#/$defs/FileSystemArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system."
              }
            ]
          },
          "LocalMountPath": {
            "allOf": [
              {
                "$ref": "#/$defs/LocalMountPath"
              },
              {
                "description": "The path where the function can access the file system, starting with <code>/mnt/</code>."
              }
            ]
          }
        },
        "description": "Details about the connection between a Lambda function and an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html\">Amazon EFS file system</a>."
      },
      "FileSystemArn": {
        "type": "string",
        "pattern": "arn:aws[a-zA-Z-]*:elasticfilesystem:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:access-point/fsap-[a-f0-9]{17}",
        "maxLength": 200
      },
      "LocalMountPath": {
        "type": "string",
        "pattern": "^/mnt/[a-zA-Z0-9-_.]+$",
        "maxLength": 160
      },
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "maxItems": 1500
      },
      "String": {
        "type": "string"
      },
      "WorkingDirectory": {
        "type": "string",
        "maxLength": 1000
      },
      "EphemeralStorageSize": {
        "type": "integer",
        "minimum": 512,
        "maximum": 10240
      },
      "SnapStartApplyOn": {
        "type": "string",
        "enum": [
          "PublishedVersions",
          "None"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://lambda.us-east-1.amazonaws.com/2015-03-31/functions/{FunctionName}/configuration"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Details about a function's configuration.",
        "**Key properties:**",
        {
          "$ul": [
            "**FunctionName**",
            "**FunctionArn**",
            "**Runtime**",
            "**Role**",
            "**Handler**",
            "**CodeSize**",
            "**Description**",
            "**Timeout**",
            "**MemorySize**",
            "**LastModified**",
            "**CodeSha256**",
            "**Version**",
            "**VpcConfig**",
            "**DeadLetterConfig**",
            "**Environment**",
            "**KMSKeyArn**",
            "**TracingConfig**",
            "**MasterArn**",
            "**RevisionId**",
            "**Layers**",
            "**State**",
            "**StateReason**",
            "**StateReasonCode**",
            "**LastUpdateStatus**",
            "**LastUpdateStatusReason**",
            "**LastUpdateStatusReasonCode**",
            "**FileSystemConfigs**",
            "**PackageType**",
            "**ImageConfigResponse**",
            "**SigningProfileVersionArn**",
            "**SigningJobArn**",
            "**Architectures**",
            "**EphemeralStorage**",
            "**SnapStart**",
            "**RuntimeVersionConfig**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
