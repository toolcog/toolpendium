{
  "name": "UpdateFunctionConfiguration",
  "description": "<p>Updates the configuration parameters for the specified Lambda function by using the values provided in the request. You provide only the parameters you want to change. This operation must only be used on an existing Lambda function and cannot be used to update the function's code. </p> <p>This operation requires permission for the <code>lambda:UpdateFunctionConfiguration</code> action.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "FunctionName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-_]+",
        "minLength": 1,
        "maxLength": 64,
        "description": "The name of the Lambda function."
      },
      "Role": {
        "type": "string",
        "pattern": "arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "description": "The Amazon Resource Name (ARN) of the IAM role that Lambda will assume when it executes your function. "
      },
      "Handler": {
        "type": "string",
        "pattern": "[a-zA-Z0-9./\\-_]+",
        "description": "The function that Lambda calls to begin executing your function. For Node.js, it is the <i>module-name.export</i> value in your function. "
      },
      "Description": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256,
        "description": "A short user-defined function description. Lambda does not use this value. Assign a meaningful description as you see fit."
      },
      "Timeout": {
        "type": "integer",
        "minimum": 1,
        "maximum": 60,
        "description": "The function execution time at which Lambda should terminate the function. Because the execution time has cost implications, we recommend you set this value based on your expected execution time. The default is 3 seconds. "
      },
      "MemorySize": {
        "type": "integer",
        "minimum": 128,
        "maximum": 1024,
        "description": "The amount of memory, in MB, your Lambda function is given. Lambda uses this memory size to infer the amount of CPU allocated to your function. Your function use-case determines your CPU and memory requirements. For example, a database operation might need less memory compared to an image processing function. The default value is 128 MB. The value must be a multiple of 64 MB."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "FunctionName"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://lambda.us-east-1.amazonaws.com/2014-11-13/functions/{FunctionName}/configuration{?Role,Handler,Description,Timeout,MemorySize}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A complex type that describes function metadata.",
        "**Key properties:**",
        {
          "$ul": [
            "**FunctionName**",
            "**FunctionARN**",
            "**ConfigurationId**",
            "**Runtime**",
            "**Role**",
            "**Handler**",
            "**Mode**",
            "**CodeSize**",
            "**Description**",
            "**Timeout**",
            "**MemorySize**",
            "**LastModified**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "One of the parameters in the request is invalid. For example, if you provided an IAM role for AWS Lambda to assume in the <code>UploadFunction</code> or the <code>UpdateFunctionConfiguration</code> API, that AWS Lambda is unable to assume you will get this exception. ",
        "**Key properties:**",
        {
          "$ul": [
            "**Type**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The function or the event source specified in the request does not exist.",
        "**Key properties:**",
        {
          "$ul": [
            "**Type**",
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The AWS Lambda service encountered an internal error.",
        "**Key properties:**",
        {
          "$ul": [
            "**Type**",
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
