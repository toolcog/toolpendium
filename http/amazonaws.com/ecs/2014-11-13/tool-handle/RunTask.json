{
  "name": "RunTask",
  "description": "<p>Starts a new task using the specified task definition.</p> <p>You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS places tasks using placement constraints and placement strategies. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html\">Scheduling Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>Alternatively, you can use <a>StartTask</a> to use your own scheduler or place tasks manually on specific container instances.</p> <note> <p>Starting April 15, 2023, Amazon Web Services will not onboard new customers to Amazon Elastic Inference (EI), and will help current customers migrate their workloads to options that offer better price and performance. After April 15, 2023, new customers will not be able to launch instances with Amazon EI accelerators in Amazon SageMaker, Amazon ECS, or Amazon EC2. However, customers who have used Amazon EI at least once during the past 30-day period are considered current customers and will be able to continue using the service. </p> </note> <p>The Amazon ECS API follows an eventual consistency model. This is because of the distributed nature of the system supporting the API. This means that the result of an API command you run that affects your Amazon ECS resources might not be immediately visible to all subsequent commands you run. Keep this in mind when you carry out an API command that immediately follows a previous API command.</p> <p>To manage eventual consistency, you can do the following:</p> <ul> <li> <p>Confirm the state of the resource before you run a command to modify it. Run the DescribeTasks command using an exponential backoff algorithm to ensure that you allow enough time for the previous command to propagate through the system. To do this, run the DescribeTasks command repeatedly, starting with a couple of seconds of wait time and increasing gradually up to five minutes of wait time.</p> </li> <li> <p>Add wait time between subsequent commands, even if the DescribeTasks command returns an accurate response. Apply an exponential backoff algorithm starting with a couple of seconds of wait time, and increase gradually up to about five minutes of wait time.</p> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonEC2ContainerServiceV20141113.RunTask"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/RunTaskRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "RunTaskRequest": {
        "type": "object",
        "required": [
          "taskDefinition"
        ],
        "title": "RunTaskRequest",
        "properties": {
          "capacityProviderStrategy": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacityProviderStrategy"
              },
              {
                "description": "<p>The capacity provider strategy to use for the task.</p> <p>If a <code>capacityProviderStrategy</code> is specified, the <code>launchType</code> parameter must be omitted. If no <code>capacityProviderStrategy</code> or <code>launchType</code> is specified, the <code>defaultCapacityProviderStrategy</code> for the cluster is used.</p> <p>When you use cluster auto scaling, you must specify <code>capacityProviderStrategy</code> and not <code>launchType</code>. </p> <p>A capacity provider strategy may contain a maximum of 6 capacity providers.</p>"
              }
            ]
          },
          "cluster": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The short name or full Amazon Resource Name (ARN) of the cluster to run your task on. If you do not specify a cluster, the default cluster is assumed."
              }
            ]
          },
          "count": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedInteger"
              },
              {
                "description": "The number of instantiations of the specified task to place on your cluster. You can specify up to 10 tasks for each call."
              }
            ]
          },
          "enableECSManagedTags": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether to use Amazon ECS managed tags for the task. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html\">Tagging Your Amazon ECS Resources</a> in the <i>Amazon Elastic Container Service Developer Guide</i>."
              }
            ]
          },
          "enableExecuteCommand": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Determines whether to use the execute command functionality for the containers in this task. If <code>true</code>, this enables execute command functionality on all containers in the task.</p> <p>If <code>true</code>, then the task definition must have a task role, or you must provide one as an override.</p>"
              }
            ]
          },
          "group": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the task group to associate with the task. The default value is the family name of the task definition (for example, <code>family:my-family-name</code>)."
              }
            ]
          },
          "launchType": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchType"
              },
              {
                "description": "<p>The infrastructure to run your standalone task on. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html\">Amazon ECS launch types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>The <code>FARGATE</code> launch type runs your tasks on Fargate On-Demand infrastructure.</p> <note> <p>Fargate Spot infrastructure is available for use but a capacity provider strategy must be used. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/userguide/fargate-capacity-providers.html\">Fargate capacity providers</a> in the <i>Amazon ECS User Guide for Fargate</i>.</p> </note> <p>The <code>EC2</code> launch type runs your tasks on Amazon EC2 instances registered to your cluster.</p> <p>The <code>EXTERNAL</code> launch type runs your tasks on your on-premises server or virtual machine (VM) capacity registered to your cluster.</p> <p>A task can use either a launch type or a capacity provider strategy. If a <code>launchType</code> is specified, the <code>capacityProviderStrategy</code> parameter must be omitted.</p> <p>When you use cluster auto scaling, you must specify <code>capacityProviderStrategy</code> and not <code>launchType</code>. </p>"
              }
            ]
          },
          "networkConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkConfiguration"
              },
              {
                "description": "The network configuration for the task. This parameter is required for task definitions that use the <code>awsvpc</code> network mode to receive their own elastic network interface, and it isn't supported for other network modes. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html\">Task networking</a> in the <i>Amazon Elastic Container Service Developer Guide</i>."
              }
            ]
          },
          "overrides": {
            "allOf": [
              {
                "$ref": "#/$defs/TaskOverride"
              },
              {
                "description": "<p>A list of container overrides in JSON format that specify the name of a container in the specified task definition and the overrides it should receive. You can override the default command for a container (that's specified in the task definition or Docker image) with a <code>command</code> override. You can also override existing environment variables (that are specified in the task definition or Docker image) on a container or add new environment variables to it with an <code>environment</code> override.</p> <p>A total of 8192 characters are allowed for overrides. This limit includes the JSON formatting characters of the override structure.</p>"
              }
            ]
          },
          "placementConstraints": {
            "allOf": [
              {
                "$ref": "#/$defs/PlacementConstraints"
              },
              {
                "description": "An array of placement constraint objects to use for the task. You can specify up to 10 constraints for each task (including constraints in the task definition and those specified at runtime)."
              }
            ]
          },
          "placementStrategy": {
            "allOf": [
              {
                "$ref": "#/$defs/PlacementStrategies"
              },
              {
                "description": "The placement strategy objects to use for the task. You can specify a maximum of 5 strategy rules for each task."
              }
            ]
          },
          "platformVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The platform version the task uses. A platform version is only specified for tasks hosted on Fargate. If one isn't specified, the <code>LATEST</code> platform version is used. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\">Fargate platform versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>."
              }
            ]
          },
          "propagateTags": {
            "allOf": [
              {
                "$ref": "#/$defs/PropagateTags"
              },
              {
                "description": "<p>Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags aren't propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the <a>TagResource</a> API action.</p> <note> <p>An error will be received if you specify the <code>SERVICE</code> option when running a task.</p> </note>"
              }
            ]
          },
          "referenceId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The reference ID to use for the task. The reference ID can have a maximum length of 1024 characters."
              }
            ]
          },
          "startedBy": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>An optional tag specified when a task is started. For example, if you automatically trigger a task to run a batch process job, you could apply a unique identifier for that job to your task with the <code>startedBy</code> parameter. You can then identify which tasks belong to that job by filtering the results of a <a>ListTasks</a> call with the <code>startedBy</code> value. Up to 36 letters (uppercase and lowercase), numbers, hyphens (-), and underscores (_) are allowed.</p> <p>If a task is started by an Amazon ECS service, then the <code>startedBy</code> parameter contains the deployment ID of the service that starts it.</p>"
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/Tags"
              },
              {
                "description": "<p>The metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p> <p>The following basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number of tags per resource - 50</p> </li> <li> <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p> </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8</p> </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8</p> </li> <li> <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case-sensitive.</p> </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.</p> </li> </ul>"
              }
            ]
          },
          "taskDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or full ARN of the task definition to run. If a <code>revision</code> isn't specified, the latest <code>ACTIVE</code> revision is used.</p> <p>When you create a policy for run-task, you can set the resource to be the latest task definition revision, or a specific revision.</p> <p>The full ARN value must match the value that you specified as the <code>Resource</code> of the principal's permissions policy.</p> <p>When you specify the policy resource as the latest task definition version (by setting the <code>Resource</code> in the policy to <code>arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName</code>), then set this value to <code>arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName</code>.</p> <p>When you specify the policy resource as a specific task definition version (by setting the <code>Resource</code> in the policy to <code>arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName:1</code> or <code>arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName:*</code>), then set this value to <code>arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName:1</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-resources\">Policy Resources for Amazon ECS</a> in the Amazon Elastic Container Service developer Guide.</p>"
              }
            ]
          }
        }
      },
      "CapacityProviderStrategy": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CapacityProviderStrategyItem"
        }
      },
      "CapacityProviderStrategyItem": {
        "type": "object",
        "required": [
          "capacityProvider"
        ],
        "properties": {
          "capacityProvider": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The short name of the capacity provider."
              }
            ]
          },
          "weight": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacityProviderStrategyItemWeight"
              },
              {
                "description": "<p>The <i>weight</i> value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The <code>weight</code> value is taken into consideration after the <code>base</code> value, if defined, is satisfied.</p> <p>If no <code>weight</code> value is specified, the default value of <code>0</code> is used. When multiple capacity providers are specified within a capacity provider strategy, at least one of the capacity providers must have a weight value greater than zero and any capacity providers with a weight of <code>0</code> can't be used to place tasks. If you specify multiple capacity providers in a strategy that all have a weight of <code>0</code>, any <code>RunTask</code> or <code>CreateService</code> actions using the capacity provider strategy will fail.</p> <p>An example scenario for using weights is defining a strategy that contains two capacity providers and both have a weight of <code>1</code>, then when the <code>base</code> is satisfied, the tasks will be split evenly across the two capacity providers. Using that same logic, if you specify a weight of <code>1</code> for <i>capacityProviderA</i> and a weight of <code>4</code> for <i>capacityProviderB</i>, then for every one task that's run using <i>capacityProviderA</i>, four tasks would use <i>capacityProviderB</i>.</p>"
              }
            ]
          },
          "base": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacityProviderStrategyItemBase"
              },
              {
                "description": "The <i>base</i> value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a <i>base</i> defined. If no value is specified, the default value of <code>0</code> is used."
              }
            ]
          }
        },
        "description": "<p>The details of a capacity provider strategy. A capacity provider strategy can be set when using the <a>RunTask</a> or <a>CreateCluster</a> APIs or as the default capacity provider strategy for a cluster with the <a>CreateCluster</a> API.</p> <p>Only capacity providers that are already associated with a cluster and have an <code>ACTIVE</code> or <code>UPDATING</code> status can be used in a capacity provider strategy. The <a>PutClusterCapacityProviders</a> API is used to associate a capacity provider with a cluster.</p> <p>If specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New Auto Scaling group capacity providers can be created with the <a>CreateCapacityProvider</a> API operation.</p> <p>To use a Fargate capacity provider, specify either the <code>FARGATE</code> or <code>FARGATE_SPOT</code> capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used in a capacity provider strategy.</p> <p>A capacity provider strategy may contain a maximum of 6 capacity providers.</p>"
      },
      "String": {
        "type": "string"
      },
      "CapacityProviderStrategyItemWeight": {
        "type": "integer",
        "minimum": 0,
        "maximum": 1000
      },
      "CapacityProviderStrategyItemBase": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100000
      },
      "BoxedInteger": {
        "type": "integer"
      },
      "Boolean": {
        "type": "boolean"
      },
      "LaunchType": {
        "type": "string",
        "enum": [
          "EC2",
          "FARGATE",
          "EXTERNAL"
        ]
      },
      "NetworkConfiguration": {
        "type": "object",
        "properties": {
          "awsvpcConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsVpcConfiguration"
              },
              {
                "description": "<p>The VPC subnets and security groups that are associated with a task.</p> <note> <p>All specified subnets and security groups must be from the same VPC.</p> </note>"
              }
            ]
          }
        },
        "description": "The network configuration for a task or service."
      },
      "AwsVpcConfiguration": {
        "type": "object",
        "required": [
          "subnets"
        ],
        "properties": {
          "subnets": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "<p>The IDs of the subnets associated with the task or service. There's a limit of 16 subnets that can be specified per <code>AwsVpcConfiguration</code>.</p> <note> <p>All specified subnets must be from the same VPC.</p> </note>"
              }
            ]
          },
          "securityGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "<p>The IDs of the security groups associated with the task or service. If you don't specify a security group, the default security group for the VPC is used. There's a limit of 5 security groups that can be specified per <code>AwsVpcConfiguration</code>.</p> <note> <p>All specified security groups must be from the same VPC.</p> </note>"
              }
            ]
          },
          "assignPublicIp": {
            "allOf": [
              {
                "$ref": "#/$defs/AssignPublicIp"
              },
              {
                "description": "Whether the task's elastic network interface receives a public IP address. The default value is <code>DISABLED</code>."
              }
            ]
          }
        },
        "description": "An object representing the networking details for a task or service."
      },
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "AssignPublicIp": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "TaskOverride": {
        "type": "object",
        "properties": {
          "containerOverrides": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerOverrides"
              },
              {
                "description": "One or more container overrides that are sent to a task."
              }
            ]
          },
          "cpu": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The CPU override for the task."
              }
            ]
          },
          "inferenceAcceleratorOverrides": {
            "allOf": [
              {
                "$ref": "#/$defs/InferenceAcceleratorOverrides"
              },
              {
                "description": "The Elastic Inference accelerator override for the task."
              }
            ]
          },
          "executionRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the task execution role override for the task. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html\">Amazon ECS task execution IAM role</a> in the <i>Amazon Elastic Container Service Developer Guide</i>."
              }
            ]
          },
          "memory": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The memory override for the task."
              }
            ]
          },
          "taskRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html\">IAM Role for Tasks</a> in the <i>Amazon Elastic Container Service Developer Guide</i>."
              }
            ]
          },
          "ephemeralStorage": {
            "allOf": [
              {
                "$ref": "#/$defs/EphemeralStorage"
              },
              {
                "description": "<p>The ephemeral storage setting override for the task.</p> <note> <p>This parameter is only supported for tasks hosted on Fargate that use the following platform versions:</p> <ul> <li> <p>Linux platform version <code>1.4.0</code> or later.</p> </li> <li> <p>Windows platform version <code>1.0.0</code> or later.</p> </li> </ul> </note>"
              }
            ]
          }
        },
        "description": "The overrides that are associated with a task."
      },
      "ContainerOverrides": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ContainerOverride"
        }
      },
      "ContainerOverride": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the container that receives the override. This parameter is required if any override is specified."
              }
            ]
          },
          "command": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "The command to send to the container that overrides the default command from the Docker image or the task definition. You must also specify a container name."
              }
            ]
          },
          "environment": {
            "allOf": [
              {
                "$ref": "#/$defs/EnvironmentVariables"
              },
              {
                "description": "The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition. You must also specify a container name."
              }
            ]
          },
          "environmentFiles": {
            "allOf": [
              {
                "$ref": "#/$defs/EnvironmentFiles"
              },
              {
                "description": "A list of files containing the environment variables to pass to a container, instead of the value from the container definition."
              }
            ]
          },
          "cpu": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedInteger"
              },
              {
                "description": "The number of <code>cpu</code> units reserved for the container, instead of the default value from the task definition. You must also specify a container name."
              }
            ]
          },
          "memory": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedInteger"
              },
              {
                "description": "The hard limit (in MiB) of memory to present to the container, instead of the default value from the task definition. If your container attempts to exceed the memory specified here, the container is killed. You must also specify a container name."
              }
            ]
          },
          "memoryReservation": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedInteger"
              },
              {
                "description": "The soft limit (in MiB) of memory to reserve for the container, instead of the default value from the task definition. You must also specify a container name."
              }
            ]
          },
          "resourceRequirements": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceRequirements"
              },
              {
                "description": "The type and amount of a resource to assign to a container, instead of the default value from the task definition. The only supported resource is a GPU."
              }
            ]
          }
        },
        "description": "<p>The overrides that are sent to a container. An empty container override can be passed in. An example of an empty container override is <code>{\"containerOverrides\": [ ] }</code>. If a non-empty container override is specified, the <code>name</code> parameter must be included.</p> <p>You can use Secrets Manager or Amazon Web Services Systems Manager Parameter Store to store the sensitive data. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/secrets-envvar.html\">Retrieve secrets through environment variables</a> in the Amazon ECS Developer Guide.</p>"
      },
      "EnvironmentVariables": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/KeyValuePair"
        }
      },
      "KeyValuePair": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the key-value pair. For environment variables, this is the name of the environment variable."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value of the key-value pair. For environment variables, this is the value of the environment variable."
              }
            ]
          }
        },
        "description": "A key-value pair object."
      },
      "EnvironmentFiles": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EnvironmentFile"
        }
      },
      "EnvironmentFile": {
        "type": "object",
        "required": [
          "value",
          "type"
        ],
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon S3 object containing the environment variable file."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/EnvironmentFileType"
              },
              {
                "description": "The file type to use. The only supported value is <code>s3</code>."
              }
            ]
          }
        },
        "description": "<p>A list of files containing the environment variables to pass to a container. You can specify up to ten environment files. The file must have a <code>.env</code> file extension. Each line in an environment file should contain an environment variable in <code>VARIABLE=VALUE</code> format. Lines beginning with <code>#</code> are treated as comments and are ignored. For more information about the environment variable file syntax, see <a href=\"https://docs.docker.com/compose/env-file/\">Declare default environment variables in file</a>.</p> <p>If there are environment variables specified using the <code>environment</code> parameter in a container definition, they take precedence over the variables contained within an environment file. If multiple environment files are specified that contain the same variable, they're processed from the top down. We recommend that you use unique variable names. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html\">Specifying environment variables</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>You must use the following platforms for the Fargate launch type:</p> <ul> <li> <p>Linux platform version <code>1.4.0</code> or later.</p> </li> <li> <p>Windows platform version <code>1.0.0</code> or later.</p> </li> </ul>"
      },
      "EnvironmentFileType": {
        "type": "string",
        "enum": [
          "s3"
        ]
      },
      "ResourceRequirements": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ResourceRequirement"
        }
      },
      "ResourceRequirement": {
        "type": "object",
        "required": [
          "value",
          "type"
        ],
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The value for the specified resource type.</p> <p>If the <code>GPU</code> type is used, the value is the number of physical <code>GPUs</code> the Amazon ECS container agent reserves for the container. The number of GPUs that's reserved for all containers in a task can't exceed the number of available GPUs on the container instance that the task is launched on.</p> <p>If the <code>InferenceAccelerator</code> type is used, the <code>value</code> matches the <code>deviceName</code> for an <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_InferenceAccelerator.html\">InferenceAccelerator</a> specified in a task definition.</p>"
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceType"
              },
              {
                "description": "The type of resource to assign to a container. The supported values are <code>GPU</code> or <code>InferenceAccelerator</code>."
              }
            ]
          }
        },
        "description": "The type and amount of a resource to assign to a container. The supported resource types are GPUs and Elastic Inference accelerators. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-gpu.html\">Working with GPUs on Amazon ECS</a> or <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html\">Working with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i> "
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "GPU",
          "InferenceAccelerator"
        ]
      },
      "InferenceAcceleratorOverrides": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InferenceAcceleratorOverride"
        }
      },
      "InferenceAcceleratorOverride": {
        "type": "object",
        "properties": {
          "deviceName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Elastic Inference accelerator device name to override for the task. This parameter must match a <code>deviceName</code> specified in the task definition."
              }
            ]
          },
          "deviceType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Elastic Inference accelerator type to use."
              }
            ]
          }
        },
        "description": "Details on an Elastic Inference accelerator task override. This parameter is used to override the Elastic Inference accelerator specified in the task definition. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html\">Working with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>."
      },
      "EphemeralStorage": {
        "type": "object",
        "required": [
          "sizeInGiB"
        ],
        "properties": {
          "sizeInGiB": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is <code>21</code> GiB and the maximum supported value is <code>200</code> GiB."
              }
            ]
          }
        },
        "description": "<p>The amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on Fargate. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/userguide/using_data_volumes.html\">Fargate task storage</a> in the <i>Amazon ECS User Guide for Fargate</i>.</p> <note> <p>For tasks using the Fargate launch type, the task requires the following platforms:</p> <ul> <li> <p>Linux platform version <code>1.4.0</code> or later.</p> </li> <li> <p>Windows platform version <code>1.0.0</code> or later.</p> </li> </ul> </note>"
      },
      "Integer": {
        "type": "integer"
      },
      "PlacementConstraints": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PlacementConstraint"
        }
      },
      "PlacementConstraint": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/PlacementConstraintType"
              },
              {
                "description": "The type of constraint. Use <code>distinctInstance</code> to ensure that each task in a particular group is running on a different container instance. Use <code>memberOf</code> to restrict the selection to a group of valid candidates."
              }
            ]
          },
          "expression": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters. You can't specify an expression if the constraint type is <code>distinctInstance</code>. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html\">Cluster query language</a> in the <i>Amazon Elastic Container Service Developer Guide</i>."
              }
            ]
          }
        },
        "description": "<p>An object representing a constraint on task placement. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html\">Task placement constraints</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <note> <p>If you're using the Fargate launch type, task placement constraints aren't supported.</p> </note>"
      },
      "PlacementConstraintType": {
        "type": "string",
        "enum": [
          "distinctInstance",
          "memberOf"
        ]
      },
      "PlacementStrategies": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PlacementStrategy"
        }
      },
      "PlacementStrategy": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/PlacementStrategyType"
              },
              {
                "description": "The type of placement strategy. The <code>random</code> placement strategy randomly places tasks on available candidates. The <code>spread</code> placement strategy spreads placement across available candidates evenly based on the <code>field</code> parameter. The <code>binpack</code> strategy places tasks on available candidates that have the least available amount of the resource that's specified with the <code>field</code> parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory but still enough to run the task."
              }
            ]
          },
          "field": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The field to apply the placement strategy against. For the <code>spread</code> placement strategy, valid values are <code>instanceId</code> (or <code>host</code>, which has the same effect), or any platform or custom attribute that's applied to a container instance, such as <code>attribute:ecs.availability-zone</code>. For the <code>binpack</code> placement strategy, valid values are <code>cpu</code> and <code>memory</code>. For the <code>random</code> placement strategy, this field is not used."
              }
            ]
          }
        },
        "description": "The task placement strategy for a task or service. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html\">Task placement strategies</a> in the <i>Amazon Elastic Container Service Developer Guide</i>."
      },
      "PlacementStrategyType": {
        "type": "string",
        "enum": [
          "random",
          "spread",
          "binpack"
        ]
      },
      "PropagateTags": {
        "type": "string",
        "enum": [
          "TASK_DEFINITION",
          "SERVICE",
          "NONE"
        ]
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "One part of a key-value pair that make up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a descriptor within a tag category (key)."
              }
            ]
          }
        },
        "description": "<p>The metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value. You define them.</p> <p>The following basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number of tags per resource - 50</p> </li> <li> <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p> </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8</p> </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8</p> </li> <li> <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case-sensitive.</p> </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.</p> </li> </ul>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ecs.us-east-1.amazonaws.com/#X-Amz-Target=AmazonEC2ContainerServiceV20141113.RunTask"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**tasks**",
            "**failures**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
