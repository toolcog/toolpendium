{
  "name": "ListAssessmentRuns",
  "description": "Lists the assessment runs that correspond to the assessment templates that are specified by the ARNs of the assessment templates.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "InspectorService.ListAssessmentRuns"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListAssessmentRunsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListAssessmentRunsRequest": {
        "type": "object",
        "title": "ListAssessmentRunsRequest",
        "properties": {
          "assessmentTemplateArns": {
            "allOf": [
              {
                "$ref": "#/$defs/ListParentArnList"
              },
              {
                "description": "The ARNs that specify the assessment templates whose assessment runs you want to list."
              }
            ]
          },
          "filter": {
            "allOf": [
              {
                "$ref": "#/$defs/AssessmentRunFilter"
              },
              {
                "description": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/PaginationToken"
              },
              {
                "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentRuns</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data."
              }
            ]
          },
          "maxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/ListMaxResults"
              },
              {
                "description": "You can use this parameter to indicate the maximum number of items that you want in the response. The default value is 10. The maximum value is 500."
              }
            ]
          }
        }
      },
      "ListParentArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Arn"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Arn": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300
      },
      "AssessmentRunFilter": {
        "type": "object",
        "properties": {
          "namePattern": {
            "allOf": [
              {
                "$ref": "#/$defs/NamePattern"
              },
              {
                "description": "For a record to match a filter, an explicit value or a string containing a wildcard that is specified for this data type property must match the value of the <b>assessmentRunName</b> property of the <a>AssessmentRun</a> data type."
              }
            ]
          },
          "states": {
            "allOf": [
              {
                "$ref": "#/$defs/AssessmentRunStateList"
              },
              {
                "description": "For a record to match a filter, one of the values specified for this data type property must be the exact match of the value of the <b>assessmentRunState</b> property of the <a>AssessmentRun</a> data type."
              }
            ]
          },
          "durationRange": {
            "allOf": [
              {
                "$ref": "#/$defs/DurationRange"
              },
              {
                "description": "For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>durationInSeconds</b> property of the <a>AssessmentRun</a> data type."
              }
            ]
          },
          "rulesPackageArns": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterRulesPackageArnList"
              },
              {
                "description": "For a record to match a filter, the value that is specified for this data type property must be contained in the list of values of the <b>rulesPackages</b> property of the <a>AssessmentRun</a> data type."
              }
            ]
          },
          "startTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampRange"
              },
              {
                "description": "For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>startTime</b> property of the <a>AssessmentRun</a> data type."
              }
            ]
          },
          "completionTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampRange"
              },
              {
                "description": "For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>completedAt</b> property of the <a>AssessmentRun</a> data type."
              }
            ]
          },
          "stateChangeTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampRange"
              },
              {
                "description": "For a record to match a filter, the value that is specified for this data type property must match the <b>stateChangedAt</b> property of the <a>AssessmentRun</a> data type."
              }
            ]
          }
        },
        "description": "Used as the request parameter in the <a>ListAssessmentRuns</a> action."
      },
      "NamePattern": {
        "type": "string",
        "minLength": 1,
        "maxLength": 140
      },
      "AssessmentRunStateList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AssessmentRunState"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "AssessmentRunState": {
        "type": "string",
        "enum": [
          "CREATED",
          "START_DATA_COLLECTION_PENDING",
          "START_DATA_COLLECTION_IN_PROGRESS",
          "COLLECTING_DATA",
          "STOP_DATA_COLLECTION_PENDING",
          "DATA_COLLECTED",
          "START_EVALUATING_RULES_PENDING",
          "EVALUATING_RULES",
          "FAILED",
          "ERROR",
          "COMPLETED",
          "COMPLETED_WITH_ERRORS",
          "CANCELED"
        ]
      },
      "DurationRange": {
        "type": "object",
        "properties": {
          "minSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/AssessmentRunDuration"
              },
              {
                "description": "The minimum value of the duration range. Must be greater than zero."
              }
            ]
          },
          "maxSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/AssessmentRunDuration"
              },
              {
                "description": "The maximum value of the duration range. Must be less than or equal to 604800 seconds (1 week)."
              }
            ]
          }
        },
        "description": "This data type is used in the <a>AssessmentTemplateFilter</a> data type."
      },
      "AssessmentRunDuration": {
        "type": "integer",
        "minimum": 180,
        "maximum": 86400
      },
      "FilterRulesPackageArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Arn"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "TimestampRange": {
        "type": "object",
        "properties": {
          "beginDate": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The minimum value of the timestamp range."
              }
            ]
          },
          "endDate": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The maximum value of the timestamp range."
              }
            ]
          }
        },
        "description": "This data type is used in the <a>AssessmentRunFilter</a> data type."
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "PaginationToken": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300
      },
      "ListMaxResults": {
        "type": "integer"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://inspector.us-east-1.amazonaws.com/#X-Amz-Target=InspectorService.ListAssessmentRuns{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**assessmentRunArns**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
