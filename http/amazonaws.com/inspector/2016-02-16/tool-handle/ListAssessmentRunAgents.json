{
  "name": "ListAssessmentRunAgents",
  "description": "Lists the agents of the assessment runs that are specified by the ARNs of the assessment runs.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "InspectorService.ListAssessmentRunAgents"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListAssessmentRunAgentsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListAssessmentRunAgentsRequest": {
        "type": "object",
        "required": [
          "assessmentRunArn"
        ],
        "title": "ListAssessmentRunAgentsRequest",
        "properties": {
          "assessmentRunArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN that specifies the assessment run whose agents you want to list."
              }
            ]
          },
          "filter": {
            "allOf": [
              {
                "$ref": "#/$defs/AgentFilter"
              },
              {
                "description": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/PaginationToken"
              },
              {
                "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentRunAgents</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data."
              }
            ]
          },
          "maxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/ListMaxResults"
              },
              {
                "description": "You can use this parameter to indicate the maximum number of items that you want in the response. The default value is 10. The maximum value is 500."
              }
            ]
          }
        }
      },
      "Arn": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300
      },
      "AgentFilter": {
        "type": "object",
        "required": [
          "agentHealths",
          "agentHealthCodes"
        ],
        "properties": {
          "agentHealths": {
            "allOf": [
              {
                "$ref": "#/$defs/AgentHealthList"
              },
              {
                "description": "The current health state of the agent. Values can be set to <b>HEALTHY</b> or <b>UNHEALTHY</b>."
              }
            ]
          },
          "agentHealthCodes": {
            "allOf": [
              {
                "$ref": "#/$defs/AgentHealthCodeList"
              },
              {
                "description": "The detailed health state of the agent. Values can be set to <b>IDLE</b>, <b>RUNNING</b>, <b>SHUTDOWN</b>, <b>UNHEALTHY</b>, <b>THROTTLED</b>, and <b>UNKNOWN</b>. "
              }
            ]
          }
        },
        "description": "Contains information about an Amazon Inspector agent. This data type is used as a request parameter in the <a>ListAssessmentRunAgents</a> action."
      },
      "AgentHealthList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AgentHealth"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "AgentHealth": {
        "type": "string",
        "enum": [
          "HEALTHY",
          "UNHEALTHY",
          "UNKNOWN"
        ]
      },
      "AgentHealthCodeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AgentHealthCode"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "AgentHealthCode": {
        "type": "string",
        "enum": [
          "IDLE",
          "RUNNING",
          "SHUTDOWN",
          "UNHEALTHY",
          "THROTTLED",
          "UNKNOWN"
        ]
      },
      "PaginationToken": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300
      },
      "ListMaxResults": {
        "type": "integer"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://inspector.us-east-1.amazonaws.com/#X-Amz-Target=InspectorService.ListAssessmentRunAgents{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**assessmentRunAgents**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
