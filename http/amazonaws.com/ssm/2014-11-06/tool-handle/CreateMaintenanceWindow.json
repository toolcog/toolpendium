{
  "name": "CreateMaintenanceWindow",
  "description": "<p>Creates a new maintenance window.</p> <note> <p>The value you specify for <code>Duration</code> determines the specific end time for the maintenance window based on the time it begins. No maintenance window tasks are permitted to start after the resulting endtime minus the number of hours you specify for <code>Cutoff</code>. For example, if the maintenance window starts at 3 PM, the duration is three hours, and the value you specify for <code>Cutoff</code> is one hour, no maintenance window tasks can start after 5 PM.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.CreateMaintenanceWindow"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateMaintenanceWindowRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateMaintenanceWindowRequest": {
        "type": "object",
        "required": [
          "Name",
          "Schedule",
          "Duration",
          "Cutoff",
          "AllowUnassociatedTargets"
        ],
        "title": "CreateMaintenanceWindowRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowName"
              },
              {
                "description": "The name of the maintenance window."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowDescription"
              },
              {
                "description": "An optional description for the maintenance window. We recommend specifying a description to help you organize your maintenance windows. "
              }
            ]
          },
          "StartDate": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowStringDateTime"
              },
              {
                "description": "The date and time, in ISO-8601 Extended format, for when you want the maintenance window to become active. <code>StartDate</code> allows you to delay activation of the maintenance window until the specified future date."
              }
            ]
          },
          "EndDate": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowStringDateTime"
              },
              {
                "description": "The date and time, in ISO-8601 Extended format, for when you want the maintenance window to become inactive. <code>EndDate</code> allows you to set a date and time in the future when the maintenance window will no longer run."
              }
            ]
          },
          "Schedule": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowSchedule"
              },
              {
                "description": "The schedule of the maintenance window in the form of a cron or rate expression."
              }
            ]
          },
          "ScheduleTimezone": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowTimezone"
              },
              {
                "description": "The time zone that the scheduled maintenance window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: \"America/Los_Angeles\", \"UTC\", or \"Asia/Seoul\". For more information, see the <a href=\"https://www.iana.org/time-zones\">Time Zone Database</a> on the IANA website."
              }
            ]
          },
          "ScheduleOffset": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowOffset"
              },
              {
                "description": "<p>The number of days to wait after the date and time specified by a cron expression before running the maintenance window.</p> <p>For example, the following cron expression schedules a maintenance window to run on the third Tuesday of every month at 11:30 PM.</p> <p> <code>cron(30 23 ? * TUE#3 *)</code> </p> <p>If the schedule offset is <code>2</code>, the maintenance window won't run until two days later.</p>"
              }
            ]
          },
          "Duration": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowDurationHours"
              },
              {
                "description": "The duration of the maintenance window in hours."
              }
            ]
          },
          "Cutoff": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowCutoff"
              },
              {
                "description": "The number of hours before the end of the maintenance window that Amazon Web Services Systems Manager stops scheduling new tasks for execution."
              }
            ]
          },
          "AllowUnassociatedTargets": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowAllowUnassociatedTargets"
              },
              {
                "description": "<p>Enables a maintenance window task to run on managed nodes, even if you haven't registered those nodes as targets. If enabled, then you must specify the unregistered managed nodes (by node ID) when you register a task with the maintenance window.</p> <p>If you don't enable this option, then you must specify previously-registered targets when you register a task with the maintenance window.</p>"
              }
            ]
          },
          "ClientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientToken"
              },
              {
                "description": "User-provided idempotency token."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a maintenance window to identify the type of tasks it will run, the types of targets, and the environment it will run in. In this case, you could specify the following key-value pairs:</p> <ul> <li> <p> <code>Key=TaskType,Value=AgentUpdate</code> </p> </li> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> <li> <p> <code>Key=Environment,Value=Production</code> </p> </li> </ul> <note> <p>To add tags to an existing maintenance window, use the <a>AddTagsToResource</a> operation.</p> </note>"
              }
            ]
          }
        }
      },
      "MaintenanceWindowName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
        "minLength": 3,
        "maxLength": 128
      },
      "MaintenanceWindowDescription": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "MaintenanceWindowStringDateTime": {
        "type": "string"
      },
      "MaintenanceWindowSchedule": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "MaintenanceWindowTimezone": {
        "type": "string"
      },
      "MaintenanceWindowOffset": {
        "type": "integer",
        "minimum": 1,
        "maximum": 6
      },
      "MaintenanceWindowDurationHours": {
        "type": "integer",
        "minimum": 1,
        "maximum": 24
      },
      "MaintenanceWindowCutoff": {
        "type": "integer",
        "minimum": 0,
        "maximum": 23
      },
      "MaintenanceWindowAllowUnassociatedTargets": {
        "type": "boolean"
      },
      "ClientToken": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "maxItems": 1000
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The name of the tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of the tag."
              }
            ]
          }
        },
        "description": "Metadata that you assign to your Amazon Web Services resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Amazon Web Services Systems Manager, you can apply tags to Systems Manager documents (SSM documents), managed nodes, maintenance windows, parameters, patch baselines, OpsItems, and OpsMetadata."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.CreateMaintenanceWindow"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**WindowId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
