{
  "name": "PutInventory",
  "description": "Bulk update custom inventory items on one or more managed nodes. The request adds an inventory item, if it doesn't already exist, or updates an inventory item, if it does exist.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.PutInventory"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutInventoryRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutInventoryRequest": {
        "type": "object",
        "required": [
          "InstanceId",
          "Items"
        ],
        "title": "PutInventoryRequest",
        "properties": {
          "InstanceId": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceId"
              },
              {
                "description": "An managed node ID where you want to add or update inventory items."
              }
            ]
          },
          "Items": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryItemList"
              },
              {
                "description": "The inventory items that you want to add or update on managed nodes."
              }
            ]
          }
        }
      },
      "InstanceId": {
        "type": "string",
        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)"
      },
      "InventoryItemList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InventoryItem"
        },
        "minItems": 1,
        "maxItems": 30
      },
      "InventoryItem": {
        "type": "object",
        "required": [
          "TypeName",
          "SchemaVersion",
          "CaptureTime"
        ],
        "properties": {
          "TypeName": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryItemTypeName"
              },
              {
                "description": "The name of the inventory type. Default inventory item type names start with <code>AWS</code>. Custom inventory type names will start with Custom. Default inventory item types include the following: <code>AWS:AWSComponent</code>, <code>AWS:Application</code>, <code>AWS:InstanceInformation</code>, <code>AWS:Network</code>, and <code>AWS:WindowsUpdate</code>."
              }
            ]
          },
          "SchemaVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryItemSchemaVersion"
              },
              {
                "description": "The schema version for the inventory item."
              }
            ]
          },
          "CaptureTime": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryItemCaptureTime"
              },
              {
                "description": "The time the inventory information was collected."
              }
            ]
          },
          "ContentHash": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryItemContentHash"
              },
              {
                "description": "MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API doesn't update the inventory item type contents if the MD5 hash hasn't changed since last update. "
              }
            ]
          },
          "Content": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryItemEntryList"
              },
              {
                "description": "The inventory data of the inventory type."
              }
            ]
          },
          "Context": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryItemContentContext"
              },
              {
                "description": "A map of associated properties for a specified inventory type. For example, with this attribute, you can specify the <code>ExecutionId</code>, <code>ExecutionType</code>, <code>ComplianceType</code> properties of the <code>AWS:ComplianceItem</code> type."
              }
            ]
          }
        },
        "description": "Information collected from managed nodes based on your inventory policy document"
      },
      "InventoryItemTypeName": {
        "type": "string",
        "pattern": "^(AWS|Custom):.*$",
        "minLength": 1,
        "maxLength": 100
      },
      "InventoryItemSchemaVersion": {
        "type": "string",
        "pattern": "^([0-9]{1,6})(\\.[0-9]{1,6})$"
      },
      "InventoryItemCaptureTime": {
        "type": "string",
        "pattern": "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$"
      },
      "InventoryItemContentHash": {
        "type": "string",
        "maxLength": 256
      },
      "InventoryItemEntryList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InventoryItemEntry"
        },
        "minItems": 0,
        "maxItems": 10000
      },
      "InventoryItemEntry": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/AttributeValue"
        }
      },
      "AttributeValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 4096
      },
      "InventoryItemContentContext": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/AttributeValue"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.PutInventory"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "490": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "491": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
