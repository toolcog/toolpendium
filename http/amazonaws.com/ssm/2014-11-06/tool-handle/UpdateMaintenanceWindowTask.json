{
  "name": "UpdateMaintenanceWindowTask",
  "description": "<p>Modifies a task assigned to a maintenance window. You can't change the task type, but you can change the following values:</p> <ul> <li> <p> <code>TaskARN</code>. For example, you can change a <code>RUN_COMMAND</code> task from <code>AWS-RunPowerShellScript</code> to <code>AWS-RunShellScript</code>.</p> </li> <li> <p> <code>ServiceRoleArn</code> </p> </li> <li> <p> <code>TaskInvocationParameters</code> </p> </li> <li> <p> <code>Priority</code> </p> </li> <li> <p> <code>MaxConcurrency</code> </p> </li> <li> <p> <code>MaxErrors</code> </p> </li> </ul> <note> <p>One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">Registering maintenance window tasks without targets</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note> <p>If the value for a parameter in <code>UpdateMaintenanceWindowTask</code> is null, then the corresponding field isn't modified. If you set <code>Replace</code> to true, then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a> operation are required for this request. Optional fields that aren't specified are set to null.</p> <important> <p>When you update a maintenance window task that has options specified in <code>TaskInvocationParameters</code>, you must provide again all the <code>TaskInvocationParameters</code> values that you want to retain. The values you don't specify again are removed. For example, suppose that when you registered a Run Command task, you specified <code>TaskInvocationParameters</code> values for <code>Comment</code>, <code>NotificationConfig</code>, and <code>OutputS3BucketName</code>. If you update the maintenance window task and specify only a different <code>OutputS3BucketName</code> value, the values for <code>Comment</code> and <code>NotificationConfig</code> are removed.</p> </important>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.UpdateMaintenanceWindowTask"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateMaintenanceWindowTaskRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateMaintenanceWindowTaskRequest": {
        "type": "object",
        "required": [
          "WindowId",
          "WindowTaskId"
        ],
        "title": "UpdateMaintenanceWindowTaskRequest",
        "properties": {
          "WindowId": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowId"
              },
              {
                "description": "The maintenance window ID that contains the task to modify."
              }
            ]
          },
          "WindowTaskId": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowTaskId"
              },
              {
                "description": "The task ID to modify."
              }
            ]
          },
          "Targets": {
            "allOf": [
              {
                "$ref": "#/$defs/Targets"
              },
              {
                "description": "<p>The targets (either managed nodes or tags) to modify. Managed nodes are specified using the format <code>Key=instanceids,Values=instanceID_1,instanceID_2</code>. Tags are specified using the format <code> Key=tag_name,Values=tag_value</code>. </p> <note> <p>One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">Registering maintenance window tasks without targets</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note>"
              }
            ]
          },
          "TaskArn": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowTaskArn"
              },
              {
                "description": "The task ARN to modify."
              }
            ]
          },
          "ServiceRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceRole"
              },
              {
                "description": "<p>The Amazon Resource Name (ARN) of the IAM service role for Amazon Web Services Systems Manager to assume when running a maintenance window task. If you do not specify a service role ARN, Systems Manager uses your account's service-linked role. If no service-linked role for Systems Manager exists in your account, it is created when you run <code>RegisterTaskWithMaintenanceWindow</code>.</p> <p>For more information, see the following topics in the in the <i>Amazon Web Services Systems Manager User Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions\">Using service-linked roles for Systems Manager</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role\">Should I use a service-linked role or a custom service role to run maintenance window tasks? </a> </p> </li> </ul>"
              }
            ]
          },
          "TaskParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowTaskParameters"
              },
              {
                "description": "<p>The parameters to modify.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note> <p>The map has the following format:</p> <p>Key: string, between 1 and 255 characters</p> <p>Value: an array of strings, each string is between 1 and 255 characters</p>"
              }
            ]
          },
          "TaskInvocationParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowTaskInvocationParameters"
              },
              {
                "description": "<p>The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty.</p> <important> <p>When you update a maintenance window task that has options specified in <code>TaskInvocationParameters</code>, you must provide again all the <code>TaskInvocationParameters</code> values that you want to retain. The values you don't specify again are removed. For example, suppose that when you registered a Run Command task, you specified <code>TaskInvocationParameters</code> values for <code>Comment</code>, <code>NotificationConfig</code>, and <code>OutputS3BucketName</code>. If you update the maintenance window task and specify only a different <code>OutputS3BucketName</code> value, the values for <code>Comment</code> and <code>NotificationConfig</code> are removed.</p> </important>"
              }
            ]
          },
          "Priority": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowTaskPriority"
              },
              {
                "description": "The new task priority to specify. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel."
              }
            ]
          },
          "MaxConcurrency": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxConcurrency"
              },
              {
                "description": "<p>The new <code>MaxConcurrency</code> value you want to specify. <code>MaxConcurrency</code> is the number of targets that are allowed to run this task, in parallel.</p> <note> <p>Although this element is listed as \"Required: No\", a value can be omitted only when you are registering or updating a <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">targetless task</a> You must provide a value in all other cases.</p> <p>For maintenance window tasks without a target specified, you can't supply a value for this option. Instead, the system inserts a placeholder value of <code>1</code>. This value doesn't affect the running of your task.</p> </note>"
              }
            ]
          },
          "MaxErrors": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxErrors"
              },
              {
                "description": "<p>The new <code>MaxErrors</code> value to specify. <code>MaxErrors</code> is the maximum number of errors that are allowed before the task stops being scheduled.</p> <note> <p>Although this element is listed as \"Required: No\", a value can be omitted only when you are registering or updating a <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">targetless task</a> You must provide a value in all other cases.</p> <p>For maintenance window tasks without a target specified, you can't supply a value for this option. Instead, the system inserts a placeholder value of <code>1</code>. This value doesn't affect the running of your task.</p> </note>"
              }
            ]
          },
          "LoggingInfo": {
            "allOf": [
              {
                "$ref": "#/$defs/LoggingInfo"
              },
              {
                "description": "<p>The new logging location in Amazon S3 to specify.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>"
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowName"
              },
              {
                "description": "The new task name to specify."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowDescription"
              },
              {
                "description": "The new task description to specify."
              }
            ]
          },
          "Replace": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "If True, then all fields that are required by the <a>RegisterTaskWithMaintenanceWindow</a> operation are also required for this API request. Optional fields that aren't specified are set to null."
              }
            ]
          },
          "CutoffBehavior": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowTaskCutoffBehavior"
              },
              {
                "description": "<p>Indicates whether tasks should continue to run after the cutoff time specified in the maintenance windows is reached. </p> <ul> <li> <p> <code>CONTINUE_TASK</code>: When the cutoff time is reached, any tasks that are running continue. The default value.</p> </li> <li> <p> <code>CANCEL_TASK</code>:</p> <ul> <li> <p>For Automation, Lambda, Step Functions tasks: When the cutoff time is reached, any task invocations that are already running continue, but no new task invocations are started.</p> </li> <li> <p>For Run Command tasks: When the cutoff time is reached, the system sends a <a>CancelCommand</a> operation that attempts to cancel the command associated with the task. However, there is no guarantee that the command will be terminated and the underlying process stopped.</p> </li> </ul> <p>The status for tasks that are not completed is <code>TIMED_OUT</code>.</p> </li> </ul>"
              }
            ]
          },
          "AlarmConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/AlarmConfiguration"
              },
              {
                "description": "The CloudWatch alarm you want to apply to your maintenance window task."
              }
            ]
          }
        }
      },
      "MaintenanceWindowId": {
        "type": "string",
        "pattern": "^mw-[0-9a-f]{17}$",
        "minLength": 20,
        "maxLength": 20
      },
      "MaintenanceWindowTaskId": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
        "minLength": 36,
        "maxLength": 36
      },
      "Targets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Target"
        },
        "minItems": 0,
        "maxItems": 5
      },
      "Target": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetKey"
              },
              {
                "description": "User-defined criteria for sending commands that target managed nodes that meet the criteria."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetValues"
              },
              {
                "description": "<p>User-defined criteria that maps to <code>Key</code>. For example, if you specified <code>tag:ServerRole</code>, you could specify <code>value:WebServer</code> to run a command on instances that include EC2 tags of <code>ServerRole,WebServer</code>. </p> <p>Depending on the type of target, the maximum number of values for a key might be lower than the global maximum of 50.</p>"
              }
            ]
          }
        },
        "description": "<p>An array of search criteria that targets managed nodes using a key-value pair that you specify.</p> <note> <p> One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">Registering maintenance window tasks without targets</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note> <p>Supported formats include the following.</p> <ul> <li> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;,&lt;instance-id-3&gt;</code> </p> </li> <li> <p> <code>Key=tag:&lt;my-tag-key&gt;,Values=&lt;my-tag-value-1&gt;,&lt;my-tag-value-2&gt;</code> </p> </li> <li> <p> <code>Key=tag-key,Values=&lt;my-tag-key-1&gt;,&lt;my-tag-key-2&gt;</code> </p> </li> <li> <p> <b>Run Command and Maintenance window targets only</b>: <code>Key=resource-groups:Name,Values=&lt;resource-group-name&gt;</code> </p> </li> <li> <p> <b>Maintenance window targets only</b>: <code>Key=resource-groups:ResourceTypeFilters,Values=&lt;resource-type-1&gt;,&lt;resource-type-2&gt;</code> </p> </li> <li> <p> <b>Automation targets only</b>: <code>Key=ResourceGroup;Values=&lt;resource-group-name&gt;</code> </p> </li> </ul> <p>For example:</p> <ul> <li> <p> <code>Key=InstanceIds,Values=i-02573cafcfEXAMPLE,i-0471e04240EXAMPLE,i-07782c72faEXAMPLE</code> </p> </li> <li> <p> <code>Key=tag:CostCenter,Values=CostCenter1,CostCenter2,CostCenter3</code> </p> </li> <li> <p> <code>Key=tag-key,Values=Name,Instance-Type,CostCenter</code> </p> </li> <li> <p> <b>Run Command and Maintenance window targets only</b>: <code>Key=resource-groups:Name,Values=ProductionResourceGroup</code> </p> <p>This example demonstrates how to target all resources in the resource group <b>ProductionResourceGroup</b> in your maintenance window.</p> </li> <li> <p> <b>Maintenance window targets only</b>: <code>Key=resource-groups:ResourceTypeFilters,Values=AWS::EC2::INSTANCE,AWS::EC2::VPC</code> </p> <p>This example demonstrates how to target only Amazon Elastic Compute Cloud (Amazon EC2) instances and VPCs in your maintenance window.</p> </li> <li> <p> <b>Automation targets only</b>: <code>Key=ResourceGroup,Values=MyResourceGroup</code> </p> </li> <li> <p> <b>State Manager association targets only</b>: <code>Key=InstanceIds,Values=*</code> </p> <p>This example demonstrates how to target all managed instances in the Amazon Web Services Region where the association was created.</p> </li> </ul> <p>For more information about how to send commands that target managed nodes using <code>Key,Value</code> parameters, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\">Targeting multiple instances</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
      },
      "TargetKey": {
        "type": "string",
        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name",
        "minLength": 1,
        "maxLength": 163
      },
      "TargetValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TargetValue"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "TargetValue": {
        "type": "string"
      },
      "MaintenanceWindowTaskArn": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1600
      },
      "ServiceRole": {
        "type": "string"
      },
      "MaintenanceWindowTaskParameters": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/MaintenanceWindowTaskParameterValueExpression"
        }
      },
      "MaintenanceWindowTaskParameterValueExpression": {
        "type": "object",
        "properties": {
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowTaskParameterValueList"
              },
              {
                "description": "This field contains an array of 0 or more strings, each 1 to 255 characters in length."
              }
            ]
          }
        },
        "description": "Defines the values for a task parameter."
      },
      "MaintenanceWindowTaskParameterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MaintenanceWindowTaskParameterValue"
        }
      },
      "MaintenanceWindowTaskParameterValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "format": "password"
      },
      "MaintenanceWindowTaskInvocationParameters": {
        "type": "object",
        "properties": {
          "RunCommand": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowRunCommandParameters"
              },
              {
                "description": "The parameters for a <code>RUN_COMMAND</code> task type."
              }
            ]
          },
          "Automation": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowAutomationParameters"
              },
              {
                "description": "The parameters for an <code>AUTOMATION</code> task type."
              }
            ]
          },
          "StepFunctions": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowStepFunctionsParameters"
              },
              {
                "description": "The parameters for a <code>STEP_FUNCTIONS</code> task type."
              }
            ]
          },
          "Lambda": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowLambdaParameters"
              },
              {
                "description": "The parameters for a <code>LAMBDA</code> task type."
              }
            ]
          }
        },
        "description": "The parameters for task execution."
      },
      "MaintenanceWindowRunCommandParameters": {
        "type": "object",
        "properties": {
          "Comment": {
            "allOf": [
              {
                "$ref": "#/$defs/Comment"
              },
              {
                "description": "Information about the commands to run."
              }
            ]
          },
          "CloudWatchOutputConfig": {
            "$ref": "#/$defs/CloudWatchOutputConfig"
          },
          "DocumentHash": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentHash"
              },
              {
                "description": "The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated."
              }
            ]
          },
          "DocumentHashType": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentHashType"
              },
              {
                "description": "SHA-256 or SHA-1. SHA-1 hashes have been deprecated."
              }
            ]
          },
          "DocumentVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentVersion"
              },
              {
                "description": "<p>The Amazon Web Services Systems Manager document (SSM document) version to use in the request. You can specify <code>$DEFAULT</code>, <code>$LATEST</code>, or a specific version number. If you run commands by using the Amazon Web Services CLI, then you must escape the first two options by using a backslash. If you specify a version number, then you don't need to use the backslash. For example:</p> <p> <code>--document-version \"\\$DEFAULT\"</code> </p> <p> <code>--document-version \"\\$LATEST\"</code> </p> <p> <code>--document-version \"3\"</code> </p>"
              }
            ]
          },
          "NotificationConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/NotificationConfig"
              },
              {
                "description": "Configurations for sending notifications about command status changes on a per-managed node basis."
              }
            ]
          },
          "OutputS3BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BucketName"
              },
              {
                "description": "The name of the Amazon Simple Storage Service (Amazon S3) bucket."
              }
            ]
          },
          "OutputS3KeyPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/S3KeyPrefix"
              },
              {
                "description": "The S3 bucket subfolder."
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/Parameters"
              },
              {
                "description": "The parameters for the <code>RUN_COMMAND</code> task execution."
              }
            ]
          },
          "ServiceRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceRole"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for maintenance window Run Command tasks."
              }
            ]
          },
          "TimeoutSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeoutSeconds"
              },
              {
                "description": "If this time is reached and the command hasn't already started running, it doesn't run."
              }
            ]
          }
        },
        "description": "<p>The parameters for a <code>RUN_COMMAND</code> task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For <code>RUN_COMMAND</code> tasks, Systems Manager uses specified values for <code>TaskParameters</code> and <code>LoggingInfo</code> only if no values are specified for <code>TaskInvocationParameters</code>. </p> </note>"
      },
      "Comment": {
        "type": "string",
        "maxLength": 100
      },
      "CloudWatchOutputConfig": {
        "type": "object",
        "properties": {
          "CloudWatchLogGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLogGroupName"
              },
              {
                "description": "<p>The name of the CloudWatch Logs log group where you want to send command output. If you don't specify a group name, Amazon Web Services Systems Manager automatically creates a log group for you. The log group uses the following naming format:</p> <p> <code>aws/ssm/<i>SystemsManagerDocumentName</i> </code> </p>"
              }
            ]
          },
          "CloudWatchOutputEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchOutputEnabled"
              },
              {
                "description": "Enables Systems Manager to send command output to CloudWatch Logs."
              }
            ]
          }
        },
        "description": "Configuration options for sending command output to Amazon CloudWatch Logs."
      },
      "CloudWatchLogGroupName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 512
      },
      "CloudWatchOutputEnabled": {
        "type": "boolean"
      },
      "DocumentHash": {
        "type": "string",
        "maxLength": 256
      },
      "DocumentHashType": {
        "type": "string",
        "enum": [
          "Sha256",
          "Sha1"
        ]
      },
      "DocumentVersion": {
        "type": "string",
        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)"
      },
      "NotificationConfig": {
        "type": "object",
        "properties": {
          "NotificationArn": {
            "allOf": [
              {
                "$ref": "#/$defs/NotificationArn"
              },
              {
                "description": "An Amazon Resource Name (ARN) for an Amazon Simple Notification Service (Amazon SNS) topic. Run Command pushes notifications about command status changes to this topic."
              }
            ]
          },
          "NotificationEvents": {
            "allOf": [
              {
                "$ref": "#/$defs/NotificationEventList"
              },
              {
                "description": "The different events for which you can receive notifications. To learn more about these events, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/monitoring-sns-notifications.html\">Monitoring Systems Manager status changes using Amazon SNS notifications</a> in the <i>Amazon Web Services Systems Manager User Guide</i>."
              }
            ]
          },
          "NotificationType": {
            "allOf": [
              {
                "$ref": "#/$defs/NotificationType"
              },
              {
                "description": "<p>The type of notification.</p> <ul> <li> <p> <code>Command</code>: Receive notification when the status of a command changes.</p> </li> <li> <p> <code>Invocation</code>: For commands sent to multiple managed nodes, receive notification on a per-node basis when the status of a command changes. </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Configurations for sending notifications."
      },
      "NotificationArn": {
        "type": "string"
      },
      "NotificationEventList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NotificationEvent"
        }
      },
      "NotificationEvent": {
        "type": "string",
        "enum": [
          "All",
          "InProgress",
          "Success",
          "TimedOut",
          "Cancelled",
          "Failed"
        ]
      },
      "NotificationType": {
        "type": "string",
        "enum": [
          "Command",
          "Invocation"
        ]
      },
      "S3BucketName": {
        "type": "string",
        "minLength": 3,
        "maxLength": 63
      },
      "S3KeyPrefix": {
        "type": "string",
        "maxLength": 500
      },
      "Parameters": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ParameterValueList"
        }
      },
      "ParameterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParameterValue"
        }
      },
      "ParameterValue": {
        "type": "string"
      },
      "TimeoutSeconds": {
        "type": "integer",
        "minimum": 30,
        "maximum": 2592000
      },
      "MaintenanceWindowAutomationParameters": {
        "type": "object",
        "properties": {
          "DocumentVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentVersion"
              },
              {
                "description": "The version of an Automation runbook to use during task execution."
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/AutomationParameterMap"
              },
              {
                "description": "<p>The parameters for the <code>AUTOMATION</code> task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For <code>AUTOMATION</code> task types, Amazon Web Services Systems Manager ignores any values specified for these parameters.</p> </note>"
              }
            ]
          }
        },
        "description": "The parameters for an <code>AUTOMATION</code> task type."
      },
      "AutomationParameterMap": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 200,
        "additionalProperties": {
          "$ref": "#/$defs/AutomationParameterValueList"
        }
      },
      "AutomationParameterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AutomationParameterValue"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "AutomationParameterValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 512
      },
      "MaintenanceWindowStepFunctionsParameters": {
        "type": "object",
        "properties": {
          "Input": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowStepFunctionsInput"
              },
              {
                "description": "The inputs for the <code>STEP_FUNCTIONS</code> task."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowStepFunctionsName"
              },
              {
                "description": "The name of the <code>STEP_FUNCTIONS</code> task."
              }
            ]
          }
        },
        "description": "<p>The parameters for a <code>STEP_FUNCTIONS</code> task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Step Functions tasks, Systems Manager ignores any values specified for <code>TaskParameters</code> and <code>LoggingInfo</code>.</p> </note>"
      },
      "MaintenanceWindowStepFunctionsInput": {
        "type": "string",
        "maxLength": 4096,
        "format": "password"
      },
      "MaintenanceWindowStepFunctionsName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 80
      },
      "MaintenanceWindowLambdaParameters": {
        "type": "object",
        "properties": {
          "ClientContext": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowLambdaClientContext"
              },
              {
                "description": "Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable."
              }
            ]
          },
          "Qualifier": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowLambdaQualifier"
              },
              {
                "description": "(Optional) Specify an Lambda function version or alias name. If you specify a function version, the operation uses the qualified function Amazon Resource Name (ARN) to invoke a specific Lambda function. If you specify an alias name, the operation uses the alias ARN to invoke the Lambda function version to which the alias points."
              }
            ]
          },
          "Payload": {
            "allOf": [
              {
                "$ref": "#/$defs/MaintenanceWindowLambdaPayload"
              },
              {
                "description": "JSON to provide to your Lambda function as input."
              }
            ]
          }
        },
        "description": "<p>The parameters for a <code>LAMBDA</code> task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Lambda tasks, Systems Manager ignores any values specified for TaskParameters and LoggingInfo.</p> </note>"
      },
      "MaintenanceWindowLambdaClientContext": {
        "type": "string",
        "minLength": 1,
        "maxLength": 8000
      },
      "MaintenanceWindowLambdaQualifier": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "MaintenanceWindowLambdaPayload": {
        "type": "string",
        "maxLength": 4096,
        "format": "password"
      },
      "MaintenanceWindowTaskPriority": {
        "type": "integer",
        "minimum": 0
      },
      "MaxConcurrency": {
        "type": "string",
        "pattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
        "minLength": 1,
        "maxLength": 7
      },
      "MaxErrors": {
        "type": "string",
        "pattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
        "minLength": 1,
        "maxLength": 7
      },
      "LoggingInfo": {
        "type": "object",
        "required": [
          "S3BucketName",
          "S3Region"
        ],
        "properties": {
          "S3BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BucketName"
              },
              {
                "description": "The name of an S3 bucket where execution logs are stored."
              }
            ]
          },
          "S3KeyPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/S3KeyPrefix"
              },
              {
                "description": "(Optional) The S3 bucket subfolder. "
              }
            ]
          },
          "S3Region": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Region"
              },
              {
                "description": "The Amazon Web Services Region where the S3 bucket is located."
              }
            ]
          }
        },
        "description": "<p>Information about an Amazon Simple Storage Service (Amazon S3) bucket to write managed node-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>"
      },
      "S3Region": {
        "type": "string",
        "minLength": 3,
        "maxLength": 20
      },
      "MaintenanceWindowName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$",
        "minLength": 3,
        "maxLength": 128
      },
      "MaintenanceWindowDescription": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "Boolean": {
        "type": "boolean"
      },
      "MaintenanceWindowTaskCutoffBehavior": {
        "type": "string",
        "enum": [
          "CONTINUE_TASK",
          "CANCEL_TASK"
        ]
      },
      "AlarmConfiguration": {
        "type": "object",
        "required": [
          "Alarms"
        ],
        "properties": {
          "IgnorePollAlarmFailure": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "When this value is <i>true</i>, your automation or command continues to run in cases where we can’t retrieve alarm status information from CloudWatch. In cases where we successfully retrieve an alarm status of OK or INSUFFICIENT_DATA, the automation or command continues to run, regardless of this value. Default is <i>false</i>."
              }
            ]
          },
          "Alarms": {
            "allOf": [
              {
                "$ref": "#/$defs/AlarmList"
              },
              {
                "description": "The name of the CloudWatch alarm specified in the configuration."
              }
            ]
          }
        },
        "description": "The details for the CloudWatch alarm you want to apply to an automation or command."
      },
      "AlarmList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Alarm"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "Alarm": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/AlarmName"
              },
              {
                "description": "The name of your CloudWatch alarm."
              }
            ]
          }
        },
        "description": "A CloudWatch alarm you apply to an automation or command."
      },
      "AlarmName": {
        "type": "string",
        "pattern": "^(?!\\s*$).+",
        "minLength": 1,
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTask"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**WindowId**",
            "**WindowTaskId**",
            "**Targets**",
            "**TaskArn**",
            "**ServiceRoleArn**",
            "**TaskParameters**",
            "**TaskInvocationParameters**",
            "**Priority**",
            "**MaxConcurrency**",
            "**MaxErrors**",
            "**LoggingInfo**",
            "**Name**",
            "**Description**",
            "**CutoffBehavior**",
            "**AlarmConfiguration**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
