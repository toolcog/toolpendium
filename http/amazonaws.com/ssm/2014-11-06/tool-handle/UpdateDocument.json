{
  "name": "UpdateDocument",
  "description": "Updates one or more values for an SSM document.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.UpdateDocument"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateDocumentRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateDocumentRequest": {
        "type": "object",
        "required": [
          "Content",
          "Name"
        ],
        "title": "UpdateDocumentRequest",
        "properties": {
          "Content": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentContent"
              },
              {
                "description": "A valid JSON or YAML string."
              }
            ]
          },
          "Attachments": {
            "allOf": [
              {
                "$ref": "#/$defs/AttachmentsSourceList"
              },
              {
                "description": "A list of key-value pairs that describe attachments to a version of a document."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentName"
              },
              {
                "description": "The name of the SSM document that you want to update."
              }
            ]
          },
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentDisplayName"
              },
              {
                "description": "The friendly name of the SSM document that you want to update. This value can differ for each version of the document. If you don't specify a value for this parameter in your request, the existing value is applied to the new document version."
              }
            ]
          },
          "VersionName": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentVersionName"
              },
              {
                "description": "An optional field specifying the version of the artifact you are updating with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and can't be changed."
              }
            ]
          },
          "DocumentVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentVersion"
              },
              {
                "description": "<p>The version of the document that you want to update. Currently, Systems Manager supports updating only the latest version of the document. You can specify the version number of the latest version or use the <code>$LATEST</code> variable.</p> <note> <p>If you change a document version for a State Manager association, Systems Manager immediately runs the association unless you previously specifed the <code>apply-only-at-cron-interval</code> parameter.</p> </note>"
              }
            ]
          },
          "DocumentFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentFormat"
              },
              {
                "description": "Specify the document format for the new document version. Systems Manager supports JSON and YAML documents. JSON is the default format."
              }
            ]
          },
          "TargetType": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetType"
              },
              {
                "description": "Specify a new target type for the document."
              }
            ]
          }
        }
      },
      "DocumentContent": {
        "type": "string",
        "minLength": 1
      },
      "AttachmentsSourceList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttachmentsSource"
        },
        "minItems": 0,
        "maxItems": 20
      },
      "AttachmentsSource": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/AttachmentsSourceKey"
              },
              {
                "description": "The key of a key-value pair that identifies the location of an attachment to a document."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/AttachmentsSourceValues"
              },
              {
                "description": "<p>The value of a key-value pair that identifies the location of an attachment to a document. The format for <b>Value</b> depends on the type of key you specify.</p> <ul> <li> <p>For the key <i>SourceUrl</i>, the value is an S3 bucket location. For example:</p> <p> <code>\"Values\": [ \"s3://doc-example-bucket/my-folder\" ]</code> </p> </li> <li> <p>For the key <i>S3FileUrl</i>, the value is a file in an S3 bucket. For example:</p> <p> <code>\"Values\": [ \"s3://doc-example-bucket/my-folder/my-file.py\" ]</code> </p> </li> <li> <p>For the key <i>AttachmentReference</i>, the value is constructed from the name of another SSM document in your account, a version number of that document, and a file attached to that document version that you want to reuse. For example:</p> <p> <code>\"Values\": [ \"MyOtherDocument/3/my-other-file.py\" ]</code> </p> <p>However, if the SSM document is shared with you from another account, the full SSM document ARN must be specified instead of the document name only. For example:</p> <p> <code>\"Values\": [ \"arn:aws:ssm:us-east-2:111122223333:document/OtherAccountDocument/3/their-file.py\" ]</code> </p> </li> </ul>"
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/AttachmentIdentifier"
              },
              {
                "description": "The name of the document attachment file."
              }
            ]
          }
        },
        "description": "Identifying information about a document attachment, including the file name and a key-value pair that identifies the location of an attachment to a document."
      },
      "AttachmentsSourceKey": {
        "type": "string",
        "enum": [
          "SourceUrl",
          "S3FileUrl",
          "AttachmentReference"
        ]
      },
      "AttachmentsSourceValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttachmentsSourceValue"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "AttachmentsSourceValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "AttachmentIdentifier": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$"
      },
      "DocumentName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$"
      },
      "DocumentDisplayName": {
        "type": "string",
        "pattern": "^[\\w\\.\\-\\:\\/ ]*$",
        "maxLength": 1024
      },
      "DocumentVersionName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$"
      },
      "DocumentVersion": {
        "type": "string",
        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)"
      },
      "DocumentFormat": {
        "type": "string",
        "enum": [
          "YAML",
          "JSON",
          "TEXT"
        ]
      },
      "TargetType": {
        "type": "string",
        "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
        "maxLength": 200
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.UpdateDocument"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**DocumentDescription**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
