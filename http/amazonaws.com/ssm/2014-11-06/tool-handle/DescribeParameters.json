{
  "name": "DescribeParameters",
  "description": "<p>Get information about a parameter.</p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p> <important> <p>If you change the KMS key alias for the KMS key used to encrypt a parameter, then you must also update the key alias the parameter uses to reference KMS. Otherwise, <code>DescribeParameters</code> retrieves whatever the original key alias was referencing.</p> </important>",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.DescribeParameters"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeParametersRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeParametersRequest": {
        "type": "object",
        "title": "DescribeParametersRequest",
        "properties": {
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/ParametersFilterList"
              },
              {
                "description": "This data type is deprecated. Instead, use <code>ParameterFilters</code>."
              }
            ]
          },
          "ParameterFilters": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterStringFilterList"
              },
              {
                "description": "Filters to limit the request results."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxResults"
              },
              {
                "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          }
        }
      },
      "ParametersFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParametersFilter"
        }
      },
      "ParametersFilter": {
        "type": "object",
        "required": [
          "Key",
          "Values"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/ParametersFilterKey"
              },
              {
                "description": "The name of the filter."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ParametersFilterValueList"
              },
              {
                "description": "The filter values."
              }
            ]
          }
        },
        "description": "This data type is deprecated. Instead, use <a>ParameterStringFilter</a>."
      },
      "ParametersFilterKey": {
        "type": "string",
        "enum": [
          "Name",
          "Type",
          "KeyId"
        ]
      },
      "ParametersFilterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParametersFilterValue"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "ParametersFilterValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "ParameterStringFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParameterStringFilter"
        }
      },
      "ParameterStringFilter": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterStringFilterKey"
              },
              {
                "description": "<p>The name of the filter.</p> <p>The <code>ParameterStringFilter</code> object is used by the <a>DescribeParameters</a> and <a>GetParametersByPath</a> API operations. However, not all of the pattern values listed for <code>Key</code> can be used with both operations.</p> <p>For <code>DescribeParameters</code>, all of the listed patterns are valid except <code>Label</code>.</p> <p>For <code>GetParametersByPath</code>, the following patterns listed for <code>Key</code> aren't valid: <code>tag</code>, <code>DataType</code>, <code>Name</code>, <code>Path</code>, and <code>Tier</code>.</p> <p>For examples of Amazon Web Services CLI commands demonstrating valid parameter filter constructions, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-search.html\">Searching for Systems Manager parameters</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
              }
            ]
          },
          "Option": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterStringQueryOption"
              },
              {
                "description": "<p>For all filters used with <a>DescribeParameters</a>, valid options include <code>Equals</code> and <code>BeginsWith</code>. The <code>Name</code> filter additionally supports the <code>Contains</code> option. (Exception: For filters using the key <code>Path</code>, valid options include <code>Recursive</code> and <code>OneLevel</code>.)</p> <p>For filters used with <a>GetParametersByPath</a>, valid options include <code>Equals</code> and <code>BeginsWith</code>. (Exception: For filters using <code>Label</code> as the Key name, the only valid option is <code>Equals</code>.)</p>"
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterStringFilterValueList"
              },
              {
                "description": "The value you want to search for."
              }
            ]
          }
        },
        "description": "One or more filters. Use a filter to return a more specific list of results."
      },
      "ParameterStringFilterKey": {
        "type": "string",
        "pattern": "tag:.+|Name|Type|KeyId|Path|Label|Tier|DataType",
        "minLength": 1,
        "maxLength": 132
      },
      "ParameterStringQueryOption": {
        "type": "string",
        "minLength": 1,
        "maxLength": 10
      },
      "ParameterStringFilterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParameterStringFilterValue"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "ParameterStringFilterValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 50
      },
      "NextToken": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.DescribeParameters{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Parameters**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
