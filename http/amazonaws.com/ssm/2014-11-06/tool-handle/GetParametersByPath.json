{
  "name": "GetParametersByPath",
  "description": "<p>Retrieve information about one or more parameters in a specific hierarchy. </p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.GetParametersByPath"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetParametersByPathRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetParametersByPathRequest": {
        "type": "object",
        "required": [
          "Path"
        ],
        "title": "GetParametersByPathRequest",
        "properties": {
          "Path": {
            "allOf": [
              {
                "$ref": "#/$defs/PSParameterName"
              },
              {
                "description": "The hierarchy for the parameter. Hierarchies start with a forward slash (/). The hierarchy is the parameter name except the last part of the parameter. For the API call to succeed, the last part of the parameter name can't be in the path. A parameter name hierarchy can have a maximum of 15 levels. Here is an example of a hierarchy: <code>/Finance/Prod/IAD/WinServ2016/license33 </code> "
              }
            ]
          },
          "Recursive": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Retrieve all parameters within a hierarchy.</p> <important> <p>If a user has access to a path, then the user can access all levels of that path. For example, if a user has permission to access path <code>/a</code>, then the user can also access <code>/a/b</code>. Even if a user has explicitly been denied access in IAM for parameter <code>/a/b</code>, they can still call the GetParametersByPath API operation recursively for <code>/a</code> and view <code>/a/b</code>.</p> </important>"
              }
            ]
          },
          "ParameterFilters": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterStringFilterList"
              },
              {
                "description": "<p>Filters to limit the request results.</p> <note> <p>The following <code>Key</code> values are supported for <code>GetParametersByPath</code>: <code>Type</code>, <code>KeyId</code>, and <code>Label</code>.</p> <p>The following <code>Key</code> values aren't supported for <code>GetParametersByPath</code>: <code>tag</code>, <code>DataType</code>, <code>Name</code>, <code>Path</code>, and <code>Tier</code>.</p> </note>"
              }
            ]
          },
          "WithDecryption": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Retrieve all parameters in a hierarchy with their value decrypted."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/GetParametersByPathMaxResults"
              },
              {
                "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "A token to start the list. Use this token to get the next set of results. "
              }
            ]
          }
        }
      },
      "PSParameterName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "Boolean": {
        "type": "boolean"
      },
      "ParameterStringFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParameterStringFilter"
        }
      },
      "ParameterStringFilter": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterStringFilterKey"
              },
              {
                "description": "<p>The name of the filter.</p> <p>The <code>ParameterStringFilter</code> object is used by the <a>DescribeParameters</a> and <a>GetParametersByPath</a> API operations. However, not all of the pattern values listed for <code>Key</code> can be used with both operations.</p> <p>For <code>DescribeParameters</code>, all of the listed patterns are valid except <code>Label</code>.</p> <p>For <code>GetParametersByPath</code>, the following patterns listed for <code>Key</code> aren't valid: <code>tag</code>, <code>DataType</code>, <code>Name</code>, <code>Path</code>, and <code>Tier</code>.</p> <p>For examples of Amazon Web Services CLI commands demonstrating valid parameter filter constructions, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-search.html\">Searching for Systems Manager parameters</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
              }
            ]
          },
          "Option": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterStringQueryOption"
              },
              {
                "description": "<p>For all filters used with <a>DescribeParameters</a>, valid options include <code>Equals</code> and <code>BeginsWith</code>. The <code>Name</code> filter additionally supports the <code>Contains</code> option. (Exception: For filters using the key <code>Path</code>, valid options include <code>Recursive</code> and <code>OneLevel</code>.)</p> <p>For filters used with <a>GetParametersByPath</a>, valid options include <code>Equals</code> and <code>BeginsWith</code>. (Exception: For filters using <code>Label</code> as the Key name, the only valid option is <code>Equals</code>.)</p>"
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterStringFilterValueList"
              },
              {
                "description": "The value you want to search for."
              }
            ]
          }
        },
        "description": "One or more filters. Use a filter to return a more specific list of results."
      },
      "ParameterStringFilterKey": {
        "type": "string",
        "pattern": "tag:.+|Name|Type|KeyId|Path|Label|Tier|DataType",
        "minLength": 1,
        "maxLength": 132
      },
      "ParameterStringQueryOption": {
        "type": "string",
        "minLength": 1,
        "maxLength": 10
      },
      "ParameterStringFilterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParameterStringFilterValue"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "ParameterStringFilterValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "GetParametersByPathMaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10
      },
      "NextToken": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.GetParametersByPath{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Parameters**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
