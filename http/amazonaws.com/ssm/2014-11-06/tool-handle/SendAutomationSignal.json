{
  "name": "SendAutomationSignal",
  "description": "Sends a signal to an Automation execution to change the current behavior or status of the execution. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.SendAutomationSignal"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/SendAutomationSignalRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "SendAutomationSignalRequest": {
        "type": "object",
        "required": [
          "AutomationExecutionId",
          "SignalType"
        ],
        "title": "SendAutomationSignalRequest",
        "properties": {
          "AutomationExecutionId": {
            "allOf": [
              {
                "$ref": "#/$defs/AutomationExecutionId"
              },
              {
                "description": "The unique identifier for an existing Automation execution that you want to send the signal to."
              }
            ]
          },
          "SignalType": {
            "allOf": [
              {
                "$ref": "#/$defs/SignalType"
              },
              {
                "description": "The type of signal to send to an Automation execution. "
              }
            ]
          },
          "Payload": {
            "allOf": [
              {
                "$ref": "#/$defs/AutomationParameterMap"
              },
              {
                "description": "<p>The data sent with the signal. The data schema depends on the type of signal used in the request.</p> <p>For <code>Approve</code> and <code>Reject</code> signal types, the payload is an optional comment that you can send with the signal type. For example:</p> <p> <code>Comment=\"Looks good\"</code> </p> <p>For <code>StartStep</code> and <code>Resume</code> signal types, you must send the name of the Automation step to start or resume as the payload. For example:</p> <p> <code>StepName=\"step1\"</code> </p> <p>For the <code>StopStep</code> signal type, you must send the step execution ID as the payload. For example:</p> <p> <code>StepExecutionId=\"97fff367-fc5a-4299-aed8-0123456789ab\"</code> </p>"
              }
            ]
          }
        }
      },
      "AutomationExecutionId": {
        "type": "string",
        "minLength": 36,
        "maxLength": 36
      },
      "SignalType": {
        "type": "string",
        "enum": [
          "Approve",
          "Reject",
          "StartStep",
          "StopStep",
          "Resume"
        ]
      },
      "AutomationParameterMap": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 200,
        "additionalProperties": {
          "$ref": "#/$defs/AutomationParameterValueList"
        }
      },
      "AutomationParameterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AutomationParameterValue"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "AutomationParameterValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 512
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.SendAutomationSignal"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
