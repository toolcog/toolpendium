{
  "name": "GetDeployablePatchSnapshotForInstance",
  "description": "<p>Retrieves the current snapshot for the patch baseline the managed node uses. This API is primarily used by the <code>AWS-RunPatchBaseline</code> Systems Manager document (SSM document).</p> <note> <p>If you run the command locally, such as with the Command Line Interface (CLI), the system attempts to use your local Amazon Web Services credentials and the operation fails. To avoid this, you can run the command in the Amazon Web Services Systems Manager console. Use Run Command, a capability of Amazon Web Services Systems Manager, with an SSM document that enables you to target a managed node with a script or command. For example, run the command using the <code>AWS-RunShellScript</code> document or the <code>AWS-RunPowerShellScript</code> document.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.GetDeployablePatchSnapshotForInstance"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetDeployablePatchSnapshotForInstanceRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetDeployablePatchSnapshotForInstanceRequest": {
        "type": "object",
        "required": [
          "InstanceId",
          "SnapshotId"
        ],
        "title": "GetDeployablePatchSnapshotForInstanceRequest",
        "properties": {
          "InstanceId": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceId"
              },
              {
                "description": "The ID of the managed node for which the appropriate patch snapshot should be retrieved."
              }
            ]
          },
          "SnapshotId": {
            "allOf": [
              {
                "$ref": "#/$defs/SnapshotId"
              },
              {
                "description": "The snapshot ID provided by the user when running <code>AWS-RunPatchBaseline</code>."
              }
            ]
          },
          "BaselineOverride": {
            "allOf": [
              {
                "$ref": "#/$defs/BaselineOverride"
              },
              {
                "description": "Defines the basic information about a patch baseline override."
              }
            ]
          }
        }
      },
      "InstanceId": {
        "type": "string",
        "pattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)"
      },
      "SnapshotId": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        "minLength": 36,
        "maxLength": 36
      },
      "BaselineOverride": {
        "type": "object",
        "properties": {
          "OperatingSystem": {
            "allOf": [
              {
                "$ref": "#/$defs/OperatingSystem"
              },
              {
                "description": "The operating system rule used by the patch baseline override."
              }
            ]
          },
          "GlobalFilters": {
            "$ref": "#/$defs/PatchFilterGroup"
          },
          "ApprovalRules": {
            "$ref": "#/$defs/PatchRuleGroup"
          },
          "ApprovedPatches": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchIdList"
              },
              {
                "description": "<p>A list of explicitly approved patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\">About package name formats for approved and rejected patch lists</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
              }
            ]
          },
          "ApprovedPatchesComplianceLevel": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchComplianceLevel"
              },
              {
                "description": "Defines the compliance level for approved patches. When an approved patch is reported as missing, this value describes the severity of the compliance violation."
              }
            ]
          },
          "RejectedPatches": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchIdList"
              },
              {
                "description": "<p>A list of explicitly rejected patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\">About package name formats for approved and rejected patch lists</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
              }
            ]
          },
          "RejectedPatchesAction": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchAction"
              },
              {
                "description": "The action for Patch Manager to take on patches included in the <code>RejectedPackages</code> list. A patch can be allowed only if it is a dependency of another package, or blocked entirely along with packages that include it as a dependency."
              }
            ]
          },
          "ApprovedPatchesEnableNonSecurity": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether the list of approved patches includes non-security updates that should be applied to the managed nodes. The default value is <code>false</code>. Applies to Linux managed nodes only."
              }
            ]
          },
          "Sources": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchSourceList"
              },
              {
                "description": "Information about the patches to use to update the managed nodes, including target operating systems and source repositories. Applies to Linux managed nodes only."
              }
            ]
          }
        },
        "description": "Defines the basic information about a patch baseline override."
      },
      "OperatingSystem": {
        "type": "string",
        "enum": [
          "WINDOWS",
          "AMAZON_LINUX",
          "AMAZON_LINUX_2",
          "AMAZON_LINUX_2022",
          "UBUNTU",
          "REDHAT_ENTERPRISE_LINUX",
          "SUSE",
          "CENTOS",
          "ORACLE_LINUX",
          "DEBIAN",
          "MACOS",
          "RASPBIAN",
          "ROCKY_LINUX",
          "ALMA_LINUX",
          "AMAZON_LINUX_2023"
        ]
      },
      "PatchFilterGroup": {
        "type": "object",
        "required": [
          "PatchFilters"
        ],
        "properties": {
          "PatchFilters": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchFilterList"
              },
              {
                "description": "The set of patch filters that make up the group."
              }
            ]
          }
        },
        "description": "A set of patch filters, typically used for approval rules."
      },
      "PatchFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PatchFilter"
        },
        "minItems": 0,
        "maxItems": 4
      },
      "PatchFilter": {
        "type": "object",
        "required": [
          "Key",
          "Values"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchFilterKey"
              },
              {
                "description": "<p>The key for the filter.</p> <p>Run the <a>DescribePatchProperties</a> command to view lists of valid keys for each operating system type.</p>"
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchFilterValueList"
              },
              {
                "description": "<p>The value for the filter key.</p> <p>Run the <a>DescribePatchProperties</a> command to view lists of valid values for each key based on operating system type.</p>"
              }
            ]
          }
        },
        "description": "<p> Defines which patches should be included in a patch baseline.</p> <p>A patch filter consists of a key and a set of values. The filter key is a patch property. For example, the available filter keys for <code>WINDOWS</code> are <code>PATCH_SET</code>, <code>PRODUCT</code>, <code>PRODUCT_FAMILY</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>.</p> <p>The filter values define a matching criterion for the patch property indicated by the key. For example, if the filter key is <code>PRODUCT</code> and the filter values are <code>[\"Office 2013\", \"Office 2016\"]</code>, then the filter accepts all patches where product name is either \"Office 2013\" or \"Office 2016\". The filter values can be exact values for the patch property given as a key, or a wildcard (*), which matches all values.</p> <p>You can view lists of valid values for the patch properties by running the <code>DescribePatchProperties</code> command. For information about which patch properties can be used with each major operating system, see <a>DescribePatchProperties</a>.</p>"
      },
      "PatchFilterKey": {
        "type": "string",
        "enum": [
          "ARCH",
          "ADVISORY_ID",
          "BUGZILLA_ID",
          "PATCH_SET",
          "PRODUCT",
          "PRODUCT_FAMILY",
          "CLASSIFICATION",
          "CVE_ID",
          "EPOCH",
          "MSRC_SEVERITY",
          "NAME",
          "PATCH_ID",
          "SECTION",
          "PRIORITY",
          "REPOSITORY",
          "RELEASE",
          "SEVERITY",
          "SECURITY",
          "VERSION"
        ]
      },
      "PatchFilterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PatchFilterValue"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "PatchFilterValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64
      },
      "PatchRuleGroup": {
        "type": "object",
        "required": [
          "PatchRules"
        ],
        "properties": {
          "PatchRules": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchRuleList"
              },
              {
                "description": "The rules that make up the rule group."
              }
            ]
          }
        },
        "description": "A set of rules defining the approval rules for a patch baseline."
      },
      "PatchRuleList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PatchRule"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "PatchRule": {
        "type": "object",
        "required": [
          "PatchFilterGroup"
        ],
        "properties": {
          "PatchFilterGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchFilterGroup"
              },
              {
                "description": "The patch filter group that defines the criteria for the rule."
              }
            ]
          },
          "ComplianceLevel": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchComplianceLevel"
              },
              {
                "description": "A compliance severity level for all approved patches in a patch baseline."
              }
            ]
          },
          "ApproveAfterDays": {
            "allOf": [
              {
                "$ref": "#/$defs/ApproveAfterDays"
              },
              {
                "description": "The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. Not supported on Debian Server or Ubuntu Server."
              }
            ]
          },
          "ApproveUntilDate": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchStringDateTime"
              },
              {
                "description": "<p>The cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Not supported on Debian Server or Ubuntu Server.</p> <p>Enter dates in the format <code>YYYY-MM-DD</code>. For example, <code>2021-12-31</code>.</p>"
              }
            ]
          },
          "EnableNonSecurity": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "For managed nodes identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is <code>false</code>. Applies to Linux managed nodes only."
              }
            ]
          }
        },
        "description": "Defines an approval rule for a patch baseline."
      },
      "PatchComplianceLevel": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "MEDIUM",
          "LOW",
          "INFORMATIONAL",
          "UNSPECIFIED"
        ]
      },
      "ApproveAfterDays": {
        "type": "integer",
        "minimum": 0,
        "maximum": 360
      },
      "PatchStringDateTime": {
        "type": "string",
        "minLength": 1,
        "maxLength": 10
      },
      "Boolean": {
        "type": "boolean"
      },
      "PatchIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PatchId"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "PatchId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "PatchAction": {
        "type": "string",
        "enum": [
          "ALLOW_AS_DEPENDENCY",
          "BLOCK"
        ]
      },
      "PatchSourceList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PatchSource"
        },
        "minItems": 0,
        "maxItems": 20
      },
      "PatchSource": {
        "type": "object",
        "required": [
          "Name",
          "Products",
          "Configuration"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchSourceName"
              },
              {
                "description": "The name specified to identify the patch source."
              }
            ]
          },
          "Products": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchSourceProductList"
              },
              {
                "description": "The specific operating system versions a patch repository applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\" or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>."
              }
            ]
          },
          "Configuration": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchSourceConfiguration"
              },
              {
                "description": "<p>The value of the yum repo configuration. For example:</p> <p> <code>[main]</code> </p> <p> <code>name=MyCustomRepository</code> </p> <p> <code>baseurl=https://my-custom-repository</code> </p> <p> <code>enabled=1</code> </p> <note> <p>For information about other options available for your yum repository configuration, see <a href=\"https://man7.org/linux/man-pages/man5/dnf.conf.5.html\">dnf.conf(5)</a>.</p> </note>"
              }
            ]
          }
        },
        "description": "Information about the patches to use to update the managed nodes, including target operating systems and source repository. Applies to Linux managed nodes only."
      },
      "PatchSourceName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.]{3,50}$"
      },
      "PatchSourceProductList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PatchSourceProduct"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "PatchSourceProduct": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "PatchSourceConfiguration": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024,
        "format": "password"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.GetDeployablePatchSnapshotForInstance"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**InstanceId**",
            "**SnapshotId**",
            "**SnapshotDownloadUrl**",
            "**Product**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
