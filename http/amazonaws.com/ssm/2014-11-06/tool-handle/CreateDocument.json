{
  "name": "CreateDocument",
  "description": "Creates a Amazon Web Services Systems Manager (SSM document). An SSM document defines the actions that Systems Manager performs on your managed nodes. For more information about SSM documents, including information about supported schemas, features, and syntax, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-ssm-docs.html\">Amazon Web Services Systems Manager Documents</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.CreateDocument"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateDocumentRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateDocumentRequest": {
        "type": "object",
        "required": [
          "Content",
          "Name"
        ],
        "title": "CreateDocumentRequest",
        "properties": {
          "Content": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentContent"
              },
              {
                "description": "<p>The content for the new SSM document in JSON or YAML format. The content of the document must not exceed 64KB. This quota also includes the content specified for input parameters at runtime. We recommend storing the contents for your new document in an external JSON or YAML file and referencing the file in a command.</p> <p>For examples, see the following topics in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/create-ssm-document-api.html\">Create an SSM document (Amazon Web Services API)</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/create-ssm-document-cli.html\">Create an SSM document (Amazon Web Services CLI)</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/create-ssm-document-api.html\">Create an SSM document (API)</a> </p> </li> </ul>"
              }
            ]
          },
          "Requires": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentRequiresList"
              },
              {
                "description": "A list of SSM documents required by a document. This parameter is used exclusively by AppConfig. When a user creates an AppConfig configuration in an SSM document, the user must also specify a required document for validation purposes. In this case, an <code>ApplicationConfiguration</code> document requires an <code>ApplicationConfigurationSchema</code> document for validation purposes. For more information, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html\">What is AppConfig?</a> in the <i>AppConfig User Guide</i>."
              }
            ]
          },
          "Attachments": {
            "allOf": [
              {
                "$ref": "#/$defs/AttachmentsSourceList"
              },
              {
                "description": "A list of key-value pairs that describe attachments to a version of a document."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentName"
              },
              {
                "description": "<p>A name for the SSM document.</p> <important> <p>You can't use the following strings as document name prefixes. These are reserved by Amazon Web Services for use as document name prefixes:</p> <ul> <li> <p> <code>aws</code> </p> </li> <li> <p> <code>amazon</code> </p> </li> <li> <p> <code>amzn</code> </p> </li> </ul> </important>"
              }
            ]
          },
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentDisplayName"
              },
              {
                "description": "An optional field where you can specify a friendly name for the SSM document. This value can differ for each version of the document. You can update this value at a later time using the <a>UpdateDocument</a> operation."
              }
            ]
          },
          "VersionName": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentVersionName"
              },
              {
                "description": "An optional field specifying the version of the artifact you are creating with the document. For example, <code>Release12.1</code>. This value is unique across all versions of a document, and can't be changed."
              }
            ]
          },
          "DocumentType": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentType"
              },
              {
                "description": "<p>The type of document to create.</p> <note> <p>The <code>DeploymentStrategy</code> document type is an internal-use-only document type reserved for AppConfig.</p> </note>"
              }
            ]
          },
          "DocumentFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentFormat"
              },
              {
                "description": "Specify the document format for the request. The document format can be JSON, YAML, or TEXT. JSON is the default format."
              }
            ]
          },
          "TargetType": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetType"
              },
              {
                "description": "Specify a target type to define the kinds of resources the document can run on. For example, to run a document on EC2 instances, specify the following value: <code>/AWS::EC2::Instance</code>. If you specify a value of '/' the document can run on all types of resources. If you don't specify a value, the document can't run on any resources. For a list of valid resource types, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\">Amazon Web Services resource and property types reference</a> in the <i>CloudFormation User Guide</i>. "
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "<p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag an SSM document to identify the types of targets or the environment where it will run. In this case, you could specify the following key-value pairs:</p> <ul> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> <li> <p> <code>Key=Environment,Value=Production</code> </p> </li> </ul> <note> <p>To add tags to an existing SSM document, use the <a>AddTagsToResource</a> operation.</p> </note>"
              }
            ]
          }
        }
      },
      "DocumentContent": {
        "type": "string",
        "minLength": 1
      },
      "DocumentRequiresList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DocumentRequires"
        },
        "minItems": 1
      },
      "DocumentRequires": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentARN"
              },
              {
                "description": "The name of the required SSM document. The name can be an Amazon Resource Name (ARN)."
              }
            ]
          },
          "Version": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentVersion"
              },
              {
                "description": "The document version required by the current document."
              }
            ]
          },
          "RequireType": {
            "allOf": [
              {
                "$ref": "#/$defs/RequireType"
              },
              {
                "description": "The document type of the required SSM document."
              }
            ]
          },
          "VersionName": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentVersionName"
              },
              {
                "description": "An optional field specifying the version of the artifact associated with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document, and can't be changed."
              }
            ]
          }
        },
        "description": "An SSM document required by the current document."
      },
      "DocumentARN": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$"
      },
      "DocumentVersion": {
        "type": "string",
        "pattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)"
      },
      "RequireType": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$",
        "maxLength": 128
      },
      "DocumentVersionName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.]{1,128}$"
      },
      "AttachmentsSourceList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttachmentsSource"
        },
        "minItems": 0,
        "maxItems": 20
      },
      "AttachmentsSource": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/AttachmentsSourceKey"
              },
              {
                "description": "The key of a key-value pair that identifies the location of an attachment to a document."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/AttachmentsSourceValues"
              },
              {
                "description": "<p>The value of a key-value pair that identifies the location of an attachment to a document. The format for <b>Value</b> depends on the type of key you specify.</p> <ul> <li> <p>For the key <i>SourceUrl</i>, the value is an S3 bucket location. For example:</p> <p> <code>\"Values\": [ \"s3://doc-example-bucket/my-folder\" ]</code> </p> </li> <li> <p>For the key <i>S3FileUrl</i>, the value is a file in an S3 bucket. For example:</p> <p> <code>\"Values\": [ \"s3://doc-example-bucket/my-folder/my-file.py\" ]</code> </p> </li> <li> <p>For the key <i>AttachmentReference</i>, the value is constructed from the name of another SSM document in your account, a version number of that document, and a file attached to that document version that you want to reuse. For example:</p> <p> <code>\"Values\": [ \"MyOtherDocument/3/my-other-file.py\" ]</code> </p> <p>However, if the SSM document is shared with you from another account, the full SSM document ARN must be specified instead of the document name only. For example:</p> <p> <code>\"Values\": [ \"arn:aws:ssm:us-east-2:111122223333:document/OtherAccountDocument/3/their-file.py\" ]</code> </p> </li> </ul>"
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/AttachmentIdentifier"
              },
              {
                "description": "The name of the document attachment file."
              }
            ]
          }
        },
        "description": "Identifying information about a document attachment, including the file name and a key-value pair that identifies the location of an attachment to a document."
      },
      "AttachmentsSourceKey": {
        "type": "string",
        "enum": [
          "SourceUrl",
          "S3FileUrl",
          "AttachmentReference"
        ]
      },
      "AttachmentsSourceValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttachmentsSourceValue"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "AttachmentsSourceValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "AttachmentIdentifier": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$"
      },
      "DocumentName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.]{3,128}$"
      },
      "DocumentDisplayName": {
        "type": "string",
        "pattern": "^[\\w\\.\\-\\:\\/ ]*$",
        "maxLength": 1024
      },
      "DocumentType": {
        "type": "string",
        "enum": [
          "Command",
          "Policy",
          "Automation",
          "Session",
          "Package",
          "ApplicationConfiguration",
          "ApplicationConfigurationSchema",
          "DeploymentStrategy",
          "ChangeCalendar",
          "Automation.ChangeTemplate",
          "ProblemAnalysis",
          "ProblemAnalysisTemplate",
          "CloudFormation",
          "ConformancePackTemplate",
          "QuickSetup"
        ]
      },
      "DocumentFormat": {
        "type": "string",
        "enum": [
          "YAML",
          "JSON",
          "TEXT"
        ]
      },
      "TargetType": {
        "type": "string",
        "pattern": "^\\/[\\w\\.\\-\\:\\/]*$",
        "maxLength": 200
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "maxItems": 1000
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The name of the tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of the tag."
              }
            ]
          }
        },
        "description": "Metadata that you assign to your Amazon Web Services resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Amazon Web Services Systems Manager, you can apply tags to Systems Manager documents (SSM documents), managed nodes, maintenance windows, parameters, patch baselines, OpsItems, and OpsMetadata."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.CreateDocument"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**DocumentDescription**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
