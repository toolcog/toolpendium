{
  "name": "DescribeInstancePatchStatesForPatchGroup",
  "description": "Retrieves the high-level patch state for the managed nodes in the specified patch group.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.DescribeInstancePatchStatesForPatchGroup"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeInstancePatchStatesForPatchGroupRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeInstancePatchStatesForPatchGroupRequest": {
        "type": "object",
        "required": [
          "PatchGroup"
        ],
        "title": "DescribeInstancePatchStatesForPatchGroupRequest",
        "properties": {
          "PatchGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchGroup"
              },
              {
                "description": "The name of the patch group for which the patch state information should be retrieved."
              }
            ]
          },
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/InstancePatchStateFilterList"
              },
              {
                "description": "<p>Each entry in the array is a structure containing:</p> <ul> <li> <p>Key (string between 1 and 200 characters)</p> </li> <li> <p>Values (array containing a single string)</p> </li> <li> <p>Type (string \"Equal\", \"NotEqual\", \"LessThan\", \"GreaterThan\")</p> </li> </ul>"
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/PatchComplianceMaxResults"
              },
              {
                "description": "The maximum number of patches to return (per page)."
              }
            ]
          }
        }
      },
      "PatchGroup": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 256
      },
      "InstancePatchStateFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InstancePatchStateFilter"
        },
        "minItems": 0,
        "maxItems": 4
      },
      "InstancePatchStateFilter": {
        "type": "object",
        "required": [
          "Key",
          "Values",
          "Type"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/InstancePatchStateFilterKey"
              },
              {
                "description": "<p>The key for the filter. Supported values include the following:</p> <ul> <li> <p> <code>InstalledCount</code> </p> </li> <li> <p> <code>InstalledOtherCount</code> </p> </li> <li> <p> <code>InstalledPendingRebootCount</code> </p> </li> <li> <p> <code>InstalledRejectedCount</code> </p> </li> <li> <p> <code>MissingCount</code> </p> </li> <li> <p> <code>FailedCount</code> </p> </li> <li> <p> <code>UnreportedNotApplicableCount</code> </p> </li> <li> <p> <code>NotApplicableCount</code> </p> </li> </ul>"
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/InstancePatchStateFilterValues"
              },
              {
                "description": "The value for the filter. Must be an integer greater than or equal to 0."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/InstancePatchStateOperatorType"
              },
              {
                "description": "The type of comparison that should be performed for the value."
              }
            ]
          }
        },
        "description": "<p>Defines a filter used in <a>DescribeInstancePatchStatesForPatchGroup</a> to scope down the information returned by the API.</p> <p> <b>Example</b>: To filter for all managed nodes in a patch group having more than three patches with a <code>FailedCount</code> status, use the following for the filter:</p> <ul> <li> <p>Value for <code>Key</code>: <code>FailedCount</code> </p> </li> <li> <p>Value for <code>Type</code>: <code>GreaterThan</code> </p> </li> <li> <p>Value for <code>Values</code>: <code>3</code> </p> </li> </ul>"
      },
      "InstancePatchStateFilterKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 200
      },
      "InstancePatchStateFilterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InstancePatchStateFilterValue"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "InstancePatchStateFilterValue": {
        "type": "string"
      },
      "InstancePatchStateOperatorType": {
        "type": "string",
        "enum": [
          "Equal",
          "NotEqual",
          "LessThan",
          "GreaterThan"
        ]
      },
      "NextToken": {
        "type": "string"
      },
      "PatchComplianceMaxResults": {
        "type": "integer",
        "minimum": 10,
        "maximum": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.DescribeInstancePatchStatesForPatchGroup{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**InstancePatchStates**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
