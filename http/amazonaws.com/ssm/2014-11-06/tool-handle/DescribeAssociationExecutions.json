{
  "name": "DescribeAssociationExecutions",
  "description": "Views all executions for a specific association ID. ",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.DescribeAssociationExecutions"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeAssociationExecutionsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeAssociationExecutionsRequest": {
        "type": "object",
        "required": [
          "AssociationId"
        ],
        "title": "DescribeAssociationExecutionsRequest",
        "properties": {
          "AssociationId": {
            "allOf": [
              {
                "$ref": "#/$defs/AssociationId"
              },
              {
                "description": "The association ID for which you want to view execution history details."
              }
            ]
          },
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/AssociationExecutionFilterList"
              },
              {
                "description": "<p>Filters for the request. You can specify the following filters and values.</p> <p>ExecutionId (EQUAL)</p> <p>Status (EQUAL)</p> <p>CreatedTime (EQUAL, GREATER_THAN, LESS_THAN)</p>"
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxResults"
              },
              {
                "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "A token to start the list. Use this token to get the next set of results. "
              }
            ]
          }
        }
      },
      "AssociationId": {
        "type": "string",
        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
      },
      "AssociationExecutionFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AssociationExecutionFilter"
        },
        "minItems": 1
      },
      "AssociationExecutionFilter": {
        "type": "object",
        "required": [
          "Key",
          "Value",
          "Type"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/AssociationExecutionFilterKey"
              },
              {
                "description": "The key value used in the request."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/AssociationExecutionFilterValue"
              },
              {
                "description": "The value specified for the key."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/AssociationFilterOperatorType"
              },
              {
                "description": "The filter type specified in the request."
              }
            ]
          }
        },
        "description": "Filters used in the request."
      },
      "AssociationExecutionFilterKey": {
        "type": "string",
        "enum": [
          "ExecutionId",
          "Status",
          "CreatedTime"
        ]
      },
      "AssociationExecutionFilterValue": {
        "type": "string",
        "minLength": 1
      },
      "AssociationFilterOperatorType": {
        "type": "string",
        "enum": [
          "EQUAL",
          "LESS_THAN",
          "GREATER_THAN"
        ]
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 50
      },
      "NextToken": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.DescribeAssociationExecutions{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AssociationExecutions**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
