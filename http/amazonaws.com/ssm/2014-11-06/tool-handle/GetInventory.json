{
  "name": "GetInventory",
  "description": "Query inventory information. This includes managed node status, such as <code>Stopped</code> or <code>Terminated</code>.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.GetInventory"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetInventoryRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetInventoryRequest": {
        "type": "object",
        "title": "GetInventoryRequest",
        "properties": {
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryFilterList"
              },
              {
                "description": "One or more filters. Use a filter to return a more specific list of results."
              }
            ]
          },
          "Aggregators": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryAggregatorList"
              },
              {
                "description": "Returns counts of inventory types based on one or more expressions. For example, if you aggregate by using an expression that uses the <code>AWS:InstanceInformation.PlatformType</code> type, you can see a count of how many Windows and Linux managed nodes exist in your inventoried fleet."
              }
            ]
          },
          "ResultAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/ResultAttributeList"
              },
              {
                "description": "The list of inventory item types to return."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxResults"
              },
              {
                "description": "The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results."
              }
            ]
          }
        }
      },
      "InventoryFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InventoryFilter"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "InventoryFilter": {
        "type": "object",
        "required": [
          "Key",
          "Values"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryFilterKey"
              },
              {
                "description": "The name of the filter key."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryFilterValueList"
              },
              {
                "description": "Inventory filter values. Example: inventory filter where managed node IDs are specified as values <code>Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal</code>. "
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryQueryOperatorType"
              },
              {
                "description": "<p>The type of filter.</p> <note> <p>The <code>Exists</code> filter must be used with aggregators. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-aggregate.html\">Aggregating inventory data</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note>"
              }
            ]
          }
        },
        "description": "One or more filters. Use a filter to return a more specific list of results."
      },
      "InventoryFilterKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 200
      },
      "InventoryFilterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InventoryFilterValue"
        },
        "minItems": 1,
        "maxItems": 40
      },
      "InventoryFilterValue": {
        "type": "string"
      },
      "InventoryQueryOperatorType": {
        "type": "string",
        "enum": [
          "Equal",
          "NotEqual",
          "BeginWith",
          "LessThan",
          "GreaterThan",
          "Exists"
        ]
      },
      "InventoryAggregatorList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InventoryAggregator"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "InventoryAggregator": {
        "type": "object",
        "properties": {
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryAggregatorExpression"
              },
              {
                "description": "The inventory type and attribute name for aggregation."
              }
            ]
          },
          "Aggregators": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryAggregatorList"
              },
              {
                "description": "Nested aggregators to further refine aggregation for an inventory type."
              }
            ]
          },
          "Groups": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryGroupList"
              },
              {
                "description": "A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria."
              }
            ]
          }
        },
        "description": "Specifies the inventory type and attribute for the aggregation execution."
      },
      "InventoryAggregatorExpression": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1000
      },
      "InventoryGroupList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InventoryGroup"
        },
        "minItems": 1,
        "maxItems": 15
      },
      "InventoryGroup": {
        "type": "object",
        "required": [
          "Name",
          "Filters"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryGroupName"
              },
              {
                "description": "The name of the group."
              }
            ]
          },
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryFilterList"
              },
              {
                "description": "Filters define the criteria for the group. The <code>matchingCount</code> field displays the number of resources that match the criteria. The <code>notMatchingCount</code> field displays the number of resources that don't match the criteria. "
              }
            ]
          }
        },
        "description": "A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria."
      },
      "InventoryGroupName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 200
      },
      "ResultAttributeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ResultAttribute"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "ResultAttribute": {
        "type": "object",
        "required": [
          "TypeName"
        ],
        "properties": {
          "TypeName": {
            "allOf": [
              {
                "$ref": "#/$defs/InventoryItemTypeName"
              },
              {
                "description": "Name of the inventory item type. Valid value: <code>AWS:InstanceInformation</code>. Default Value: <code>AWS:InstanceInformation</code>."
              }
            ]
          }
        },
        "description": "The inventory item result attribute."
      },
      "InventoryItemTypeName": {
        "type": "string",
        "pattern": "^(AWS|Custom):.*$",
        "minLength": 1,
        "maxLength": 100
      },
      "NextToken": {
        "type": "string"
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 50
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.GetInventory{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Entities**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
