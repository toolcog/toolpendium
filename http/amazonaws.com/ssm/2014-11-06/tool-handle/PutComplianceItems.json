{
  "name": "PutComplianceItems",
  "description": "<p>Registers a compliance type and other compliance details on a designated resource. This operation lets you register custom compliance details with a resource. This call overwrites existing compliance information on the resource, so you must provide a full list of compliance items each time that you send the request.</p> <p>ComplianceType can be one of the following:</p> <ul> <li> <p>ExecutionId: The execution ID when the patch, association, or custom compliance item was applied.</p> </li> <li> <p>ExecutionType: Specify patch, association, or Custom:<code>string</code>.</p> </li> <li> <p>ExecutionTime. The time the patch, association, or custom compliance item was applied to the managed node.</p> </li> <li> <p>Id: The patch, association, or custom compliance ID.</p> </li> <li> <p>Title: A title.</p> </li> <li> <p>Status: The status of the compliance item. For example, <code>approved</code> for patches, or <code>Failed</code> for associations.</p> </li> <li> <p>Severity: A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>DocumentName: An SSM document name. For example, <code>AWS-RunPatchBaseline</code>.</p> </li> <li> <p>DocumentVersion: An SSM document version number. For example, 4.</p> </li> <li> <p>Classification: A patch classification. For example, <code>security updates</code>.</p> </li> <li> <p>PatchBaselineId: A patch baseline ID.</p> </li> <li> <p>PatchSeverity: A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>PatchState: A patch state. For example, <code>InstancesWithFailedPatches</code>.</p> </li> <li> <p>PatchGroup: The name of a patch group.</p> </li> <li> <p>InstalledTime: The time the association, patch, or custom compliance item was applied to the resource. Specify the time by using the following format: yyyy-MM-dd'T'HH:mm:ss'Z'</p> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonSSM.PutComplianceItems"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutComplianceItemsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutComplianceItemsRequest": {
        "type": "object",
        "required": [
          "ResourceId",
          "ResourceType",
          "ComplianceType",
          "ExecutionSummary",
          "Items"
        ],
        "title": "PutComplianceItemsRequest",
        "properties": {
          "ResourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceResourceId"
              },
              {
                "description": "Specify an ID for this resource. For a managed node, this is the node ID."
              }
            ]
          },
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceResourceType"
              },
              {
                "description": "Specify the type of resource. <code>ManagedInstance</code> is currently the only supported resource type."
              }
            ]
          },
          "ComplianceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceTypeName"
              },
              {
                "description": "Specify the compliance type. For example, specify Association (for a State Manager association), Patch, or Custom:<code>string</code>."
              }
            ]
          },
          "ExecutionSummary": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceExecutionSummary"
              },
              {
                "description": "A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'."
              }
            ]
          },
          "Items": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceItemEntryList"
              },
              {
                "description": "Information about the compliance as defined by the resource type. For example, for a patch compliance type, <code>Items</code> includes information about the PatchSeverity, Classification, and so on."
              }
            ]
          },
          "ItemContentHash": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceItemContentHash"
              },
              {
                "description": "MD5 or SHA-256 content hash. The content hash is used to determine if existing information should be overwritten or ignored. If the content hashes match, the request to put compliance information is ignored."
              }
            ]
          },
          "UploadType": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceUploadType"
              },
              {
                "description": "<p>The mode for uploading compliance items. You can specify <code>COMPLETE</code> or <code>PARTIAL</code>. In <code>COMPLETE</code> mode, the system overwrites all existing compliance information for the resource. You must provide a full list of compliance items each time you send the request.</p> <p>In <code>PARTIAL</code> mode, the system overwrites compliance information for a specific association. The association must be configured with <code>SyncCompliance</code> set to <code>MANUAL</code>. By default, all requests use <code>COMPLETE</code> mode.</p> <note> <p>This attribute is only valid for association compliance.</p> </note>"
              }
            ]
          }
        }
      },
      "ComplianceResourceId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "ComplianceResourceType": {
        "type": "string",
        "minLength": 1,
        "maxLength": 50
      },
      "ComplianceTypeName": {
        "type": "string",
        "pattern": "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+",
        "minLength": 1,
        "maxLength": 100
      },
      "ComplianceExecutionSummary": {
        "type": "object",
        "required": [
          "ExecutionTime"
        ],
        "properties": {
          "ExecutionTime": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTime"
              },
              {
                "description": "The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'."
              }
            ]
          },
          "ExecutionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceExecutionId"
              },
              {
                "description": "An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls."
              }
            ]
          },
          "ExecutionType": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceExecutionType"
              },
              {
                "description": "The type of execution. For example, <code>Command</code> is a valid execution type."
              }
            ]
          }
        },
        "description": "A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'."
      },
      "DateTime": {
        "type": "string",
        "format": "date-time"
      },
      "ComplianceExecutionId": {
        "type": "string",
        "maxLength": 100
      },
      "ComplianceExecutionType": {
        "type": "string",
        "maxLength": 50
      },
      "ComplianceItemEntryList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ComplianceItemEntry"
        },
        "minItems": 0,
        "maxItems": 10000
      },
      "ComplianceItemEntry": {
        "type": "object",
        "required": [
          "Severity",
          "Status"
        ],
        "properties": {
          "Id": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceItemId"
              },
              {
                "description": "The compliance item ID. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceItemTitle"
              },
              {
                "description": "The title of the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services. "
              }
            ]
          },
          "Severity": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceSeverity"
              },
              {
                "description": "The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceStatus"
              },
              {
                "description": "The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT."
              }
            ]
          },
          "Details": {
            "allOf": [
              {
                "$ref": "#/$defs/ComplianceItemDetails"
              },
              {
                "description": "A \"Key\": \"Value\" tag combination for the compliance item."
              }
            ]
          }
        },
        "description": "Information about a compliance item."
      },
      "ComplianceItemId": {
        "type": "string"
      },
      "ComplianceItemTitle": {
        "type": "string",
        "maxLength": 500
      },
      "ComplianceSeverity": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "MEDIUM",
          "LOW",
          "INFORMATIONAL",
          "UNSPECIFIED"
        ]
      },
      "ComplianceStatus": {
        "type": "string",
        "enum": [
          "COMPLIANT",
          "NON_COMPLIANT"
        ]
      },
      "ComplianceItemDetails": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/AttributeValue"
        }
      },
      "AttributeValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 4096
      },
      "ComplianceItemContentHash": {
        "type": "string",
        "maxLength": 256
      },
      "ComplianceUploadType": {
        "type": "string",
        "enum": [
          "COMPLETE",
          "PARTIAL"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm.us-east-1.amazonaws.com/#X-Amz-Target=AmazonSSM.PutComplianceItems"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
