{
  "name": "UpdateRelatedItems",
  "description": "Add or remove related items from the related items tab of an incident record.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "incidentRecordArn",
          "relatedItemsUpdate"
        ],
        "properties": {
          "clientToken": {
            "description": "A token that ensures that a client calls the operation only once with the specified details.",
            "type": "string",
            "minLength": 0,
            "maxLength": 128
          },
          "incidentRecordArn": {
            "description": "The Amazon Resource Name (ARN) of the incident record that contains the related items that you update.",
            "type": "string",
            "pattern": "^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$",
            "minLength": 0,
            "maxLength": 1000
          },
          "relatedItemsUpdate": {
            "description": "Details about the related item you're adding.",
            "type": "object",
            "properties": {
              "itemToAdd": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RelatedItem"
                  },
                  {
                    "description": "Details about the related item you're adding."
                  }
                ]
              },
              "itemToRemove": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ItemIdentifier"
                  },
                  {
                    "description": "Details about the related item you're deleting."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "RelatedItem": {
        "type": "object",
        "required": [
          "identifier"
        ],
        "properties": {
          "generatedId": {
            "allOf": [
              {
                "$ref": "#/$defs/GeneratedId"
              },
              {
                "description": "<p>A unique ID for a <code>RelatedItem</code>.</p> <important> <p>Don't specify this parameter when you add a <code>RelatedItem</code> by using the <a>UpdateRelatedItems</a> API action.</p> </important>"
              }
            ]
          },
          "identifier": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemIdentifier"
              },
              {
                "description": "Details about the related item."
              }
            ]
          },
          "title": {
            "allOf": [
              {
                "$ref": "#/$defs/RelatedItemTitleString"
              },
              {
                "description": "The title of the related item."
              }
            ]
          }
        },
        "description": "Resources that responders use to triage and mitigate the incident."
      },
      "GeneratedId": {
        "type": "string",
        "pattern": "^related-item/(ANALYSIS|INCIDENT|METRIC|PARENT|ATTACHMENT|OTHER|AUTOMATION|INVOLVED_RESOURCE|TASK)/([0-9]|[A-F]){32}$",
        "minLength": 0,
        "maxLength": 200
      },
      "ItemIdentifier": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemType"
              },
              {
                "description": "The type of related item. "
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemValue"
              },
              {
                "description": "Details about the related item."
              }
            ]
          }
        },
        "description": "Details and type of a related item."
      },
      "ItemType": {
        "type": "string",
        "enum": [
          "ANALYSIS",
          "INCIDENT",
          "METRIC",
          "PARENT",
          "ATTACHMENT",
          "OTHER",
          "AUTOMATION",
          "INVOLVED_RESOURCE",
          "TASK"
        ]
      },
      "ItemValue": {
        "type": "object",
        "properties": {
          "arn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the related item, if the related item is an Amazon resource."
              }
            ]
          },
          "metricDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricDefinition"
              },
              {
                "description": "The metric definition, if the related item is a metric in Amazon CloudWatch."
              }
            ]
          },
          "pagerDutyIncidentDetail": {
            "allOf": [
              {
                "$ref": "#/$defs/PagerDutyIncidentDetail"
              },
              {
                "description": "Details about an incident that is associated with a PagerDuty incident."
              }
            ]
          },
          "url": {
            "allOf": [
              {
                "$ref": "#/$defs/Url"
              },
              {
                "description": "The URL, if the related item is a non-Amazon Web Services resource."
              }
            ]
          }
        },
        "description": "Describes a related item."
      },
      "Arn": {
        "type": "string",
        "pattern": "^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$",
        "minLength": 0,
        "maxLength": 1000
      },
      "MetricDefinition": {
        "type": "string",
        "minLength": 0,
        "maxLength": 4000
      },
      "PagerDutyIncidentDetail": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "autoResolve": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether to resolve the PagerDuty incident when you resolve the associated Incident Manager incident."
              }
            ]
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/PagerDutyIncidentDetailIdString"
              },
              {
                "description": "The ID of the incident associated with the PagerDuty service for the response plan."
              }
            ]
          },
          "secretId": {
            "allOf": [
              {
                "$ref": "#/$defs/PagerDutyIncidentDetailSecretIdString"
              },
              {
                "description": "The ID of the Amazon Web Services Secrets Manager secret that stores your PagerDuty key, either a General Access REST API Key or User Token REST API Key, and other user credentials."
              }
            ]
          }
        },
        "description": "Details about the PagerDuty incident associated with an incident created by an Incident Manager response plan."
      },
      "Boolean": {
        "type": "boolean"
      },
      "PagerDutyIncidentDetailIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 200
      },
      "PagerDutyIncidentDetailSecretIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 512
      },
      "Url": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1000
      },
      "RelatedItemTitleString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 200
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm-incidents.us-east-1.amazonaws.com/updateRelatedItems"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "204": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
