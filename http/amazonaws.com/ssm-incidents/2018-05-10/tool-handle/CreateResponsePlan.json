{
  "name": "CreateResponsePlan",
  "description": "Creates a response plan that automates the initial response to incidents. A response plan engages contacts, starts chat channel collaboration, and initiates runbooks at the beginning of an incident.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "incidentTemplate",
          "name"
        ],
        "properties": {
          "actions": {
            "description": "The actions that the response plan starts at the beginning of an incident.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Action"
            },
            "minItems": 0,
            "maxItems": 1
          },
          "chatChannel": {
            "description": "The Chatbot chat channel used for collaboration during an incident.",
            "type": "object",
            "properties": {
              "chatbotSns": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ChatbotSnsConfigurationSet"
                  },
                  {
                    "description": "The Amazon SNS targets that Chatbot uses to notify the chat channel of updates to an incident. You can also make updates to the incident through the chat channel by using the Amazon SNS topics. "
                  }
                ]
              },
              "empty": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EmptyChatChannel"
                  },
                  {
                    "description": "Used to remove the chat channel from an incident record or response plan."
                  }
                ]
              }
            }
          },
          "clientToken": {
            "description": "A token ensuring that the operation is called only once with the specified details.",
            "type": "string",
            "minLength": 0,
            "maxLength": 128
          },
          "displayName": {
            "description": "The long format of the response plan name. This field can contain spaces.",
            "type": "string",
            "minLength": 0,
            "maxLength": 200
          },
          "engagements": {
            "description": "The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/SsmContactsArn"
            },
            "minItems": 0,
            "maxItems": 5
          },
          "incidentTemplate": {
            "description": "Basic details used in creating a response plan. The response plan is then used to create an incident record.",
            "type": "object",
            "properties": {
              "dedupeString": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DedupeString"
                  },
                  {
                    "description": "Used to stop Incident Manager from creating multiple incident records for the same incident. "
                  }
                ]
              },
              "impact": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Impact"
                  },
                  {
                    "description": "The impact of the incident on your customers and applications. "
                  }
                ]
              },
              "incidentTags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TagMap"
                  },
                  {
                    "description": "Tags to assign to the template. When the <code>StartIncident</code> API action is called, Incident Manager assigns the tags specified in the template to the incident."
                  }
                ]
              },
              "notificationTargets": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NotificationTargetSet"
                  },
                  {
                    "description": "The Amazon SNS targets that are notified when updates are made to an incident."
                  }
                ]
              },
              "summary": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IncidentSummary"
                  },
                  {
                    "description": "The summary of the incident. The summary is a brief synopsis of what occurred, what's currently happening, and context."
                  }
                ]
              },
              "title": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IncidentTitle"
                  },
                  {
                    "description": "The title of the incident. "
                  }
                ]
              }
            }
          },
          "integrations": {
            "description": "Information about third-party services integrated into the response plan.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Integration"
            },
            "minItems": 0,
            "maxItems": 1
          },
          "name": {
            "description": "The short format name of the response plan. Can't include spaces.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]*$",
            "minLength": 1,
            "maxLength": 200
          },
          "tags": {
            "description": "A list of tags that you are adding to the response plan.",
            "type": "object",
            "minProperties": 1,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Action": {
        "type": "object",
        "properties": {
          "ssmAutomation": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmAutomation"
              },
              {
                "description": "The Systems Manager automation document to start as the runbook at the beginning of the incident."
              }
            ]
          }
        },
        "description": "The action that starts at the beginning of an incident. The response plan defines the action."
      },
      "SsmAutomation": {
        "type": "object",
        "required": [
          "documentName",
          "roleArn"
        ],
        "properties": {
          "documentName": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmAutomationDocumentNameString"
              },
              {
                "description": "The automation document's name."
              }
            ]
          },
          "documentVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmAutomationDocumentVersionString"
              },
              {
                "description": "The automation document's version to use when running."
              }
            ]
          },
          "dynamicParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/DynamicSsmParameters"
              },
              {
                "description": "The key-value pair to resolve dynamic parameter values when processing a Systems Manager Automation runbook."
              }
            ]
          },
          "parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmParameters"
              },
              {
                "description": "The key-value pair parameters to use when running the automation document."
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the role that the automation document will assume when running commands."
              }
            ]
          },
          "targetAccount": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmTargetAccount"
              },
              {
                "description": "The account that the automation document will be run in. This can be in either the management account or an application account."
              }
            ]
          }
        },
        "description": "Details about the Systems Manager automation document that will be used as a runbook during an incident."
      },
      "SsmAutomationDocumentNameString": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$"
      },
      "SsmAutomationDocumentVersionString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 128
      },
      "DynamicSsmParameters": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 200,
        "additionalProperties": {
          "$ref": "#/$defs/DynamicSsmParameterValue"
        }
      },
      "DynamicSsmParameterValue": {
        "type": "object",
        "properties": {
          "variable": {
            "allOf": [
              {
                "$ref": "#/$defs/VariableType"
              },
              {
                "description": "Variable dynamic parameters. A parameter value is determined when an incident is created."
              }
            ]
          }
        },
        "description": "The dynamic SSM parameter value."
      },
      "VariableType": {
        "type": "string",
        "enum": [
          "INCIDENT_RECORD_ARN",
          "INVOLVED_RESOURCES"
        ]
      },
      "SsmParameters": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 200,
        "additionalProperties": {
          "$ref": "#/$defs/SsmParameterValues"
        }
      },
      "SsmParameterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SsmParameterValuesMemberString"
        },
        "minItems": 0,
        "maxItems": 100
      },
      "SsmParameterValuesMemberString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 512
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:aws(-cn|-us-gov)?:iam::([0-9]{12})?:role/.+$",
        "minLength": 0,
        "maxLength": 1000
      },
      "SsmTargetAccount": {
        "type": "string",
        "enum": [
          "RESPONSE_PLAN_OWNER_ACCOUNT",
          "IMPACTED_ACCOUNT"
        ]
      },
      "ChatbotSnsConfigurationSet": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SnsArn"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "SnsArn": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1000
      },
      "EmptyChatChannel": {
        "type": "object",
        "properties": {},
        "description": "Used to remove the chat channel from an incident record or response plan."
      },
      "SsmContactsArn": {
        "type": "string",
        "pattern": "^arn:aws(-cn|-us-gov)?:ssm-contacts:[a-z0-9-]*:([0-9]{12}):contact/[a-z0-9_-]+$",
        "minLength": 0,
        "maxLength": 2048
      },
      "DedupeString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1000
      },
      "Impact": {
        "type": "integer",
        "minimum": 1,
        "maximum": 5
      },
      "TagMap": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/TagValue"
        }
      },
      "TagValue": {
        "type": "string",
        "pattern": "^[A-Za-z0-9 _=@:.+-/]*$",
        "minLength": 0,
        "maxLength": 256
      },
      "NotificationTargetSet": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NotificationTargetItem"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "NotificationTargetItem": {
        "type": "object",
        "properties": {
          "snsTopicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the SNS topic."
              }
            ]
          }
        },
        "description": "The SNS targets that are notified when updates are made to an incident."
      },
      "Arn": {
        "type": "string",
        "pattern": "^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$",
        "minLength": 0,
        "maxLength": 1000
      },
      "IncidentSummary": {
        "type": "string",
        "minLength": 0,
        "maxLength": 8000
      },
      "IncidentTitle": {
        "type": "string",
        "minLength": 0,
        "maxLength": 200
      },
      "Integration": {
        "type": "object",
        "properties": {
          "pagerDutyConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/PagerDutyConfiguration"
              },
              {
                "description": "Information about the PagerDuty service where the response plan creates an incident."
              }
            ]
          }
        },
        "description": "Information about third-party services integrated into a response plan."
      },
      "PagerDutyConfiguration": {
        "type": "object",
        "required": [
          "name",
          "pagerDutyIncidentConfiguration",
          "secretId"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/PagerDutyConfigurationNameString"
              },
              {
                "description": "The name of the PagerDuty configuration."
              }
            ]
          },
          "pagerDutyIncidentConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/PagerDutyIncidentConfiguration"
              },
              {
                "description": "Details about the PagerDuty service associated with the configuration."
              }
            ]
          },
          "secretId": {
            "allOf": [
              {
                "$ref": "#/$defs/PagerDutyConfigurationSecretIdString"
              },
              {
                "description": "The ID of the Amazon Web Services Secrets Manager secret that stores your PagerDuty key, either a General Access REST API Key or User Token REST API Key, and other user credentials."
              }
            ]
          }
        },
        "description": "Details about the PagerDuty configuration for a response plan."
      },
      "PagerDutyConfigurationNameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 200
      },
      "PagerDutyIncidentConfiguration": {
        "type": "object",
        "required": [
          "serviceId"
        ],
        "properties": {
          "serviceId": {
            "allOf": [
              {
                "$ref": "#/$defs/PagerDutyIncidentConfigurationServiceIdString"
              },
              {
                "description": "The ID of the PagerDuty service that the response plan associates with an incident when it launches."
              }
            ]
          }
        },
        "description": "Details about the PagerDuty service where the response plan creates an incident."
      },
      "PagerDutyIncidentConfigurationServiceIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 200
      },
      "PagerDutyConfigurationSecretIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 512
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ssm-incidents.us-east-1.amazonaws.com/createResponsePlan"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**arn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
