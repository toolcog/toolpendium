{
  "name": "CreateMissionProfile",
  "description": "<p>Creates a mission profile.</p> <p> <code>dataflowEdges</code> is a list of lists of strings. Each lower level list of strings has two elements: a <i>from</i> ARN and a <i>to</i> ARN.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "dataflowEdges",
          "minimumViableContactDurationSeconds",
          "name",
          "trackingConfigArn"
        ],
        "properties": {
          "contactPostPassDurationSeconds": {
            "description": "Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.",
            "type": "integer",
            "minimum": 0,
            "maximum": 21600
          },
          "contactPrePassDurationSeconds": {
            "description": "Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.",
            "type": "integer",
            "minimum": 0,
            "maximum": 21600
          },
          "dataflowEdges": {
            "description": "A list of lists of ARNs. Each list of ARNs is an edge, with a <i>from</i> <code>Config</code> and a <i>to</i> <code>Config</code>.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/DataflowEdge"
            },
            "minItems": 0,
            "maxItems": 500
          },
          "minimumViableContactDurationSeconds": {
            "description": "Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.",
            "type": "integer",
            "minimum": 1,
            "maximum": 21600
          },
          "name": {
            "description": "Name of a mission profile.",
            "type": "string",
            "pattern": "^[ a-zA-Z0-9_:-]{1,256}$",
            "minLength": 1,
            "maxLength": 256
          },
          "streamsKmsKey": {
            "description": "AWS Key Management Service (KMS) Key.",
            "type": "object",
            "properties": {
              "kmsAliasArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/KeyAliasArn"
                  },
                  {
                    "description": "KMS Alias Arn."
                  }
                ]
              },
              "kmsKeyArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/KeyArn"
                  },
                  {
                    "description": "KMS Key Arn."
                  }
                ]
              }
            }
          },
          "streamsKmsRole": {
            "description": "Role to use for encrypting streams with KMS key.",
            "type": "string"
          },
          "tags": {
            "description": "Tags assigned to a mission profile.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/String"
            }
          },
          "trackingConfigArn": {
            "description": "ARN of a tracking <code>Config</code>.",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "DataflowEdge": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConfigArn"
        },
        "minItems": 2,
        "maxItems": 2
      },
      "ConfigArn": {
        "type": "string"
      },
      "KeyAliasArn": {
        "type": "string",
        "pattern": "^arn:aws[a-zA-Z-]{0,16}:kms:[a-z]{2}(-[a-z]{1,16}){1,3}-\\d{1}:\\d{12}:((alias/[a-zA-Z0-9:/_-]{1,256}))$",
        "minLength": 1,
        "maxLength": 512
      },
      "KeyArn": {
        "type": "string"
      },
      "String": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://groundstation.us-east-1.amazonaws.com/missionprofile"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "<p/>",
        "**Key properties:**",
        {
          "$ul": [
            "**missionProfileId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
