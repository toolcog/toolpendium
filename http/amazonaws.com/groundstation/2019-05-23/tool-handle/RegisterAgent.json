{
  "name": "RegisterAgent",
  "description": "<note> <p> For use by AWS Ground Station Agent and shouldn't be called directly.</p> </note> <p> Registers a new agent with AWS Ground Station. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "agentDetails",
          "discoveryData"
        ],
        "properties": {
          "agentDetails": {
            "description": "Detailed information about the agent.",
            "type": "object",
            "properties": {
              "agentCpuCores": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AgentCpuCoresList"
                  },
                  {
                    "description": "List of CPU cores reserved for the agent."
                  }
                ]
              },
              "agentVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VersionString"
                  },
                  {
                    "description": "Current agent version."
                  }
                ]
              },
              "componentVersions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ComponentVersionList"
                  },
                  {
                    "description": "List of versions being used by agent components."
                  }
                ]
              },
              "instanceId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/InstanceId"
                  },
                  {
                    "description": "ID of EC2 instance agent is running on."
                  }
                ]
              },
              "instanceType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/InstanceType"
                  },
                  {
                    "description": "Type of EC2 instance agent is running on."
                  }
                ]
              },
              "reservedCpuCores": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AgentCpuCoresList"
                  },
                  {
                    "description": "<note> <p>This field should not be used. Use agentCpuCores instead.</p> </note> <p>List of CPU cores reserved for processes other than the agent running on the EC2 instance.</p>"
                  }
                ]
              }
            }
          },
          "discoveryData": {
            "description": "Data for agent discovery.",
            "type": "object",
            "properties": {
              "capabilityArns": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CapabilityArnList"
                  },
                  {
                    "description": "List of capabilities to associate with agent."
                  }
                ]
              },
              "privateIpAddresses": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IpAddressList"
                  },
                  {
                    "description": "List of private IP addresses to associate with agent."
                  }
                ]
              },
              "publicIpAddresses": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IpAddressList"
                  },
                  {
                    "description": "List of public IP addresses to associate with agent."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "AgentCpuCoresList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Integer"
        },
        "minItems": 0,
        "maxItems": 256
      },
      "Integer": {
        "type": "integer"
      },
      "VersionString": {
        "type": "string",
        "pattern": "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))*$",
        "minLength": 1,
        "maxLength": 64
      },
      "ComponentVersionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ComponentVersion"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "ComponentVersion": {
        "type": "object",
        "required": [
          "componentType",
          "versions"
        ],
        "properties": {
          "componentType": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentTypeString"
              },
              {
                "description": "Component type."
              }
            ]
          },
          "versions": {
            "allOf": [
              {
                "$ref": "#/$defs/VersionStringList"
              },
              {
                "description": "List of versions."
              }
            ]
          }
        },
        "description": "Version information for agent components."
      },
      "ComponentTypeString": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_]{1,64}$"
      },
      "VersionStringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VersionString"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "InstanceId": {
        "type": "string",
        "pattern": "^[a-z0-9-]{10,64}$",
        "minLength": 10,
        "maxLength": 64
      },
      "InstanceType": {
        "type": "string",
        "pattern": "^[a-z0-9.-]{1,64}$",
        "minLength": 1,
        "maxLength": 64
      },
      "CapabilityArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CapabilityArn"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "CapabilityArn": {
        "type": "string"
      },
      "IpAddressList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/IpV4Address"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "IpV4Address": {
        "type": "string",
        "pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$",
        "minLength": 7,
        "maxLength": 16
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://groundstation.us-east-1.amazonaws.com/agent"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**agentId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
