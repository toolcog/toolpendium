{
  "name": "CreateDataflowEndpointGroup",
  "description": "<p>Creates a <code>DataflowEndpoint</code> group containing the specified list of <code>DataflowEndpoint</code> objects.</p> <p>The <code>name</code> field in each endpoint is used in your mission profile <code>DataflowEndpointConfig</code> to specify which endpoints to use during a contact.</p> <p>When a contact uses multiple <code>DataflowEndpointConfig</code> objects, each <code>Config</code> must match a <code>DataflowEndpoint</code> in the same group.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "endpointDetails"
        ],
        "properties": {
          "contactPostPassDurationSeconds": {
            "description": "Amount of time, in seconds, after a contact ends that the Ground Station Dataflow Endpoint Group will be in a <code>POSTPASS</code> state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the <code>POSTPASS</code> state.",
            "type": "integer",
            "minimum": 120,
            "maximum": 480
          },
          "contactPrePassDurationSeconds": {
            "description": "Amount of time, in seconds, before a contact starts that the Ground Station Dataflow Endpoint Group will be in a <code>PREPASS</code> state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the <code>PREPASS</code> state.",
            "type": "integer",
            "minimum": 120,
            "maximum": 480
          },
          "endpointDetails": {
            "description": "Endpoint details of each endpoint in the dataflow endpoint group.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/EndpointDetails"
            },
            "minItems": 0,
            "maxItems": 500
          },
          "tags": {
            "description": "Tags of a dataflow endpoint group.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/String"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "EndpointDetails": {
        "type": "object",
        "properties": {
          "awsGroundStationAgentEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsGroundStationAgentEndpoint"
              },
              {
                "description": "An agent endpoint."
              }
            ]
          },
          "endpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/DataflowEndpoint"
              },
              {
                "description": "A dataflow endpoint."
              }
            ]
          },
          "healthReasons": {
            "allOf": [
              {
                "$ref": "#/$defs/CapabilityHealthReasonList"
              },
              {
                "description": "Health reasons for a dataflow endpoint. This field is ignored when calling <code>CreateDataflowEndpointGroup</code>."
              }
            ]
          },
          "healthStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/CapabilityHealth"
              },
              {
                "description": "A dataflow endpoint health status. This field is ignored when calling <code>CreateDataflowEndpointGroup</code>."
              }
            ]
          },
          "securityDetails": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityDetails"
              },
              {
                "description": "Endpoint security details including a list of subnets, a list of security groups and a role to connect streams to instances."
              }
            ]
          }
        },
        "description": "Information about the endpoint details."
      },
      "AwsGroundStationAgentEndpoint": {
        "type": "object",
        "required": [
          "egressAddress",
          "ingressAddress",
          "name"
        ],
        "properties": {
          "agentStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/AgentStatus"
              },
              {
                "description": "The status of AgentEndpoint."
              }
            ]
          },
          "auditResults": {
            "allOf": [
              {
                "$ref": "#/$defs/AuditResults"
              },
              {
                "description": "The results of the audit."
              }
            ]
          },
          "egressAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionDetails"
              },
              {
                "description": "The egress address of AgentEndpoint."
              }
            ]
          },
          "ingressAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/RangedConnectionDetails"
              },
              {
                "description": "The ingress address of AgentEndpoint."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/SafeName"
              },
              {
                "description": "Name string associated with AgentEndpoint. Used as a human-readable identifier for AgentEndpoint."
              }
            ]
          }
        },
        "description": "Information about AwsGroundStationAgentEndpoint."
      },
      "AgentStatus": {
        "type": "string",
        "enum": [
          "SUCCESS",
          "FAILED",
          "ACTIVE",
          "INACTIVE"
        ]
      },
      "AuditResults": {
        "type": "string",
        "enum": [
          "HEALTHY",
          "UNHEALTHY"
        ]
      },
      "ConnectionDetails": {
        "type": "object",
        "required": [
          "socketAddress"
        ],
        "properties": {
          "mtu": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "Maximum transmission unit (MTU) size in bytes of a dataflow endpoint."
              }
            ]
          },
          "socketAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/SocketAddress"
              },
              {
                "description": "A socket address."
              }
            ]
          }
        },
        "description": "Egress address of AgentEndpoint with an optional mtu."
      },
      "Integer": {
        "type": "integer"
      },
      "SocketAddress": {
        "type": "object",
        "required": [
          "name",
          "port"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Name of a socket address."
              }
            ]
          },
          "port": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "Port of a socket address."
              }
            ]
          }
        },
        "description": "Information about the socket address."
      },
      "String": {
        "type": "string"
      },
      "RangedConnectionDetails": {
        "type": "object",
        "required": [
          "socketAddress"
        ],
        "properties": {
          "mtu": {
            "allOf": [
              {
                "$ref": "#/$defs/RangedConnectionDetailsMtuInteger"
              },
              {
                "description": "Maximum transmission unit (MTU) size in bytes of a dataflow endpoint."
              }
            ]
          },
          "socketAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/RangedSocketAddress"
              },
              {
                "description": "A ranged socket address."
              }
            ]
          }
        },
        "description": "Ingress address of AgentEndpoint with a port range and an optional mtu."
      },
      "RangedConnectionDetailsMtuInteger": {
        "type": "integer",
        "minimum": 1400,
        "maximum": 1500
      },
      "RangedSocketAddress": {
        "type": "object",
        "required": [
          "name",
          "portRange"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/IpV4Address"
              },
              {
                "description": "IPv4 socket address."
              }
            ]
          },
          "portRange": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerRange"
              },
              {
                "description": "Port range of a socket address."
              }
            ]
          }
        },
        "description": "A socket address with a port range."
      },
      "IpV4Address": {
        "type": "string",
        "pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$",
        "minLength": 7,
        "maxLength": 16
      },
      "IntegerRange": {
        "type": "object",
        "required": [
          "maximum",
          "minimum"
        ],
        "properties": {
          "maximum": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "A maximum value."
              }
            ]
          },
          "minimum": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "A minimum value."
              }
            ]
          }
        },
        "description": "An integer range that has a minimum and maximum value."
      },
      "SafeName": {
        "type": "string",
        "pattern": "^[ a-zA-Z0-9_:-]{1,256}$",
        "minLength": 1,
        "maxLength": 256
      },
      "DataflowEndpoint": {
        "type": "object",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/$defs/SocketAddress"
              },
              {
                "description": "Socket address of a dataflow endpoint."
              }
            ]
          },
          "mtu": {
            "allOf": [
              {
                "$ref": "#/$defs/DataflowEndpointMtuInteger"
              },
              {
                "description": "Maximum transmission unit (MTU) size in bytes of a dataflow endpoint."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/SafeName"
              },
              {
                "description": "Name of a dataflow endpoint."
              }
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointStatus"
              },
              {
                "description": "Status of a dataflow endpoint."
              }
            ]
          }
        },
        "description": "Information about a dataflow endpoint."
      },
      "DataflowEndpointMtuInteger": {
        "type": "integer",
        "minimum": 1400,
        "maximum": 1500
      },
      "EndpointStatus": {
        "type": "string",
        "enum": [
          "created",
          "creating",
          "deleted",
          "deleting",
          "failed"
        ]
      },
      "CapabilityHealthReasonList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CapabilityHealthReason"
        },
        "minItems": 0,
        "maxItems": 500
      },
      "CapabilityHealthReason": {
        "type": "string",
        "enum": [
          "NO_REGISTERED_AGENT",
          "INVALID_IP_OWNERSHIP",
          "NOT_AUTHORIZED_TO_CREATE_SLR",
          "UNVERIFIED_IP_OWNERSHIP",
          "INITIALIZING_DATAPLANE",
          "DATAPLANE_FAILURE",
          "HEALTHY"
        ]
      },
      "CapabilityHealth": {
        "type": "string",
        "enum": [
          "UNHEALTHY",
          "HEALTHY"
        ]
      },
      "SecurityDetails": {
        "type": "object",
        "required": [
          "roleArn",
          "securityGroupIds",
          "subnetIds"
        ],
        "properties": {
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "ARN to a role needed for connecting streams to your instances. "
              }
            ]
          },
          "securityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityGroupIdList"
              },
              {
                "description": "The security groups to attach to the elastic network interfaces."
              }
            ]
          },
          "subnetIds": {
            "allOf": [
              {
                "$ref": "#/$defs/SubnetList"
              },
              {
                "description": "A list of subnets where AWS Ground Station places elastic network interfaces to send streams to your instances."
              }
            ]
          }
        },
        "description": "Information about endpoints."
      },
      "RoleArn": {
        "type": "string"
      },
      "SecurityGroupIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "SubnetList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://groundstation.us-east-1.amazonaws.com/dataflowEndpointGroup"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "<p/>",
        "**Key properties:**",
        {
          "$ul": [
            "**dataflowEndpointGroupId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
