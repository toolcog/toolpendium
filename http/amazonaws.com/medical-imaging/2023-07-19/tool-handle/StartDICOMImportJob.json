{
  "name": "StartDICOMImportJob",
  "description": "Start importing bulk data into an <code>ACTIVE</code> data store. The import job imports DICOM P10 files found in the S3 prefix specified by the <code>inputS3Uri</code> parameter. The import job stores processing results in the file specified by the <code>outputS3Uri</code> parameter.",
  "parameters": {
    "type": "object",
    "properties": {
      "datastoreId": {
        "type": "string",
        "pattern": "[0-9a-z]{32}",
        "description": "The data store identifier."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "dataAccessRoleArn",
          "clientToken",
          "inputS3Uri",
          "outputS3Uri"
        ],
        "properties": {
          "jobName": {
            "description": "The import job name.",
            "type": "string",
            "pattern": "[A-Za-z0-9._/#-]+",
            "minLength": 1,
            "maxLength": 64
          },
          "dataAccessRoleArn": {
            "description": "The Amazon Resource Name (ARN) of the IAM role that grants permission to access medical imaging resources.",
            "type": "string",
            "pattern": "arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+",
            "minLength": 20,
            "maxLength": 2048
          },
          "clientToken": {
            "description": "A unique identifier for API idempotency.",
            "type": "string",
            "pattern": "[A-Za-z0-9._-]+",
            "minLength": 1,
            "maxLength": 64
          },
          "inputS3Uri": {
            "description": "The input prefix path for the S3 bucket that contains the DICOM files to be imported.",
            "type": "string",
            "pattern": "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?",
            "minLength": 1,
            "maxLength": 1024
          },
          "outputS3Uri": {
            "description": "The output prefix of the S3 bucket to upload the results of the DICOM import job.",
            "type": "string",
            "pattern": "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?",
            "minLength": 1,
            "maxLength": 1024
          }
        }
      }
    },
    "required": [
      "datastoreId",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://medical-imaging.us-east-1.amazonaws.com/startDICOMImportJob/datastore/{datastoreId}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**datastoreId**",
            "**jobId**",
            "**jobStatus**",
            "**submittedAt**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
