{
  "name": "UpdateBudgetAction",
  "description": " Updates a budget action. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSBudgetServiceGateway.UpdateBudgetAction"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateBudgetActionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateBudgetActionRequest": {
        "type": "object",
        "required": [
          "AccountId",
          "BudgetName",
          "ActionId"
        ],
        "title": "UpdateBudgetActionRequest",
        "properties": {
          "AccountId": {
            "$ref": "#/$defs/AccountId"
          },
          "BudgetName": {
            "$ref": "#/$defs/BudgetName"
          },
          "ActionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionId"
              },
              {
                "description": " A system-generated universally unique identifier (UUID) for the action. "
              }
            ]
          },
          "NotificationType": {
            "$ref": "#/$defs/NotificationType"
          },
          "ActionThreshold": {
            "$ref": "#/$defs/ActionThreshold"
          },
          "Definition": {
            "$ref": "#/$defs/Definition"
          },
          "ExecutionRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": " The role passed for action execution and reversion. Roles and actions must be in the same account. "
              }
            ]
          },
          "ApprovalModel": {
            "allOf": [
              {
                "$ref": "#/$defs/ApprovalModel"
              },
              {
                "description": " This specifies if the action needs manual or automatic approval. "
              }
            ]
          },
          "Subscribers": {
            "$ref": "#/$defs/Subscribers"
          }
        }
      },
      "AccountId": {
        "type": "string",
        "pattern": "\\d{12}",
        "description": "The account ID of the user. It's a 12-digit number.",
        "minLength": 12,
        "maxLength": 12
      },
      "BudgetName": {
        "type": "string",
        "pattern": "^(?![^:\\\\]*/action/)[^:\\\\]+$",
        "description": " A string that represents the budget name. The \":\" and \"\\\" characters, and the \"/action/\" substring, aren't allowed.",
        "minLength": 1,
        "maxLength": 100
      },
      "ActionId": {
        "type": "string",
        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
        "minLength": 36,
        "maxLength": 36
      },
      "NotificationType": {
        "type": "string",
        "enum": [
          "ACTUAL",
          "FORECASTED"
        ],
        "description": " The type of a notification. It must be ACTUAL or FORECASTED."
      },
      "ActionThreshold": {
        "type": "object",
        "required": [
          "ActionThresholdValue",
          "ActionThresholdType"
        ],
        "properties": {
          "ActionThresholdValue": {
            "$ref": "#/$defs/NotificationThreshold"
          },
          "ActionThresholdType": {
            "$ref": "#/$defs/ThresholdType"
          }
        },
        "description": "The trigger threshold of the action. "
      },
      "NotificationThreshold": {
        "type": "number",
        "description": " The threshold of a notification.",
        "format": "double",
        "minimum": 0,
        "maximum": 15000000000000
      },
      "ThresholdType": {
        "type": "string",
        "enum": [
          "PERCENTAGE",
          "ABSOLUTE_VALUE"
        ],
        "description": " The type of threshold for a notification."
      },
      "Definition": {
        "type": "object",
        "properties": {
          "IamActionDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/IamActionDefinition"
              },
              {
                "description": "The Identity and Access Management (IAM) action definition details. "
              }
            ]
          },
          "ScpActionDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/ScpActionDefinition"
              },
              {
                "description": "The service control policies (SCPs) action definition details. "
              }
            ]
          },
          "SsmActionDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmActionDefinition"
              },
              {
                "description": "The Amazon Web Services Systems Manager (SSM) action definition details. "
              }
            ]
          }
        },
        "description": "Specifies all of the type-specific parameters. "
      },
      "IamActionDefinition": {
        "type": "object",
        "required": [
          "PolicyArn"
        ],
        "properties": {
          "PolicyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the policy to be attached. "
              }
            ]
          },
          "Roles": {
            "allOf": [
              {
                "$ref": "#/$defs/Roles"
              },
              {
                "description": "A list of roles to be attached. There must be at least one role. "
              }
            ]
          },
          "Groups": {
            "allOf": [
              {
                "$ref": "#/$defs/Groups"
              },
              {
                "description": "A list of groups to be attached. There must be at least one group. "
              }
            ]
          },
          "Users": {
            "allOf": [
              {
                "$ref": "#/$defs/Users"
              },
              {
                "description": "A list of users to be attached. There must be at least one user. "
              }
            ]
          }
        },
        "description": "The Identity and Access Management (IAM) action definition details. "
      },
      "PolicyArn": {
        "type": "string",
        "pattern": "^arn:(aws|aws-cn|aws-us-gov|us-iso-east-1|us-isob-east-1):iam::(\\d{12}|aws):policy(\\u002F[\\u0021-\\u007F]+\\u002F|\\u002F)[\\w+=,.@-]+$",
        "minLength": 25,
        "maxLength": 684
      },
      "Roles": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Role"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "Role": {
        "type": "string",
        "pattern": "^([\\u0021-\\u007F]+\\u002F)?[\\w+=,.@-]+$",
        "minLength": 1,
        "maxLength": 576
      },
      "Groups": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Group"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "Group": {
        "type": "string",
        "pattern": "^([\\u0021-\\u007F]+\\u002F)?[\\w+=,.@-]+$",
        "minLength": 1,
        "maxLength": 640
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/User"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "User": {
        "type": "string",
        "pattern": "^([\\u0021-\\u007F]+\\u002F)?[\\w+=,.@-]+$",
        "minLength": 1,
        "maxLength": 576
      },
      "ScpActionDefinition": {
        "type": "object",
        "required": [
          "PolicyId",
          "TargetIds"
        ],
        "properties": {
          "PolicyId": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyId"
              },
              {
                "description": "The policy ID attached. "
              }
            ]
          },
          "TargetIds": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetIds"
              },
              {
                "description": "A list of target IDs. "
              }
            ]
          }
        },
        "description": "The service control policies (SCP) action definition details. "
      },
      "PolicyId": {
        "type": "string",
        "pattern": "^p-[0-9a-zA-Z_]{8,128}$",
        "minLength": 10,
        "maxLength": 130
      },
      "TargetIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TargetId"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "TargetId": {
        "type": "string",
        "pattern": "^(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$)|(\\d{12})",
        "minLength": 12,
        "maxLength": 68
      },
      "SsmActionDefinition": {
        "type": "object",
        "required": [
          "ActionSubType",
          "Region",
          "InstanceIds"
        ],
        "properties": {
          "ActionSubType": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionSubType"
              },
              {
                "description": "The action subType. "
              }
            ]
          },
          "Region": {
            "allOf": [
              {
                "$ref": "#/$defs/Region"
              },
              {
                "description": "The Region to run the SSM document. "
              }
            ]
          },
          "InstanceIds": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceIds"
              },
              {
                "description": "The EC2 and RDS instance IDs. "
              }
            ]
          }
        },
        "description": "The Amazon Web Services Systems Manager (SSM) action definition details. "
      },
      "ActionSubType": {
        "type": "string",
        "enum": [
          "STOP_EC2_INSTANCES",
          "STOP_RDS_INSTANCES"
        ]
      },
      "Region": {
        "type": "string",
        "pattern": "^\\w{2}-\\w+(-\\w+)?-\\d$",
        "minLength": 9,
        "maxLength": 20
      },
      "InstanceIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InstanceId"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "InstanceId": {
        "type": "string",
        "pattern": "^i-(\\w{8}|\\w{17})$|^[a-zA-Z]([\\w-]{0,61}\\w)?$",
        "minLength": 1,
        "maxLength": 63
      },
      "RoleArn": {
        "type": "string",
        "pattern": "^arn:(aws|aws-cn|aws-us-gov|us-iso-east-1|us-isob-east-1):iam::\\d{12}:role(\\u002F[\\u0021-\\u007F]+\\u002F|\\u002F)[\\w+=,.@-]+$",
        "minLength": 32,
        "maxLength": 618
      },
      "ApprovalModel": {
        "type": "string",
        "enum": [
          "AUTOMATIC",
          "MANUAL"
        ]
      },
      "Subscribers": {
        "type": "array",
        "description": " A list of subscribers.",
        "items": {
          "$ref": "#/$defs/Subscriber"
        },
        "minItems": 1,
        "maxItems": 11
      },
      "Subscriber": {
        "type": "object",
        "required": [
          "SubscriptionType",
          "Address"
        ],
        "properties": {
          "SubscriptionType": {
            "allOf": [
              {
                "$ref": "#/$defs/SubscriptionType"
              },
              {
                "description": "The type of notification that Amazon Web Services sends to a subscriber."
              }
            ]
          },
          "Address": {
            "allOf": [
              {
                "$ref": "#/$defs/SubscriberAddress"
              },
              {
                "description": "<p>The address that Amazon Web Services sends budget notifications to, either an SNS topic or an email.</p> <p>When you create a subscriber, the value of <code>Address</code> can't contain line breaks.</p>"
              }
            ]
          }
        },
        "description": "<p>The subscriber to a budget notification. The subscriber consists of a subscription type and either an Amazon SNS topic or an email address.</p> <p>For example, an email subscriber has the following parameters:</p> <ul> <li> <p>A <code>subscriptionType</code> of <code>EMAIL</code> </p> </li> <li> <p>An <code>address</code> of <code>example@example.com</code> </p> </li> </ul>"
      },
      "SubscriptionType": {
        "type": "string",
        "enum": [
          "SNS",
          "EMAIL"
        ],
        "description": " The subscription type of the subscriber. It can be SMS or EMAIL."
      },
      "SubscriberAddress": {
        "type": "string",
        "pattern": "(.*[\\n\\r\\t\\f\\ ]?)*",
        "description": " A string that contains an email address or SNS topic for the subscriber's address.",
        "minLength": 1,
        "maxLength": 2147483647,
        "format": "password"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://budgets.amazonaws.com/#X-Amz-Target=AWSBudgetServiceGateway.UpdateBudgetAction"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AccountId**: The account ID of the user. It's a 12-digit number.",
            "**BudgetName**:  A string that represents the budget name. The \":\" and \"\\\" characters, and the \"/action/\" substring, aren't allowed.",
            "**OldAction**",
            "**NewAction**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
