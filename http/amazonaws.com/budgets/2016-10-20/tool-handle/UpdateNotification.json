{
  "name": "UpdateNotification",
  "description": "Updates a notification.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSBudgetServiceGateway.UpdateNotification"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateNotificationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateNotificationRequest": {
        "type": "object",
        "required": [
          "AccountId",
          "BudgetName",
          "OldNotification",
          "NewNotification"
        ],
        "title": "UpdateNotificationRequest",
        "properties": {
          "AccountId": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountId"
              },
              {
                "description": "The <code>accountId</code> that is associated with the budget whose notification you want to update."
              }
            ]
          },
          "BudgetName": {
            "allOf": [
              {
                "$ref": "#/$defs/BudgetName"
              },
              {
                "description": "The name of the budget whose notification you want to update."
              }
            ]
          },
          "OldNotification": {
            "allOf": [
              {
                "$ref": "#/$defs/Notification"
              },
              {
                "description": "The previous notification that is associated with a budget."
              }
            ]
          },
          "NewNotification": {
            "allOf": [
              {
                "$ref": "#/$defs/Notification"
              },
              {
                "description": "The updated notification to be associated with a budget."
              }
            ]
          }
        },
        "description": " Request of UpdateNotification "
      },
      "AccountId": {
        "type": "string",
        "pattern": "\\d{12}",
        "description": "The account ID of the user. It's a 12-digit number.",
        "minLength": 12,
        "maxLength": 12
      },
      "BudgetName": {
        "type": "string",
        "pattern": "^(?![^:\\\\]*/action/)[^:\\\\]+$",
        "description": " A string that represents the budget name. The \":\" and \"\\\" characters, and the \"/action/\" substring, aren't allowed.",
        "minLength": 1,
        "maxLength": 100
      },
      "Notification": {
        "type": "object",
        "required": [
          "NotificationType",
          "ComparisonOperator",
          "Threshold"
        ],
        "properties": {
          "NotificationType": {
            "allOf": [
              {
                "$ref": "#/$defs/NotificationType"
              },
              {
                "description": "Specifies whether the notification is for how much you have spent (<code>ACTUAL</code>) or for how much that you're forecasted to spend (<code>FORECASTED</code>)."
              }
            ]
          },
          "ComparisonOperator": {
            "allOf": [
              {
                "$ref": "#/$defs/ComparisonOperator"
              },
              {
                "description": "The comparison that's used for this notification."
              }
            ]
          },
          "Threshold": {
            "allOf": [
              {
                "$ref": "#/$defs/NotificationThreshold"
              },
              {
                "description": "The threshold that's associated with a notification. Thresholds are always a percentage, and many customers find value being alerted between 50% - 200% of the budgeted amount. The maximum limit for your threshold is 1,000,000% above the budgeted amount."
              }
            ]
          },
          "ThresholdType": {
            "allOf": [
              {
                "$ref": "#/$defs/ThresholdType"
              },
              {
                "description": "The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, Amazon Web Services notifies you when you go over or are forecasted to go over your total cost threshold. For <code>PERCENTAGE</code> thresholds, Amazon Web Services notifies you when you go over or are forecasted to go over a certain percentage of your forecasted spend. For example, if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%, Amazon Web Services notifies you when you go over 160 dollars."
              }
            ]
          },
          "NotificationState": {
            "allOf": [
              {
                "$ref": "#/$defs/NotificationState"
              },
              {
                "description": "Specifies whether this notification is in alarm. If a budget notification is in the <code>ALARM</code> state, you passed the set threshold for the budget."
              }
            ]
          }
        },
        "description": "<p>A notification that's associated with a budget. A budget can have up to ten notifications. </p> <p>Each notification must have at least one subscriber. A notification can have one SNS subscriber and up to 10 email subscribers, for a total of 11 subscribers.</p> <p>For example, if you have a budget for 200 dollars and you want to be notified when you go over 160 dollars, create a notification with the following parameters:</p> <ul> <li> <p>A notificationType of <code>ACTUAL</code> </p> </li> <li> <p>A <code>thresholdType</code> of <code>PERCENTAGE</code> </p> </li> <li> <p>A <code>comparisonOperator</code> of <code>GREATER_THAN</code> </p> </li> <li> <p>A notification <code>threshold</code> of <code>80</code> </p> </li> </ul>"
      },
      "NotificationType": {
        "type": "string",
        "enum": [
          "ACTUAL",
          "FORECASTED"
        ],
        "description": " The type of a notification. It must be ACTUAL or FORECASTED."
      },
      "ComparisonOperator": {
        "type": "string",
        "enum": [
          "GREATER_THAN",
          "LESS_THAN",
          "EQUAL_TO"
        ],
        "description": "<p> The comparison operator of a notification. Currently, the service supports the following operators:</p> <p> <code>GREATER_THAN</code>, <code>LESS_THAN</code>, <code>EQUAL_TO</code> </p>"
      },
      "NotificationThreshold": {
        "type": "number",
        "description": " The threshold of a notification.",
        "format": "double",
        "minimum": 0,
        "maximum": 15000000000000
      },
      "ThresholdType": {
        "type": "string",
        "enum": [
          "PERCENTAGE",
          "ABSOLUTE_VALUE"
        ],
        "description": " The type of threshold for a notification."
      },
      "NotificationState": {
        "type": "string",
        "enum": [
          "OK",
          "ALARM"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://budgets.amazonaws.com/#X-Amz-Target=AWSBudgetServiceGateway.UpdateNotification"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        " Response of UpdateNotification ",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
