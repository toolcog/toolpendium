{
  "name": "PutScalingPolicy",
  "description": "<p>Creates or updates a scaling policy for an Application Auto Scaling scalable target.</p> <p>Each scalable target is identified by a service namespace, resource ID, and scalable dimension. A scaling policy applies to the scalable target identified by those three attributes. You cannot create a scaling policy until you have registered the resource as a scalable target.</p> <p>Multiple scaling policies can be in force at the same time for the same scalable target. You can have one or more target tracking scaling policies, one or more step scaling policies, or both. However, there is a chance that multiple policies could conflict, instructing the scalable target to scale out or in at the same time. Application Auto Scaling gives precedence to the policy that provides the largest capacity for both scale out and scale in. For example, if one policy increases capacity by 3, another policy increases capacity by 200 percent, and the current capacity is 10, Application Auto Scaling uses the policy with the highest calculated capacity (200% of 10 = 20) and scales out to 30. </p> <p>We recommend caution, however, when using target tracking scaling policies with step scaling policies because conflicts between these policies can cause undesirable behavior. For example, if the step scaling policy initiates a scale-in activity before the target tracking policy is ready to scale in, the scale-in activity will not be blocked. After the scale-in activity completes, the target tracking policy could instruct the scalable target to scale out again. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html\">Target tracking scaling policies</a> and <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html\">Step scaling policies</a> in the <i>Application Auto Scaling User Guide</i>.</p> <note> <p>If a scalable target is deregistered, the scalable target is no longer available to use scaling policies. Any scaling policies that were specified for the scalable target are deleted.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AnyScaleFrontendService.PutScalingPolicy"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutScalingPolicyRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutScalingPolicyRequest": {
        "type": "object",
        "required": [
          "PolicyName",
          "ServiceNamespace",
          "ResourceId",
          "ScalableDimension"
        ],
        "title": "PutScalingPolicyRequest",
        "properties": {
          "PolicyName": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyName"
              },
              {
                "description": "<p>The name of the scaling policy.</p> <p>You cannot change the name of a scaling policy, but you can delete the original scaling policy and create a new scaling policy with the same settings and a different name.</p>"
              }
            ]
          },
          "ServiceNamespace": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceNamespace"
              },
              {
                "description": "The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use <code>custom-resource</code> instead."
              }
            ]
          },
          "ResourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceIdMaxLen1600"
              },
              {
                "description": "<p>The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier.</p> <ul> <li> <p>ECS service - The resource type is <code>service</code> and the unique identifier is the cluster name and service name. Example: <code>service/default/sample-webapp</code>.</p> </li> <li> <p>Spot Fleet - The resource type is <code>spot-fleet-request</code> and the unique identifier is the Spot Fleet request ID. Example: <code>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</code>.</p> </li> <li> <p>EMR cluster - The resource type is <code>instancegroup</code> and the unique identifier is the cluster ID and instance group ID. Example: <code>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</code>.</p> </li> <li> <p>AppStream 2.0 fleet - The resource type is <code>fleet</code> and the unique identifier is the fleet name. Example: <code>fleet/sample-fleet</code>.</p> </li> <li> <p>DynamoDB table - The resource type is <code>table</code> and the unique identifier is the table name. Example: <code>table/my-table</code>.</p> </li> <li> <p>DynamoDB global secondary index - The resource type is <code>index</code> and the unique identifier is the index name. Example: <code>table/my-table/index/my-table-index</code>.</p> </li> <li> <p>Aurora DB cluster - The resource type is <code>cluster</code> and the unique identifier is the cluster name. Example: <code>cluster:my-db-cluster</code>.</p> </li> <li> <p>SageMaker endpoint variant - The resource type is <code>variant</code> and the unique identifier is the resource ID. Example: <code>endpoint/my-end-point/variant/KMeansClustering</code>.</p> </li> <li> <p>Custom resources are not supported with a resource type. This parameter must specify the <code>OutputValue</code> from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our <a href=\"https://github.com/aws/aws-auto-scaling-custom-resource\">GitHub repository</a>.</p> </li> <li> <p>Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: <code>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</code>.</p> </li> <li> <p>Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: <code>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</code>.</p> </li> <li> <p>Lambda provisioned concurrency - The resource type is <code>function</code> and the unique identifier is the function name with a function version or alias name suffix that is not <code>$LATEST</code>. Example: <code>function:my-function:prod</code> or <code>function:my-function:1</code>.</p> </li> <li> <p>Amazon Keyspaces table - The resource type is <code>table</code> and the unique identifier is the table name. Example: <code>keyspace/mykeyspace/table/mytable</code>.</p> </li> <li> <p>Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: <code>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</code>.</p> </li> <li> <p>Amazon ElastiCache replication group - The resource type is <code>replication-group</code> and the unique identifier is the replication group name. Example: <code>replication-group/mycluster</code>.</p> </li> <li> <p>Neptune cluster - The resource type is <code>cluster</code> and the unique identifier is the cluster name. Example: <code>cluster:mycluster</code>.</p> </li> <li> <p>SageMaker Serverless endpoint - The resource type is <code>variant</code> and the unique identifier is the resource ID. Example: <code>endpoint/my-end-point/variant/KMeansClustering</code>.</p> </li> </ul>"
              }
            ]
          },
          "ScalableDimension": {
            "allOf": [
              {
                "$ref": "#/$defs/ScalableDimension"
              },
              {
                "description": "<p>The scalable dimension. This string consists of the service namespace, resource type, and scaling property.</p> <ul> <li> <p> <code>ecs:service:DesiredCount</code> - The desired task count of an ECS service.</p> </li> <li> <p> <code>elasticmapreduce:instancegroup:InstanceCount</code> - The instance count of an EMR Instance Group.</p> </li> <li> <p> <code>ec2:spot-fleet-request:TargetCapacity</code> - The target capacity of a Spot Fleet.</p> </li> <li> <p> <code>appstream:fleet:DesiredCapacity</code> - The desired capacity of an AppStream 2.0 fleet.</p> </li> <li> <p> <code>dynamodb:table:ReadCapacityUnits</code> - The provisioned read capacity for a DynamoDB table.</p> </li> <li> <p> <code>dynamodb:table:WriteCapacityUnits</code> - The provisioned write capacity for a DynamoDB table.</p> </li> <li> <p> <code>dynamodb:index:ReadCapacityUnits</code> - The provisioned read capacity for a DynamoDB global secondary index.</p> </li> <li> <p> <code>dynamodb:index:WriteCapacityUnits</code> - The provisioned write capacity for a DynamoDB global secondary index.</p> </li> <li> <p> <code>rds:cluster:ReadReplicaCount</code> - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.</p> </li> <li> <p> <code>sagemaker:variant:DesiredInstanceCount</code> - The number of EC2 instances for a SageMaker model endpoint variant.</p> </li> <li> <p> <code>custom-resource:ResourceType:Property</code> - The scalable dimension for a custom resource provided by your own application or service.</p> </li> <li> <p> <code>comprehend:document-classifier-endpoint:DesiredInferenceUnits</code> - The number of inference units for an Amazon Comprehend document classification endpoint.</p> </li> <li> <p> <code>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</code> - The number of inference units for an Amazon Comprehend entity recognizer endpoint.</p> </li> <li> <p> <code>lambda:function:ProvisionedConcurrency</code> - The provisioned concurrency for a Lambda function.</p> </li> <li> <p> <code>cassandra:table:ReadCapacityUnits</code> - The provisioned read capacity for an Amazon Keyspaces table.</p> </li> <li> <p> <code>cassandra:table:WriteCapacityUnits</code> - The provisioned write capacity for an Amazon Keyspaces table.</p> </li> <li> <p> <code>kafka:broker-storage:VolumeSize</code> - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.</p> </li> <li> <p> <code>elasticache:replication-group:NodeGroups</code> - The number of node groups for an Amazon ElastiCache replication group.</p> </li> <li> <p> <code>elasticache:replication-group:Replicas</code> - The number of replicas per node group for an Amazon ElastiCache replication group.</p> </li> <li> <p> <code>neptune:cluster:ReadReplicaCount</code> - The count of read replicas in an Amazon Neptune DB cluster.</p> </li> <li> <p> <code>sagemaker:variant:DesiredProvisionedConcurrency</code> - The provisioned concurrency for a SageMaker Serverless endpoint.</p> </li> </ul>"
              }
            ]
          },
          "PolicyType": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyType"
              },
              {
                "description": "<p>The scaling policy type. This parameter is required if you are creating a scaling policy.</p> <p>The following policy types are supported: </p> <p> <code>TargetTrackingScaling</code>—Not supported for Amazon EMR</p> <p> <code>StepScaling</code>—Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon ElastiCache, or Neptune.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html\">Target tracking scaling policies</a> and <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html\">Step scaling policies</a> in the <i>Application Auto Scaling User Guide</i>.</p>"
              }
            ]
          },
          "StepScalingPolicyConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/StepScalingPolicyConfiguration"
              },
              {
                "description": "<p>A step scaling policy.</p> <p>This parameter is required if you are creating a policy and the policy type is <code>StepScaling</code>.</p>"
              }
            ]
          },
          "TargetTrackingScalingPolicyConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetTrackingScalingPolicyConfiguration"
              },
              {
                "description": "<p>A target tracking scaling policy. Includes support for predefined or customized metrics.</p> <p>This parameter is required if you are creating a policy and the policy type is <code>TargetTrackingScaling</code>.</p>"
              }
            ]
          }
        }
      },
      "PolicyName": {
        "type": "string",
        "pattern": "\\p{Print}+",
        "minLength": 1,
        "maxLength": 256
      },
      "ServiceNamespace": {
        "type": "string",
        "enum": [
          "ecs",
          "elasticmapreduce",
          "ec2",
          "appstream",
          "dynamodb",
          "rds",
          "sagemaker",
          "custom-resource",
          "comprehend",
          "lambda",
          "cassandra",
          "kafka",
          "elasticache",
          "neptune"
        ]
      },
      "ResourceIdMaxLen1600": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1600,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "ScalableDimension": {
        "type": "string",
        "enum": [
          "ecs:service:DesiredCount",
          "ec2:spot-fleet-request:TargetCapacity",
          "elasticmapreduce:instancegroup:InstanceCount",
          "appstream:fleet:DesiredCapacity",
          "dynamodb:table:ReadCapacityUnits",
          "dynamodb:table:WriteCapacityUnits",
          "dynamodb:index:ReadCapacityUnits",
          "dynamodb:index:WriteCapacityUnits",
          "rds:cluster:ReadReplicaCount",
          "sagemaker:variant:DesiredInstanceCount",
          "custom-resource:ResourceType:Property",
          "comprehend:document-classifier-endpoint:DesiredInferenceUnits",
          "comprehend:entity-recognizer-endpoint:DesiredInferenceUnits",
          "lambda:function:ProvisionedConcurrency",
          "cassandra:table:ReadCapacityUnits",
          "cassandra:table:WriteCapacityUnits",
          "kafka:broker-storage:VolumeSize",
          "elasticache:replication-group:NodeGroups",
          "elasticache:replication-group:Replicas",
          "neptune:cluster:ReadReplicaCount",
          "sagemaker:variant:DesiredProvisionedConcurrency"
        ]
      },
      "PolicyType": {
        "type": "string",
        "enum": [
          "StepScaling",
          "TargetTrackingScaling"
        ]
      },
      "StepScalingPolicyConfiguration": {
        "type": "object",
        "properties": {
          "AdjustmentType": {
            "allOf": [
              {
                "$ref": "#/$defs/AdjustmentType"
              },
              {
                "description": "<p>Specifies how the <code>ScalingAdjustment</code> value in a <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepAdjustment.html\">StepAdjustment</a> is interpreted (for example, an absolute number or a percentage). The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>. </p> <p> <code>AdjustmentType</code> is required if you are adding a new step scaling policy configuration.</p>"
              }
            ]
          },
          "StepAdjustments": {
            "allOf": [
              {
                "$ref": "#/$defs/StepAdjustments"
              },
              {
                "description": "<p>A set of adjustments that enable you to scale based on the size of the alarm breach.</p> <p>At least one step adjustment is required if you are adding a new step scaling policy configuration.</p>"
              }
            ]
          },
          "MinAdjustmentMagnitude": {
            "allOf": [
              {
                "$ref": "#/$defs/MinAdjustmentMagnitude"
              },
              {
                "description": "The minimum value to scale by when the adjustment type is <code>PercentChangeInCapacity</code>. For example, suppose that you create a step scaling policy to scale out an Amazon ECS service by 25 percent and you specify a <code>MinAdjustmentMagnitude</code> of 2. If the service has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a <code>MinAdjustmentMagnitude</code> of 2, Application Auto Scaling scales out the service by 2 tasks."
              }
            ]
          },
          "Cooldown": {
            "allOf": [
              {
                "$ref": "#/$defs/Cooldown"
              },
              {
                "description": "The amount of time, in seconds, to wait for a previous scaling activity to take effect. If not specified, the default value is 300. For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html#step-scaling-cooldown\">Cooldown period</a> in the <i>Application Auto Scaling User Guide</i>."
              }
            ]
          },
          "MetricAggregationType": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricAggregationType"
              },
              {
                "description": "The aggregation type for the CloudWatch metrics. Valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>. If the aggregation type is null, the value is treated as <code>Average</code>."
              }
            ]
          }
        },
        "description": "<p>Represents a step scaling policy configuration to use with Application Auto Scaling.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html\">Step scaling policies</a> in the <i>Application Auto Scaling User Guide</i>.</p>"
      },
      "AdjustmentType": {
        "type": "string",
        "enum": [
          "ChangeInCapacity",
          "PercentChangeInCapacity",
          "ExactCapacity"
        ]
      },
      "StepAdjustments": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StepAdjustment"
        }
      },
      "StepAdjustment": {
        "type": "object",
        "required": [
          "ScalingAdjustment"
        ],
        "properties": {
          "MetricIntervalLowerBound": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricScale"
              },
              {
                "description": "The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it's exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity."
              }
            ]
          },
          "MetricIntervalUpperBound": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricScale"
              },
              {
                "description": "<p>The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it's inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.</p> <p>The upper bound must be greater than the lower bound.</p>"
              }
            ]
          },
          "ScalingAdjustment": {
            "allOf": [
              {
                "$ref": "#/$defs/ScalingAdjustment"
              },
              {
                "description": "The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a non-negative value."
              }
            ]
          }
        },
        "description": "<p>Represents a step adjustment for a <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html\">StepScalingPolicyConfiguration</a>. Describes an adjustment based on the difference between the value of the aggregated CloudWatch metric and the breach threshold that you've defined for the alarm. </p> <p>For the following examples, suppose that you have an alarm with a breach threshold of 50:</p> <ul> <li> <p>To initiate the adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of <code>0</code> and an upper bound of <code>10</code>.</p> </li> <li> <p>To initiate the adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of <code>-10</code> and an upper bound of <code>0</code>.</p> </li> </ul> <p>There are a few rules for the step adjustments for your step policy:</p> <ul> <li> <p>The ranges of your step adjustments can't overlap or have a gap.</p> </li> <li> <p>At most one step adjustment can have a null lower bound. If one step adjustment has a negative lower bound, then there must be a step adjustment with a null lower bound.</p> </li> <li> <p>At most one step adjustment can have a null upper bound. If one step adjustment has a positive upper bound, then there must be a step adjustment with a null upper bound.</p> </li> <li> <p>The upper and lower bound can't be null in the same step adjustment.</p> </li> </ul>"
      },
      "MetricScale": {
        "type": "number",
        "format": "double"
      },
      "ScalingAdjustment": {
        "type": "integer"
      },
      "MinAdjustmentMagnitude": {
        "type": "integer"
      },
      "Cooldown": {
        "type": "integer"
      },
      "MetricAggregationType": {
        "type": "string",
        "enum": [
          "Average",
          "Minimum",
          "Maximum"
        ]
      },
      "TargetTrackingScalingPolicyConfiguration": {
        "type": "object",
        "required": [
          "TargetValue"
        ],
        "properties": {
          "TargetValue": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricScale"
              },
              {
                "description": "<p>The target value for the metric. Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out. </p> <note> <p>If the scaling policy specifies the <code>ALBRequestCountPerTarget</code> predefined metric, specify the target utilization as the optimal average request count per target during any one-minute interval.</p> </note>"
              }
            ]
          },
          "PredefinedMetricSpecification": {
            "allOf": [
              {
                "$ref": "#/$defs/PredefinedMetricSpecification"
              },
              {
                "description": "A predefined metric. You can specify either a predefined metric or a customized metric."
              }
            ]
          },
          "CustomizedMetricSpecification": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomizedMetricSpecification"
              },
              {
                "description": "A customized metric. You can specify either a predefined metric or a customized metric."
              }
            ]
          },
          "ScaleOutCooldown": {
            "allOf": [
              {
                "$ref": "#/$defs/Cooldown"
              },
              {
                "description": "The amount of time, in seconds, to wait for a previous scale-out activity to take effect. For more information and for default values, see <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html#target-tracking-cooldown\">Define cooldown periods</a> in the <i>Application Auto Scaling User Guide</i>."
              }
            ]
          },
          "ScaleInCooldown": {
            "allOf": [
              {
                "$ref": "#/$defs/Cooldown"
              },
              {
                "description": "The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start. For more information and for default values, see <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html#target-tracking-cooldown\">Define cooldown periods</a> in the <i>Application Auto Scaling User Guide</i>."
              }
            ]
          },
          "DisableScaleIn": {
            "allOf": [
              {
                "$ref": "#/$defs/DisableScaleIn"
              },
              {
                "description": "Indicates whether scale in by the target tracking scaling policy is disabled. If the value is <code>true</code>, scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is <code>false</code>."
              }
            ]
          }
        },
        "description": "<p>Represents a target tracking scaling policy configuration to use with Application Auto Scaling.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html\">Target tracking scaling policies</a> in the <i>Application Auto Scaling User Guide</i>.</p>"
      },
      "PredefinedMetricSpecification": {
        "type": "object",
        "required": [
          "PredefinedMetricType"
        ],
        "properties": {
          "PredefinedMetricType": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricType"
              },
              {
                "description": "The metric type. The <code>ALBRequestCountPerTarget</code> metric type applies only to Spot Fleets and ECS services."
              }
            ]
          },
          "ResourceLabel": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceLabel"
              },
              {
                "description": "<p>Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is <code>ALBRequestCountPerTarget</code> and there is a target group attached to the Spot Fleet or ECS service.</p> <p>You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:</p> <p> <code>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</code>.</p> <p>Where:</p> <ul> <li> <p>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the final portion of the load balancer ARN</p> </li> <li> <p>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is the final portion of the target group ARN.</p> </li> </ul> <p>To find the ARN for an Application Load Balancer, use the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html\">DescribeLoadBalancers</a> API operation. To find the ARN for the target group, use the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html\">DescribeTargetGroups</a> API operation.</p>"
              }
            ]
          }
        },
        "description": "<p>Represents a predefined metric for a target tracking scaling policy to use with Application Auto Scaling.</p> <p>Only the Amazon Web Services that you're using send metrics to Amazon CloudWatch. To determine whether a desired metric already exists by looking up its namespace and dimension using the CloudWatch metrics dashboard in the console, follow the procedure in <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/monitoring-cloudwatch.html\">Building dashboards with CloudWatch</a> in the <i>Application Auto Scaling User Guide</i>.</p>"
      },
      "MetricType": {
        "type": "string",
        "enum": [
          "DynamoDBReadCapacityUtilization",
          "DynamoDBWriteCapacityUtilization",
          "ALBRequestCountPerTarget",
          "RDSReaderAverageCPUUtilization",
          "RDSReaderAverageDatabaseConnections",
          "EC2SpotFleetRequestAverageCPUUtilization",
          "EC2SpotFleetRequestAverageNetworkIn",
          "EC2SpotFleetRequestAverageNetworkOut",
          "SageMakerVariantInvocationsPerInstance",
          "ECSServiceAverageCPUUtilization",
          "ECSServiceAverageMemoryUtilization",
          "AppStreamAverageCapacityUtilization",
          "ComprehendInferenceUtilization",
          "LambdaProvisionedConcurrencyUtilization",
          "CassandraReadCapacityUtilization",
          "CassandraWriteCapacityUtilization",
          "KafkaBrokerStorageUtilization",
          "ElastiCachePrimaryEngineCPUUtilization",
          "ElastiCacheReplicaEngineCPUUtilization",
          "ElastiCacheDatabaseMemoryUsageCountedForEvictPercentage",
          "NeptuneReaderAverageCPUUtilization",
          "SageMakerVariantProvisionedConcurrencyUtilization",
          "ElastiCacheDatabaseCapacityUsageCountedForEvictPercentage"
        ]
      },
      "ResourceLabel": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1023
      },
      "CustomizedMetricSpecification": {
        "type": "object",
        "properties": {
          "MetricName": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricName"
              },
              {
                "description": "The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html\">Metric</a> object that's returned by a call to <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html\">ListMetrics</a>."
              }
            ]
          },
          "Namespace": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricNamespace"
              },
              {
                "description": "The namespace of the metric."
              }
            ]
          },
          "Dimensions": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricDimensions"
              },
              {
                "description": "<p>The dimensions of the metric. </p> <p>Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.</p>"
              }
            ]
          },
          "Statistic": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricStatistic"
              },
              {
                "description": "The statistic of the metric."
              }
            ]
          },
          "Unit": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricUnit"
              },
              {
                "description": "The unit of the metric. For a complete list of the units that CloudWatch supports, see the <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html\">MetricDatum</a> data type in the <i>Amazon CloudWatch API Reference</i>."
              }
            ]
          },
          "Metrics": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetTrackingMetricDataQueries"
              },
              {
                "description": "The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions."
              }
            ]
          }
        },
        "description": "<p>Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling.</p> <p>For information about the available metrics for a service, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html\">Amazon Web Services services that publish CloudWatch metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>To create your customized metric specification:</p> <ul> <li> <p>Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html\">Publish custom metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> </li> <li> <p>Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases. </p> </li> </ul> <p>For more information about the CloudWatch terminology below, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html\">Amazon CloudWatch concepts</a> in the <i>Amazon CloudWatch User Guide</i>. </p>"
      },
      "MetricName": {
        "type": "string"
      },
      "MetricNamespace": {
        "type": "string"
      },
      "MetricDimensions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MetricDimension"
        }
      },
      "MetricDimension": {
        "type": "object",
        "required": [
          "Name",
          "Value"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricDimensionName"
              },
              {
                "description": "The name of the dimension."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricDimensionValue"
              },
              {
                "description": "The value of the dimension."
              }
            ]
          }
        },
        "description": "Describes the dimension names and values associated with a metric."
      },
      "MetricDimensionName": {
        "type": "string"
      },
      "MetricDimensionValue": {
        "type": "string"
      },
      "MetricStatistic": {
        "type": "string",
        "enum": [
          "Average",
          "Minimum",
          "Maximum",
          "SampleCount",
          "Sum"
        ]
      },
      "MetricUnit": {
        "type": "string"
      },
      "TargetTrackingMetricDataQueries": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TargetTrackingMetricDataQuery"
        }
      },
      "TargetTrackingMetricDataQuery": {
        "type": "object",
        "required": [
          "Id"
        ],
        "properties": {
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "<p>The math expression to perform on the returned data, if this object is performing a math expression. This expression can use the <code>Id</code> of the other metrics to refer to those metrics, and can also use the <code>Id</code> of other expressions to use the result of those expressions. </p> <p>Conditional: Within each <code>TargetTrackingMetricDataQuery</code> object, you must specify either <code>Expression</code> or <code>MetricStat</code>, but not both.</p>"
              }
            ]
          },
          "Id": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "A short name that identifies the object's results in the response. This name must be unique among all <code>MetricDataQuery</code> objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter. "
              }
            ]
          },
          "Label": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlString"
              },
              {
                "description": "A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents."
              }
            ]
          },
          "MetricStat": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetTrackingMetricStat"
              },
              {
                "description": "<p>Information about the metric data to return.</p> <p>Conditional: Within each <code>MetricDataQuery</code> object, you must specify either <code>Expression</code> or <code>MetricStat</code>, but not both.</p>"
              }
            ]
          },
          "ReturnData": {
            "allOf": [
              {
                "$ref": "#/$defs/ReturnData"
              },
              {
                "description": "<p>Indicates whether to return the timestamps and raw data values of this metric. </p> <p>If you use any math expressions, specify <code>true</code> for this value for only the final math expression that the metric specification is based on. You must specify <code>false</code> for <code>ReturnData</code> for all the other metrics and expressions used in the metric specification.</p> <p>If you are only retrieving metrics and not performing any math expressions, do not specify anything for <code>ReturnData</code>. This sets it to its default (<code>true</code>).</p>"
              }
            ]
          }
        },
        "description": "<p>The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.</p> <p>For more information and examples, see <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking-metric-math.html\">Create a target tracking scaling policy for Application Auto Scaling using metric math</a> in the <i>Application Auto Scaling User Guide</i>.</p>"
      },
      "Expression": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "Id": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "XmlString": {
        "type": "string",
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "TargetTrackingMetricStat": {
        "type": "object",
        "required": [
          "Metric",
          "Stat"
        ],
        "properties": {
          "Metric": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetTrackingMetric"
              },
              {
                "description": "The CloudWatch metric to return, including the metric name, namespace, and dimensions. To get the exact metric name, namespace, and dimensions, inspect the <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html\">Metric</a> object that is returned by a call to <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html\">ListMetrics</a>."
              }
            ]
          },
          "Stat": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlString"
              },
              {
                "description": "<p>The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic\">Statistics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>The most commonly used metric for scaling is <code>Average</code>.</p>"
              }
            ]
          },
          "Unit": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetTrackingMetricUnit"
              },
              {
                "description": "The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html\">MetricDatum</a> data type in the <i>Amazon CloudWatch API Reference</i>."
              }
            ]
          }
        },
        "description": "<p>This structure defines the CloudWatch metric to return, along with the statistic, period, and unit.</p> <p>For more information about the CloudWatch terminology below, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html\">Amazon CloudWatch concepts</a> in the <i>Amazon CloudWatch User Guide</i>.</p>"
      },
      "TargetTrackingMetric": {
        "type": "object",
        "properties": {
          "Dimensions": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetTrackingMetricDimensions"
              },
              {
                "description": "<p>The dimensions for the metric. For the list of available dimensions, see the Amazon Web Services documentation available from the table in <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html\">Amazon Web Services services that publish CloudWatch metrics </a> in the <i>Amazon CloudWatch User Guide</i>. </p> <p>Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.</p>"
              }
            ]
          },
          "MetricName": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetTrackingMetricName"
              },
              {
                "description": "The name of the metric."
              }
            ]
          },
          "Namespace": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetTrackingMetricNamespace"
              },
              {
                "description": "The namespace of the metric. For more information, see the table in <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html\">Amazon Web Services services that publish CloudWatch metrics </a> in the <i>Amazon CloudWatch User Guide</i>."
              }
            ]
          }
        },
        "description": "<p>Represents a specific metric.</p> <p>Metric is a property of the <a>TargetTrackingMetricStat</a> object.</p>"
      },
      "TargetTrackingMetricDimensions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TargetTrackingMetricDimension"
        }
      },
      "TargetTrackingMetricDimension": {
        "type": "object",
        "required": [
          "Name",
          "Value"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetTrackingMetricDimensionName"
              },
              {
                "description": "The name of the dimension."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetTrackingMetricDimensionValue"
              },
              {
                "description": "The value of the dimension."
              }
            ]
          }
        },
        "description": "Describes the dimension of a metric."
      },
      "TargetTrackingMetricDimensionName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "TargetTrackingMetricDimensionValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "TargetTrackingMetricName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "TargetTrackingMetricNamespace": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "TargetTrackingMetricUnit": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1023,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "ReturnData": {
        "type": "boolean"
      },
      "DisableScaleIn": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://application-autoscaling.us-east-1.amazonaws.com/#X-Amz-Target=AnyScaleFrontendService.PutScalingPolicy"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**PolicyARN**",
            "**Alarms**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
