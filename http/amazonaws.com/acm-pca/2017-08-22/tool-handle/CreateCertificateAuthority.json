{
  "name": "CreateCertificateAuthority",
  "description": "<p>Creates a root or subordinate private certificate authority (CA). You must specify the CA configuration, an optional configuration for Online Certificate Status Protocol (OCSP) and/or a certificate revocation list (CRL), the CA type, and an optional idempotency token to avoid accidental creation of multiple CAs. The CA configuration specifies the name of the algorithm and key size to be used to create the CA private key, the type of signing algorithm that the CA uses, and X.500 subject information. The OCSP configuration can optionally specify a custom URL for the OCSP responder. The CRL configuration specifies the CRL expiration period in days (the validity period of the CRL), the Amazon S3 bucket that will contain the CRL, and a CNAME alias for the S3 bucket that is included in certificates issued by the CA. If successful, this action returns the Amazon Resource Name (ARN) of the CA.</p> <note> <p>Both Amazon Web Services Private CA and the IAM principal must have permission to write to the S3 bucket that you specify. If the IAM principal making the call does not have permission to write to the bucket, then an exception is thrown. For more information, see <a href=\"https://docs.aws.amazon.com/privateca/latest/userguide/crl-planning.html#s3-policies\">Access policies for CRLs in Amazon S3</a>.</p> </note> <p>Amazon Web Services Private CA assets that are stored in Amazon S3 can be protected with encryption. For more information, see <a href=\"https://docs.aws.amazon.com/privateca/latest/userguide/PcaCreateCa.html#crl-encryption\">Encrypting Your CRLs</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "ACMPrivateCA.CreateCertificateAuthority"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateCertificateAuthorityRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateCertificateAuthorityRequest": {
        "type": "object",
        "required": [
          "CertificateAuthorityConfiguration",
          "CertificateAuthorityType"
        ],
        "title": "CreateCertificateAuthorityRequest",
        "properties": {
          "CertificateAuthorityConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CertificateAuthorityConfiguration"
              },
              {
                "description": "Name and bit size of the private key algorithm, the name of the signing algorithm, and X.500 certificate subject information."
              }
            ]
          },
          "RevocationConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/RevocationConfiguration"
              },
              {
                "description": "<p>Contains information to enable Online Certificate Status Protocol (OCSP) support, to enable a certificate revocation list (CRL), to enable both, or to enable neither. The default is for both certificate validation mechanisms to be disabled. </p> <note> <p>The following requirements apply to revocation configurations.</p> <ul> <li> <p>A configuration disabling CRLs or OCSP must contain only the <code>Enabled=False</code> parameter, and will fail if other parameters such as <code>CustomCname</code> or <code>ExpirationInDays</code> are included.</p> </li> <li> <p>In a CRL configuration, the <code>S3BucketName</code> parameter must conform to <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html\">Amazon S3 bucket naming rules</a>.</p> </li> <li> <p>A configuration containing a custom Canonical Name (CNAME) parameter for CRLs or OCSP must conform to <a href=\"https://www.ietf.org/rfc/rfc2396.txt\">RFC2396</a> restrictions on the use of special characters in a CNAME. </p> </li> <li> <p>In a CRL or OCSP configuration, the value of a CNAME parameter must not include a protocol prefix such as \"http://\" or \"https://\".</p> </li> </ul> </note> <p> For more information, see the <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/API_OcspConfiguration.html\">OcspConfiguration</a> and <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/API_CrlConfiguration.html\">CrlConfiguration</a> types.</p>"
              }
            ]
          },
          "CertificateAuthorityType": {
            "allOf": [
              {
                "$ref": "#/$defs/CertificateAuthorityType"
              },
              {
                "description": "The type of the certificate authority."
              }
            ]
          },
          "IdempotencyToken": {
            "allOf": [
              {
                "$ref": "#/$defs/IdempotencyToken"
              },
              {
                "description": "Custom string that can be used to distinguish between calls to the <b>CreateCertificateAuthority</b> action. Idempotency tokens for <b>CreateCertificateAuthority</b> time out after five minutes. Therefore, if you call <b>CreateCertificateAuthority</b> multiple times with the same idempotency token within five minutes, Amazon Web Services Private CA recognizes that you are requesting only certificate authority and will issue only one. If you change the idempotency token for each call, Amazon Web Services Private CA recognizes that you are requesting multiple certificate authorities."
              }
            ]
          },
          "KeyStorageSecurityStandard": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyStorageSecurityStandard"
              },
              {
                "description": "<p>Specifies a cryptographic key management compliance standard used for handling CA keys.</p> <p>Default: FIPS_140_2_LEVEL_3_OR_HIGHER</p> <note> <p>Some Amazon Web Services Regions do not support the default. When creating a CA in these Regions, you must provide <code>FIPS_140_2_LEVEL_2_OR_HIGHER</code> as the argument for <code>KeyStorageSecurityStandard</code>. Failure to do this results in an <code>InvalidArgsException</code> with the message, \"A certificate authority cannot be created in this region with the specified security standard.\"</p> <p>For information about security standard support in various Regions, see <a href=\"https://docs.aws.amazon.com/privateca/latest/userguide/data-protection.html#private-keys\">Storage and security compliance of Amazon Web Services Private CA private keys</a>.</p> </note>"
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "Key-value pairs that will be attached to the new private CA. You can associate up to 50 tags with a private CA. For information using tags with IAM to manage permissions, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html\">Controlling Access Using IAM Tags</a>."
              }
            ]
          },
          "UsageMode": {
            "allOf": [
              {
                "$ref": "#/$defs/CertificateAuthorityUsageMode"
              },
              {
                "description": "<p>Specifies whether the CA issues general-purpose certificates that typically require a revocation mechanism, or short-lived certificates that may optionally omit revocation because they expire quickly. Short-lived certificate validity is limited to seven days.</p> <p>The default value is GENERAL_PURPOSE.</p>"
              }
            ]
          }
        }
      },
      "CertificateAuthorityConfiguration": {
        "type": "object",
        "required": [
          "KeyAlgorithm",
          "SigningAlgorithm",
          "Subject"
        ],
        "properties": {
          "KeyAlgorithm": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyAlgorithm"
              },
              {
                "description": "Type of the public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate. When you create a subordinate CA, you must use a key algorithm supported by the parent CA."
              }
            ]
          },
          "SigningAlgorithm": {
            "allOf": [
              {
                "$ref": "#/$defs/SigningAlgorithm"
              },
              {
                "description": "<p>Name of the algorithm your private CA uses to sign certificate requests.</p> <p>This parameter should not be confused with the <code>SigningAlgorithm</code> parameter used to sign certificates when they are issued.</p>"
              }
            ]
          },
          "Subject": {
            "allOf": [
              {
                "$ref": "#/$defs/ASN1Subject"
              },
              {
                "description": "Structure that contains X.500 distinguished name information for your private CA."
              }
            ]
          },
          "CsrExtensions": {
            "allOf": [
              {
                "$ref": "#/$defs/CsrExtensions"
              },
              {
                "description": "Specifies information to be added to the extension section of the certificate signing request (CSR)."
              }
            ]
          }
        },
        "description": "Contains configuration information for your private certificate authority (CA). This includes information about the class of public key algorithm and the key pair that your private CA creates when it issues a certificate. It also includes the signature algorithm that it uses when issuing certificates, and its X.500 distinguished name. You must specify this information when you call the <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/API_CreateCertificateAuthority.html\">CreateCertificateAuthority</a> action. "
      },
      "KeyAlgorithm": {
        "type": "string",
        "enum": [
          "RSA_2048",
          "RSA_4096",
          "EC_prime256v1",
          "EC_secp384r1"
        ]
      },
      "SigningAlgorithm": {
        "type": "string",
        "enum": [
          "SHA256WITHECDSA",
          "SHA384WITHECDSA",
          "SHA512WITHECDSA",
          "SHA256WITHRSA",
          "SHA384WITHRSA",
          "SHA512WITHRSA"
        ]
      },
      "ASN1Subject": {
        "type": "object",
        "properties": {
          "Country": {
            "allOf": [
              {
                "$ref": "#/$defs/CountryCodeString"
              },
              {
                "description": "Two-digit code that specifies the country in which the certificate subject located."
              }
            ]
          },
          "Organization": {
            "allOf": [
              {
                "$ref": "#/$defs/String64"
              },
              {
                "description": "Legal name of the organization with which the certificate subject is affiliated. "
              }
            ]
          },
          "OrganizationalUnit": {
            "allOf": [
              {
                "$ref": "#/$defs/String64"
              },
              {
                "description": "A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated."
              }
            ]
          },
          "DistinguishedNameQualifier": {
            "allOf": [
              {
                "$ref": "#/$defs/ASN1PrintableString64"
              },
              {
                "description": "Disambiguating information for the certificate subject."
              }
            ]
          },
          "State": {
            "allOf": [
              {
                "$ref": "#/$defs/String128"
              },
              {
                "description": "State in which the subject of the certificate is located."
              }
            ]
          },
          "CommonName": {
            "allOf": [
              {
                "$ref": "#/$defs/String64"
              },
              {
                "description": "<p>For CA and end-entity certificates in a private PKI, the common name (CN) can be any string within the length limit. </p> <p>Note: In publicly trusted certificates, the common name must be a fully qualified domain name (FQDN) associated with the certificate subject.</p>"
              }
            ]
          },
          "SerialNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/ASN1PrintableString64"
              },
              {
                "description": "The certificate serial number."
              }
            ]
          },
          "Locality": {
            "allOf": [
              {
                "$ref": "#/$defs/String128"
              },
              {
                "description": "The locality (such as a city or town) in which the certificate subject is located."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/String64"
              },
              {
                "description": "A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the certificate subject."
              }
            ]
          },
          "Surname": {
            "allOf": [
              {
                "$ref": "#/$defs/String40"
              },
              {
                "description": "Family name. In the US and the UK, for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first."
              }
            ]
          },
          "GivenName": {
            "allOf": [
              {
                "$ref": "#/$defs/String16"
              },
              {
                "description": "First name."
              }
            ]
          },
          "Initials": {
            "allOf": [
              {
                "$ref": "#/$defs/String5"
              },
              {
                "description": "Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the first letter of the <b>Surname</b>."
              }
            ]
          },
          "Pseudonym": {
            "allOf": [
              {
                "$ref": "#/$defs/String128"
              },
              {
                "description": "Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza."
              }
            ]
          },
          "GenerationQualifier": {
            "allOf": [
              {
                "$ref": "#/$defs/String3"
              },
              {
                "description": "Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third."
              }
            ]
          },
          "CustomAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomAttributeList"
              },
              {
                "description": "<p/> <p>Contains a sequence of one or more X.500 relative distinguished names (RDNs), each of which consists of an object identifier (OID) and a value. For more information, see NIST’s definition of <a href=\"https://csrc.nist.gov/glossary/term/Object_Identifier\">Object Identifier (OID)</a>.</p> <note> <p>Custom attributes cannot be used in combination with standard attributes.</p> </note>"
              }
            ]
          }
        },
        "description": "Contains information about the certificate subject. The <code>Subject</code> field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The <code>Subject </code>must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate."
      },
      "CountryCodeString": {
        "type": "string",
        "pattern": "[A-Za-z]{2}",
        "minLength": 2,
        "maxLength": 2
      },
      "String64": {
        "type": "string",
        "minLength": 0,
        "maxLength": 64
      },
      "ASN1PrintableString64": {
        "type": "string",
        "pattern": "[a-zA-Z0-9'()+-.?:/= ]*",
        "minLength": 0,
        "maxLength": 64
      },
      "String128": {
        "type": "string",
        "minLength": 0,
        "maxLength": 128
      },
      "String40": {
        "type": "string",
        "minLength": 0,
        "maxLength": 40
      },
      "String16": {
        "type": "string",
        "minLength": 0,
        "maxLength": 16
      },
      "String5": {
        "type": "string",
        "minLength": 0,
        "maxLength": 5
      },
      "String3": {
        "type": "string",
        "minLength": 0,
        "maxLength": 3
      },
      "CustomAttributeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CustomAttribute"
        },
        "minItems": 1,
        "maxItems": 30
      },
      "CustomAttribute": {
        "type": "object",
        "required": [
          "ObjectIdentifier",
          "Value"
        ],
        "properties": {
          "ObjectIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomObjectIdentifier"
              },
              {
                "description": "Specifies the object identifier (OID) of the attribute type of the relative distinguished name (RDN)."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String1To256"
              },
              {
                "description": "<p/> <p>Specifies the attribute value of relative distinguished name (RDN).</p>"
              }
            ]
          }
        },
        "description": "Defines the X.500 relative distinguished name (RDN)."
      },
      "CustomObjectIdentifier": {
        "type": "string",
        "pattern": "^([0-2])\\.([0-9]|([0-3][0-9]))((\\.([0-9]+)){0,126})$",
        "minLength": 0,
        "maxLength": 64
      },
      "String1To256": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "CsrExtensions": {
        "type": "object",
        "properties": {
          "KeyUsage": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyUsage"
              },
              {
                "description": "Indicates the purpose of the certificate and of the key contained in the certificate."
              }
            ]
          },
          "SubjectInformationAccess": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessDescriptionList"
              },
              {
                "description": "For CA certificates, provides a path to additional information pertaining to the CA, such as revocation and policy. For more information, see <a href=\"https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.2.2\">Subject Information Access</a> in RFC 5280."
              }
            ]
          }
        },
        "description": "Describes the certificate extensions to be added to the certificate signing request (CSR)."
      },
      "KeyUsage": {
        "type": "object",
        "properties": {
          "DigitalSignature": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": " Key can be used for digital signing."
              }
            ]
          },
          "NonRepudiation": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Key can be used for non-repudiation."
              }
            ]
          },
          "KeyEncipherment": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Key can be used to encipher data."
              }
            ]
          },
          "DataEncipherment": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Key can be used to decipher data."
              }
            ]
          },
          "KeyAgreement": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Key can be used in a key-agreement protocol."
              }
            ]
          },
          "KeyCertSign": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Key can be used to sign certificates."
              }
            ]
          },
          "CRLSign": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Key can be used to sign CRLs."
              }
            ]
          },
          "EncipherOnly": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Key can be used only to encipher data."
              }
            ]
          },
          "DecipherOnly": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Key can be used only to decipher data."
              }
            ]
          }
        },
        "description": "Defines one or more purposes for which the key contained in the certificate can be used. Default value for each option is false."
      },
      "Boolean": {
        "type": "boolean"
      },
      "AccessDescriptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccessDescription"
        }
      },
      "AccessDescription": {
        "type": "object",
        "required": [
          "AccessMethod",
          "AccessLocation"
        ],
        "properties": {
          "AccessMethod": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessMethod"
              },
              {
                "description": "The type and format of <code>AccessDescription</code> information."
              }
            ]
          },
          "AccessLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/GeneralName"
              },
              {
                "description": "The location of <code>AccessDescription</code> information."
              }
            ]
          }
        },
        "description": "Provides access information used by the <code>authorityInfoAccess</code> and <code>subjectInfoAccess</code> extensions described in <a href=\"https://datatracker.ietf.org/doc/html/rfc5280\">RFC 5280</a>."
      },
      "AccessMethod": {
        "type": "object",
        "properties": {
          "CustomObjectIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomObjectIdentifier"
              },
              {
                "description": "An object identifier (OID) specifying the <code>AccessMethod</code>. The OID must satisfy the regular expression shown below. For more information, see NIST's definition of <a href=\"https://csrc.nist.gov/glossary/term/Object_Identifier\">Object Identifier (OID)</a>."
              }
            ]
          },
          "AccessMethodType": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessMethodType"
              },
              {
                "description": "Specifies the <code>AccessMethod</code>."
              }
            ]
          }
        },
        "description": "Describes the type and format of extension access. Only one of <code>CustomObjectIdentifier</code> or <code>AccessMethodType</code> may be provided. Providing both results in <code>InvalidArgsException</code>."
      },
      "AccessMethodType": {
        "type": "string",
        "enum": [
          "CA_REPOSITORY",
          "RESOURCE_PKI_MANIFEST",
          "RESOURCE_PKI_NOTIFY"
        ]
      },
      "GeneralName": {
        "type": "object",
        "properties": {
          "OtherName": {
            "allOf": [
              {
                "$ref": "#/$defs/OtherName"
              },
              {
                "description": "Represents <code>GeneralName</code> using an <code>OtherName</code> object."
              }
            ]
          },
          "Rfc822Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "Represents <code>GeneralName</code> as an <a href=\"https://datatracker.ietf.org/doc/html/rfc822\">RFC 822</a> email address."
              }
            ]
          },
          "DnsName": {
            "allOf": [
              {
                "$ref": "#/$defs/String253"
              },
              {
                "description": "Represents <code>GeneralName</code> as a DNS name."
              }
            ]
          },
          "DirectoryName": {
            "$ref": "#/$defs/ASN1Subject"
          },
          "EdiPartyName": {
            "allOf": [
              {
                "$ref": "#/$defs/EdiPartyName"
              },
              {
                "description": "Represents <code>GeneralName</code> as an <code>EdiPartyName</code> object."
              }
            ]
          },
          "UniformResourceIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/String253"
              },
              {
                "description": "Represents <code>GeneralName</code> as a URI."
              }
            ]
          },
          "IpAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/String39"
              },
              {
                "description": "Represents <code>GeneralName</code> as an IPv4 or IPv6 address."
              }
            ]
          },
          "RegisteredId": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomObjectIdentifier"
              },
              {
                "description": " Represents <code>GeneralName</code> as an object identifier (OID)."
              }
            ]
          }
        },
        "description": "Describes an ASN.1 X.400 <code>GeneralName</code> as defined in <a href=\"https://datatracker.ietf.org/doc/html/rfc5280\">RFC 5280</a>. Only one of the following naming options should be provided. Providing more than one option results in an <code>InvalidArgsException</code> error."
      },
      "OtherName": {
        "type": "object",
        "required": [
          "TypeId",
          "Value"
        ],
        "properties": {
          "TypeId": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomObjectIdentifier"
              },
              {
                "description": "Specifies an OID. "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "Specifies an OID value."
              }
            ]
          }
        },
        "description": "Defines a custom ASN.1 X.400 <code>GeneralName</code> using an object identifier (OID) and value. The OID must satisfy the regular expression shown below. For more information, see NIST's definition of <a href=\"https://csrc.nist.gov/glossary/term/Object_Identifier\">Object Identifier (OID)</a>."
      },
      "String256": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "String253": {
        "type": "string",
        "minLength": 0,
        "maxLength": 253
      },
      "EdiPartyName": {
        "type": "object",
        "required": [
          "PartyName"
        ],
        "properties": {
          "PartyName": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "Specifies the party name."
              }
            ]
          },
          "NameAssigner": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "Specifies the name assigner."
              }
            ]
          }
        },
        "description": "Describes an Electronic Data Interchange (EDI) entity as described in as defined in <a href=\"https://datatracker.ietf.org/doc/html/rfc5280\">Subject Alternative Name</a> in RFC 5280."
      },
      "String39": {
        "type": "string",
        "minLength": 0,
        "maxLength": 39
      },
      "RevocationConfiguration": {
        "type": "object",
        "properties": {
          "CrlConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CrlConfiguration"
              },
              {
                "description": "Configuration of the certificate revocation list (CRL), if any, maintained by your private CA. A CRL is typically updated approximately 30 minutes after a certificate is revoked. If for any reason a CRL update fails, Amazon Web Services Private CA makes further attempts every 15 minutes."
              }
            ]
          },
          "OcspConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/OcspConfiguration"
              },
              {
                "description": "Configuration of Online Certificate Status Protocol (OCSP) support, if any, maintained by your private CA. When you revoke a certificate, OCSP responses may take up to 60 minutes to reflect the new status."
              }
            ]
          }
        },
        "description": "Certificate revocation information used by the <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/API_CreateCertificateAuthority.html\">CreateCertificateAuthority</a> and <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/API_UpdateCertificateAuthority.html\">UpdateCertificateAuthority</a> actions. Your private certificate authority (CA) can configure Online Certificate Status Protocol (OCSP) support and/or maintain a certificate revocation list (CRL). OCSP returns validation information about certificates as requested by clients, and a CRL contains an updated list of certificates revoked by your CA. For more information, see <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/API_RevokeCertificate.html\">RevokeCertificate</a> and <a href=\"https://docs.aws.amazon.com/privateca/latest/userguide/revocation-setup.html\">Setting up a certificate revocation method</a> in the <i>Amazon Web Services Private Certificate Authority User Guide</i>."
      },
      "CrlConfiguration": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. You can use this value to enable certificate revocation for a new CA when you call the <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/API_CreateCertificateAuthority.html\">CreateCertificateAuthority</a> action or for an existing CA when you call the <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/API_UpdateCertificateAuthority.html\">UpdateCertificateAuthority</a> action. "
              }
            ]
          },
          "ExpirationInDays": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer1To5000"
              },
              {
                "description": "Validity period of the CRL in days."
              }
            ]
          },
          "CustomCname": {
            "allOf": [
              {
                "$ref": "#/$defs/CnameString"
              },
              {
                "description": "<p>Name inserted into the certificate <b>CRL Distribution Points</b> extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.</p> <note> <p>The content of a Canonical Name (CNAME) record must conform to <a href=\"https://www.ietf.org/rfc/rfc2396.txt\">RFC2396</a> restrictions on the use of special characters in URIs. Additionally, the value of the CNAME must not include a protocol prefix such as \"http://\" or \"https://\".</p> </note>"
              }
            ]
          },
          "S3BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BucketName3To255"
              },
              {
                "description": "<p>Name of the S3 bucket that contains the CRL. If you do not provide a value for the <b>CustomCname</b> argument, the name of your S3 bucket is placed into the <b>CRL Distribution Points</b> extension of the issued certificate. You can change the name of your bucket by calling the <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/API_UpdateCertificateAuthority.html\">UpdateCertificateAuthority</a> operation. You must specify a <a href=\"https://docs.aws.amazon.com/privateca/latest/userguide/PcaCreateCa.html#s3-policies\">bucket policy</a> that allows Amazon Web Services Private CA to write the CRL to your bucket.</p> <note> <p>The <code>S3BucketName</code> parameter must conform to the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html\">S3 bucket naming rules</a>.</p> </note>"
              }
            ]
          },
          "S3ObjectAcl": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ObjectAcl"
              },
              {
                "description": "<p>Determines whether the CRL will be publicly readable or privately held in the CRL Amazon S3 bucket. If you choose PUBLIC_READ, the CRL will be accessible over the public internet. If you choose BUCKET_OWNER_FULL_CONTROL, only the owner of the CRL S3 bucket can access the CRL, and your PKI clients may need an alternative method of access. </p> <p>If no value is specified, the default is <code>PUBLIC_READ</code>.</p> <p> <i>Note:</i> This default can cause CA creation to fail in some circumstances. If you have have enabled the Block Public Access (BPA) feature in your S3 account, then you must specify the value of this parameter as <code>BUCKET_OWNER_FULL_CONTROL</code>, and not doing so results in an error. If you have disabled BPA in S3, then you can specify either <code>BUCKET_OWNER_FULL_CONTROL</code> or <code>PUBLIC_READ</code> as the value.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/privateca/latest/userguide/PcaCreateCa.html#s3-bpa\">Blocking public access to the S3 bucket</a>.</p>"
              }
            ]
          }
        },
        "description": "<p>Contains configuration information for a certificate revocation list (CRL). Your private certificate authority (CA) creates base CRLs. Delta CRLs are not supported. You can enable CRLs for your new or an existing private CA by setting the <b>Enabled</b> parameter to <code>true</code>. Your private CA writes CRLs to an S3 bucket that you specify in the <b>S3BucketName</b> parameter. You can hide the name of your bucket by specifying a value for the <b>CustomCname</b> parameter. Your private CA copies the CNAME or the S3 bucket name to the <b>CRL Distribution Points</b> extension of each certificate it issues. Your S3 bucket policy must give write permission to Amazon Web Services Private CA. </p> <p>Amazon Web Services Private CA assets that are stored in Amazon S3 can be protected with encryption. For more information, see <a href=\"https://docs.aws.amazon.com/privateca/latest/userguide/PcaCreateCa.html#crl-encryption\">Encrypting Your CRLs</a>.</p> <p>Your private CA uses the value in the <b>ExpirationInDays</b> parameter to calculate the <b>nextUpdate</b> field in the CRL. The CRL is refreshed prior to a certificate's expiration date or when a certificate is revoked. When a certificate is revoked, it appears in the CRL until the certificate expires, and then in one additional CRL after expiration, and it always appears in the audit report.</p> <p>A CRL is typically updated approximately 30 minutes after a certificate is revoked. If for any reason a CRL update fails, Amazon Web Services Private CA makes further attempts every 15 minutes.</p> <p>CRLs contain the following fields:</p> <ul> <li> <p> <b>Version</b>: The current version number defined in RFC 5280 is V2. The integer value is 0x1. </p> </li> <li> <p> <b>Signature Algorithm</b>: The name of the algorithm used to sign the CRL.</p> </li> <li> <p> <b>Issuer</b>: The X.500 distinguished name of your private CA that issued the CRL.</p> </li> <li> <p> <b>Last Update</b>: The issue date and time of this CRL.</p> </li> <li> <p> <b>Next Update</b>: The day and time by which the next CRL will be issued.</p> </li> <li> <p> <b>Revoked Certificates</b>: List of revoked certificates. Each list item contains the following information.</p> <ul> <li> <p> <b>Serial Number</b>: The serial number, in hexadecimal format, of the revoked certificate.</p> </li> <li> <p> <b>Revocation Date</b>: Date and time the certificate was revoked.</p> </li> <li> <p> <b>CRL Entry Extensions</b>: Optional extensions for the CRL entry.</p> <ul> <li> <p> <b>X509v3 CRL Reason Code</b>: Reason the certificate was revoked.</p> </li> </ul> </li> </ul> </li> <li> <p> <b>CRL Extensions</b>: Optional extensions for the CRL.</p> <ul> <li> <p> <b>X509v3 Authority Key Identifier</b>: Identifies the public key associated with the private key used to sign the certificate.</p> </li> <li> <p> <b>X509v3 CRL Number:</b>: Decimal sequence number for the CRL.</p> </li> </ul> </li> <li> <p> <b>Signature Algorithm</b>: Algorithm used by your private CA to sign the CRL.</p> </li> <li> <p> <b>Signature Value</b>: Signature computed over the CRL.</p> </li> </ul> <p>Certificate revocation lists created by Amazon Web Services Private CA are DER-encoded. You can use the following OpenSSL command to list a CRL.</p> <p> <code>openssl crl -inform DER -text -in <i>crl_path</i> -noout</code> </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/privateca/latest/userguide/crl-planning.html\">Planning a certificate revocation list (CRL)</a> in the <i>Amazon Web Services Private Certificate Authority User Guide</i> </p>"
      },
      "Integer1To5000": {
        "type": "integer",
        "minimum": 1,
        "maximum": 5000
      },
      "CnameString": {
        "type": "string",
        "pattern": "^[-a-zA-Z0-9;/?:@&=+$,%_.!~*()']*$",
        "minLength": 0,
        "maxLength": 253
      },
      "S3BucketName3To255": {
        "type": "string",
        "pattern": "^[-a-zA-Z0-9._/]+$",
        "minLength": 3,
        "maxLength": 255
      },
      "S3ObjectAcl": {
        "type": "string",
        "enum": [
          "PUBLIC_READ",
          "BUCKET_OWNER_FULL_CONTROL"
        ]
      },
      "OcspConfiguration": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Flag enabling use of the Online Certificate Status Protocol (OCSP) for validating certificate revocation status."
              }
            ]
          },
          "OcspCustomCname": {
            "allOf": [
              {
                "$ref": "#/$defs/CnameString"
              },
              {
                "description": "<p>By default, Amazon Web Services Private CA injects an Amazon Web Services domain into certificates being validated by the Online Certificate Status Protocol (OCSP). A customer can alternatively use this object to define a CNAME specifying a customized OCSP domain.</p> <note> <p>The content of a Canonical Name (CNAME) record must conform to <a href=\"https://www.ietf.org/rfc/rfc2396.txt\">RFC2396</a> restrictions on the use of special characters in URIs. Additionally, the value of the CNAME must not include a protocol prefix such as \"http://\" or \"https://\".</p> </note> <p>For more information, see <a href=\"https://docs.aws.amazon.com/privateca/latest/userguide/ocsp-customize.html\">Customizing Online Certificate Status Protocol (OCSP) </a> in the <i>Amazon Web Services Private Certificate Authority User Guide</i>.</p>"
              }
            ]
          }
        },
        "description": "<p>Contains information to enable and configure Online Certificate Status Protocol (OCSP) for validating certificate revocation status.</p> <p>When you revoke a certificate, OCSP responses may take up to 60 minutes to reflect the new status.</p>"
      },
      "CertificateAuthorityType": {
        "type": "string",
        "enum": [
          "ROOT",
          "SUBORDINATE"
        ]
      },
      "IdempotencyToken": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
        "minLength": 1,
        "maxLength": 36
      },
      "KeyStorageSecurityStandard": {
        "type": "string",
        "enum": [
          "FIPS_140_2_LEVEL_2_OR_HIGHER",
          "FIPS_140_2_LEVEL_3_OR_HIGHER"
        ]
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "Key (name) of the tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "Value of the tag."
              }
            ]
          }
        },
        "description": "Tags are labels that you can use to identify and organize your private CAs. Each tag consists of a key and an optional value. You can associate up to 50 tags with a private CA. To add one or more tags to a private CA, call the <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/API_TagCertificateAuthority.html\">TagCertificateAuthority</a> action. To remove a tag, call the <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/API_UntagCertificateAuthority.html\">UntagCertificateAuthority</a> action. "
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      },
      "CertificateAuthorityUsageMode": {
        "type": "string",
        "enum": [
          "GENERAL_PURPOSE",
          "SHORT_LIVED_CERTIFICATE"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://acm-pca.us-east-1.amazonaws.com/#X-Amz-Target=ACMPrivateCA.CreateCertificateAuthority"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**CertificateAuthorityArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
