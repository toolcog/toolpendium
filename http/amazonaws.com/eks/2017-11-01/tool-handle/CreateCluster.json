{
  "name": "CreateCluster",
  "description": "<p>Creates an Amazon EKS control plane. </p> <p>The Amazon EKS control plane consists of control plane instances that run the Kubernetes software, such as <code>etcd</code> and the API server. The control plane runs in an account managed by Amazon Web Services, and the Kubernetes API is exposed by the Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single tenant and unique. It runs on its own set of Amazon EC2 instances.</p> <p>The cluster control plane is provisioned across multiple Availability Zones and fronted by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic network interfaces in your VPC subnets to provide connectivity from the control plane instances to the nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>, and <code>proxy</code> data flows).</p> <p>Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's control plane over the Kubernetes API server endpoint and a certificate file that is created for your cluster.</p> <p>In most cases, it takes several minutes to create a cluster. After you create an Amazon EKS cluster, you must configure your Kubernetes tooling to communicate with the API server and launch nodes into your cluster. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html\">Managing Cluster Authentication</a> and <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html\">Launching Amazon EKS nodes</a> in the <i>Amazon EKS User Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "name",
          "roleArn",
          "resourcesVpcConfig"
        ],
        "properties": {
          "name": {
            "description": "The unique name to give to your cluster.",
            "type": "string",
            "pattern": "^[0-9A-Za-z][A-Za-z0-9\\-_]*",
            "minLength": 1,
            "maxLength": 100
          },
          "version": {
            "description": "<p>The desired Kubernetes version for your cluster. If you don't specify a value here, the default version available in Amazon EKS is used.</p> <note> <p>The default version might not be the latest version available.</p> </note>",
            "type": "string"
          },
          "roleArn": {
            "description": "The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html\">Amazon EKS Service IAM Role</a> in the <i> <i>Amazon EKS User Guide</i> </i>.",
            "type": "string"
          },
          "resourcesVpcConfig": {
            "description": "An object representing the VPC configuration to use for an Amazon EKS cluster.",
            "type": "object",
            "properties": {
              "subnetIds": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringList"
                  },
                  {
                    "description": "Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane."
                  }
                ]
              },
              "securityGroupIds": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringList"
                  },
                  {
                    "description": "Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use that allow communication between your nodes and the Kubernetes control plane. If you don't specify any security groups, then familiarize yourself with the difference between Amazon EKS defaults for clusters deployed with Kubernetes. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html\">Amazon EKS security group considerations</a> in the <i> <i>Amazon EKS User Guide</i> </i>."
                  }
                ]
              },
              "endpointPublicAccess": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BoxedBoolean"
                  },
                  {
                    "description": "Set this value to <code>false</code> to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is <code>true</code>, which enables public access for your Kubernetes API server. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html\">Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>."
                  }
                ]
              },
              "endpointPrivateAccess": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BoxedBoolean"
                  },
                  {
                    "description": "Set this value to <code>true</code> to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is <code>false</code>, which disables private access for your Kubernetes API server. If you disable private access and you have nodes or Fargate pods in the cluster, then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html\">Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>."
                  }
                ]
              },
              "publicAccessCidrs": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringList"
                  },
                  {
                    "description": "The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is <code>0.0.0.0/0</code>. If you've disabled private endpoint access and you have nodes or Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html\">Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>."
                  }
                ]
              }
            }
          },
          "kubernetesNetworkConfig": {
            "description": "The Kubernetes network configuration for the cluster.",
            "type": "object",
            "properties": {
              "serviceIpv4Cidr": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String"
                  },
                  {
                    "description": "<p>Don't specify a value if you select <code>ipv6</code> for <b>ipFamily</b>. The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the <code>10.100.0.0/16</code> or <code>172.20.0.0/16</code> CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. The block must meet the following requirements:</p> <ul> <li> <p>Within one of the following private IP address blocks: <code>10.0.0.0/8</code>, <code>172.16.0.0/12</code>, or <code>192.168.0.0/16</code>.</p> </li> <li> <p>Doesn't overlap with any CIDR block assigned to the VPC that you selected for VPC.</p> </li> <li> <p>Between /24 and /12.</p> </li> </ul> <important> <p>You can only specify a custom CIDR block when you create a cluster and can't change this value once the cluster is created.</p> </important>"
                  }
                ]
              },
              "ipFamily": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IpFamily"
                  },
                  {
                    "description": "<p>Specify which IP family is used to assign Kubernetes pod and service IP addresses. If you don't specify a value, <code>ipv4</code> is used by default. You can only specify an IP family when you create a cluster and can't change this value once the cluster is created. If you specify <code>ipv6</code>, the VPC and subnets that you specify for cluster creation must have both <code>IPv4</code> and <code>IPv6</code> CIDR blocks assigned to them. You can't specify <code>ipv6</code> for clusters in China Regions.</p> <p>You can only specify <code>ipv6</code> for <code>1.21</code> and later clusters that use version <code>1.10.1</code> or later of the Amazon VPC CNI add-on. If you specify <code>ipv6</code>, then ensure that your VPC meets the requirements listed in the considerations listed in <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/cni-ipv6.html\">Assigning IPv6 addresses to pods and services</a> in the Amazon EKS User Guide. Kubernetes assigns services <code>IPv6</code> addresses from the unique local address range <code>(fc00::/7)</code>. You can't specify a custom <code>IPv6</code> CIDR block. Pod addresses are assigned from the subnet's <code>IPv6</code> CIDR.</p>"
                  }
                ]
              }
            }
          },
          "logging": {
            "description": "An object representing the logging configuration for resources in your cluster.",
            "type": "object",
            "properties": {
              "clusterLogging": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LogSetups"
                  },
                  {
                    "description": "The cluster control plane logging configuration for your cluster."
                  }
                ]
              }
            }
          },
          "clientRequestToken": {
            "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
            "type": "string"
          },
          "tags": {
            "description": "The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.",
            "type": "object",
            "minProperties": 1,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "encryptionConfig": {
            "description": "The encryption configuration for the cluster.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/EncryptionConfig"
            },
            "maxItems": 1
          },
          "outpostConfig": {
            "description": "The configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. Before creating a cluster on an Outpost, review <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-local-cluster-create.html\">Creating a local cluster on an Outpost</a> in the <i>Amazon EKS User Guide</i>. This API isn't available for Amazon EKS clusters on the Amazon Web Services cloud.",
            "type": "object",
            "properties": {
              "outpostArns": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringList"
                  },
                  {
                    "description": "The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. Only a single Outpost ARN is supported."
                  }
                ]
              },
              "controlPlaneInstanceType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String"
                  },
                  {
                    "description": "<p>The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. Choose an instance type based on the number of nodes that your cluster will have. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html\">Capacity considerations</a> in the <i>Amazon EKS User Guide</i>.</p> <p>The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. The control plane is not automatically scaled by Amazon EKS.</p> <p> </p>"
                  }
                ]
              },
              "controlPlanePlacement": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ControlPlanePlacementRequest"
                  },
                  {
                    "description": "An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html\">Capacity considerations</a> in the <i>Amazon EKS User Guide</i>."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "String": {
        "type": "string"
      },
      "BoxedBoolean": {
        "type": "boolean"
      },
      "IpFamily": {
        "type": "string",
        "enum": [
          "ipv4",
          "ipv6"
        ]
      },
      "LogSetups": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LogSetup"
        }
      },
      "LogSetup": {
        "type": "object",
        "properties": {
          "types": {
            "allOf": [
              {
                "$ref": "#/$defs/LogTypes"
              },
              {
                "description": "The available cluster control plane log types."
              }
            ]
          },
          "enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "If a log type is enabled, that log type exports its control plane logs to CloudWatch Logs. If a log type isn't enabled, that log type doesn't export its control plane logs. Each individual log type can be enabled or disabled independently."
              }
            ]
          }
        },
        "description": "An object representing the enabled or disabled Kubernetes control plane logs for your cluster."
      },
      "LogTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LogType"
        }
      },
      "LogType": {
        "type": "string",
        "enum": [
          "api",
          "audit",
          "authenticator",
          "controllerManager",
          "scheduler"
        ]
      },
      "TagValue": {
        "type": "string",
        "maxLength": 256
      },
      "EncryptionConfig": {
        "type": "object",
        "properties": {
          "resources": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "Specifies the resources to be encrypted. The only supported value is \"secrets\"."
              }
            ]
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/$defs/Provider"
              },
              {
                "description": "Key Management Service (KMS) key. Either the ARN or the alias can be used."
              }
            ]
          }
        },
        "description": "The encryption configuration for the cluster."
      },
      "Provider": {
        "type": "object",
        "properties": {
          "keyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html\">Allowing Users in Other Accounts to Use a KMS key</a> in the <i>Key Management Service Developer Guide</i>."
              }
            ]
          }
        },
        "description": "Identifies the Key Management Service (KMS) key used to encrypt the secrets."
      },
      "ControlPlanePlacementRequest": {
        "type": "object",
        "properties": {
          "groupName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation. "
              }
            ]
          }
        },
        "description": "The placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html\">Capacity considerations</a> in the <i>Amazon EKS User Guide</i> "
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://eks.us-east-1.amazonaws.com/clusters"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**cluster**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
