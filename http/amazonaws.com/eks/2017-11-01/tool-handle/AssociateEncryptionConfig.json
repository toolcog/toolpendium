{
  "name": "AssociateEncryptionConfig",
  "description": "<p>Associate encryption configuration to an existing cluster.</p> <p>You can use this API to enable encryption on existing clusters which do not have encryption already enabled. This allows you to implement a defense-in-depth security strategy without migrating applications to new Amazon EKS clusters.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "The name of the cluster that you are associating with encryption configuration."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "encryptionConfig"
        ],
        "properties": {
          "encryptionConfig": {
            "description": "The configuration you are using for encryption.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/EncryptionConfig"
            },
            "maxItems": 1
          },
          "clientRequestToken": {
            "description": "The client request token you are using with the encryption configuration.",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "name",
      "body"
    ],
    "$defs": {
      "EncryptionConfig": {
        "type": "object",
        "properties": {
          "resources": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "Specifies the resources to be encrypted. The only supported value is \"secrets\"."
              }
            ]
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/$defs/Provider"
              },
              {
                "description": "Key Management Service (KMS) key. Either the ARN or the alias can be used."
              }
            ]
          }
        },
        "description": "The encryption configuration for the cluster."
      },
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "String": {
        "type": "string"
      },
      "Provider": {
        "type": "object",
        "properties": {
          "keyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html\">Allowing Users in Other Accounts to Use a KMS key</a> in the <i>Key Management Service Developer Guide</i>."
              }
            ]
          }
        },
        "description": "Identifies the Key Management Service (KMS) key used to encrypt the secrets."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://eks.us-east-1.amazonaws.com/clusters/{name}/encryption-config/associate"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**update**: An object representing an asynchronous update.",
              {
                "$ul": [
                  "**id**",
                  "**status**",
                  "**type**",
                  "**params**",
                  "**createdAt**",
                  "**errors**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
