{
  "name": "UpdateConnectorProfile",
  "description": " Updates a given connector profile associated with your account. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "connectorProfileName",
          "connectionMode",
          "connectorProfileConfig"
        ],
        "properties": {
          "connectorProfileName": {
            "description": " The name of the connector profile and is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account. ",
            "type": "string",
            "pattern": "[\\w/!@#+=.-]+",
            "maxLength": 256
          },
          "connectionMode": {
            "description": " Indicates the connection mode and if it is public or private. ",
            "type": "string",
            "enum": [
              "Public",
              "Private"
            ]
          },
          "connectorProfileConfig": {
            "description": " Defines the connector-specific configuration and credentials for the connector profile. ",
            "type": "object",
            "properties": {
              "connectorProfileProperties": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ConnectorProfileProperties"
                  },
                  {
                    "description": " The connector-specific properties of the profile configuration. "
                  }
                ]
              },
              "connectorProfileCredentials": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ConnectorProfileCredentials"
                  },
                  {
                    "description": " The connector-specific credentials required by each connector. "
                  }
                ]
              }
            }
          },
          "clientToken": {
            "description": "<p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>UpdateConnectorProfile</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>UpdateConnectorProfile</code>. The token is active for 8 hours.</p>",
            "type": "string",
            "pattern": "[ -~]+",
            "minLength": 1,
            "maxLength": 256
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ConnectorProfileProperties": {
        "type": "object",
        "properties": {
          "Amplitude": {
            "allOf": [
              {
                "$ref": "#/$defs/AmplitudeConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Amplitude. "
              }
            ]
          },
          "Datadog": {
            "allOf": [
              {
                "$ref": "#/$defs/DatadogConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Datadog. "
              }
            ]
          },
          "Dynatrace": {
            "allOf": [
              {
                "$ref": "#/$defs/DynatraceConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Dynatrace. "
              }
            ]
          },
          "GoogleAnalytics": {
            "allOf": [
              {
                "$ref": "#/$defs/GoogleAnalyticsConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required Google Analytics. "
              }
            ]
          },
          "Honeycode": {
            "allOf": [
              {
                "$ref": "#/$defs/HoneycodeConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Amazon Honeycode. "
              }
            ]
          },
          "InforNexus": {
            "allOf": [
              {
                "$ref": "#/$defs/InforNexusConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Infor Nexus. "
              }
            ]
          },
          "Marketo": {
            "allOf": [
              {
                "$ref": "#/$defs/MarketoConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Marketo. "
              }
            ]
          },
          "Redshift": {
            "allOf": [
              {
                "$ref": "#/$defs/RedshiftConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Amazon Redshift. "
              }
            ]
          },
          "Salesforce": {
            "allOf": [
              {
                "$ref": "#/$defs/SalesforceConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Salesforce. "
              }
            ]
          },
          "ServiceNow": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceNowConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by serviceNow. "
              }
            ]
          },
          "Singular": {
            "allOf": [
              {
                "$ref": "#/$defs/SingularConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Singular. "
              }
            ]
          },
          "Slack": {
            "allOf": [
              {
                "$ref": "#/$defs/SlackConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Slack. "
              }
            ]
          },
          "Snowflake": {
            "allOf": [
              {
                "$ref": "#/$defs/SnowflakeConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Snowflake. "
              }
            ]
          },
          "Trendmicro": {
            "allOf": [
              {
                "$ref": "#/$defs/TrendmicroConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Trend Micro. "
              }
            ]
          },
          "Veeva": {
            "allOf": [
              {
                "$ref": "#/$defs/VeevaConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Veeva. "
              }
            ]
          },
          "Zendesk": {
            "allOf": [
              {
                "$ref": "#/$defs/ZendeskConnectorProfileProperties"
              },
              {
                "description": " The connector-specific properties required by Zendesk. "
              }
            ]
          },
          "SAPOData": {
            "$ref": "#/$defs/SAPODataConnectorProfileProperties"
          },
          "CustomConnector": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomConnectorProfileProperties"
              },
              {
                "description": "The properties required by the custom connector."
              }
            ]
          },
          "Pardot": {
            "allOf": [
              {
                "$ref": "#/$defs/PardotConnectorProfileProperties"
              },
              {
                "description": "The connector-specific properties required by Salesforce Pardot."
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required by each connector. "
      },
      "AmplitudeConnectorProfileProperties": {
        "type": "object",
        "properties": {},
        "description": " The connector-specific profile properties required when using Amplitude. "
      },
      "DatadogConnectorProfileProperties": {
        "type": "object",
        "required": [
          "instanceUrl"
        ],
        "properties": {
          "instanceUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceUrl"
              },
              {
                "description": " The location of the Datadog resource. "
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required by Datadog. "
      },
      "InstanceUrl": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 256
      },
      "DynatraceConnectorProfileProperties": {
        "type": "object",
        "required": [
          "instanceUrl"
        ],
        "properties": {
          "instanceUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceUrl"
              },
              {
                "description": " The location of the Dynatrace resource. "
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required by Dynatrace. "
      },
      "GoogleAnalyticsConnectorProfileProperties": {
        "type": "object",
        "properties": {},
        "description": " The connector-specific profile properties required by Google Analytics. "
      },
      "HoneycodeConnectorProfileProperties": {
        "type": "object",
        "properties": {},
        "description": " The connector-specific properties required when using Amazon Honeycode. "
      },
      "InforNexusConnectorProfileProperties": {
        "type": "object",
        "required": [
          "instanceUrl"
        ],
        "properties": {
          "instanceUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceUrl"
              },
              {
                "description": " The location of the Infor Nexus resource. "
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required by Infor Nexus. "
      },
      "MarketoConnectorProfileProperties": {
        "type": "object",
        "required": [
          "instanceUrl"
        ],
        "properties": {
          "instanceUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceUrl"
              },
              {
                "description": " The location of the Marketo resource. "
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required when using Marketo. "
      },
      "RedshiftConnectorProfileProperties": {
        "type": "object",
        "required": [
          "bucketName",
          "roleArn"
        ],
        "properties": {
          "databaseUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseUrl"
              },
              {
                "description": " The JDBC URL of the Amazon Redshift cluster. "
              }
            ]
          },
          "bucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketName"
              },
              {
                "description": " A name for the associated Amazon S3 bucket. "
              }
            ]
          },
          "bucketPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketPrefix"
              },
              {
                "description": " The object key for the destination bucket in which Amazon AppFlow places the files. "
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": " The Amazon Resource Name (ARN) of IAM role that grants Amazon Redshift read-only access to Amazon S3. For more information, and for the polices that you attach to this role, see <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/security_iam_service-role-policies.html#redshift-access-s3\">Allow Amazon Redshift to access your Amazon AppFlow data in Amazon S3</a>."
              }
            ]
          },
          "dataApiRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/DataApiRoleArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an IAM role that permits Amazon AppFlow to access your Amazon Redshift database through the Data API. For more information, and for the polices that you attach to this role, see <a href=\"https://docs.aws.amazon.com/appflow/latest/userguide/security_iam_service-role-policies.html#access-redshift\">Allow Amazon AppFlow to access Amazon Redshift databases with the Data API</a>."
              }
            ]
          },
          "isRedshiftServerless": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether the connector profile defines a connection to an Amazon Redshift Serverless data warehouse."
              }
            ]
          },
          "clusterIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/ClusterIdentifier"
              },
              {
                "description": "The unique ID that's assigned to an Amazon Redshift cluster."
              }
            ]
          },
          "workgroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkgroupName"
              },
              {
                "description": "The name of an Amazon Redshift workgroup."
              }
            ]
          },
          "databaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseName"
              },
              {
                "description": "The name of an Amazon Redshift database."
              }
            ]
          }
        },
        "description": " The connector-specific profile properties when using Amazon Redshift. "
      },
      "DatabaseUrl": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "BucketName": {
        "type": "string",
        "pattern": "\\S+",
        "minLength": 3,
        "maxLength": 63
      },
      "BucketPrefix": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 512
      },
      "RoleArn": {
        "type": "string",
        "pattern": "arn:aws:iam:.*:[0-9]+:.*",
        "maxLength": 512
      },
      "DataApiRoleArn": {
        "type": "string",
        "pattern": "arn:aws:iam:.*:[0-9]+:.*",
        "maxLength": 512
      },
      "Boolean": {
        "type": "boolean"
      },
      "ClusterIdentifier": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "WorkgroupName": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "DatabaseName": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "SalesforceConnectorProfileProperties": {
        "type": "object",
        "properties": {
          "instanceUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceUrl"
              },
              {
                "description": " The location of the Salesforce resource. "
              }
            ]
          },
          "isSandboxEnvironment": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": " Indicates whether the connector profile applies to a sandbox or production environment. "
              }
            ]
          },
          "usePrivateLinkForMetadataAndAuthorization": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>If the connection mode for the connector profile is private, this parameter sets whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through Amazon Web Services PrivateLink. These calls travel through Amazon Web Services infrastructure without being exposed to the public internet.</p> <p>Set either of the following values:</p> <dl> <dt>true</dt> <dd> <p>Amazon AppFlow sends all calls to Salesforce over the private network.</p> <p>These private calls are:</p> <ul> <li> <p>Calls to get metadata about your Salesforce records. This metadata describes your Salesforce objects and their fields.</p> </li> <li> <p>Calls to get or refresh access tokens that allow Amazon AppFlow to access your Salesforce records.</p> </li> <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li> </ul> </dd> <dt>false</dt> <dd> <p>The default value. Amazon AppFlow sends some calls to Salesforce privately and other calls over the public internet.</p> <p>The public calls are: </p> <ul> <li> <p>Calls to get metadata about your Salesforce records.</p> </li> <li> <p>Calls to get or refresh access tokens.</p> </li> </ul> <p>The private calls are:</p> <ul> <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li> </ul> </dd> </dl>"
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required when using Salesforce. "
      },
      "ServiceNowConnectorProfileProperties": {
        "type": "object",
        "required": [
          "instanceUrl"
        ],
        "properties": {
          "instanceUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceUrl"
              },
              {
                "description": " The location of the ServiceNow resource. "
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required when using ServiceNow. "
      },
      "SingularConnectorProfileProperties": {
        "type": "object",
        "properties": {},
        "description": " The connector-specific profile properties required when using Singular. "
      },
      "SlackConnectorProfileProperties": {
        "type": "object",
        "required": [
          "instanceUrl"
        ],
        "properties": {
          "instanceUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceUrl"
              },
              {
                "description": " The location of the Slack resource. "
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required when using Slack. "
      },
      "SnowflakeConnectorProfileProperties": {
        "type": "object",
        "required": [
          "warehouse",
          "stage",
          "bucketName"
        ],
        "properties": {
          "warehouse": {
            "allOf": [
              {
                "$ref": "#/$defs/Warehouse"
              },
              {
                "description": " The name of the Snowflake warehouse. "
              }
            ]
          },
          "stage": {
            "allOf": [
              {
                "$ref": "#/$defs/Stage"
              },
              {
                "description": " The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the Snowflake account. This is written in the following format: &lt; Database&gt;&lt; Schema&gt;&lt;Stage Name&gt;. "
              }
            ]
          },
          "bucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketName"
              },
              {
                "description": " The name of the Amazon S3 bucket associated with Snowflake. "
              }
            ]
          },
          "bucketPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketPrefix"
              },
              {
                "description": " The bucket path that refers to the Amazon S3 bucket associated with Snowflake. "
              }
            ]
          },
          "privateLinkServiceName": {
            "allOf": [
              {
                "$ref": "#/$defs/PrivateLinkServiceName"
              },
              {
                "description": " The Snowflake Private Link service name to be used for private data transfers. "
              }
            ]
          },
          "accountName": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountName"
              },
              {
                "description": " The name of the account. "
              }
            ]
          },
          "region": {
            "allOf": [
              {
                "$ref": "#/$defs/Region"
              },
              {
                "description": " The Amazon Web Services Region of the Snowflake account. "
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required when using Snowflake. "
      },
      "Warehouse": {
        "type": "string",
        "pattern": "[\\s\\w/!@#+=.-]*",
        "maxLength": 512
      },
      "Stage": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "PrivateLinkServiceName": {
        "type": "string",
        "pattern": "^$|com.amazonaws.vpce.[\\w/!:@#.\\-]+",
        "maxLength": 512
      },
      "AccountName": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "Region": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 64
      },
      "TrendmicroConnectorProfileProperties": {
        "type": "object",
        "properties": {},
        "description": " The connector-specific profile properties required when using Trend Micro. "
      },
      "VeevaConnectorProfileProperties": {
        "type": "object",
        "required": [
          "instanceUrl"
        ],
        "properties": {
          "instanceUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceUrl"
              },
              {
                "description": " The location of the Veeva resource. "
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required when using Veeva. "
      },
      "ZendeskConnectorProfileProperties": {
        "type": "object",
        "required": [
          "instanceUrl"
        ],
        "properties": {
          "instanceUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceUrl"
              },
              {
                "description": " The location of the Zendesk resource. "
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required when using Zendesk. "
      },
      "SAPODataConnectorProfileProperties": {
        "type": "object",
        "required": [
          "applicationHostUrl",
          "applicationServicePath",
          "portNumber",
          "clientNumber"
        ],
        "properties": {
          "applicationHostUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationHostUrl"
              },
              {
                "description": " The location of the SAPOData resource. "
              }
            ]
          },
          "applicationServicePath": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationServicePath"
              },
              {
                "description": " The application path to catalog service. "
              }
            ]
          },
          "portNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/PortNumber"
              },
              {
                "description": " The port number of the SAPOData instance. "
              }
            ]
          },
          "clientNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientNumber"
              },
              {
                "description": " The client number for the client creating the connection. "
              }
            ]
          },
          "logonLanguage": {
            "allOf": [
              {
                "$ref": "#/$defs/LogonLanguage"
              },
              {
                "description": " The logon language of SAPOData instance. "
              }
            ]
          },
          "privateLinkServiceName": {
            "allOf": [
              {
                "$ref": "#/$defs/PrivateLinkServiceName"
              },
              {
                "description": " The SAPOData Private Link service name to be used for private data transfers. "
              }
            ]
          },
          "oAuthProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/OAuthProperties"
              },
              {
                "description": " The SAPOData OAuth properties required for OAuth type authentication. "
              }
            ]
          },
          "disableSSO": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>If you set this parameter to <code>true</code>, Amazon AppFlow bypasses the single sign-on (SSO) settings in your SAP account when it accesses your SAP OData instance.</p> <p>Whether you need this option depends on the types of credentials that you applied to your SAP OData connection profile. If your profile uses basic authentication credentials, SAP SSO can prevent Amazon AppFlow from connecting to your account with your username and password. In this case, bypassing SSO makes it possible for Amazon AppFlow to connect successfully. However, if your profile uses OAuth credentials, this parameter has no affect.</p>"
              }
            ]
          }
        },
        "description": " The connector-specific profile properties required when using SAPOData. "
      },
      "ApplicationHostUrl": {
        "type": "string",
        "pattern": "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
        "maxLength": 256
      },
      "ApplicationServicePath": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "PortNumber": {
        "type": "integer",
        "minimum": 1,
        "maximum": 65535
      },
      "ClientNumber": {
        "type": "string",
        "pattern": "^\\d{3}$",
        "minLength": 3,
        "maxLength": 3
      },
      "LogonLanguage": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_]*$",
        "maxLength": 2
      },
      "OAuthProperties": {
        "type": "object",
        "required": [
          "tokenUrl",
          "authCodeUrl",
          "oAuthScopes"
        ],
        "properties": {
          "tokenUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/TokenUrl"
              },
              {
                "description": " The token url required to fetch access/refresh tokens using authorization code and also to refresh expired access token using refresh token."
              }
            ]
          },
          "authCodeUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthCodeUrl"
              },
              {
                "description": " The authorization code url required to redirect to SAP Login Page to fetch authorization code for OAuth type authentication. "
              }
            ]
          },
          "oAuthScopes": {
            "allOf": [
              {
                "$ref": "#/$defs/OAuthScopeList"
              },
              {
                "description": " The OAuth scopes required for OAuth type authentication. "
              }
            ]
          }
        },
        "description": " The OAuth properties required for OAuth type authentication. "
      },
      "TokenUrl": {
        "type": "string",
        "pattern": "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
        "maxLength": 256
      },
      "AuthCodeUrl": {
        "type": "string",
        "pattern": "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
        "maxLength": 256
      },
      "OAuthScopeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OAuthScope"
        }
      },
      "OAuthScope": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 128
      },
      "CustomConnectorProfileProperties": {
        "type": "object",
        "properties": {
          "profileProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/ProfilePropertiesMap"
              },
              {
                "description": "A map of properties that are required to create a profile for the custom connector."
              }
            ]
          },
          "oAuth2Properties": {
            "$ref": "#/$defs/OAuth2Properties"
          }
        },
        "description": "The profile properties required by the custom connector."
      },
      "ProfilePropertiesMap": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/ProfilePropertyValue"
        }
      },
      "ProfilePropertyValue": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 2048
      },
      "OAuth2Properties": {
        "type": "object",
        "required": [
          "tokenUrl",
          "oAuth2GrantType"
        ],
        "properties": {
          "tokenUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/TokenUrl"
              },
              {
                "description": "The token URL required for OAuth 2.0 authentication."
              }
            ]
          },
          "oAuth2GrantType": {
            "allOf": [
              {
                "$ref": "#/$defs/OAuth2GrantType"
              },
              {
                "description": "The OAuth 2.0 grant type used by connector for OAuth 2.0 authentication."
              }
            ]
          },
          "tokenUrlCustomProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/TokenUrlCustomProperties"
              },
              {
                "description": "Associates your token URL with a map of properties that you define. Use this parameter to provide any additional details that the connector requires to authenticate your request."
              }
            ]
          }
        },
        "description": "The OAuth 2.0 properties required for OAuth 2.0 authentication."
      },
      "OAuth2GrantType": {
        "type": "string",
        "enum": [
          "CLIENT_CREDENTIALS",
          "AUTHORIZATION_CODE",
          "JWT_BEARER"
        ]
      },
      "TokenUrlCustomProperties": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/CustomPropertyValue"
        }
      },
      "CustomPropertyValue": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 2048
      },
      "PardotConnectorProfileProperties": {
        "type": "object",
        "properties": {
          "instanceUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceUrl"
              },
              {
                "description": "The location of the Salesforce Pardot resource."
              }
            ]
          },
          "isSandboxEnvironment": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether the connector profile applies to a sandbox or production environment."
              }
            ]
          },
          "businessUnitId": {
            "allOf": [
              {
                "$ref": "#/$defs/BusinessUnitId"
              },
              {
                "description": "The business unit id of Salesforce Pardot instance."
              }
            ]
          }
        },
        "description": "The connector-specific profile properties required when using Salesforce Pardot."
      },
      "BusinessUnitId": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 18
      },
      "ConnectorProfileCredentials": {
        "type": "object",
        "properties": {
          "Amplitude": {
            "allOf": [
              {
                "$ref": "#/$defs/AmplitudeConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Amplitude. "
              }
            ]
          },
          "Datadog": {
            "allOf": [
              {
                "$ref": "#/$defs/DatadogConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Datadog. "
              }
            ]
          },
          "Dynatrace": {
            "allOf": [
              {
                "$ref": "#/$defs/DynatraceConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Dynatrace. "
              }
            ]
          },
          "GoogleAnalytics": {
            "allOf": [
              {
                "$ref": "#/$defs/GoogleAnalyticsConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Google Analytics. "
              }
            ]
          },
          "Honeycode": {
            "allOf": [
              {
                "$ref": "#/$defs/HoneycodeConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Amazon Honeycode. "
              }
            ]
          },
          "InforNexus": {
            "allOf": [
              {
                "$ref": "#/$defs/InforNexusConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Infor Nexus. "
              }
            ]
          },
          "Marketo": {
            "allOf": [
              {
                "$ref": "#/$defs/MarketoConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Marketo. "
              }
            ]
          },
          "Redshift": {
            "allOf": [
              {
                "$ref": "#/$defs/RedshiftConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Amazon Redshift. "
              }
            ]
          },
          "Salesforce": {
            "allOf": [
              {
                "$ref": "#/$defs/SalesforceConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Salesforce. "
              }
            ]
          },
          "ServiceNow": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceNowConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using ServiceNow. "
              }
            ]
          },
          "Singular": {
            "allOf": [
              {
                "$ref": "#/$defs/SingularConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Singular. "
              }
            ]
          },
          "Slack": {
            "allOf": [
              {
                "$ref": "#/$defs/SlackConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Slack. "
              }
            ]
          },
          "Snowflake": {
            "allOf": [
              {
                "$ref": "#/$defs/SnowflakeConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Snowflake. "
              }
            ]
          },
          "Trendmicro": {
            "allOf": [
              {
                "$ref": "#/$defs/TrendmicroConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Trend Micro. "
              }
            ]
          },
          "Veeva": {
            "allOf": [
              {
                "$ref": "#/$defs/VeevaConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Veeva. "
              }
            ]
          },
          "Zendesk": {
            "allOf": [
              {
                "$ref": "#/$defs/ZendeskConnectorProfileCredentials"
              },
              {
                "description": " The connector-specific credentials required when using Zendesk. "
              }
            ]
          },
          "SAPOData": {
            "$ref": "#/$defs/SAPODataConnectorProfileCredentials"
          },
          "CustomConnector": {
            "$ref": "#/$defs/CustomConnectorProfileCredentials"
          },
          "Pardot": {
            "allOf": [
              {
                "$ref": "#/$defs/PardotConnectorProfileCredentials"
              },
              {
                "description": "The connector-specific credentials required when using Salesforce Pardot."
              }
            ]
          }
        },
        "description": " The connector-specific credentials required by a connector. "
      },
      "AmplitudeConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "apiKey",
          "secretKey"
        ],
        "properties": {
          "apiKey": {
            "allOf": [
              {
                "$ref": "#/$defs/ApiKey"
              },
              {
                "description": " A unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API. "
              }
            ]
          },
          "secretKey": {
            "allOf": [
              {
                "$ref": "#/$defs/SecretKey"
              },
              {
                "description": " The Secret Access Key portion of the credentials. "
              }
            ]
          }
        },
        "description": " The connector-specific credentials required when using Amplitude. "
      },
      "ApiKey": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 256,
        "format": "password"
      },
      "SecretKey": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 256,
        "format": "password"
      },
      "DatadogConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "apiKey",
          "applicationKey"
        ],
        "properties": {
          "apiKey": {
            "allOf": [
              {
                "$ref": "#/$defs/ApiKey"
              },
              {
                "description": " A unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API. "
              }
            ]
          },
          "applicationKey": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationKey"
              },
              {
                "description": " Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API. "
              }
            ]
          }
        },
        "description": " The connector-specific credentials required by Datadog. "
      },
      "ApplicationKey": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "DynatraceConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "apiToken"
        ],
        "properties": {
          "apiToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ApiToken"
              },
              {
                "description": " The API tokens used by Dynatrace API to authenticate various API calls. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required by Dynatrace. "
      },
      "ApiToken": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 256
      },
      "GoogleAnalyticsConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "clientId",
          "clientSecret"
        ],
        "properties": {
          "clientId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientId"
              },
              {
                "description": " The identifier for the desired client. "
              }
            ]
          },
          "clientSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientSecret"
              },
              {
                "description": " The client secret used by the OAuth client to authenticate to the authorization server. "
              }
            ]
          },
          "accessToken": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessToken"
              },
              {
                "description": " The credentials used to access protected Google Analytics resources. "
              }
            ]
          },
          "refreshToken": {
            "allOf": [
              {
                "$ref": "#/$defs/RefreshToken"
              },
              {
                "description": " The credentials used to acquire new access tokens. This is required only for OAuth2 access tokens, and is not required for OAuth1 access tokens. "
              }
            ]
          },
          "oAuthRequest": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectorOAuthRequest"
              },
              {
                "description": " The OAuth requirement needed to request security tokens from the connector endpoint. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required by Google Analytics. "
      },
      "ClientId": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "ClientSecret": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512,
        "format": "password"
      },
      "AccessToken": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 4096,
        "format": "password"
      },
      "RefreshToken": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 4096
      },
      "ConnectorOAuthRequest": {
        "type": "object",
        "properties": {
          "authCode": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthCode"
              },
              {
                "description": " The code provided by the connector when it has been authenticated via the connected app. "
              }
            ]
          },
          "redirectUri": {
            "allOf": [
              {
                "$ref": "#/$defs/RedirectUri"
              },
              {
                "description": " The URL to which the authentication server redirects the browser after authorization has been granted. "
              }
            ]
          }
        },
        "description": " Used by select connectors for which the OAuth workflow is supported, such as Salesforce, Google Analytics, Marketo, Zendesk, and Slack. "
      },
      "AuthCode": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 4096
      },
      "RedirectUri": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "HoneycodeConnectorProfileCredentials": {
        "type": "object",
        "properties": {
          "accessToken": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessToken"
              },
              {
                "description": " The credentials used to access protected Amazon Honeycode resources. "
              }
            ]
          },
          "refreshToken": {
            "allOf": [
              {
                "$ref": "#/$defs/RefreshToken"
              },
              {
                "description": " The credentials used to acquire new access tokens. "
              }
            ]
          },
          "oAuthRequest": {
            "$ref": "#/$defs/ConnectorOAuthRequest"
          }
        },
        "description": " The connector-specific credentials required when using Amazon Honeycode. "
      },
      "InforNexusConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "accessKeyId",
          "userId",
          "secretAccessKey",
          "datakey"
        ],
        "properties": {
          "accessKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessKeyId"
              },
              {
                "description": " The Access Key portion of the credentials. "
              }
            ]
          },
          "userId": {
            "allOf": [
              {
                "$ref": "#/$defs/Username"
              },
              {
                "description": " The identifier for the user. "
              }
            ]
          },
          "secretAccessKey": {
            "allOf": [
              {
                "$ref": "#/$defs/Key"
              },
              {
                "description": " The secret key used to sign requests. "
              }
            ]
          },
          "datakey": {
            "allOf": [
              {
                "$ref": "#/$defs/Key"
              },
              {
                "description": " The encryption keys used to encrypt data. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required by Infor Nexus. "
      },
      "AccessKeyId": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 256,
        "format": "password"
      },
      "Username": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "Key": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 512
      },
      "MarketoConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "clientId",
          "clientSecret"
        ],
        "properties": {
          "clientId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientId"
              },
              {
                "description": " The identifier for the desired client. "
              }
            ]
          },
          "clientSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientSecret"
              },
              {
                "description": " The client secret used by the OAuth client to authenticate to the authorization server. "
              }
            ]
          },
          "accessToken": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessToken"
              },
              {
                "description": " The credentials used to access protected Marketo resources. "
              }
            ]
          },
          "oAuthRequest": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectorOAuthRequest"
              },
              {
                "description": " The OAuth requirement needed to request security tokens from the connector endpoint. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required by Marketo. "
      },
      "RedshiftConnectorProfileCredentials": {
        "type": "object",
        "properties": {
          "username": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": " The name of the user. "
              }
            ]
          },
          "password": {
            "allOf": [
              {
                "$ref": "#/$defs/Password"
              },
              {
                "description": " The password that corresponds to the user name. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required when using Amazon Redshift. "
      },
      "String": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 2048
      },
      "Password": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 512,
        "format": "password"
      },
      "SalesforceConnectorProfileCredentials": {
        "type": "object",
        "properties": {
          "accessToken": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessToken"
              },
              {
                "description": " The credentials used to access protected Salesforce resources. "
              }
            ]
          },
          "refreshToken": {
            "allOf": [
              {
                "$ref": "#/$defs/RefreshToken"
              },
              {
                "description": " The credentials used to acquire new access tokens. "
              }
            ]
          },
          "oAuthRequest": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectorOAuthRequest"
              },
              {
                "description": " The OAuth requirement needed to request security tokens from the connector endpoint. "
              }
            ]
          },
          "clientCredentialsArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientCredentialsArn"
              },
              {
                "description": " The secret manager ARN, which contains the client ID and client secret of the connected app. "
              }
            ]
          },
          "oAuth2GrantType": {
            "allOf": [
              {
                "$ref": "#/$defs/OAuth2GrantType"
              },
              {
                "description": "<p>Specifies the OAuth 2.0 grant type that Amazon AppFlow uses when it requests an access token from Salesforce. Amazon AppFlow requires an access token each time it attempts to access your Salesforce records.</p> <p>You can specify one of the following values:</p> <dl> <dt>AUTHORIZATION_CODE</dt> <dd> <p>Amazon AppFlow passes an authorization code when it requests the access token from Salesforce. Amazon AppFlow receives the authorization code from Salesforce after you log in to your Salesforce account and authorize Amazon AppFlow to access your records.</p> </dd> <dt>CLIENT_CREDENTIALS</dt> <dd> <p>Amazon AppFlow passes client credentials (a client ID and client secret) when it requests the access token from Salesforce. You provide these credentials to Amazon AppFlow when you define the connection to your Salesforce account.</p> </dd> <dt>JWT_BEARER</dt> <dd> <p>Amazon AppFlow passes a JSON web token (JWT) when it requests the access token from Salesforce. You provide the JWT to Amazon AppFlow when you define the connection to your Salesforce account. When you use this grant type, you don't need to log in to your Salesforce account to authorize Amazon AppFlow to access your records.</p> </dd> </dl>"
              }
            ]
          },
          "jwtToken": {
            "allOf": [
              {
                "$ref": "#/$defs/JwtToken"
              },
              {
                "description": "A JSON web token (JWT) that authorizes Amazon AppFlow to access your Salesforce records."
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required when using Salesforce. "
      },
      "ClientCredentialsArn": {
        "type": "string",
        "pattern": "arn:aws:secretsmanager:.*:[0-9]+:.*",
        "minLength": 20,
        "maxLength": 2048,
        "format": "password"
      },
      "JwtToken": {
        "type": "string",
        "pattern": "^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-\\+\\/=]*)",
        "maxLength": 8000,
        "format": "password"
      },
      "ServiceNowConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "allOf": [
              {
                "$ref": "#/$defs/Username"
              },
              {
                "description": " The name of the user. "
              }
            ]
          },
          "password": {
            "allOf": [
              {
                "$ref": "#/$defs/Password"
              },
              {
                "description": " The password that corresponds to the user name. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required when using ServiceNow. "
      },
      "SingularConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "apiKey"
        ],
        "properties": {
          "apiKey": {
            "allOf": [
              {
                "$ref": "#/$defs/ApiKey"
              },
              {
                "description": " A unique alphanumeric identifier used to authenticate a user, developer, or calling program to your API. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required when using Singular. "
      },
      "SlackConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "clientId",
          "clientSecret"
        ],
        "properties": {
          "clientId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientId"
              },
              {
                "description": " The identifier for the client. "
              }
            ]
          },
          "clientSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientSecret"
              },
              {
                "description": " The client secret used by the OAuth client to authenticate to the authorization server. "
              }
            ]
          },
          "accessToken": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessToken"
              },
              {
                "description": " The credentials used to access protected Slack resources. "
              }
            ]
          },
          "oAuthRequest": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectorOAuthRequest"
              },
              {
                "description": " The OAuth requirement needed to request security tokens from the connector endpoint. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required when using Slack. "
      },
      "SnowflakeConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "allOf": [
              {
                "$ref": "#/$defs/Username"
              },
              {
                "description": " The name of the user. "
              }
            ]
          },
          "password": {
            "allOf": [
              {
                "$ref": "#/$defs/Password"
              },
              {
                "description": " The password that corresponds to the user name. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required when using Snowflake. "
      },
      "TrendmicroConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "apiSecretKey"
        ],
        "properties": {
          "apiSecretKey": {
            "allOf": [
              {
                "$ref": "#/$defs/ApiSecretKey"
              },
              {
                "description": " The Secret Access Key portion of the credentials. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required when using Trend Micro. "
      },
      "ApiSecretKey": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 256,
        "format": "password"
      },
      "VeevaConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "allOf": [
              {
                "$ref": "#/$defs/Username"
              },
              {
                "description": " The name of the user. "
              }
            ]
          },
          "password": {
            "allOf": [
              {
                "$ref": "#/$defs/Password"
              },
              {
                "description": " The password that corresponds to the user name. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required when using Veeva. "
      },
      "ZendeskConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "clientId",
          "clientSecret"
        ],
        "properties": {
          "clientId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientId"
              },
              {
                "description": " The identifier for the desired client. "
              }
            ]
          },
          "clientSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientSecret"
              },
              {
                "description": " The client secret used by the OAuth client to authenticate to the authorization server. "
              }
            ]
          },
          "accessToken": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessToken"
              },
              {
                "description": " The credentials used to access protected Zendesk resources. "
              }
            ]
          },
          "oAuthRequest": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectorOAuthRequest"
              },
              {
                "description": " The OAuth requirement needed to request security tokens from the connector endpoint. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required when using Zendesk. "
      },
      "SAPODataConnectorProfileCredentials": {
        "type": "object",
        "properties": {
          "basicAuthCredentials": {
            "allOf": [
              {
                "$ref": "#/$defs/BasicAuthCredentials"
              },
              {
                "description": " The SAPOData basic authentication credentials. "
              }
            ]
          },
          "oAuthCredentials": {
            "allOf": [
              {
                "$ref": "#/$defs/OAuthCredentials"
              },
              {
                "description": " The SAPOData OAuth type authentication credentials. "
              }
            ]
          }
        },
        "description": " The connector-specific profile credentials required when using SAPOData. "
      },
      "BasicAuthCredentials": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "allOf": [
              {
                "$ref": "#/$defs/Username"
              },
              {
                "description": " The username to use to connect to a resource. "
              }
            ]
          },
          "password": {
            "allOf": [
              {
                "$ref": "#/$defs/Password"
              },
              {
                "description": " The password to use to connect to a resource."
              }
            ]
          }
        },
        "description": " The basic auth credentials required for basic authentication. "
      },
      "OAuthCredentials": {
        "type": "object",
        "required": [
          "clientId",
          "clientSecret"
        ],
        "properties": {
          "clientId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientId"
              },
              {
                "description": " The identifier for the desired client. "
              }
            ]
          },
          "clientSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientSecret"
              },
              {
                "description": " The client secret used by the OAuth client to authenticate to the authorization server. "
              }
            ]
          },
          "accessToken": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessToken"
              },
              {
                "description": " The access token used to access protected SAPOData resources. "
              }
            ]
          },
          "refreshToken": {
            "allOf": [
              {
                "$ref": "#/$defs/RefreshToken"
              },
              {
                "description": " The refresh token used to refresh expired access token. "
              }
            ]
          },
          "oAuthRequest": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectorOAuthRequest"
              },
              {
                "description": " The OAuth requirement needed to request security tokens from the connector endpoint. "
              }
            ]
          }
        },
        "description": " The OAuth credentials required for OAuth type authentication. "
      },
      "CustomConnectorProfileCredentials": {
        "type": "object",
        "required": [
          "authenticationType"
        ],
        "properties": {
          "authenticationType": {
            "allOf": [
              {
                "$ref": "#/$defs/AuthenticationType"
              },
              {
                "description": "The authentication type that the custom connector uses for authenticating while creating a connector profile."
              }
            ]
          },
          "basic": {
            "allOf": [
              {
                "$ref": "#/$defs/BasicAuthCredentials"
              },
              {
                "description": "The basic credentials that are required for the authentication of the user."
              }
            ]
          },
          "oauth2": {
            "allOf": [
              {
                "$ref": "#/$defs/OAuth2Credentials"
              },
              {
                "description": "The OAuth 2.0 credentials required for the authentication of the user."
              }
            ]
          },
          "apiKey": {
            "allOf": [
              {
                "$ref": "#/$defs/ApiKeyCredentials"
              },
              {
                "description": "The API keys required for the authentication of the user."
              }
            ]
          },
          "custom": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomAuthCredentials"
              },
              {
                "description": "If the connector uses the custom authentication mechanism, this holds the required credentials."
              }
            ]
          }
        },
        "description": "The connector-specific profile credentials that are required when using the custom connector."
      },
      "AuthenticationType": {
        "type": "string",
        "enum": [
          "OAUTH2",
          "APIKEY",
          "BASIC",
          "CUSTOM"
        ]
      },
      "OAuth2Credentials": {
        "type": "object",
        "properties": {
          "clientId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientId"
              },
              {
                "description": "The identifier for the desired client."
              }
            ]
          },
          "clientSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientSecret"
              },
              {
                "description": "The client secret used by the OAuth client to authenticate to the authorization server."
              }
            ]
          },
          "accessToken": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessToken"
              },
              {
                "description": "The access token used to access the connector on your behalf."
              }
            ]
          },
          "refreshToken": {
            "allOf": [
              {
                "$ref": "#/$defs/RefreshToken"
              },
              {
                "description": "The refresh token used to refresh an expired access token."
              }
            ]
          },
          "oAuthRequest": {
            "$ref": "#/$defs/ConnectorOAuthRequest"
          }
        },
        "description": "The OAuth 2.0 credentials required for OAuth 2.0 authentication."
      },
      "ApiKeyCredentials": {
        "type": "object",
        "required": [
          "apiKey"
        ],
        "properties": {
          "apiKey": {
            "allOf": [
              {
                "$ref": "#/$defs/ApiKey"
              },
              {
                "description": "The API key required for API key authentication."
              }
            ]
          },
          "apiSecretKey": {
            "allOf": [
              {
                "$ref": "#/$defs/ApiSecretKey"
              },
              {
                "description": "The API secret key required for API key authentication."
              }
            ]
          }
        },
        "description": "The API key credentials required for API key authentication."
      },
      "CustomAuthCredentials": {
        "type": "object",
        "required": [
          "customAuthenticationType"
        ],
        "properties": {
          "customAuthenticationType": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomAuthenticationType"
              },
              {
                "description": "The custom authentication type that the connector uses."
              }
            ]
          },
          "credentialsMap": {
            "allOf": [
              {
                "$ref": "#/$defs/CredentialsMap"
              },
              {
                "description": "A map that holds custom authentication credentials."
              }
            ]
          }
        },
        "description": "The custom credentials required for custom authentication."
      },
      "CustomAuthenticationType": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 256
      },
      "CredentialsMap": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/CredentialsMapValue"
        }
      },
      "CredentialsMapValue": {
        "type": "string",
        "pattern": "\\S+",
        "maxLength": 2048,
        "format": "password"
      },
      "PardotConnectorProfileCredentials": {
        "type": "object",
        "properties": {
          "accessToken": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessToken"
              },
              {
                "description": "The credentials used to access protected Salesforce Pardot resources."
              }
            ]
          },
          "refreshToken": {
            "allOf": [
              {
                "$ref": "#/$defs/RefreshToken"
              },
              {
                "description": "The credentials used to acquire new access tokens."
              }
            ]
          },
          "oAuthRequest": {
            "$ref": "#/$defs/ConnectorOAuthRequest"
          },
          "clientCredentialsArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientCredentialsArn"
              },
              {
                "description": "The secret manager ARN, which contains the client ID and client secret of the connected app."
              }
            ]
          }
        },
        "description": "The connector-specific profile credentials required when using Salesforce Pardot."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://appflow.us-east-1.amazonaws.com/update-connector-profile"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**connectorProfileArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
