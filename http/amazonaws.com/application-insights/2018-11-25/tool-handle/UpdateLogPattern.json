{
  "name": "UpdateLogPattern",
  "description": "Adds a log pattern to a <code>LogPatternSet</code>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "EC2WindowsBarleyService.UpdateLogPattern"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateLogPatternRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateLogPatternRequest": {
        "type": "object",
        "required": [
          "ResourceGroupName",
          "PatternSetName",
          "PatternName"
        ],
        "title": "UpdateLogPatternRequest",
        "properties": {
          "ResourceGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceGroupName"
              },
              {
                "description": "The name of the resource group."
              }
            ]
          },
          "PatternSetName": {
            "allOf": [
              {
                "$ref": "#/$defs/LogPatternSetName"
              },
              {
                "description": "The name of the log pattern set."
              }
            ]
          },
          "PatternName": {
            "allOf": [
              {
                "$ref": "#/$defs/LogPatternName"
              },
              {
                "description": "The name of the log pattern."
              }
            ]
          },
          "Pattern": {
            "allOf": [
              {
                "$ref": "#/$defs/LogPatternRegex"
              },
              {
                "description": "The log pattern. The pattern must be DFA compatible. Patterns that utilize forward lookahead or backreference constructions are not supported."
              }
            ]
          },
          "Rank": {
            "allOf": [
              {
                "$ref": "#/$defs/LogPatternRank"
              },
              {
                "description": "Rank of the log pattern. Must be a value between <code>1</code> and <code>1,000,000</code>. The patterns are sorted by rank, so we recommend that you set your highest priority patterns with the lowest rank. A pattern of rank <code>1</code> will be the first to get matched to a log line. A pattern of rank <code>1,000,000</code> will be last to get matched. When you configure custom log patterns from the console, a <code>Low</code> severity pattern translates to a <code>750,000</code> rank. A <code>Medium</code> severity pattern translates to a <code>500,000</code> rank. And a <code>High</code> severity pattern translates to a <code>250,000</code> rank. Rank values less than <code>1</code> or greater than <code>1,000,000</code> are reserved for AWS-provided patterns. "
              }
            ]
          }
        }
      },
      "ResourceGroupName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9\\.\\-_]*",
        "minLength": 1,
        "maxLength": 256
      },
      "LogPatternSetName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9\\.\\-_]*",
        "minLength": 1,
        "maxLength": 30
      },
      "LogPatternName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9\\.\\-_]*",
        "minLength": 1,
        "maxLength": 50
      },
      "LogPatternRegex": {
        "type": "string",
        "pattern": "[\\S\\s]+",
        "minLength": 1,
        "maxLength": 50
      },
      "LogPatternRank": {
        "type": "integer"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://applicationinsights.us-east-1.amazonaws.com/#X-Amz-Target=EC2WindowsBarleyService.UpdateLogPattern"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ResourceGroupName**",
            "**LogPattern**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
