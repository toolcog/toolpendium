{
  "name": "StartStreamingSession",
  "description": "Transitions sessions from the <code>STOPPED</code> state into the <code>READY</code> state. The <code>START_IN_PROGRESS</code> state is the intermediate state between the <code>STOPPED</code> and <code>READY</code> states.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Client-Token": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64,
        "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency."
      },
      "sessionId": {
        "type": "string",
        "description": "The streaming session ID for the <code>StartStreamingSessionRequest</code>."
      },
      "studioId": {
        "type": "string",
        "description": "The studio ID for the StartStreamingSessionRequest."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "backupId": {
            "description": "The ID of the backup.",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "sessionId",
      "studioId",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://nimble.us-east-1.amazonaws.com/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/start"
    },
    "headers": {
      "X-Amz-Client-Token": {
        "$": "X-Amz-Client-Token"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**session**: A streaming session is a virtual workstation created using a particular launch profile.",
              {
                "$ul": [
                  "**arn**",
                  "**automaticTerminationMode**",
                  "**backupMode**",
                  "**createdAt**",
                  "**createdBy**",
                  "**ec2InstanceType**",
                  "**launchProfileId**",
                  "**maxBackupsToRetain**",
                  "**ownedBy**",
                  "**sessionId**",
                  "**sessionPersistenceMode**",
                  "**startedAt**",
                  "**startedBy**",
                  "**startedFromBackupId**",
                  "**state**",
                  "**statusCode**",
                  "**statusMessage**",
                  "**stopAt**",
                  "**stoppedAt**",
                  "**stoppedBy**",
                  "**streamingImageId**",
                  "**tags**",
                  "**terminateAt**",
                  "**updatedAt**",
                  "**updatedBy**",
                  "**volumeConfiguration**",
                  "**volumeRetentionMode**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
