{
  "name": "CreateLaunchProfile",
  "description": "Create a launch profile.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Client-Token": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64,
        "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don’t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency."
      },
      "studioId": {
        "type": "string",
        "description": "The studio ID. "
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "ec2SubnetIds",
          "launchProfileProtocolVersions",
          "name",
          "streamConfiguration",
          "studioComponentIds"
        ],
        "properties": {
          "description": {
            "description": "A human-readable description of the launch profile.",
            "type": "string",
            "minLength": 0,
            "maxLength": 256,
            "format": "password"
          },
          "ec2SubnetIds": {
            "description": "Specifies the IDs of the EC2 subnets where streaming sessions will be accessible from. These subnets must support the specified instance types. ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/EC2SubnetId"
            },
            "minItems": 0,
            "maxItems": 6
          },
          "launchProfileProtocolVersions": {
            "description": "The version number of the protocol that is used by the launch profile. The only valid version is \"2021-03-31\".",
            "type": "array",
            "items": {
              "$ref": "#/$defs/LaunchProfileProtocolVersion"
            }
          },
          "name": {
            "description": "The name for the launch profile.",
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "format": "password"
          },
          "streamConfiguration": {
            "description": "Configuration for streaming workstations created using this launch profile.",
            "type": "object",
            "properties": {
              "automaticTerminationMode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AutomaticTerminationMode"
                  },
                  {
                    "description": "<p>Indicates if a streaming session created from this launch profile should be terminated automatically or retained without termination after being in a <code>STOPPED</code> state.</p> <ul> <li> <p>When <code>ACTIVATED</code>, the streaming session is scheduled for termination after being in the <code>STOPPED</code> state for the time specified in <code>maxStoppedSessionLengthInMinutes</code>.</p> </li> <li> <p>When <code>DEACTIVATED</code>, the streaming session can remain in the <code>STOPPED</code> state indefinitely.</p> </li> </ul> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>. When allowed, the default value for this parameter is <code>DEACTIVATED</code>.</p>"
                  }
                ]
              },
              "clipboardMode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StreamingClipboardMode"
                  },
                  {
                    "description": "Allows or deactivates the use of the system clipboard to copy and paste between the streaming session and streaming client."
                  }
                ]
              },
              "ec2InstanceTypes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StreamingInstanceTypeList"
                  },
                  {
                    "description": "The EC2 instance types that users can select from when launching a streaming session with this launch profile."
                  }
                ]
              },
              "maxSessionLengthInMinutes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StreamConfigurationMaxSessionLengthInMinutes"
                  },
                  {
                    "description": "The length of time, in minutes, that a streaming session can be active before it is stopped or terminated. After this point, Nimble Studio automatically terminates or stops the session. The default length of time is 690 minutes, and the maximum length of time is 30 days."
                  }
                ]
              },
              "maxStoppedSessionLengthInMinutes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StreamConfigurationMaxStoppedSessionLengthInMinutes"
                  },
                  {
                    "description": "<p>Integer that determines if you can start and stop your sessions and how long a session can stay in the <code>STOPPED</code> state. The default value is 0. The maximum value is 5760.</p> <p>This field is allowed only when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code> and <code>automaticTerminationMode</code> is <code>ACTIVATED</code>.</p> <p>If the value is set to 0, your sessions can’t be <code>STOPPED</code>. If you then call <code>StopStreamingSession</code>, the session fails. If the time that a session stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code> value, the session will automatically be terminated (instead of <code>STOPPED</code>).</p> <p>If the value is set to a positive number, the session can be stopped. You can call <code>StopStreamingSession</code> to stop sessions in the <code>READY</code> state. If the time that a session stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code> value, the session will automatically be stopped (instead of terminated).</p>"
                  }
                ]
              },
              "sessionBackup": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StreamConfigurationSessionBackup"
                  },
                  {
                    "description": "Configures how streaming sessions are backed up when launched from this launch profile."
                  }
                ]
              },
              "sessionPersistenceMode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SessionPersistenceMode"
                  },
                  {
                    "description": "Determine if a streaming session created from this launch profile can configure persistent storage. This means that <code>volumeConfiguration</code> and <code>automaticTerminationMode</code> are configured."
                  }
                ]
              },
              "sessionStorage": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StreamConfigurationSessionStorage"
                  },
                  {
                    "description": "The upload storage for a streaming workstation that is created using this launch profile."
                  }
                ]
              },
              "streamingImageIds": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StreamingImageIdList"
                  },
                  {
                    "description": "The streaming images that users can select from when launching a streaming session with this launch profile."
                  }
                ]
              },
              "volumeConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VolumeConfiguration"
                  },
                  {
                    "description": "<p>Custom volume configuration for the root volumes that are attached to streaming sessions.</p> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.</p>"
                  }
                ]
              }
            }
          },
          "studioComponentIds": {
            "description": "Unique identifiers for a collection of studio components that can be used with this launch profile.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/String"
            },
            "minItems": 1,
            "maxItems": 100
          },
          "tags": {
            "description": "A collection of labels, in the form of key-value pairs, that apply to this resource.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/String"
            }
          }
        }
      }
    },
    "required": [
      "studioId",
      "body"
    ],
    "$defs": {
      "EC2SubnetId": {
        "type": "string"
      },
      "LaunchProfileProtocolVersion": {
        "type": "string",
        "pattern": "^2021\\-03\\-31$",
        "description": "The version number of the protocol that is used by the launch profile. The only valid version is \"2021-03-31\".",
        "minLength": 0,
        "maxLength": 10
      },
      "AutomaticTerminationMode": {
        "type": "string",
        "enum": [
          "DEACTIVATED",
          "ACTIVATED"
        ]
      },
      "StreamingClipboardMode": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "StreamingInstanceTypeList": {
        "type": "array",
        "description": "The EC2 instance types that users can select from when launching a streaming session with this launch profile.",
        "items": {
          "$ref": "#/$defs/StreamingInstanceType"
        },
        "minItems": 1,
        "maxItems": 30
      },
      "StreamingInstanceType": {
        "type": "string",
        "enum": [
          "g4dn.xlarge",
          "g4dn.2xlarge",
          "g4dn.4xlarge",
          "g4dn.8xlarge",
          "g4dn.12xlarge",
          "g4dn.16xlarge",
          "g3.4xlarge",
          "g3s.xlarge",
          "g5.xlarge",
          "g5.2xlarge",
          "g5.4xlarge",
          "g5.8xlarge",
          "g5.16xlarge"
        ]
      },
      "StreamConfigurationMaxSessionLengthInMinutes": {
        "type": "integer",
        "minimum": 1,
        "maximum": 43200
      },
      "StreamConfigurationMaxStoppedSessionLengthInMinutes": {
        "type": "integer",
        "minimum": 0,
        "maximum": 5760
      },
      "StreamConfigurationSessionBackup": {
        "type": "object",
        "properties": {
          "maxBackupsToRetain": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamConfigurationMaxBackupsToRetain"
              },
              {
                "description": "The maximum number of backups that each streaming session created from this launch profile can have."
              }
            ]
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/$defs/SessionBackupMode"
              },
              {
                "description": "<p>Specifies how artists sessions are backed up.</p> <p>Configures backups for streaming sessions launched with this launch profile. The default value is <code>DEACTIVATED</code>, which means that backups are deactivated. To allow backups, set this value to <code>AUTOMATIC</code>.</p>"
              }
            ]
          }
        },
        "description": "Configures how streaming sessions are backed up when launched from this launch profile."
      },
      "StreamConfigurationMaxBackupsToRetain": {
        "type": "integer",
        "minimum": 0,
        "maximum": 10
      },
      "SessionBackupMode": {
        "type": "string",
        "enum": [
          "AUTOMATIC",
          "DEACTIVATED"
        ]
      },
      "SessionPersistenceMode": {
        "type": "string",
        "enum": [
          "DEACTIVATED",
          "ACTIVATED"
        ]
      },
      "StreamConfigurationSessionStorage": {
        "type": "object",
        "required": [
          "mode"
        ],
        "properties": {
          "mode": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamingSessionStorageModeList"
              },
              {
                "description": "Allows artists to upload files to their workstations. The only valid option is <code>UPLOAD</code>."
              }
            ]
          },
          "root": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamingSessionStorageRoot"
              },
              {
                "description": "The configuration for the upload storage root of the streaming session."
              }
            ]
          }
        },
        "description": "The configuration for a streaming session’s upload storage."
      },
      "StreamingSessionStorageModeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StreamingSessionStorageMode"
        },
        "minItems": 1
      },
      "StreamingSessionStorageMode": {
        "type": "string",
        "enum": [
          "UPLOAD"
        ]
      },
      "StreamingSessionStorageRoot": {
        "type": "object",
        "properties": {
          "linux": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamingSessionStorageRootPathLinux"
              },
              {
                "description": "The folder path in Linux workstations where files are uploaded."
              }
            ]
          },
          "windows": {
            "allOf": [
              {
                "$ref": "#/$defs/StreamingSessionStorageRootPathWindows"
              },
              {
                "description": "The folder path in Windows workstations where files are uploaded."
              }
            ]
          }
        },
        "description": "The upload storage root location (folder) on streaming workstations where files are uploaded."
      },
      "StreamingSessionStorageRootPathLinux": {
        "type": "string",
        "pattern": "^(\\$HOME|/)[/]?([A-Za-z0-9-_]+/)*([A-Za-z0-9_-]+)$",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "StreamingSessionStorageRootPathWindows": {
        "type": "string",
        "pattern": "^((\\%HOMEPATH\\%)|[a-zA-Z]:)[\\\\/](?:[a-zA-Z0-9_-]+[\\\\/])*[a-zA-Z0-9_-]+$",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "StreamingImageIdList": {
        "type": "array",
        "description": "A list of streaming image IDs that users can select from when launching a streaming session with this launch profile.",
        "items": {
          "$ref": "#/$defs/StreamingImageId"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "StreamingImageId": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-_]*$",
        "minLength": 0,
        "maxLength": 22
      },
      "VolumeConfiguration": {
        "type": "object",
        "properties": {
          "iops": {
            "allOf": [
              {
                "$ref": "#/$defs/VolumeIops"
              },
              {
                "description": "The number of I/O operations per second for the root volume that is attached to streaming session."
              }
            ]
          },
          "size": {
            "allOf": [
              {
                "$ref": "#/$defs/VolumeSizeInGiB"
              },
              {
                "description": "The size of the root volume that is attached to the streaming session. The root volume size is measured in GiBs."
              }
            ]
          },
          "throughput": {
            "allOf": [
              {
                "$ref": "#/$defs/VolumeThroughputInMiBs"
              },
              {
                "description": "The throughput to provision for the root volume that is attached to the streaming session. The throughput is measured in MiB/s."
              }
            ]
          }
        },
        "description": "<p>Custom volume configuration for the root volumes that are attached to streaming sessions.</p> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.</p>"
      },
      "VolumeIops": {
        "type": "integer",
        "minimum": 3000,
        "maximum": 16000
      },
      "VolumeSizeInGiB": {
        "type": "integer",
        "minimum": 100,
        "maximum": 16000
      },
      "VolumeThroughputInMiBs": {
        "type": "integer",
        "minimum": 125,
        "maximum": 1000
      },
      "String": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://nimble.us-east-1.amazonaws.com/2020-08-01/studios/{studioId}/launch-profiles"
    },
    "headers": {
      "X-Amz-Client-Token": {
        "$": "X-Amz-Client-Token"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**launchProfile**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
