{
  "name": "UpdateStudioComponent",
  "description": "Updates a studio component resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Client-Token": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64,
        "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency."
      },
      "studioComponentId": {
        "type": "string",
        "description": "The studio component ID."
      },
      "studioId": {
        "type": "string",
        "description": "The studio ID. "
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "configuration": {
            "description": "The configuration of the studio component, based on component type.",
            "type": "object",
            "properties": {
              "activeDirectoryConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ActiveDirectoryConfiguration"
                  },
                  {
                    "description": "The configuration for a Directory Service for Microsoft Active Directory studio resource."
                  }
                ]
              },
              "computeFarmConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ComputeFarmConfiguration"
                  },
                  {
                    "description": "The configuration for a render farm that is associated with a studio resource."
                  }
                ]
              },
              "licenseServiceConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LicenseServiceConfiguration"
                  },
                  {
                    "description": "The configuration for a license service that is associated with a studio resource."
                  }
                ]
              },
              "sharedFileSystemConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SharedFileSystemConfiguration"
                  },
                  {
                    "description": "The configuration for a shared file storage system that is associated with a studio resource."
                  }
                ]
              }
            }
          },
          "description": {
            "description": "The description.",
            "type": "string",
            "minLength": 0,
            "maxLength": 256,
            "format": "password"
          },
          "ec2SecurityGroupIds": {
            "description": "The EC2 security groups that control access to the studio component.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/SecurityGroupId"
            },
            "minItems": 0,
            "maxItems": 30
          },
          "initializationScripts": {
            "description": "Initialization scripts for studio components.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/StudioComponentInitializationScript"
            }
          },
          "name": {
            "description": "The name for the studio component.",
            "type": "string",
            "minLength": 0,
            "maxLength": 64,
            "format": "password"
          },
          "runtimeRoleArn": {
            "description": "An IAM role attached to a Studio Component that gives the studio component access to Amazon Web Services resources at anytime while the instance is running. ",
            "type": "string",
            "minLength": 0,
            "maxLength": 2048
          },
          "scriptParameters": {
            "description": "Parameters for the studio component scripts.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ScriptParameterKeyValue"
            },
            "minItems": 0,
            "maxItems": 30
          },
          "secureInitializationRoleArn": {
            "description": "An IAM role attached to Studio Component when the system initialization script runs which give the studio component access to Amazon Web Services resources when the system initialization script runs.",
            "type": "string",
            "minLength": 0,
            "maxLength": 2048
          },
          "subtype": {
            "description": "The specific subtype of a studio component.",
            "type": "string",
            "enum": [
              "AWS_MANAGED_MICROSOFT_AD",
              "AMAZON_FSX_FOR_WINDOWS",
              "AMAZON_FSX_FOR_LUSTRE",
              "CUSTOM"
            ]
          },
          "type": {
            "description": "The type of the studio component.",
            "type": "string",
            "enum": [
              "ACTIVE_DIRECTORY",
              "SHARED_FILE_SYSTEM",
              "COMPUTE_FARM",
              "LICENSE_SERVICE",
              "CUSTOM"
            ]
          }
        }
      }
    },
    "required": [
      "studioComponentId",
      "studioId",
      "body"
    ],
    "$defs": {
      "ActiveDirectoryConfiguration": {
        "type": "object",
        "properties": {
          "computerAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/ActiveDirectoryComputerAttributeList"
              },
              {
                "description": "A collection of custom attributes for an Active Directory computer."
              }
            ]
          },
          "directoryId": {
            "allOf": [
              {
                "$ref": "#/$defs/DirectoryId"
              },
              {
                "description": "The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component."
              }
            ]
          },
          "organizationalUnitDistinguishedName": {
            "allOf": [
              {
                "$ref": "#/$defs/ActiveDirectoryOrganizationalUnitDistinguishedName"
              },
              {
                "description": "The distinguished name (DN) and organizational unit (OU) of an Active Directory computer."
              }
            ]
          }
        },
        "description": "The configuration for a Directory Service for Microsoft Active Directory studio resource."
      },
      "ActiveDirectoryComputerAttributeList": {
        "type": "array",
        "description": "A collection of LDAP attributes to apply to Active Directory computer accounts that are created for streaming sessions.",
        "items": {
          "$ref": "#/$defs/ActiveDirectoryComputerAttribute"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "ActiveDirectoryComputerAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/ActiveDirectoryComputerAttributeName"
              },
              {
                "description": "The name for the LDAP attribute."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/ActiveDirectoryComputerAttributeValue"
              },
              {
                "description": "The value for the LDAP attribute."
              }
            ]
          }
        },
        "description": "An LDAP attribute of an Active Directory computer account, in the form of a name:value pair."
      },
      "ActiveDirectoryComputerAttributeName": {
        "type": "string",
        "description": "The name for the LDAP attribute.",
        "minLength": 1,
        "maxLength": 40
      },
      "ActiveDirectoryComputerAttributeValue": {
        "type": "string",
        "description": "The value for the LDAP attribute.",
        "minLength": 1,
        "maxLength": 64
      },
      "DirectoryId": {
        "type": "string"
      },
      "ActiveDirectoryOrganizationalUnitDistinguishedName": {
        "type": "string",
        "description": "The fully-qualified distinguished name of the organizational unit to place the computer account in.",
        "minLength": 1,
        "maxLength": 2000
      },
      "ComputeFarmConfiguration": {
        "type": "object",
        "properties": {
          "activeDirectoryUser": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of an Active Directory user that is used on ComputeFarm worker instances."
              }
            ]
          },
          "endpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveString"
              },
              {
                "description": "The endpoint of the ComputeFarm that is accessed by the studio component resource."
              }
            ]
          }
        },
        "description": "The configuration for a render farm that is associated with a studio resource."
      },
      "String": {
        "type": "string"
      },
      "SensitiveString": {
        "type": "string",
        "format": "password"
      },
      "LicenseServiceConfiguration": {
        "type": "object",
        "properties": {
          "endpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveString"
              },
              {
                "description": "The endpoint of the license service that is accessed by the studio component resource."
              }
            ]
          }
        },
        "description": "The configuration for a license service that is associated with a studio resource."
      },
      "SharedFileSystemConfiguration": {
        "type": "object",
        "properties": {
          "endpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveString"
              },
              {
                "description": "The endpoint of the shared file system that is accessed by the studio component resource."
              }
            ]
          },
          "fileSystemId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The unique identifier for a file system."
              }
            ]
          },
          "linuxMountPoint": {
            "allOf": [
              {
                "$ref": "#/$defs/LinuxMountPoint"
              },
              {
                "description": "The mount location for a shared file system on a Linux virtual workstation."
              }
            ]
          },
          "shareName": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveString"
              },
              {
                "description": "The name of the file share."
              }
            ]
          },
          "windowsMountDrive": {
            "allOf": [
              {
                "$ref": "#/$defs/WindowsMountDrive"
              },
              {
                "description": "The mount location for a shared file system on a Windows virtual workstation."
              }
            ]
          }
        },
        "description": "The configuration for a shared file storage system that is associated with a studio resource."
      },
      "LinuxMountPoint": {
        "type": "string",
        "pattern": "^(/?|(\\$HOME)?(/[^/\\n\\s\\\\]+)*)$",
        "minLength": 0,
        "maxLength": 128,
        "format": "password"
      },
      "WindowsMountDrive": {
        "type": "string",
        "pattern": "^[A-Z]$"
      },
      "SecurityGroupId": {
        "type": "string"
      },
      "StudioComponentInitializationScript": {
        "type": "object",
        "properties": {
          "launchProfileProtocolVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchProfileProtocolVersion"
              },
              {
                "description": "The version number of the protocol that is used by the launch profile. The only valid version is \"2021-03-31\"."
              }
            ]
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchProfilePlatform"
              },
              {
                "description": "The platform of the initialization script, either Windows or Linux."
              }
            ]
          },
          "runContext": {
            "allOf": [
              {
                "$ref": "#/$defs/StudioComponentInitializationScriptRunContext"
              },
              {
                "description": "The method to use when running the initialization script."
              }
            ]
          },
          "script": {
            "allOf": [
              {
                "$ref": "#/$defs/StudioComponentInitializationScriptContent"
              },
              {
                "description": "The initialization script."
              }
            ]
          }
        },
        "description": "Initialization scripts for studio components."
      },
      "LaunchProfileProtocolVersion": {
        "type": "string",
        "pattern": "^2021\\-03\\-31$",
        "description": "The version number of the protocol that is used by the launch profile. The only valid version is \"2021-03-31\".",
        "minLength": 0,
        "maxLength": 10
      },
      "LaunchProfilePlatform": {
        "type": "string",
        "enum": [
          "LINUX",
          "WINDOWS"
        ]
      },
      "StudioComponentInitializationScriptRunContext": {
        "type": "string",
        "enum": [
          "SYSTEM_INITIALIZATION",
          "USER_INITIALIZATION"
        ]
      },
      "StudioComponentInitializationScriptContent": {
        "type": "string",
        "minLength": 1,
        "maxLength": 5120,
        "format": "password"
      },
      "ScriptParameterKeyValue": {
        "type": "object",
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/ScriptParameterKey"
              },
              {
                "description": "A script parameter key."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/ScriptParameterValue"
              },
              {
                "description": "A script parameter value."
              }
            ]
          }
        },
        "description": "A parameter for a studio component script, in the form of a key-value pair."
      },
      "ScriptParameterKey": {
        "type": "string",
        "pattern": "^[a-zA-Z_][a-zA-Z0-9_]+$",
        "description": "A script parameter key.",
        "minLength": 1,
        "maxLength": 64
      },
      "ScriptParameterValue": {
        "type": "string",
        "description": "A script parameter value.",
        "minLength": 1,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "http://nimble.us-east-1.amazonaws.com/2020-08-01/studios/{studioId}/studio-components/{studioComponentId}"
    },
    "headers": {
      "X-Amz-Client-Token": {
        "$": "X-Amz-Client-Token"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**studioComponent**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
