{
  "name": "UpdateEventDestination",
  "description": "<p>Updates an existing event destination in a configuration set. You can update the IAM role ARN for CloudWatch Logs and Kinesis Data Firehose. You can also enable or disable the event destination.</p> <p>You may want to update an event destination to change its matching event types or updating the destination resource ARN. You can't change an event destination's type between CloudWatch Logs, Kinesis Data Firehose, and Amazon SNS.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "PinpointSMSVoiceV2.UpdateEventDestination"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateEventDestinationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateEventDestinationRequest": {
        "type": "object",
        "required": [
          "ConfigurationSetName",
          "EventDestinationName"
        ],
        "title": "UpdateEventDestinationRequest",
        "properties": {
          "ConfigurationSetName": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationSetNameOrArn"
              },
              {
                "description": "The configuration set to update with the new event destination. Valid values for this can be the ConfigurationSetName or ConfigurationSetArn."
              }
            ]
          },
          "EventDestinationName": {
            "allOf": [
              {
                "$ref": "#/$defs/EventDestinationName"
              },
              {
                "description": "The name to use for the event destination."
              }
            ]
          },
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "When set to true logging is enabled."
              }
            ]
          },
          "MatchingEventTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/EventTypeList"
              },
              {
                "description": "An array of event types that determine which events to log."
              }
            ]
          },
          "CloudWatchLogsDestination": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLogsDestination"
              },
              {
                "description": "An object that contains information about an event destination that sends data to CloudWatch Logs."
              }
            ]
          },
          "KinesisFirehoseDestination": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisFirehoseDestination"
              },
              {
                "description": "An object that contains information about an event destination for logging to Kinesis Data Firehose."
              }
            ]
          },
          "SnsDestination": {
            "allOf": [
              {
                "$ref": "#/$defs/SnsDestination"
              },
              {
                "description": "An object that contains information about an event destination that sends data to Amazon SNS."
              }
            ]
          }
        }
      },
      "ConfigurationSetNameOrArn": {
        "type": "string",
        "pattern": "[A-Za-z0-9_:/-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "EventDestinationName": {
        "type": "string",
        "pattern": "[A-Za-z0-9_-]+",
        "minLength": 1,
        "maxLength": 64
      },
      "Boolean": {
        "type": "boolean"
      },
      "EventTypeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EventType"
        },
        "minItems": 1,
        "maxItems": 25
      },
      "EventType": {
        "type": "string",
        "enum": [
          "ALL",
          "TEXT_ALL",
          "TEXT_SENT",
          "TEXT_PENDING",
          "TEXT_QUEUED",
          "TEXT_SUCCESSFUL",
          "TEXT_DELIVERED",
          "TEXT_INVALID",
          "TEXT_INVALID_MESSAGE",
          "TEXT_UNREACHABLE",
          "TEXT_CARRIER_UNREACHABLE",
          "TEXT_BLOCKED",
          "TEXT_CARRIER_BLOCKED",
          "TEXT_SPAM",
          "TEXT_UNKNOWN",
          "TEXT_TTL_EXPIRED",
          "VOICE_ALL",
          "VOICE_INITIATED",
          "VOICE_RINGING",
          "VOICE_ANSWERED",
          "VOICE_COMPLETED",
          "VOICE_BUSY",
          "VOICE_NO_ANSWER",
          "VOICE_FAILED",
          "VOICE_TTL_EXPIRED"
        ]
      },
      "CloudWatchLogsDestination": {
        "type": "object",
        "required": [
          "IamRoleArn",
          "LogGroupArn"
        ],
        "properties": {
          "IamRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/IamRoleArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an Amazon Identity and Access Management (IAM) role that is able to write event data to an Amazon CloudWatch destination."
              }
            ]
          },
          "LogGroupArn": {
            "allOf": [
              {
                "$ref": "#/$defs/LogGroupArn"
              },
              {
                "description": "The name of the Amazon CloudWatch log group that you want to record events in. "
              }
            ]
          }
        },
        "description": "Contains the destination configuration to use when publishing message sending events. "
      },
      "IamRoleArn": {
        "type": "string",
        "pattern": "arn:\\S+",
        "minLength": 20,
        "maxLength": 2048
      },
      "LogGroupArn": {
        "type": "string",
        "pattern": "arn:\\S+",
        "minLength": 20,
        "maxLength": 2048
      },
      "KinesisFirehoseDestination": {
        "type": "object",
        "required": [
          "IamRoleArn",
          "DeliveryStreamArn"
        ],
        "properties": {
          "IamRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/IamRoleArn"
              },
              {
                "description": "The ARN of an Amazon Identity and Access Management (IAM) role that is able to write event data to an Amazon Firehose destination."
              }
            ]
          },
          "DeliveryStreamArn": {
            "allOf": [
              {
                "$ref": "#/$defs/DeliveryStreamArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the delivery stream."
              }
            ]
          }
        },
        "description": "<p>Contains the delivery stream Amazon Resource Name (ARN), and the ARN of the Identity and Access Management (IAM) role associated with an Kinesis Data Firehose event destination.</p> <p>Event destinations, such as Kinesis Data Firehose, are associated with configuration sets, which enable you to publish message sending events.</p>"
      },
      "DeliveryStreamArn": {
        "type": "string",
        "pattern": "arn:\\S+",
        "minLength": 20,
        "maxLength": 2048
      },
      "SnsDestination": {
        "type": "object",
        "required": [
          "TopicArn"
        ],
        "properties": {
          "TopicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/SnsTopicArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic that you want to publish events to."
              }
            ]
          }
        },
        "description": "An object that defines an Amazon SNS destination for events. You can use Amazon SNS to send notification when certain events occur."
      },
      "SnsTopicArn": {
        "type": "string",
        "pattern": "arn:\\S+",
        "minLength": 20,
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://sms-voice.us-east-1.amazonaws.com/#X-Amz-Target=PinpointSMSVoiceV2.UpdateEventDestination"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ConfigurationSetArn**",
            "**ConfigurationSetName**",
            "**EventDestination**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
