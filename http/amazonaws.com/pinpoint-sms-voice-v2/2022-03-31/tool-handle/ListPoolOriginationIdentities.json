{
  "name": "ListPoolOriginationIdentities",
  "description": "<p>Lists all associated origination identities in your pool.</p> <p>If you specify filters, the output includes information for only those origination identities that meet the filter criteria.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "PinpointSMSVoiceV2.ListPoolOriginationIdentities"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListPoolOriginationIdentitiesRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListPoolOriginationIdentitiesRequest": {
        "type": "object",
        "required": [
          "PoolId"
        ],
        "title": "ListPoolOriginationIdentitiesRequest",
        "properties": {
          "PoolId": {
            "allOf": [
              {
                "$ref": "#/$defs/PoolIdOrArn"
              },
              {
                "description": "The unique identifier for the pool. This value can be either the PoolId or PoolArn."
              }
            ]
          },
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/PoolOriginationIdentitiesFilterList"
              },
              {
                "description": "An array of PoolOriginationIdentitiesFilter objects to filter the results.."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxResults"
              },
              {
                "description": "The maximum number of results to return per each request."
              }
            ]
          }
        }
      },
      "PoolIdOrArn": {
        "type": "string",
        "pattern": "[A-Za-z0-9_:/-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "PoolOriginationIdentitiesFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PoolOriginationIdentitiesFilter"
        },
        "minItems": 0,
        "maxItems": 20
      },
      "PoolOriginationIdentitiesFilter": {
        "type": "object",
        "required": [
          "Name",
          "Values"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/PoolOriginationIdentitiesFilterName"
              },
              {
                "description": "The name of the attribute to filter on."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterValueList"
              },
              {
                "description": "An array values to filter for."
              }
            ]
          }
        },
        "description": "Information about origination identities associated with a pool that meets a specified criteria."
      },
      "PoolOriginationIdentitiesFilterName": {
        "type": "string",
        "enum": [
          "iso-country-code",
          "number-capability"
        ]
      },
      "FilterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilterValue"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "FilterValue": {
        "type": "string",
        "pattern": "[A-Za-z0-9_-]+",
        "minLength": 1,
        "maxLength": 100
      },
      "NextToken": {
        "type": "string",
        "pattern": ".+",
        "minLength": 1,
        "maxLength": 1024
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://sms-voice.us-east-1.amazonaws.com/#X-Amz-Target=PinpointSMSVoiceV2.ListPoolOriginationIdentities{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**PoolArn**",
            "**PoolId**",
            "**OriginationIdentities**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
