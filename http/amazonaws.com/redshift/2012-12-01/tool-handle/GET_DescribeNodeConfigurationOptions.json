{
  "name": "GET_DescribeNodeConfigurationOptions",
  "description": "Returns properties of possible node configurations such as node type, number of nodes, and disk usage for the specified action type.",
  "parameters": {
    "type": "object",
    "properties": {
      "ActionType": {
        "type": "string",
        "enum": [
          "restore-cluster",
          "recommend-node-config",
          "resize-cluster"
        ],
        "description": "The action type to evaluate for possible node configurations. Specify \"restore-cluster\" to get configuration combinations based on an existing snapshot. Specify \"recommend-node-config\" to get configuration recommendations based on an existing cluster or snapshot. Specify \"resize-cluster\" to get configuration combinations for elastic resize based on an existing cluster. "
      },
      "ClusterIdentifier": {
        "type": "string",
        "maxLength": 2147483647,
        "description": "The identifier of the cluster to evaluate for possible node configurations."
      },
      "SnapshotIdentifier": {
        "type": "string",
        "maxLength": 2147483647,
        "description": "The identifier of the snapshot to evaluate for possible node configurations."
      },
      "SnapshotArn": {
        "type": "string",
        "maxLength": 2147483647,
        "description": "The Amazon Resource Name (ARN) of the snapshot associated with the message to describe node configuration."
      },
      "OwnerAccount": {
        "type": "string",
        "maxLength": 2147483647,
        "description": "The Amazon Web Services account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot."
      },
      "Filter": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/NodeConfigurationOptionsFilter"
            },
            {
              "xml": {
                "name": "NodeConfigurationOptionsFilter"
              }
            }
          ]
        },
        "description": "A set of name, operator, and value items to filter the results."
      },
      "Marker": {
        "type": "string",
        "maxLength": 2147483647,
        "description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeNodeConfigurationOptions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. "
      },
      "MaxRecords": {
        "type": "integer",
        "description": "<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>500</code> </p> <p>Constraints: minimum 100, maximum 500.</p>"
      },
      "Action": {
        "type": "string",
        "enum": [
          "DescribeNodeConfigurationOptions"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2012-12-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "ActionType",
      "Action",
      "Version"
    ],
    "$defs": {
      "NodeConfigurationOptionsFilter": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NodeConfigurationOptionsFilterName"
              },
              {
                "description": "The name of the element to filter."
              }
            ]
          },
          "Operator": {
            "allOf": [
              {
                "$ref": "#/$defs/OperatorType"
              },
              {
                "description": "The filter operator. If filter Name is NodeType only the 'in' operator is supported. Provide one value to evaluate for 'eq', 'lt', 'le', 'gt', and 'ge'. Provide two values to evaluate for 'between'. Provide a list of values for 'in'."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "xml": {
                  "name": "Value"
                },
                "description": "List of values. Compare Name using Operator to Values. If filter Name is NumberOfNodes, then values can range from 0 to 200. If filter Name is EstimatedDiskUtilizationPercent, then values can range from 0 to 100. For example, filter NumberOfNodes (name) GT (operator) 3 (values)."
              }
            ]
          }
        },
        "description": "A set of elements to filter the returned node configurations."
      },
      "NodeConfigurationOptionsFilterName": {
        "type": "string",
        "enum": [
          "NodeType",
          "NumberOfNodes",
          "EstimatedDiskUtilizationPercent",
          "Mode"
        ]
      },
      "OperatorType": {
        "type": "string",
        "enum": [
          "eq",
          "lt",
          "gt",
          "le",
          "ge",
          "in",
          "between"
        ]
      },
      "ValueStringList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "String": {
        "type": "string",
        "maxLength": 2147483647
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://redshift.us-east-1.amazonaws.com/#Action=DescribeNodeConfigurationOptions{?ActionType,ClusterIdentifier,SnapshotIdentifier,SnapshotArn,OwnerAccount,Filter,Marker,MaxRecords,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NodeConfigurationOptionList**",
            "**Marker**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
