{
  "name": "GET_DescribeScheduledActions",
  "description": "Describes properties of scheduled actions. ",
  "parameters": {
    "type": "object",
    "properties": {
      "ScheduledActionName": {
        "type": "string",
        "maxLength": 2147483647,
        "description": "The name of the scheduled action to retrieve. "
      },
      "TargetActionType": {
        "type": "string",
        "enum": [
          "ResizeCluster",
          "PauseCluster",
          "ResumeCluster"
        ],
        "description": "The type of the scheduled actions to retrieve. "
      },
      "StartTime": {
        "type": "string",
        "format": "date-time",
        "description": "The start time in UTC of the scheduled actions to retrieve. Only active scheduled actions that have invocations after this time are retrieved."
      },
      "EndTime": {
        "type": "string",
        "format": "date-time",
        "description": "The end time in UTC of the scheduled action to retrieve. Only active scheduled actions that have invocations before this time are retrieved."
      },
      "Active": {
        "type": "boolean",
        "description": "If true, retrieve only active scheduled actions. If false, retrieve only disabled scheduled actions. "
      },
      "Filters": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ScheduledActionFilter"
            },
            {
              "xml": {
                "name": "ScheduledActionFilter"
              }
            }
          ]
        },
        "description": "List of scheduled action filters. "
      },
      "Marker": {
        "type": "string",
        "maxLength": 2147483647,
        "description": "An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeScheduledActions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. "
      },
      "MaxRecords": {
        "type": "integer",
        "description": "<p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>"
      },
      "Action": {
        "type": "string",
        "enum": [
          "DescribeScheduledActions"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2012-12-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Action",
      "Version"
    ],
    "$defs": {
      "ScheduledActionFilter": {
        "type": "object",
        "required": [
          "Name",
          "Values"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduledActionFilterName"
              },
              {
                "description": "The type of element to filter. "
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "description": "List of values. Compare if the value (of type defined by <code>Name</code>) equals an item in the list of scheduled actions. "
              }
            ]
          }
        },
        "description": "A set of elements to filter the returned scheduled actions. "
      },
      "ScheduledActionFilterName": {
        "type": "string",
        "enum": [
          "cluster-identifier",
          "iam-role"
        ]
      },
      "ValueStringList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "String": {
        "type": "string",
        "maxLength": 2147483647
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://redshift.us-east-1.amazonaws.com/#Action=DescribeScheduledActions{?ScheduledActionName,TargetActionType,StartTime,EndTime,Active,Filters,Marker,MaxRecords,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Marker**",
            "**ScheduledActions**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
