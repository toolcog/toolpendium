{
  "name": "DescribeScalingPolicies",
  "description": "<p>Retrieves all scaling policies applied to a fleet.</p> <p>To get a fleet's scaling policies, specify the fleet ID. You can filter this request by policy status, such as to retrieve only active scaling policies. Use the pagination parameters to retrieve results as a set of sequential pages. If successful, set of <code>ScalingPolicy</code> objects is returned for the fleet.</p> <p>A fleet may have all of its scaling policies suspended. This operation does not affect the status of the scaling policies, which remains ACTIVE.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "Limit": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "GameLift.DescribeScalingPolicies"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeScalingPoliciesInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeScalingPoliciesInput": {
        "type": "object",
        "required": [
          "FleetId"
        ],
        "title": "DescribeScalingPoliciesInput",
        "properties": {
          "FleetId": {
            "allOf": [
              {
                "$ref": "#/$defs/FleetIdOrArn"
              },
              {
                "description": "A unique identifier for the fleet for which to retrieve scaling policies. You can use either the fleet ID or ARN value."
              }
            ]
          },
          "StatusFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/ScalingStatusType"
              },
              {
                "description": "<p>Scaling policy status to filter results on. A scaling policy is only in force when in an <code>ACTIVE</code> status.</p> <ul> <li> <p> <b>ACTIVE</b> -- The scaling policy is currently in force.</p> </li> <li> <p> <b>UPDATEREQUESTED</b> -- A request to update the scaling policy has been received.</p> </li> <li> <p> <b>UPDATING</b> -- A change is being made to the scaling policy.</p> </li> <li> <p> <b>DELETEREQUESTED</b> -- A request to delete the scaling policy has been received.</p> </li> <li> <p> <b>DELETING</b> -- The scaling policy is being deleted.</p> </li> <li> <p> <b>DELETED</b> -- The scaling policy has been deleted.</p> </li> <li> <p> <b>ERROR</b> -- An error occurred in creating the policy. It should be removed and recreated.</p> </li> </ul>"
              }
            ]
          },
          "Limit": {
            "allOf": [
              {
                "$ref": "#/$defs/PositiveInteger"
              },
              {
                "description": "The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "A token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value."
              }
            ]
          },
          "Location": {
            "allOf": [
              {
                "$ref": "#/$defs/LocationStringModel"
              },
              {
                "description": " The fleet location. If you don't specify this value, the response contains the scaling policies of every location in the fleet. "
              }
            ]
          }
        }
      },
      "FleetIdOrArn": {
        "type": "string",
        "pattern": "^fleet-\\S+|^arn:.*:fleet\\/fleet-\\S+"
      },
      "ScalingStatusType": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "UPDATE_REQUESTED",
          "UPDATING",
          "DELETE_REQUESTED",
          "DELETING",
          "DELETED",
          "ERROR"
        ]
      },
      "PositiveInteger": {
        "type": "integer",
        "minimum": 1
      },
      "NonZeroAndMaxString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "LocationStringModel": {
        "type": "string",
        "pattern": "^[A-Za-z0-9\\-]+",
        "minLength": 1,
        "maxLength": 64
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://gamelift.us-east-1.amazonaws.com/#X-Amz-Target=GameLift.DescribeScalingPolicies{?Limit,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ScalingPolicies**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
