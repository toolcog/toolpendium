{
  "name": "UpdateMatchmakingConfiguration",
  "description": "<p>Updates settings for a FlexMatch matchmaking configuration. These changes affect all matches and game sessions that are created after the update. To update settings, specify the configuration name to be updated and provide the new settings. </p> <p> <b>Learn more</b> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/flexmatchguide/match-configuration.html\"> Design a FlexMatch matchmaker</a> </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "GameLift.UpdateMatchmakingConfiguration"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateMatchmakingConfigurationInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateMatchmakingConfigurationInput": {
        "type": "object",
        "required": [
          "Name"
        ],
        "title": "UpdateMatchmakingConfigurationInput",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/MatchmakingConfigurationName"
              },
              {
                "description": "A unique identifier for the matchmaking configuration to update. You can use either the configuration name or ARN value. "
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "A description for the matchmaking configuration."
              }
            ]
          },
          "GameSessionQueueArns": {
            "allOf": [
              {
                "$ref": "#/$defs/QueueArnsList"
              },
              {
                "description": "The Amazon Resource Name (<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html\">ARN</a>) that is assigned to a Amazon GameLift game session queue resource and uniquely identifies it. ARNs are unique across all Regions. Format is <code>arn:aws:gamelift:&lt;region&gt;::gamesessionqueue/&lt;queue name&gt;</code>. Queues can be located in any Region. Queues are used to start new Amazon GameLift-hosted game sessions for matches that are created with this matchmaking configuration. If <code>FlexMatchMode</code> is set to <code>STANDALONE</code>, do not set this parameter."
              }
            ]
          },
          "RequestTimeoutSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/MatchmakingRequestTimeoutInteger"
              },
              {
                "description": "The maximum duration, in seconds, that a matchmaking ticket can remain in process before timing out. Requests that fail due to timing out can be resubmitted as needed."
              }
            ]
          },
          "AcceptanceTimeoutSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/MatchmakingAcceptanceTimeoutInteger"
              },
              {
                "description": "The length of time (in seconds) to wait for players to accept a proposed match, if acceptance is required."
              }
            ]
          },
          "AcceptanceRequired": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanModel"
              },
              {
                "description": "A flag that indicates whether a match that was created with this configuration must be accepted by the matched players. To require acceptance, set to TRUE. With this option enabled, matchmaking tickets use the status <code>REQUIRES_ACCEPTANCE</code> to indicate when a completed potential match is waiting for player acceptance. "
              }
            ]
          },
          "RuleSetName": {
            "allOf": [
              {
                "$ref": "#/$defs/MatchmakingRuleSetName"
              },
              {
                "description": "A unique identifier for the matchmaking rule set to use with this configuration. You can use either the rule set name or ARN value. A matchmaking configuration can only use rule sets that are defined in the same Region."
              }
            ]
          },
          "NotificationTarget": {
            "allOf": [
              {
                "$ref": "#/$defs/SnsArnStringModel"
              },
              {
                "description": "An SNS topic ARN that is set up to receive matchmaking notifications. See <a href=\"https://docs.aws.amazon.com/gamelift/latest/flexmatchguide/match-notification.html\"> Setting up notifications for matchmaking</a> for more information."
              }
            ]
          },
          "AdditionalPlayerCount": {
            "allOf": [
              {
                "$ref": "#/$defs/WholeNumber"
              },
              {
                "description": "The number of player slots in a match to keep open for future players. For example, if the configuration's rule set specifies a match for a single 10-person team, and the additional player count is set to 2, 10 players will be selected for the match and 2 more player slots will be open for future players. This parameter is not used if <code>FlexMatchMode</code> is set to <code>STANDALONE</code>."
              }
            ]
          },
          "CustomEventData": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomEventData"
              },
              {
                "description": "Information to add to all events related to the matchmaking configuration. "
              }
            ]
          },
          "GameProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/GamePropertyList"
              },
              {
                "description": "A set of custom properties for a game session, formatted as key:value pairs. These properties are passed to a game server process with a request to start a new game session (see <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession\">Start a Game Session</a>). This information is added to the new <code>GameSession</code> object that is created for a successful match. This parameter is not used if <code>FlexMatchMode</code> is set to <code>STANDALONE</code>."
              }
            ]
          },
          "GameSessionData": {
            "allOf": [
              {
                "$ref": "#/$defs/GameSessionData"
              },
              {
                "description": "A set of custom game session properties, formatted as a single string value. This data is passed to a game server process with a request to start a new game session (see <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession\">Start a Game Session</a>). This information is added to the game session that is created for a successful match. This parameter is not used if <code>FlexMatchMode</code> is set to <code>STANDALONE</code>."
              }
            ]
          },
          "BackfillMode": {
            "allOf": [
              {
                "$ref": "#/$defs/BackfillMode"
              },
              {
                "description": "The method that is used to backfill game sessions created with this matchmaking configuration. Specify MANUAL when your game manages backfill requests manually or does not use the match backfill feature. Specify AUTOMATIC to have GameLift create a match backfill request whenever a game session has one or more open slots. Learn more about manual and automatic backfill in <a href=\"https://docs.aws.amazon.com/gamelift/latest/flexmatchguide/match-backfill.html\">Backfill Existing Games with FlexMatch</a>. Automatic backfill is not available when <code>FlexMatchMode</code> is set to <code>STANDALONE</code>."
              }
            ]
          },
          "FlexMatchMode": {
            "allOf": [
              {
                "$ref": "#/$defs/FlexMatchMode"
              },
              {
                "description": "<p>Indicates whether this matchmaking configuration is being used with Amazon GameLift hosting or as a standalone matchmaking solution. </p> <ul> <li> <p> <b>STANDALONE</b> - FlexMatch forms matches and returns match information, including players and team assignments, in a <a href=\"https://docs.aws.amazon.com/gamelift/latest/flexmatchguide/match-events.html#match-events-matchmakingsucceeded\"> MatchmakingSucceeded</a> event.</p> </li> <li> <p> <b>WITH_QUEUE</b> - FlexMatch forms matches and uses the specified Amazon GameLift queue to start a game session for the match. </p> </li> </ul>"
              }
            ]
          }
        }
      },
      "MatchmakingConfigurationName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-\\.]*|^arn:.*:matchmakingconfiguration\\/[a-zA-Z0-9-\\.]*",
        "minLength": 1,
        "maxLength": 256
      },
      "NonZeroAndMaxString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "QueueArnsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ArnStringModel"
        }
      },
      "ArnStringModel": {
        "type": "string",
        "pattern": "[a-zA-Z0-9:/-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "MatchmakingRequestTimeoutInteger": {
        "type": "integer",
        "minimum": 1,
        "maximum": 43200
      },
      "MatchmakingAcceptanceTimeoutInteger": {
        "type": "integer",
        "minimum": 1,
        "maximum": 600
      },
      "BooleanModel": {
        "type": "boolean"
      },
      "MatchmakingRuleSetName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-\\.]*|^arn:.*:matchmakingruleset\\/[a-zA-Z0-9-\\.]*",
        "minLength": 1,
        "maxLength": 256
      },
      "SnsArnStringModel": {
        "type": "string",
        "pattern": "[a-zA-Z0-9:_/-]*(.fifo)?",
        "minLength": 0,
        "maxLength": 300
      },
      "WholeNumber": {
        "type": "integer",
        "minimum": 0
      },
      "CustomEventData": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "GamePropertyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GameProperty"
        },
        "maxItems": 16
      },
      "GameProperty": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/GamePropertyKey"
              },
              {
                "description": "The game property identifier."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/GamePropertyValue"
              },
              {
                "description": "The game property value."
              }
            ]
          }
        },
        "description": "Set of key-value pairs that contain information about a game session. When included in a game session request, these properties communicate details to be used when setting up the new game session. For example, a game property might specify a game mode, level, or map. Game properties are passed to the game server process when initiating a new game session. For more information, see the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-client-api.html#gamelift-sdk-client-api-create\"> Amazon GameLift Developer Guide</a>."
      },
      "GamePropertyKey": {
        "type": "string",
        "maxLength": 32
      },
      "GamePropertyValue": {
        "type": "string",
        "maxLength": 96
      },
      "GameSessionData": {
        "type": "string",
        "minLength": 1,
        "maxLength": 4096
      },
      "BackfillMode": {
        "type": "string",
        "enum": [
          "AUTOMATIC",
          "MANUAL"
        ]
      },
      "FlexMatchMode": {
        "type": "string",
        "enum": [
          "STANDALONE",
          "WITH_QUEUE"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://gamelift.us-east-1.amazonaws.com/#X-Amz-Target=GameLift.UpdateMatchmakingConfiguration"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Configuration**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
