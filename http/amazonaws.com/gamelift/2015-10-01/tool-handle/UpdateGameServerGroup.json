{
  "name": "UpdateGameServerGroup",
  "description": "<p> <b>This operation is used with the Amazon GameLift FleetIQ solution and game server groups.</b> </p> <p>Updates Amazon GameLift FleetIQ-specific properties for a game server group. Many Auto Scaling group properties are updated on the Auto Scaling group directly, including the launch template, Auto Scaling policies, and maximum/minimum/desired instance counts.</p> <p>To update the game server group, specify the game server group ID and provide the updated values. Before applying the updates, the new values are validated to ensure that Amazon GameLift FleetIQ can continue to perform instance balancing activity. If successful, a <code>GameServerGroup</code> object is returned.</p> <p> <b>Learn more</b> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/fleetiqguide/gsg-intro.html\">Amazon GameLift FleetIQ Guide</a> </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "GameLift.UpdateGameServerGroup"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateGameServerGroupInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateGameServerGroupInput": {
        "type": "object",
        "required": [
          "GameServerGroupName"
        ],
        "title": "UpdateGameServerGroupInput",
        "properties": {
          "GameServerGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/GameServerGroupNameOrArn"
              },
              {
                "description": "A unique identifier for the game server group. Use either the name or ARN value."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/IamRoleArn"
              },
              {
                "description": "The Amazon Resource Name (<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html\">ARN</a>) for an IAM role that allows Amazon GameLift to access your Amazon EC2 Auto Scaling groups."
              }
            ]
          },
          "InstanceDefinitions": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceDefinitions"
              },
              {
                "description": "An updated list of Amazon EC2 instance types to use in the Auto Scaling group. The instance definitions must specify at least two different instance types that are supported by Amazon GameLift FleetIQ. This updated list replaces the entire current list of instance definitions for the game server group. For more information on instance types, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">EC2 Instance Types</a> in the <i>Amazon EC2 User Guide</i>. You can optionally specify capacity weighting for each instance type. If no weight value is specified for an instance type, it is set to the default value \"1\". For more information about capacity weighting, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-weighting.html\"> Instance Weighting for Amazon EC2 Auto Scaling</a> in the Amazon EC2 Auto Scaling User Guide."
              }
            ]
          },
          "GameServerProtectionPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/GameServerProtectionPolicy"
              },
              {
                "description": "A flag that indicates whether instances in the game server group are protected from early termination. Unprotected instances that have active game servers running might be terminated during a scale-down event, causing players to be dropped from the game. Protected instances cannot be terminated while there are active game servers running except in the event of a forced game server group deletion (see ). An exception to this is with Spot Instances, which can be terminated by Amazon Web Services regardless of protection status. This property is set to <code>NO_PROTECTION</code> by default."
              }
            ]
          },
          "BalancingStrategy": {
            "allOf": [
              {
                "$ref": "#/$defs/BalancingStrategy"
              },
              {
                "description": "<p>Indicates how Amazon GameLift FleetIQ balances the use of Spot Instances and On-Demand Instances in the game server group. Method options include the following:</p> <ul> <li> <p> <code>SPOT_ONLY</code> - Only Spot Instances are used in the game server group. If Spot Instances are unavailable or not viable for game hosting, the game server group provides no hosting capacity until Spot Instances can again be used. Until then, no new instances are started, and the existing nonviable Spot Instances are terminated (after current gameplay ends) and are not replaced.</p> </li> <li> <p> <code>SPOT_PREFERRED</code> - (default value) Spot Instances are used whenever available in the game server group. If Spot Instances are unavailable, the game server group continues to provide hosting capacity by falling back to On-Demand Instances. Existing nonviable Spot Instances are terminated (after current gameplay ends) and are replaced with new On-Demand Instances.</p> </li> <li> <p> <code>ON_DEMAND_ONLY</code> - Only On-Demand Instances are used in the game server group. No Spot Instances are used, even when available, while this balancing strategy is in force.</p> </li> </ul>"
              }
            ]
          }
        }
      },
      "GameServerGroupNameOrArn": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-\\.]+|^arn:.*:gameservergroup\\/[a-zA-Z0-9-\\.]+",
        "minLength": 1,
        "maxLength": 256
      },
      "IamRoleArn": {
        "type": "string",
        "pattern": "^arn:.*:role\\/[\\w+=,.@-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "InstanceDefinitions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InstanceDefinition"
        },
        "minItems": 2,
        "maxItems": 20
      },
      "InstanceDefinition": {
        "type": "object",
        "required": [
          "InstanceType"
        ],
        "properties": {
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/GameServerGroupInstanceType"
              },
              {
                "description": "An Amazon EC2 instance type designation."
              }
            ]
          },
          "WeightedCapacity": {
            "allOf": [
              {
                "$ref": "#/$defs/WeightedCapacity"
              },
              {
                "description": "Instance weighting that indicates how much this instance type contributes to the total capacity of a game server group. Instance weights are used by Amazon GameLift FleetIQ to calculate the instance type's cost per unit hour and better identify the most cost-effective options. For detailed information on weighting instance capacity, see <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-weighting.html\">Instance Weighting</a> in the <i>Amazon Elastic Compute Cloud Auto Scaling User Guide</i>. Default value is \"1\"."
              }
            ]
          }
        },
        "description": "<p> <b>This data type is used with the Amazon GameLift FleetIQ and game server groups.</b> </p> <p>An allowed instance type for a game server group. All game server groups must have at least two instance types defined for it. Amazon GameLift FleetIQ periodically evaluates each defined instance type for viability. It then updates the Auto Scaling group with the list of viable instance types.</p>"
      },
      "GameServerGroupInstanceType": {
        "type": "string",
        "enum": [
          "c4.large",
          "c4.xlarge",
          "c4.2xlarge",
          "c4.4xlarge",
          "c4.8xlarge",
          "c5.large",
          "c5.xlarge",
          "c5.2xlarge",
          "c5.4xlarge",
          "c5.9xlarge",
          "c5.12xlarge",
          "c5.18xlarge",
          "c5.24xlarge",
          "c5a.large",
          "c5a.xlarge",
          "c5a.2xlarge",
          "c5a.4xlarge",
          "c5a.8xlarge",
          "c5a.12xlarge",
          "c5a.16xlarge",
          "c5a.24xlarge",
          "c6g.medium",
          "c6g.large",
          "c6g.xlarge",
          "c6g.2xlarge",
          "c6g.4xlarge",
          "c6g.8xlarge",
          "c6g.12xlarge",
          "c6g.16xlarge",
          "r4.large",
          "r4.xlarge",
          "r4.2xlarge",
          "r4.4xlarge",
          "r4.8xlarge",
          "r4.16xlarge",
          "r5.large",
          "r5.xlarge",
          "r5.2xlarge",
          "r5.4xlarge",
          "r5.8xlarge",
          "r5.12xlarge",
          "r5.16xlarge",
          "r5.24xlarge",
          "r5a.large",
          "r5a.xlarge",
          "r5a.2xlarge",
          "r5a.4xlarge",
          "r5a.8xlarge",
          "r5a.12xlarge",
          "r5a.16xlarge",
          "r5a.24xlarge",
          "r6g.medium",
          "r6g.large",
          "r6g.xlarge",
          "r6g.2xlarge",
          "r6g.4xlarge",
          "r6g.8xlarge",
          "r6g.12xlarge",
          "r6g.16xlarge",
          "m4.large",
          "m4.xlarge",
          "m4.2xlarge",
          "m4.4xlarge",
          "m4.10xlarge",
          "m5.large",
          "m5.xlarge",
          "m5.2xlarge",
          "m5.4xlarge",
          "m5.8xlarge",
          "m5.12xlarge",
          "m5.16xlarge",
          "m5.24xlarge",
          "m5a.large",
          "m5a.xlarge",
          "m5a.2xlarge",
          "m5a.4xlarge",
          "m5a.8xlarge",
          "m5a.12xlarge",
          "m5a.16xlarge",
          "m5a.24xlarge",
          "m6g.medium",
          "m6g.large",
          "m6g.xlarge",
          "m6g.2xlarge",
          "m6g.4xlarge",
          "m6g.8xlarge",
          "m6g.12xlarge",
          "m6g.16xlarge"
        ]
      },
      "WeightedCapacity": {
        "type": "string",
        "pattern": "^[\\u0031-\\u0039][\\u0030-\\u0039]{0,2}$",
        "minLength": 1,
        "maxLength": 3
      },
      "GameServerProtectionPolicy": {
        "type": "string",
        "enum": [
          "NO_PROTECTION",
          "FULL_PROTECTION"
        ]
      },
      "BalancingStrategy": {
        "type": "string",
        "enum": [
          "SPOT_ONLY",
          "SPOT_PREFERRED",
          "ON_DEMAND_ONLY"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://gamelift.us-east-1.amazonaws.com/#X-Amz-Target=GameLift.UpdateGameServerGroup"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**GameServerGroup**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
