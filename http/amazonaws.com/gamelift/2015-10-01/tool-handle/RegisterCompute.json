{
  "name": "RegisterCompute",
  "description": "<p>Registers your compute resources in a fleet you previously created. After you register a compute to your fleet, you can monitor and manage your compute using Amazon GameLift. The operation returns the compute resource containing SDK endpoint you can use to connect your game server to Amazon GameLift.</p> <p> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-creating-anywhere.html\">Create an Anywhere fleet</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/integration-testing.html\">Test your integration</a> </p> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "GameLift.RegisterCompute"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/RegisterComputeInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "RegisterComputeInput": {
        "type": "object",
        "required": [
          "FleetId",
          "ComputeName"
        ],
        "title": "RegisterComputeInput",
        "properties": {
          "FleetId": {
            "allOf": [
              {
                "$ref": "#/$defs/FleetIdOrArn"
              },
              {
                "description": "A unique identifier for the fleet to register the compute to. You can use either the fleet ID or ARN value."
              }
            ]
          },
          "ComputeName": {
            "allOf": [
              {
                "$ref": "#/$defs/ComputeName"
              },
              {
                "description": "A descriptive label that is associated with the compute resource registered to your fleet."
              }
            ]
          },
          "CertificatePath": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "The path to the TLS certificate on your compute resource. The path and certificate are not validated by Amazon GameLift."
              }
            ]
          },
          "DnsName": {
            "allOf": [
              {
                "$ref": "#/$defs/DnsNameInput"
              },
              {
                "description": "The DNS name of the compute resource. Amazon GameLift requires the DNS name or IP address to manage your compute resource."
              }
            ]
          },
          "IpAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/IpAddress"
              },
              {
                "description": "The IP address of the compute resource. Amazon GameLift requires the DNS name or IP address to manage your compute resource."
              }
            ]
          },
          "Location": {
            "allOf": [
              {
                "$ref": "#/$defs/LocationStringModel"
              },
              {
                "description": "The name of the custom location you added to the fleet you are registering this compute resource to."
              }
            ]
          }
        }
      },
      "FleetIdOrArn": {
        "type": "string",
        "pattern": "^fleet-\\S+|^arn:.*:fleet\\/fleet-\\S+"
      },
      "ComputeName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "NonZeroAndMaxString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "DnsNameInput": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z_\\-\\.]+",
        "minLength": 1,
        "maxLength": 256
      },
      "IpAddress": {
        "type": "string",
        "pattern": "^[0-9A-Fa-f\\:\\.]+",
        "minLength": 1,
        "maxLength": 128
      },
      "LocationStringModel": {
        "type": "string",
        "pattern": "^[A-Za-z0-9\\-]+",
        "minLength": 1,
        "maxLength": 64
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://gamelift.us-east-1.amazonaws.com/#X-Amz-Target=GameLift.RegisterCompute"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Compute**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
