{
  "name": "StartGameSessionPlacement",
  "description": "<p>Places a request for a new game session in a queue. When processing a placement request, Amazon GameLift searches for available resources on the queue's destinations, scanning each until it finds resources or the placement request times out.</p> <p>A game session placement request can also request player sessions. When a new game session is successfully created, Amazon GameLift creates a player session for each player included in the request.</p> <p>When placing a game session, by default Amazon GameLift tries each fleet in the order they are listed in the queue configuration. Ideally, a queue's destinations are listed in preference order.</p> <p>Alternatively, when requesting a game session with players, you can also provide latency data for each player in relevant Regions. Latency data indicates the performance lag a player experiences when connected to a fleet in the Region. Amazon GameLift uses latency data to reorder the list of destinations to place the game session in a Region with minimal lag. If latency data is provided for multiple players, Amazon GameLift calculates each Region's average lag for all players and reorders to get the best game play across all players. </p> <p>To place a new game session request, specify the following:</p> <ul> <li> <p>The queue name and a set of game session properties and settings</p> </li> <li> <p>A unique ID (such as a UUID) for the placement. You use this ID to track the status of the placement request</p> </li> <li> <p>(Optional) A set of player data and a unique player ID for each player that you are joining to the new game session (player data is optional, but if you include it, you must also provide a unique ID for each player)</p> </li> <li> <p>Latency data for all players (if you want to optimize game play for the players)</p> </li> </ul> <p>If successful, a new game session placement is created.</p> <p>To track the status of a placement request, call <a href=\"https://docs.aws.amazon.com/gamelift/latest/apireference/API_DescribeGameSessionPlacement.html\">DescribeGameSessionPlacement</a> and check the request's status. If the status is <code>FULFILLED</code>, a new game session has been created and a game session ARN and Region are referenced. If the placement request times out, you can resubmit the request or retry it with a different queue. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "GameLift.StartGameSessionPlacement"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/StartGameSessionPlacementInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "StartGameSessionPlacementInput": {
        "type": "object",
        "required": [
          "PlacementId",
          "GameSessionQueueName",
          "MaximumPlayerSessionCount"
        ],
        "title": "StartGameSessionPlacementInput",
        "properties": {
          "PlacementId": {
            "allOf": [
              {
                "$ref": "#/$defs/IdStringModel"
              },
              {
                "description": "A unique identifier to assign to the new game session placement. This value is developer-defined. The value must be unique across all Regions and cannot be reused."
              }
            ]
          },
          "GameSessionQueueName": {
            "allOf": [
              {
                "$ref": "#/$defs/GameSessionQueueNameOrArn"
              },
              {
                "description": "Name of the queue to use to place the new game session. You can use either the queue name or ARN value. "
              }
            ]
          },
          "GameProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/GamePropertyList"
              },
              {
                "description": "A set of custom properties for a game session, formatted as key:value pairs. These properties are passed to a game server process with a request to start a new game session (see <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession\">Start a Game Session</a>)."
              }
            ]
          },
          "MaximumPlayerSessionCount": {
            "allOf": [
              {
                "$ref": "#/$defs/WholeNumber"
              },
              {
                "description": "The maximum number of players that can be connected simultaneously to the game session."
              }
            ]
          },
          "GameSessionName": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "A descriptive label that is associated with a game session. Session names do not need to be unique."
              }
            ]
          },
          "PlayerLatencies": {
            "allOf": [
              {
                "$ref": "#/$defs/PlayerLatencyList"
              },
              {
                "description": "A set of values, expressed in milliseconds, that indicates the amount of latency that a player experiences when connected to Amazon Web Services Regions. This information is used to try to place the new game session where it can offer the best possible gameplay experience for the players. "
              }
            ]
          },
          "DesiredPlayerSessions": {
            "allOf": [
              {
                "$ref": "#/$defs/DesiredPlayerSessionList"
              },
              {
                "description": "Set of information on each player to create a player session for."
              }
            ]
          },
          "GameSessionData": {
            "allOf": [
              {
                "$ref": "#/$defs/LargeGameSessionData"
              },
              {
                "description": "A set of custom game session properties, formatted as a single string value. This data is passed to a game server process in the <code>GameSession</code> object with a request to start a new game session (see <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession\">Start a Game Session</a>)."
              }
            ]
          }
        }
      },
      "IdStringModel": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]+",
        "minLength": 1,
        "maxLength": 48
      },
      "GameSessionQueueNameOrArn": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]+|^arn:.*:gamesessionqueue\\/[a-zA-Z0-9-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "GamePropertyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GameProperty"
        },
        "maxItems": 16
      },
      "GameProperty": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/GamePropertyKey"
              },
              {
                "description": "The game property identifier."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/GamePropertyValue"
              },
              {
                "description": "The game property value."
              }
            ]
          }
        },
        "description": "Set of key-value pairs that contain information about a game session. When included in a game session request, these properties communicate details to be used when setting up the new game session. For example, a game property might specify a game mode, level, or map. Game properties are passed to the game server process when initiating a new game session. For more information, see the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-client-api.html#gamelift-sdk-client-api-create\"> Amazon GameLift Developer Guide</a>."
      },
      "GamePropertyKey": {
        "type": "string",
        "maxLength": 32
      },
      "GamePropertyValue": {
        "type": "string",
        "maxLength": 96
      },
      "WholeNumber": {
        "type": "integer",
        "minimum": 0
      },
      "NonZeroAndMaxString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "PlayerLatencyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PlayerLatency"
        }
      },
      "PlayerLatency": {
        "type": "object",
        "properties": {
          "PlayerId": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "A unique identifier for a player associated with the latency data."
              }
            ]
          },
          "RegionIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "Name of the Region that is associated with the latency value."
              }
            ]
          },
          "LatencyInMilliseconds": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "Amount of time that represents the time lag experienced by the player when connected to the specified Region."
              }
            ]
          }
        },
        "description": "Regional latency information for a player, used when requesting a new game session. This value indicates the amount of time lag that exists when the player is connected to a fleet in the specified Region. The relative difference between a player's latency values for multiple Regions are used to determine which fleets are best suited to place a new game session for the player. "
      },
      "Float": {
        "type": "number",
        "format": "float"
      },
      "DesiredPlayerSessionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DesiredPlayerSession"
        }
      },
      "DesiredPlayerSession": {
        "type": "object",
        "properties": {
          "PlayerId": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "A unique identifier for a player to associate with the player session."
              }
            ]
          },
          "PlayerData": {
            "allOf": [
              {
                "$ref": "#/$defs/PlayerData"
              },
              {
                "description": "Developer-defined information related to a player. Amazon GameLift does not use this data, so it can be formatted as needed for use in the game."
              }
            ]
          }
        },
        "description": "Player information for use when creating player sessions using a game session placement request."
      },
      "PlayerData": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "LargeGameSessionData": {
        "type": "string",
        "minLength": 1,
        "maxLength": 262144
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://gamelift.us-east-1.amazonaws.com/#X-Amz-Target=GameLift.StartGameSessionPlacement"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**GameSessionPlacement**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
