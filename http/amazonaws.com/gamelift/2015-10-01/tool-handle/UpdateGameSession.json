{
  "name": "UpdateGameSession",
  "description": "<p>Updates the mutable properties of a game session. </p> <p>To update a game session, specify the game session ID and the values you want to change. </p> <p>If successful, the updated <code>GameSession</code> object is returned. </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets\">All APIs by task</a> </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "GameLift.UpdateGameSession"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateGameSessionInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateGameSessionInput": {
        "type": "object",
        "required": [
          "GameSessionId"
        ],
        "title": "UpdateGameSessionInput",
        "properties": {
          "GameSessionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnStringModel"
              },
              {
                "description": "A unique identifier for the game session to update. "
              }
            ]
          },
          "MaximumPlayerSessionCount": {
            "allOf": [
              {
                "$ref": "#/$defs/WholeNumber"
              },
              {
                "description": "The maximum number of players that can be connected simultaneously to the game session."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "A descriptive label that is associated with a game session. Session names do not need to be unique."
              }
            ]
          },
          "PlayerSessionCreationPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/PlayerSessionCreationPolicy"
              },
              {
                "description": "A policy that determines whether the game session is accepting new players."
              }
            ]
          },
          "ProtectionPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/ProtectionPolicy"
              },
              {
                "description": "<p>Game session protection policy to apply to this game session only.</p> <ul> <li> <p> <b>NoProtection</b> -- The game session can be terminated during a scale-down event.</p> </li> <li> <p> <b>FullProtection</b> -- If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</p> </li> </ul>"
              }
            ]
          }
        }
      },
      "ArnStringModel": {
        "type": "string",
        "pattern": "[a-zA-Z0-9:/-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "WholeNumber": {
        "type": "integer",
        "minimum": 0
      },
      "NonZeroAndMaxString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "PlayerSessionCreationPolicy": {
        "type": "string",
        "enum": [
          "ACCEPT_ALL",
          "DENY_ALL"
        ]
      },
      "ProtectionPolicy": {
        "type": "string",
        "enum": [
          "NoProtection",
          "FullProtection"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://gamelift.us-east-1.amazonaws.com/#X-Amz-Target=GameLift.UpdateGameSession"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**GameSession**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
