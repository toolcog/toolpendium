{
  "name": "UpdateAlias",
  "description": "<p>Updates properties for an alias. To update properties, specify the alias ID to be updated and provide the information to be changed. To reassign an alias to another fleet, provide an updated routing strategy. If successful, the updated alias record is returned.</p> <p> <b>Related actions</b> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets\">All APIs by task</a> </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "GameLift.UpdateAlias"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateAliasInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateAliasInput": {
        "type": "object",
        "required": [
          "AliasId"
        ],
        "title": "UpdateAliasInput",
        "properties": {
          "AliasId": {
            "allOf": [
              {
                "$ref": "#/$defs/AliasIdOrArn"
              },
              {
                "description": "A unique identifier for the alias that you want to update. You can use either the alias ID or ARN value."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NonBlankAndLengthConstraintString"
              },
              {
                "description": "A descriptive label that is associated with an alias. Alias names do not need to be unique."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "A human-readable description of the alias."
              }
            ]
          },
          "RoutingStrategy": {
            "allOf": [
              {
                "$ref": "#/$defs/RoutingStrategy"
              },
              {
                "description": "The routing configuration, including routing type and fleet target, for the alias."
              }
            ]
          }
        }
      },
      "AliasIdOrArn": {
        "type": "string",
        "pattern": "^alias-\\S+|^arn:.*:alias\\/alias-\\S+"
      },
      "NonBlankAndLengthConstraintString": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 1024
      },
      "NonZeroAndMaxString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "RoutingStrategy": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/RoutingStrategyType"
              },
              {
                "description": "<p>The type of routing strategy for the alias.</p> <p>Possible routing types include the following:</p> <ul> <li> <p> <b>SIMPLE</b> - The alias resolves to one specific fleet. Use this type when routing to active fleets.</p> </li> <li> <p> <b>TERMINAL</b> - The alias does not resolve to a fleet but instead can be used to display a message to the user. A terminal alias throws a TerminalRoutingStrategyException with the message embedded.</p> </li> </ul>"
              }
            ]
          },
          "FleetId": {
            "allOf": [
              {
                "$ref": "#/$defs/FleetId"
              },
              {
                "description": "A unique identifier for the fleet that the alias points to. This value is the fleet ID, not the fleet ARN."
              }
            ]
          },
          "Message": {
            "allOf": [
              {
                "$ref": "#/$defs/FreeText"
              },
              {
                "description": "The message text to be used with a terminal routing strategy."
              }
            ]
          }
        },
        "description": "<p>The routing configuration for a fleet alias.</p> <p> <b>Related actions</b> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets\">All APIs by task</a> </p>"
      },
      "RoutingStrategyType": {
        "type": "string",
        "enum": [
          "SIMPLE",
          "TERMINAL"
        ]
      },
      "FleetId": {
        "type": "string",
        "pattern": "^fleet-\\S+"
      },
      "FreeText": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://gamelift.us-east-1.amazonaws.com/#X-Amz-Target=GameLift.UpdateAlias"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Alias**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
