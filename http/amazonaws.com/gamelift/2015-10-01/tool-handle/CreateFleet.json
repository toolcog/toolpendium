{
  "name": "CreateFleet",
  "description": "<p>Creates a fleet of Amazon Elastic Compute Cloud (Amazon EC2) instances to host your custom game server or Realtime Servers. Use this operation to configure the computing resources for your fleet and provide instructions for running game servers on each instance.</p> <p>Most Amazon GameLift fleets can deploy instances to multiple locations, including the home Region (where the fleet is created) and an optional set of remote locations. Fleets that are created in the following Amazon Web Services Regions support multiple locations: us-east-1 (N. Virginia), us-west-2 (Oregon), eu-central-1 (Frankfurt), eu-west-1 (Ireland), ap-southeast-2 (Sydney), ap-northeast-1 (Tokyo), and ap-northeast-2 (Seoul). Fleets that are created in other Amazon GameLift Regions can deploy instances in the fleet's home Region only. All fleet instances use the same configuration regardless of location; however, you can adjust capacity settings and turn auto-scaling on/off for each location.</p> <p>To create a fleet, choose the hardware for your instances, specify a game server build or Realtime script to deploy, and provide a runtime configuration to direct Amazon GameLift how to start and run game servers on each instance in the fleet. Set permissions for inbound traffic to your game servers, and enable optional features as needed. When creating a multi-location fleet, provide a list of additional remote locations.</p> <p>If you need to debug your fleet, fetch logs, view performance metrics or other actions on the fleet, create the development fleet with port 22/3389 open. As a best practice, we recommend opening ports for remote access only when you need them and closing them when you're finished. </p> <p>If successful, this operation creates a new Fleet resource and places it in <code>NEW</code> status, which prompts Amazon GameLift to initiate the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-creating-all.html#fleets-creation-workflow\">fleet creation workflow</a>.</p> <p> <b>Learn more</b> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html\">Setting up fleets</a> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-creating-debug.html#fleets-creating-debug-creation\">Debug fleet creation issues</a> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-intro.html\">Multi-location fleets</a> </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "GameLift.CreateFleet"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateFleetInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateFleetInput": {
        "type": "object",
        "required": [
          "Name"
        ],
        "title": "CreateFleetInput",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "A descriptive label that is associated with a fleet. Fleet names do not need to be unique."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "A description for the fleet."
              }
            ]
          },
          "BuildId": {
            "allOf": [
              {
                "$ref": "#/$defs/BuildIdOrArn"
              },
              {
                "description": "The unique identifier for a custom game server build to be deployed on fleet instances. You can use either the build ID or ARN. The build must be uploaded to Amazon GameLift and in <code>READY</code> status. This fleet property cannot be changed later."
              }
            ]
          },
          "ScriptId": {
            "allOf": [
              {
                "$ref": "#/$defs/ScriptIdOrArn"
              },
              {
                "description": "The unique identifier for a Realtime configuration script to be deployed on fleet instances. You can use either the script ID or ARN. Scripts must be uploaded to Amazon GameLift prior to creating the fleet. This fleet property cannot be changed later."
              }
            ]
          },
          "ServerLaunchPath": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchPathStringModel"
              },
              {
                "description": " <b>This parameter is no longer used.</b> Specify a server launch path using the <code>RuntimeConfiguration</code> parameter. Requests that use this parameter instead continue to be valid."
              }
            ]
          },
          "ServerLaunchParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchParametersStringModel"
              },
              {
                "description": " <b>This parameter is no longer used.</b> Specify server launch parameters using the <code>RuntimeConfiguration</code> parameter. Requests that use this parameter instead continue to be valid."
              }
            ]
          },
          "LogPaths": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": " <b>This parameter is no longer used.</b> To specify where Amazon GameLift should store log files once a server process shuts down, use the Amazon GameLift server API <code>ProcessReady()</code> and specify one or more directory paths in <code>logParameters</code>. For more information, see <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-initialize\">Initialize the server process</a> in the <i>Amazon GameLift Developer Guide</i>. "
              }
            ]
          },
          "EC2InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/EC2InstanceType"
              },
              {
                "description": "The Amazon GameLift-supported Amazon EC2 instance type to use for all fleet instances. Instance type determines the computing resources that will be used to host your game servers, including CPU, memory, storage, and networking capacity. See <a href=\"http://aws.amazon.com/ec2/instance-types/\">Amazon Elastic Compute Cloud Instance Types</a> for detailed descriptions of Amazon EC2 instance types."
              }
            ]
          },
          "EC2InboundPermissions": {
            "allOf": [
              {
                "$ref": "#/$defs/IpPermissionsList"
              },
              {
                "description": "The allowed IP address ranges and port settings that allow inbound traffic to access game sessions on this fleet. If the fleet is hosting a custom game build, this property must be set before players can connect to game sessions. For Realtime Servers fleets, Amazon GameLift automatically sets TCP and UDP ranges. "
              }
            ]
          },
          "NewGameSessionProtectionPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/ProtectionPolicy"
              },
              {
                "description": "<p>The status of termination protection for active game sessions on the fleet. By default, this property is set to <code>NoProtection</code>. You can also set game session protection for an individual game session by calling <a href=\"gamelift/latest/apireference/API_UpdateGameSession.html\">UpdateGameSession</a>.</p> <ul> <li> <p> <b>NoProtection</b> - Game sessions can be terminated during active gameplay as a result of a scale-down event. </p> </li> <li> <p> <b>FullProtection</b> - Game sessions in <code>ACTIVE</code> status cannot be terminated during a scale-down event.</p> </li> </ul>"
              }
            ]
          },
          "RuntimeConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/RuntimeConfiguration"
              },
              {
                "description": "<p>Instructions for how to launch and maintain server processes on instances in the fleet. The runtime configuration defines one or more server process configurations, each identifying a build executable or Realtime script file and the number of processes of that type to run concurrently. </p> <note> <p>The <code>RuntimeConfiguration</code> parameter is required unless the fleet is being configured using the older parameters <code>ServerLaunchPath</code> and <code>ServerLaunchParameters</code>, which are still supported for backward compatibility.</p> </note>"
              }
            ]
          },
          "ResourceCreationLimitPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceCreationLimitPolicy"
              },
              {
                "description": "A policy that limits the number of game sessions that an individual player can create on instances in this fleet within a specified span of time."
              }
            ]
          },
          "MetricGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricGroupList"
              },
              {
                "description": "The name of an Amazon Web Services CloudWatch metric group to add this fleet to. A metric group is used to aggregate the metrics for multiple fleets. You can specify an existing metric group name or set a new name to create a new metric group. A fleet can be included in only one metric group at a time. "
              }
            ]
          },
          "PeerVpcAwsAccountId": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "Used when peering your Amazon GameLift fleet with a VPC, the unique identifier for the Amazon Web Services account that owns the VPC. You can find your account ID in the Amazon Web Services Management Console under account settings. "
              }
            ]
          },
          "PeerVpcId": {
            "allOf": [
              {
                "$ref": "#/$defs/NonZeroAndMaxString"
              },
              {
                "description": "A unique identifier for a VPC with resources to be accessed by your Amazon GameLift fleet. The VPC must be in the same Region as your fleet. To look up a VPC ID, use the <a href=\"https://console.aws.amazon.com/vpc/\">VPC Dashboard</a> in the Amazon Web Services Management Console. Learn more about VPC peering in <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html\">VPC Peering with Amazon GameLift Fleets</a>."
              }
            ]
          },
          "FleetType": {
            "allOf": [
              {
                "$ref": "#/$defs/FleetType"
              },
              {
                "description": "Indicates whether to use On-Demand or Spot instances for this fleet. By default, this property is set to <code>ON_DEMAND</code>. Learn more about when to use <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-ec2-instances.html#gamelift-ec2-instances-spot\"> On-Demand versus Spot Instances</a>. This property cannot be changed after the fleet is created."
              }
            ]
          },
          "InstanceRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "A unique identifier for an IAM role that manages access to your Amazon Web Services services. With an instance role ARN set, any application that runs on an instance in this fleet can assume the role, including install scripts, server processes, and daemons (background processes). Create a role or look up a role's ARN by using the <a href=\"https://console.aws.amazon.com/iam/\">IAM dashboard</a> in the Amazon Web Services Management Console. Learn more about using on-box credentials for your game servers at <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-resources.html\"> Access external resources from a game server</a>. This property cannot be changed after the fleet is created."
              }
            ]
          },
          "CertificateConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CertificateConfiguration"
              },
              {
                "description": "<p>Prompts Amazon GameLift to generate a TLS/SSL certificate for the fleet. Amazon GameLift uses the certificates to encrypt traffic between game clients and the game servers running on Amazon GameLift. By default, the <code>CertificateConfiguration</code> is <code>DISABLED</code>. You can't change this property after you create the fleet. </p> <p>Certificate Manager (ACM) certificates expire after 13 months. Certificate expiration can cause fleets to fail, preventing players from connecting to instances in the fleet. We recommend you replace fleets before 13 months, consider using fleet aliases for a smooth transition.</p> <note> <p>ACM isn't available in all Amazon Web Services regions. A fleet creation request with certificate generation enabled in an unsupported Region, fails with a 4xx error. For more information about the supported Regions, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-regions.html\">Supported Regions</a> in the <i>Certificate Manager User Guide</i>.</p> </note>"
              }
            ]
          },
          "Locations": {
            "allOf": [
              {
                "$ref": "#/$defs/LocationConfigurationList"
              },
              {
                "description": "<p>A set of remote locations to deploy additional instances to and manage as part of the fleet. This parameter can only be used when creating fleets in Amazon Web Services Regions that support multiple locations. You can add any Amazon GameLift-supported Amazon Web Services Region as a remote location, in the form of an Amazon Web Services Region code such as <code>us-west-2</code>. To create a fleet with instances in the home Region only, don't use this parameter. </p> <p>To use this parameter, Amazon GameLift requires you to use your home location in the request.</p>"
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "A list of labels to assign to the new fleet resource. Tags are developer-defined key-value pairs. Tagging Amazon Web Services resources are useful for resource management, access management and cost allocation. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"> Tagging Amazon Web Services Resources</a> in the <i>Amazon Web Services General Reference</i>."
              }
            ]
          },
          "ComputeType": {
            "allOf": [
              {
                "$ref": "#/$defs/ComputeType"
              },
              {
                "description": "The type of compute resource used to host your game servers. You can use your own compute resources with Amazon GameLift Anywhere or use Amazon EC2 instances with managed Amazon GameLift. By default, this property is set to <code>EC2</code>."
              }
            ]
          },
          "AnywhereConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/AnywhereConfiguration"
              },
              {
                "description": "Amazon GameLift Anywhere configuration options."
              }
            ]
          }
        }
      },
      "NonZeroAndMaxString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "BuildIdOrArn": {
        "type": "string",
        "pattern": "^build-\\S+|^arn:.*:build\\/build-\\S+"
      },
      "ScriptIdOrArn": {
        "type": "string",
        "pattern": "^script-\\S+|^arn:.*:script\\/script-\\S+"
      },
      "LaunchPathStringModel": {
        "type": "string",
        "pattern": "[A-Za-z0-9_:.+\\/\\\\\\- ]+",
        "minLength": 1,
        "maxLength": 1024
      },
      "LaunchParametersStringModel": {
        "type": "string",
        "pattern": "[A-Za-z0-9_:.+\\/\\\\\\- =@;{},?'\\[\\]\"]+",
        "minLength": 1,
        "maxLength": 1024
      },
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NonZeroAndMaxString"
        }
      },
      "EC2InstanceType": {
        "type": "string",
        "enum": [
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "c3.large",
          "c3.xlarge",
          "c3.2xlarge",
          "c3.4xlarge",
          "c3.8xlarge",
          "c4.large",
          "c4.xlarge",
          "c4.2xlarge",
          "c4.4xlarge",
          "c4.8xlarge",
          "c5.large",
          "c5.xlarge",
          "c5.2xlarge",
          "c5.4xlarge",
          "c5.9xlarge",
          "c5.12xlarge",
          "c5.18xlarge",
          "c5.24xlarge",
          "c5a.large",
          "c5a.xlarge",
          "c5a.2xlarge",
          "c5a.4xlarge",
          "c5a.8xlarge",
          "c5a.12xlarge",
          "c5a.16xlarge",
          "c5a.24xlarge",
          "r3.large",
          "r3.xlarge",
          "r3.2xlarge",
          "r3.4xlarge",
          "r3.8xlarge",
          "r4.large",
          "r4.xlarge",
          "r4.2xlarge",
          "r4.4xlarge",
          "r4.8xlarge",
          "r4.16xlarge",
          "r5.large",
          "r5.xlarge",
          "r5.2xlarge",
          "r5.4xlarge",
          "r5.8xlarge",
          "r5.12xlarge",
          "r5.16xlarge",
          "r5.24xlarge",
          "r5a.large",
          "r5a.xlarge",
          "r5a.2xlarge",
          "r5a.4xlarge",
          "r5a.8xlarge",
          "r5a.12xlarge",
          "r5a.16xlarge",
          "r5a.24xlarge",
          "m3.medium",
          "m3.large",
          "m3.xlarge",
          "m3.2xlarge",
          "m4.large",
          "m4.xlarge",
          "m4.2xlarge",
          "m4.4xlarge",
          "m4.10xlarge",
          "m5.large",
          "m5.xlarge",
          "m5.2xlarge",
          "m5.4xlarge",
          "m5.8xlarge",
          "m5.12xlarge",
          "m5.16xlarge",
          "m5.24xlarge",
          "m5a.large",
          "m5a.xlarge",
          "m5a.2xlarge",
          "m5a.4xlarge",
          "m5a.8xlarge",
          "m5a.12xlarge",
          "m5a.16xlarge",
          "m5a.24xlarge",
          "c5d.large",
          "c5d.xlarge",
          "c5d.2xlarge",
          "c5d.4xlarge",
          "c5d.9xlarge",
          "c5d.12xlarge",
          "c5d.18xlarge",
          "c5d.24xlarge",
          "c6a.large",
          "c6a.xlarge",
          "c6a.2xlarge",
          "c6a.4xlarge",
          "c6a.8xlarge",
          "c6a.12xlarge",
          "c6a.16xlarge",
          "c6a.24xlarge",
          "c6i.large",
          "c6i.xlarge",
          "c6i.2xlarge",
          "c6i.4xlarge",
          "c6i.8xlarge",
          "c6i.12xlarge",
          "c6i.16xlarge",
          "c6i.24xlarge",
          "r5d.large",
          "r5d.xlarge",
          "r5d.2xlarge",
          "r5d.4xlarge",
          "r5d.8xlarge",
          "r5d.12xlarge",
          "r5d.16xlarge",
          "r5d.24xlarge"
        ]
      },
      "IpPermissionsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/IpPermission"
        },
        "maxItems": 50
      },
      "IpPermission": {
        "type": "object",
        "required": [
          "FromPort",
          "ToPort",
          "IpRange",
          "Protocol"
        ],
        "properties": {
          "FromPort": {
            "allOf": [
              {
                "$ref": "#/$defs/PortNumber"
              },
              {
                "description": "<p>A starting value for a range of allowed port numbers.</p> <p>For fleets using Linux builds, only ports <code>22</code> and <code>1026-60000</code> are valid.</p> <p>For fleets using Windows builds, only ports <code>1026-60000</code> are valid.</p>"
              }
            ]
          },
          "ToPort": {
            "allOf": [
              {
                "$ref": "#/$defs/PortNumber"
              },
              {
                "description": "<p>An ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be equal to or greater than <code>FromPort</code>.</p> <p>For fleets using Linux builds, only ports <code>22</code> and <code>1026-60000</code> are valid.</p> <p>For fleets using Windows builds, only ports <code>1026-60000</code> are valid.</p>"
              }
            ]
          },
          "IpRange": {
            "allOf": [
              {
                "$ref": "#/$defs/NonBlankString"
              },
              {
                "description": "A range of allowed IP addresses. This value must be expressed in CIDR notation. Example: \"<code>000.000.000.000/[subnet mask]</code>\" or optionally the shortened version \"<code>0.0.0.0/[subnet mask]</code>\"."
              }
            ]
          },
          "Protocol": {
            "allOf": [
              {
                "$ref": "#/$defs/IpProtocol"
              },
              {
                "description": "The network communication protocol used by the fleet."
              }
            ]
          }
        },
        "description": "A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an instance in a fleet. New game sessions are assigned an IP address/port number combination, which must fall into the fleet's allowed ranges. Fleets with custom game builds must have permissions explicitly set. For Realtime Servers fleets, Amazon GameLift automatically opens two port ranges, one for TCP messaging and one for UDP."
      },
      "PortNumber": {
        "type": "integer",
        "minimum": 1,
        "maximum": 60000
      },
      "NonBlankString": {
        "type": "string",
        "pattern": "[^\\s]+"
      },
      "IpProtocol": {
        "type": "string",
        "enum": [
          "TCP",
          "UDP"
        ]
      },
      "ProtectionPolicy": {
        "type": "string",
        "enum": [
          "NoProtection",
          "FullProtection"
        ]
      },
      "RuntimeConfiguration": {
        "type": "object",
        "properties": {
          "ServerProcesses": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerProcessList"
              },
              {
                "description": "A collection of server process configurations that identify what server processes to run on each instance in a fleet."
              }
            ]
          },
          "MaxConcurrentGameSessionActivations": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxConcurrentGameSessionActivations"
              },
              {
                "description": "The number of game sessions in status <code>ACTIVATING</code> to allow on an instance. This setting limits the instance resources that can be used for new game activations at any one time."
              }
            ]
          },
          "GameSessionActivationTimeoutSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/GameSessionActivationTimeoutSeconds"
              },
              {
                "description": "The maximum amount of time (in seconds) allowed to launch a new game session and have it report ready to host players. During this time, the game session is in status <code>ACTIVATING</code>. If the game session does not become active before the timeout, it is ended and the game session status is changed to <code>TERMINATED</code>."
              }
            ]
          }
        },
        "description": "<p>A collection of server process configurations that describe the set of processes to run on each instance in a fleet. Server processes run either an executable in a custom game build or a Realtime Servers script. Amazon GameLift launches the configured processes, manages their life cycle, and replaces them as needed. Each instance checks regularly for an updated runtime configuration. </p> <p>A Amazon GameLift instance is limited to 50 processes running concurrently. To calculate the total number of processes in a runtime configuration, add the values of the <code>ConcurrentExecutions</code> parameter for each server process. Learn more about <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-multiprocess.html\"> Running Multiple Processes on a Fleet</a>.</p>"
      },
      "ServerProcessList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ServerProcess"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "ServerProcess": {
        "type": "object",
        "required": [
          "LaunchPath",
          "ConcurrentExecutions"
        ],
        "properties": {
          "LaunchPath": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchPathStringModel"
              },
              {
                "description": "<p>The location of a game build executable or the Realtime script file that contains the <code>Init()</code> function. Game builds and Realtime scripts are installed on instances at the root: </p> <ul> <li> <p>Windows (custom game builds only): <code>C:\\game</code>. Example: \"<code>C:\\game\\MyGame\\server.exe</code>\" </p> </li> <li> <p>Linux: <code>/local/game</code>. Examples: \"<code>/local/game/MyGame/server.exe</code>\" or \"<code>/local/game/MyRealtimeScript.js</code>\"</p> </li> </ul>"
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchParametersStringModel"
              },
              {
                "description": "An optional list of parameters to pass to the server executable or Realtime script on launch."
              }
            ]
          },
          "ConcurrentExecutions": {
            "allOf": [
              {
                "$ref": "#/$defs/PositiveInteger"
              },
              {
                "description": "The number of server processes using this configuration that run concurrently on each instance."
              }
            ]
          }
        },
        "description": "A set of instructions for launching server processes on each instance in a fleet. Server processes run either an executable in a custom game build or a Realtime Servers script. Server process configurations are part of a fleet's runtime configuration."
      },
      "PositiveInteger": {
        "type": "integer",
        "minimum": 1
      },
      "MaxConcurrentGameSessionActivations": {
        "type": "integer",
        "minimum": 1,
        "maximum": 2147483647
      },
      "GameSessionActivationTimeoutSeconds": {
        "type": "integer",
        "minimum": 1,
        "maximum": 600
      },
      "ResourceCreationLimitPolicy": {
        "type": "object",
        "properties": {
          "NewGameSessionsPerCreator": {
            "allOf": [
              {
                "$ref": "#/$defs/WholeNumber"
              },
              {
                "description": "<p>A policy that puts limits on the number of game sessions that a player can create within a specified span of time. With this policy, you can control players' ability to consume available resources.</p> <p>The policy is evaluated when a player tries to create a new game session. On receiving a <code>CreateGameSession</code> request, Amazon GameLift checks that the player (identified by <code>CreatorId</code>) has created fewer than game session limit in the specified time period.</p>"
              }
            ]
          },
          "PolicyPeriodInMinutes": {
            "allOf": [
              {
                "$ref": "#/$defs/WholeNumber"
              },
              {
                "description": "The time span used in evaluating the resource creation limit policy. "
              }
            ]
          }
        },
        "description": "<p>A policy that puts limits on the number of game sessions that a player can create within a specified span of time. With this policy, you can control players' ability to consume available resources.</p> <p>The policy is evaluated when a player tries to create a new game session. On receiving a <code>CreateGameSession</code> request, Amazon GameLift checks that the player (identified by <code>CreatorId</code>) has created fewer than game session limit in the specified time period.</p>"
      },
      "WholeNumber": {
        "type": "integer",
        "minimum": 0
      },
      "MetricGroupList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MetricGroup"
        },
        "maxItems": 1
      },
      "MetricGroup": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "FleetType": {
        "type": "string",
        "enum": [
          "ON_DEMAND",
          "SPOT"
        ]
      },
      "NonEmptyString": {
        "type": "string",
        "minLength": 1
      },
      "CertificateConfiguration": {
        "type": "object",
        "required": [
          "CertificateType"
        ],
        "properties": {
          "CertificateType": {
            "allOf": [
              {
                "$ref": "#/$defs/CertificateType"
              },
              {
                "description": "<p>Indicates whether a TLS/SSL certificate is generated for a fleet. </p> <p>Valid values include: </p> <ul> <li> <p> <b>GENERATED</b> - Generate a TLS/SSL certificate for this fleet.</p> </li> <li> <p> <b>DISABLED</b> - (default) Do not generate a TLS/SSL certificate for this fleet. </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Determines whether a TLS/SSL certificate is generated for a fleet. This feature must be enabled when creating the fleet. All instances in a fleet share the same certificate. The certificate can be retrieved by calling the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-serversdk.html\">Amazon GameLift Server SDK</a> operation <code>GetInstanceCertificate</code>. "
      },
      "CertificateType": {
        "type": "string",
        "enum": [
          "DISABLED",
          "GENERATED"
        ]
      },
      "LocationConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LocationConfiguration"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "LocationConfiguration": {
        "type": "object",
        "required": [
          "Location"
        ],
        "properties": {
          "Location": {
            "allOf": [
              {
                "$ref": "#/$defs/LocationStringModel"
              },
              {
                "description": "An Amazon Web Services Region code, such as <code>us-west-2</code>. "
              }
            ]
          }
        },
        "description": "A remote location where a multi-location fleet can deploy game servers for game hosting. "
      },
      "LocationStringModel": {
        "type": "string",
        "pattern": "^[A-Za-z0-9\\-]+",
        "minLength": 1,
        "maxLength": 64
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key for a developer-defined key value pair for tagging an Amazon Web Services resource. "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value for a developer-defined key value pair for tagging an Amazon Web Services resource. "
              }
            ]
          }
        },
        "description": "<p>A label that you can assign to a Amazon GameLift resource. </p> <p> <b>Learn more</b> </p> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services Resources</a> in the <i>Amazon Web Services General Reference</i> </p> <p> <a href=\"http://aws.amazon.com/answers/account-management/aws-tagging-strategies/\"> Amazon Web Services Tagging Strategies</a> </p> <p> <b>Related actions</b> </p> <p> <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets\">All APIs by task</a> </p>"
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "ComputeType": {
        "type": "string",
        "enum": [
          "EC2",
          "ANYWHERE"
        ]
      },
      "AnywhereConfiguration": {
        "type": "object",
        "required": [
          "Cost"
        ],
        "properties": {
          "Cost": {
            "allOf": [
              {
                "$ref": "#/$defs/NonNegativeLimitedLengthDouble"
              },
              {
                "description": "The cost to run your fleet per hour. Amazon GameLift uses the provided cost of your fleet to balance usage in queues. For more information about queues, see <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/queues-intro.html\">Setting up queues</a> in the <i>Amazon GameLift Developer Guide</i>."
              }
            ]
          }
        },
        "description": "Amazon GameLift Anywhere configuration options for your Anywhere fleets."
      },
      "NonNegativeLimitedLengthDouble": {
        "type": "string",
        "pattern": "^\\d{1,5}(?:\\.\\d{1,5})?$",
        "minLength": 1,
        "maxLength": 11
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://gamelift.us-east-1.amazonaws.com/#X-Amz-Target=GameLift.CreateFleet"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**FleetAttributes**",
            "**LocationStates**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
