{
  "name": "ListCertificates",
  "description": "Retrieves a list of certificate ARNs and domain names. You can request that only certificates that match a specific status be listed. You can also filter by specific attributes of the certificate. Default filtering returns only <code>RSA_2048</code> certificates. For more information, see <a>Filters</a>.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxItems": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "CertificateManager.ListCertificates"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListCertificatesRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListCertificatesRequest": {
        "type": "object",
        "title": "ListCertificatesRequest",
        "properties": {
          "CertificateStatuses": {
            "allOf": [
              {
                "$ref": "#/$defs/CertificateStatuses"
              },
              {
                "description": "Filter the certificate list by status value."
              }
            ]
          },
          "Includes": {
            "allOf": [
              {
                "$ref": "#/$defs/Filters"
              },
              {
                "description": "Filter the certificate list. For more information, see the <a>Filters</a> structure."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextToken</code> from the response you just received."
              }
            ]
          },
          "MaxItems": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxItems"
              },
              {
                "description": "Use this parameter when paginating results to specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code> value in a subsequent request to retrieve additional items."
              }
            ]
          },
          "SortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/SortBy"
              },
              {
                "description": "Specifies the field to sort results by. If you specify <code>SortBy</code>, you must also specify <code>SortOrder</code>."
              }
            ]
          },
          "SortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "Specifies the order of sorted results. If you specify <code>SortOrder</code>, you must also specify <code>SortBy</code>."
              }
            ]
          }
        }
      },
      "CertificateStatuses": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CertificateStatus"
        }
      },
      "CertificateStatus": {
        "type": "string",
        "enum": [
          "PENDING_VALIDATION",
          "ISSUED",
          "INACTIVE",
          "EXPIRED",
          "VALIDATION_TIMED_OUT",
          "REVOKED",
          "FAILED"
        ]
      },
      "Filters": {
        "type": "object",
        "properties": {
          "extendedKeyUsage": {
            "allOf": [
              {
                "$ref": "#/$defs/ExtendedKeyUsageFilterList"
              },
              {
                "description": "Specify one or more <a>ExtendedKeyUsage</a> extension values."
              }
            ]
          },
          "keyUsage": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyUsageFilterList"
              },
              {
                "description": "Specify one or more <a>KeyUsage</a> extension values."
              }
            ]
          },
          "keyTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyAlgorithmList"
              },
              {
                "description": "<p>Specify one or more algorithms that can be used to generate key pairs.</p> <p>Default filtering returns only <code>RSA_1024</code> and <code>RSA_2048</code> certificates that have at least one domain. To return other certificate types, provide the desired type signatures in a comma-separated list. For example, <code>\"keyTypes\": [\"RSA_2048\",\"RSA_4096\"]</code> returns both <code>RSA_2048</code> and <code>RSA_4096</code> certificates.</p>"
              }
            ]
          }
        },
        "description": "This structure can be used in the <a>ListCertificates</a> action to filter the output of the certificate list. "
      },
      "ExtendedKeyUsageFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ExtendedKeyUsageName"
        }
      },
      "ExtendedKeyUsageName": {
        "type": "string",
        "enum": [
          "TLS_WEB_SERVER_AUTHENTICATION",
          "TLS_WEB_CLIENT_AUTHENTICATION",
          "CODE_SIGNING",
          "EMAIL_PROTECTION",
          "TIME_STAMPING",
          "OCSP_SIGNING",
          "IPSEC_END_SYSTEM",
          "IPSEC_TUNNEL",
          "IPSEC_USER",
          "ANY",
          "NONE",
          "CUSTOM"
        ]
      },
      "KeyUsageFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/KeyUsageName"
        }
      },
      "KeyUsageName": {
        "type": "string",
        "enum": [
          "DIGITAL_SIGNATURE",
          "NON_REPUDIATION",
          "KEY_ENCIPHERMENT",
          "DATA_ENCIPHERMENT",
          "KEY_AGREEMENT",
          "CERTIFICATE_SIGNING",
          "CRL_SIGNING",
          "ENCIPHER_ONLY",
          "DECIPHER_ONLY",
          "ANY",
          "CUSTOM"
        ]
      },
      "KeyAlgorithmList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/KeyAlgorithm"
        }
      },
      "KeyAlgorithm": {
        "type": "string",
        "enum": [
          "RSA_1024",
          "RSA_2048",
          "RSA_3072",
          "RSA_4096",
          "EC_prime256v1",
          "EC_secp384r1",
          "EC_secp521r1"
        ]
      },
      "NextToken": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
        "minLength": 1,
        "maxLength": 10000
      },
      "MaxItems": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1000
      },
      "SortBy": {
        "type": "string",
        "enum": [
          "CREATED_AT"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://acm.us-east-1.amazonaws.com/#X-Amz-Target=CertificateManager.ListCertificates{?MaxItems,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NextToken**",
            "**CertificateSummaryList**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
