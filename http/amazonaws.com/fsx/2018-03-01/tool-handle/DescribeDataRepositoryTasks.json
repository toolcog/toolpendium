{
  "name": "DescribeDataRepositoryTasks",
  "description": "<p>Returns the description of specific Amazon FSx for Lustre or Amazon File Cache data repository tasks, if one or more <code>TaskIds</code> values are provided in the request, or if filters are used in the request. You can use filters to narrow the response to include just tasks for specific file systems or caches, or tasks in a specific lifecycle state. Otherwise, it returns all data repository tasks owned by your Amazon Web Services account in the Amazon Web Services Region of the endpoint that you're calling.</p> <p>When retrieving all tasks, you can paginate the response by using the optional <code>MaxResults</code> parameter to limit the number of tasks returned in a response. If more tasks remain, a <code>NextToken</code> value is returned in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSSimbaAPIService_v20180301.DescribeDataRepositoryTasks"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeDataRepositoryTasksRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeDataRepositoryTasksRequest": {
        "type": "object",
        "title": "DescribeDataRepositoryTasksRequest",
        "properties": {
          "TaskIds": {
            "allOf": [
              {
                "$ref": "#/$defs/TaskIds"
              },
              {
                "description": "(Optional) IDs of the tasks whose descriptions you want to retrieve (String)."
              }
            ]
          },
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/DataRepositoryTaskFilters"
              },
              {
                "description": "(Optional) You can use filters to narrow the <code>DescribeDataRepositoryTasks</code> response to include just tasks for specific file systems, or tasks in a specific lifecycle state."
              }
            ]
          },
          "MaxResults": {
            "$ref": "#/$defs/MaxResults"
          },
          "NextToken": {
            "$ref": "#/$defs/NextToken"
          }
        }
      },
      "TaskIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TaskId"
        },
        "maxItems": 50
      },
      "TaskId": {
        "type": "string",
        "pattern": "^(task-[0-9a-f]{17,})$",
        "minLength": 12,
        "maxLength": 128
      },
      "DataRepositoryTaskFilters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DataRepositoryTaskFilter"
        },
        "maxItems": 3
      },
      "DataRepositoryTaskFilter": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/DataRepositoryTaskFilterName"
              },
              {
                "description": "<p>Name of the task property to use in filtering the tasks returned in the response.</p> <ul> <li> <p>Use <code>file-system-id</code> to retrieve data repository tasks for specific file systems.</p> </li> <li> <p>Use <code>task-lifecycle</code> to retrieve data repository tasks with one or more specific lifecycle states, as follows: CANCELED, EXECUTING, FAILED, PENDING, and SUCCEEDED.</p> </li> </ul>"
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/DataRepositoryTaskFilterValues"
              },
              {
                "description": "Use Values to include the specific file system IDs and task lifecycle states for the filters you are using."
              }
            ]
          }
        },
        "description": "(Optional) An array of filter objects you can use to filter the response of data repository tasks you will see in the the response. You can filter the tasks returned in the response by one or more file system IDs, task lifecycles, and by task type. A filter object consists of a filter <code>Name</code>, and one or more <code>Values</code> for the filter."
      },
      "DataRepositoryTaskFilterName": {
        "type": "string",
        "enum": [
          "file-system-id",
          "task-lifecycle",
          "data-repository-association-id",
          "file-cache-id"
        ]
      },
      "DataRepositoryTaskFilterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DataRepositoryTaskFilterValue"
        },
        "maxItems": 20
      },
      "DataRepositoryTaskFilterValue": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z\\*\\.\\\\/\\?\\-\\_]*$",
        "minLength": 1,
        "maxLength": 128
      },
      "MaxResults": {
        "type": "integer",
        "description": "The maximum number of resources to return in the response. This value must be an integer greater than zero.",
        "minimum": 1,
        "maximum": 2147483647
      },
      "NextToken": {
        "type": "string",
        "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$",
        "description": "(Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.",
        "minLength": 1,
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://fsx.us-east-1.amazonaws.com/#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeDataRepositoryTasks{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**DataRepositoryTasks**",
            "**NextToken**: (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
