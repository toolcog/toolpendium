{
  "name": "DescribeDataRepositoryAssociations",
  "description": "<p>Returns the description of specific Amazon FSx for Lustre or Amazon File Cache data repository associations, if one or more <code>AssociationIds</code> values are provided in the request, or if filters are used in the request. Data repository associations are supported on Amazon File Cache resources and all FSx for Lustre 2.12 and newer file systems, excluding <code>scratch_1</code> deployment type.</p> <p>You can use filters to narrow the response to include just data repository associations for specific file systems (use the <code>file-system-id</code> filter with the ID of the file system) or caches (use the <code>file-cache-id</code> filter with the ID of the cache), or data repository associations for a specific repository type (use the <code>data-repository-type</code> filter with a value of <code>S3</code> or <code>NFS</code>). If you don't use filters, the response returns all data repository associations owned by your Amazon Web Services account in the Amazon Web Services Region of the endpoint that you're calling.</p> <p>When retrieving all data repository associations, you can paginate the response by using the optional <code>MaxResults</code> parameter to limit the number of data repository associations returned in a response. If more data repository associations remain, a <code>NextToken</code> value is returned in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSSimbaAPIService_v20180301.DescribeDataRepositoryAssociations"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeDataRepositoryAssociationsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeDataRepositoryAssociationsRequest": {
        "type": "object",
        "title": "DescribeDataRepositoryAssociationsRequest",
        "properties": {
          "AssociationIds": {
            "allOf": [
              {
                "$ref": "#/$defs/DataRepositoryAssociationIds"
              },
              {
                "description": "IDs of the data repository associations whose descriptions you want to retrieve (String)."
              }
            ]
          },
          "Filters": {
            "$ref": "#/$defs/Filters"
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/LimitedMaxResults"
              },
              {
                "description": "The maximum number of resources to return in the response. This value must be an integer greater than zero."
              }
            ]
          },
          "NextToken": {
            "$ref": "#/$defs/NextToken"
          }
        }
      },
      "DataRepositoryAssociationIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DataRepositoryAssociationId"
        },
        "maxItems": 50
      },
      "DataRepositoryAssociationId": {
        "type": "string",
        "pattern": "^(dra-[0-9a-f]{8,})$",
        "minLength": 13,
        "maxLength": 23
      },
      "Filters": {
        "type": "array",
        "description": "A list of <code>Filter</code> elements.",
        "items": {
          "$ref": "#/$defs/Filter"
        },
        "maxItems": 10
      },
      "Filter": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterName"
              },
              {
                "description": "The name for this filter."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterValues"
              },
              {
                "description": "The values of the filter. These are all the values for any of the applied filters."
              }
            ]
          }
        },
        "description": "A filter used to restrict the results of describe calls. You can use multiple filters to return results that meet all applied filter requirements."
      },
      "FilterName": {
        "type": "string",
        "enum": [
          "file-system-id",
          "backup-type",
          "file-system-type",
          "volume-id",
          "data-repository-type",
          "file-cache-id",
          "file-cache-type"
        ],
        "description": "The name for a filter."
      },
      "FilterValues": {
        "type": "array",
        "description": "A list of filter values.",
        "items": {
          "$ref": "#/$defs/FilterValue"
        },
        "maxItems": 20
      },
      "FilterValue": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z\\*\\.\\\\/\\?\\-\\_]*$",
        "description": "The value for a filter.",
        "minLength": 1,
        "maxLength": 128
      },
      "LimitedMaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 25
      },
      "NextToken": {
        "type": "string",
        "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$",
        "description": "(Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.",
        "minLength": 1,
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://fsx.us-east-1.amazonaws.com/#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeDataRepositoryAssociations{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Associations**",
            "**NextToken**: (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
