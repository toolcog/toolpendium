{
  "name": "CreateDataRepositoryTask",
  "description": "Creates an Amazon FSx for Lustre data repository task. You use data repository tasks to perform bulk operations between your Amazon FSx file system and its linked data repositories. An example of a data repository task is exporting any data and metadata changes, including POSIX metadata, to files, directories, and symbolic links (symlinks) from your FSx file system to a linked data repository. A <code>CreateDataRepositoryTask</code> operation will fail if a data repository is not linked to the FSx file system. To learn more about data repository tasks, see <a href=\"https://docs.aws.amazon.com/fsx/latest/LustreGuide/data-repository-tasks.html\">Data Repository Tasks</a>. To learn more about linking a data repository to your file system, see <a href=\"https://docs.aws.amazon.com/fsx/latest/LustreGuide/create-dra-linked-data-repo.html\">Linking your file system to an S3 bucket</a>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSSimbaAPIService_v20180301.CreateDataRepositoryTask"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateDataRepositoryTaskRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateDataRepositoryTaskRequest": {
        "type": "object",
        "required": [
          "Type",
          "FileSystemId",
          "Report"
        ],
        "title": "CreateDataRepositoryTaskRequest",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/DataRepositoryTaskType"
              },
              {
                "description": "Specifies the type of data repository task to create."
              }
            ]
          },
          "Paths": {
            "allOf": [
              {
                "$ref": "#/$defs/DataRepositoryTaskPaths"
              },
              {
                "description": "<p>A list of paths for the data repository task to use when the task is processed. If a path that you provide isn't valid, the task fails.</p> <ul> <li> <p>For export tasks, the list contains paths on the Amazon FSx file system from which the files are exported to the Amazon S3 bucket. The default path is the file system root directory. The paths you provide need to be relative to the mount point of the file system. If the mount point is <code>/mnt/fsx</code> and <code>/mnt/fsx/path1</code> is a directory or file on the file system you want to export, then the path to provide is <code>path1</code>.</p> </li> <li> <p>For import tasks, the list contains paths in the Amazon S3 bucket from which POSIX metadata changes are imported to the Amazon FSx file system. The path can be an S3 bucket or prefix in the format <code>s3://myBucket/myPrefix</code> (where <code>myPrefix</code> is optional).</p> </li> </ul>"
              }
            ]
          },
          "FileSystemId": {
            "$ref": "#/$defs/FileSystemId"
          },
          "Report": {
            "allOf": [
              {
                "$ref": "#/$defs/CompletionReport"
              },
              {
                "description": "Defines whether or not Amazon FSx provides a CompletionReport once the task has completed. A CompletionReport provides a detailed report on the files that Amazon FSx processed that meet the criteria specified by the <code>Scope</code> parameter. For more information, see <a href=\"https://docs.aws.amazon.com/fsx/latest/LustreGuide/task-completion-report.html\">Working with Task Completion Reports</a>."
              }
            ]
          },
          "ClientRequestToken": {
            "$ref": "#/$defs/ClientRequestToken"
          },
          "Tags": {
            "$ref": "#/$defs/Tags"
          },
          "CapacityToRelease": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacityToRelease"
              },
              {
                "description": "Specifies the amount of data to release, in GiB, by an Amazon File Cache <code>AUTO_RELEASE_DATA</code> task that automatically releases files from the cache."
              }
            ]
          }
        }
      },
      "DataRepositoryTaskType": {
        "type": "string",
        "enum": [
          "EXPORT_TO_REPOSITORY",
          "IMPORT_METADATA_FROM_REPOSITORY",
          "RELEASE_DATA_FROM_FILESYSTEM",
          "AUTO_RELEASE_DATA"
        ]
      },
      "DataRepositoryTaskPaths": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DataRepositoryTaskPath"
        },
        "maxItems": 100
      },
      "DataRepositoryTaskPath": {
        "type": "string",
        "pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{0,4096}$",
        "minLength": 0,
        "maxLength": 4096
      },
      "FileSystemId": {
        "type": "string",
        "pattern": "^(fs-[0-9a-f]{8,})$",
        "description": "The globally unique ID of the file system, assigned by Amazon FSx.",
        "minLength": 11,
        "maxLength": 21
      },
      "CompletionReport": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Flag"
              },
              {
                "description": "Set <code>Enabled</code> to <code>True</code> to generate a <code>CompletionReport</code> when the task completes. If set to <code>true</code>, then you need to provide a report <code>Scope</code>, <code>Path</code>, and <code>Format</code>. Set <code>Enabled</code> to <code>False</code> if you do not want a <code>CompletionReport</code> generated when the task completes."
              }
            ]
          },
          "Path": {
            "allOf": [
              {
                "$ref": "#/$defs/ArchivePath"
              },
              {
                "description": "Required if <code>Enabled</code> is set to <code>true</code>. Specifies the location of the report on the file system's linked S3 data repository. An absolute path that defines where the completion report will be stored in the destination location. The <code>Path</code> you provide must be located within the file systemâ€™s ExportPath. An example <code>Path</code> value is \"s3://myBucket/myExportPath/optionalPrefix\". The report provides the following information for each file in the report: FilePath, FileStatus, and ErrorCode."
              }
            ]
          },
          "Format": {
            "allOf": [
              {
                "$ref": "#/$defs/ReportFormat"
              },
              {
                "description": "Required if <code>Enabled</code> is set to <code>true</code>. Specifies the format of the <code>CompletionReport</code>. <code>REPORT_CSV_20191124</code> is the only format currently supported. When <code>Format</code> is set to <code>REPORT_CSV_20191124</code>, the <code>CompletionReport</code> is provided in CSV format, and is delivered to <code>{path}/task-{id}/failures.csv</code>. "
              }
            ]
          },
          "Scope": {
            "allOf": [
              {
                "$ref": "#/$defs/ReportScope"
              },
              {
                "description": "Required if <code>Enabled</code> is set to <code>true</code>. Specifies the scope of the <code>CompletionReport</code>; <code>FAILED_FILES_ONLY</code> is the only scope currently supported. When <code>Scope</code> is set to <code>FAILED_FILES_ONLY</code>, the <code>CompletionReport</code> only contains information about files that the data repository task failed to process."
              }
            ]
          }
        },
        "description": "Provides a report detailing the data repository task results of the files processed that match the criteria specified in the report <code>Scope</code> parameter. FSx delivers the report to the file system's linked data repository in Amazon S3, using the path specified in the report <code>Path</code> parameter. You can specify whether or not a report gets generated for a task using the <code>Enabled</code> parameter."
      },
      "Flag": {
        "type": "boolean"
      },
      "ArchivePath": {
        "type": "string",
        "pattern": "^[^\\u0000\\u0085\\u2028\\u2029\\r\\n]{3,4357}$",
        "minLength": 3,
        "maxLength": 4357
      },
      "ReportFormat": {
        "type": "string",
        "enum": [
          "REPORT_CSV_20191124"
        ]
      },
      "ReportScope": {
        "type": "string",
        "enum": [
          "FAILED_FILES_ONLY"
        ]
      },
      "ClientRequestToken": {
        "type": "string",
        "pattern": "[A-za-z0-9_.-]{0,63}$",
        "description": "(Optional) An idempotency token for resource creation, in a string of up to 63 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.",
        "minLength": 1,
        "maxLength": 63
      },
      "Tags": {
        "type": "array",
        "description": "A list of <code>Tag</code> values, with a maximum of 50 elements.",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "A value that specifies the <code>TagKey</code>, the name of the tag. Tag keys must be unique for the resource to which they are attached."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "A value that specifies the <code>TagValue</code>, the value assigned to the corresponding tag key. Tag values can be null and don't have to be unique in a tag set. For example, you can have a key-value pair in a tag set of <code>finances : April</code> and also of <code>payroll : April</code>."
              }
            ]
          }
        },
        "description": "Specifies a key-value pair for a resource tag."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "description": "A string of 1 to 128 characters that specifies the key for a tag. Tag keys must be unique for the resource to which they are attached.",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "description": "A string of 0 to 256 characters that specifies the value for a tag. Tag values can be null and don't have to be unique in a tag set.",
        "minLength": 0,
        "maxLength": 256
      },
      "CapacityToRelease": {
        "type": "integer",
        "minimum": 1,
        "maximum": 2147483647
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://fsx.us-east-1.amazonaws.com/#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateDataRepositoryTask"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**DataRepositoryTask**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
