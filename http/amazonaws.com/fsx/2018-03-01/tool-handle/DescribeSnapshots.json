{
  "name": "DescribeSnapshots",
  "description": "<p>Returns the description of specific Amazon FSx for OpenZFS snapshots, if a <code>SnapshotIds</code> value is provided. Otherwise, this operation returns all snapshots owned by your Amazon Web Services account in the Amazon Web Services Region of the endpoint that you're calling.</p> <p>When retrieving all snapshots, you can optionally specify the <code>MaxResults</code> parameter to limit the number of snapshots in a response. If more backups remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response. </p> <p>Use this operation in an iterative process to retrieve a list of your snapshots. <code>DescribeSnapshots</code> is called first without a <code>NextToken</code> value. Then the operation continues to be called with the <code>NextToken</code> parameter set to the value of the last <code>NextToken</code> value until a response has no <code>NextToken</code> value.</p> <p>When using this operation, keep the following in mind:</p> <ul> <li> <p>The operation might return fewer than the <code>MaxResults</code> value of snapshot descriptions while still including a <code>NextToken</code> value.</p> </li> <li> <p>The order of snapshots returned in the response of one <code>DescribeSnapshots</code> call and the order of backups returned across the responses of a multi-call iteration is unspecified. </p> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSSimbaAPIService_v20180301.DescribeSnapshots"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeSnapshotsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeSnapshotsRequest": {
        "type": "object",
        "title": "DescribeSnapshotsRequest",
        "properties": {
          "SnapshotIds": {
            "allOf": [
              {
                "$ref": "#/$defs/SnapshotIds"
              },
              {
                "description": "The IDs of the snapshots that you want to retrieve. This parameter value overrides any filters. If any IDs aren't found, a <code>SnapshotNotFound</code> error occurs."
              }
            ]
          },
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/SnapshotFilters"
              },
              {
                "description": "The filters structure. The supported names are <code>file-system-id</code> or <code>volume-id</code>."
              }
            ]
          },
          "MaxResults": {
            "$ref": "#/$defs/MaxResults"
          },
          "NextToken": {
            "$ref": "#/$defs/NextToken"
          }
        }
      },
      "SnapshotIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SnapshotId"
        },
        "maxItems": 50
      },
      "SnapshotId": {
        "type": "string",
        "pattern": "^((fs)?volsnap-[0-9a-f]{8,})$",
        "minLength": 11,
        "maxLength": 28
      },
      "SnapshotFilters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SnapshotFilter"
        },
        "maxItems": 2
      },
      "SnapshotFilter": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/SnapshotFilterName"
              },
              {
                "description": "The name of the filter to use. You can filter by the <code>file-system-id</code> or by <code>volume-id</code>."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/SnapshotFilterValues"
              },
              {
                "description": "The <code>file-system-id</code> or <code>volume-id</code> that you are filtering for."
              }
            ]
          }
        },
        "description": "A filter used to restrict the results of <code>DescribeSnapshots</code> calls. You can use multiple filters to return results that meet all applied filter requirements."
      },
      "SnapshotFilterName": {
        "type": "string",
        "enum": [
          "file-system-id",
          "volume-id"
        ]
      },
      "SnapshotFilterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SnapshotFilterValue"
        },
        "maxItems": 20
      },
      "SnapshotFilterValue": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z\\*\\.\\\\/\\?\\-\\_]*$",
        "minLength": 1,
        "maxLength": 128
      },
      "MaxResults": {
        "type": "integer",
        "description": "The maximum number of resources to return in the response. This value must be an integer greater than zero.",
        "minimum": 1,
        "maximum": 2147483647
      },
      "NextToken": {
        "type": "string",
        "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$",
        "description": "(Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.",
        "minLength": 1,
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://fsx.us-east-1.amazonaws.com/#X-Amz-Target=AWSSimbaAPIService_v20180301.DescribeSnapshots{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Snapshots**",
            "**NextToken**: (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
