{
  "name": "UpdateLaunchConfigurationTemplate",
  "description": "Updates an existing Launch Configuration Template by ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "launchConfigurationTemplateID"
        ],
        "properties": {
          "associatePublicIpAddress": {
            "description": "Associate public Ip address.",
            "type": "boolean"
          },
          "bootMode": {
            "description": "Launch configuration template boot mode.",
            "type": "string",
            "enum": [
              "LEGACY_BIOS",
              "UEFI"
            ]
          },
          "copyPrivateIp": {
            "description": "Copy private Ip.",
            "type": "boolean"
          },
          "copyTags": {
            "description": "Copy tags.",
            "type": "boolean"
          },
          "enableMapAutoTagging": {
            "description": "Enable map auto tagging.",
            "type": "boolean"
          },
          "largeVolumeConf": {
            "description": "Launch template disk configuration.",
            "type": "object",
            "properties": {
              "iops": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Iops"
                  },
                  {
                    "description": "Launch template disk iops configuration."
                  }
                ]
              },
              "throughput": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Throughput"
                  },
                  {
                    "description": "Launch template disk throughput configuration."
                  }
                ]
              },
              "volumeType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VolumeType"
                  },
                  {
                    "description": "Launch template disk volume type configuration."
                  }
                ]
              }
            }
          },
          "launchConfigurationTemplateID": {
            "description": "Launch Configuration Template ID.",
            "type": "string",
            "pattern": "^lct-[0-9a-zA-Z]{17}$",
            "minLength": 21,
            "maxLength": 21
          },
          "launchDisposition": {
            "description": "Launch disposition.",
            "type": "string",
            "enum": [
              "STOPPED",
              "STARTED"
            ]
          },
          "licensing": {
            "description": "Configure Licensing.",
            "type": "object",
            "properties": {
              "osByol": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Boolean"
                  },
                  {
                    "description": "Configure BYOL OS licensing."
                  }
                ]
              }
            }
          },
          "mapAutoTaggingMpeID": {
            "description": "Launch configuration template map auto tagging MPE ID.",
            "type": "string",
            "minLength": 0,
            "maxLength": 256
          },
          "postLaunchActions": {
            "description": "Post Launch Actions to executed on the Test or Cutover instance.",
            "type": "object",
            "properties": {
              "cloudWatchLogGroupName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CloudWatchLogGroupName"
                  },
                  {
                    "description": "AWS Systems Manager Command's CloudWatch log group name."
                  }
                ]
              },
              "deployment": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PostLaunchActionsDeploymentType"
                  },
                  {
                    "description": "Deployment type in which AWS Systems Manager Documents will be executed."
                  }
                ]
              },
              "s3LogBucket": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3LogBucketName"
                  },
                  {
                    "description": "AWS Systems Manager Command's logs S3 log bucket."
                  }
                ]
              },
              "s3OutputKeyPrefix": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BoundedString"
                  },
                  {
                    "description": "AWS Systems Manager Command's logs S3 output key prefix."
                  }
                ]
              },
              "ssmDocuments": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SsmDocuments"
                  },
                  {
                    "description": "AWS Systems Manager Documents."
                  }
                ]
              }
            }
          },
          "smallVolumeConf": {
            "description": "Launch template disk configuration.",
            "type": "object",
            "properties": {
              "iops": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Iops"
                  },
                  {
                    "description": "Launch template disk iops configuration."
                  }
                ]
              },
              "throughput": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Throughput"
                  },
                  {
                    "description": "Launch template disk throughput configuration."
                  }
                ]
              },
              "volumeType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VolumeType"
                  },
                  {
                    "description": "Launch template disk volume type configuration."
                  }
                ]
              }
            }
          },
          "smallVolumeMaxSize": {
            "description": "Small volume maximum size.",
            "type": "integer",
            "minimum": 0
          },
          "targetInstanceTypeRightSizingMethod": {
            "description": "Target instance type right-sizing method.",
            "type": "string",
            "enum": [
              "NONE",
              "BASIC"
            ]
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Iops": {
        "type": "integer",
        "minimum": 100,
        "maximum": 64000
      },
      "Throughput": {
        "type": "integer",
        "minimum": 125,
        "maximum": 1000
      },
      "VolumeType": {
        "type": "string",
        "enum": [
          "io1",
          "io2",
          "gp3",
          "gp2",
          "st1",
          "sc1",
          "standard"
        ]
      },
      "Boolean": {
        "type": "boolean"
      },
      "CloudWatchLogGroupName": {
        "type": "string",
        "pattern": "^[\\.\\-_/#A-Za-z0-9]+$",
        "minLength": 1,
        "maxLength": 512
      },
      "PostLaunchActionsDeploymentType": {
        "type": "string",
        "enum": [
          "TEST_AND_CUTOVER",
          "CUTOVER_ONLY",
          "TEST_ONLY"
        ]
      },
      "S3LogBucketName": {
        "type": "string",
        "minLength": 3,
        "maxLength": 63
      },
      "BoundedString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "SsmDocuments": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SsmDocument"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "SsmDocument": {
        "type": "object",
        "required": [
          "actionName",
          "ssmDocumentName"
        ],
        "properties": {
          "actionName": {
            "allOf": [
              {
                "$ref": "#/$defs/BoundedString"
              },
              {
                "description": "User-friendly name for the AWS Systems Manager Document."
              }
            ]
          },
          "externalParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmDocumentExternalParameters"
              },
              {
                "description": "AWS Systems Manager Document external parameters."
              }
            ]
          },
          "mustSucceedForCutover": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "If true, Cutover will not be enabled if the document has failed."
              }
            ]
          },
          "parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmDocumentParameters"
              },
              {
                "description": "AWS Systems Manager Document parameters."
              }
            ]
          },
          "ssmDocumentName": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmDocumentName"
              },
              {
                "description": "AWS Systems Manager Document name or full ARN."
              }
            ]
          },
          "timeoutSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/StrictlyPositiveInteger"
              },
              {
                "description": "AWS Systems Manager Document timeout seconds."
              }
            ]
          }
        },
        "description": "AWS Systems Manager Document."
      },
      "SsmDocumentExternalParameters": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 20,
        "additionalProperties": {
          "$ref": "#/$defs/SsmExternalParameter"
        }
      },
      "SsmExternalParameter": {
        "type": "object",
        "properties": {
          "dynamicPath": {
            "allOf": [
              {
                "$ref": "#/$defs/JmesPathString"
              },
              {
                "description": "AWS Systems Manager Document external parameters dynamic path."
              }
            ]
          }
        },
        "description": "AWS Systems Manager Document external parameter."
      },
      "JmesPathString": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_]+(\\.[a-zA-Z0-9_\\[\\]]+)*$",
        "minLength": 1,
        "maxLength": 1011
      },
      "SsmDocumentParameters": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 20,
        "additionalProperties": {
          "$ref": "#/$defs/SsmParameterStoreParameters"
        }
      },
      "SsmParameterStoreParameters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SsmParameterStoreParameter"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "SsmParameterStoreParameter": {
        "type": "object",
        "required": [
          "parameterName",
          "parameterType"
        ],
        "properties": {
          "parameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmParameterStoreParameterName"
              },
              {
                "description": "AWS Systems Manager Parameter Store parameter name."
              }
            ]
          },
          "parameterType": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmParameterStoreParameterType"
              },
              {
                "description": "AWS Systems Manager Parameter Store parameter type."
              }
            ]
          }
        },
        "description": "AWS Systems Manager Parameter Store parameter."
      },
      "SsmParameterStoreParameterName": {
        "type": "string",
        "pattern": "^([A-Za-z0-9_\\.-])+$",
        "minLength": 1,
        "maxLength": 1011
      },
      "SsmParameterStoreParameterType": {
        "type": "string",
        "enum": [
          "STRING"
        ]
      },
      "SsmDocumentName": {
        "type": "string",
        "pattern": "^([A-Za-z0-9/:_\\.-])+$",
        "minLength": 3,
        "maxLength": 172
      },
      "StrictlyPositiveInteger": {
        "type": "integer",
        "minimum": 1
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://mgn.us-east-1.amazonaws.com/UpdateLaunchConfigurationTemplate"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**arn**",
            "**associatePublicIpAddress**",
            "**bootMode**",
            "**copyPrivateIp**",
            "**copyTags**",
            "**ec2LaunchTemplateID**",
            "**enableMapAutoTagging**",
            "**largeVolumeConf**",
            "**launchConfigurationTemplateID**",
            "**launchDisposition**",
            [
              "**licensing**: Configure Licensing.",
              {
                "$ul": [
                  "**osByol**"
                ]
              }
            ],
            "**mapAutoTaggingMpeID**",
            "**postLaunchActions**",
            "**smallVolumeConf**",
            "**smallVolumeMaxSize**",
            "**tags**",
            "**targetInstanceTypeRightSizingMethod**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
