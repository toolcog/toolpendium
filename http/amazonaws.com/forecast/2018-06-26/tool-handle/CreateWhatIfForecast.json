{
  "name": "CreateWhatIfForecast",
  "description": "A what-if forecast is a forecast that is created from a modified version of the baseline forecast. Each what-if forecast incorporates either a replacement dataset or a set of transformations to the original dataset. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonForecast.CreateWhatIfForecast"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateWhatIfForecastRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateWhatIfForecastRequest": {
        "type": "object",
        "required": [
          "WhatIfForecastName",
          "WhatIfAnalysisArn"
        ],
        "title": "CreateWhatIfForecastRequest",
        "properties": {
          "WhatIfForecastName": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name of the what-if forecast. Names must be unique within each what-if analysis."
              }
            ]
          },
          "WhatIfAnalysisArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the what-if analysis."
              }
            ]
          },
          "TimeSeriesTransformations": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeSeriesTransformations"
              },
              {
                "description": "The transformations that are applied to the baseline time series. Each transformation contains an action and a set of conditions. An action is applied only when all conditions are met. If no conditions are provided, the action is applied to all items."
              }
            ]
          },
          "TimeSeriesReplacementsDataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeSeriesReplacementsDataSource"
              },
              {
                "description": "<p>The replacement time series dataset, which contains the rows that you want to change in the related time series dataset. A replacement time series does not need to contain all rows that are in the baseline related time series. Include only the rows (measure-dimension combinations) that you want to include in the what-if forecast.</p> <p>This dataset is merged with the original time series to create a transformed dataset that is used for the what-if analysis.</p> <p>This dataset should contain the items to modify (such as item_id or workforce_type), any relevant dimensions, the timestamp column, and at least one of the related time series columns. This file should not contain duplicate timestamps for the same time series.</p> <p>Timestamps and item_ids not included in this dataset are not included in the what-if analysis. </p>"
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/Tags"
              },
              {
                "description": "A list of <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/tagging-forecast-resources.html\">tags</a> to apply to the what if forecast."
              }
            ]
          }
        }
      },
      "Name": {
        "type": "string",
        "pattern": "^[a-zA-Z][a-zA-Z0-9_]*",
        "minLength": 1,
        "maxLength": 63
      },
      "Arn": {
        "type": "string",
        "pattern": "arn:([a-z\\d-]+):forecast:.*:.*:.+",
        "maxLength": 256
      },
      "TimeSeriesTransformations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TimeSeriesTransformation"
        },
        "minItems": 0,
        "maxItems": 30
      },
      "TimeSeriesTransformation": {
        "type": "object",
        "properties": {
          "Action": {
            "allOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "description": "An array of actions that define a time series and how it is transformed. These transformations create a new time series that is used for the what-if analysis."
              }
            ]
          },
          "TimeSeriesConditions": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeSeriesConditions"
              },
              {
                "description": "An array of conditions that define which members of the related time series are transformed."
              }
            ]
          }
        },
        "description": "A transformation function is a pair of operations that select and modify the rows in a related time series. You select the rows that you want with a condition operation and you modify the rows with a transformation operation. All conditions are joined with an AND operation, meaning that all conditions must be true for the transformation to be applied. Transformations are applied in the order that they are listed."
      },
      "Action": {
        "type": "object",
        "required": [
          "AttributeName",
          "Operation",
          "Value"
        ],
        "properties": {
          "AttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The related time series that you are modifying. This value is case insensitive."
              }
            ]
          },
          "Operation": {
            "allOf": [
              {
                "$ref": "#/$defs/Operation"
              },
              {
                "description": "<p>The operation that is applied to the provided attribute. Operations include:</p> <ul> <li> <p> <code>ADD</code> - adds <code>Value</code> to all rows of <code>AttributeName</code>.</p> </li> <li> <p> <code>SUBTRACT</code> - subtracts <code>Value</code> from all rows of <code>AttributeName</code>.</p> </li> <li> <p> <code>MULTIPLY</code> - multiplies all rows of <code>AttributeName</code> by <code>Value</code>.</p> </li> <li> <p> <code>DIVIDE</code> - divides all rows of <code>AttributeName</code> by <code>Value</code>.</p> </li> </ul>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The value that is applied for the chosen <code>Operation</code>."
              }
            ]
          }
        },
        "description": "Defines the modifications that you are making to an attribute for a what-if forecast. For example, you can use this operation to create a what-if forecast that investigates a 10% off sale on all shoes. To do this, you specify <code>\"AttributeName\": \"shoes\"</code>, <code>\"Operation\": \"MULTIPLY\"</code>, and <code>\"Value\": \"0.90\"</code>. Pair this operation with the <a>TimeSeriesCondition</a> operation within the <a>CreateWhatIfForecastRequest$TimeSeriesTransformations</a> operation to define a subset of attribute items that are modified."
      },
      "Operation": {
        "type": "string",
        "enum": [
          "ADD",
          "SUBTRACT",
          "MULTIPLY",
          "DIVIDE"
        ]
      },
      "Double": {
        "type": "number",
        "format": "double"
      },
      "TimeSeriesConditions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TimeSeriesCondition"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "TimeSeriesCondition": {
        "type": "object",
        "required": [
          "AttributeName",
          "AttributeValue",
          "Condition"
        ],
        "properties": {
          "AttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The item_id, dimension name, IM name, or timestamp that you are modifying."
              }
            ]
          },
          "AttributeValue": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeValue"
              },
              {
                "description": "The value that is applied for the chosen <code>Condition</code>."
              }
            ]
          },
          "Condition": {
            "allOf": [
              {
                "$ref": "#/$defs/Condition"
              },
              {
                "description": "The condition to apply. Valid values are <code>EQUALS</code>, <code>NOT_EQUALS</code>, <code>LESS_THAN</code> and <code>GREATER_THAN</code>."
              }
            ]
          }
        },
        "description": "Creates a subset of items within an attribute that are modified. For example, you can use this operation to create a subset of items that cost $5 or less. To do this, you specify <code>\"AttributeName\": \"price\"</code>, <code>\"AttributeValue\": \"5\"</code>, and <code>\"Condition\": \"LESS_THAN\"</code>. Pair this operation with the <a>Action</a> operation within the <a>CreateWhatIfForecastRequest$TimeSeriesTransformations</a> operation to define how the attribute is modified."
      },
      "AttributeValue": {
        "type": "string",
        "pattern": ".+",
        "maxLength": 256
      },
      "Condition": {
        "type": "string",
        "enum": [
          "EQUALS",
          "NOT_EQUALS",
          "LESS_THAN",
          "GREATER_THAN"
        ]
      },
      "TimeSeriesReplacementsDataSource": {
        "type": "object",
        "required": [
          "S3Config",
          "Schema"
        ],
        "properties": {
          "S3Config": {
            "$ref": "#/$defs/S3Config"
          },
          "Schema": {
            "$ref": "#/$defs/Schema"
          },
          "Format": {
            "allOf": [
              {
                "$ref": "#/$defs/Format"
              },
              {
                "description": "The format of the replacement data, CSV or PARQUET."
              }
            ]
          },
          "TimestampFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampFormat"
              },
              {
                "description": "The timestamp format of the replacement data."
              }
            ]
          }
        },
        "description": "A replacement dataset is a modified version of the baseline related time series that contains only the values that you want to include in a what-if forecast. The replacement dataset must contain the forecast dimensions and item identifiers in the baseline related time series as well as at least 1 changed time series. This dataset is merged with the baseline related time series to create a transformed dataset that is used for the what-if forecast."
      },
      "S3Config": {
        "type": "object",
        "required": [
          "Path",
          "RoleArn"
        ],
        "properties": {
          "Path": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Path"
              },
              {
                "description": "The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "<p>The ARN of the Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the <code>KMSKeyArn</code> key, the role must allow access to the key.</p> <p>Passing a role across Amazon Web Services accounts is not allowed. If you pass a role that isn't in your account, you get an <code>InvalidInputException</code> error.</p>"
              }
            ]
          },
          "KMSKeyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/KMSKeyArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an Key Management Service (KMS) key."
              }
            ]
          }
        },
        "description": "The path to the file(s) in an Amazon Simple Storage Service (Amazon S3) bucket, and an Identity and Access Management (IAM) role that Amazon Forecast can assume to access the file(s). Optionally, includes an Key Management Service (KMS) key. This object is part of the <a>DataSource</a> object that is submitted in the <a>CreateDatasetImportJob</a> request, and part of the <a>DataDestination</a> object."
      },
      "S3Path": {
        "type": "string",
        "pattern": "^s3://[a-z0-9].+$",
        "minLength": 7,
        "maxLength": 4096
      },
      "KMSKeyArn": {
        "type": "string",
        "pattern": "arn:aws:kms:.*:key/.*",
        "maxLength": 256
      },
      "Schema": {
        "type": "object",
        "properties": {
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaAttributes"
              },
              {
                "description": "An array of attributes specifying the name and type of each field in a dataset."
              }
            ]
          }
        },
        "description": "Defines the fields of a dataset."
      },
      "SchemaAttributes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SchemaAttribute"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "SchemaAttribute": {
        "type": "object",
        "properties": {
          "AttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name of the dataset field."
              }
            ]
          },
          "AttributeType": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeType"
              },
              {
                "description": "<p>The data type of the field.</p> <p>For a related time series dataset, other than date, item_id, and forecast dimensions attributes, all attributes should be of numerical type (integer/float).</p>"
              }
            ]
          }
        },
        "description": "An attribute of a schema, which defines a dataset field. A schema attribute is required for every field in a dataset. The <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_Schema.html\">Schema</a> object contains an array of <code>SchemaAttribute</code> objects."
      },
      "AttributeType": {
        "type": "string",
        "enum": [
          "string",
          "integer",
          "float",
          "timestamp",
          "geolocation"
        ]
      },
      "Format": {
        "type": "string",
        "pattern": "^CSV|PARQUET$",
        "maxLength": 7
      },
      "TimestampFormat": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\-\\:\\.\\,\\'\\s]+$",
        "maxLength": 256
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "One part of a key-value pair that makes up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The optional part of a key-value pair that makes up a tag. A <code>value</code> acts as a descriptor within a tag category (key)."
              }
            ]
          }
        },
        "description": "<p>The optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p> <p>The following basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number of tags per resource - 50.</p> </li> <li> <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p> </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p> </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p> </li> <li> <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for keys as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code> as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code> do not count against your tags per resource limit.</p> </li> </ul>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256,
        "format": "password"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://forecast.us-east-1.amazonaws.com/#X-Amz-Target=AmazonForecast.CreateWhatIfForecast"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**WhatIfForecastArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
