{
  "name": "CreateDatasetImportJob",
  "description": "<p>Imports your training data to an Amazon Forecast dataset. You provide the location of your training data in an Amazon Simple Storage Service (Amazon S3) bucket and the Amazon Resource Name (ARN) of the dataset that you want to import the data to.</p> <p>You must specify a <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_DataSource.html\">DataSource</a> object that includes an Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data, as Amazon Forecast makes a copy of your data and processes it in an internal Amazon Web Services system. For more information, see <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/aws-forecast-iam-roles.html\">Set up permissions</a>.</p> <p>The training data must be in CSV or Parquet format. The delimiter must be a comma (,).</p> <p>You can specify the path to a specific file, the S3 bucket, or to a folder in the S3 bucket. For the latter two cases, Amazon Forecast imports all files up to the limit of 10,000 files.</p> <p>Because dataset imports are not aggregated, your most recent dataset import is the one that is used when training a predictor or generating a forecast. Make sure that your most recent dataset import contains all of the data you want to model off of, and not just the new data collected since the previous import.</p> <p>To get a list of all your dataset import jobs, filtered by specified criteria, use the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_ListDatasetImportJobs.html\">ListDatasetImportJobs</a> operation.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonForecast.CreateDatasetImportJob"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateDatasetImportJobRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateDatasetImportJobRequest": {
        "type": "object",
        "required": [
          "DatasetImportJobName",
          "DatasetArn",
          "DataSource"
        ],
        "title": "CreateDatasetImportJobRequest",
        "properties": {
          "DatasetImportJobName": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name for the dataset import job. We recommend including the current timestamp in the name, for example, <code>20190721DatasetImport</code>. This can help you avoid getting a <code>ResourceAlreadyExistsException</code> exception."
              }
            ]
          },
          "DatasetArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon Forecast dataset that you want to import data to."
              }
            ]
          },
          "DataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSource"
              },
              {
                "description": "<p>The location of the training data to import and an Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data. The training data must be stored in an Amazon S3 bucket.</p> <p>If encryption is used, <code>DataSource</code> must include an Key Management Service (KMS) key and the IAM role must allow Amazon Forecast permission to access the key. The KMS key and IAM role must match those specified in the <code>EncryptionConfig</code> parameter of the <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDataset.html\">CreateDataset</a> operation.</p>"
              }
            ]
          },
          "TimestampFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampFormat"
              },
              {
                "description": "<p>The format of timestamps in the dataset. The format that you specify depends on the <code>DataFrequency</code> specified when the dataset was created. The following formats are supported</p> <ul> <li> <p>\"yyyy-MM-dd\"</p> <p>For the following data frequencies: Y, M, W, and D</p> </li> <li> <p>\"yyyy-MM-dd HH:mm:ss\"</p> <p>For the following data frequencies: H, 30min, 15min, and 1min; and optionally, for: Y, M, W, and D</p> </li> </ul> <p>If the format isn't specified, Amazon Forecast expects the format to be \"yyyy-MM-dd HH:mm:ss\".</p>"
              }
            ]
          },
          "TimeZone": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeZone"
              },
              {
                "description": "<p>A single time zone for every item in your dataset. This option is ideal for datasets with all timestamps within a single time zone, or if all timestamps are normalized to a single time zone. </p> <p>Refer to the <a href=\"http://joda-time.sourceforge.net/timezones.html\">Joda-Time API</a> for a complete list of valid time zone names.</p>"
              }
            ]
          },
          "UseGeolocationForTimeZone": {
            "allOf": [
              {
                "$ref": "#/$defs/UseGeolocationForTimeZone"
              },
              {
                "description": "Automatically derive time zone information from the geolocation attribute. This option is ideal for datasets that contain timestamps in multiple time zones and those timestamps are expressed in local time."
              }
            ]
          },
          "GeolocationFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/GeolocationFormat"
              },
              {
                "description": "<p>The format of the geolocation attribute. The geolocation attribute can be formatted in one of two ways:</p> <ul> <li> <p> <code>LAT_LONG</code> - the latitude and longitude in decimal format (Example: 47.61_-122.33).</p> </li> <li> <p> <code>CC_POSTALCODE</code> (US Only) - the country code (US), followed by the 5-digit ZIP code (Example: US_98121).</p> </li> </ul>"
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/Tags"
              },
              {
                "description": "<p>The optional metadata that you apply to the dataset import job to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p> <p>The following basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number of tags per resource - 50.</p> </li> <li> <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p> </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p> </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p> </li> <li> <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for keys as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code> as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code> do not count against your tags per resource limit.</p> </li> </ul>"
              }
            ]
          },
          "Format": {
            "allOf": [
              {
                "$ref": "#/$defs/Format"
              },
              {
                "description": "The format of the imported data, CSV or PARQUET. The default value is CSV."
              }
            ]
          },
          "ImportMode": {
            "allOf": [
              {
                "$ref": "#/$defs/ImportMode"
              },
              {
                "description": "Specifies whether the dataset import job is a <code>FULL</code> or <code>INCREMENTAL</code> import. A <code>FULL</code> dataset import replaces all of the existing data with the newly imported data. An <code>INCREMENTAL</code> import appends the imported data to the existing data."
              }
            ]
          }
        }
      },
      "Name": {
        "type": "string",
        "pattern": "^[a-zA-Z][a-zA-Z0-9_]*",
        "minLength": 1,
        "maxLength": 63
      },
      "Arn": {
        "type": "string",
        "pattern": "arn:([a-z\\d-]+):forecast:.*:.*:.+",
        "maxLength": 256
      },
      "DataSource": {
        "type": "object",
        "required": [
          "S3Config"
        ],
        "properties": {
          "S3Config": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Config"
              },
              {
                "description": "The path to the data stored in an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the data."
              }
            ]
          }
        },
        "description": "The source of your data, an Identity and Access Management (IAM) role that allows Amazon Forecast to access the data and, optionally, an Key Management Service (KMS) key."
      },
      "S3Config": {
        "type": "object",
        "required": [
          "Path",
          "RoleArn"
        ],
        "properties": {
          "Path": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Path"
              },
              {
                "description": "The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "<p>The ARN of the Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the <code>KMSKeyArn</code> key, the role must allow access to the key.</p> <p>Passing a role across Amazon Web Services accounts is not allowed. If you pass a role that isn't in your account, you get an <code>InvalidInputException</code> error.</p>"
              }
            ]
          },
          "KMSKeyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/KMSKeyArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an Key Management Service (KMS) key."
              }
            ]
          }
        },
        "description": "The path to the file(s) in an Amazon Simple Storage Service (Amazon S3) bucket, and an Identity and Access Management (IAM) role that Amazon Forecast can assume to access the file(s). Optionally, includes an Key Management Service (KMS) key. This object is part of the <a>DataSource</a> object that is submitted in the <a>CreateDatasetImportJob</a> request, and part of the <a>DataDestination</a> object."
      },
      "S3Path": {
        "type": "string",
        "pattern": "^s3://[a-z0-9].+$",
        "minLength": 7,
        "maxLength": 4096
      },
      "KMSKeyArn": {
        "type": "string",
        "pattern": "arn:aws:kms:.*:key/.*",
        "maxLength": 256
      },
      "TimestampFormat": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\-\\:\\.\\,\\'\\s]+$",
        "maxLength": 256
      },
      "TimeZone": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\/\\+\\-\\_]+$",
        "maxLength": 256
      },
      "UseGeolocationForTimeZone": {
        "type": "boolean"
      },
      "GeolocationFormat": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_]+$",
        "maxLength": 256
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "One part of a key-value pair that makes up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The optional part of a key-value pair that makes up a tag. A <code>value</code> acts as a descriptor within a tag category (key)."
              }
            ]
          }
        },
        "description": "<p>The optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p> <p>The following basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number of tags per resource - 50.</p> </li> <li> <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p> </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p> </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p> </li> <li> <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for keys as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code> as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code> do not count against your tags per resource limit.</p> </li> </ul>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256,
        "format": "password"
      },
      "Format": {
        "type": "string",
        "pattern": "^CSV|PARQUET$",
        "maxLength": 7
      },
      "ImportMode": {
        "type": "string",
        "enum": [
          "FULL",
          "INCREMENTAL"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://forecast.us-east-1.amazonaws.com/#X-Amz-Target=AmazonForecast.CreateDatasetImportJob"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**DatasetImportJobArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
