{
  "name": "CreateForecast",
  "description": "<p>Creates a forecast for each item in the <code>TARGET_TIME_SERIES</code> dataset that was used to train the predictor. This is known as inference. To retrieve the forecast for a single item at low latency, use the operation. To export the complete forecast into your Amazon Simple Storage Service (Amazon S3) bucket, use the <a>CreateForecastExportJob</a> operation.</p> <p>The range of the forecast is determined by the <code>ForecastHorizon</code> value, which you specify in the <a>CreatePredictor</a> request. When you query a forecast, you can request a specific date range within the forecast.</p> <p>To get a list of all your forecasts, use the <a>ListForecasts</a> operation.</p> <note> <p>The forecasts generated by Amazon Forecast are in the same time zone as the dataset that was used to create the predictor.</p> </note> <p>For more information, see <a>howitworks-forecast</a>.</p> <note> <p>The <code>Status</code> of the forecast must be <code>ACTIVE</code> before you can query or export the forecast. Use the <a>DescribeForecast</a> operation to get the status.</p> </note> <p>By default, a forecast includes predictions for every item (<code>item_id</code>) in the dataset group that was used to train the predictor. However, you can use the <code>TimeSeriesSelector</code> object to generate a forecast on a subset of time series. Forecast creation is skipped for any time series that you specify that are not in the input dataset. The forecast export file will not contain these time series or their forecasted values.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonForecast.CreateForecast"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateForecastRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateForecastRequest": {
        "type": "object",
        "required": [
          "ForecastName",
          "PredictorArn"
        ],
        "title": "CreateForecastRequest",
        "properties": {
          "ForecastName": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "A name for the forecast."
              }
            ]
          },
          "PredictorArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the predictor to use to generate the forecast."
              }
            ]
          },
          "ForecastTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/ForecastTypes"
              },
              {
                "description": "<p>The quantiles at which probabilistic forecasts are generated. <b>You can currently specify up to 5 quantiles per forecast</b>. Accepted values include <code>0.01 to 0.99</code> (increments of .01 only) and <code>mean</code>. The mean forecast is different from the median (0.50) when the distribution is not symmetric (for example, Beta and Negative Binomial). </p> <p>The default quantiles are the quantiles you specified during predictor creation. If you didn't specify quantiles, the default values are <code>[\"0.1\", \"0.5\", \"0.9\"]</code>. </p>"
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/Tags"
              },
              {
                "description": "<p>The optional metadata that you apply to the forecast to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p> <p>The following basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number of tags per resource - 50.</p> </li> <li> <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p> </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p> </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p> </li> <li> <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for keys as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code> as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code> do not count against your tags per resource limit.</p> </li> </ul>"
              }
            ]
          },
          "TimeSeriesSelector": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeSeriesSelector"
              },
              {
                "description": "<p>Defines the set of time series that are used to create the forecasts in a <code>TimeSeriesIdentifiers</code> object.</p> <p>The <code>TimeSeriesIdentifiers</code> object needs the following information:</p> <ul> <li> <p> <code>DataSource</code> </p> </li> <li> <p> <code>Format</code> </p> </li> <li> <p> <code>Schema</code> </p> </li> </ul>"
              }
            ]
          }
        }
      },
      "Name": {
        "type": "string",
        "pattern": "^[a-zA-Z][a-zA-Z0-9_]*",
        "minLength": 1,
        "maxLength": 63
      },
      "Arn": {
        "type": "string",
        "pattern": "arn:([a-z\\d-]+):forecast:.*:.*:.+",
        "maxLength": 256
      },
      "ForecastTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ForecastType"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "ForecastType": {
        "type": "string",
        "pattern": "(^0?\\.\\d\\d?$|^mean$)",
        "minLength": 2,
        "maxLength": 4
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "One part of a key-value pair that makes up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The optional part of a key-value pair that makes up a tag. A <code>value</code> acts as a descriptor within a tag category (key)."
              }
            ]
          }
        },
        "description": "<p>The optional metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p> <p>The following basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number of tags per resource - 50.</p> </li> <li> <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p> </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p> </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p> </li> <li> <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for keys as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code> as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code> do not count against your tags per resource limit.</p> </li> </ul>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256,
        "format": "password"
      },
      "TimeSeriesSelector": {
        "type": "object",
        "properties": {
          "TimeSeriesIdentifiers": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeSeriesIdentifiers"
              },
              {
                "description": "Details about the import file that contains the time series for which you want to create forecasts."
              }
            ]
          }
        },
        "description": "<p>Defines the set of time series that are used to create the forecasts in a <code>TimeSeriesIdentifiers</code> object.</p> <p>The <code>TimeSeriesIdentifiers</code> object needs the following information:</p> <ul> <li> <p> <code>DataSource</code> </p> </li> <li> <p> <code>Format</code> </p> </li> <li> <p> <code>Schema</code> </p> </li> </ul>"
      },
      "TimeSeriesIdentifiers": {
        "type": "object",
        "properties": {
          "DataSource": {
            "$ref": "#/$defs/DataSource"
          },
          "Schema": {
            "$ref": "#/$defs/Schema"
          },
          "Format": {
            "allOf": [
              {
                "$ref": "#/$defs/Format"
              },
              {
                "description": "The format of the data, either CSV or PARQUET."
              }
            ]
          }
        },
        "description": "Details about the import file that contains the time series for which you want to create forecasts."
      },
      "DataSource": {
        "type": "object",
        "required": [
          "S3Config"
        ],
        "properties": {
          "S3Config": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Config"
              },
              {
                "description": "The path to the data stored in an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the data."
              }
            ]
          }
        },
        "description": "The source of your data, an Identity and Access Management (IAM) role that allows Amazon Forecast to access the data and, optionally, an Key Management Service (KMS) key."
      },
      "S3Config": {
        "type": "object",
        "required": [
          "Path",
          "RoleArn"
        ],
        "properties": {
          "Path": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Path"
              },
              {
                "description": "The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "<p>The ARN of the Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the <code>KMSKeyArn</code> key, the role must allow access to the key.</p> <p>Passing a role across Amazon Web Services accounts is not allowed. If you pass a role that isn't in your account, you get an <code>InvalidInputException</code> error.</p>"
              }
            ]
          },
          "KMSKeyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/KMSKeyArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an Key Management Service (KMS) key."
              }
            ]
          }
        },
        "description": "The path to the file(s) in an Amazon Simple Storage Service (Amazon S3) bucket, and an Identity and Access Management (IAM) role that Amazon Forecast can assume to access the file(s). Optionally, includes an Key Management Service (KMS) key. This object is part of the <a>DataSource</a> object that is submitted in the <a>CreateDatasetImportJob</a> request, and part of the <a>DataDestination</a> object."
      },
      "S3Path": {
        "type": "string",
        "pattern": "^s3://[a-z0-9].+$",
        "minLength": 7,
        "maxLength": 4096
      },
      "KMSKeyArn": {
        "type": "string",
        "pattern": "arn:aws:kms:.*:key/.*",
        "maxLength": 256
      },
      "Schema": {
        "type": "object",
        "properties": {
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaAttributes"
              },
              {
                "description": "An array of attributes specifying the name and type of each field in a dataset."
              }
            ]
          }
        },
        "description": "Defines the fields of a dataset."
      },
      "SchemaAttributes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SchemaAttribute"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "SchemaAttribute": {
        "type": "object",
        "properties": {
          "AttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name of the dataset field."
              }
            ]
          },
          "AttributeType": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeType"
              },
              {
                "description": "<p>The data type of the field.</p> <p>For a related time series dataset, other than date, item_id, and forecast dimensions attributes, all attributes should be of numerical type (integer/float).</p>"
              }
            ]
          }
        },
        "description": "An attribute of a schema, which defines a dataset field. A schema attribute is required for every field in a dataset. The <a href=\"https://docs.aws.amazon.com/forecast/latest/dg/API_Schema.html\">Schema</a> object contains an array of <code>SchemaAttribute</code> objects."
      },
      "AttributeType": {
        "type": "string",
        "enum": [
          "string",
          "integer",
          "float",
          "timestamp",
          "geolocation"
        ]
      },
      "Format": {
        "type": "string",
        "pattern": "^CSV|PARQUET$",
        "maxLength": 7
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://forecast.us-east-1.amazonaws.com/#X-Amz-Target=AmazonForecast.CreateForecast"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ForecastArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
