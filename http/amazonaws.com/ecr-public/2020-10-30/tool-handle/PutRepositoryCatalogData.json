{
  "name": "PutRepositoryCatalogData",
  "description": "Creates or updates the catalog data for a repository in a public registry.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "SpencerFrontendService.PutRepositoryCatalogData"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutRepositoryCatalogDataRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutRepositoryCatalogDataRequest": {
        "type": "object",
        "required": [
          "repositoryName",
          "catalogData"
        ],
        "title": "PutRepositoryCatalogDataRequest",
        "properties": {
          "registryId": {
            "allOf": [
              {
                "$ref": "#/$defs/RegistryId"
              },
              {
                "description": "The Amazon Web Services account ID that's associated with the public registry the repository is in. If you do not specify a registry, the default public registry is assumed."
              }
            ]
          },
          "repositoryName": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryName"
              },
              {
                "description": "The name of the repository to create or update the catalog data for."
              }
            ]
          },
          "catalogData": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryCatalogDataInput"
              },
              {
                "description": "An object containing the catalog data for a repository. This data is publicly visible in the Amazon ECR Public Gallery."
              }
            ]
          }
        }
      },
      "RegistryId": {
        "type": "string",
        "pattern": "[0-9]{12}"
      },
      "RepositoryName": {
        "type": "string",
        "pattern": "(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*",
        "minLength": 2,
        "maxLength": 205
      },
      "RepositoryCatalogDataInput": {
        "type": "object",
        "properties": {
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryDescription"
              },
              {
                "description": "A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery."
              }
            ]
          },
          "architectures": {
            "allOf": [
              {
                "$ref": "#/$defs/ArchitectureList"
              },
              {
                "description": "<p>The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures appear as badges on the repository and are used as search filters.</p> <note> <p>If an unsupported tag is added to your repository catalog data, it's associated with the repository and can be retrieved using the API but isn't discoverable in the Amazon ECR Public Gallery.</p> </note> <ul> <li> <p> <code>ARM</code> </p> </li> <li> <p> <code>ARM 64</code> </p> </li> <li> <p> <code>x86</code> </p> </li> <li> <p> <code>x86-64</code> </p> </li> </ul>"
              }
            ]
          },
          "operatingSystems": {
            "allOf": [
              {
                "$ref": "#/$defs/OperatingSystemList"
              },
              {
                "description": "<p>The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems appear as badges on the repository and are used as search filters.</p> <note> <p>If an unsupported tag is added to your repository catalog data, it's associated with the repository and can be retrieved using the API but isn't discoverable in the Amazon ECR Public Gallery.</p> </note> <ul> <li> <p> <code>Linux</code> </p> </li> <li> <p> <code>Windows</code> </p> </li> </ul>"
              }
            ]
          },
          "logoImageBlob": {
            "allOf": [
              {
                "$ref": "#/$defs/LogoImageBlob"
              },
              {
                "description": "<p>The base64-encoded repository logo payload.</p> <note> <p>The repository logo is only publicly visible in the Amazon ECR Public Gallery for verified accounts.</p> </note>"
              }
            ]
          },
          "aboutText": {
            "allOf": [
              {
                "$ref": "#/$defs/AboutText"
              },
              {
                "description": "A detailed description of the contents of the repository. It's publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format."
              }
            ]
          },
          "usageText": {
            "allOf": [
              {
                "$ref": "#/$defs/UsageText"
              },
              {
                "description": "Detailed information about how to use the contents of the repository. It's publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format."
              }
            ]
          }
        },
        "description": "An object that contains the catalog data for a repository. This data is publicly visible in the Amazon ECR Public Gallery."
      },
      "RepositoryDescription": {
        "type": "string",
        "maxLength": 1024
      },
      "ArchitectureList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Architecture"
        },
        "maxItems": 50
      },
      "Architecture": {
        "type": "string",
        "minLength": 1,
        "maxLength": 50
      },
      "OperatingSystemList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OperatingSystem"
        },
        "maxItems": 50
      },
      "OperatingSystem": {
        "type": "string",
        "minLength": 1,
        "maxLength": 50
      },
      "LogoImageBlob": {
        "type": "string",
        "minLength": 0,
        "maxLength": 512000
      },
      "AboutText": {
        "type": "string",
        "maxLength": 25600
      },
      "UsageText": {
        "type": "string",
        "maxLength": 25600
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.ecr-public.us-east-1.amazonaws.com/#X-Amz-Target=SpencerFrontendService.PutRepositoryCatalogData"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**catalogData**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
