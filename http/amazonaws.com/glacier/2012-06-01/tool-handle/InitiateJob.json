{
  "name": "InitiateJob",
  "description": "This operation initiates a job of the specified type, which can be a select, an archival retrieval, or a vault retrieval. For more information about using this operation, see the documentation for the underlying REST API <a href=\"https://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html\">Initiate a Job</a>. ",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID."
      },
      "vaultName": {
        "type": "string",
        "description": "The name of the vault."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "jobParameters": {
            "description": "Provides options for defining a job.",
            "type": "object",
            "properties": {
              "Format": {
                "allOf": [
                  {
                    "$ref": "#/$defs/string"
                  },
                  {
                    "description": "When initiating a job to retrieve a vault inventory, you can optionally add this parameter to your request to specify the output format. If you are initiating an inventory job and do not specify a Format field, JSON is the default format. Valid values are \"CSV\" and \"JSON\"."
                  }
                ]
              },
              "Type": {
                "allOf": [
                  {
                    "$ref": "#/$defs/string"
                  },
                  {
                    "description": "The job type. You can initiate a job to perform a select query on an archive, retrieve an archive, or get an inventory of a vault. Valid values are \"select\", \"archive-retrieval\" and \"inventory-retrieval\"."
                  }
                ]
              },
              "ArchiveId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/string"
                  },
                  {
                    "description": "The ID of the archive that you want to retrieve. This field is required only if <code>Type</code> is set to <code>select</code> or <code>archive-retrieval</code>code&gt;. An error occurs if you specify this request parameter for an inventory retrieval job request. "
                  }
                ]
              },
              "Description": {
                "allOf": [
                  {
                    "$ref": "#/$defs/string"
                  },
                  {
                    "description": "The optional description for the job. The description must be less than or equal to 1,024 bytes. The allowable characters are 7-bit ASCII without control codes-specifically, ASCII values 32-126 decimal or 0x20-0x7E hexadecimal."
                  }
                ]
              },
              "SNSTopic": {
                "allOf": [
                  {
                    "$ref": "#/$defs/string"
                  },
                  {
                    "description": "The Amazon SNS topic ARN to which Amazon S3 Glacier sends a notification when the job is completed and the output is ready for you to download. The specified topic publishes the notification to its subscribers. The SNS topic must exist."
                  }
                ]
              },
              "RetrievalByteRange": {
                "allOf": [
                  {
                    "$ref": "#/$defs/string"
                  },
                  {
                    "description": "<p>The byte range to retrieve for an archive retrieval. in the form \"<i>StartByteValue</i>-<i>EndByteValue</i>\" If not specified, the whole archive is retrieved. If specified, the byte range must be megabyte (1024*1024) aligned which means that <i>StartByteValue</i> must be divisible by 1 MB and <i>EndByteValue</i> plus 1 must be divisible by 1 MB or be the end of the archive specified as the archive byte size value minus 1. If RetrievalByteRange is not megabyte aligned, this operation returns a 400 response. </p> <p>An error occurs if you specify this field for an inventory retrieval job request.</p>"
                  }
                ]
              },
              "Tier": {
                "allOf": [
                  {
                    "$ref": "#/$defs/string"
                  },
                  {
                    "description": "The tier to use for a select or an archive retrieval job. Valid values are <code>Expedited</code>, <code>Standard</code>, or <code>Bulk</code>. <code>Standard</code> is the default."
                  }
                ]
              },
              "InventoryRetrievalParameters": {
                "allOf": [
                  {
                    "$ref": "#/$defs/InventoryRetrievalJobInput"
                  },
                  {
                    "description": "Input parameters used for range inventory retrieval."
                  }
                ]
              },
              "SelectParameters": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SelectParameters"
                  },
                  {
                    "description": "Contains the parameters that define a job."
                  }
                ]
              },
              "OutputLocation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/OutputLocation"
                  },
                  {
                    "description": "Contains information about the location where the select job results are stored."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "accountId",
      "vaultName",
      "body"
    ],
    "$defs": {
      "string": {
        "type": "string"
      },
      "InventoryRetrievalJobInput": {
        "type": "object",
        "properties": {
          "StartDate": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The start of the date range in UTC for vault inventory retrieval that includes archives created on or after this date. This value should be a string in the ISO 8601 date format, for example <code>2013-03-20T17:03:43Z</code>."
              }
            ]
          },
          "EndDate": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The end of the date range in UTC for vault inventory retrieval that includes archives created before this date. This value should be a string in the ISO 8601 date format, for example <code>2013-03-20T17:03:43Z</code>."
              }
            ]
          },
          "Limit": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "Specifies the maximum number of inventory items returned per vault inventory retrieval request. Valid values are greater than or equal to 1."
              }
            ]
          },
          "Marker": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "An opaque string that represents where to continue pagination of the vault inventory retrieval results. You use the marker in a new <b>InitiateJob</b> request to obtain additional inventory items. If there are no more inventory items, this value is <code>null</code>."
              }
            ]
          }
        },
        "description": "Provides options for specifying a range inventory retrieval job."
      },
      "SelectParameters": {
        "type": "object",
        "properties": {
          "InputSerialization": {
            "allOf": [
              {
                "$ref": "#/$defs/InputSerialization"
              },
              {
                "description": "Describes the serialization format of the object."
              }
            ]
          },
          "ExpressionType": {
            "allOf": [
              {
                "$ref": "#/$defs/ExpressionType"
              },
              {
                "description": "The type of the provided expression, for example <code>SQL</code>."
              }
            ]
          },
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The expression that is used to select the object."
              }
            ]
          },
          "OutputSerialization": {
            "allOf": [
              {
                "$ref": "#/$defs/OutputSerialization"
              },
              {
                "description": "Describes how the results of the select job are serialized."
              }
            ]
          }
        },
        "description": "Contains information about the parameters used for a select."
      },
      "InputSerialization": {
        "type": "object",
        "properties": {
          "csv": {
            "allOf": [
              {
                "$ref": "#/$defs/CSVInput"
              },
              {
                "description": "Describes the serialization of a CSV-encoded object."
              }
            ]
          }
        },
        "description": "Describes how the archive is serialized."
      },
      "CSVInput": {
        "type": "object",
        "properties": {
          "FileHeaderInfo": {
            "allOf": [
              {
                "$ref": "#/$defs/FileHeaderInfo"
              },
              {
                "description": "Describes the first line of input. Valid values are <code>None</code>, <code>Ignore</code>, and <code>Use</code>."
              }
            ]
          },
          "Comments": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "A single character used to indicate that a row should be ignored when the character is present at the start of that row."
              }
            ]
          },
          "QuoteEscapeCharacter": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "A single character used for escaping the quotation-mark character inside an already escaped value."
              }
            ]
          },
          "RecordDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "A value used to separate individual records from each other."
              }
            ]
          },
          "FieldDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "A value used to separate individual fields from each other within a record."
              }
            ]
          },
          "QuoteCharacter": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "A value used as an escape character where the field delimiter is part of the value."
              }
            ]
          }
        },
        "description": "Contains information about the comma-separated value (CSV) file to select from."
      },
      "FileHeaderInfo": {
        "type": "string",
        "enum": [
          "USE",
          "IGNORE",
          "NONE"
        ]
      },
      "ExpressionType": {
        "type": "string",
        "enum": [
          "SQL"
        ]
      },
      "OutputSerialization": {
        "type": "object",
        "properties": {
          "csv": {
            "allOf": [
              {
                "$ref": "#/$defs/CSVOutput"
              },
              {
                "description": "Describes the serialization of CSV-encoded query results."
              }
            ]
          }
        },
        "description": "Describes how the select output is serialized."
      },
      "CSVOutput": {
        "type": "object",
        "properties": {
          "QuoteFields": {
            "allOf": [
              {
                "$ref": "#/$defs/QuoteFields"
              },
              {
                "description": "A value that indicates whether all output fields should be contained within quotation marks."
              }
            ]
          },
          "QuoteEscapeCharacter": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "A single character used for escaping the quotation-mark character inside an already escaped value."
              }
            ]
          },
          "RecordDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "A value used to separate individual records from each other."
              }
            ]
          },
          "FieldDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "A value used to separate individual fields from each other within a record."
              }
            ]
          },
          "QuoteCharacter": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "A value used as an escape character where the field delimiter is part of the value."
              }
            ]
          }
        },
        "description": "Contains information about the comma-separated value (CSV) file that the job results are stored in."
      },
      "QuoteFields": {
        "type": "string",
        "enum": [
          "ALWAYS",
          "ASNEEDED"
        ]
      },
      "OutputLocation": {
        "type": "object",
        "properties": {
          "S3": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Location"
              },
              {
                "description": "Describes an S3 location that will receive the results of the job request."
              }
            ]
          }
        },
        "description": "Contains information about the location where the select job results are stored."
      },
      "S3Location": {
        "type": "object",
        "properties": {
          "BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The name of the Amazon S3 bucket where the job results are stored."
              }
            ]
          },
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The prefix that is prepended to the results for this request."
              }
            ]
          },
          "Encryption": {
            "allOf": [
              {
                "$ref": "#/$defs/Encryption"
              },
              {
                "description": "Contains information about the encryption used to store the job results in Amazon S3."
              }
            ]
          },
          "CannedACL": {
            "allOf": [
              {
                "$ref": "#/$defs/CannedACL"
              },
              {
                "description": "The canned access control list (ACL) to apply to the job results."
              }
            ]
          },
          "AccessControlList": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessControlPolicyList"
              },
              {
                "description": "A list of grants that control access to the staged results."
              }
            ]
          },
          "Tagging": {
            "allOf": [
              {
                "$ref": "#/$defs/hashmap"
              },
              {
                "description": "The tag-set that is applied to the job results."
              }
            ]
          },
          "UserMetadata": {
            "allOf": [
              {
                "$ref": "#/$defs/hashmap"
              },
              {
                "description": "A map of metadata to store with the job results in Amazon S3."
              }
            ]
          },
          "StorageClass": {
            "allOf": [
              {
                "$ref": "#/$defs/StorageClass"
              },
              {
                "description": "The storage class used to store the job results."
              }
            ]
          }
        },
        "description": "Contains information about the location in Amazon S3 where the select job results are stored."
      },
      "Encryption": {
        "type": "object",
        "properties": {
          "EncryptionType": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionType"
              },
              {
                "description": "The server-side encryption algorithm used when storing job results in Amazon S3, for example <code>AES256</code> or <code>aws:kms</code>."
              }
            ]
          },
          "KMSKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS fail if not made by using Secure Sockets Layer (SSL) or Signature Version 4. "
              }
            ]
          },
          "KMSContext": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "Optional. If the encryption type is <code>aws:kms</code>, you can use this value to specify the encryption context for the job results."
              }
            ]
          }
        },
        "description": "Contains information about the encryption used to store the job results in Amazon S3. "
      },
      "EncryptionType": {
        "type": "string",
        "enum": [
          "aws:kms",
          "AES256"
        ]
      },
      "CannedACL": {
        "type": "string",
        "enum": [
          "private",
          "public-read",
          "public-read-write",
          "aws-exec-read",
          "authenticated-read",
          "bucket-owner-read",
          "bucket-owner-full-control"
        ]
      },
      "AccessControlPolicyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Grant"
        }
      },
      "Grant": {
        "type": "object",
        "properties": {
          "Grantee": {
            "allOf": [
              {
                "$ref": "#/$defs/Grantee"
              },
              {
                "description": "The grantee."
              }
            ]
          },
          "Permission": {
            "allOf": [
              {
                "$ref": "#/$defs/Permission"
              },
              {
                "description": "Specifies the permission given to the grantee. "
              }
            ]
          }
        },
        "description": "Contains information about a grant."
      },
      "Grantee": {
        "type": "object",
        "required": [
          "Type"
        ],
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/Type"
              },
              {
                "description": "Type of grantee"
              }
            ]
          },
          "DisplayName": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "Screen name of the grantee."
              }
            ]
          },
          "URI": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "URI of the grantee group."
              }
            ]
          },
          "ID": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The canonical user ID of the grantee."
              }
            ]
          },
          "EmailAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "Email address of the grantee."
              }
            ]
          }
        },
        "description": "Contains information about the grantee."
      },
      "Type": {
        "type": "string",
        "enum": [
          "AmazonCustomerByEmail",
          "CanonicalUser",
          "Group"
        ]
      },
      "Permission": {
        "type": "string",
        "enum": [
          "FULL_CONTROL",
          "WRITE",
          "WRITE_ACP",
          "READ",
          "READ_ACP"
        ]
      },
      "hashmap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/string"
        }
      },
      "StorageClass": {
        "type": "string",
        "enum": [
          "STANDARD",
          "REDUCED_REDUNDANCY",
          "STANDARD_IA"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://glacier.us-east-1.amazonaws.com/{accountId}/vaults/{vaultName}/jobs"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains the Amazon S3 Glacier response to your request.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
