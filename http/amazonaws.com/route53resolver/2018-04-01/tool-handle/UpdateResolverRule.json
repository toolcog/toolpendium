{
  "name": "UpdateResolverRule",
  "description": "Updates settings for a specified Resolver rule. <code>ResolverRuleId</code> is required, and all other parameters are optional. If you don't specify a parameter, it retains its current value.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Route53Resolver.UpdateResolverRule"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateResolverRuleRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateResolverRuleRequest": {
        "type": "object",
        "required": [
          "ResolverRuleId",
          "Config"
        ],
        "title": "UpdateResolverRuleRequest",
        "properties": {
          "ResolverRuleId": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceId"
              },
              {
                "description": "The ID of the Resolver rule that you want to update."
              }
            ]
          },
          "Config": {
            "allOf": [
              {
                "$ref": "#/$defs/ResolverRuleConfig"
              },
              {
                "description": "The new settings for the Resolver rule."
              }
            ]
          }
        }
      },
      "ResourceId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64
      },
      "ResolverRuleConfig": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The new name for the Resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. "
              }
            ]
          },
          "TargetIps": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetList"
              },
              {
                "description": "For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to."
              }
            ]
          },
          "ResolverEndpointId": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceId"
              },
              {
                "description": "The ID of the new outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>."
              }
            ]
          }
        },
        "description": "In an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverRule.html\">UpdateResolverRule</a> request, information about the changes that you want to make."
      },
      "Name": {
        "type": "string",
        "pattern": "(?!^[0-9]+$)([a-zA-Z0-9\\-_' ']+)",
        "maxLength": 64
      },
      "TargetList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TargetAddress"
        },
        "minItems": 1
      },
      "TargetAddress": {
        "type": "object",
        "properties": {
          "Ip": {
            "allOf": [
              {
                "$ref": "#/$defs/Ip"
              },
              {
                "description": "One IPv4 address that you want to forward DNS queries to."
              }
            ]
          },
          "Port": {
            "allOf": [
              {
                "$ref": "#/$defs/Port"
              },
              {
                "description": "The port at <code>Ip</code> that you want to forward DNS queries to."
              }
            ]
          },
          "Ipv6": {
            "allOf": [
              {
                "$ref": "#/$defs/Ipv6"
              },
              {
                "description": " One IPv6 address that you want to forward DNS queries to. "
              }
            ]
          }
        },
        "description": "In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html\">CreateResolverRule</a> request, an array of the IPs that you want to forward DNS queries to."
      },
      "Ip": {
        "type": "string",
        "minLength": 7,
        "maxLength": 36
      },
      "Port": {
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      },
      "Ipv6": {
        "type": "string",
        "minLength": 7,
        "maxLength": 39
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://route53resolver.us-east-1.amazonaws.com/#X-Amz-Target=Route53Resolver.UpdateResolverRule"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ResolverRule**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
