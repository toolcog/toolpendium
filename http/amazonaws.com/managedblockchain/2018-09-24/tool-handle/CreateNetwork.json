{
  "name": "CreateNetwork",
  "description": "<p>Creates a new blockchain network using Amazon Managed Blockchain.</p> <p>Applies only to Hyperledger Fabric.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "ClientRequestToken",
          "Name",
          "Framework",
          "FrameworkVersion",
          "VotingPolicy",
          "MemberConfiguration"
        ],
        "properties": {
          "ClientRequestToken": {
            "description": "This is a unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than once. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an Amazon Web Services SDK or the Amazon Web Services CLI. ",
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "Name": {
            "description": "The name of the network.",
            "type": "string",
            "pattern": ".*\\S.*",
            "minLength": 1,
            "maxLength": 64
          },
          "Description": {
            "description": "An optional description for the network.",
            "type": "string",
            "maxLength": 128
          },
          "Framework": {
            "description": "The blockchain framework that the network uses.",
            "type": "string",
            "enum": [
              "HYPERLEDGER_FABRIC",
              "ETHEREUM"
            ]
          },
          "FrameworkVersion": {
            "description": "The version of the blockchain framework that the network uses.",
            "type": "string",
            "minLength": 1,
            "maxLength": 8
          },
          "FrameworkConfiguration": {
            "description": " Configuration properties relevant to the network for the blockchain framework that the network uses. ",
            "type": "object",
            "properties": {
              "Fabric": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NetworkFabricConfiguration"
                  },
                  {
                    "description": " Hyperledger Fabric configuration properties for a Managed Blockchain network that uses Hyperledger Fabric. "
                  }
                ]
              }
            }
          },
          "VotingPolicy": {
            "description": "<p> The voting rules for the network to decide if a proposal is accepted </p> <p>Applies only to Hyperledger Fabric.</p>",
            "type": "object",
            "properties": {
              "ApprovalThresholdPolicy": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ApprovalThresholdPolicy"
                  },
                  {
                    "description": "Defines the rules for the network for voting on proposals, such as the percentage of <code>YES</code> votes required for the proposal to be approved and the duration of the proposal. The policy applies to all proposals and is specified when the network is created."
                  }
                ]
              }
            }
          },
          "MemberConfiguration": {
            "description": "<p>Configuration properties of the member.</p> <p>Applies only to Hyperledger Fabric.</p>",
            "type": "object",
            "properties": {
              "Name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NetworkMemberNameString"
                  },
                  {
                    "description": "The name of the member."
                  }
                ]
              },
              "Description": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DescriptionString"
                  },
                  {
                    "description": "An optional description of the member."
                  }
                ]
              },
              "FrameworkConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MemberFrameworkConfiguration"
                  },
                  {
                    "description": "Configuration properties of the blockchain framework relevant to the member."
                  }
                ]
              },
              "LogPublishingConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MemberLogPublishingConfiguration"
                  },
                  {
                    "description": "Configuration properties for logging events associated with a member of a Managed Blockchain network."
                  }
                ]
              },
              "Tags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/InputTagMap"
                  },
                  {
                    "description": "<p>Tags assigned to the member. Tags consist of a key and optional value. </p> <p>When specifying tags during creation, you can specify multiple key-value pairs in a single request, with an overall maximum of 50 tags added to each resource.</p> <p>For more information about tags, see <a href=\"https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html\">Tagging Resources</a> in the <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or <a href=\"https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html\">Tagging Resources</a> in the <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.</p>"
                  }
                ]
              },
              "KmsKeyArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ArnString"
                  },
                  {
                    "description": "<p>The Amazon Resource Name (ARN) of the customer managed key in Key Management Service (KMS) to use for encryption at rest in the member. This parameter is inherited by any nodes that this member creates. For more information, see <a href=\"https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/managed-blockchain-encryption-at-rest.html\">Encryption at Rest</a> in the <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.</p> <p>Use one of the following options to specify this parameter:</p> <ul> <li> <p> <b>Undefined or empty string</b> - By default, use an KMS key that is owned and managed by Amazon Web Services on your behalf.</p> </li> <li> <p> <b>A valid symmetric customer managed KMS key</b> - Use the specified KMS key in your account that you create, own, and manage.</p> <p>Amazon Managed Blockchain doesn't support asymmetric keys. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using symmetric and asymmetric keys</a> in the <i>Key Management Service Developer Guide</i>.</p> <p>The following is an example of a KMS key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> </ul>"
                  }
                ]
              }
            }
          },
          "Tags": {
            "description": "<p>Tags to assign to the network.</p> <p> Each tag consists of a key and an optional value. You can specify multiple key-value pairs in a single request with an overall maximum of 50 tags allowed per resource.</p> <p>For more information about tags, see <a href=\"https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html\">Tagging Resources</a> in the <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or <a href=\"https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html\">Tagging Resources</a> in the <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.</p>",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "NetworkFabricConfiguration": {
        "type": "object",
        "required": [
          "Edition"
        ],
        "properties": {
          "Edition": {
            "allOf": [
              {
                "$ref": "#/$defs/Edition"
              },
              {
                "description": "The edition of Amazon Managed Blockchain that the network uses. For more information, see <a href=\"http://aws.amazon.com/managed-blockchain/pricing/\">Amazon Managed Blockchain Pricing</a>."
              }
            ]
          }
        },
        "description": "Hyperledger Fabric configuration properties for the network."
      },
      "Edition": {
        "type": "string",
        "enum": [
          "STARTER",
          "STANDARD"
        ]
      },
      "ApprovalThresholdPolicy": {
        "type": "object",
        "properties": {
          "ThresholdPercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/ThresholdPercentageInt"
              },
              {
                "description": "The percentage of votes among all members that must be <code>YES</code> for a proposal to be approved. For example, a <code>ThresholdPercentage</code> value of <code>50</code> indicates 50%. The <code>ThresholdComparator</code> determines the precise comparison. If a <code>ThresholdPercentage</code> value of <code>50</code> is specified on a network with 10 members, along with a <code>ThresholdComparator</code> value of <code>GREATER_THAN</code>, this indicates that 6 <code>YES</code> votes are required for the proposal to be approved."
              }
            ]
          },
          "ProposalDurationInHours": {
            "allOf": [
              {
                "$ref": "#/$defs/ProposalDurationInt"
              },
              {
                "description": "The duration from the time that a proposal is created until it expires. If members cast neither the required number of <code>YES</code> votes to approve the proposal nor the number of <code>NO</code> votes required to reject it before the duration expires, the proposal is <code>EXPIRED</code> and <code>ProposalActions</code> aren't carried out."
              }
            ]
          },
          "ThresholdComparator": {
            "allOf": [
              {
                "$ref": "#/$defs/ThresholdComparator"
              },
              {
                "description": "Determines whether the vote percentage must be greater than the <code>ThresholdPercentage</code> or must be greater than or equal to the <code>ThreholdPercentage</code> to be approved."
              }
            ]
          }
        },
        "description": "<p>A policy type that defines the voting rules for the network. The rules decide if a proposal is approved. Approval may be based on criteria such as the percentage of <code>YES</code> votes and the duration of the proposal. The policy applies to all proposals and is specified when the network is created.</p> <p>Applies only to Hyperledger Fabric.</p>"
      },
      "ThresholdPercentageInt": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100
      },
      "ProposalDurationInt": {
        "type": "integer",
        "minimum": 1,
        "maximum": 168
      },
      "ThresholdComparator": {
        "type": "string",
        "enum": [
          "GREATER_THAN",
          "GREATER_THAN_OR_EQUAL_TO"
        ]
      },
      "NetworkMemberNameString": {
        "type": "string",
        "pattern": "^(?!-|[0-9])(?!.*-$)(?!.*?--)[a-zA-Z0-9-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "DescriptionString": {
        "type": "string",
        "maxLength": 128
      },
      "MemberFrameworkConfiguration": {
        "type": "object",
        "properties": {
          "Fabric": {
            "allOf": [
              {
                "$ref": "#/$defs/MemberFabricConfiguration"
              },
              {
                "description": "Attributes of Hyperledger Fabric for a member on a Managed Blockchain network that uses Hyperledger Fabric."
              }
            ]
          }
        },
        "description": "Configuration properties relevant to a member for the blockchain framework that the Managed Blockchain network uses."
      },
      "MemberFabricConfiguration": {
        "type": "object",
        "required": [
          "AdminUsername",
          "AdminPassword"
        ],
        "properties": {
          "AdminUsername": {
            "allOf": [
              {
                "$ref": "#/$defs/UsernameString"
              },
              {
                "description": "The user name for the member's initial administrative user."
              }
            ]
          },
          "AdminPassword": {
            "allOf": [
              {
                "$ref": "#/$defs/PasswordString"
              },
              {
                "description": "The password for the member's initial administrative user. The <code>AdminPassword</code> must be at least 8 characters long and no more than 32 characters. It must contain at least one uppercase letter, one lowercase letter, and one digit. It cannot have a single quotation mark (‘), a double quotation marks (“), a forward slash(/), a backward slash(\\), @, or a space."
              }
            ]
          }
        },
        "description": "Configuration properties for Hyperledger Fabric for a member in a Managed Blockchain network that is using the Hyperledger Fabric framework."
      },
      "UsernameString": {
        "type": "string",
        "pattern": "^[a-zA-Z][a-zA-Z0-9]*$",
        "minLength": 1,
        "maxLength": 16
      },
      "PasswordString": {
        "type": "string",
        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?!.*[@'\\\\\"/])[a-zA-Z0-9\\S]*$",
        "minLength": 8,
        "maxLength": 32,
        "format": "password"
      },
      "MemberLogPublishingConfiguration": {
        "type": "object",
        "properties": {
          "Fabric": {
            "allOf": [
              {
                "$ref": "#/$defs/MemberFabricLogPublishingConfiguration"
              },
              {
                "description": "Configuration properties for logging events associated with a member of a Managed Blockchain network using the Hyperledger Fabric framework."
              }
            ]
          }
        },
        "description": "Configuration properties for logging events associated with a member of a Managed Blockchain network."
      },
      "MemberFabricLogPublishingConfiguration": {
        "type": "object",
        "properties": {
          "CaLogs": {
            "allOf": [
              {
                "$ref": "#/$defs/LogConfigurations"
              },
              {
                "description": "Configuration properties for logging events associated with a member's Certificate Authority (CA). CA logs help you determine when a member in your account joins the network, or when new peers register with a member CA."
              }
            ]
          }
        },
        "description": "Configuration properties for logging events associated with a member of a Managed Blockchain network using the Hyperledger Fabric framework."
      },
      "LogConfigurations": {
        "type": "object",
        "properties": {
          "Cloudwatch": {
            "allOf": [
              {
                "$ref": "#/$defs/LogConfiguration"
              },
              {
                "description": "Parameters for publishing logs to Amazon CloudWatch Logs."
              }
            ]
          }
        },
        "description": "A collection of log configurations."
      },
      "LogConfiguration": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Enabled"
              },
              {
                "description": "Indicates whether logging is enabled."
              }
            ]
          }
        },
        "description": "A configuration for logging events."
      },
      "Enabled": {
        "type": "boolean"
      },
      "InputTagMap": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/TagValue"
        }
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "ArnString": {
        "type": "string",
        "pattern": "^arn:.+:.+:.+:.+:.+",
        "minLength": 1,
        "maxLength": 1011
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://managedblockchain.us-east-1.amazonaws.com/networks"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NetworkId**",
            "**MemberId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
