{
  "name": "CreateProposal",
  "description": "<p>Creates a proposal for a change to the network that other members of the network can vote on, for example, a proposal to add a new member to the network. Any member can create a proposal.</p> <p>Applies only to Hyperledger Fabric.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "networkId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32,
        "description": " The unique identifier of the network for which the proposal is made."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "ClientRequestToken",
          "MemberId",
          "Actions"
        ],
        "properties": {
          "ClientRequestToken": {
            "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an Amazon Web Services SDK or the CLI.",
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "MemberId": {
            "description": "The unique identifier of the member that is creating the proposal. This identifier is especially useful for identifying the member making the proposal when multiple members exist in a single Amazon Web Services account.",
            "type": "string",
            "minLength": 1,
            "maxLength": 32
          },
          "Actions": {
            "description": "<p> The actions to carry out if a proposal is <code>APPROVED</code>. </p> <p>Applies only to Hyperledger Fabric.</p>",
            "type": "object",
            "properties": {
              "Invitations": {
                "allOf": [
                  {
                    "$ref": "#/$defs/InviteActionList"
                  },
                  {
                    "description": " The actions to perform for an <code>APPROVED</code> proposal to invite an Amazon Web Services account to create a member and join the network. "
                  }
                ]
              },
              "Removals": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RemoveActionList"
                  },
                  {
                    "description": " The actions to perform for an <code>APPROVED</code> proposal to remove a member from the network, which deletes the member and all associated member resources from the network. "
                  }
                ]
              }
            }
          },
          "Description": {
            "description": "A description for the proposal that is visible to voting members, for example, \"Proposal to add Example Corp. as member.\"",
            "type": "string",
            "maxLength": 128
          },
          "Tags": {
            "description": "<p>Tags to assign to the proposal.</p> <p> Each tag consists of a key and an optional value. You can specify multiple key-value pairs in a single request with an overall maximum of 50 tags allowed per resource.</p> <p>For more information about tags, see <a href=\"https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html\">Tagging Resources</a> in the <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or <a href=\"https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html\">Tagging Resources</a> in the <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.</p>",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "networkId",
      "body"
    ],
    "$defs": {
      "InviteActionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InviteAction"
        }
      },
      "InviteAction": {
        "type": "object",
        "required": [
          "Principal"
        ],
        "properties": {
          "Principal": {
            "allOf": [
              {
                "$ref": "#/$defs/PrincipalString"
              },
              {
                "description": "The Amazon Web Services account ID to invite."
              }
            ]
          }
        },
        "description": "<p>An action to invite a specific Amazon Web Services account to create a member and join the network. The <code>InviteAction</code> is carried out when a <code>Proposal</code> is <code>APPROVED</code>.</p> <p>Applies only to Hyperledger Fabric.</p>"
      },
      "PrincipalString": {
        "type": "string"
      },
      "RemoveActionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RemoveAction"
        }
      },
      "RemoveAction": {
        "type": "object",
        "required": [
          "MemberId"
        ],
        "properties": {
          "MemberId": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceIdString"
              },
              {
                "description": "The unique identifier of the member to remove."
              }
            ]
          }
        },
        "description": "<p>An action to remove a member from a Managed Blockchain network as the result of a removal proposal that is <code>APPROVED</code>. The member and all associated resources are deleted from the network.</p> <p>Applies only to Hyperledger Fabric.</p>"
      },
      "ResourceIdString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://managedblockchain.us-east-1.amazonaws.com/networks/{networkId}/proposals"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ProposalId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
