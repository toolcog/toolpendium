{
  "name": "CreateForm",
  "description": "Creates a new form for an Amplify app.",
  "parameters": {
    "type": "object",
    "properties": {
      "appId": {
        "type": "string",
        "description": "The unique ID of the Amplify app to associate with the form."
      },
      "environmentName": {
        "type": "string",
        "description": "The name of the backend environment that is a part of the Amplify app."
      },
      "clientToken": {
        "type": "string",
        "description": "The unique client token."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "formToCreate"
        ],
        "properties": {
          "formToCreate": {
            "description": "Represents all of the information that is required to create a form.",
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FormName"
                  },
                  {
                    "description": "The name of the form."
                  }
                ]
              },
              "dataType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FormDataTypeConfig"
                  },
                  {
                    "description": "The type of data source to use to create the form."
                  }
                ]
              },
              "formActionType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FormActionType"
                  },
                  {
                    "description": "Specifies whether to perform a create or update action on the form."
                  }
                ]
              },
              "fields": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FieldsMap"
                  },
                  {
                    "description": "The configuration information for the form's fields."
                  }
                ]
              },
              "style": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FormStyle"
                  },
                  {
                    "description": "The configuration for the form's style."
                  }
                ]
              },
              "sectionalElements": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SectionalElementMap"
                  },
                  {
                    "description": "The configuration information for the visual helper elements for the form. These elements are not associated with any data."
                  }
                ]
              },
              "schemaVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String"
                  },
                  {
                    "description": "The schema version of the form."
                  }
                ]
              },
              "cta": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FormCTA"
                  },
                  {
                    "description": "The <code>FormCTA</code> object that stores the call to action configuration for the form."
                  }
                ]
              },
              "tags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Tags"
                  },
                  {
                    "description": "One or more key-value pairs to use when tagging the form data."
                  }
                ]
              },
              "labelDecorator": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LabelDecorator"
                  },
                  {
                    "description": "Specifies an icon or decoration to display on the form."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "appId",
      "environmentName",
      "body"
    ],
    "$defs": {
      "FormName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "FormDataTypeConfig": {
        "type": "object",
        "required": [
          "dataSourceType",
          "dataTypeName"
        ],
        "properties": {
          "dataSourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/FormDataSourceType"
              },
              {
                "description": "The data source type, either an Amplify DataStore model or a custom data type."
              }
            ]
          },
          "dataTypeName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The unique name of the data type you are using as the data source for the form."
              }
            ]
          }
        },
        "description": "Describes the data type configuration for the data source associated with a form."
      },
      "FormDataSourceType": {
        "type": "string",
        "enum": [
          "DataStore",
          "Custom"
        ]
      },
      "String": {
        "type": "string"
      },
      "FormActionType": {
        "type": "string",
        "enum": [
          "create",
          "update"
        ]
      },
      "FieldsMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/FieldConfig"
        }
      },
      "FieldConfig": {
        "type": "object",
        "properties": {
          "label": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The label for the field."
              }
            ]
          },
          "position": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldPosition"
              },
              {
                "description": "Specifies the field position."
              }
            ]
          },
          "excluded": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether to hide a field."
              }
            ]
          },
          "inputType": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldInputConfig"
              },
              {
                "description": "Describes the configuration for the default input value to display for a field."
              }
            ]
          },
          "validations": {
            "allOf": [
              {
                "$ref": "#/$defs/ValidationsList"
              },
              {
                "description": "The validations to perform on the value in the field."
              }
            ]
          }
        },
        "description": "Describes the configuration information for a field in a table."
      },
      "FieldPosition": {
        "type": "object",
        "properties": {
          "fixed": {
            "allOf": [
              {
                "$ref": "#/$defs/FixedPosition"
              },
              {
                "description": "The field position is fixed and doesn't change in relation to other fields."
              }
            ]
          },
          "rightOf": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The field position is to the right of the field specified by the string."
              }
            ]
          },
          "below": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The field position is below the field specified by the string."
              }
            ]
          }
        },
        "description": "Describes the field position."
      },
      "FixedPosition": {
        "type": "string",
        "enum": [
          "first"
        ]
      },
      "Boolean": {
        "type": "boolean"
      },
      "FieldInputConfig": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The input type for the field. "
              }
            ]
          },
          "required": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies a field that requires input."
              }
            ]
          },
          "readOnly": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies a read only field."
              }
            ]
          },
          "placeholder": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The text to display as a placeholder for the field."
              }
            ]
          },
          "defaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The default value for the field."
              }
            ]
          },
          "descriptiveText": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The text to display to describe the field."
              }
            ]
          },
          "defaultChecked": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether a field has a default value."
              }
            ]
          },
          "defaultCountryCode": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The default country code for a phone number."
              }
            ]
          },
          "valueMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueMappings"
              },
              {
                "description": "The information to use to customize the input fields with data at runtime."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the field."
              }
            ]
          },
          "minValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The minimum value to display for the field."
              }
            ]
          },
          "maxValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The maximum value to display for the field."
              }
            ]
          },
          "step": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The stepping increment for a numeric value in a field."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value for the field."
              }
            ]
          },
          "isArray": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether to render the field as an array. This property is ignored if the <code>dataSourceType</code> for the form is a Data Store."
              }
            ]
          },
          "fileUploaderConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/FileUploaderFieldConfig"
              },
              {
                "description": "The configuration for the file uploader field."
              }
            ]
          }
        },
        "description": "Describes the configuration for the default input values to display for a field."
      },
      "ValueMappings": {
        "type": "object",
        "required": [
          "values"
        ],
        "properties": {
          "values": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueMappingList"
              },
              {
                "description": "The value and display value pairs."
              }
            ]
          },
          "bindingProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/FormInputBindingProperties"
              },
              {
                "description": "The information to bind fields to data at runtime."
              }
            ]
          }
        },
        "description": "Represents the data binding configuration for a value map."
      },
      "ValueMappingList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ValueMapping"
        }
      },
      "ValueMapping": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "displayValue": {
            "allOf": [
              {
                "$ref": "#/$defs/FormInputValueProperty"
              },
              {
                "description": "The value to display for the complex object."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/FormInputValueProperty"
              },
              {
                "description": "The complex object."
              }
            ]
          }
        },
        "description": "Associates a complex object with a display value. Use <code>ValueMapping</code> to store how to represent complex objects when they are displayed."
      },
      "FormInputValueProperty": {
        "type": "object",
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value to assign to the input field."
              }
            ]
          },
          "bindingProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/FormInputValuePropertyBindingProperties"
              },
              {
                "description": "The information to bind fields to data at runtime."
              }
            ]
          },
          "concat": {
            "allOf": [
              {
                "$ref": "#/$defs/FormInputValuePropertyList"
              },
              {
                "description": "A list of form properties to concatenate to create the value to assign to this field property."
              }
            ]
          }
        },
        "description": "Describes the configuration for an input field on a form. Use <code>FormInputValueProperty</code> to specify the values to render or bind by default."
      },
      "FormInputValuePropertyBindingProperties": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The form property to bind to the data field."
              }
            ]
          },
          "field": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The data field to bind the property to."
              }
            ]
          }
        },
        "description": "Associates a form property to a binding property. This enables exposed properties on the top level form to propagate data to the form's property values."
      },
      "FormInputValuePropertyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FormInputValueProperty"
        }
      },
      "FormInputBindingProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/FormInputBindingPropertiesValue"
        }
      },
      "FormInputBindingPropertiesValue": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The property type."
              }
            ]
          },
          "bindingProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/FormInputBindingPropertiesValueProperties"
              },
              {
                "description": "Describes the properties to customize with data at runtime."
              }
            ]
          }
        },
        "description": "Represents the data binding configuration for a form's input fields at runtime.You can use <code>FormInputBindingPropertiesValue</code> to add exposed properties to a form to allow different values to be entered when a form is reused in different places in an app."
      },
      "FormInputBindingPropertiesValueProperties": {
        "type": "object",
        "properties": {
          "model": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "An Amplify DataStore model."
              }
            ]
          }
        },
        "description": "Represents the data binding configuration for a specific property using data stored in Amazon Web Services. For Amazon Web Services connected properties, you can bind a property to data stored in an Amplify DataStore model."
      },
      "Float": {
        "type": "number",
        "format": "float"
      },
      "FileUploaderFieldConfig": {
        "type": "object",
        "required": [
          "accessLevel",
          "acceptedFileTypes"
        ],
        "properties": {
          "accessLevel": {
            "allOf": [
              {
                "$ref": "#/$defs/StorageAccessLevel"
              },
              {
                "description": "The access level to assign to the uploaded files in the Amazon S3 bucket where they are stored. The valid values for this property are <code>private</code>, <code>protected</code>, or <code>public</code>. For detailed information about the permissions associated with each access level, see <a href=\"https://docs.amplify.aws/lib/storage/configureaccess/q/platform/js/\">File access levels</a> in the <i>Amplify documentation</i>."
              }
            ]
          },
          "acceptedFileTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/StrValues"
              },
              {
                "description": "The file types that are allowed to be uploaded by the file uploader. Provide this information in an array of strings specifying the valid file extensions."
              }
            ]
          },
          "showThumbnails": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether to display or hide the image preview after selecting a file for upload. The default value is <code>true</code> to display the image preview."
              }
            ]
          },
          "isResumable": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Allows the file upload operation to be paused and resumed. The default value is <code>false</code>.</p> <p>When <code>isResumable</code> is set to <code>true</code>, the file uploader uses a multipart upload to break the files into chunks before upload. The progress of the upload isn't continuous, because the file uploader uploads a chunk at a time.</p>"
              }
            ]
          },
          "maxFileCount": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "Specifies the maximum number of files that can be selected to upload. The default value is an unlimited number of files."
              }
            ]
          },
          "maxSize": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum file size in bytes that the file uploader will accept. The default value is an unlimited file size."
              }
            ]
          }
        },
        "description": "Describes the configuration for the file uploader field."
      },
      "StorageAccessLevel": {
        "type": "string",
        "enum": [
          "public",
          "protected",
          "private"
        ]
      },
      "StrValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "Integer": {
        "type": "integer"
      },
      "ValidationsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FieldValidationConfiguration"
        }
      },
      "FieldValidationConfiguration": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The validation to perform on an object type.<code/> "
              }
            ]
          },
          "strValues": {
            "allOf": [
              {
                "$ref": "#/$defs/StrValues"
              },
              {
                "description": "The validation to perform on a string value."
              }
            ]
          },
          "numValues": {
            "allOf": [
              {
                "$ref": "#/$defs/NumValues"
              },
              {
                "description": "The validation to perform on a number value."
              }
            ]
          },
          "validationMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The validation message to display."
              }
            ]
          }
        },
        "description": "Describes the validation configuration for a field."
      },
      "NumValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Integer"
        }
      },
      "FormStyle": {
        "type": "object",
        "properties": {
          "horizontalGap": {
            "allOf": [
              {
                "$ref": "#/$defs/FormStyleConfig"
              },
              {
                "description": "The spacing for the horizontal gap."
              }
            ]
          },
          "verticalGap": {
            "allOf": [
              {
                "$ref": "#/$defs/FormStyleConfig"
              },
              {
                "description": "The spacing for the vertical gap."
              }
            ]
          },
          "outerPadding": {
            "allOf": [
              {
                "$ref": "#/$defs/FormStyleConfig"
              },
              {
                "description": "The size of the outer padding for the form."
              }
            ]
          }
        },
        "description": "Describes the configuration for the form's style."
      },
      "FormStyleConfig": {
        "type": "object",
        "properties": {
          "tokenReference": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A reference to a design token to use to bind the form's style properties to an existing theme."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value of the style setting."
              }
            ]
          }
        },
        "description": "Describes the configuration settings for the form's style properties."
      },
      "SectionalElementMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/SectionalElement"
        }
      },
      "SectionalElement": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The type of sectional element. Valid values are <code>Heading</code>, <code>Text</code>, and <code>Divider</code>."
              }
            ]
          },
          "position": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldPosition"
              },
              {
                "description": "Specifies the position of the text in a field for a <code>Text</code> sectional element."
              }
            ]
          },
          "text": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The text for a <code>Text</code> sectional element."
              }
            ]
          },
          "level": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "Specifies the size of the font for a <code>Heading</code> sectional element. Valid values are <code>1 | 2 | 3 | 4 | 5 | 6</code>."
              }
            ]
          },
          "orientation": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Specifies the orientation for a <code>Divider</code> sectional element. Valid values are <code>horizontal</code> or <code>vertical</code>."
              }
            ]
          },
          "excluded": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Excludes a sectional element that was generated by default for a specified data model."
              }
            ]
          }
        },
        "description": "Stores the configuration information for a visual helper element for a form. A sectional element can be a header, a text block, or a divider. These elements are static and not associated with any data."
      },
      "FormCTA": {
        "type": "object",
        "properties": {
          "position": {
            "allOf": [
              {
                "$ref": "#/$defs/FormButtonsPosition"
              },
              {
                "description": "The position of the button."
              }
            ]
          },
          "clear": {
            "allOf": [
              {
                "$ref": "#/$defs/FormButton"
              },
              {
                "description": "Displays a clear button."
              }
            ]
          },
          "cancel": {
            "allOf": [
              {
                "$ref": "#/$defs/FormButton"
              },
              {
                "description": "Displays a cancel button."
              }
            ]
          },
          "submit": {
            "allOf": [
              {
                "$ref": "#/$defs/FormButton"
              },
              {
                "description": "Displays a submit button."
              }
            ]
          }
        },
        "description": "Describes the call to action button configuration for the form."
      },
      "FormButtonsPosition": {
        "type": "string",
        "enum": [
          "top",
          "bottom",
          "top_and_bottom"
        ]
      },
      "FormButton": {
        "type": "object",
        "properties": {
          "excluded": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether the button is visible on the form."
              }
            ]
          },
          "children": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Describes the button's properties."
              }
            ]
          },
          "position": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldPosition"
              },
              {
                "description": "The position of the button."
              }
            ]
          }
        },
        "description": "Describes the configuration for a button UI element that is a part of a form."
      },
      "Tags": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/TagValue"
        }
      },
      "TagValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "LabelDecorator": {
        "type": "string",
        "enum": [
          "required",
          "optional",
          "none"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://amplifyuibuilder.us-east-1.amazonaws.com/app/{appId}/environment/{environmentName}/forms{?clientToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**entity**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
