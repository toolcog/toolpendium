{
  "name": "CreateComponent",
  "description": "Creates a new component for an Amplify app.",
  "parameters": {
    "type": "object",
    "properties": {
      "appId": {
        "type": "string",
        "description": "The unique ID of the Amplify app to associate with the component."
      },
      "environmentName": {
        "type": "string",
        "description": "The name of the backend environment that is a part of the Amplify app."
      },
      "clientToken": {
        "type": "string",
        "description": "The unique client token."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "componentToCreate"
        ],
        "properties": {
          "componentToCreate": {
            "description": "Represents all of the information that is required to create a component.",
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ComponentName"
                  },
                  {
                    "description": "The name of the component"
                  }
                ]
              },
              "sourceId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String"
                  },
                  {
                    "description": "The unique ID of the component in its original source system, such as Figma."
                  }
                ]
              },
              "componentType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ComponentType"
                  },
                  {
                    "description": "The component type. This can be an Amplify custom UI component or another custom component."
                  }
                ]
              },
              "properties": {
                "description": "Describes the component's properties."
              },
              "children": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ComponentChildList"
                  },
                  {
                    "description": "A list of child components that are instances of the main component."
                  }
                ]
              },
              "variants": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ComponentVariants"
                  },
                  {
                    "description": "A list of the unique variants of this component."
                  }
                ]
              },
              "overrides": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ComponentOverrides"
                  },
                  {
                    "description": "Describes the component properties that can be overriden to customize an instance of the component."
                  }
                ]
              },
              "bindingProperties": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ComponentBindingProperties"
                  },
                  {
                    "description": "The data binding information for the component's properties."
                  }
                ]
              },
              "collectionProperties": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ComponentCollectionProperties"
                  },
                  {
                    "description": "The data binding configuration for customizing a component's properties. Use this for a collection component."
                  }
                ]
              },
              "tags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Tags"
                  },
                  {
                    "description": "One or more key-value pairs to use when tagging the component data."
                  }
                ]
              },
              "events": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ComponentEvents"
                  },
                  {
                    "description": "The event configuration for the component. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components."
                  }
                ]
              },
              "schemaVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String"
                  },
                  {
                    "description": "The schema version of the component when it was imported."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "appId",
      "environmentName",
      "body"
    ],
    "$defs": {
      "ComponentName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "String": {
        "type": "string"
      },
      "ComponentType": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "ComponentChildList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ComponentChild"
        }
      },
      "ComponentChild": {
        "type": "object",
        "required": [
          "componentType",
          "name",
          "properties"
        ],
        "properties": {
          "componentType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The type of the child component. "
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the child component."
              }
            ]
          },
          "properties": {
            "description": "Describes the properties of the child component. You can't specify <code>tags</code> as a valid property for <code>properties</code>."
          },
          "children": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentChildList"
              },
              {
                "description": "The list of <code>ComponentChild</code> instances for this component."
              }
            ]
          },
          "events": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentEvents"
              },
              {
                "description": "Describes the events that can be raised on the child component. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components."
              }
            ]
          },
          "sourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The unique ID of the child component in its original source system, such as Figma."
              }
            ]
          }
        },
        "description": "A nested UI configuration within a parent <code>Component</code>."
      },
      "ComponentEvents": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ComponentEvent"
        }
      },
      "ComponentEvent": {
        "type": "object",
        "properties": {
          "action": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The action to perform when a specific event is raised."
              }
            ]
          },
          "parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionParameters"
              },
              {
                "description": "Describes information about the action."
              }
            ]
          },
          "bindingEvent": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Binds an event to an action on a component. When you specify a <code>bindingEvent</code>, the event is called when the action is performed."
              }
            ]
          }
        },
        "description": "Describes the configuration of an event. You can bind an event and a corresponding action to a <code>Component</code> or a <code>ComponentChild</code>. A button click is an example of an event. "
      },
      "ActionParameters": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentProperty"
              },
              {
                "description": "The type of navigation action. Valid values are <code>url</code> and <code>anchor</code>. This value is required for a navigation action."
              }
            ]
          },
          "url": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentProperty"
              },
              {
                "description": "The URL to the location to open. Specify this value for a navigation action."
              }
            ]
          },
          "anchor": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentProperty"
              },
              {
                "description": "The HTML anchor link to the location to open. Specify this value for a navigation action."
              }
            ]
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentProperty"
              },
              {
                "description": "The element within the same component to modify when the action occurs."
              }
            ]
          },
          "global": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentProperty"
              },
              {
                "description": "Specifies whether the user should be signed out globally. Specify this value for an auth sign out action."
              }
            ]
          },
          "model": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the data model. Use when the action performs an operation on an Amplify DataStore model."
              }
            ]
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentProperty"
              },
              {
                "description": "The unique ID of the component that the <code>ActionParameters</code> apply to."
              }
            ]
          },
          "fields": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentProperties"
              },
              {
                "description": "A dictionary of key-value pairs mapping Amplify Studio properties to fields in a data model. Use when the action performs an operation on an Amplify DataStore model."
              }
            ]
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/$defs/MutationActionSetStateParameter"
              },
              {
                "description": "A key-value pair that specifies the state property name and its initial value."
              }
            ]
          }
        },
        "description": "Represents the event action configuration for an element of a <code>Component</code> or <code>ComponentChild</code>. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components. <code>ActionParameters</code> defines the action that is performed when an event occurs on the component."
      },
      "ComponentProperty": {
        "type": "object",
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value to assign to the component property."
              }
            ]
          },
          "bindingProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentPropertyBindingProperties"
              },
              {
                "description": "The information to bind the component property to data at runtime."
              }
            ]
          },
          "collectionBindingProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentPropertyBindingProperties"
              },
              {
                "description": "The information to bind the component property to data at runtime. Use this for collection components."
              }
            ]
          },
          "defaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The default value to assign to the component property."
              }
            ]
          },
          "model": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The data model to use to assign a value to the component property."
              }
            ]
          },
          "bindings": {
            "allOf": [
              {
                "$ref": "#/$defs/FormBindings"
              },
              {
                "description": "The information to bind the component property to form data."
              }
            ]
          },
          "event": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "An event that occurs in your app. Use this for workflow data binding."
              }
            ]
          },
          "userAttribute": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "An authenticated user attribute to use to assign a value to the component property."
              }
            ]
          },
          "concat": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentPropertyList"
              },
              {
                "description": "A list of component properties to concatenate to create the value to assign to this component property."
              }
            ]
          },
          "condition": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentConditionProperty"
              },
              {
                "description": "The conditional expression to use to assign a value to the component property."
              }
            ]
          },
          "configured": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether the user configured the property in Amplify Studio after importing it."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The component type."
              }
            ]
          },
          "importedValue": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The default value assigned to the property when the component is imported into an app."
              }
            ]
          },
          "componentName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the component that is affected by an event."
              }
            ]
          },
          "property": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the component's property that is affected by an event."
              }
            ]
          }
        },
        "description": "Describes the configuration for all of a component's properties. Use <code>ComponentProperty</code> to specify the values to render or bind by default."
      },
      "ComponentPropertyBindingProperties": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The component property to bind to the data field."
              }
            ]
          },
          "field": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The data field to bind the property to."
              }
            ]
          }
        },
        "description": "Associates a component property to a binding property. This enables exposed properties on the top level component to propagate data to the component's property values."
      },
      "FormBindings": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/FormBindingElement"
        }
      },
      "FormBindingElement": {
        "type": "object",
        "required": [
          "element",
          "property"
        ],
        "properties": {
          "element": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the component to retrieve a value from."
              }
            ]
          },
          "property": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The property to retrieve a value from."
              }
            ]
          }
        },
        "description": "Describes how to bind a component property to form data."
      },
      "ComponentPropertyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ComponentProperty"
        }
      },
      "ComponentConditionProperty": {
        "type": "object",
        "properties": {
          "property": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the conditional property."
              }
            ]
          },
          "field": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a field. Specify this when the property is a data model."
              }
            ]
          },
          "operator": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals."
              }
            ]
          },
          "operand": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value of the property to evaluate."
              }
            ]
          },
          "then": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentProperty"
              },
              {
                "description": "The value to assign to the property if the condition is met."
              }
            ]
          },
          "else": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentProperty"
              },
              {
                "description": "The value to assign to the property if the condition is not met."
              }
            ]
          },
          "operandType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The type of the property to evaluate."
              }
            ]
          }
        },
        "description": "Represents a conditional expression to set a component property. Use <code>ComponentConditionProperty</code> to set a property to different values conditionally, based on the value of another property."
      },
      "Boolean": {
        "type": "boolean"
      },
      "ComponentProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ComponentProperty"
        }
      },
      "MutationActionSetStateParameter": {
        "type": "object",
        "required": [
          "componentName",
          "property",
          "set"
        ],
        "properties": {
          "componentName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the component that is being modified."
              }
            ]
          },
          "property": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the component property to apply the state configuration to."
              }
            ]
          },
          "set": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentProperty"
              },
              {
                "description": "The state configuration to assign to the property."
              }
            ]
          }
        },
        "description": "Represents the state configuration when an action modifies a property of another element within the same component."
      },
      "ComponentVariants": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ComponentVariant"
        }
      },
      "ComponentVariant": {
        "type": "object",
        "properties": {
          "variantValues": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentVariantValues"
              },
              {
                "description": "The combination of variants that comprise this variant. You can't specify <code>tags</code> as a valid property for <code>variantValues</code>."
              }
            ]
          },
          "overrides": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentOverrides"
              },
              {
                "description": "The properties of the component variant that can be overriden when customizing an instance of the component. You can't specify <code>tags</code> as a valid property for <code>overrides</code>."
              }
            ]
          }
        },
        "description": "Describes the style configuration of a unique variation of a main component."
      },
      "ComponentVariantValues": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/String"
        }
      },
      "ComponentOverrides": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ComponentOverridesValue"
        }
      },
      "ComponentOverridesValue": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/String"
        }
      },
      "ComponentBindingProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ComponentBindingPropertiesValue"
        }
      },
      "ComponentBindingPropertiesValue": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The property type."
              }
            ]
          },
          "bindingProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentBindingPropertiesValueProperties"
              },
              {
                "description": "Describes the properties to customize with data at runtime."
              }
            ]
          },
          "defaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The default value of the property."
              }
            ]
          }
        },
        "description": "Represents the data binding configuration for a component at runtime. You can use <code>ComponentBindingPropertiesValue</code> to add exposed properties to a component to allow different values to be entered when a component is reused in different places in an app."
      },
      "ComponentBindingPropertiesValueProperties": {
        "type": "object",
        "properties": {
          "model": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "An Amplify DataStore model."
              }
            ]
          },
          "field": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The field to bind the data to."
              }
            ]
          },
          "predicates": {
            "allOf": [
              {
                "$ref": "#/$defs/PredicateList"
              },
              {
                "description": "A list of predicates for binding a component's properties to data."
              }
            ]
          },
          "userAttribute": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "An authenticated user attribute."
              }
            ]
          },
          "bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "An Amazon S3 bucket."
              }
            ]
          },
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The storage key for an Amazon S3 bucket."
              }
            ]
          },
          "defaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The default value to assign to the property."
              }
            ]
          },
          "slotName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a component slot."
              }
            ]
          }
        },
        "description": "Represents the data binding configuration for a specific property using data stored in Amazon Web Services. For Amazon Web Services connected properties, you can bind a property to data stored in an Amazon S3 bucket, an Amplify DataStore model or an authenticated user attribute."
      },
      "PredicateList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Predicate"
        }
      },
      "Predicate": {
        "type": "object",
        "properties": {
          "or": {
            "allOf": [
              {
                "$ref": "#/$defs/PredicateList"
              },
              {
                "description": "A list of predicates to combine logically."
              }
            ]
          },
          "and": {
            "allOf": [
              {
                "$ref": "#/$defs/PredicateList"
              },
              {
                "description": "A list of predicates to combine logically."
              }
            ]
          },
          "field": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The field to query."
              }
            ]
          },
          "operator": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The operator to use to perform the evaluation."
              }
            ]
          },
          "operand": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value to use when performing the evaluation."
              }
            ]
          },
          "operandType": {
            "allOf": [
              {
                "$ref": "#/$defs/OperandType"
              },
              {
                "description": "The type of value to use when performing the evaluation."
              }
            ]
          }
        },
        "description": "Stores information for generating Amplify DataStore queries. Use a <code>Predicate</code> to retrieve a subset of the data in a collection."
      },
      "OperandType": {
        "type": "string",
        "pattern": "boolean|string|number"
      },
      "ComponentCollectionProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ComponentDataConfiguration"
        }
      },
      "ComponentDataConfiguration": {
        "type": "object",
        "required": [
          "model"
        ],
        "properties": {
          "model": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the data model to use to bind data to a component."
              }
            ]
          },
          "sort": {
            "allOf": [
              {
                "$ref": "#/$defs/SortPropertyList"
              },
              {
                "description": "Describes how to sort the component's properties."
              }
            ]
          },
          "predicate": {
            "allOf": [
              {
                "$ref": "#/$defs/Predicate"
              },
              {
                "description": "Represents the conditional logic to use when binding data to a component. Use this property to retrieve only a subset of the data in a collection."
              }
            ]
          },
          "identifiers": {
            "allOf": [
              {
                "$ref": "#/$defs/IdentifierList"
              },
              {
                "description": "A list of IDs to use to bind data to a component. Use this property to bind specifically chosen data, rather than data retrieved from a query."
              }
            ]
          }
        },
        "description": "Describes the configuration for binding a component's properties to data."
      },
      "SortPropertyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SortProperty"
        }
      },
      "SortProperty": {
        "type": "object",
        "required": [
          "field",
          "direction"
        ],
        "properties": {
          "field": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The field to perform the sort on."
              }
            ]
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/$defs/SortDirection"
              },
              {
                "description": "The direction of the sort, either ascending or descending."
              }
            ]
          }
        },
        "description": "Describes how to sort the data that you bind to a component."
      },
      "SortDirection": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "IdentifierList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "Tags": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/TagValue"
        }
      },
      "TagValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://amplifyuibuilder.us-east-1.amazonaws.com/app/{appId}/environment/{environmentName}/components{?clientToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**entity**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
