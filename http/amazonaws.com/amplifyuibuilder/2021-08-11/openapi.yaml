openapi: 3.0.0
info:
  version: '2021-08-11'
  x-release: v4
  title: AWS Amplify UI Builder
  description: '<p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application''s backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href="https://docs.amplify.aws/console/adminui/intro">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href="https://docs.amplify.aws/">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href="https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html">Amplify User Guide</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: amplifyuibuilder
  x-aws-signingName: amplifyuibuilder
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/amplifyuibuilder-2021-08-11.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/amplifyuibuilder/'
servers:
  - url: 'http://amplifyuibuilder.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Amplify UI Builder multi-region endpoint
  - url: 'https://amplifyuibuilder.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Amplify UI Builder multi-region endpoint
  - url: 'http://amplifyuibuilder.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Amplify UI Builder endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://amplifyuibuilder.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Amplify UI Builder endpoint for China (Beijing) and China (Ningxia)
paths:
  '/app/{appId}/environment/{environmentName}/components':
    post:
      operationId: CreateComponent
      description: Creates a new component for an Amplify app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateComponentResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app to associate with the component.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: clientToken
          in: query
          required: false
          description: The unique client token.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - componentToCreate
              properties:
                componentToCreate:
                  description: Represents all of the information that is required to create a component.
                  type: object
                  properties:
                    name:
                      allOf:
                        - $ref: '#/components/schemas/ComponentName'
                        - description: The name of the component
                    sourceId:
                      allOf:
                        - $ref: '#/components/schemas/String'
                        - description: 'The unique ID of the component in its original source system, such as Figma.'
                    componentType:
                      allOf:
                        - $ref: '#/components/schemas/ComponentType'
                        - description: The component type. This can be an Amplify custom UI component or another custom component.
                    properties:
                      description: Describes the component's properties.
                    children:
                      allOf:
                        - $ref: '#/components/schemas/ComponentChildList'
                        - description: A list of child components that are instances of the main component.
                    variants:
                      allOf:
                        - $ref: '#/components/schemas/ComponentVariants'
                        - description: A list of the unique variants of this component.
                    overrides:
                      allOf:
                        - $ref: '#/components/schemas/ComponentOverrides'
                        - description: Describes the component properties that can be overriden to customize an instance of the component.
                    bindingProperties:
                      allOf:
                        - $ref: '#/components/schemas/ComponentBindingProperties'
                        - description: The data binding information for the component's properties.
                    collectionProperties:
                      allOf:
                        - $ref: '#/components/schemas/ComponentCollectionProperties'
                        - description: The data binding configuration for customizing a component's properties. Use this for a collection component.
                    tags:
                      allOf:
                        - $ref: '#/components/schemas/Tags'
                        - description: One or more key-value pairs to use when tagging the component data.
                    events:
                      allOf:
                        - $ref: '#/components/schemas/ComponentEvents'
                        - description: The event configuration for the component. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components.
                    schemaVersion:
                      allOf:
                        - $ref: '#/components/schemas/String'
                        - description: The schema version of the component when it was imported.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListComponents
      description: Retrieves a list of components for a specified Amplify app and backend environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListComponentsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID for the Amplify app.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of components to retrieve.
          schema:
            type: integer
            minimum: 1
            maximum: 100
  '/app/{appId}/environment/{environmentName}/forms':
    post:
      operationId: CreateForm
      description: Creates a new form for an Amplify app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFormResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app to associate with the form.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: clientToken
          in: query
          required: false
          description: The unique client token.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - formToCreate
              properties:
                formToCreate:
                  description: Represents all of the information that is required to create a form.
                  type: object
                  properties:
                    name:
                      allOf:
                        - $ref: '#/components/schemas/FormName'
                        - description: The name of the form.
                    dataType:
                      allOf:
                        - $ref: '#/components/schemas/FormDataTypeConfig'
                        - description: The type of data source to use to create the form.
                    formActionType:
                      allOf:
                        - $ref: '#/components/schemas/FormActionType'
                        - description: Specifies whether to perform a create or update action on the form.
                    fields:
                      allOf:
                        - $ref: '#/components/schemas/FieldsMap'
                        - description: The configuration information for the form's fields.
                    style:
                      allOf:
                        - $ref: '#/components/schemas/FormStyle'
                        - description: The configuration for the form's style.
                    sectionalElements:
                      allOf:
                        - $ref: '#/components/schemas/SectionalElementMap'
                        - description: The configuration information for the visual helper elements for the form. These elements are not associated with any data.
                    schemaVersion:
                      allOf:
                        - $ref: '#/components/schemas/String'
                        - description: The schema version of the form.
                    cta:
                      allOf:
                        - $ref: '#/components/schemas/FormCTA'
                        - description: The <code>FormCTA</code> object that stores the call to action configuration for the form.
                    tags:
                      allOf:
                        - $ref: '#/components/schemas/Tags'
                        - description: One or more key-value pairs to use when tagging the form data.
                    labelDecorator:
                      allOf:
                        - $ref: '#/components/schemas/LabelDecorator'
                        - description: Specifies an icon or decoration to display on the form.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListForms
      description: Retrieves a list of forms for a specified Amplify app and backend environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFormsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID for the Amplify app.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of forms to retrieve.
          schema:
            type: integer
            minimum: 1
            maximum: 100
  '/app/{appId}/environment/{environmentName}/themes':
    post:
      operationId: CreateTheme
      description: Creates a theme to apply to the components in an Amplify app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateThemeResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app associated with the theme.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: clientToken
          in: query
          required: false
          description: The unique client token.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - themeToCreate
              properties:
                themeToCreate:
                  description: Represents all of the information that is required to create a theme.
                  type: object
                  properties:
                    name:
                      allOf:
                        - $ref: '#/components/schemas/ThemeName'
                        - description: The name of the theme.
                    values:
                      allOf:
                        - $ref: '#/components/schemas/ThemeValuesList'
                        - description: A list of key-value pairs that deﬁnes the properties of the theme.
                    overrides:
                      allOf:
                        - $ref: '#/components/schemas/ThemeValuesList'
                        - description: Describes the properties that can be overriden to customize an instance of the theme.
                    tags:
                      allOf:
                        - $ref: '#/components/schemas/Tags'
                        - description: One or more key-value pairs to use when tagging the theme data.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListThemes
      description: Retrieves a list of themes for a specified Amplify app and backend environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThemesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID for the Amplify app.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of theme results to return in the response.
          schema:
            type: integer
            minimum: 1
            maximum: 100
  '/app/{appId}/environment/{environmentName}/components/{id}':
    delete:
      operationId: DeleteComponent
      description: Deletes a component from an Amplify app.
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app associated with the component to delete.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The unique ID of the component to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetComponent
      description: Returns an existing component for an Amplify app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComponentResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is part of the Amplify app.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The unique ID of the component.
          schema:
            type: string
    patch:
      operationId: UpdateComponent
      description: Updates an existing component.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateComponentResponse'
        '480':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID for the Amplify app.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is part of the Amplify app.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The unique ID for the component.
          schema:
            type: string
        - name: clientToken
          in: query
          required: false
          description: The unique client token.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - updatedComponent
              properties:
                updatedComponent:
                  description: 'Updates and saves all of the information about a component, based on component ID.'
                  type: object
                  properties:
                    id:
                      allOf:
                        - $ref: '#/components/schemas/Uuid'
                        - description: The unique ID of the component to update.
                    name:
                      allOf:
                        - $ref: '#/components/schemas/ComponentName'
                        - description: The name of the component to update.
                    sourceId:
                      allOf:
                        - $ref: '#/components/schemas/String'
                        - description: 'The unique ID of the component in its original source system, such as Figma.'
                    componentType:
                      allOf:
                        - $ref: '#/components/schemas/ComponentType'
                        - description: The type of the component. This can be an Amplify custom UI component or another custom component.
                    properties:
                      description: Describes the component's properties.
                    children:
                      allOf:
                        - $ref: '#/components/schemas/ComponentChildList'
                        - description: The components that are instances of the main component.
                    variants:
                      allOf:
                        - $ref: '#/components/schemas/ComponentVariants'
                        - description: A list of the unique variants of the main component being updated.
                    overrides:
                      allOf:
                        - $ref: '#/components/schemas/ComponentOverrides'
                        - description: Describes the properties that can be overriden to customize the component.
                    bindingProperties:
                      allOf:
                        - $ref: '#/components/schemas/ComponentBindingProperties'
                        - description: The data binding information for the component's properties.
                    collectionProperties:
                      allOf:
                        - $ref: '#/components/schemas/ComponentCollectionProperties'
                        - description: The configuration for binding a component's properties to a data model. Use this for a collection component.
                    events:
                      allOf:
                        - $ref: '#/components/schemas/ComponentEvents'
                        - description: The event configuration for the component. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components.
                    schemaVersion:
                      allOf:
                        - $ref: '#/components/schemas/String'
                        - description: The schema version of the component when it was imported.
  '/app/{appId}/environment/{environmentName}/forms/{id}':
    delete:
      operationId: DeleteForm
      description: Deletes a form from an Amplify app.
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app associated with the form to delete.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The unique ID of the form to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetForm
      description: Returns an existing form for an Amplify app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFormResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is part of the Amplify app.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The unique ID of the form.
          schema:
            type: string
    patch:
      operationId: UpdateForm
      description: Updates an existing form.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFormResponse'
        '480':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID for the Amplify app.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is part of the Amplify app.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The unique ID for the form.
          schema:
            type: string
        - name: clientToken
          in: query
          required: false
          description: The unique client token.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - updatedForm
              properties:
                updatedForm:
                  description: 'Updates and saves all of the information about a form, based on form ID.'
                  type: object
                  properties:
                    name:
                      allOf:
                        - $ref: '#/components/schemas/FormName'
                        - description: The name of the form.
                    dataType:
                      allOf:
                        - $ref: '#/components/schemas/FormDataTypeConfig'
                        - description: The type of data source to use to create the form.
                    formActionType:
                      allOf:
                        - $ref: '#/components/schemas/FormActionType'
                        - description: Specifies whether to perform a create or update action on the form.
                    fields:
                      allOf:
                        - $ref: '#/components/schemas/FieldsMap'
                        - description: The configuration information for the form's fields.
                    style:
                      allOf:
                        - $ref: '#/components/schemas/FormStyle'
                        - description: The configuration for the form's style.
                    sectionalElements:
                      allOf:
                        - $ref: '#/components/schemas/SectionalElementMap'
                        - description: The configuration information for the visual helper elements for the form. These elements are not associated with any data.
                    schemaVersion:
                      allOf:
                        - $ref: '#/components/schemas/String'
                        - description: The schema version of the form.
                    cta:
                      allOf:
                        - $ref: '#/components/schemas/FormCTA'
                        - description: The <code>FormCTA</code> object that stores the call to action configuration for the form.
                    labelDecorator:
                      allOf:
                        - $ref: '#/components/schemas/LabelDecorator'
                        - description: Specifies an icon or decoration to display on the form.
  '/app/{appId}/environment/{environmentName}/themes/{id}':
    delete:
      operationId: DeleteTheme
      description: Deletes a theme from an Amplify app.
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app associated with the theme to delete.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The unique ID of the theme to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetTheme
      description: Returns an existing theme for an Amplify app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThemeResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is part of the Amplify app.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The unique ID for the theme.
          schema:
            type: string
    patch:
      operationId: UpdateTheme
      description: Updates an existing theme.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThemeResponse'
        '480':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID for the Amplify app.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is part of the Amplify app.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The unique ID for the theme.
          schema:
            type: string
        - name: clientToken
          in: query
          required: false
          description: The unique client token.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - updatedTheme
              properties:
                updatedTheme:
                  description: Saves the data binding information for a theme.
                  type: object
                  properties:
                    id:
                      allOf:
                        - $ref: '#/components/schemas/Uuid'
                        - description: The unique ID of the theme to update.
                    name:
                      allOf:
                        - $ref: '#/components/schemas/ThemeName'
                        - description: The name of the theme to update.
                    values:
                      allOf:
                        - $ref: '#/components/schemas/ThemeValuesList'
                        - description: A list of key-value pairs that define the theme's properties.
                    overrides:
                      allOf:
                        - $ref: '#/components/schemas/ThemeValuesList'
                        - description: Describes the properties that can be overriden to customize the theme.
  '/tokens/{provider}':
    post:
      operationId: ExchangeCodeForToken
      description: Exchanges an access code for a token.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeCodeForTokenResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: provider
          in: path
          required: true
          description: The third-party provider for the token. The only valid value is <code>figma</code>.
          schema:
            type: string
            enum:
              - figma
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - request
              properties:
                request:
                  description: Describes the configuration of a request to exchange an access code for a token.
                  type: object
                  properties:
                    code:
                      allOf:
                        - $ref: '#/components/schemas/SensitiveString'
                        - description: The access code to send in the request.
                    redirectUri:
                      allOf:
                        - $ref: '#/components/schemas/String'
                        - description: The location of the application that will receive the access code.
                    clientId:
                      allOf:
                        - $ref: '#/components/schemas/SensitiveString'
                        - description: The ID of the client to request the token from.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/export/app/{appId}/environment/{environmentName}/components':
    get:
      operationId: ExportComponents
      description: Exports component configurations to code that is ready to integrate into an Amplify app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportComponentsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app to export components to.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/export/app/{appId}/environment/{environmentName}/forms':
    get:
      operationId: ExportForms
      description: Exports form configurations to code that is ready to integrate into an Amplify app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportFormsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app to export forms to.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/export/app/{appId}/environment/{environmentName}/themes':
    get:
      operationId: ExportThemes
      description: Exports theme configurations to code that is ready to integrate into an Amplify app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportThemesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app to export the themes to.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is part of the Amplify app.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/app/{appId}/environment/{environmentName}/codegen-jobs/{id}':
    get:
      operationId: GetCodegenJob
      description: Returns an existing code generation job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCodegenJobResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app associated with the code generation job.
          schema:
            type: string
            pattern: 'd[a-z0-9]+'
            minLength: 1
            maxLength: 20
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app associated with the code generation job.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: The unique ID of the code generation job.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/app/{appId}/environment/{environmentName}/metadata':
    get:
      operationId: GetMetadata
      description: Returns existing metadata for an Amplify app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetadataResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID of the Amplify app.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is part of the Amplify app.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/app/{appId}/environment/{environmentName}/codegen-jobs':
    get:
      operationId: ListCodegenJobs
      description: Retrieves a list of code generation jobs for a specified Amplify app and backend environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCodegenJobsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID for the Amplify app.
          schema:
            type: string
            pattern: 'd[a-z0-9]+'
            minLength: 1
            maxLength: 20
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of jobs to retrieve.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: StartCodegenJob
      description: Starts a code generation job for a specified Amplify app and backend environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCodegenJobResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID for the Amplify app.
          schema:
            type: string
            pattern: 'd[a-z0-9]+'
            minLength: 1
            maxLength: 20
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is a part of the Amplify app.
          schema:
            type: string
        - name: clientToken
          in: query
          required: false
          description: The idempotency token used to ensure that the code generation job request completes only once.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - codegenJobToCreate
              properties:
                codegenJobToCreate:
                  description: The code generation job resource configuration.
                  type: object
                  properties:
                    renderConfig:
                      allOf:
                        - $ref: '#/components/schemas/CodegenJobRenderConfig'
                        - description: The code generation configuration for the codegen job.
                    genericDataSchema:
                      allOf:
                        - $ref: '#/components/schemas/CodegenJobGenericDataSchema'
                        - description: The data schema to use for a code generation job.
                    autoGenerateForms:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Specifies whether to autogenerate forms in the code generation job.
                    features:
                      allOf:
                        - $ref: '#/components/schemas/CodegenFeatureFlags'
                        - description: The feature flags for a code generation job.
                    tags:
                      allOf:
                        - $ref: '#/components/schemas/Tags'
                        - description: One or more key-value pairs to use when tagging the code generation job data.
  '/app/{appId}/environment/{environmentName}/metadata/features/{featureName}':
    put:
      operationId: PutMetadataFlag
      description: Stores the metadata information about a feature on a form.
      responses:
        '200':
          description: Success
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: appId
          in: path
          required: true
          description: The unique ID for the Amplify app.
          schema:
            type: string
        - name: environmentName
          in: path
          required: true
          description: The name of the backend environment that is part of the Amplify app.
          schema:
            type: string
        - name: featureName
          in: path
          required: true
          description: The name of the feature associated with the metadata.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - body
              properties:
                body:
                  description: Stores the metadata information about a feature on a form.
                  type: object
                  properties:
                    newValue:
                      allOf:
                        - $ref: '#/components/schemas/String'
                        - description: The new information to store.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tokens/{provider}/refresh':
    post:
      operationId: RefreshToken
      description: Refreshes a previously issued access token that might have expired.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      parameters:
        - name: provider
          in: path
          required: true
          description: The third-party provider for the token. The only valid value is <code>figma</code>.
          schema:
            type: string
            enum:
              - figma
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshTokenBody
              properties:
                refreshTokenBody:
                  description: Describes a refresh token.
                  type: object
                  properties:
                    token:
                      allOf:
                        - $ref: '#/components/schemas/SensitiveString'
                        - description: The token to use to refresh a previously issued access token that might have expired.
                    clientId:
                      allOf:
                        - $ref: '#/components/schemas/SensitiveString'
                        - description: The ID of the client to request the token from.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateComponentResponse:
      type: object
      properties:
        entity:
          allOf:
            - $ref: '#/components/schemas/Component'
            - description: Describes the configuration of the new component.
    ComponentName:
      type: string
      minLength: 1
      maxLength: 255
    String:
      type: string
    ComponentType:
      type: string
      minLength: 1
      maxLength: 255
    ComponentChildList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentChild'
    ComponentVariants:
      type: array
      items:
        $ref: '#/components/schemas/ComponentVariant'
    ComponentOverrides:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentOverridesValue'
    ComponentBindingProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentBindingPropertiesValue'
    ComponentCollectionProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentDataConfiguration'
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    ComponentEvents:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentEvent'
    ServiceQuotaExceededException: {}
    ResourceConflictException: {}
    InternalServerException: {}
    InvalidParameterException: {}
    CreateFormResponse:
      type: object
      properties:
        entity:
          allOf:
            - $ref: '#/components/schemas/Form'
            - description: Describes the configuration of the new form.
    FormName:
      type: string
      minLength: 1
      maxLength: 255
    FormDataTypeConfig:
      type: object
      required:
        - dataSourceType
        - dataTypeName
      properties:
        dataSourceType:
          allOf:
            - $ref: '#/components/schemas/FormDataSourceType'
            - description: 'The data source type, either an Amplify DataStore model or a custom data type.'
        dataTypeName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique name of the data type you are using as the data source for the form.
      description: Describes the data type configuration for the data source associated with a form.
    FormActionType:
      type: string
      enum:
        - create
        - update
    FieldsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FieldConfig'
    FormStyle:
      type: object
      properties:
        horizontalGap:
          allOf:
            - $ref: '#/components/schemas/FormStyleConfig'
            - description: The spacing for the horizontal gap.
        verticalGap:
          allOf:
            - $ref: '#/components/schemas/FormStyleConfig'
            - description: The spacing for the vertical gap.
        outerPadding:
          allOf:
            - $ref: '#/components/schemas/FormStyleConfig'
            - description: The size of the outer padding for the form.
      description: Describes the configuration for the form's style.
    SectionalElementMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SectionalElement'
    FormCTA:
      type: object
      properties:
        position:
          allOf:
            - $ref: '#/components/schemas/FormButtonsPosition'
            - description: The position of the button.
        clear:
          allOf:
            - $ref: '#/components/schemas/FormButton'
            - description: Displays a clear button.
        cancel:
          allOf:
            - $ref: '#/components/schemas/FormButton'
            - description: Displays a cancel button.
        submit:
          allOf:
            - $ref: '#/components/schemas/FormButton'
            - description: Displays a submit button.
      description: Describes the call to action button configuration for the form.
    LabelDecorator:
      type: string
      enum:
        - required
        - optional
        - none
    CreateThemeResponse:
      type: object
      properties:
        entity:
          allOf:
            - $ref: '#/components/schemas/Theme'
            - description: Describes the configuration of the new theme.
    ThemeName:
      type: string
      minLength: 1
      maxLength: 255
    ThemeValuesList:
      type: array
      items:
        $ref: '#/components/schemas/ThemeValues'
    ResourceNotFoundException: {}
    ExchangeCodeForTokenResponse:
      type: object
      required:
        - accessToken
        - expiresIn
        - refreshToken
      properties:
        accessToken:
          allOf:
            - $ref: '#/components/schemas/SensitiveString'
            - description: The access token.
        expiresIn:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The date and time when the new access token expires.
        refreshToken:
          allOf:
            - $ref: '#/components/schemas/SensitiveString'
            - description: The token to use to refresh a previously issued access token that might have expired.
    SensitiveString:
      type: string
      format: password
    ExportComponentsResponse:
      type: object
      required:
        - entities
      properties:
        entities:
          allOf:
            - $ref: '#/components/schemas/ComponentList'
            - description: Represents the configuration of the exported components.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The pagination token that's included if more results are available.
    ExportFormsResponse:
      type: object
      required:
        - entities
      properties:
        entities:
          allOf:
            - $ref: '#/components/schemas/FormList'
            - description: Represents the configuration of the exported forms.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The pagination token that's included if more results are available.
    ExportThemesResponse:
      type: object
      required:
        - entities
      properties:
        entities:
          allOf:
            - $ref: '#/components/schemas/ThemeList'
            - description: Represents the configuration of the exported themes.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The pagination token that's included if more results are available.
    GetCodegenJobResponse:
      type: object
      properties:
        job:
          allOf:
            - $ref: '#/components/schemas/CodegenJob'
            - description: The configuration settings for the code generation job.
    ThrottlingException: {}
    GetComponentResponse:
      type: object
      properties:
        component:
          allOf:
            - $ref: '#/components/schemas/Component'
            - description: Represents the configuration settings for the component.
    GetFormResponse:
      type: object
      properties:
        form:
          allOf:
            - $ref: '#/components/schemas/Form'
            - description: Represents the configuration settings for the form.
    GetMetadataResponse:
      type: object
      required:
        - features
      properties:
        features:
          allOf:
            - $ref: '#/components/schemas/FeaturesMap'
            - description: Represents the configuration settings for the features metadata.
    UnauthorizedException: {}
    GetThemeResponse:
      type: object
      properties:
        theme:
          allOf:
            - $ref: '#/components/schemas/Theme'
            - description: Represents the configuration settings for the theme.
    ListCodegenJobsResponse:
      type: object
      required:
        - entities
      properties:
        entities:
          allOf:
            - $ref: '#/components/schemas/CodegenJobSummaryList'
            - description: The list of code generation jobs for the Amplify app.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The pagination token that's included if more results are available.
    ListComponentsResponse:
      type: object
      required:
        - entities
      properties:
        entities:
          allOf:
            - $ref: '#/components/schemas/ComponentSummaryList'
            - description: The list of components for the Amplify app.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The pagination token that's included if more results are available.
    ListFormsResponse:
      type: object
      required:
        - entities
      properties:
        entities:
          allOf:
            - $ref: '#/components/schemas/FormSummaryList'
            - description: The list of forms for the Amplify app.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The pagination token that's included if more results are available.
    ListThemesResponse:
      type: object
      required:
        - entities
      properties:
        entities:
          allOf:
            - $ref: '#/components/schemas/ThemeSummaryList'
            - description: The list of themes for the Amplify app.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The pagination token that's returned if more results are available.
    RefreshTokenResponse:
      type: object
      required:
        - accessToken
        - expiresIn
      properties:
        accessToken:
          allOf:
            - $ref: '#/components/schemas/SensitiveString'
            - description: The access token.
        expiresIn:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The date and time when the new access token expires.
    StartCodegenJobResponse:
      type: object
      properties:
        entity:
          allOf:
            - $ref: '#/components/schemas/CodegenJob'
            - description: The code generation job for a UI component that is associated with an Amplify app.
    CodegenJobRenderConfig:
      type: object
      properties:
        react:
          allOf:
            - $ref: '#/components/schemas/ReactStartCodegenJobData'
            - description: The name of the <code>ReactStartCodegenJobData</code> object.
      description: Describes the configuration information for rendering the UI component associated with the code generation job.
    CodegenJobGenericDataSchema:
      type: object
      required:
        - dataSourceType
        - models
        - enums
        - nonModels
      properties:
        dataSourceType:
          allOf:
            - $ref: '#/components/schemas/CodegenJobGenericDataSourceType'
            - description: 'The type of the data source for the schema. Currently, the only valid value is an Amplify <code>DataStore</code>.'
        models:
          allOf:
            - $ref: '#/components/schemas/CodegenGenericDataModels'
            - description: The name of a <code>CodegenGenericDataModel</code>.
        enums:
          allOf:
            - $ref: '#/components/schemas/CodegenGenericDataEnums'
            - description: The name of a <code>CodegenGenericDataEnum</code>.
        nonModels:
          allOf:
            - $ref: '#/components/schemas/CodegenGenericDataNonModels'
            - description: The name of a <code>CodegenGenericDataNonModel</code>.
      description: Describes the data schema for a code generation job.
    Boolean:
      type: boolean
    CodegenFeatureFlags:
      type: object
      properties:
        isRelationshipSupported:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifes whether a code generation job supports data relationships.
        isNonModelSupported:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether a code generation job supports non models.
      description: Describes the feature flags that you can specify for a code generation job.
    UpdateComponentResponse:
      type: object
      properties:
        entity:
          allOf:
            - $ref: '#/components/schemas/Component'
            - description: Describes the configuration of the updated component.
    Uuid:
      type: string
    UpdateFormResponse:
      type: object
      properties:
        entity:
          allOf:
            - $ref: '#/components/schemas/Form'
            - description: Describes the configuration of the updated form.
    UpdateThemeResponse:
      type: object
      properties:
        entity:
          allOf:
            - $ref: '#/components/schemas/Theme'
            - description: Describes the configuration of the updated theme.
    ComponentProperty:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value to assign to the component property.
        bindingProperties:
          allOf:
            - $ref: '#/components/schemas/ComponentPropertyBindingProperties'
            - description: The information to bind the component property to data at runtime.
        collectionBindingProperties:
          allOf:
            - $ref: '#/components/schemas/ComponentPropertyBindingProperties'
            - description: The information to bind the component property to data at runtime. Use this for collection components.
        defaultValue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The default value to assign to the component property.
        model:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The data model to use to assign a value to the component property.
        bindings:
          allOf:
            - $ref: '#/components/schemas/FormBindings'
            - description: The information to bind the component property to form data.
        event:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An event that occurs in your app. Use this for workflow data binding.
        userAttribute:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An authenticated user attribute to use to assign a value to the component property.
        concat:
          allOf:
            - $ref: '#/components/schemas/ComponentPropertyList'
            - description: A list of component properties to concatenate to create the value to assign to this component property.
        condition:
          allOf:
            - $ref: '#/components/schemas/ComponentConditionProperty'
            - description: The conditional expression to use to assign a value to the component property.
        configured:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether the user configured the property in Amplify Studio after importing it.
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The component type.
        importedValue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The default value assigned to the property when the component is imported into an app.
        componentName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the component that is affected by an event.
        property:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the component's property that is affected by an event.
      description: Describes the configuration for all of a component's properties. Use <code>ComponentProperty</code> to specify the values to render or bind by default.
    ComponentProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentProperty'
    MutationActionSetStateParameter:
      type: object
      required:
        - componentName
        - property
        - set
      properties:
        componentName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the component that is being modified.
        property:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the component property to apply the state configuration to.
        set:
          allOf:
            - $ref: '#/components/schemas/ComponentProperty'
            - description: The state configuration to assign to the property.
      description: Represents the state configuration when an action modifies a property of another element within the same component.
    ActionParameters:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/ComponentProperty'
            - description: The type of navigation action. Valid values are <code>url</code> and <code>anchor</code>. This value is required for a navigation action.
        url:
          allOf:
            - $ref: '#/components/schemas/ComponentProperty'
            - description: The URL to the location to open. Specify this value for a navigation action.
        anchor:
          allOf:
            - $ref: '#/components/schemas/ComponentProperty'
            - description: The HTML anchor link to the location to open. Specify this value for a navigation action.
        target:
          allOf:
            - $ref: '#/components/schemas/ComponentProperty'
            - description: The element within the same component to modify when the action occurs.
        global:
          allOf:
            - $ref: '#/components/schemas/ComponentProperty'
            - description: Specifies whether the user should be signed out globally. Specify this value for an auth sign out action.
        model:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the data model. Use when the action performs an operation on an Amplify DataStore model.
        id:
          allOf:
            - $ref: '#/components/schemas/ComponentProperty'
            - description: The unique ID of the component that the <code>ActionParameters</code> apply to.
        fields:
          allOf:
            - $ref: '#/components/schemas/ComponentProperties'
            - description: A dictionary of key-value pairs mapping Amplify Studio properties to fields in a data model. Use when the action performs an operation on an Amplify DataStore model.
        state:
          allOf:
            - $ref: '#/components/schemas/MutationActionSetStateParameter'
            - description: A key-value pair that specifies the state property name and its initial value.
      description: Represents the event action configuration for an element of a <code>Component</code> or <code>ComponentChild</code>. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components. <code>ActionParameters</code> defines the action that is performed when an event occurs on the component.
    GraphQLRenderConfig:
      type: object
      required:
        - typesFilePath
        - queriesFilePath
        - mutationsFilePath
        - subscriptionsFilePath
        - fragmentsFilePath
      properties:
        typesFilePath:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The path to the GraphQL types file, relative to the component output directory.'
        queriesFilePath:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The path to the GraphQL queries file, relative to the component output directory.'
        mutationsFilePath:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The path to the GraphQL mutations file, relative to the component output directory.'
        subscriptionsFilePath:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The path to the GraphQL subscriptions file, relative to the component output directory.'
        fragmentsFilePath:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The path to the GraphQL fragments file, relative to the component output directory.'
      description: Describes the GraphQL configuration for an API for a code generation job.
    DataStoreRenderConfig:
      type: object
      properties: {}
      description: Describes the DataStore configuration for an API for a code generation job.
    NoApiRenderConfig:
      type: object
      properties: {}
      description: Describes the configuration for an application with no API being used.
    ApiConfiguration:
      type: object
      properties:
        graphQLConfig:
          allOf:
            - $ref: '#/components/schemas/GraphQLRenderConfig'
            - description: The configuration for an application using GraphQL APIs.
        dataStoreConfig:
          allOf:
            - $ref: '#/components/schemas/DataStoreRenderConfig'
            - description: The configuration for an application using DataStore APIs.
        noApiConfig:
          allOf:
            - $ref: '#/components/schemas/NoApiRenderConfig'
            - description: The configuration for an application with no API being used.
      description: Describes the API configuration for a code generation job.
    AppId:
      type: string
      pattern: 'd[a-z0-9]+'
      minLength: 1
      maxLength: 20
    AssociatedFieldsList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    CodegenGenericDataEnumValuesList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    CodegenGenericDataEnum:
      type: object
      required:
        - values
      properties:
        values:
          allOf:
            - $ref: '#/components/schemas/CodegenGenericDataEnumValuesList'
            - description: The list of enum values in the generic data schema.
      description: Describes the enums in a generic data schema.
    CodegenGenericDataEnums:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataEnum'
    CodegenGenericDataFieldDataType:
      type: string
      enum:
        - ID
        - String
        - Int
        - Float
        - AWSDate
        - AWSTime
        - AWSDateTime
        - AWSTimestamp
        - AWSEmail
        - AWSURL
        - AWSIPAddress
        - Boolean
        - AWSJSON
        - AWSPhone
        - Enum
        - Model
        - NonModel
    CodegenGenericDataRelationshipType:
      type: object
      required:
        - type
        - relatedModelName
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/GenericDataRelationshipType'
            - description: The data relationship type.
        relatedModelName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the related model in the data relationship.
        relatedModelFields:
          allOf:
            - $ref: '#/components/schemas/RelatedModelFieldsList'
            - description: The related model fields in the data relationship.
        canUnlinkAssociatedModel:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether the relationship can unlink the associated model.
        relatedJoinFieldName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the related join field in the data relationship.
        relatedJoinTableName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the related join table in the data relationship.
        belongsToFieldOnRelatedModel:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The value of the <code>belongsTo</code> field on the related data model. '
        associatedFields:
          allOf:
            - $ref: '#/components/schemas/AssociatedFieldsList'
            - description: The associated fields of the data relationship.
        isHasManyIndex:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether the <code>@index</code> directive is supported for a <code>hasMany</code> data relationship.
      description: Describes the relationship between generic data models.
    CodegenGenericDataField:
      type: object
      required:
        - dataType
        - dataTypeValue
        - required
        - readOnly
        - isArray
      properties:
        dataType:
          allOf:
            - $ref: '#/components/schemas/CodegenGenericDataFieldDataType'
            - description: The data type for the generic data field.
        dataTypeValue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value of the data type for the generic data field.
        required:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether the generic data field is required.
        readOnly:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether the generic data field is read-only.
        isArray:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether the generic data field is an array.
        relationship:
          allOf:
            - $ref: '#/components/schemas/CodegenGenericDataRelationshipType'
            - description: The relationship of the generic data schema.
      description: Describes a field in a generic data schema.
    CodegenGenericDataFields:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataField'
    CodegenPrimaryKeysList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    CodegenGenericDataModel:
      type: object
      required:
        - fields
        - primaryKeys
      properties:
        fields:
          allOf:
            - $ref: '#/components/schemas/CodegenGenericDataFields'
            - description: The fields in the generic data model.
        isJoinTable:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether the generic data model is a join table.
        primaryKeys:
          allOf:
            - $ref: '#/components/schemas/CodegenPrimaryKeysList'
            - description: The primary keys of the generic data model.
      description: Describes a model in a generic data schema.
    CodegenGenericDataModels:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataModel'
    CodegenGenericDataNonModelFields:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataField'
    CodegenGenericDataNonModel:
      type: object
      required:
        - fields
      properties:
        fields:
          allOf:
            - $ref: '#/components/schemas/CodegenGenericDataNonModelFields'
            - description: The fields in a generic data schema non model.
      description: Describes a non-model in a generic data schema.
    CodegenGenericDataNonModels:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataNonModel'
    GenericDataRelationshipType:
      type: string
      enum:
        - HAS_MANY
        - HAS_ONE
        - BELONGS_TO
    RelatedModelFieldsList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    CodegenJobStatus:
      type: string
      enum:
        - in_progress
        - failed
        - succeeded
    CodegenJobAsset:
      type: object
      properties:
        downloadUrl:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The URL to use to access the asset.
      description: Describes an asset for a code generation job.
    SyntheticTimestamp_date_time:
      type: string
      format: date-time
    CodegenJob:
      type: object
      required:
        - id
        - appId
        - environmentName
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Uuid'
            - description: The unique ID for the code generation job.
        appId:
          allOf:
            - $ref: '#/components/schemas/AppId'
            - description: The ID of the Amplify app associated with the code generation job.
        environmentName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the backend environment associated with the code generation job.
        renderConfig:
          $ref: '#/components/schemas/CodegenJobRenderConfig'
        genericDataSchema:
          $ref: '#/components/schemas/CodegenJobGenericDataSchema'
        autoGenerateForms:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether to autogenerate forms in the code generation job.
        features:
          $ref: '#/components/schemas/CodegenFeatureFlags'
        status:
          allOf:
            - $ref: '#/components/schemas/CodegenJobStatus'
            - description: The status of the code generation job.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The customized status message for the code generation job.
        asset:
          allOf:
            - $ref: '#/components/schemas/CodegenJobAsset'
            - description: The <code>CodegenJobAsset</code> to use for the code generation job.
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - description: One or more key-value pairs to use when tagging the code generation job.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: The time that the code generation job was created.
        modifiedAt:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: The time that the code generation job was modified.
      description: Describes the configuration for a code generation job that is associated with an Amplify app.
    CodegenJobGenericDataSourceType:
      type: string
      enum:
        - DataStore
    ReactStartCodegenJobData:
      type: object
      properties:
        module:
          allOf:
            - $ref: '#/components/schemas/JSModule'
            - description: The JavaScript module type.
        target:
          allOf:
            - $ref: '#/components/schemas/JSTarget'
            - description: The ECMAScript specification to use.
        script:
          allOf:
            - $ref: '#/components/schemas/JSScript'
            - description: The file type to use for a JavaScript project.
        renderTypeDeclarations:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether the code generation job should render type declaration files.
        inlineSourceMap:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether the code generation job should render inline source maps.
        apiConfiguration:
          allOf:
            - $ref: '#/components/schemas/ApiConfiguration'
            - description: The API configuration for the code generation job.
      description: Describes the code generation job configuration for a React project.
    CodegenJobSummary:
      type: object
      required:
        - appId
        - environmentName
        - id
      properties:
        appId:
          allOf:
            - $ref: '#/components/schemas/AppId'
            - description: The unique ID of the Amplify app associated with the code generation job.
        environmentName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the backend environment associated with the code generation job.
        id:
          allOf:
            - $ref: '#/components/schemas/Uuid'
            - description: The unique ID for the code generation job summary.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: The time that the code generation job summary was created.
        modifiedAt:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: The time that the code generation job summary was modified.
      description: A summary of the basic information about the code generation job.
    CodegenJobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CodegenJobSummary'
    Component:
      type: object
      required:
        - appId
        - environmentName
        - id
        - name
        - componentType
        - properties
        - variants
        - overrides
        - bindingProperties
        - createdAt
      properties:
        appId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique ID of the Amplify app associated with the component.
        environmentName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the backend environment that is a part of the Amplify app.
        sourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The unique ID of the component in its original source system, such as Figma.'
        id:
          allOf:
            - $ref: '#/components/schemas/Uuid'
            - description: The unique ID of the component.
        name:
          allOf:
            - $ref: '#/components/schemas/ComponentName'
            - description: The name of the component.
        componentType:
          allOf:
            - $ref: '#/components/schemas/ComponentType'
            - description: The type of the component. This can be an Amplify custom UI component or another custom component.
        properties:
          description: Describes the component's properties. You can't specify <code>tags</code> as a valid property for <code>properties</code>.
        children:
          allOf:
            - $ref: '#/components/schemas/ComponentChildList'
            - description: A list of the component's <code>ComponentChild</code> instances.
        variants:
          allOf:
            - $ref: '#/components/schemas/ComponentVariants'
            - description: A list of the component's variants. A variant is a unique style configuration of a main component.
        overrides:
          allOf:
            - $ref: '#/components/schemas/ComponentOverrides'
            - description: Describes the component's properties that can be overriden in a customized instance of the component. You can't specify <code>tags</code> as a valid property for <code>overrides</code>.
        bindingProperties:
          allOf:
            - $ref: '#/components/schemas/ComponentBindingProperties'
            - description: <p>The information to connect a component's properties to data at runtime. You can't specify <code>tags</code> as a valid property for <code>bindingProperties</code>.</p> <p/>
        collectionProperties:
          allOf:
            - $ref: '#/components/schemas/ComponentCollectionProperties'
            - description: The data binding configuration for the component's properties. Use this for a collection component. You can't specify <code>tags</code> as a valid property for <code>collectionProperties</code>.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: The time that the component was created.
        modifiedAt:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: The time that the component was modified.
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - description: One or more key-value pairs to use when tagging the component.
        events:
          allOf:
            - $ref: '#/components/schemas/ComponentEvents'
            - description: Describes the events that can be raised on the component. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components.
        schemaVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The schema version of the component when it was imported.
      description: 'Contains the configuration settings for a user interface (UI) element for an Amplify app. A component is configured as a primary, stand-alone UI element. Use <code>ComponentChild</code> to configure an instance of a <code>Component</code>. A <code>ComponentChild</code> instance inherits the configuration of the main <code>Component</code>.'
    ComponentBindingPropertiesValue:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The property type.
        bindingProperties:
          allOf:
            - $ref: '#/components/schemas/ComponentBindingPropertiesValueProperties'
            - description: Describes the properties to customize with data at runtime.
        defaultValue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The default value of the property.
      description: Represents the data binding configuration for a component at runtime. You can use <code>ComponentBindingPropertiesValue</code> to add exposed properties to a component to allow different values to be entered when a component is reused in different places in an app.
    ComponentBindingPropertiesValueProperties:
      type: object
      properties:
        model:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An Amplify DataStore model.
        field:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The field to bind the data to.
        predicates:
          allOf:
            - $ref: '#/components/schemas/PredicateList'
            - description: A list of predicates for binding a component's properties to data.
        userAttribute:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An authenticated user attribute.
        bucket:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An Amazon S3 bucket.
        key:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The storage key for an Amazon S3 bucket.
        defaultValue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The default value to assign to the property.
        slotName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of a component slot.
      description: 'Represents the data binding configuration for a specific property using data stored in Amazon Web Services. For Amazon Web Services connected properties, you can bind a property to data stored in an Amazon S3 bucket, an Amplify DataStore model or an authenticated user attribute.'
    PredicateList:
      type: array
      items:
        $ref: '#/components/schemas/Predicate'
    ComponentChild:
      type: object
      required:
        - componentType
        - name
        - properties
      properties:
        componentType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The type of the child component. '
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the child component.
        properties:
          description: Describes the properties of the child component. You can't specify <code>tags</code> as a valid property for <code>properties</code>.
        children:
          allOf:
            - $ref: '#/components/schemas/ComponentChildList'
            - description: The list of <code>ComponentChild</code> instances for this component.
        events:
          allOf:
            - $ref: '#/components/schemas/ComponentEvents'
            - description: Describes the events that can be raised on the child component. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components.
        sourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The unique ID of the child component in its original source system, such as Figma.'
      description: A nested UI configuration within a parent <code>Component</code>.
    ComponentDataConfiguration:
      type: object
      required:
        - model
      properties:
        model:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the data model to use to bind data to a component.
        sort:
          allOf:
            - $ref: '#/components/schemas/SortPropertyList'
            - description: Describes how to sort the component's properties.
        predicate:
          allOf:
            - $ref: '#/components/schemas/Predicate'
            - description: Represents the conditional logic to use when binding data to a component. Use this property to retrieve only a subset of the data in a collection.
        identifiers:
          allOf:
            - $ref: '#/components/schemas/IdentifierList'
            - description: 'A list of IDs to use to bind data to a component. Use this property to bind specifically chosen data, rather than data retrieved from a query.'
      description: Describes the configuration for binding a component's properties to data.
    ComponentConditionProperty:
      type: object
      properties:
        property:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the conditional property.
        field:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of a field. Specify this when the property is a data model.
        operator:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.'
        operand:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value of the property to evaluate.
        then:
          allOf:
            - $ref: '#/components/schemas/ComponentProperty'
            - description: The value to assign to the property if the condition is met.
        else:
          allOf:
            - $ref: '#/components/schemas/ComponentProperty'
            - description: The value to assign to the property if the condition is not met.
        operandType:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The type of the property to evaluate.
      description: 'Represents a conditional expression to set a component property. Use <code>ComponentConditionProperty</code> to set a property to different values conditionally, based on the value of another property.'
    SortPropertyList:
      type: array
      items:
        $ref: '#/components/schemas/SortProperty'
    Predicate:
      type: object
      properties:
        or:
          allOf:
            - $ref: '#/components/schemas/PredicateList'
            - description: A list of predicates to combine logically.
        and:
          allOf:
            - $ref: '#/components/schemas/PredicateList'
            - description: A list of predicates to combine logically.
        field:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The field to query.
        operator:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The operator to use to perform the evaluation.
        operand:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value to use when performing the evaluation.
        operandType:
          allOf:
            - $ref: '#/components/schemas/OperandType'
            - description: The type of value to use when performing the evaluation.
      description: Stores information for generating Amplify DataStore queries. Use a <code>Predicate</code> to retrieve a subset of the data in a collection.
    IdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ComponentEvent:
      type: object
      properties:
        action:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The action to perform when a specific event is raised.
        parameters:
          allOf:
            - $ref: '#/components/schemas/ActionParameters'
            - description: Describes information about the action.
        bindingEvent:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Binds an event to an action on a component. When you specify a <code>bindingEvent</code>, the event is called when the action is performed.'
      description: 'Describes the configuration of an event. You can bind an event and a corresponding action to a <code>Component</code> or a <code>ComponentChild</code>. A button click is an example of an event. '
    ComponentList:
      type: array
      items:
        $ref: '#/components/schemas/Component'
    ComponentOverridesValue:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ComponentPropertyBindingProperties:
      type: object
      required:
        - property
      properties:
        property:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The component property to bind to the data field.
        field:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The data field to bind the property to.
      description: Associates a component property to a binding property. This enables exposed properties on the top level component to propagate data to the component's property values.
    FormBindings:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FormBindingElement'
    ComponentPropertyList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentProperty'
    ComponentSummary:
      type: object
      required:
        - appId
        - environmentName
        - id
        - name
        - componentType
      properties:
        appId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique ID of the Amplify app associated with the component.
        environmentName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the backend environment that is a part of the Amplify app.
        id:
          allOf:
            - $ref: '#/components/schemas/Uuid'
            - description: The unique ID of the component.
        name:
          allOf:
            - $ref: '#/components/schemas/ComponentName'
            - description: The name of the component.
        componentType:
          allOf:
            - $ref: '#/components/schemas/ComponentType'
            - description: The component type.
      description: Contains a summary of a component. This is a read-only data type that is returned by <code>ListComponents</code>.
    ComponentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentSummary'
    ComponentVariantValues:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ComponentVariant:
      type: object
      properties:
        variantValues:
          allOf:
            - $ref: '#/components/schemas/ComponentVariantValues'
            - description: The combination of variants that comprise this variant. You can't specify <code>tags</code> as a valid property for <code>variantValues</code>.
        overrides:
          allOf:
            - $ref: '#/components/schemas/ComponentOverrides'
            - description: The properties of the component variant that can be overriden when customizing an instance of the component. You can't specify <code>tags</code> as a valid property for <code>overrides</code>.
      description: Describes the style configuration of a unique variation of a main component.
    CreateComponentData:
      type: object
      required:
        - name
        - componentType
        - properties
        - variants
        - overrides
        - bindingProperties
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/ComponentName'
            - description: The name of the component
        sourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The unique ID of the component in its original source system, such as Figma.'
        componentType:
          allOf:
            - $ref: '#/components/schemas/ComponentType'
            - description: The component type. This can be an Amplify custom UI component or another custom component.
        properties:
          description: Describes the component's properties.
        children:
          allOf:
            - $ref: '#/components/schemas/ComponentChildList'
            - description: A list of child components that are instances of the main component.
        variants:
          allOf:
            - $ref: '#/components/schemas/ComponentVariants'
            - description: A list of the unique variants of this component.
        overrides:
          allOf:
            - $ref: '#/components/schemas/ComponentOverrides'
            - description: Describes the component properties that can be overriden to customize an instance of the component.
        bindingProperties:
          allOf:
            - $ref: '#/components/schemas/ComponentBindingProperties'
            - description: The data binding information for the component's properties.
        collectionProperties:
          allOf:
            - $ref: '#/components/schemas/ComponentCollectionProperties'
            - description: The data binding configuration for customizing a component's properties. Use this for a collection component.
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - description: One or more key-value pairs to use when tagging the component data.
        events:
          allOf:
            - $ref: '#/components/schemas/ComponentEvents'
            - description: The event configuration for the component. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components.
        schemaVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The schema version of the component when it was imported.
      description: Represents all of the information that is required to create a component.
    CreateComponentRequest:
      type: object
      required:
        - componentToCreate
      title: CreateComponentRequest
      properties:
        componentToCreate:
          allOf:
            - $ref: '#/components/schemas/CreateComponentData'
            - description: Represents the configuration of the component to create.
    CreateFormData:
      type: object
      required:
        - name
        - dataType
        - formActionType
        - fields
        - style
        - sectionalElements
        - schemaVersion
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/FormName'
            - description: The name of the form.
        dataType:
          allOf:
            - $ref: '#/components/schemas/FormDataTypeConfig'
            - description: The type of data source to use to create the form.
        formActionType:
          allOf:
            - $ref: '#/components/schemas/FormActionType'
            - description: Specifies whether to perform a create or update action on the form.
        fields:
          allOf:
            - $ref: '#/components/schemas/FieldsMap'
            - description: The configuration information for the form's fields.
        style:
          allOf:
            - $ref: '#/components/schemas/FormStyle'
            - description: The configuration for the form's style.
        sectionalElements:
          allOf:
            - $ref: '#/components/schemas/SectionalElementMap'
            - description: The configuration information for the visual helper elements for the form. These elements are not associated with any data.
        schemaVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The schema version of the form.
        cta:
          allOf:
            - $ref: '#/components/schemas/FormCTA'
            - description: The <code>FormCTA</code> object that stores the call to action configuration for the form.
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - description: One or more key-value pairs to use when tagging the form data.
        labelDecorator:
          allOf:
            - $ref: '#/components/schemas/LabelDecorator'
            - description: Specifies an icon or decoration to display on the form.
      description: Represents all of the information that is required to create a form.
    CreateFormRequest:
      type: object
      required:
        - formToCreate
      title: CreateFormRequest
      properties:
        formToCreate:
          allOf:
            - $ref: '#/components/schemas/CreateFormData'
            - description: Represents the configuration of the form to create.
    Form:
      type: object
      required:
        - appId
        - environmentName
        - id
        - name
        - formActionType
        - style
        - dataType
        - fields
        - sectionalElements
        - schemaVersion
      properties:
        appId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique ID of the Amplify app associated with the form.
        environmentName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the backend environment that is a part of the Amplify app.
        id:
          allOf:
            - $ref: '#/components/schemas/Uuid'
            - description: The unique ID of the form.
        name:
          allOf:
            - $ref: '#/components/schemas/FormName'
            - description: The name of the form.
        formActionType:
          allOf:
            - $ref: '#/components/schemas/FormActionType'
            - description: The operation to perform on the specified form.
        style:
          allOf:
            - $ref: '#/components/schemas/FormStyle'
            - description: Stores the configuration for the form's style.
        dataType:
          allOf:
            - $ref: '#/components/schemas/FormDataTypeConfig'
            - description: The type of data source to use to create the form.
        fields:
          allOf:
            - $ref: '#/components/schemas/FieldsMap'
            - description: Stores the information about the form's fields.
        sectionalElements:
          allOf:
            - $ref: '#/components/schemas/SectionalElementMap'
            - description: Stores the visual helper elements for the form that are not associated with any data.
        schemaVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The schema version of the form when it was imported.
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - description: One or more key-value pairs to use when tagging the form.
        cta:
          allOf:
            - $ref: '#/components/schemas/FormCTA'
            - description: Stores the call to action configuration for the form.
        labelDecorator:
          allOf:
            - $ref: '#/components/schemas/LabelDecorator'
            - description: Specifies an icon or decoration to display on the form.
      description: Contains the configuration settings for a <code>Form</code> user interface (UI) element for an Amplify app. A form is a component you can add to your project by specifying a data source as the default configuration for the form.
    CreateThemeData:
      type: object
      required:
        - name
        - values
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/ThemeName'
            - description: The name of the theme.
        values:
          allOf:
            - $ref: '#/components/schemas/ThemeValuesList'
            - description: A list of key-value pairs that deﬁnes the properties of the theme.
        overrides:
          allOf:
            - $ref: '#/components/schemas/ThemeValuesList'
            - description: Describes the properties that can be overriden to customize an instance of the theme.
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - description: One or more key-value pairs to use when tagging the theme data.
      description: Represents all of the information that is required to create a theme.
    CreateThemeRequest:
      type: object
      required:
        - themeToCreate
      title: CreateThemeRequest
      properties:
        themeToCreate:
          allOf:
            - $ref: '#/components/schemas/CreateThemeData'
            - description: Represents the configuration of the theme to create.
    Theme:
      type: object
      required:
        - appId
        - environmentName
        - id
        - name
        - createdAt
        - values
      properties:
        appId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique ID for the Amplify app associated with the theme.
        environmentName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the backend environment that is a part of the Amplify app.
        id:
          allOf:
            - $ref: '#/components/schemas/Uuid'
            - description: The ID for the theme.
        name:
          allOf:
            - $ref: '#/components/schemas/ThemeName'
            - description: The name of the theme.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: The time that the theme was created.
        modifiedAt:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: The time that the theme was modified.
        values:
          allOf:
            - $ref: '#/components/schemas/ThemeValuesList'
            - description: A list of key-value pairs that defines the properties of the theme.
        overrides:
          allOf:
            - $ref: '#/components/schemas/ThemeValuesList'
            - description: Describes the properties that can be overriden to customize a theme.
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - description: One or more key-value pairs to use when tagging the theme.
      description: A theme is a collection of style settings that apply globally to the components associated with an Amplify application.
    DeleteComponentRequest:
      type: object
      title: DeleteComponentRequest
      properties: {}
    DeleteFormRequest:
      type: object
      title: DeleteFormRequest
      properties: {}
    DeleteThemeRequest:
      type: object
      title: DeleteThemeRequest
      properties: {}
    TokenProviders:
      type: string
      enum:
        - figma
    ExchangeCodeForTokenRequestBody:
      type: object
      required:
        - code
        - redirectUri
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/SensitiveString'
            - description: The access code to send in the request.
        redirectUri:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The location of the application that will receive the access code.
        clientId:
          allOf:
            - $ref: '#/components/schemas/SensitiveString'
            - description: The ID of the client to request the token from.
      description: Describes the configuration of a request to exchange an access code for a token.
    ExchangeCodeForTokenRequest:
      type: object
      required:
        - request
      title: ExchangeCodeForTokenRequest
      properties:
        request:
          allOf:
            - $ref: '#/components/schemas/ExchangeCodeForTokenRequestBody'
            - description: Describes the configuration of the request.
    Integer:
      type: integer
    ExportComponentsRequest:
      type: object
      title: ExportComponentsRequest
      properties: {}
    ExportFormsRequest:
      type: object
      title: ExportFormsRequest
      properties: {}
    FormList:
      type: array
      items:
        $ref: '#/components/schemas/Form'
    ExportThemesRequest:
      type: object
      title: ExportThemesRequest
      properties: {}
    ThemeList:
      type: array
      items:
        $ref: '#/components/schemas/Theme'
    FeaturesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    FieldPosition:
      type: object
      properties:
        fixed:
          allOf:
            - $ref: '#/components/schemas/FixedPosition'
            - description: The field position is fixed and doesn't change in relation to other fields.
        rightOf:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The field position is to the right of the field specified by the string.
        below:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The field position is below the field specified by the string.
      description: Describes the field position.
    FieldInputConfig:
      type: object
      required:
        - type
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The input type for the field. '
        required:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies a field that requires input.
        readOnly:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies a read only field.
        placeholder:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The text to display as a placeholder for the field.
        defaultValue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The default value for the field.
        descriptiveText:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The text to display to describe the field.
        defaultChecked:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether a field has a default value.
        defaultCountryCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The default country code for a phone number.
        valueMappings:
          allOf:
            - $ref: '#/components/schemas/ValueMappings'
            - description: The information to use to customize the input fields with data at runtime.
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the field.
        minValue:
          allOf:
            - $ref: '#/components/schemas/Float'
            - description: The minimum value to display for the field.
        maxValue:
          allOf:
            - $ref: '#/components/schemas/Float'
            - description: The maximum value to display for the field.
        step:
          allOf:
            - $ref: '#/components/schemas/Float'
            - description: The stepping increment for a numeric value in a field.
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value for the field.
        isArray:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether to render the field as an array. This property is ignored if the <code>dataSourceType</code> for the form is a Data Store.
        fileUploaderConfig:
          allOf:
            - $ref: '#/components/schemas/FileUploaderFieldConfig'
            - description: The configuration for the file uploader field.
      description: Describes the configuration for the default input values to display for a field.
    ValidationsList:
      type: array
      items:
        $ref: '#/components/schemas/FieldValidationConfiguration'
    FieldConfig:
      type: object
      properties:
        label:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The label for the field.
        position:
          allOf:
            - $ref: '#/components/schemas/FieldPosition'
            - description: Specifies the field position.
        excluded:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether to hide a field.
        inputType:
          allOf:
            - $ref: '#/components/schemas/FieldInputConfig'
            - description: Describes the configuration for the default input value to display for a field.
        validations:
          allOf:
            - $ref: '#/components/schemas/ValidationsList'
            - description: The validations to perform on the value in the field.
      description: Describes the configuration information for a field in a table.
    ValueMappings:
      type: object
      required:
        - values
      properties:
        values:
          allOf:
            - $ref: '#/components/schemas/ValueMappingList'
            - description: The value and display value pairs.
        bindingProperties:
          allOf:
            - $ref: '#/components/schemas/FormInputBindingProperties'
            - description: The information to bind fields to data at runtime.
      description: Represents the data binding configuration for a value map.
    Float:
      type: number
      format: float
    FileUploaderFieldConfig:
      type: object
      required:
        - accessLevel
        - acceptedFileTypes
      properties:
        accessLevel:
          allOf:
            - $ref: '#/components/schemas/StorageAccessLevel'
            - description: 'The access level to assign to the uploaded files in the Amazon S3 bucket where they are stored. The valid values for this property are <code>private</code>, <code>protected</code>, or <code>public</code>. For detailed information about the permissions associated with each access level, see <a href="https://docs.amplify.aws/lib/storage/configureaccess/q/platform/js/">File access levels</a> in the <i>Amplify documentation</i>.'
        acceptedFileTypes:
          allOf:
            - $ref: '#/components/schemas/StrValues'
            - description: The file types that are allowed to be uploaded by the file uploader. Provide this information in an array of strings specifying the valid file extensions.
        showThumbnails:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether to display or hide the image preview after selecting a file for upload. The default value is <code>true</code> to display the image preview.
        isResumable:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Allows the file upload operation to be paused and resumed. The default value is <code>false</code>.</p> <p>When <code>isResumable</code> is set to <code>true</code>, the file uploader uses a multipart upload to break the files into chunks before upload. The progress of the upload isn''t continuous, because the file uploader uploads a chunk at a time.</p>'
        maxFileCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Specifies the maximum number of files that can be selected to upload. The default value is an unlimited number of files.
        maxSize:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The maximum file size in bytes that the file uploader will accept. The default value is an unlimited file size.
      description: Describes the configuration for the file uploader field.
    FixedPosition:
      type: string
      enum:
        - first
    StrValues:
      type: array
      items:
        $ref: '#/components/schemas/String'
    NumValues:
      type: array
      items:
        $ref: '#/components/schemas/Integer'
    FieldValidationConfiguration:
      type: object
      required:
        - type
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The validation to perform on an object type.<code/> '
        strValues:
          allOf:
            - $ref: '#/components/schemas/StrValues'
            - description: The validation to perform on a string value.
        numValues:
          allOf:
            - $ref: '#/components/schemas/NumValues'
            - description: The validation to perform on a number value.
        validationMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The validation message to display.
      description: Describes the validation configuration for a field.
    StorageAccessLevel:
      type: string
      enum:
        - public
        - protected
        - private
    FormBindingElement:
      type: object
      required:
        - element
        - property
      properties:
        element:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the component to retrieve a value from.
        property:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The property to retrieve a value from.
      description: Describes how to bind a component property to form data.
    FormButton:
      type: object
      properties:
        excluded:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether the button is visible on the form.
        children:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Describes the button's properties.
        position:
          allOf:
            - $ref: '#/components/schemas/FieldPosition'
            - description: The position of the button.
      description: Describes the configuration for a button UI element that is a part of a form.
    FormButtonsPosition:
      type: string
      enum:
        - top
        - bottom
        - top_and_bottom
    FormDataSourceType:
      type: string
      enum:
        - DataStore
        - Custom
    FormInputBindingPropertiesValue:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The property type.
        bindingProperties:
          allOf:
            - $ref: '#/components/schemas/FormInputBindingPropertiesValueProperties'
            - description: Describes the properties to customize with data at runtime.
      description: Represents the data binding configuration for a form's input fields at runtime.You can use <code>FormInputBindingPropertiesValue</code> to add exposed properties to a form to allow different values to be entered when a form is reused in different places in an app.
    FormInputBindingProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FormInputBindingPropertiesValue'
    FormInputBindingPropertiesValueProperties:
      type: object
      properties:
        model:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: An Amplify DataStore model.
      description: 'Represents the data binding configuration for a specific property using data stored in Amazon Web Services. For Amazon Web Services connected properties, you can bind a property to data stored in an Amplify DataStore model.'
    FormInputValuePropertyBindingProperties:
      type: object
      required:
        - property
      properties:
        property:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The form property to bind to the data field.
        field:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The data field to bind the property to.
      description: Associates a form property to a binding property. This enables exposed properties on the top level form to propagate data to the form's property values.
    FormInputValuePropertyList:
      type: array
      items:
        $ref: '#/components/schemas/FormInputValueProperty'
    FormInputValueProperty:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value to assign to the input field.
        bindingProperties:
          allOf:
            - $ref: '#/components/schemas/FormInputValuePropertyBindingProperties'
            - description: The information to bind fields to data at runtime.
        concat:
          allOf:
            - $ref: '#/components/schemas/FormInputValuePropertyList'
            - description: A list of form properties to concatenate to create the value to assign to this field property.
      description: Describes the configuration for an input field on a form. Use <code>FormInputValueProperty</code> to specify the values to render or bind by default.
    FormStyleConfig:
      type: object
      properties:
        tokenReference:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A reference to a design token to use to bind the form's style properties to an existing theme.
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value of the style setting.
      description: Describes the configuration settings for the form's style properties.
    FormSummary:
      type: object
      required:
        - appId
        - dataType
        - environmentName
        - formActionType
        - id
        - name
      properties:
        appId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique ID for the app associated with the form summary.
        dataType:
          allOf:
            - $ref: '#/components/schemas/FormDataTypeConfig'
            - description: The form's data source type.
        environmentName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the backend environment that is part of the Amplify app.
        formActionType:
          allOf:
            - $ref: '#/components/schemas/FormActionType'
            - description: The type of operation to perform on the form.
        id:
          allOf:
            - $ref: '#/components/schemas/Uuid'
            - description: The ID of the form.
        name:
          allOf:
            - $ref: '#/components/schemas/FormName'
            - description: The name of the form.
      description: Describes the basic information about a form.
    FormSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/FormSummary'
    GetCodegenJobRequest:
      type: object
      title: GetCodegenJobRequest
      properties: {}
    GetComponentRequest:
      type: object
      title: GetComponentRequest
      properties: {}
    GetFormRequest:
      type: object
      title: GetFormRequest
      properties: {}
    GetMetadataRequest:
      type: object
      title: GetMetadataRequest
      properties: {}
    GetThemeRequest:
      type: object
      title: GetThemeRequest
      properties: {}
    JSModule:
      type: string
      enum:
        - es2020
        - esnext
    JSScript:
      type: string
      enum:
        - jsx
        - tsx
        - js
    JSTarget:
      type: string
      enum:
        - es2015
        - es2020
    ListCodegenJobsLimit:
      type: integer
      minimum: 1
      maximum: 100
    ListCodegenJobsRequest:
      type: object
      title: ListCodegenJobsRequest
      properties: {}
    ListComponentsLimit:
      type: integer
      minimum: 1
      maximum: 100
    ListComponentsRequest:
      type: object
      title: ListComponentsRequest
      properties: {}
    ListFormsLimit:
      type: integer
      minimum: 1
      maximum: 100
    ListFormsRequest:
      type: object
      title: ListFormsRequest
      properties: {}
    ListThemesLimit:
      type: integer
      minimum: 1
      maximum: 100
    ListThemesRequest:
      type: object
      title: ListThemesRequest
      properties: {}
    ThemeSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ThemeSummary'
    OperandType:
      type: string
      pattern: boolean|string|number
    PutMetadataFlagBody:
      type: object
      required:
        - newValue
      properties:
        newValue:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The new information to store.
      description: Stores the metadata information about a feature on a form.
    PutMetadataFlagRequest:
      type: object
      required:
        - body
      title: PutMetadataFlagRequest
      properties:
        body:
          allOf:
            - $ref: '#/components/schemas/PutMetadataFlagBody'
            - description: The metadata information to store.
    RefreshTokenRequestBody:
      type: object
      required:
        - token
      properties:
        token:
          allOf:
            - $ref: '#/components/schemas/SensitiveString'
            - description: The token to use to refresh a previously issued access token that might have expired.
        clientId:
          allOf:
            - $ref: '#/components/schemas/SensitiveString'
            - description: The ID of the client to request the token from.
      description: Describes a refresh token.
    RefreshTokenRequest:
      type: object
      required:
        - refreshTokenBody
      title: RefreshTokenRequest
      properties:
        refreshTokenBody:
          allOf:
            - $ref: '#/components/schemas/RefreshTokenRequestBody'
            - description: Information about the refresh token request.
    SectionalElement:
      type: object
      required:
        - type
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The type of sectional element. Valid values are <code>Heading</code>, <code>Text</code>, and <code>Divider</code>.'
        position:
          allOf:
            - $ref: '#/components/schemas/FieldPosition'
            - description: Specifies the position of the text in a field for a <code>Text</code> sectional element.
        text:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The text for a <code>Text</code> sectional element.
        level:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: Specifies the size of the font for a <code>Heading</code> sectional element. Valid values are <code>1 | 2 | 3 | 4 | 5 | 6</code>.
        orientation:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Specifies the orientation for a <code>Divider</code> sectional element. Valid values are <code>horizontal</code> or <code>vertical</code>.
        excluded:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Excludes a sectional element that was generated by default for a specified data model.
      description: 'Stores the configuration information for a visual helper element for a form. A sectional element can be a header, a text block, or a divider. These elements are static and not associated with any data.'
    SortDirection:
      type: string
      enum:
        - ASC
        - DESC
    SortProperty:
      type: object
      required:
        - field
        - direction
      properties:
        field:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The field to perform the sort on.
        direction:
          allOf:
            - $ref: '#/components/schemas/SortDirection'
            - description: 'The direction of the sort, either ascending or descending.'
      description: Describes how to sort the data that you bind to a component.
    StartCodegenJobData:
      type: object
      required:
        - renderConfig
      properties:
        renderConfig:
          allOf:
            - $ref: '#/components/schemas/CodegenJobRenderConfig'
            - description: The code generation configuration for the codegen job.
        genericDataSchema:
          allOf:
            - $ref: '#/components/schemas/CodegenJobGenericDataSchema'
            - description: The data schema to use for a code generation job.
        autoGenerateForms:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Specifies whether to autogenerate forms in the code generation job.
        features:
          allOf:
            - $ref: '#/components/schemas/CodegenFeatureFlags'
            - description: The feature flags for a code generation job.
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
            - description: One or more key-value pairs to use when tagging the code generation job data.
      description: The code generation job resource configuration.
    StartCodegenJobRequest:
      type: object
      required:
        - codegenJobToCreate
      title: StartCodegenJobRequest
      properties:
        codegenJobToCreate:
          allOf:
            - $ref: '#/components/schemas/StartCodegenJobData'
            - description: The code generation job resource configuration.
    TagKey:
      type: string
      pattern: '(?!aws:)[a-zA-Z+-=._:/]+'
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    ThemeSummary:
      type: object
      required:
        - appId
        - environmentName
        - id
        - name
      properties:
        appId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique ID for the app associated with the theme summary.
        environmentName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the backend environment that is part of the Amplify app.
        id:
          allOf:
            - $ref: '#/components/schemas/Uuid'
            - description: The ID of the theme.
        name:
          allOf:
            - $ref: '#/components/schemas/ThemeName'
            - description: The name of the theme.
      description: Describes the basic information about a theme.
    ThemeValue:
      type: object
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The value of a theme property.
        children:
          allOf:
            - $ref: '#/components/schemas/ThemeValuesList'
            - description: A list of key-value pairs that define the theme's properties.
      description: Describes the configuration of a theme's properties.
    ThemeValues:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the property.
        value:
          allOf:
            - $ref: '#/components/schemas/ThemeValue'
            - description: The value of the property.
      description: A key-value pair that defines a property of a theme.
    UpdateComponentData:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Uuid'
            - description: The unique ID of the component to update.
        name:
          allOf:
            - $ref: '#/components/schemas/ComponentName'
            - description: The name of the component to update.
        sourceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The unique ID of the component in its original source system, such as Figma.'
        componentType:
          allOf:
            - $ref: '#/components/schemas/ComponentType'
            - description: The type of the component. This can be an Amplify custom UI component or another custom component.
        properties:
          description: Describes the component's properties.
        children:
          allOf:
            - $ref: '#/components/schemas/ComponentChildList'
            - description: The components that are instances of the main component.
        variants:
          allOf:
            - $ref: '#/components/schemas/ComponentVariants'
            - description: A list of the unique variants of the main component being updated.
        overrides:
          allOf:
            - $ref: '#/components/schemas/ComponentOverrides'
            - description: Describes the properties that can be overriden to customize the component.
        bindingProperties:
          allOf:
            - $ref: '#/components/schemas/ComponentBindingProperties'
            - description: The data binding information for the component's properties.
        collectionProperties:
          allOf:
            - $ref: '#/components/schemas/ComponentCollectionProperties'
            - description: The configuration for binding a component's properties to a data model. Use this for a collection component.
        events:
          allOf:
            - $ref: '#/components/schemas/ComponentEvents'
            - description: The event configuration for the component. Use for the workflow feature in Amplify Studio that allows you to bind events and actions to components.
        schemaVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The schema version of the component when it was imported.
      description: 'Updates and saves all of the information about a component, based on component ID.'
    UpdateComponentRequest:
      type: object
      required:
        - updatedComponent
      title: UpdateComponentRequest
      properties:
        updatedComponent:
          allOf:
            - $ref: '#/components/schemas/UpdateComponentData'
            - description: The configuration of the updated component.
    UpdateFormData:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/FormName'
            - description: The name of the form.
        dataType:
          allOf:
            - $ref: '#/components/schemas/FormDataTypeConfig'
            - description: The type of data source to use to create the form.
        formActionType:
          allOf:
            - $ref: '#/components/schemas/FormActionType'
            - description: Specifies whether to perform a create or update action on the form.
        fields:
          allOf:
            - $ref: '#/components/schemas/FieldsMap'
            - description: The configuration information for the form's fields.
        style:
          allOf:
            - $ref: '#/components/schemas/FormStyle'
            - description: The configuration for the form's style.
        sectionalElements:
          allOf:
            - $ref: '#/components/schemas/SectionalElementMap'
            - description: The configuration information for the visual helper elements for the form. These elements are not associated with any data.
        schemaVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The schema version of the form.
        cta:
          allOf:
            - $ref: '#/components/schemas/FormCTA'
            - description: The <code>FormCTA</code> object that stores the call to action configuration for the form.
        labelDecorator:
          allOf:
            - $ref: '#/components/schemas/LabelDecorator'
            - description: Specifies an icon or decoration to display on the form.
      description: 'Updates and saves all of the information about a form, based on form ID.'
    UpdateFormRequest:
      type: object
      required:
        - updatedForm
      title: UpdateFormRequest
      properties:
        updatedForm:
          allOf:
            - $ref: '#/components/schemas/UpdateFormData'
            - description: The request accepts the following data in JSON format.
    UpdateThemeData:
      type: object
      required:
        - values
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Uuid'
            - description: The unique ID of the theme to update.
        name:
          allOf:
            - $ref: '#/components/schemas/ThemeName'
            - description: The name of the theme to update.
        values:
          allOf:
            - $ref: '#/components/schemas/ThemeValuesList'
            - description: A list of key-value pairs that define the theme's properties.
        overrides:
          allOf:
            - $ref: '#/components/schemas/ThemeValuesList'
            - description: Describes the properties that can be overriden to customize the theme.
      description: Saves the data binding information for a theme.
    UpdateThemeRequest:
      type: object
      required:
        - updatedTheme
      title: UpdateThemeRequest
      properties:
        updatedTheme:
          allOf:
            - $ref: '#/components/schemas/UpdateThemeData'
            - description: The configuration of the updated theme.
    ValueMapping:
      type: object
      required:
        - value
      properties:
        displayValue:
          allOf:
            - $ref: '#/components/schemas/FormInputValueProperty'
            - description: The value to display for the complex object.
        value:
          allOf:
            - $ref: '#/components/schemas/FormInputValueProperty'
            - description: The complex object.
      description: Associates a complex object with a display value. Use <code>ValueMapping</code> to store how to represent complex objects when they are displayed.
    ValueMappingList:
      type: array
      items:
        $ref: '#/components/schemas/ValueMapping'
security:
  - hmac: []
