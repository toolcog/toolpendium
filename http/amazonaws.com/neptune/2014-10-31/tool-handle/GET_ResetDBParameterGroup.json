{
  "name": "GET_ResetDBParameterGroup",
  "description": "Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request.",
  "parameters": {
    "type": "object",
    "properties": {
      "DBParameterGroupName": {
        "type": "string",
        "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DBParameterGroup.</p> </li> </ul>"
      },
      "ResetAllParameters": {
        "type": "boolean",
        "description": "<p>Specifies whether (<code>true</code>) or not (<code>false</code>) to reset all parameters in the DB parameter group to default values.</p> <p>Default: <code>true</code> </p>"
      },
      "Parameters": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Parameter"
            },
            {
              "xml": {
                "name": "Parameter"
              }
            }
          ]
        },
        "description": "<p>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <p>Valid Values (for Apply method): <code>pending-reboot</code> </p>"
      },
      "Action": {
        "type": "string",
        "enum": [
          "ResetDBParameterGroup"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2014-10-31"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "DBParameterGroupName",
      "Action",
      "Version"
    ],
    "$defs": {
      "Parameter": {
        "type": "object",
        "properties": {
          "ParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Specifies the name of the parameter."
              }
            ]
          },
          "ParameterValue": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Specifies the value of the parameter."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Provides a description of the parameter."
              }
            ]
          },
          "Source": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Indicates the source of the parameter value."
              }
            ]
          },
          "ApplyType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Specifies the engine specific parameters type."
              }
            ]
          },
          "DataType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Specifies the valid data type for the parameter."
              }
            ]
          },
          "AllowedValues": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Specifies the valid range of values for the parameter."
              }
            ]
          },
          "IsModifiable": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed."
              }
            ]
          },
          "MinimumEngineVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The earliest engine version to which the parameter can apply."
              }
            ]
          },
          "ApplyMethod": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplyMethod"
              },
              {
                "description": "Indicates when to apply parameter updates."
              }
            ]
          }
        },
        "description": "Specifies a parameter."
      },
      "String": {
        "type": "string"
      },
      "Boolean": {
        "type": "boolean"
      },
      "ApplyMethod": {
        "type": "string",
        "enum": [
          "immediate",
          "pending-reboot"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://rds.us-east-1.amazonaws.com/#Action=ResetDBParameterGroup{?DBParameterGroupName,ResetAllParameters,Parameters,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**DBParameterGroupName**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
