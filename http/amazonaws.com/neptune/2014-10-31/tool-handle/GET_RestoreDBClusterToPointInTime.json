{
  "name": "GET_RestoreDBClusterToPointInTime",
  "description": "<p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <a>CreateDBInstance</a> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "DBClusterIdentifier": {
        "type": "string",
        "description": "<p>The name of the new DB cluster to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
      },
      "RestoreType": {
        "type": "string",
        "description": "<p>The type of restore to be performed. You can specify one of the following values:</p> <ul> <li> <p> <code>full-copy</code> - The new DB cluster is restored as a full copy of the source DB cluster.</p> </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is restored as a clone of the source DB cluster.</p> </li> </ul> <p>If you don't specify a <code>RestoreType</code> value, then the new DB cluster is restored as a full copy of the source DB cluster.</p>"
      },
      "SourceDBClusterIdentifier": {
        "type": "string",
        "description": "<p>The identifier of the source DB cluster from which to restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>"
      },
      "RestoreToTime": {
        "type": "string",
        "format": "date-time",
        "description": "<p>The date and time to restore the DB cluster to.</p> <p>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the DB instance</p> </li> <li> <p>Must be specified if <code>UseLatestRestorableTime</code> parameter is not provided</p> </li> <li> <p>Cannot be specified if <code>UseLatestRestorableTime</code> parameter is true</p> </li> <li> <p>Cannot be specified if <code>RestoreType</code> parameter is <code>copy-on-write</code> </p> </li> </ul> <p>Example: <code>2015-03-07T23:45:00Z</code> </p>"
      },
      "UseLatestRestorableTime": {
        "type": "boolean",
        "description": "<p>A value that is set to <code>true</code> to restore the DB cluster to the latest restorable backup time, and <code>false</code> otherwise.</p> <p>Default: <code>false</code> </p> <p>Constraints: Cannot be specified if <code>RestoreToTime</code> parameter is provided.</p>"
      },
      "Port": {
        "type": "integer",
        "description": "<p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p>"
      },
      "DBSubnetGroupName": {
        "type": "string",
        "description": "<p>The DB subnet group name to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p> <p>Example: <code>mySubnetgroup</code> </p>"
      },
      "OptionGroupName": {
        "type": "string",
        "description": " <i>(Not supported by Neptune)</i> "
      },
      "VpcSecurityGroupIds": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "VpcSecurityGroupId"
              }
            }
          ]
        },
        "description": "A list of VPC security groups that the new DB cluster belongs to."
      },
      "Tags": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Tag"
            },
            {
              "xml": {
                "name": "Tag"
              }
            }
          ]
        },
        "description": "The tags to be applied to the restored DB cluster."
      },
      "KmsKeyId": {
        "type": "string",
        "description": "<p>The Amazon KMS key identifier to use when restoring an encrypted DB cluster from an encrypted DB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same Amazon account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>You can restore to a new DB cluster and encrypt the new DB cluster with a KMS key that is different than the KMS key used to encrypt the source DB cluster. The new DB cluster is encrypted with the KMS key identified by the <code>KmsKeyId</code> parameter.</p> <p>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following will occur:</p> <ul> <li> <p>If the DB cluster is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the source DB cluster.</p> </li> <li> <p>If the DB cluster is not encrypted, then the restored DB cluster is not encrypted.</p> </li> </ul> <p>If <code>DBClusterIdentifier</code> refers to a DB cluster that is not encrypted, then the restore request is rejected.</p>"
      },
      "EnableIAMDatabaseAuthentication": {
        "type": "boolean",
        "description": "<p>True to enable mapping of Amazon Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>"
      },
      "EnableCloudwatchLogsExports": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "description": "The list of logs that the restored DB cluster is to export to CloudWatch Logs."
      },
      "DBClusterParameterGroupName": {
        "type": "string",
        "description": "<p>The name of the DB cluster parameter group to associate with the new DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li> </ul>"
      },
      "DeletionProtection": {
        "type": "boolean",
        "description": "A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. "
      },
      "ServerlessV2ScalingConfiguration": {
        "type": "object",
        "properties": {
          "MinCapacity": {
            "allOf": [
              {
                "$ref": "#/$defs/DoubleOptional"
              },
              {
                "description": "The minimum number of Neptune capacity units (NCUs) for a DB instance in a Neptune Serverless cluster. You can specify NCU values in half-step increments, such as 8, 8.5, 9, and so on."
              }
            ]
          },
          "MaxCapacity": {
            "allOf": [
              {
                "$ref": "#/$defs/DoubleOptional"
              },
              {
                "description": "The maximum number of Neptune capacity units (NCUs) for a DB instance in a Neptune Serverless cluster. You can specify NCU values in half-step increments, such as 40, 40.5, 41, and so on."
              }
            ]
          }
        },
        "description": ""
      },
      "Action": {
        "type": "string",
        "enum": [
          "RestoreDBClusterToPointInTime"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2014-10-31"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "DBClusterIdentifier",
      "SourceDBClusterIdentifier",
      "Action",
      "Version"
    ],
    "$defs": {
      "String": {
        "type": "string"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with <code>aws:</code> or <code>rds:</code>. The string can only contain the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with <code>aws:</code> or <code>rds:</code>. The string can only contain the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
              }
            ]
          }
        },
        "description": "Metadata assigned to an Amazon Neptune resource consisting of a key-value pair."
      },
      "DoubleOptional": {
        "type": "number",
        "format": "double"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://rds.us-east-1.amazonaws.com/#Action=RestoreDBClusterToPointInTime{?DBClusterIdentifier,RestoreType,SourceDBClusterIdentifier,RestoreToTime,UseLatestRestorableTime,Port,DBSubnetGroupName,OptionGroupName,VpcSecurityGroupIds,Tags,KmsKeyId,EnableIAMDatabaseAuthentication,EnableCloudwatchLogsExports,DBClusterParameterGroupName,DeletionProtection,ServerlessV2ScalingConfiguration,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**DBCluster**: <p>Contains the details of an Amazon Neptune DB cluster.</p> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action.</p>",
              {
                "$ul": [
                  "**AllocatedStorage**",
                  "**AvailabilityZones**",
                  "**BackupRetentionPeriod**",
                  "**CharacterSetName**",
                  "**DatabaseName**",
                  "**DBClusterIdentifier**",
                  "**DBClusterParameterGroup**",
                  "**DBSubnetGroup**",
                  "**Status**",
                  "**PercentProgress**",
                  "**EarliestRestorableTime**",
                  "**Endpoint**",
                  "**ReaderEndpoint**",
                  "**MultiAZ**",
                  "**Engine**",
                  "**EngineVersion**",
                  "**LatestRestorableTime**",
                  "**Port**",
                  "**MasterUsername**",
                  "**DBClusterOptionGroupMemberships**",
                  "**PreferredBackupWindow**",
                  "**PreferredMaintenanceWindow**",
                  "**ReplicationSourceIdentifier**",
                  "**ReadReplicaIdentifiers**",
                  "**DBClusterMembers**",
                  "**VpcSecurityGroups**",
                  "**HostedZoneId**",
                  "**StorageEncrypted**",
                  "**KmsKeyId**",
                  "**DbClusterResourceId**",
                  "**DBClusterArn**",
                  "**AssociatedRoles**",
                  "**IAMDatabaseAuthenticationEnabled**",
                  "**CloneGroupId**",
                  "**ClusterCreateTime**",
                  "**CopyTagsToSnapshot**",
                  "**EnabledCloudwatchLogsExports**",
                  "**PendingModifiedValues**",
                  "**DeletionProtection**",
                  "**CrossAccountClone**",
                  "**AutomaticRestartTime**",
                  [
                    "**ServerlessV2ScalingConfiguration**: <p>Shows the scaling configuration for a Neptune Serverless DB cluster.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/neptune-serverless-using.html\">Using Amazon Neptune Serverless</a> in the <i>Amazon Neptune User Guide</i>.</p>",
                    {
                      "$ul": [
                        "**MinCapacity**",
                        "**MaxCapacity**"
                      ]
                    }
                  ],
                  "**GlobalClusterIdentifier**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "490": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "491": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "492": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "493": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "494": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "495": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "496": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
