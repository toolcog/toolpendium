{
  "name": "CreateSegment",
  "description": "Creates a new segment for an application or updates the configuration, dimension, and other settings for an existing segment that's associated with an application.",
  "parameters": {
    "type": "object",
    "properties": {
      "application-id": {
        "type": "string",
        "description": "The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "WriteSegmentRequest"
        ],
        "properties": {
          "WriteSegmentRequest": {
            "description": "Specifies the configuration, dimension, and other settings for a segment. A WriteSegmentRequest object can include a Dimensions object or a SegmentGroups object, but not both.",
            "type": "object",
            "properties": {
              "Dimensions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SegmentDimensions"
                  },
                  {
                    "description": "The criteria that define the dimensions for the segment."
                  }
                ]
              },
              "Name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "description": "The name of the segment."
                  }
                ]
              },
              "SegmentGroups": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SegmentGroupList"
                  },
                  {
                    "description": "The segment group to use and the dimensions to apply to the group's base segments in order to build the segment. A segment group can consist of zero or more base segments. Your request can include only one segment group."
                  }
                ]
              },
              "tags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MapOf__string"
                  },
                  {
                    "description": "<note><p>As of <b>22-05-2023</b> tags has been deprecated for update operations. After this date any value in tags is not processed and an error code is not returned. To manage tags we recommend using either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\">Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\">resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\">resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated) A string-to-string map of key-value pairs that defines the tags to associate with the segment. Each tag consists of a required tag key and an associated tag value.</p>"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "application-id",
      "body"
    ],
    "$defs": {
      "SegmentDimensions": {
        "type": "object",
        "properties": {
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/MapOfAttributeDimension"
              },
              {
                "description": "One or more custom attributes to use as criteria for the segment."
              }
            ]
          },
          "Behavior": {
            "allOf": [
              {
                "$ref": "#/$defs/SegmentBehaviors"
              },
              {
                "description": "The behavior-based criteria, such as how recently users have used your app, for the segment."
              }
            ]
          },
          "Demographic": {
            "allOf": [
              {
                "$ref": "#/$defs/SegmentDemographics"
              },
              {
                "description": "The demographic-based criteria, such as device platform, for the segment."
              }
            ]
          },
          "Location": {
            "allOf": [
              {
                "$ref": "#/$defs/SegmentLocation"
              },
              {
                "description": "The location-based criteria, such as region or GPS coordinates, for the segment."
              }
            ]
          },
          "Metrics": {
            "allOf": [
              {
                "$ref": "#/$defs/MapOfMetricDimension"
              },
              {
                "description": "One or more custom metrics to use as criteria for the segment."
              }
            ]
          },
          "UserAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/MapOfAttributeDimension"
              },
              {
                "description": "One or more custom user attributes to use as criteria for the segment."
              }
            ]
          }
        },
        "description": "Specifies the dimension settings for a segment."
      },
      "MapOfAttributeDimension": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/AttributeDimension"
        }
      },
      "AttributeDimension": {
        "type": "object",
        "required": [
          "Values"
        ],
        "properties": {
          "AttributeType": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeType"
              },
              {
                "description": "The type of segment dimension to use. Valid values are: <ul><li>INCLUSIVE - endpoints that have attributes matching the values are included in the segment.</li><li>EXCLUSIVE - endpoints that have attributes matching the values are excluded in the segment.</li><li>CONTAINS - endpoints that have attributes' substrings match the values are included in the segment.</li><li>BEFORE - endpoints with attributes read as ISO_INSTANT datetimes before the value are included in the segment.</li><li>AFTER - endpoints with attributes read as ISO_INSTANT datetimes after the value are included in the segment.</li><li>ON - endpoints with attributes read as ISO_INSTANT dates on the value are included in the segment. Time is ignored in this comparison.</li><li>BETWEEN - endpoints with attributes read as ISO_INSTANT datetimes between the values are included in the segment.</li>"
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOf__string"
              },
              {
                "description": "The criteria values to use for the segment dimension. Depending on the value of the AttributeType property, endpoints are included or excluded from the segment if their attribute values match the criteria values."
              }
            ]
          }
        },
        "description": "Specifies attribute-based criteria for including or excluding endpoints from a segment."
      },
      "AttributeType": {
        "type": "string",
        "enum": [
          "INCLUSIVE",
          "EXCLUSIVE",
          "CONTAINS",
          "BEFORE",
          "AFTER",
          "ON",
          "BETWEEN"
        ]
      },
      "ListOf__string": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/__string"
        }
      },
      "__string": {
        "type": "string"
      },
      "SegmentBehaviors": {
        "type": "object",
        "properties": {
          "Recency": {
            "allOf": [
              {
                "$ref": "#/$defs/RecencyDimension"
              },
              {
                "description": "The dimension settings that are based on how recently an endpoint was active."
              }
            ]
          }
        },
        "description": "Specifies dimension settings for including or excluding endpoints from a segment based on how recently an endpoint was active."
      },
      "RecencyDimension": {
        "type": "object",
        "required": [
          "Duration",
          "RecencyType"
        ],
        "properties": {
          "Duration": {
            "allOf": [
              {
                "$ref": "#/$defs/Duration"
              },
              {
                "description": "The duration to use when determining whether an endpoint is active or inactive."
              }
            ]
          },
          "RecencyType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecencyType"
              },
              {
                "description": "The type of recency dimension to use for the segment. Valid values are: ACTIVE, endpoints that were active within the specified duration are included in the segment; and, INACTIVE, endpoints that weren't active within the specified duration are included in the segment."
              }
            ]
          }
        },
        "description": "Specifies criteria for including or excluding endpoints from a segment based on how recently an endpoint was active."
      },
      "Duration": {
        "type": "string",
        "enum": [
          "HR_24",
          "DAY_7",
          "DAY_14",
          "DAY_30"
        ]
      },
      "RecencyType": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ]
      },
      "SegmentDemographics": {
        "type": "object",
        "properties": {
          "AppVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/SetDimension"
              },
              {
                "description": "The app version criteria for the segment."
              }
            ]
          },
          "Channel": {
            "allOf": [
              {
                "$ref": "#/$defs/SetDimension"
              },
              {
                "description": "The channel criteria for the segment."
              }
            ]
          },
          "DeviceType": {
            "allOf": [
              {
                "$ref": "#/$defs/SetDimension"
              },
              {
                "description": "The device type criteria for the segment."
              }
            ]
          },
          "Make": {
            "allOf": [
              {
                "$ref": "#/$defs/SetDimension"
              },
              {
                "description": "The device make criteria for the segment."
              }
            ]
          },
          "Model": {
            "allOf": [
              {
                "$ref": "#/$defs/SetDimension"
              },
              {
                "description": "The device model criteria for the segment."
              }
            ]
          },
          "Platform": {
            "allOf": [
              {
                "$ref": "#/$defs/SetDimension"
              },
              {
                "description": "The device platform criteria for the segment."
              }
            ]
          }
        },
        "description": "Specifies demographic-based dimension settings for including or excluding endpoints from a segment. These settings derive from characteristics of endpoint devices, such as platform, make, and model."
      },
      "SetDimension": {
        "type": "object",
        "required": [
          "Values"
        ],
        "properties": {
          "DimensionType": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionType"
              },
              {
                "description": "The type of segment dimension to use. Valid values are: INCLUSIVE, endpoints that match the criteria are included in the segment; and, EXCLUSIVE, endpoints that match the criteria are excluded from the segment."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOf__string"
              },
              {
                "description": "The criteria values to use for the segment dimension. Depending on the value of the DimensionType property, endpoints are included or excluded from the segment if their values match the criteria values."
              }
            ]
          }
        },
        "description": "Specifies the dimension type and values for a segment dimension."
      },
      "DimensionType": {
        "type": "string",
        "enum": [
          "INCLUSIVE",
          "EXCLUSIVE"
        ]
      },
      "SegmentLocation": {
        "type": "object",
        "properties": {
          "Country": {
            "allOf": [
              {
                "$ref": "#/$defs/SetDimension"
              },
              {
                "description": "The country or region code, in ISO 3166-1 alpha-2 format, for the segment."
              }
            ]
          },
          "GPSPoint": {
            "allOf": [
              {
                "$ref": "#/$defs/GPSPointDimension"
              },
              {
                "description": "The GPS location and range for the segment."
              }
            ]
          }
        },
        "description": "Specifies geographical dimension settings for a segment."
      },
      "GPSPointDimension": {
        "type": "object",
        "required": [
          "Coordinates"
        ],
        "properties": {
          "Coordinates": {
            "allOf": [
              {
                "$ref": "#/$defs/GPSCoordinates"
              },
              {
                "description": "The GPS coordinates to measure distance from."
              }
            ]
          },
          "RangeInKilometers": {
            "allOf": [
              {
                "$ref": "#/$defs/__double"
              },
              {
                "description": "The range, in kilometers, from the GPS coordinates."
              }
            ]
          }
        },
        "description": "Specifies GPS-based criteria for including or excluding endpoints from a segment."
      },
      "GPSCoordinates": {
        "type": "object",
        "required": [
          "Latitude",
          "Longitude"
        ],
        "properties": {
          "Latitude": {
            "allOf": [
              {
                "$ref": "#/$defs/__double"
              },
              {
                "description": "The latitude coordinate of the location."
              }
            ]
          },
          "Longitude": {
            "allOf": [
              {
                "$ref": "#/$defs/__double"
              },
              {
                "description": "The longitude coordinate of the location."
              }
            ]
          }
        },
        "description": "Specifies the GPS coordinates of a location."
      },
      "__double": {
        "type": "number",
        "format": "double"
      },
      "MapOfMetricDimension": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/MetricDimension"
        }
      },
      "MetricDimension": {
        "type": "object",
        "required": [
          "ComparisonOperator",
          "Value"
        ],
        "properties": {
          "ComparisonOperator": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The operator to use when comparing metric values. Valid values are: GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, and EQUAL."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/__double"
              },
              {
                "description": "The value to compare."
              }
            ]
          }
        },
        "description": "Specifies metric-based criteria for including or excluding endpoints from a segment. These criteria derive from custom metrics that you define for endpoints."
      },
      "SegmentGroupList": {
        "type": "object",
        "properties": {
          "Groups": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfSegmentGroup"
              },
              {
                "description": "An array that defines the set of segment criteria to evaluate when handling segment groups for the segment."
              }
            ]
          },
          "Include": {
            "allOf": [
              {
                "$ref": "#/$defs/Include"
              },
              {
                "description": "Specifies how to handle multiple segment groups for the segment. For example, if the segment includes three segment groups, whether the resulting segment includes endpoints that match all, any, or none of the segment groups."
              }
            ]
          }
        },
        "description": "Specifies the settings that define the relationships between segment groups for a segment."
      },
      "ListOfSegmentGroup": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SegmentGroup"
        }
      },
      "SegmentGroup": {
        "type": "object",
        "properties": {
          "Dimensions": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfSegmentDimensions"
              },
              {
                "description": "An array that defines the dimensions for the segment."
              }
            ]
          },
          "SourceSegments": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfSegmentReference"
              },
              {
                "description": "<p>The base segment to build the segment on. A base segment, also referred to as a <i>source segment</i>, defines the initial population of endpoints for a segment. When you add dimensions to a segment, Amazon Pinpoint filters the base segment by using the dimensions that you specify.</p> <p>You can specify more than one dimensional segment or only one imported segment. If you specify an imported segment, the Amazon Pinpoint console displays a segment size estimate that indicates the size of the imported segment without any filters applied to it.</p>"
              }
            ]
          },
          "SourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceType"
              },
              {
                "description": "Specifies how to handle multiple base segments for the segment. For example, if you specify three base segments for the segment, whether the resulting segment is based on all, any, or none of the base segments."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/Type"
              },
              {
                "description": "Specifies how to handle multiple dimensions for the segment. For example, if you specify three dimensions for the segment, whether the resulting segment includes endpoints that match all, any, or none of the dimensions."
              }
            ]
          }
        },
        "description": "Specifies the base segments and dimensions for a segment, and the relationships between these base segments and dimensions."
      },
      "ListOfSegmentDimensions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SegmentDimensions"
        }
      },
      "ListOfSegmentReference": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SegmentReference"
        }
      },
      "SegmentReference": {
        "type": "object",
        "required": [
          "Id"
        ],
        "properties": {
          "Id": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The unique identifier for the segment."
              }
            ]
          },
          "Version": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "The version number of the segment."
              }
            ]
          }
        },
        "description": "Specifies the segment identifier and version of a segment."
      },
      "__integer": {
        "type": "integer"
      },
      "SourceType": {
        "type": "string",
        "enum": [
          "ALL",
          "ANY",
          "NONE"
        ]
      },
      "Type": {
        "type": "string",
        "enum": [
          "ALL",
          "ANY",
          "NONE"
        ]
      },
      "Include": {
        "type": "string",
        "enum": [
          "ALL",
          "ANY",
          "NONE"
        ]
      },
      "MapOf__string": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/__string"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://pinpoint.us-east-1.amazonaws.com/v1/apps/{application-id}/segments"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**SegmentResponse**: Provides information about the configuration, dimension, and other settings for a segment.",
              {
                "$ul": [
                  "**ApplicationId**",
                  "**Arn**",
                  "**CreationDate**",
                  "**Dimensions**",
                  "**Id**",
                  "**ImportDefinition**",
                  "**LastModifiedDate**",
                  "**Name**",
                  "**SegmentGroups**",
                  "**SegmentType**",
                  "**tags**",
                  "**Version**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
