{
  "name": "UpdateCampaign",
  "description": "Updates the configuration and other settings for a campaign.",
  "parameters": {
    "type": "object",
    "properties": {
      "application-id": {
        "type": "string",
        "description": "The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console."
      },
      "campaign-id": {
        "type": "string",
        "description": "The unique identifier for the campaign."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "WriteCampaignRequest"
        ],
        "properties": {
          "WriteCampaignRequest": {
            "description": "Specifies the configuration and other settings for a campaign.",
            "type": "object",
            "properties": {
              "AdditionalTreatments": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ListOfWriteTreatmentResource"
                  },
                  {
                    "description": "An array of requests that defines additional treatments for the campaign, in addition to the default treatment for the campaign."
                  }
                ]
              },
              "CustomDeliveryConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CustomDeliveryConfiguration"
                  },
                  {
                    "description": "The delivery configuration settings for sending the campaign through a custom channel. This object is required if the MessageConfiguration object for the campaign specifies a CustomMessage object."
                  }
                ]
              },
              "Description": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "description": "A custom description of the campaign."
                  }
                ]
              },
              "HoldoutPercent": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "description": "The allocated percentage of users (segment members) who shouldn't receive messages from the campaign."
                  }
                ]
              },
              "Hook": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CampaignHook"
                  },
                  {
                    "description": "The settings for the AWS Lambda function to invoke as a code hook for the campaign. You can use this hook to customize the segment that's used by the campaign."
                  }
                ]
              },
              "IsPaused": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__boolean"
                  },
                  {
                    "description": "Specifies whether to pause the campaign. A paused campaign doesn't run unless you resume it by changing this value to false."
                  }
                ]
              },
              "Limits": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CampaignLimits"
                  },
                  {
                    "description": "The messaging limits for the campaign."
                  }
                ]
              },
              "MessageConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MessageConfiguration"
                  },
                  {
                    "description": "The message configuration settings for the campaign."
                  }
                ]
              },
              "Name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "description": "A custom name for the campaign."
                  }
                ]
              },
              "Schedule": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Schedule"
                  },
                  {
                    "description": "The schedule settings for the campaign."
                  }
                ]
              },
              "SegmentId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "description": "The unique identifier for the segment to associate with the campaign."
                  }
                ]
              },
              "SegmentVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "description": "The version of the segment to associate with the campaign."
                  }
                ]
              },
              "tags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MapOf__string"
                  },
                  {
                    "description": "<note><p>As of <b>22-05-2023</b> tags has been deprecated for update operations. After this date any value in tags is not processed and an error code is not returned. To manage tags we recommend using either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\">Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\">resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\">resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated) A string-to-string map of key-value pairs that defines the tags to associate with the campaign. Each tag consists of a required tag key and an associated tag value.</p>"
                  }
                ]
              },
              "TemplateConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TemplateConfiguration"
                  },
                  {
                    "description": "The message template to use for the campaign."
                  }
                ]
              },
              "TreatmentDescription": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "description": "A custom description of the default treatment for the campaign."
                  }
                ]
              },
              "TreatmentName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "description": "A custom name of the default treatment for the campaign, if the campaign has multiple treatments. A <i>treatment</i> is a variation of a campaign that's used for A/B testing."
                  }
                ]
              },
              "Priority": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "description": "Defines the priority of the campaign, used to decide the order of messages displayed to user if there are multiple messages scheduled to be displayed at the same moment."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "application-id",
      "campaign-id",
      "body"
    ],
    "$defs": {
      "ListOfWriteTreatmentResource": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/WriteTreatmentResource"
        }
      },
      "WriteTreatmentResource": {
        "type": "object",
        "required": [
          "SizePercent"
        ],
        "properties": {
          "CustomDeliveryConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomDeliveryConfiguration"
              },
              {
                "description": "The delivery configuration settings for sending the treatment through a custom channel. This object is required if the MessageConfiguration object for the treatment specifies a CustomMessage object."
              }
            ]
          },
          "MessageConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageConfiguration"
              },
              {
                "description": "The message configuration settings for the treatment."
              }
            ]
          },
          "Schedule": {
            "allOf": [
              {
                "$ref": "#/$defs/Schedule"
              },
              {
                "description": "The schedule settings for the treatment."
              }
            ]
          },
          "SizePercent": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "The allocated percentage of users (segment members) to send the treatment to."
              }
            ]
          },
          "TemplateConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/TemplateConfiguration"
              },
              {
                "description": "The message template to use for the treatment."
              }
            ]
          },
          "TreatmentDescription": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "A custom description of the treatment."
              }
            ]
          },
          "TreatmentName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "A custom name for the treatment."
              }
            ]
          }
        },
        "description": "Specifies the settings for a campaign treatment. A <i>treatment</i> is a variation of a campaign that's used for A/B testing of a campaign."
      },
      "CustomDeliveryConfiguration": {
        "type": "object",
        "required": [
          "DeliveryUri"
        ],
        "properties": {
          "DeliveryUri": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "<p>The destination to send the campaign or treatment to. This value can be one of the following:</p> <ul><li><p>The name or Amazon Resource Name (ARN) of an AWS Lambda function to invoke to handle delivery of the campaign or treatment.</p></li> <li><p>The URL for a web application or service that supports HTTPS and can receive the message. The URL has to be a full URL, including the HTTPS protocol.</p></li></ul> "
              }
            ]
          },
          "EndpointTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOf__EndpointTypesElement"
              },
              {
                "description": "The types of endpoints to send the campaign or treatment to. Each valid value maps to a type of channel that you can associate with an endpoint by using the ChannelType property of an endpoint."
              }
            ]
          }
        },
        "description": "Specifies the delivery configuration settings for sending a campaign or campaign treatment through a custom channel. This object is required if you use the CampaignCustomMessage object to define the message to send for the campaign or campaign treatment."
      },
      "__string": {
        "type": "string"
      },
      "ListOf__EndpointTypesElement": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/__EndpointTypesElement"
        }
      },
      "__EndpointTypesElement": {
        "type": "string",
        "enum": [
          "PUSH",
          "GCM",
          "APNS",
          "APNS_SANDBOX",
          "APNS_VOIP",
          "APNS_VOIP_SANDBOX",
          "ADM",
          "SMS",
          "VOICE",
          "EMAIL",
          "BAIDU",
          "CUSTOM",
          "IN_APP"
        ]
      },
      "MessageConfiguration": {
        "type": "object",
        "properties": {
          "ADMMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/Message"
              },
              {
                "description": "The message that the campaign sends through the ADM (Amazon Device Messaging) channel. If specified, this message overrides the default message."
              }
            ]
          },
          "APNSMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/Message"
              },
              {
                "description": "The message that the campaign sends through the APNs (Apple Push Notification service) channel. If specified, this message overrides the default message."
              }
            ]
          },
          "BaiduMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/Message"
              },
              {
                "description": "The message that the campaign sends through the Baidu (Baidu Cloud Push) channel. If specified, this message overrides the default message."
              }
            ]
          },
          "CustomMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/CampaignCustomMessage"
              },
              {
                "description": "<p>The message that the campaign sends through a custom channel, as specified by the delivery configuration (CustomDeliveryConfiguration) settings for the campaign. If specified, this message overrides the default message.</p> "
              }
            ]
          },
          "DefaultMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/Message"
              },
              {
                "description": "The default message that the campaign sends through all the channels that are configured for the campaign."
              }
            ]
          },
          "EmailMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/CampaignEmailMessage"
              },
              {
                "description": "The message that the campaign sends through the email channel. If specified, this message overrides the default message."
              }
            ]
          },
          "GCMMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/Message"
              },
              {
                "description": "The message that the campaign sends through the GCM channel, which enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service. If specified, this message overrides the default message."
              }
            ]
          },
          "SMSMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/CampaignSmsMessage"
              },
              {
                "description": "The message that the campaign sends through the SMS channel. If specified, this message overrides the default message."
              }
            ]
          },
          "InAppMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/CampaignInAppMessage"
              },
              {
                "description": "The in-app message configuration."
              }
            ]
          }
        },
        "description": "Specifies the message configuration settings for a campaign."
      },
      "Message": {
        "type": "object",
        "properties": {
          "Action": {
            "allOf": [
              {
                "$ref": "#/$defs/Action"
              },
              {
                "description": "<p>The action to occur if a recipient taps the push notification. Valid values are:</p> <ul><li><p>OPEN_APP - Your app opens or it becomes the foreground app if it was sent to the background. This is the default action.</p></li> <li><p>DEEP_LINK - Your app opens and displays a designated user interface in the app. This setting uses the deep-linking features of iOS and Android.</p></li> <li><p>URL - The default mobile browser on the recipient's device opens and loads the web page at a URL that you specify.</p></li></ul>"
              }
            ]
          },
          "Body": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The body of the notification message. The maximum number of characters is 200."
              }
            ]
          },
          "ImageIconUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The URL of the image to display as the push-notification icon, such as the icon for the app."
              }
            ]
          },
          "ImageSmallIconUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The URL of the image to display as the small, push-notification icon, such as a small version of the icon for the app."
              }
            ]
          },
          "ImageUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The URL of an image to display in the push notification."
              }
            ]
          },
          "JsonBody": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The JSON payload to use for a silent push notification."
              }
            ]
          },
          "MediaUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The URL of the image or video to display in the push notification."
              }
            ]
          },
          "RawContent": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The raw, JSON-formatted string to use as the payload for the notification message. If specified, this value overrides all other content for the message."
              }
            ]
          },
          "SilentPush": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "description": "Specifies whether the notification is a silent push notification, which is a push notification that doesn't display on a recipient's device. Silent push notifications can be used for cases such as updating an app's configuration, displaying messages in an in-app message center, or supporting phone home functionality."
              }
            ]
          },
          "TimeToLive": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "<p>The number of seconds that the push-notification service should keep the message, if the service is unable to deliver the notification the first time. This value is converted to an expiration value when it's sent to a push-notification service. If this value is 0, the service treats the notification as if it expires immediately and the service doesn't store or try to deliver the notification again.</p> <p>This value doesn't apply to messages that are sent through the Amazon Device Messaging (ADM) service.</p>"
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The title to display above the notification message on a recipient's device."
              }
            ]
          },
          "Url": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The URL to open in a recipient's default mobile browser, if a recipient taps the push notification and the value of the Action property is URL."
              }
            ]
          }
        },
        "description": "Specifies the content and settings for a push notification that's sent to recipients of a campaign."
      },
      "Action": {
        "type": "string",
        "enum": [
          "OPEN_APP",
          "DEEP_LINK",
          "URL"
        ]
      },
      "__boolean": {
        "type": "boolean"
      },
      "__integer": {
        "type": "integer"
      },
      "CampaignCustomMessage": {
        "type": "object",
        "properties": {
          "Data": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The raw, JSON-formatted string to use as the payload for the message. The maximum size is 5 KB."
              }
            ]
          }
        },
        "description": "Specifies the contents of a message that's sent through a custom channel to recipients of a campaign."
      },
      "CampaignEmailMessage": {
        "type": "object",
        "properties": {
          "Body": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The body of the email for recipients whose email clients don't render HTML content."
              }
            ]
          },
          "FromAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The verified email address to send the email from. The default address is the FromAddress specified for the email channel for the application."
              }
            ]
          },
          "HtmlBody": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The body of the email, in HTML format, for recipients whose email clients render HTML content."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The subject line, or title, of the email."
              }
            ]
          }
        },
        "description": "Specifies the content and \"From\" address for an email message that's sent to recipients of a campaign."
      },
      "CampaignSmsMessage": {
        "type": "object",
        "properties": {
          "Body": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The body of the SMS message."
              }
            ]
          },
          "MessageType": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageType"
              },
              {
                "description": "The SMS message type. Valid values are TRANSACTIONAL (for messages that are critical or time-sensitive, such as a one-time passwords) and PROMOTIONAL (for messsages that aren't critical or time-sensitive, such as marketing messages)."
              }
            ]
          },
          "OriginationNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The long code to send the SMS message from. This value should be one of the dedicated long codes that's assigned to your AWS account. Although it isn't required, we recommend that you specify the long code using an E.164 format to ensure prompt and accurate delivery of the message. For example, +12065550100."
              }
            ]
          },
          "SenderId": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The sender ID to display on recipients' devices when they receive the SMS message."
              }
            ]
          },
          "EntityId": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The entity ID or Principal Entity (PE) id received from the regulatory body for sending SMS in your country."
              }
            ]
          },
          "TemplateId": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The template ID received from the regulatory body for sending SMS in your country."
              }
            ]
          }
        },
        "description": "Specifies the content and settings for an SMS message that's sent to recipients of a campaign."
      },
      "MessageType": {
        "type": "string",
        "enum": [
          "TRANSACTIONAL",
          "PROMOTIONAL"
        ]
      },
      "CampaignInAppMessage": {
        "type": "object",
        "properties": {
          "Body": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The message body of the notification, the email body or the text message."
              }
            ]
          },
          "Content": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfInAppMessageContent"
              },
              {
                "description": "In-app message content."
              }
            ]
          },
          "CustomConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/MapOf__string"
              },
              {
                "description": "Custom config to be sent to client."
              }
            ]
          },
          "Layout": {
            "allOf": [
              {
                "$ref": "#/$defs/Layout"
              },
              {
                "description": "In-app message layout."
              }
            ]
          }
        },
        "description": "In-app message configuration."
      },
      "ListOfInAppMessageContent": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InAppMessageContent"
        }
      },
      "InAppMessageContent": {
        "type": "object",
        "properties": {
          "BackgroundColor": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The background color for the message."
              }
            ]
          },
          "BodyConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppMessageBodyConfig"
              },
              {
                "description": "The configuration for the message body."
              }
            ]
          },
          "HeaderConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppMessageHeaderConfig"
              },
              {
                "description": "The configuration for the message header."
              }
            ]
          },
          "ImageUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The image url for the background of message."
              }
            ]
          },
          "PrimaryBtn": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppMessageButton"
              },
              {
                "description": "The first button inside the message."
              }
            ]
          },
          "SecondaryBtn": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppMessageButton"
              },
              {
                "description": "The second button inside message."
              }
            ]
          }
        },
        "description": "The configuration for the message content."
      },
      "InAppMessageBodyConfig": {
        "type": "object",
        "required": [
          "Alignment",
          "TextColor",
          "Body"
        ],
        "properties": {
          "Alignment": {
            "allOf": [
              {
                "$ref": "#/$defs/Alignment"
              },
              {
                "description": "The alignment of the text. Valid values: LEFT, CENTER, RIGHT."
              }
            ]
          },
          "Body": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "Message Body."
              }
            ]
          },
          "TextColor": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The text color."
              }
            ]
          }
        },
        "description": "Text config for Message Body."
      },
      "Alignment": {
        "type": "string",
        "enum": [
          "LEFT",
          "CENTER",
          "RIGHT"
        ]
      },
      "InAppMessageHeaderConfig": {
        "type": "object",
        "required": [
          "Alignment",
          "Header",
          "TextColor"
        ],
        "properties": {
          "Alignment": {
            "allOf": [
              {
                "$ref": "#/$defs/Alignment"
              },
              {
                "description": "The alignment of the text. Valid values: LEFT, CENTER, RIGHT."
              }
            ]
          },
          "Header": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "Message Header."
              }
            ]
          },
          "TextColor": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The text color."
              }
            ]
          }
        },
        "description": "Text config for Message Header."
      },
      "InAppMessageButton": {
        "type": "object",
        "properties": {
          "Android": {
            "allOf": [
              {
                "$ref": "#/$defs/OverrideButtonConfiguration"
              },
              {
                "description": "Default button content."
              }
            ]
          },
          "DefaultConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultButtonConfiguration"
              },
              {
                "description": "Default button content."
              }
            ]
          },
          "IOS": {
            "allOf": [
              {
                "$ref": "#/$defs/OverrideButtonConfiguration"
              },
              {
                "description": "Default button content."
              }
            ]
          },
          "Web": {
            "allOf": [
              {
                "$ref": "#/$defs/OverrideButtonConfiguration"
              },
              {
                "description": "Default button content."
              }
            ]
          }
        },
        "description": "Button Config for an in-app message."
      },
      "OverrideButtonConfiguration": {
        "type": "object",
        "required": [
          "ButtonAction"
        ],
        "properties": {
          "ButtonAction": {
            "allOf": [
              {
                "$ref": "#/$defs/ButtonAction"
              },
              {
                "description": "Action triggered by the button."
              }
            ]
          },
          "Link": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "Button destination."
              }
            ]
          }
        },
        "description": "Override button configuration."
      },
      "ButtonAction": {
        "type": "string",
        "enum": [
          "LINK",
          "DEEP_LINK",
          "CLOSE"
        ]
      },
      "DefaultButtonConfiguration": {
        "type": "object",
        "required": [
          "ButtonAction",
          "Text"
        ],
        "properties": {
          "BackgroundColor": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The background color of the button."
              }
            ]
          },
          "BorderRadius": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "The border radius of the button."
              }
            ]
          },
          "ButtonAction": {
            "allOf": [
              {
                "$ref": "#/$defs/ButtonAction"
              },
              {
                "description": "Action triggered by the button."
              }
            ]
          },
          "Link": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "Button destination."
              }
            ]
          },
          "Text": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "Button text."
              }
            ]
          },
          "TextColor": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The text color of the button."
              }
            ]
          }
        },
        "description": "Default button configuration."
      },
      "MapOf__string": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/__string"
        }
      },
      "Layout": {
        "type": "string",
        "enum": [
          "BOTTOM_BANNER",
          "TOP_BANNER",
          "OVERLAYS",
          "MOBILE_FEED",
          "MIDDLE_BANNER",
          "CAROUSEL"
        ]
      },
      "Schedule": {
        "type": "object",
        "required": [
          "StartTime"
        ],
        "properties": {
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The scheduled time, in ISO 8601 format, when the campaign ended or will end."
              }
            ]
          },
          "EventFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/CampaignEventFilter"
              },
              {
                "description": "The type of event that causes the campaign to be sent, if the value of the Frequency property is EVENT."
              }
            ]
          },
          "Frequency": {
            "allOf": [
              {
                "$ref": "#/$defs/Frequency"
              },
              {
                "description": "Specifies how often the campaign is sent or whether the campaign is sent in response to a specific event."
              }
            ]
          },
          "IsLocalTime": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "description": "Specifies whether the start and end times for the campaign schedule use each recipient's local time. To base the schedule on each recipient's local time, set this value to true."
              }
            ]
          },
          "QuietTime": {
            "allOf": [
              {
                "$ref": "#/$defs/QuietTime"
              },
              {
                "description": "<p>The default quiet time for the campaign. Quiet time is a specific time range when a campaign doesn't send messages to endpoints, if all the following conditions are met:</p> <ul><li><p>The EndpointDemographic.Timezone property of the endpoint is set to a valid value.</p></li> <li><p>The current time in the endpoint's time zone is later than or equal to the time specified by the QuietTime.Start property for the campaign.</p></li> <li><p>The current time in the endpoint's time zone is earlier than or equal to the time specified by the QuietTime.End property for the campaign.</p></li></ul> <p>If any of the preceding conditions isn't met, the endpoint will receive messages from the campaign, even if quiet time is enabled.</p>"
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The scheduled time when the campaign began or will begin. Valid values are: IMMEDIATE, to start the campaign immediately; or, a specific time in ISO 8601 format."
              }
            ]
          },
          "Timezone": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The starting UTC offset for the campaign schedule, if the value of the IsLocalTime property is true. Valid values are: UTC, UTC+01, UTC+02, UTC+03, UTC+03:30, UTC+04, UTC+04:30, UTC+05,\n                  UTC+05:30, UTC+05:45, UTC+06, UTC+06:30, UTC+07, UTC+08, UTC+09, UTC+09:30,\n                  UTC+10, UTC+10:30, UTC+11, UTC+12, UTC+13, UTC-02, UTC-03, UTC-04, UTC-05, UTC-06,\n                  UTC-07, UTC-08, UTC-09, UTC-10, and UTC-11."
              }
            ]
          }
        },
        "description": "Specifies the schedule settings for a campaign."
      },
      "CampaignEventFilter": {
        "type": "object",
        "required": [
          "FilterType",
          "Dimensions"
        ],
        "properties": {
          "Dimensions": {
            "allOf": [
              {
                "$ref": "#/$defs/EventDimensions"
              },
              {
                "description": "The dimension settings of the event filter for the campaign."
              }
            ]
          },
          "FilterType": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterType"
              },
              {
                "description": "The type of event that causes the campaign to be sent. Valid values are: SYSTEM, sends the campaign when a system event occurs; and, ENDPOINT, sends the campaign when an endpoint event (<link  linkend=\"apps-application-id-events\">Events</link> resource) occurs."
              }
            ]
          }
        },
        "description": "Specifies the settings for events that cause a campaign to be sent."
      },
      "EventDimensions": {
        "type": "object",
        "properties": {
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/MapOfAttributeDimension"
              },
              {
                "description": "One or more custom attributes that your application reports to Amazon Pinpoint. You can use these attributes as selection criteria when you create an event filter."
              }
            ]
          },
          "EventType": {
            "allOf": [
              {
                "$ref": "#/$defs/SetDimension"
              },
              {
                "description": "The name of the event that causes the campaign to be sent or the journey activity to be performed. This can be a standard event that Amazon Pinpoint generates, such as _email.delivered. For campaigns, this can also be a custom event that's specific to your application. For information about standard events, see <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/event-streams.html\">Streaming Amazon Pinpoint Events</a> in the <i>Amazon Pinpoint Developer Guide</i>."
              }
            ]
          },
          "Metrics": {
            "allOf": [
              {
                "$ref": "#/$defs/MapOfMetricDimension"
              },
              {
                "description": "One or more custom metrics that your application reports to Amazon Pinpoint. You can use these metrics as selection criteria when you create an event filter."
              }
            ]
          }
        },
        "description": "Specifies the dimensions for an event filter that determines when a campaign is sent or a journey activity is performed."
      },
      "MapOfAttributeDimension": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/AttributeDimension"
        }
      },
      "AttributeDimension": {
        "type": "object",
        "required": [
          "Values"
        ],
        "properties": {
          "AttributeType": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeType"
              },
              {
                "description": "The type of segment dimension to use. Valid values are: <ul><li>INCLUSIVE - endpoints that have attributes matching the values are included in the segment.</li><li>EXCLUSIVE - endpoints that have attributes matching the values are excluded in the segment.</li><li>CONTAINS - endpoints that have attributes' substrings match the values are included in the segment.</li><li>BEFORE - endpoints with attributes read as ISO_INSTANT datetimes before the value are included in the segment.</li><li>AFTER - endpoints with attributes read as ISO_INSTANT datetimes after the value are included in the segment.</li><li>ON - endpoints with attributes read as ISO_INSTANT dates on the value are included in the segment. Time is ignored in this comparison.</li><li>BETWEEN - endpoints with attributes read as ISO_INSTANT datetimes between the values are included in the segment.</li>"
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOf__string"
              },
              {
                "description": "The criteria values to use for the segment dimension. Depending on the value of the AttributeType property, endpoints are included or excluded from the segment if their attribute values match the criteria values."
              }
            ]
          }
        },
        "description": "Specifies attribute-based criteria for including or excluding endpoints from a segment."
      },
      "AttributeType": {
        "type": "string",
        "enum": [
          "INCLUSIVE",
          "EXCLUSIVE",
          "CONTAINS",
          "BEFORE",
          "AFTER",
          "ON",
          "BETWEEN"
        ]
      },
      "ListOf__string": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/__string"
        }
      },
      "SetDimension": {
        "type": "object",
        "required": [
          "Values"
        ],
        "properties": {
          "DimensionType": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionType"
              },
              {
                "description": "The type of segment dimension to use. Valid values are: INCLUSIVE, endpoints that match the criteria are included in the segment; and, EXCLUSIVE, endpoints that match the criteria are excluded from the segment."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOf__string"
              },
              {
                "description": "The criteria values to use for the segment dimension. Depending on the value of the DimensionType property, endpoints are included or excluded from the segment if their values match the criteria values."
              }
            ]
          }
        },
        "description": "Specifies the dimension type and values for a segment dimension."
      },
      "DimensionType": {
        "type": "string",
        "enum": [
          "INCLUSIVE",
          "EXCLUSIVE"
        ]
      },
      "MapOfMetricDimension": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/MetricDimension"
        }
      },
      "MetricDimension": {
        "type": "object",
        "required": [
          "ComparisonOperator",
          "Value"
        ],
        "properties": {
          "ComparisonOperator": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The operator to use when comparing metric values. Valid values are: GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL, and EQUAL."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/__double"
              },
              {
                "description": "The value to compare."
              }
            ]
          }
        },
        "description": "Specifies metric-based criteria for including or excluding endpoints from a segment. These criteria derive from custom metrics that you define for endpoints."
      },
      "__double": {
        "type": "number",
        "format": "double"
      },
      "FilterType": {
        "type": "string",
        "enum": [
          "SYSTEM",
          "ENDPOINT"
        ]
      },
      "Frequency": {
        "type": "string",
        "enum": [
          "ONCE",
          "HOURLY",
          "DAILY",
          "WEEKLY",
          "MONTHLY",
          "EVENT",
          "IN_APP_EVENT"
        ]
      },
      "QuietTime": {
        "type": "object",
        "properties": {
          "End": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The specific time when quiet time ends. This value has to use 24-hour notation and be in HH:MM format, where HH is the hour (with a leading zero, if applicable) and MM is the minutes. For example, use 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM."
              }
            ]
          },
          "Start": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The specific time when quiet time begins. This value has to use 24-hour notation and be in HH:MM format, where HH is the hour (with a leading zero, if applicable) and MM is the minutes. For example, use 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM."
              }
            ]
          }
        },
        "description": "Specifies the start and end times that define a time range when messages aren't sent to endpoints."
      },
      "TemplateConfiguration": {
        "type": "object",
        "properties": {
          "EmailTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/Template"
              },
              {
                "description": "The email template to use for the message."
              }
            ]
          },
          "PushTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/Template"
              },
              {
                "description": "The push notification template to use for the message."
              }
            ]
          },
          "SMSTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/Template"
              },
              {
                "description": "The SMS template to use for the message."
              }
            ]
          },
          "VoiceTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/Template"
              },
              {
                "description": "The voice template to use for the message. This object isn't supported for campaigns."
              }
            ]
          },
          "InAppTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/Template"
              },
              {
                "description": "The InApp template to use for the message. The InApp template object is not supported for SendMessages."
              }
            ]
          }
        },
        "description": "Specifies the message template to use for the message, for each type of channel."
      },
      "Template": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The name of the message template to use for the message. If specified, this value must match the name of an existing message template."
              }
            ]
          },
          "Version": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "<p>The unique identifier for the version of the message template to use for the message. If specified, this value must match the identifier for an existing template version. To retrieve a list of versions and version identifiers for a template, use the <link  linkend=\"templates-template-name-template-type-versions\">Template Versions</link> resource.</p> <p>If you don't specify a value for this property, Amazon Pinpoint uses the <i>active version</i> of the template. The <i>active version</i> is typically the version of a template that's been most recently reviewed and approved for use, depending on your workflow. It isn't necessarily the latest version of a template.</p>"
              }
            ]
          }
        },
        "description": "Specifies the name and version of the message template to use for the message."
      },
      "CampaignHook": {
        "type": "object",
        "properties": {
          "LambdaFunctionName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The name or Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Pinpoint invokes to customize a segment for a campaign."
              }
            ]
          },
          "Mode": {
            "allOf": [
              {
                "$ref": "#/$defs/Mode"
              },
              {
                "description": "<p>The mode that Amazon Pinpoint uses to invoke the AWS Lambda function. Possible values are:</p> <ul><li><p>FILTER - Invoke the function to customize the segment that's used by a campaign.</p></li> <li><p>DELIVERY - (Deprecated) Previously, invoked the function to send a campaign through a custom channel. This functionality is not supported anymore. To send a campaign through a custom channel, use the CustomDeliveryConfiguration and CampaignCustomMessage objects of the campaign.</p></li></ul>"
              }
            ]
          },
          "WebUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": " <p>The web URL that Amazon Pinpoint calls to invoke the AWS Lambda function over HTTPS.</p>"
              }
            ]
          }
        },
        "description": "Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign."
      },
      "Mode": {
        "type": "string",
        "enum": [
          "DELIVERY",
          "FILTER"
        ]
      },
      "CampaignLimits": {
        "type": "object",
        "properties": {
          "Daily": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "The maximum number of messages that a campaign can send to a single endpoint during a 24-hour period. For an application, this value specifies the default limit for the number of messages that campaigns and journeys can send to a single endpoint during a 24-hour period. The maximum value is 100."
              }
            ]
          },
          "MaximumDuration": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "The maximum amount of time, in seconds, that a campaign can attempt to deliver a message after the scheduled start time for the campaign. The minimum value is 60 seconds."
              }
            ]
          },
          "MessagesPerSecond": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "The maximum number of messages that a campaign can send each second. For an application, this value specifies the default limit for the number of messages that campaigns can send each second. The minimum value is 50. The maximum value is 20,000."
              }
            ]
          },
          "Total": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "The maximum number of messages that a campaign can send to a single endpoint during the course of the campaign. If a campaign recurs, this setting applies to all runs of the campaign. The maximum value is 100."
              }
            ]
          },
          "Session": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "The maximum total number of messages that the campaign can send per user session."
              }
            ]
          }
        },
        "description": "For a campaign, specifies limits on the messages that the campaign can send. For an application, specifies the default limits for messages that campaigns in the application can send."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://pinpoint.us-east-1.amazonaws.com/v1/apps/{application-id}/campaigns/{campaign-id}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**CampaignResponse**: Provides information about the status, configuration, and other settings for a campaign.",
              {
                "$ul": [
                  "**AdditionalTreatments**",
                  "**ApplicationId**",
                  "**Arn**",
                  "**CreationDate**",
                  "**CustomDeliveryConfiguration**",
                  "**DefaultState**",
                  "**Description**",
                  "**HoldoutPercent**",
                  "**Hook**",
                  "**Id**",
                  "**IsPaused**",
                  "**LastModifiedDate**",
                  "**Limits**",
                  "**MessageConfiguration**",
                  "**Name**",
                  "**Schedule**",
                  "**SegmentId**",
                  "**SegmentVersion**",
                  "**State**",
                  "**tags**",
                  "**TemplateConfiguration**",
                  "**TreatmentDescription**",
                  "**TreatmentName**",
                  "**Version**",
                  "**Priority**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
