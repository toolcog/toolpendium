{
  "name": "GET_DescribeDBEngineVersions",
  "description": "Returns a list of the available engines.",
  "parameters": {
    "type": "object",
    "properties": {
      "Engine": {
        "type": "string",
        "description": "The database engine to return."
      },
      "EngineVersion": {
        "type": "string",
        "description": "<p>The database engine version to return.</p> <p>Example: <code>3.6.0</code> </p>"
      },
      "DBParameterGroupFamily": {
        "type": "string",
        "description": "<p>The name of a specific parameter group family to return details for.</p> <p>Constraints:</p> <ul> <li> <p>If provided, must match an existing <code>DBParameterGroupFamily</code>.</p> </li> </ul>"
      },
      "Filters": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Filter"
            },
            {
              "xml": {
                "name": "Filter"
              }
            }
          ]
        },
        "description": "This parameter is not currently supported."
      },
      "MaxRecords": {
        "type": "integer",
        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
      },
      "Marker": {
        "type": "string",
        "description": "An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      },
      "DefaultOnly": {
        "type": "boolean",
        "description": "Indicates that only the default version of the specified engine or engine and major version combination is returned."
      },
      "ListSupportedCharacterSets": {
        "type": "boolean",
        "description": "If this parameter is specified and the requested engine supports the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported character sets for each engine version. "
      },
      "ListSupportedTimezones": {
        "type": "boolean",
        "description": "If this parameter is specified and the requested engine supports the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported time zones for each engine version. "
      },
      "Action": {
        "type": "string",
        "enum": [
          "DescribeDBEngineVersions"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2014-10-31"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Action",
      "Version"
    ],
    "$defs": {
      "Filter": {
        "type": "object",
        "required": [
          "Name",
          "Values"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the filter. Filter names are case sensitive."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterValueList"
              },
              {
                "description": "One or more filter values. Filter values are case sensitive."
              }
            ]
          }
        },
        "description": "<p>A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.</p> <p>Wildcards are not supported in filters.</p>"
      },
      "String": {
        "type": "string"
      },
      "FilterValueList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "Value"
              }
            }
          ]
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://rds.us-east-1.amazonaws.com/#Action=DescribeDBEngineVersions{?Engine,EngineVersion,DBParameterGroupFamily,Filters,MaxRecords,Marker,DefaultOnly,ListSupportedCharacterSets,ListSupportedTimezones,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the output of <a>DescribeDBEngineVersions</a>.",
        "**Key properties:**",
        {
          "$ul": [
            "**Marker**",
            "**DBEngineVersions**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
