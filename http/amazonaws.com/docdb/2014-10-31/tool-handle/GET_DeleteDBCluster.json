{
  "name": "GET_DeleteDBCluster",
  "description": "<p>Deletes a previously provisioned cluster. When you delete a cluster, all automated backups for that cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified cluster are not deleted.</p> <p/>",
  "parameters": {
    "type": "object",
    "properties": {
      "DBClusterIdentifier": {
        "type": "string",
        "description": "<p>The cluster identifier for the cluster to be deleted. This parameter isn't case sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing <code>DBClusterIdentifier</code>.</p> </li> </ul>"
      },
      "SkipFinalSnapshot": {
        "type": "boolean",
        "description": "<p> Determines whether a final cluster snapshot is created before the cluster is deleted. If <code>true</code> is specified, no cluster snapshot is created. If <code>false</code> is specified, a cluster snapshot is created before the DB cluster is deleted. </p> <note> <p>If <code>SkipFinalSnapshot</code> is <code>false</code>, you must specify a <code>FinalDBSnapshotIdentifier</code> parameter.</p> </note> <p>Default: <code>false</code> </p>"
      },
      "FinalDBSnapshotIdentifier": {
        "type": "string",
        "description": "<p> The cluster snapshot identifier of the new cluster snapshot created when <code>SkipFinalSnapshot</code> is set to <code>false</code>. </p> <note> <p> Specifying this parameter and also setting the <code>SkipFinalShapshot</code> parameter to <code>true</code> results in an error. </p> </note> <p>Constraints:</p> <ul> <li> <p>Must be from 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
      },
      "Action": {
        "type": "string",
        "enum": [
          "DeleteDBCluster"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2014-10-31"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "DBClusterIdentifier",
      "Action",
      "Version"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://rds.us-east-1.amazonaws.com/#Action=DeleteDBCluster{?DBClusterIdentifier,SkipFinalSnapshot,FinalDBSnapshotIdentifier,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**DBCluster**: Detailed information about a cluster. ",
              {
                "$ul": [
                  "**AvailabilityZones**",
                  "**BackupRetentionPeriod**",
                  "**DBClusterIdentifier**",
                  "**DBClusterParameterGroup**",
                  "**DBSubnetGroup**",
                  "**Status**",
                  "**PercentProgress**",
                  "**EarliestRestorableTime**",
                  "**Endpoint**",
                  "**ReaderEndpoint**",
                  "**MultiAZ**",
                  "**Engine**",
                  "**EngineVersion**",
                  "**LatestRestorableTime**",
                  "**Port**",
                  "**MasterUsername**",
                  "**PreferredBackupWindow**",
                  "**PreferredMaintenanceWindow**",
                  "**ReplicationSourceIdentifier**",
                  "**ReadReplicaIdentifiers**",
                  "**DBClusterMembers**",
                  "**VpcSecurityGroups**",
                  "**HostedZoneId**",
                  "**StorageEncrypted**",
                  "**KmsKeyId**",
                  "**DbClusterResourceId**",
                  "**DBClusterArn**",
                  "**AssociatedRoles**",
                  "**CloneGroupId**",
                  "**ClusterCreateTime**",
                  "**EnabledCloudwatchLogsExports**",
                  "**DeletionProtection**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
