{
  "name": "GET_DescribeEvents",
  "description": "Returns events related to instances, security groups, snapshots, and DB parameter groups for the past 14 days. You can obtain events specific to a particular DB instance, security group, snapshot, or parameter group by providing the name as a parameter. By default, the events of the past hour are returned.",
  "parameters": {
    "type": "object",
    "properties": {
      "SourceIdentifier": {
        "type": "string",
        "description": "<p>The identifier of the event source for which events are returned. If not specified, then all sources are included in the response.</p> <p>Constraints:</p> <ul> <li> <p>If <code>SourceIdentifier</code> is provided, <code>SourceType</code> must also be provided.</p> </li> <li> <p>If the source type is <code>DBInstance</code>, a <code>DBInstanceIdentifier</code> must be provided.</p> </li> <li> <p>If the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code> must be provided.</p> </li> <li> <p>If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code> must be provided.</p> </li> <li> <p>If the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code> must be provided.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
      },
      "SourceType": {
        "type": "string",
        "enum": [
          "db-instance",
          "db-parameter-group",
          "db-security-group",
          "db-snapshot",
          "db-cluster",
          "db-cluster-snapshot"
        ],
        "description": "The event source to retrieve events for. If no value is specified, all events are returned."
      },
      "StartTime": {
        "type": "string",
        "format": "date-time",
        "description": "<p> The beginning of the time interval to retrieve events for, specified in ISO 8601 format. </p> <p>Example: 2009-07-08T18:00Z</p>"
      },
      "EndTime": {
        "type": "string",
        "format": "date-time",
        "description": "<p> The end of the time interval for which to retrieve events, specified in ISO 8601 format. </p> <p>Example: 2009-07-08T18:00Z</p>"
      },
      "Duration": {
        "type": "integer",
        "description": "<p>The number of minutes to retrieve events for.</p> <p>Default: 60</p>"
      },
      "EventCategories": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "EventCategory"
              }
            }
          ]
        },
        "description": "A list of event categories that trigger notifications for an event notification subscription."
      },
      "Filters": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Filter"
            },
            {
              "xml": {
                "name": "Filter"
              }
            }
          ]
        },
        "description": "This parameter is not currently supported."
      },
      "MaxRecords": {
        "type": "integer",
        "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
      },
      "Marker": {
        "type": "string",
        "description": "An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      },
      "Action": {
        "type": "string",
        "enum": [
          "DescribeEvents"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2014-10-31"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Action",
      "Version"
    ],
    "$defs": {
      "String": {
        "type": "string"
      },
      "Filter": {
        "type": "object",
        "required": [
          "Name",
          "Values"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the filter. Filter names are case sensitive."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterValueList"
              },
              {
                "description": "One or more filter values. Filter values are case sensitive."
              }
            ]
          }
        },
        "description": "<p>A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.</p> <p>Wildcards are not supported in filters.</p>"
      },
      "FilterValueList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "Value"
              }
            }
          ]
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://rds.us-east-1.amazonaws.com/#Action=DescribeEvents{?SourceIdentifier,SourceType,StartTime,EndTime,Duration,EventCategories,Filters,MaxRecords,Marker,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the output of <a>DescribeEvents</a>.",
        "**Key properties:**",
        {
          "$ul": [
            "**Marker**",
            "**Events**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
