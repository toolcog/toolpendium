{
  "name": "DescribeBuckets",
  "description": "Retrieves (queries) statistical data and other information about one or more S3 buckets that Amazon Macie monitors and analyzes for an account.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "criteria": {
            "description": "Specifies, as a map, one or more property-based conditions that filter the results of a query for information about S3 buckets.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/BucketCriteriaAdditionalProperties"
            }
          },
          "maxResults": {
            "description": "The maximum number of items to include in each page of the response. The default value is 50.",
            "type": "integer"
          },
          "nextToken": {
            "description": "The nextToken string that specifies which page of results to return in a paginated response.",
            "type": "string"
          },
          "sortCriteria": {
            "description": "Specifies criteria for sorting the results of a query for information about S3 buckets.",
            "type": "object",
            "properties": {
              "attributeName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "description": "The name of the bucket property to sort the results by. This value can be one of the following properties that Amazon Macie defines as bucket metadata: accountId, bucketName, classifiableObjectCount, classifiableSizeInBytes, objectCount, sensitivityScore, or sizeInBytes."
                  }
                ]
              },
              "orderBy": {
                "allOf": [
                  {
                    "$ref": "#/$defs/OrderBy"
                  },
                  {
                    "description": "The sort order to apply to the results, based on the value specified by the attributeName property. Valid values are: ASC, sort the results in ascending order; and, DESC, sort the results in descending order."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "BucketCriteriaAdditionalProperties": {
        "type": "object",
        "properties": {
          "eq": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "description": "The value for the property matches (equals) the specified value. If you specify multiple values, Amazon Macie uses OR logic to join the values."
              }
            ]
          },
          "gt": {
            "allOf": [
              {
                "$ref": "#/$defs/__long"
              },
              {
                "description": "The value for the property is greater than the specified value."
              }
            ]
          },
          "gte": {
            "allOf": [
              {
                "$ref": "#/$defs/__long"
              },
              {
                "description": "The value for the property is greater than or equal to the specified value."
              }
            ]
          },
          "lt": {
            "allOf": [
              {
                "$ref": "#/$defs/__long"
              },
              {
                "description": "The value for the property is less than the specified value."
              }
            ]
          },
          "lte": {
            "allOf": [
              {
                "$ref": "#/$defs/__long"
              },
              {
                "description": "The value for the property is less than or equal to the specified value."
              }
            ]
          },
          "neq": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "description": "The value for the property doesn't match (doesn't equal) the specified value. If you specify multiple values, Amazon Macie uses OR logic to join the values."
              }
            ]
          },
          "prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The name of the bucket begins with the specified value."
              }
            ]
          }
        },
        "description": "Specifies the operator to use in a property-based condition that filters the results of a query for information about S3 buckets."
      },
      "__listOf__string": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/__string"
        }
      },
      "__string": {
        "type": "string"
      },
      "__long": {
        "type": "integer"
      },
      "OrderBy": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://macie2.us-east-1.amazonaws.com/datasources/s3{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**buckets**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
