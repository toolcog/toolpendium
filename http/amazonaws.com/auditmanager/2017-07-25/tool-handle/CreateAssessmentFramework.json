{
  "name": "CreateAssessmentFramework",
  "description": " Creates a custom framework in Audit Manager. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "name",
          "controlSets"
        ],
        "properties": {
          "name": {
            "description": " The name of the new custom framework. ",
            "type": "string",
            "pattern": "^[^\\\\]*$",
            "minLength": 1,
            "maxLength": 300
          },
          "description": {
            "description": " An optional description for the new custom framework. ",
            "type": "string",
            "pattern": "^[\\w\\W\\s\\S]*$",
            "minLength": 1,
            "maxLength": 1000
          },
          "complianceType": {
            "description": " The compliance type that the new custom framework supports, such as CIS or HIPAA. ",
            "type": "string",
            "pattern": "^[\\w\\W\\s\\S]*$",
            "maxLength": 100
          },
          "controlSets": {
            "description": " The control sets that are associated with the framework. ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/CreateAssessmentFrameworkControlSet"
            },
            "minItems": 1
          },
          "tags": {
            "description": " The tags that are associated with the framework. ",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "CreateAssessmentFrameworkControlSet": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/ControlSetName"
              },
              {
                "description": " The name of the control set. "
              }
            ]
          },
          "controls": {
            "allOf": [
              {
                "$ref": "#/$defs/CreateAssessmentFrameworkControls"
              },
              {
                "description": " The list of controls within the control set. This doesn't contain the control set ID. "
              }
            ]
          }
        },
        "description": " A <code>controlSet</code> entity that represents a collection of controls in Audit Manager. This doesn't contain the control set ID. "
      },
      "ControlSetName": {
        "type": "string",
        "pattern": "^[^\\\\\\_]*$",
        "minLength": 1,
        "maxLength": 300
      },
      "CreateAssessmentFrameworkControls": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CreateAssessmentFrameworkControl"
        },
        "minItems": 1
      },
      "CreateAssessmentFrameworkControl": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/UUID"
              },
              {
                "description": " The unique identifier of the control. "
              }
            ]
          }
        },
        "description": " The control entity attributes that uniquely identify an existing control to be added to a framework in Audit Manager. "
      },
      "UUID": {
        "type": "string",
        "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
        "minLength": 36,
        "maxLength": 36
      },
      "TagValue": {
        "type": "string",
        "pattern": ".{0,255}",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://auditmanager.us-east-1.amazonaws.com/assessmentFrameworks"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**framework**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
