{
  "name": "CreateMonitor",
  "description": "<p>Creates a monitor in Amazon CloudWatch Internet Monitor. A monitor is built based on information from the application resources that you add: VPCs, Network Load Balancers (NLBs), Amazon CloudFront distributions, and Amazon WorkSpaces directories. Internet Monitor then publishes internet measurements from Amazon Web Services that are specific to the <i>city-networks</i>. That is, the locations and ASNs (typically internet service providers or ISPs), where clients access your application. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-InternetMonitor.html\">Using Amazon CloudWatch Internet Monitor</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>When you create a monitor, you choose the percentage of traffic that you want to monitor. You can also set a maximum limit for the number of city-networks where client traffic is monitored, that caps the total traffic that Internet Monitor monitors. A city-network maximum is the limit of city-networks, but you only pay for the number of city-networks that are actually monitored. You can update your monitor at any time to change the percentage of traffic to monitor or the city-networks maximum. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html\">Choosing a city-network maximum value</a> in the <i>Amazon CloudWatch User Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "MonitorName"
        ],
        "properties": {
          "MonitorName": {
            "description": "The name of the monitor. ",
            "type": "string",
            "pattern": "[a-zA-Z0-9_.-]+",
            "minLength": 1,
            "maxLength": 255
          },
          "Resources": {
            "description": "<p>The resources to include in a monitor, which you provide as a set of Amazon Resource Names (ARNs). Resources can be VPCs, NLBs, Amazon CloudFront distributions, or Amazon WorkSpaces directories.</p> <p>You can add a combination of VPCs and CloudFront distributions, or you can add WorkSpaces directories, or you can add NLBs. You can't add NLBs or WorkSpaces directories together with any other resources.</p> <note> <p>If you add only Amazon VPC resources, at least one VPC must have an Internet Gateway attached to it, to make sure that it has internet connectivity.</p> </note>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Arn"
            }
          },
          "ClientToken": {
            "description": "A unique, case-sensitive string of up to 64 ASCII characters that you specify to make an idempotent API request. Don't reuse the same client token for other API requests.",
            "type": "string"
          },
          "Tags": {
            "description": "The tags for a monitor. You can add a maximum of 50 tags in Internet Monitor.",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 200,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "MaxCityNetworksToMonitor": {
            "description": "<p>The maximum number of city-networks to monitor for your resources. A city-network is the location (city) where clients access your application resources from and the ASN or network provider, such as an internet service provider (ISP), that clients access the resources through. Setting this limit can help control billing costs.</p> <p>To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html\">Choosing a city-network maximum value </a> in the Amazon CloudWatch Internet Monitor section of the <i>CloudWatch User Guide</i>.</p>",
            "type": "integer",
            "minimum": 1,
            "maximum": 500000
          },
          "InternetMeasurementsLogDelivery": {
            "description": "Publish internet measurements to an Amazon S3 bucket in addition to CloudWatch Logs.",
            "type": "object",
            "properties": {
              "S3Config": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Config"
                  },
                  {
                    "description": "The configuration information for publishing Internet Monitor internet measurements to Amazon S3. The configuration includes the bucket name and (optionally) prefix for the S3 bucket to store the measurements, and the delivery status. The delivery status is <code>ENABLED</code> or <code>DISABLED</code>, depending on whether you choose to deliver internet measurements to S3 logs."
                  }
                ]
              }
            }
          },
          "TrafficPercentageToMonitor": {
            "description": "<p>The percentage of the internet-facing traffic for your application that you want to monitor with this monitor. If you set a city-networks maximum, that limit overrides the traffic percentage that you set.</p> <p>To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMTrafficPercentage.html\">Choosing an application traffic percentage to monitor </a> in the Amazon CloudWatch Internet Monitor section of the <i>CloudWatch User Guide</i>.</p>",
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "HealthEventsConfig": {
            "description": "<p>A complex type with the configuration information that determines the threshold and other conditions for when Internet Monitor creates a health event for an overall performance or availability issue, across an application's geographies.</p> <p>Defines the percentages, for overall performance scores and availability scores for an application, that are the thresholds for when Amazon CloudWatch Internet Monitor creates a health event. You can override the defaults to set a custom threshold for overall performance or availability scores, or both.</p> <p>You can also set thresholds for local health scores,, where Internet Monitor creates a health event when scores cross a threshold for one or more city-networks, in addition to creating an event when an overall score crosses a threshold.</p> <p>If you don't set a health event threshold, the default value is 95%.</p> <p>For local thresholds, you also set a minimum percentage of overall traffic that is impacted by an issue before Internet Monitor creates an event. In addition, you can disable local thresholds, for performance scores, availability scores, or both.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview\"> Change health event thresholds</a> in the Internet Monitor section of the <i>CloudWatch User Guide</i>.</p>",
            "type": "object",
            "properties": {
              "AvailabilityScoreThreshold": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Percentage"
                  },
                  {
                    "description": "The health event threshold percentage set for availability scores."
                  }
                ]
              },
              "PerformanceScoreThreshold": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Percentage"
                  },
                  {
                    "description": "The health event threshold percentage set for performance scores."
                  }
                ]
              },
              "AvailabilityLocalHealthEventsConfig": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LocalHealthEventsConfig"
                  },
                  {
                    "description": "The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local availability issue."
                  }
                ]
              },
              "PerformanceLocalHealthEventsConfig": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LocalHealthEventsConfig"
                  },
                  {
                    "description": "The configuration that determines the threshold and other conditions for when Internet Monitor creates a health event for a local performance issue."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Arn": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 20,
        "maxLength": 2048
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "S3Config": {
        "type": "object",
        "properties": {
          "BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ConfigBucketNameString"
              },
              {
                "description": "The Amazon S3 bucket name."
              }
            ]
          },
          "BucketPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Amazon S3 bucket prefix."
              }
            ]
          },
          "LogDeliveryStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/LogDeliveryStatus"
              },
              {
                "description": "The status of publishing Internet Monitor internet measurements to an Amazon S3 bucket."
              }
            ]
          }
        },
        "description": "The configuration for publishing Amazon CloudWatch Internet Monitor internet measurements to Amazon S3. The configuration includes the bucket name and (optionally) prefix for the S3 bucket to store the measurements, and the delivery status. The delivery status is <code>ENABLED</code> or <code>DISABLED</code>, depending on whether you choose to deliver internet measurements to S3 logs."
      },
      "S3ConfigBucketNameString": {
        "type": "string",
        "minLength": 3
      },
      "String": {
        "type": "string"
      },
      "LogDeliveryStatus": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "Percentage": {
        "type": "number",
        "format": "double",
        "minimum": 0,
        "maximum": 100
      },
      "LocalHealthEventsConfig": {
        "type": "object",
        "properties": {
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/LocalHealthEventsConfigStatus"
              },
              {
                "description": "The status of whether Internet Monitor creates a health event based on a threshold percentage set for a local health score. The status can be <code>ENABLED</code> or <code>DISABLED</code>."
              }
            ]
          },
          "HealthScoreThreshold": {
            "allOf": [
              {
                "$ref": "#/$defs/Percentage"
              },
              {
                "description": "The health event threshold percentage set for a local health score."
              }
            ]
          },
          "MinTrafficImpact": {
            "allOf": [
              {
                "$ref": "#/$defs/Percentage"
              },
              {
                "description": "The minimum percentage of overall traffic for an application that must be impacted by an issue before Internet Monitor creates an event when a threshold is crossed for a local health score."
              }
            ]
          }
        },
        "description": "<p>A complex type with the configuration information that determines the threshold and other conditions for when Internet Monitor creates a health event for a local performance or availability issue, when scores cross a threshold for one or more city-networks.</p> <p>Defines the percentages, for performance scores or availability scores, that are the local thresholds for when Amazon CloudWatch Internet Monitor creates a health event. Also defines whether a local threshold is enabled or disabled, and the minimum percentage of overall traffic that must be impacted by an issue before Internet Monitor creates an event when a threshold is crossed for a local health score.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview\"> Change health event thresholds</a> in the Internet Monitor section of the <i>CloudWatch User Guide</i>.</p>"
      },
      "LocalHealthEventsConfigStatus": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://internetmonitor.us-east-1.api.aws/v20210603/Monitors"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Arn**",
            "**Status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
