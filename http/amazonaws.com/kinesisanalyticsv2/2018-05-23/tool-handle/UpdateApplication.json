{
  "name": "UpdateApplication",
  "description": "<p>Updates an existing Kinesis Data Analytics application. Using this operation, you can update application code, input configuration, and output configuration. </p> <p>Kinesis Data Analytics updates the <code>ApplicationVersionId</code> each time you update your application. </p> <note> <p>You cannot update the <code>RuntimeEnvironment</code> of an existing application. If you need to update an application's <code>RuntimeEnvironment</code>, you must delete the application and create it again.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "KinesisAnalytics_20180523.UpdateApplication"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateApplicationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateApplicationRequest": {
        "type": "object",
        "required": [
          "ApplicationName"
        ],
        "title": "UpdateApplicationRequest",
        "properties": {
          "ApplicationName": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationName"
              },
              {
                "description": "The name of the application to update."
              }
            ]
          },
          "CurrentApplicationVersionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationVersionId"
              },
              {
                "description": "The current application version ID. You must provide the <code>CurrentApplicationVersionId</code> or the <code>ConditionalToken</code>.You can retrieve the application version ID using <a>DescribeApplication</a>. For better concurrency support, use the <code>ConditionalToken</code> parameter instead of <code>CurrentApplicationVersionId</code>."
              }
            ]
          },
          "ApplicationConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationConfigurationUpdate"
              },
              {
                "description": "Describes application configuration updates."
              }
            ]
          },
          "ServiceExecutionRoleUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleARN"
              },
              {
                "description": "Describes updates to the service execution role."
              }
            ]
          },
          "RunConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/RunConfigurationUpdate"
              },
              {
                "description": "Describes updates to the application's starting parameters."
              }
            ]
          },
          "CloudWatchLoggingOptionUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLoggingOptionUpdates"
              },
              {
                "description": "Describes application Amazon CloudWatch logging option updates. You can only update existing CloudWatch logging options with this action. To add a new CloudWatch logging option, use <a>AddApplicationCloudWatchLoggingOption</a>."
              }
            ]
          },
          "ConditionalToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalToken"
              },
              {
                "description": "A value you use to implement strong concurrency for application updates. You must provide the <code>CurrentApplicationVersionId</code> or the <code>ConditionalToken</code>. You get the application's current <code>ConditionalToken</code> using <a>DescribeApplication</a>. For better concurrency support, use the <code>ConditionalToken</code> parameter instead of <code>CurrentApplicationVersionId</code>."
              }
            ]
          }
        }
      },
      "ApplicationName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "ApplicationVersionId": {
        "type": "integer",
        "minimum": 1,
        "maximum": 999999999
      },
      "ApplicationConfigurationUpdate": {
        "type": "object",
        "properties": {
          "SqlApplicationConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/SqlApplicationConfigurationUpdate"
              },
              {
                "description": "Describes updates to a SQL-based Kinesis Data Analytics application's configuration."
              }
            ]
          },
          "ApplicationCodeConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationCodeConfigurationUpdate"
              },
              {
                "description": "Describes updates to an application's code configuration."
              }
            ]
          },
          "FlinkApplicationConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/FlinkApplicationConfigurationUpdate"
              },
              {
                "description": "Describes updates to a Flink-based Kinesis Data Analytics application's configuration."
              }
            ]
          },
          "EnvironmentPropertyUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/EnvironmentPropertyUpdates"
              },
              {
                "description": "Describes updates to the environment properties for a Flink-based Kinesis Data Analytics application."
              }
            ]
          },
          "ApplicationSnapshotConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationSnapshotConfigurationUpdate"
              },
              {
                "description": "Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application."
              }
            ]
          },
          "VpcConfigurationUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcConfigurationUpdates"
              },
              {
                "description": "Updates to the array of descriptions of VPC configurations available to the application."
              }
            ]
          },
          "ZeppelinApplicationConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ZeppelinApplicationConfigurationUpdate"
              },
              {
                "description": "Updates to the configuration of a Kinesis Data Analytics Studio notebook."
              }
            ]
          }
        },
        "description": "Describes updates to an application's configuration."
      },
      "SqlApplicationConfigurationUpdate": {
        "type": "object",
        "properties": {
          "InputUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/InputUpdates"
              },
              {
                "description": "The array of <a>InputUpdate</a> objects describing the new input streams used by the application."
              }
            ]
          },
          "OutputUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/OutputUpdates"
              },
              {
                "description": "The array of <a>OutputUpdate</a> objects describing the new destination streams used by the application."
              }
            ]
          },
          "ReferenceDataSourceUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceDataSourceUpdates"
              },
              {
                "description": "The array of <a>ReferenceDataSourceUpdate</a> objects describing the new reference data sources used by the application."
              }
            ]
          }
        },
        "description": "Describes updates to the input streams, destination streams, and reference data sources for a SQL-based Kinesis Data Analytics application."
      },
      "InputUpdates": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InputUpdate"
        }
      },
      "InputUpdate": {
        "type": "object",
        "required": [
          "InputId"
        ],
        "properties": {
          "InputId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The input ID of the application input to be updated."
              }
            ]
          },
          "NamePrefixUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppStreamName"
              },
              {
                "description": "The name prefix for in-application streams that Kinesis Data Analytics creates for the specific streaming source."
              }
            ]
          },
          "InputProcessingConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/InputProcessingConfigurationUpdate"
              },
              {
                "description": "Describes updates to an <a>InputProcessingConfiguration</a>."
              }
            ]
          },
          "KinesisStreamsInputUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisStreamsInputUpdate"
              },
              {
                "description": "If a Kinesis data stream is the streaming source to be updated, provides an updated stream Amazon Resource Name (ARN)."
              }
            ]
          },
          "KinesisFirehoseInputUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisFirehoseInputUpdate"
              },
              {
                "description": "If a Kinesis Data Firehose delivery stream is the streaming source to be updated, provides an updated stream ARN."
              }
            ]
          },
          "InputSchemaUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/InputSchemaUpdate"
              },
              {
                "description": "Describes the data format on the streaming source, and how record elements on the streaming source map to columns of the in-application stream that is created."
              }
            ]
          },
          "InputParallelismUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/InputParallelismUpdate"
              },
              {
                "description": "Describes the parallelism updates (the number of in-application streams Kinesis Data Analytics creates for the specific streaming source)."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes updates to a specific input configuration (identified by the <code>InputId</code> of an application). "
      },
      "Id": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 50
      },
      "InAppStreamName": {
        "type": "string",
        "pattern": "[^-\\s<>&]*",
        "minLength": 1,
        "maxLength": 32
      },
      "InputProcessingConfigurationUpdate": {
        "type": "object",
        "required": [
          "InputLambdaProcessorUpdate"
        ],
        "properties": {
          "InputLambdaProcessorUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/InputLambdaProcessorUpdate"
              },
              {
                "description": "Provides update information for an <a>InputLambdaProcessor</a>."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes updates to an <a>InputProcessingConfiguration</a>."
      },
      "InputLambdaProcessorUpdate": {
        "type": "object",
        "required": [
          "ResourceARNUpdate"
        ],
        "properties": {
          "ResourceARNUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "<p>The Amazon Resource Name (ARN) of the new Amazon Lambda function that is used to preprocess the records in the stream.</p> <note> <p>To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda\">Example ARNs: Amazon Lambda</a> </p> </note>"
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, represents an update to the <a>InputLambdaProcessor</a> that is used to preprocess the records in the stream."
      },
      "ResourceARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "KinesisStreamsInputUpdate": {
        "type": "object",
        "required": [
          "ResourceARNUpdate"
        ],
        "properties": {
          "ResourceARNUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the input Kinesis data stream to read."
              }
            ]
          }
        },
        "description": "When you update the input configuration for a SQL-based Kinesis Data Analytics application, provides information about a Kinesis stream as the streaming source."
      },
      "KinesisFirehoseInputUpdate": {
        "type": "object",
        "required": [
          "ResourceARNUpdate"
        ],
        "properties": {
          "ResourceARNUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the input delivery stream to read."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, when updating application input configuration, provides information about a Kinesis Data Firehose delivery stream as the streaming source."
      },
      "InputSchemaUpdate": {
        "type": "object",
        "properties": {
          "RecordFormatUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordFormat"
              },
              {
                "description": "Specifies the format of the records on the streaming source."
              }
            ]
          },
          "RecordEncodingUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordEncoding"
              },
              {
                "description": "Specifies the encoding of the records in the streaming source; for example, UTF-8."
              }
            ]
          },
          "RecordColumnUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumns"
              },
              {
                "description": "A list of <code>RecordColumn</code> objects. Each object describes the mapping of the streaming source element to the corresponding column in the in-application stream."
              }
            ]
          }
        },
        "description": "Describes updates for an SQL-based Kinesis Data Analytics application's input schema."
      },
      "RecordFormat": {
        "type": "object",
        "required": [
          "RecordFormatType"
        ],
        "properties": {
          "RecordFormatType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordFormatType"
              },
              {
                "description": "The type of record format."
              }
            ]
          },
          "MappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/MappingParameters"
              },
              {
                "description": "When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source."
              }
            ]
          }
        },
        "description": " For a SQL-based Kinesis Data Analytics application, describes the record format and relevant mapping information that should be applied to schematize the records on the stream. "
      },
      "RecordFormatType": {
        "type": "string",
        "enum": [
          "JSON",
          "CSV"
        ]
      },
      "MappingParameters": {
        "type": "object",
        "properties": {
          "JSONMappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/JSONMappingParameters"
              },
              {
                "description": "Provides additional mapping information when JSON is the record format on the streaming source."
              }
            ]
          },
          "CSVMappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/CSVMappingParameters"
              },
              {
                "description": "Provides additional mapping information when the record format uses delimiters (for example, CSV)."
              }
            ]
          }
        },
        "description": "When you configure a SQL-based Kinesis Data Analytics application's input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source."
      },
      "JSONMappingParameters": {
        "type": "object",
        "required": [
          "RecordRowPath"
        ],
        "properties": {
          "RecordRowPath": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordRowPath"
              },
              {
                "description": "The path to the top-level parent that contains the records."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, provides additional mapping information when JSON is the record format on the streaming source."
      },
      "RecordRowPath": {
        "type": "string",
        "pattern": "^(?=^\\$)(?=^\\S+$).*$",
        "minLength": 1,
        "maxLength": 65535
      },
      "CSVMappingParameters": {
        "type": "object",
        "required": [
          "RecordRowDelimiter",
          "RecordColumnDelimiter"
        ],
        "properties": {
          "RecordRowDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordRowDelimiter"
              },
              {
                "description": "The row delimiter. For example, in a CSV format, <i>'\\n'</i> is the typical row delimiter."
              }
            ]
          },
          "RecordColumnDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnDelimiter"
              },
              {
                "description": "The column delimiter. For example, in a CSV format, a comma (\",\") is the typical column delimiter."
              }
            ]
          }
        },
        "description": "<p>For a SQL-based Kinesis Data Analytics application, provides additional mapping information when the record format uses delimiters, such as CSV. For example, the following sample records use CSV format, where the records use the <i>'\\n'</i> as the row delimiter and a comma (\",\") as the column delimiter: </p> <p> <code>\"name1\", \"address1\"</code> </p> <p> <code>\"name2\", \"address2\"</code> </p>"
      },
      "RecordRowDelimiter": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "RecordColumnDelimiter": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "RecordEncoding": {
        "type": "string",
        "pattern": "UTF-8",
        "minLength": 5,
        "maxLength": 5
      },
      "RecordColumns": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RecordColumn"
        },
        "minItems": 1,
        "maxItems": 1000
      },
      "RecordColumn": {
        "type": "object",
        "required": [
          "Name",
          "SqlType"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnName"
              },
              {
                "description": "The name of the column that is created in the in-application input stream or reference table."
              }
            ]
          },
          "Mapping": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnMapping"
              },
              {
                "description": "A reference to the data element in the streaming input or the reference data source."
              }
            ]
          },
          "SqlType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnSqlType"
              },
              {
                "description": "The type of column created in the in-application input stream or reference table."
              }
            ]
          }
        },
        "description": "<p>For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.</p> <p>Also used to describe the format of the reference data source.</p>"
      },
      "RecordColumnName": {
        "type": "string",
        "pattern": "[^-\\s<>&]*",
        "minLength": 1,
        "maxLength": 256
      },
      "RecordColumnMapping": {
        "type": "string",
        "minLength": 0,
        "maxLength": 65535
      },
      "RecordColumnSqlType": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "InputParallelismUpdate": {
        "type": "object",
        "required": [
          "CountUpdate"
        ],
        "properties": {
          "CountUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/InputParallelismCount"
              },
              {
                "description": "The number of in-application streams to create for the specified streaming source."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, provides updates to the parallelism count."
      },
      "InputParallelismCount": {
        "type": "integer",
        "minimum": 1,
        "maximum": 64
      },
      "OutputUpdates": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OutputUpdate"
        }
      },
      "OutputUpdate": {
        "type": "object",
        "required": [
          "OutputId"
        ],
        "properties": {
          "OutputId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "Identifies the specific output configuration that you want to update."
              }
            ]
          },
          "NameUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppStreamName"
              },
              {
                "description": "If you want to specify a different in-application stream for this output configuration, use this field to specify the new in-application stream name."
              }
            ]
          },
          "KinesisStreamsOutputUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisStreamsOutputUpdate"
              },
              {
                "description": "Describes a Kinesis data stream as the destination for the output."
              }
            ]
          },
          "KinesisFirehoseOutputUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisFirehoseOutputUpdate"
              },
              {
                "description": "Describes a Kinesis Data Firehose delivery stream as the destination for the output."
              }
            ]
          },
          "LambdaOutputUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/LambdaOutputUpdate"
              },
              {
                "description": "Describes an Amazon Lambda function as the destination for the output."
              }
            ]
          },
          "DestinationSchemaUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/DestinationSchema"
              },
              {
                "description": "Describes the data format when records are written to the destination. "
              }
            ]
          }
        },
        "description": " For a SQL-based Kinesis Data Analytics application, describes updates to the output configuration identified by the <code>OutputId</code>. "
      },
      "KinesisStreamsOutputUpdate": {
        "type": "object",
        "required": [
          "ResourceARNUpdate"
        ],
        "properties": {
          "ResourceARNUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Kinesis data stream where you want to write the output."
              }
            ]
          }
        },
        "description": "When you update a SQL-based Kinesis Data Analytics application's output configuration using the <a>UpdateApplication</a> operation, provides information about a Kinesis data stream that is configured as the destination."
      },
      "KinesisFirehoseOutputUpdate": {
        "type": "object",
        "required": [
          "ResourceARNUpdate"
        ],
        "properties": {
          "ResourceARNUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the delivery stream to write to. "
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, when updating an output configuration using the <a>UpdateApplication</a> operation, provides information about a Kinesis Data Firehose delivery stream that is configured as the destination."
      },
      "LambdaOutputUpdate": {
        "type": "object",
        "required": [
          "ResourceARNUpdate"
        ],
        "properties": {
          "ResourceARNUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "<p>The Amazon Resource Name (ARN) of the destination Amazon Lambda function.</p> <note> <p>To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda\">Example ARNs: Amazon Lambda</a> </p> </note>"
              }
            ]
          }
        },
        "description": "When you update an SQL-based Kinesis Data Analytics application's output configuration using the <a>UpdateApplication</a> operation, provides information about an Amazon Lambda function that is configured as the destination."
      },
      "DestinationSchema": {
        "type": "object",
        "required": [
          "RecordFormatType"
        ],
        "properties": {
          "RecordFormatType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordFormatType"
              },
              {
                "description": "Specifies the format of the records on the output stream."
              }
            ]
          }
        },
        "description": "Describes the data format when records are written to the destination in a SQL-based Kinesis Data Analytics application. "
      },
      "ReferenceDataSourceUpdates": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ReferenceDataSourceUpdate"
        }
      },
      "ReferenceDataSourceUpdate": {
        "type": "object",
        "required": [
          "ReferenceId"
        ],
        "properties": {
          "ReferenceId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The ID of the reference data source that is being updated. You can use the <a>DescribeApplication</a> operation to get this value."
              }
            ]
          },
          "TableNameUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppTableName"
              },
              {
                "description": "The in-application table name that is created by this update."
              }
            ]
          },
          "S3ReferenceDataSourceUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ReferenceDataSourceUpdate"
              },
              {
                "description": "Describes the S3 bucket name, object key name, and IAM role that Kinesis Data Analytics can assume to read the Amazon S3 object on your behalf and populate the in-application reference table."
              }
            ]
          },
          "ReferenceSchemaUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceSchema"
              },
              {
                "description": "Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. "
              }
            ]
          }
        },
        "description": "When you update a reference data source configuration for a SQL-based Kinesis Data Analytics application, this object provides all the updated values (such as the source bucket name and object key name), the in-application table name that is created, and updated mapping information that maps the data in the Amazon S3 object to the in-application reference table that is created."
      },
      "InAppTableName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32
      },
      "S3ReferenceDataSourceUpdate": {
        "type": "object",
        "properties": {
          "BucketARNUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the S3 bucket."
              }
            ]
          },
          "FileKeyUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/FileKey"
              },
              {
                "description": "The object key name."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes the Amazon S3 bucket name and object key name for an in-application reference table. "
      },
      "BucketARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "FileKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "SourceSchema": {
        "type": "object",
        "required": [
          "RecordFormat",
          "RecordColumns"
        ],
        "properties": {
          "RecordFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordFormat"
              },
              {
                "description": "Specifies the format of the records on the streaming source."
              }
            ]
          },
          "RecordEncoding": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordEncoding"
              },
              {
                "description": "Specifies the encoding of the records in the streaming source. For example, UTF-8."
              }
            ]
          },
          "RecordColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumns"
              },
              {
                "description": "A list of <code>RecordColumn</code> objects. "
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. "
      },
      "ApplicationCodeConfigurationUpdate": {
        "type": "object",
        "properties": {
          "CodeContentTypeUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeContentType"
              },
              {
                "description": "Describes updates to the code content type."
              }
            ]
          },
          "CodeContentUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeContentUpdate"
              },
              {
                "description": "Describes updates to the code content of an application."
              }
            ]
          }
        },
        "description": "Describes code configuration updates for an application. This is supported for a Flink-based Kinesis Data Analytics application or a SQL-based Kinesis Data Analytics application."
      },
      "CodeContentType": {
        "type": "string",
        "enum": [
          "PLAINTEXT",
          "ZIPFILE"
        ]
      },
      "CodeContentUpdate": {
        "type": "object",
        "properties": {
          "TextContentUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/TextContent"
              },
              {
                "description": "Describes an update to the text code for an application."
              }
            ]
          },
          "ZipFileContentUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ZipFileContent"
              },
              {
                "description": "Describes an update to the zipped code for an application."
              }
            ]
          },
          "S3ContentLocationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ContentLocationUpdate"
              },
              {
                "description": "Describes an update to the location of code for an application."
              }
            ]
          }
        },
        "description": "Describes an update to the code of an application. Not supported for Apache Zeppelin."
      },
      "TextContent": {
        "type": "string",
        "minLength": 0,
        "maxLength": 102400
      },
      "ZipFileContent": {
        "type": "string",
        "minLength": 0,
        "maxLength": 52428800
      },
      "S3ContentLocationUpdate": {
        "type": "object",
        "properties": {
          "BucketARNUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketARN"
              },
              {
                "description": "The new Amazon Resource Name (ARN) for the S3 bucket containing the application code."
              }
            ]
          },
          "FileKeyUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/FileKey"
              },
              {
                "description": "The new file key for the object containing the application code."
              }
            ]
          },
          "ObjectVersionUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectVersion"
              },
              {
                "description": "The new version of the object containing the application code."
              }
            ]
          }
        },
        "description": "Describes an update for the Amazon S3 code content location for an application."
      },
      "ObjectVersion": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "FlinkApplicationConfigurationUpdate": {
        "type": "object",
        "properties": {
          "CheckpointConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/CheckpointConfigurationUpdate"
              },
              {
                "description": "Describes updates to an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance."
              }
            ]
          },
          "MonitoringConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringConfigurationUpdate"
              },
              {
                "description": "Describes updates to the configuration parameters for Amazon CloudWatch logging for an application."
              }
            ]
          },
          "ParallelismConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ParallelismConfigurationUpdate"
              },
              {
                "description": "Describes updates to the parameters for how an application executes multiple tasks simultaneously."
              }
            ]
          }
        },
        "description": "Describes updates to the configuration parameters for a Flink-based Kinesis Data Analytics application."
      },
      "CheckpointConfigurationUpdate": {
        "type": "object",
        "properties": {
          "ConfigurationTypeUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationType"
              },
              {
                "description": "<p>Describes updates to whether the application uses the default checkpointing behavior of Kinesis Data Analytics. You must set this property to <code>CUSTOM</code> in order to set the <code>CheckpointingEnabled</code>, <code>CheckpointInterval</code>, or <code>MinPauseBetweenCheckpoints</code> parameters. </p> <note> <p>If this value is set to <code>DEFAULT</code>, the application will use the following values, even if they are set to other values using APIs or application code:</p> <ul> <li> <p> <b>CheckpointingEnabled:</b> true</p> </li> <li> <p> <b>CheckpointInterval:</b> 60000</p> </li> <li> <p> <b>MinPauseBetweenCheckpoints:</b> 5000</p> </li> </ul> </note>"
              }
            ]
          },
          "CheckpointingEnabledUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "<p>Describes updates to whether checkpointing is enabled for an application.</p> <note> <p>If <code>CheckpointConfiguration.ConfigurationType</code> is <code>DEFAULT</code>, the application will use a <code>CheckpointingEnabled</code> value of <code>true</code>, even if this value is set to another value using this API or in application code.</p> </note>"
              }
            ]
          },
          "CheckpointIntervalUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/CheckpointInterval"
              },
              {
                "description": "<p>Describes updates to the interval in milliseconds between checkpoint operations.</p> <note> <p>If <code>CheckpointConfiguration.ConfigurationType</code> is <code>DEFAULT</code>, the application will use a <code>CheckpointInterval</code> value of 60000, even if this value is set to another value using this API or in application code.</p> </note>"
              }
            ]
          },
          "MinPauseBetweenCheckpointsUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/MinPauseBetweenCheckpoints"
              },
              {
                "description": "<p>Describes updates to the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.</p> <note> <p>If <code>CheckpointConfiguration.ConfigurationType</code> is <code>DEFAULT</code>, the application will use a <code>MinPauseBetweenCheckpoints</code> value of 5000, even if this value is set using this API or in application code.</p> </note>"
              }
            ]
          }
        },
        "description": "Describes updates to the checkpointing parameters for a Flink-based Kinesis Data Analytics application."
      },
      "ConfigurationType": {
        "type": "string",
        "enum": [
          "DEFAULT",
          "CUSTOM"
        ]
      },
      "BooleanObject": {
        "type": "boolean"
      },
      "CheckpointInterval": {
        "type": "integer",
        "minimum": 1
      },
      "MinPauseBetweenCheckpoints": {
        "type": "integer",
        "minimum": 0
      },
      "MonitoringConfigurationUpdate": {
        "type": "object",
        "properties": {
          "ConfigurationTypeUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationType"
              },
              {
                "description": "Describes updates to whether to use the default CloudWatch logging configuration for an application. You must set this property to <code>CUSTOM</code> in order to set the <code>LogLevel</code> or <code>MetricsLevel</code> parameters."
              }
            ]
          },
          "MetricsLevelUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricsLevel"
              },
              {
                "description": "Describes updates to the granularity of the CloudWatch Logs for an application. The <code>Parallelism</code> level is not recommended for applications with a Parallelism over 64 due to excessive costs."
              }
            ]
          },
          "LogLevelUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/LogLevel"
              },
              {
                "description": "Describes updates to the verbosity of the CloudWatch Logs for an application."
              }
            ]
          }
        },
        "description": "Describes updates to configuration parameters for Amazon CloudWatch logging for an application."
      },
      "MetricsLevel": {
        "type": "string",
        "enum": [
          "APPLICATION",
          "TASK",
          "OPERATOR",
          "PARALLELISM"
        ]
      },
      "LogLevel": {
        "type": "string",
        "enum": [
          "INFO",
          "WARN",
          "ERROR",
          "DEBUG"
        ]
      },
      "ParallelismConfigurationUpdate": {
        "type": "object",
        "properties": {
          "ConfigurationTypeUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationType"
              },
              {
                "description": "Describes updates to whether the application uses the default parallelism for the Kinesis Data Analytics service, or if a custom parallelism is used. You must set this property to <code>CUSTOM</code> in order to change your application's <code>AutoScalingEnabled</code>, <code>Parallelism</code>, or <code>ParallelismPerKPU</code> properties."
              }
            ]
          },
          "ParallelismUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/Parallelism"
              },
              {
                "description": "Describes updates to the initial number of parallel tasks an application can perform. If <code>AutoScalingEnabled</code> is set to True, then Kinesis Data Analytics can increase the <code>CurrentParallelism</code> value in response to application load. The service can increase <code>CurrentParallelism</code> up to the maximum parallelism, which is <code>ParalellismPerKPU</code> times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service will reduce <code>CurrentParallelism</code> down to the <code>Parallelism</code> setting."
              }
            ]
          },
          "ParallelismPerKPUUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ParallelismPerKPU"
              },
              {
                "description": "Describes updates to the number of parallel tasks an application can perform per Kinesis Processing Unit (KPU) used by the application."
              }
            ]
          },
          "AutoScalingEnabledUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Describes updates to whether the Kinesis Data Analytics service can increase the parallelism of a Flink-based Kinesis Data Analytics application in response to increased throughput."
              }
            ]
          }
        },
        "description": "Describes updates to parameters for how an application executes multiple tasks simultaneously."
      },
      "Parallelism": {
        "type": "integer",
        "minimum": 1
      },
      "ParallelismPerKPU": {
        "type": "integer",
        "minimum": 1
      },
      "EnvironmentPropertyUpdates": {
        "type": "object",
        "required": [
          "PropertyGroups"
        ],
        "properties": {
          "PropertyGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/PropertyGroups"
              },
              {
                "description": "Describes updates to the execution property groups."
              }
            ]
          }
        },
        "description": "Describes updates to the execution property groups for a Flink-based Kinesis Data Analytics application or a Studio notebook."
      },
      "PropertyGroups": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PropertyGroup"
        },
        "maxItems": 50
      },
      "PropertyGroup": {
        "type": "object",
        "required": [
          "PropertyGroupId",
          "PropertyMap"
        ],
        "properties": {
          "PropertyGroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "Describes the key of an application execution property key-value pair."
              }
            ]
          },
          "PropertyMap": {
            "allOf": [
              {
                "$ref": "#/$defs/PropertyMap"
              },
              {
                "description": "Describes the value of an application execution property key-value pair."
              }
            ]
          }
        },
        "description": "Property key-value pairs passed into an application."
      },
      "PropertyMap": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/PropertyValue"
        }
      },
      "PropertyValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "ApplicationSnapshotConfigurationUpdate": {
        "type": "object",
        "required": [
          "SnapshotsEnabledUpdate"
        ],
        "properties": {
          "SnapshotsEnabledUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Describes updates to whether snapshots are enabled for an application."
              }
            ]
          }
        },
        "description": "Describes updates to whether snapshots are enabled for a Flink-based Kinesis Data Analytics application."
      },
      "VpcConfigurationUpdates": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VpcConfigurationUpdate"
        }
      },
      "VpcConfigurationUpdate": {
        "type": "object",
        "required": [
          "VpcConfigurationId"
        ],
        "properties": {
          "VpcConfigurationId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "Describes an update to the ID of the VPC configuration."
              }
            ]
          },
          "SubnetIdUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/SubnetIds"
              },
              {
                "description": "Describes updates to the array of <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html\">Subnet</a> IDs used by the VPC configuration."
              }
            ]
          },
          "SecurityGroupIdUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityGroupIds"
              },
              {
                "description": "Describes updates to the array of <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html\">SecurityGroup</a> IDs used by the VPC configuration."
              }
            ]
          }
        },
        "description": "Describes updates to the VPC configuration used by the application."
      },
      "SubnetIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetId"
        },
        "minItems": 1,
        "maxItems": 16
      },
      "SubnetId": {
        "type": "string"
      },
      "SecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SecurityGroupId"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "SecurityGroupId": {
        "type": "string"
      },
      "ZeppelinApplicationConfigurationUpdate": {
        "type": "object",
        "properties": {
          "MonitoringConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ZeppelinMonitoringConfigurationUpdate"
              },
              {
                "description": "Updates to the monitoring configuration of a Kinesis Data Analytics Studio notebook."
              }
            ]
          },
          "CatalogConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogConfigurationUpdate"
              },
              {
                "description": "Updates to the configuration of the Amazon Glue Data Catalog that is associated with the Kinesis Data Analytics Studio notebook."
              }
            ]
          },
          "DeployAsApplicationConfigurationUpdate": {
            "$ref": "#/$defs/DeployAsApplicationConfigurationUpdate"
          },
          "CustomArtifactsConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomArtifactsConfigurationList"
              },
              {
                "description": "Updates to the customer artifacts. Custom artifacts are dependency JAR files and user-defined functions (UDF)."
              }
            ]
          }
        },
        "description": "Updates to the configuration of Kinesis Data Analytics Studio notebook."
      },
      "ZeppelinMonitoringConfigurationUpdate": {
        "type": "object",
        "required": [
          "LogLevelUpdate"
        ],
        "properties": {
          "LogLevelUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/LogLevel"
              },
              {
                "description": "Updates to the logging level for Apache Zeppelin within a Kinesis Data Analytics Studio notebook."
              }
            ]
          }
        },
        "description": "Updates to the monitoring configuration for Apache Zeppelin within a Kinesis Data Analytics Studio notebook."
      },
      "CatalogConfigurationUpdate": {
        "type": "object",
        "required": [
          "GlueDataCatalogConfigurationUpdate"
        ],
        "properties": {
          "GlueDataCatalogConfigurationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueDataCatalogConfigurationUpdate"
              },
              {
                "description": "Updates to the configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook."
              }
            ]
          }
        },
        "description": "Updates to the configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook."
      },
      "GlueDataCatalogConfigurationUpdate": {
        "type": "object",
        "required": [
          "DatabaseARNUpdate"
        ],
        "properties": {
          "DatabaseARNUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseARN"
              },
              {
                "description": "The updated Amazon Resource Name (ARN) of the database."
              }
            ]
          }
        },
        "description": "Updates to the configuration of the Glue Data Catalog that you use for SQL queries that you write in a Kinesis Data Analytics Studio notebook."
      },
      "DatabaseARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "DeployAsApplicationConfigurationUpdate": {
        "type": "object",
        "properties": {
          "S3ContentLocationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ContentBaseLocationUpdate"
              },
              {
                "description": "Updates to the location that holds the data required to specify an Amazon Data Analytics application."
              }
            ]
          }
        },
        "description": "Updates to the configuration information required to deploy an Amazon Data Analytics Studio notebook as an application with durable state."
      },
      "S3ContentBaseLocationUpdate": {
        "type": "object",
        "properties": {
          "BucketARNUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketARN"
              },
              {
                "description": "The updated Amazon Resource Name (ARN) of the S3 bucket."
              }
            ]
          },
          "BasePathUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/BasePath"
              },
              {
                "description": "The updated S3 bucket path."
              }
            ]
          }
        },
        "description": "The information required to update the S3 base location that holds the application."
      },
      "BasePath": {
        "type": "string",
        "pattern": "[a-zA-Z0-9/!-_.*'()]+",
        "minLength": 1,
        "maxLength": 1024
      },
      "CustomArtifactsConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CustomArtifactConfiguration"
        },
        "maxItems": 50
      },
      "CustomArtifactConfiguration": {
        "type": "object",
        "required": [
          "ArtifactType"
        ],
        "properties": {
          "ArtifactType": {
            "allOf": [
              {
                "$ref": "#/$defs/ArtifactType"
              },
              {
                "description": " <code>UDF</code> stands for user-defined functions. This type of artifact must be in an S3 bucket. A <code>DEPENDENCY_JAR</code> can be in either Maven or an S3 bucket."
              }
            ]
          },
          "S3ContentLocation": {
            "$ref": "#/$defs/S3ContentLocation"
          },
          "MavenReference": {
            "allOf": [
              {
                "$ref": "#/$defs/MavenReference"
              },
              {
                "description": "The parameters required to fully specify a Maven reference."
              }
            ]
          }
        },
        "description": "Specifies dependency JARs, as well as JAR files that contain user-defined functions (UDF)."
      },
      "ArtifactType": {
        "type": "string",
        "enum": [
          "UDF",
          "DEPENDENCY_JAR"
        ]
      },
      "S3ContentLocation": {
        "type": "object",
        "required": [
          "BucketARN",
          "FileKey"
        ],
        "properties": {
          "BucketARN": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) for the S3 bucket containing the application code."
              }
            ]
          },
          "FileKey": {
            "allOf": [
              {
                "$ref": "#/$defs/FileKey"
              },
              {
                "description": "The file key for the object containing the application code."
              }
            ]
          },
          "ObjectVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectVersion"
              },
              {
                "description": "The version of the object containing the application code."
              }
            ]
          }
        },
        "description": "For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. "
      },
      "MavenReference": {
        "type": "object",
        "required": [
          "GroupId",
          "ArtifactId",
          "Version"
        ],
        "properties": {
          "GroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/MavenGroupId"
              },
              {
                "description": "The group ID of the Maven reference."
              }
            ]
          },
          "ArtifactId": {
            "allOf": [
              {
                "$ref": "#/$defs/MavenArtifactId"
              },
              {
                "description": "The artifact ID of the Maven reference."
              }
            ]
          },
          "Version": {
            "allOf": [
              {
                "$ref": "#/$defs/MavenVersion"
              },
              {
                "description": "The version of the Maven reference."
              }
            ]
          }
        },
        "description": "The information required to specify a Maven reference. You can use Maven references to specify dependency JAR files."
      },
      "MavenGroupId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "MavenArtifactId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "MavenVersion": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "RoleARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "RunConfigurationUpdate": {
        "type": "object",
        "properties": {
          "FlinkRunConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FlinkRunConfiguration"
              },
              {
                "description": "Describes the starting parameters for a Flink-based Kinesis Data Analytics application."
              }
            ]
          },
          "ApplicationRestoreConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationRestoreConfiguration"
              },
              {
                "description": "Describes updates to the restore behavior of a restarting application."
              }
            ]
          }
        },
        "description": "Describes the updates to the starting parameters for a Kinesis Data Analytics application."
      },
      "FlinkRunConfiguration": {
        "type": "object",
        "properties": {
          "AllowNonRestoredState": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "<p>When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. This will happen if the program is updated between snapshots to remove stateful parameters, and state data in the snapshot no longer corresponds to valid application data. For more information, see <a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/savepoints.html#allowing-non-restored-state\"> Allowing Non-Restored State</a> in the <a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.8/\">Apache Flink documentation</a>.</p> <note> <p>This value defaults to <code>false</code>. If you update your application without specifying this parameter, <code>AllowNonRestoredState</code> will be set to <code>false</code>, even if it was previously set to <code>true</code>.</p> </note>"
              }
            ]
          }
        },
        "description": "Describes the starting parameters for a Flink-based Kinesis Data Analytics application."
      },
      "ApplicationRestoreConfiguration": {
        "type": "object",
        "required": [
          "ApplicationRestoreType"
        ],
        "properties": {
          "ApplicationRestoreType": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationRestoreType"
              },
              {
                "description": "Specifies how the application should be restored."
              }
            ]
          },
          "SnapshotName": {
            "allOf": [
              {
                "$ref": "#/$defs/SnapshotName"
              },
              {
                "description": "The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if <code>RESTORE_FROM_CUSTOM_SNAPSHOT</code> is specified for the <code>ApplicationRestoreType</code>."
              }
            ]
          }
        },
        "description": "Specifies the method and snapshot to use when restarting an application using previously saved application state."
      },
      "ApplicationRestoreType": {
        "type": "string",
        "enum": [
          "SKIP_RESTORE_FROM_SNAPSHOT",
          "RESTORE_FROM_LATEST_SNAPSHOT",
          "RESTORE_FROM_CUSTOM_SNAPSHOT"
        ]
      },
      "SnapshotName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "CloudWatchLoggingOptionUpdates": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CloudWatchLoggingOptionUpdate"
        }
      },
      "CloudWatchLoggingOptionUpdate": {
        "type": "object",
        "required": [
          "CloudWatchLoggingOptionId"
        ],
        "properties": {
          "CloudWatchLoggingOptionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The ID of the CloudWatch logging option to update"
              }
            ]
          },
          "LogStreamARNUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/LogStreamARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the CloudWatch log to receive application messages."
              }
            ]
          }
        },
        "description": "Describes the Amazon CloudWatch logging option updates."
      },
      "LogStreamARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "ConditionalToken": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-_+/=]+",
        "minLength": 1,
        "maxLength": 512
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://kinesisanalytics.us-east-1.amazonaws.com/#X-Amz-Target=KinesisAnalytics_20180523.UpdateApplication"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ApplicationDetail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
