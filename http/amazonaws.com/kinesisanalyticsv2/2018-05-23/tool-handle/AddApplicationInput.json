{
  "name": "AddApplicationInput",
  "description": "<p> Adds a streaming source to your SQL-based Kinesis Data Analytics application. </p> <p>You can add a streaming source when you create an application, or you can use this operation to add a streaming source after you create an application. For more information, see <a>CreateApplication</a>.</p> <p>Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the <a>DescribeApplication</a> operation to find the current application version. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "KinesisAnalytics_20180523.AddApplicationInput"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/AddApplicationInputRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "AddApplicationInputRequest": {
        "type": "object",
        "required": [
          "ApplicationName",
          "CurrentApplicationVersionId",
          "Input"
        ],
        "title": "AddApplicationInputRequest",
        "properties": {
          "ApplicationName": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationName"
              },
              {
                "description": "The name of your existing application to which you want to add the streaming source."
              }
            ]
          },
          "CurrentApplicationVersionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationVersionId"
              },
              {
                "description": "The current version of your application. You must provide the <code>ApplicationVersionID</code> or the <code>ConditionalToken</code>.You can use the <a>DescribeApplication</a> operation to find the current application version."
              }
            ]
          },
          "Input": {
            "allOf": [
              {
                "$ref": "#/$defs/Input"
              },
              {
                "description": "The <a>Input</a> to add."
              }
            ]
          }
        }
      },
      "ApplicationName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "ApplicationVersionId": {
        "type": "integer",
        "minimum": 1,
        "maximum": 999999999
      },
      "Input": {
        "type": "object",
        "required": [
          "NamePrefix",
          "InputSchema"
        ],
        "properties": {
          "NamePrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppStreamName"
              },
              {
                "description": "The name prefix to use when creating an in-application stream. Suppose that you specify a prefix \"<code>MyInApplicationStream</code>.\" Kinesis Data Analytics then creates one or more (as per the <code>InputParallelism</code> count you specified) in-application streams with the names \"<code>MyInApplicationStream_001</code>,\" \"<code>MyInApplicationStream_002</code>,\" and so on. "
              }
            ]
          },
          "InputProcessingConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/InputProcessingConfiguration"
              },
              {
                "description": "The <a>InputProcessingConfiguration</a> for the input. An input processor transforms records as they are received from the stream, before the application's SQL code executes. Currently, the only input processing configuration available is <a>InputLambdaProcessor</a>. "
              }
            ]
          },
          "KinesisStreamsInput": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisStreamsInput"
              },
              {
                "description": "If the streaming source is an Amazon Kinesis data stream, identifies the stream's Amazon Resource Name (ARN). "
              }
            ]
          },
          "KinesisFirehoseInput": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisFirehoseInput"
              },
              {
                "description": "If the streaming source is an Amazon Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN."
              }
            ]
          },
          "InputParallelism": {
            "allOf": [
              {
                "$ref": "#/$defs/InputParallelism"
              },
              {
                "description": "Describes the number of in-application streams to create. "
              }
            ]
          },
          "InputSchema": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceSchema"
              },
              {
                "description": "<p>Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.</p> <p>Also used to describe the format of the reference data source.</p>"
              }
            ]
          }
        },
        "description": "When you configure the application input for a SQL-based Kinesis Data Analytics application, you specify the streaming source, the in-application stream name that is created, and the mapping between the two. "
      },
      "InAppStreamName": {
        "type": "string",
        "pattern": "[^-\\s<>&]*",
        "minLength": 1,
        "maxLength": 32
      },
      "InputProcessingConfiguration": {
        "type": "object",
        "required": [
          "InputLambdaProcessor"
        ],
        "properties": {
          "InputLambdaProcessor": {
            "allOf": [
              {
                "$ref": "#/$defs/InputLambdaProcessor"
              },
              {
                "description": "The <a>InputLambdaProcessor</a> that is used to preprocess the records in the stream before being processed by your application code."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes a processor that is used to preprocess the records in the stream before being processed by your application code. Currently, the only input processor available is <a href=\"https://docs.aws.amazon.com/lambda/\">Amazon Lambda</a>."
      },
      "InputLambdaProcessor": {
        "type": "object",
        "required": [
          "ResourceARN"
        ],
        "properties": {
          "ResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "<p>The ARN of the Amazon Lambda function that operates on records in the stream.</p> <note> <p>To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda\">Example ARNs: Amazon Lambda</a> </p> </note>"
              }
            ]
          }
        },
        "description": "An object that contains the Amazon Resource Name (ARN) of the Amazon Lambda function that is used to preprocess records in the stream in a SQL-based Kinesis Data Analytics application. "
      },
      "ResourceARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "KinesisStreamsInput": {
        "type": "object",
        "required": [
          "ResourceARN"
        ],
        "properties": {
          "ResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The ARN of the input Kinesis data stream to read."
              }
            ]
          }
        },
        "description": " Identifies a Kinesis data stream as the streaming source. You provide the stream's Amazon Resource Name (ARN)."
      },
      "KinesisFirehoseInput": {
        "type": "object",
        "required": [
          "ResourceARN"
        ],
        "properties": {
          "ResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the delivery stream."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, identifies a Kinesis Data Firehose delivery stream as the streaming source. You provide the delivery stream's Amazon Resource Name (ARN)."
      },
      "InputParallelism": {
        "type": "object",
        "properties": {
          "Count": {
            "allOf": [
              {
                "$ref": "#/$defs/InputParallelismCount"
              },
              {
                "description": "The number of in-application streams to create."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes the number of in-application streams to create for a given streaming source. "
      },
      "InputParallelismCount": {
        "type": "integer",
        "minimum": 1,
        "maximum": 64
      },
      "SourceSchema": {
        "type": "object",
        "required": [
          "RecordFormat",
          "RecordColumns"
        ],
        "properties": {
          "RecordFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordFormat"
              },
              {
                "description": "Specifies the format of the records on the streaming source."
              }
            ]
          },
          "RecordEncoding": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordEncoding"
              },
              {
                "description": "Specifies the encoding of the records in the streaming source. For example, UTF-8."
              }
            ]
          },
          "RecordColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumns"
              },
              {
                "description": "A list of <code>RecordColumn</code> objects. "
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. "
      },
      "RecordFormat": {
        "type": "object",
        "required": [
          "RecordFormatType"
        ],
        "properties": {
          "RecordFormatType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordFormatType"
              },
              {
                "description": "The type of record format."
              }
            ]
          },
          "MappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/MappingParameters"
              },
              {
                "description": "When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source."
              }
            ]
          }
        },
        "description": " For a SQL-based Kinesis Data Analytics application, describes the record format and relevant mapping information that should be applied to schematize the records on the stream. "
      },
      "RecordFormatType": {
        "type": "string",
        "enum": [
          "JSON",
          "CSV"
        ]
      },
      "MappingParameters": {
        "type": "object",
        "properties": {
          "JSONMappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/JSONMappingParameters"
              },
              {
                "description": "Provides additional mapping information when JSON is the record format on the streaming source."
              }
            ]
          },
          "CSVMappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/CSVMappingParameters"
              },
              {
                "description": "Provides additional mapping information when the record format uses delimiters (for example, CSV)."
              }
            ]
          }
        },
        "description": "When you configure a SQL-based Kinesis Data Analytics application's input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source."
      },
      "JSONMappingParameters": {
        "type": "object",
        "required": [
          "RecordRowPath"
        ],
        "properties": {
          "RecordRowPath": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordRowPath"
              },
              {
                "description": "The path to the top-level parent that contains the records."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, provides additional mapping information when JSON is the record format on the streaming source."
      },
      "RecordRowPath": {
        "type": "string",
        "pattern": "^(?=^\\$)(?=^\\S+$).*$",
        "minLength": 1,
        "maxLength": 65535
      },
      "CSVMappingParameters": {
        "type": "object",
        "required": [
          "RecordRowDelimiter",
          "RecordColumnDelimiter"
        ],
        "properties": {
          "RecordRowDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordRowDelimiter"
              },
              {
                "description": "The row delimiter. For example, in a CSV format, <i>'\\n'</i> is the typical row delimiter."
              }
            ]
          },
          "RecordColumnDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnDelimiter"
              },
              {
                "description": "The column delimiter. For example, in a CSV format, a comma (\",\") is the typical column delimiter."
              }
            ]
          }
        },
        "description": "<p>For a SQL-based Kinesis Data Analytics application, provides additional mapping information when the record format uses delimiters, such as CSV. For example, the following sample records use CSV format, where the records use the <i>'\\n'</i> as the row delimiter and a comma (\",\") as the column delimiter: </p> <p> <code>\"name1\", \"address1\"</code> </p> <p> <code>\"name2\", \"address2\"</code> </p>"
      },
      "RecordRowDelimiter": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "RecordColumnDelimiter": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "RecordEncoding": {
        "type": "string",
        "pattern": "UTF-8",
        "minLength": 5,
        "maxLength": 5
      },
      "RecordColumns": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RecordColumn"
        },
        "minItems": 1,
        "maxItems": 1000
      },
      "RecordColumn": {
        "type": "object",
        "required": [
          "Name",
          "SqlType"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnName"
              },
              {
                "description": "The name of the column that is created in the in-application input stream or reference table."
              }
            ]
          },
          "Mapping": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnMapping"
              },
              {
                "description": "A reference to the data element in the streaming input or the reference data source."
              }
            ]
          },
          "SqlType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnSqlType"
              },
              {
                "description": "The type of column created in the in-application input stream or reference table."
              }
            ]
          }
        },
        "description": "<p>For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.</p> <p>Also used to describe the format of the reference data source.</p>"
      },
      "RecordColumnName": {
        "type": "string",
        "pattern": "[^-\\s<>&]*",
        "minLength": 1,
        "maxLength": 256
      },
      "RecordColumnMapping": {
        "type": "string",
        "minLength": 0,
        "maxLength": 65535
      },
      "RecordColumnSqlType": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://kinesisanalytics.us-east-1.amazonaws.com/#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationInput"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ApplicationARN**",
            "**ApplicationVersionId**",
            "**InputDescriptions**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
