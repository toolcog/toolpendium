{
  "name": "CreateApplication",
  "description": "Creates a Kinesis Data Analytics application. For information about creating a Kinesis Data Analytics application, see <a href=\"https://docs.aws.amazon.com/kinesisanalytics/latest/java/getting-started.html\">Creating an Application</a>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "KinesisAnalytics_20180523.CreateApplication"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateApplicationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateApplicationRequest": {
        "type": "object",
        "required": [
          "ApplicationName",
          "RuntimeEnvironment",
          "ServiceExecutionRole"
        ],
        "title": "CreateApplicationRequest",
        "properties": {
          "ApplicationName": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationName"
              },
              {
                "description": "The name of your application (for example, <code>sample-app</code>)."
              }
            ]
          },
          "ApplicationDescription": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationDescription"
              },
              {
                "description": "A summary description of the application."
              }
            ]
          },
          "RuntimeEnvironment": {
            "allOf": [
              {
                "$ref": "#/$defs/RuntimeEnvironment"
              },
              {
                "description": "The runtime environment for the application."
              }
            ]
          },
          "ServiceExecutionRole": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleARN"
              },
              {
                "description": "The IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources."
              }
            ]
          },
          "ApplicationConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationConfiguration"
              },
              {
                "description": "Use this parameter to configure the application."
              }
            ]
          },
          "CloudWatchLoggingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLoggingOptions"
              },
              {
                "description": "Use this parameter to configure an Amazon CloudWatch log stream to monitor application configuration errors. "
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/Tags"
              },
              {
                "description": "A list of one or more tags to assign to the application. A tag is a key-value pair that identifies an application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see <a href=\"https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html\">Using Tagging</a>."
              }
            ]
          },
          "ApplicationMode": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationMode"
              },
              {
                "description": "Use the <code>STREAMING</code> mode to create a Kinesis Data Analytics For Flink application. To create a Kinesis Data Analytics Studio notebook, use the <code>INTERACTIVE</code> mode."
              }
            ]
          }
        }
      },
      "ApplicationName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "ApplicationDescription": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "RuntimeEnvironment": {
        "type": "string",
        "enum": [
          "SQL-1_0",
          "FLINK-1_6",
          "FLINK-1_8",
          "ZEPPELIN-FLINK-1_0",
          "FLINK-1_11",
          "FLINK-1_13",
          "ZEPPELIN-FLINK-2_0",
          "FLINK-1_15",
          "ZEPPELIN-FLINK-3_0"
        ]
      },
      "RoleARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "ApplicationConfiguration": {
        "type": "object",
        "properties": {
          "SqlApplicationConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/SqlApplicationConfiguration"
              },
              {
                "description": "The creation and update parameters for a SQL-based Kinesis Data Analytics application."
              }
            ]
          },
          "FlinkApplicationConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FlinkApplicationConfiguration"
              },
              {
                "description": "The creation and update parameters for a Flink-based Kinesis Data Analytics application."
              }
            ]
          },
          "EnvironmentProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/EnvironmentProperties"
              },
              {
                "description": "Describes execution properties for a Flink-based Kinesis Data Analytics application."
              }
            ]
          },
          "ApplicationCodeConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationCodeConfiguration"
              },
              {
                "description": "The code location and type parameters for a Flink-based Kinesis Data Analytics application."
              }
            ]
          },
          "ApplicationSnapshotConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationSnapshotConfiguration"
              },
              {
                "description": "Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application."
              }
            ]
          },
          "VpcConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcConfigurations"
              },
              {
                "description": "The array of descriptions of VPC configurations available to the application."
              }
            ]
          },
          "ZeppelinApplicationConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ZeppelinApplicationConfiguration"
              },
              {
                "description": "The configuration parameters for a Kinesis Data Analytics Studio notebook."
              }
            ]
          }
        },
        "description": "Specifies the creation parameters for a Kinesis Data Analytics application."
      },
      "SqlApplicationConfiguration": {
        "type": "object",
        "properties": {
          "Inputs": {
            "allOf": [
              {
                "$ref": "#/$defs/Inputs"
              },
              {
                "description": "The array of <a>Input</a> objects describing the input streams used by the application."
              }
            ]
          },
          "Outputs": {
            "allOf": [
              {
                "$ref": "#/$defs/Outputs"
              },
              {
                "description": "The array of <a>Output</a> objects describing the destination streams used by the application."
              }
            ]
          },
          "ReferenceDataSources": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceDataSources"
              },
              {
                "description": "The array of <a>ReferenceDataSource</a> objects describing the reference data sources used by the application."
              }
            ]
          }
        },
        "description": "Describes the inputs, outputs, and reference data sources for a SQL-based Kinesis Data Analytics application."
      },
      "Inputs": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Input"
        }
      },
      "Input": {
        "type": "object",
        "required": [
          "NamePrefix",
          "InputSchema"
        ],
        "properties": {
          "NamePrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppStreamName"
              },
              {
                "description": "The name prefix to use when creating an in-application stream. Suppose that you specify a prefix \"<code>MyInApplicationStream</code>.\" Kinesis Data Analytics then creates one or more (as per the <code>InputParallelism</code> count you specified) in-application streams with the names \"<code>MyInApplicationStream_001</code>,\" \"<code>MyInApplicationStream_002</code>,\" and so on. "
              }
            ]
          },
          "InputProcessingConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/InputProcessingConfiguration"
              },
              {
                "description": "The <a>InputProcessingConfiguration</a> for the input. An input processor transforms records as they are received from the stream, before the application's SQL code executes. Currently, the only input processing configuration available is <a>InputLambdaProcessor</a>. "
              }
            ]
          },
          "KinesisStreamsInput": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisStreamsInput"
              },
              {
                "description": "If the streaming source is an Amazon Kinesis data stream, identifies the stream's Amazon Resource Name (ARN). "
              }
            ]
          },
          "KinesisFirehoseInput": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisFirehoseInput"
              },
              {
                "description": "If the streaming source is an Amazon Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN."
              }
            ]
          },
          "InputParallelism": {
            "allOf": [
              {
                "$ref": "#/$defs/InputParallelism"
              },
              {
                "description": "Describes the number of in-application streams to create. "
              }
            ]
          },
          "InputSchema": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceSchema"
              },
              {
                "description": "<p>Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.</p> <p>Also used to describe the format of the reference data source.</p>"
              }
            ]
          }
        },
        "description": "When you configure the application input for a SQL-based Kinesis Data Analytics application, you specify the streaming source, the in-application stream name that is created, and the mapping between the two. "
      },
      "InAppStreamName": {
        "type": "string",
        "pattern": "[^-\\s<>&]*",
        "minLength": 1,
        "maxLength": 32
      },
      "InputProcessingConfiguration": {
        "type": "object",
        "required": [
          "InputLambdaProcessor"
        ],
        "properties": {
          "InputLambdaProcessor": {
            "allOf": [
              {
                "$ref": "#/$defs/InputLambdaProcessor"
              },
              {
                "description": "The <a>InputLambdaProcessor</a> that is used to preprocess the records in the stream before being processed by your application code."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes a processor that is used to preprocess the records in the stream before being processed by your application code. Currently, the only input processor available is <a href=\"https://docs.aws.amazon.com/lambda/\">Amazon Lambda</a>."
      },
      "InputLambdaProcessor": {
        "type": "object",
        "required": [
          "ResourceARN"
        ],
        "properties": {
          "ResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "<p>The ARN of the Amazon Lambda function that operates on records in the stream.</p> <note> <p>To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda\">Example ARNs: Amazon Lambda</a> </p> </note>"
              }
            ]
          }
        },
        "description": "An object that contains the Amazon Resource Name (ARN) of the Amazon Lambda function that is used to preprocess records in the stream in a SQL-based Kinesis Data Analytics application. "
      },
      "ResourceARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "KinesisStreamsInput": {
        "type": "object",
        "required": [
          "ResourceARN"
        ],
        "properties": {
          "ResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The ARN of the input Kinesis data stream to read."
              }
            ]
          }
        },
        "description": " Identifies a Kinesis data stream as the streaming source. You provide the stream's Amazon Resource Name (ARN)."
      },
      "KinesisFirehoseInput": {
        "type": "object",
        "required": [
          "ResourceARN"
        ],
        "properties": {
          "ResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the delivery stream."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, identifies a Kinesis Data Firehose delivery stream as the streaming source. You provide the delivery stream's Amazon Resource Name (ARN)."
      },
      "InputParallelism": {
        "type": "object",
        "properties": {
          "Count": {
            "allOf": [
              {
                "$ref": "#/$defs/InputParallelismCount"
              },
              {
                "description": "The number of in-application streams to create."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes the number of in-application streams to create for a given streaming source. "
      },
      "InputParallelismCount": {
        "type": "integer",
        "minimum": 1,
        "maximum": 64
      },
      "SourceSchema": {
        "type": "object",
        "required": [
          "RecordFormat",
          "RecordColumns"
        ],
        "properties": {
          "RecordFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordFormat"
              },
              {
                "description": "Specifies the format of the records on the streaming source."
              }
            ]
          },
          "RecordEncoding": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordEncoding"
              },
              {
                "description": "Specifies the encoding of the records in the streaming source. For example, UTF-8."
              }
            ]
          },
          "RecordColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumns"
              },
              {
                "description": "A list of <code>RecordColumn</code> objects. "
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. "
      },
      "RecordFormat": {
        "type": "object",
        "required": [
          "RecordFormatType"
        ],
        "properties": {
          "RecordFormatType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordFormatType"
              },
              {
                "description": "The type of record format."
              }
            ]
          },
          "MappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/MappingParameters"
              },
              {
                "description": "When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source."
              }
            ]
          }
        },
        "description": " For a SQL-based Kinesis Data Analytics application, describes the record format and relevant mapping information that should be applied to schematize the records on the stream. "
      },
      "RecordFormatType": {
        "type": "string",
        "enum": [
          "JSON",
          "CSV"
        ]
      },
      "MappingParameters": {
        "type": "object",
        "properties": {
          "JSONMappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/JSONMappingParameters"
              },
              {
                "description": "Provides additional mapping information when JSON is the record format on the streaming source."
              }
            ]
          },
          "CSVMappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/CSVMappingParameters"
              },
              {
                "description": "Provides additional mapping information when the record format uses delimiters (for example, CSV)."
              }
            ]
          }
        },
        "description": "When you configure a SQL-based Kinesis Data Analytics application's input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source."
      },
      "JSONMappingParameters": {
        "type": "object",
        "required": [
          "RecordRowPath"
        ],
        "properties": {
          "RecordRowPath": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordRowPath"
              },
              {
                "description": "The path to the top-level parent that contains the records."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, provides additional mapping information when JSON is the record format on the streaming source."
      },
      "RecordRowPath": {
        "type": "string",
        "pattern": "^(?=^\\$)(?=^\\S+$).*$",
        "minLength": 1,
        "maxLength": 65535
      },
      "CSVMappingParameters": {
        "type": "object",
        "required": [
          "RecordRowDelimiter",
          "RecordColumnDelimiter"
        ],
        "properties": {
          "RecordRowDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordRowDelimiter"
              },
              {
                "description": "The row delimiter. For example, in a CSV format, <i>'\\n'</i> is the typical row delimiter."
              }
            ]
          },
          "RecordColumnDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnDelimiter"
              },
              {
                "description": "The column delimiter. For example, in a CSV format, a comma (\",\") is the typical column delimiter."
              }
            ]
          }
        },
        "description": "<p>For a SQL-based Kinesis Data Analytics application, provides additional mapping information when the record format uses delimiters, such as CSV. For example, the following sample records use CSV format, where the records use the <i>'\\n'</i> as the row delimiter and a comma (\",\") as the column delimiter: </p> <p> <code>\"name1\", \"address1\"</code> </p> <p> <code>\"name2\", \"address2\"</code> </p>"
      },
      "RecordRowDelimiter": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "RecordColumnDelimiter": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "RecordEncoding": {
        "type": "string",
        "pattern": "UTF-8",
        "minLength": 5,
        "maxLength": 5
      },
      "RecordColumns": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RecordColumn"
        },
        "minItems": 1,
        "maxItems": 1000
      },
      "RecordColumn": {
        "type": "object",
        "required": [
          "Name",
          "SqlType"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnName"
              },
              {
                "description": "The name of the column that is created in the in-application input stream or reference table."
              }
            ]
          },
          "Mapping": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnMapping"
              },
              {
                "description": "A reference to the data element in the streaming input or the reference data source."
              }
            ]
          },
          "SqlType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnSqlType"
              },
              {
                "description": "The type of column created in the in-application input stream or reference table."
              }
            ]
          }
        },
        "description": "<p>For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.</p> <p>Also used to describe the format of the reference data source.</p>"
      },
      "RecordColumnName": {
        "type": "string",
        "pattern": "[^-\\s<>&]*",
        "minLength": 1,
        "maxLength": 256
      },
      "RecordColumnMapping": {
        "type": "string",
        "minLength": 0,
        "maxLength": 65535
      },
      "RecordColumnSqlType": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "Outputs": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Output"
        }
      },
      "Output": {
        "type": "object",
        "required": [
          "Name",
          "DestinationSchema"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppStreamName"
              },
              {
                "description": "The name of the in-application stream."
              }
            ]
          },
          "KinesisStreamsOutput": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisStreamsOutput"
              },
              {
                "description": "Identifies a Kinesis data stream as the destination."
              }
            ]
          },
          "KinesisFirehoseOutput": {
            "allOf": [
              {
                "$ref": "#/$defs/KinesisFirehoseOutput"
              },
              {
                "description": "Identifies a Kinesis Data Firehose delivery stream as the destination."
              }
            ]
          },
          "LambdaOutput": {
            "allOf": [
              {
                "$ref": "#/$defs/LambdaOutput"
              },
              {
                "description": "Identifies an Amazon Lambda function as the destination."
              }
            ]
          },
          "DestinationSchema": {
            "allOf": [
              {
                "$ref": "#/$defs/DestinationSchema"
              },
              {
                "description": "Describes the data format when records are written to the destination. "
              }
            ]
          }
        },
        "description": "<p> Describes a SQL-based Kinesis Data Analytics application's output configuration, in which you identify an in-application stream and a destination where you want the in-application stream data to be written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. </p> <p/>"
      },
      "KinesisStreamsOutput": {
        "type": "object",
        "required": [
          "ResourceARN"
        ],
        "properties": {
          "ResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The ARN of the destination Kinesis data stream to write to."
              }
            ]
          }
        },
        "description": "When you configure a SQL-based Kinesis Data Analytics application's output, identifies a Kinesis data stream as the destination. You provide the stream Amazon Resource Name (ARN). "
      },
      "KinesisFirehoseOutput": {
        "type": "object",
        "required": [
          "ResourceARN"
        ],
        "properties": {
          "ResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The ARN of the destination delivery stream to write to."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, when configuring application output, identifies a Kinesis Data Firehose delivery stream as the destination. You provide the stream Amazon Resource Name (ARN) of the delivery stream. "
      },
      "LambdaOutput": {
        "type": "object",
        "required": [
          "ResourceARN"
        ],
        "properties": {
          "ResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "<p>The Amazon Resource Name (ARN) of the destination Lambda function to write to.</p> <note> <p>To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda\">Example ARNs: Amazon Lambda</a> </p> </note>"
              }
            ]
          }
        },
        "description": "When you configure a SQL-based Kinesis Data Analytics application's output, identifies an Amazon Lambda function as the destination. You provide the function Amazon Resource Name (ARN) of the Lambda function. "
      },
      "DestinationSchema": {
        "type": "object",
        "required": [
          "RecordFormatType"
        ],
        "properties": {
          "RecordFormatType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordFormatType"
              },
              {
                "description": "Specifies the format of the records on the output stream."
              }
            ]
          }
        },
        "description": "Describes the data format when records are written to the destination in a SQL-based Kinesis Data Analytics application. "
      },
      "ReferenceDataSources": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ReferenceDataSource"
        }
      },
      "ReferenceDataSource": {
        "type": "object",
        "required": [
          "TableName",
          "ReferenceSchema"
        ],
        "properties": {
          "TableName": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppTableName"
              },
              {
                "description": "The name of the in-application table to create."
              }
            ]
          },
          "S3ReferenceDataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ReferenceDataSource"
              },
              {
                "description": "Identifies the S3 bucket and object that contains the reference data. A Kinesis Data Analytics application loads reference data only once. If the data changes, you call the <a>UpdateApplication</a> operation to trigger reloading of data into your application. "
              }
            ]
          },
          "ReferenceSchema": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceSchema"
              },
              {
                "description": "Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes the reference data source by providing the source information (Amazon S3 bucket name and object key name), the resulting in-application table name that is created, and the necessary schema to map the data elements in the Amazon S3 object to the in-application table."
      },
      "InAppTableName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32
      },
      "S3ReferenceDataSource": {
        "type": "object",
        "properties": {
          "BucketARN": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the S3 bucket."
              }
            ]
          },
          "FileKey": {
            "allOf": [
              {
                "$ref": "#/$defs/FileKey"
              },
              {
                "description": "The object key name containing the reference data."
              }
            ]
          }
        },
        "description": "<p>For a SQL-based Kinesis Data Analytics application, identifies the Amazon S3 bucket and object that contains the reference data.</p> <p>A Kinesis Data Analytics application loads reference data only once. If the data changes, you call the <a>UpdateApplication</a> operation to trigger reloading of data into your application. </p>"
      },
      "BucketARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "FileKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "FlinkApplicationConfiguration": {
        "type": "object",
        "properties": {
          "CheckpointConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CheckpointConfiguration"
              },
              {
                "description": "Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance. For more information, see <a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.8/concepts/programming-model.html#checkpoints-for-fault-tolerance\"> Checkpoints for Fault Tolerance</a> in the <a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.8/\">Apache Flink Documentation</a>. "
              }
            ]
          },
          "MonitoringConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/MonitoringConfiguration"
              },
              {
                "description": "Describes configuration parameters for Amazon CloudWatch logging for an application."
              }
            ]
          },
          "ParallelismConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ParallelismConfiguration"
              },
              {
                "description": "Describes parameters for how an application executes multiple tasks simultaneously."
              }
            ]
          }
        },
        "description": "Describes configuration parameters for a Flink-based Kinesis Data Analytics application or a Studio notebook."
      },
      "CheckpointConfiguration": {
        "type": "object",
        "required": [
          "ConfigurationType"
        ],
        "properties": {
          "ConfigurationType": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationType"
              },
              {
                "description": "<p>Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. You must set this property to <code>CUSTOM</code> in order to set the <code>CheckpointingEnabled</code>, <code>CheckpointInterval</code>, or <code>MinPauseBetweenCheckpoints</code> parameters.</p> <note> <p>If this value is set to <code>DEFAULT</code>, the application will use the following values, even if they are set to other values using APIs or application code:</p> <ul> <li> <p> <b>CheckpointingEnabled:</b> true</p> </li> <li> <p> <b>CheckpointInterval:</b> 60000</p> </li> <li> <p> <b>MinPauseBetweenCheckpoints:</b> 5000</p> </li> </ul> </note>"
              }
            ]
          },
          "CheckpointingEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "<p>Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.</p> <note> <p>If <code>CheckpointConfiguration.ConfigurationType</code> is <code>DEFAULT</code>, the application will use a <code>CheckpointingEnabled</code> value of <code>true</code>, even if this value is set to another value using this API or in application code.</p> </note>"
              }
            ]
          },
          "CheckpointInterval": {
            "allOf": [
              {
                "$ref": "#/$defs/CheckpointInterval"
              },
              {
                "description": "<p>Describes the interval in milliseconds between checkpoint operations. </p> <note> <p>If <code>CheckpointConfiguration.ConfigurationType</code> is <code>DEFAULT</code>, the application will use a <code>CheckpointInterval</code> value of 60000, even if this value is set to another value using this API or in application code.</p> </note>"
              }
            ]
          },
          "MinPauseBetweenCheckpoints": {
            "allOf": [
              {
                "$ref": "#/$defs/MinPauseBetweenCheckpoints"
              },
              {
                "description": "<p>Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start. If a checkpoint operation takes longer than the <code>CheckpointInterval</code>, the application otherwise performs continual checkpoint operations. For more information, see <a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/large_state_tuning.html#tuning-checkpointing\"> Tuning Checkpointing</a> in the <a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.8/\">Apache Flink Documentation</a>.</p> <note> <p>If <code>CheckpointConfiguration.ConfigurationType</code> is <code>DEFAULT</code>, the application will use a <code>MinPauseBetweenCheckpoints</code> value of 5000, even if this value is set using this API or in application code.</p> </note>"
              }
            ]
          }
        },
        "description": "Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance. For more information, see <a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.8/concepts/programming-model.html#checkpoints-for-fault-tolerance\"> Checkpoints for Fault Tolerance</a> in the <a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.8/\">Apache Flink Documentation</a>."
      },
      "ConfigurationType": {
        "type": "string",
        "enum": [
          "DEFAULT",
          "CUSTOM"
        ]
      },
      "BooleanObject": {
        "type": "boolean"
      },
      "CheckpointInterval": {
        "type": "integer",
        "minimum": 1
      },
      "MinPauseBetweenCheckpoints": {
        "type": "integer",
        "minimum": 0
      },
      "MonitoringConfiguration": {
        "type": "object",
        "required": [
          "ConfigurationType"
        ],
        "properties": {
          "ConfigurationType": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationType"
              },
              {
                "description": "Describes whether to use the default CloudWatch logging configuration for an application. You must set this property to <code>CUSTOM</code> in order to set the <code>LogLevel</code> or <code>MetricsLevel</code> parameters."
              }
            ]
          },
          "MetricsLevel": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricsLevel"
              },
              {
                "description": "Describes the granularity of the CloudWatch Logs for an application. The <code>Parallelism</code> level is not recommended for applications with a Parallelism over 64 due to excessive costs."
              }
            ]
          },
          "LogLevel": {
            "allOf": [
              {
                "$ref": "#/$defs/LogLevel"
              },
              {
                "description": "Describes the verbosity of the CloudWatch Logs for an application."
              }
            ]
          }
        },
        "description": "Describes configuration parameters for Amazon CloudWatch logging for an application. For more information about CloudWatch logging, see <a href=\"https://docs.aws.amazon.com/kinesisanalytics/latest/java/monitoring-overview.html\">Monitoring</a>."
      },
      "MetricsLevel": {
        "type": "string",
        "enum": [
          "APPLICATION",
          "TASK",
          "OPERATOR",
          "PARALLELISM"
        ]
      },
      "LogLevel": {
        "type": "string",
        "enum": [
          "INFO",
          "WARN",
          "ERROR",
          "DEBUG"
        ]
      },
      "ParallelismConfiguration": {
        "type": "object",
        "required": [
          "ConfigurationType"
        ],
        "properties": {
          "ConfigurationType": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationType"
              },
              {
                "description": "Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. You must set this property to <code>CUSTOM</code> in order to change your application's <code>AutoScalingEnabled</code>, <code>Parallelism</code>, or <code>ParallelismPerKPU</code> properties."
              }
            ]
          },
          "Parallelism": {
            "allOf": [
              {
                "$ref": "#/$defs/Parallelism"
              },
              {
                "description": "Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If <code>AutoScalingEnabled</code> is set to True, Kinesis Data Analytics increases the <code>CurrentParallelism</code> value in response to application load. The service can increase the <code>CurrentParallelism</code> value up to the maximum parallelism, which is <code>ParalellismPerKPU</code> times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the <code>CurrentParallelism</code> value down to the <code>Parallelism</code> setting."
              }
            ]
          },
          "ParallelismPerKPU": {
            "allOf": [
              {
                "$ref": "#/$defs/ParallelismPerKPU"
              },
              {
                "description": "Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application. For more information about KPUs, see <a href=\"http://aws.amazon.com/kinesis/data-analytics/pricing/\">Amazon Kinesis Data Analytics Pricing</a>."
              }
            ]
          },
          "AutoScalingEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput."
              }
            ]
          }
        },
        "description": "Describes parameters for how a Flink-based Kinesis Data Analytics application executes multiple tasks simultaneously. For more information about parallelism, see <a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/parallel.html\">Parallel Execution</a> in the <a href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.8/\">Apache Flink Documentation</a>."
      },
      "Parallelism": {
        "type": "integer",
        "minimum": 1
      },
      "ParallelismPerKPU": {
        "type": "integer",
        "minimum": 1
      },
      "EnvironmentProperties": {
        "type": "object",
        "required": [
          "PropertyGroups"
        ],
        "properties": {
          "PropertyGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/PropertyGroups"
              },
              {
                "description": "Describes the execution property groups."
              }
            ]
          }
        },
        "description": "Describes execution properties for a Flink-based Kinesis Data Analytics application."
      },
      "PropertyGroups": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PropertyGroup"
        },
        "maxItems": 50
      },
      "PropertyGroup": {
        "type": "object",
        "required": [
          "PropertyGroupId",
          "PropertyMap"
        ],
        "properties": {
          "PropertyGroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "Describes the key of an application execution property key-value pair."
              }
            ]
          },
          "PropertyMap": {
            "allOf": [
              {
                "$ref": "#/$defs/PropertyMap"
              },
              {
                "description": "Describes the value of an application execution property key-value pair."
              }
            ]
          }
        },
        "description": "Property key-value pairs passed into an application."
      },
      "Id": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 50
      },
      "PropertyMap": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/PropertyValue"
        }
      },
      "PropertyValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "ApplicationCodeConfiguration": {
        "type": "object",
        "required": [
          "CodeContentType"
        ],
        "properties": {
          "CodeContent": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeContent"
              },
              {
                "description": "The location and type of the application code."
              }
            ]
          },
          "CodeContentType": {
            "allOf": [
              {
                "$ref": "#/$defs/CodeContentType"
              },
              {
                "description": "Specifies whether the code content is in text or zip format."
              }
            ]
          }
        },
        "description": "Describes code configuration for an application."
      },
      "CodeContent": {
        "type": "object",
        "properties": {
          "TextContent": {
            "allOf": [
              {
                "$ref": "#/$defs/TextContent"
              },
              {
                "description": "The text-format code for a Flink-based Kinesis Data Analytics application."
              }
            ]
          },
          "ZipFileContent": {
            "allOf": [
              {
                "$ref": "#/$defs/ZipFileContent"
              },
              {
                "description": "The zip-format code for a Flink-based Kinesis Data Analytics application."
              }
            ]
          },
          "S3ContentLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ContentLocation"
              },
              {
                "description": "Information about the Amazon S3 bucket that contains the application code."
              }
            ]
          }
        },
        "description": "Specifies either the application code, or the location of the application code, for a Flink-based Kinesis Data Analytics application. "
      },
      "TextContent": {
        "type": "string",
        "minLength": 0,
        "maxLength": 102400
      },
      "ZipFileContent": {
        "type": "string",
        "minLength": 0,
        "maxLength": 52428800
      },
      "S3ContentLocation": {
        "type": "object",
        "required": [
          "BucketARN",
          "FileKey"
        ],
        "properties": {
          "BucketARN": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) for the S3 bucket containing the application code."
              }
            ]
          },
          "FileKey": {
            "allOf": [
              {
                "$ref": "#/$defs/FileKey"
              },
              {
                "description": "The file key for the object containing the application code."
              }
            ]
          },
          "ObjectVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectVersion"
              },
              {
                "description": "The version of the object containing the application code."
              }
            ]
          }
        },
        "description": "For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. "
      },
      "ObjectVersion": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "CodeContentType": {
        "type": "string",
        "enum": [
          "PLAINTEXT",
          "ZIPFILE"
        ]
      },
      "ApplicationSnapshotConfiguration": {
        "type": "object",
        "required": [
          "SnapshotsEnabled"
        ],
        "properties": {
          "SnapshotsEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application."
              }
            ]
          }
        },
        "description": "Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application."
      },
      "VpcConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VpcConfiguration"
        }
      },
      "VpcConfiguration": {
        "type": "object",
        "required": [
          "SubnetIds",
          "SecurityGroupIds"
        ],
        "properties": {
          "SubnetIds": {
            "allOf": [
              {
                "$ref": "#/$defs/SubnetIds"
              },
              {
                "description": "The array of <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html\">Subnet</a> IDs used by the VPC configuration."
              }
            ]
          },
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityGroupIds"
              },
              {
                "description": "The array of <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html\">SecurityGroup</a> IDs used by the VPC configuration."
              }
            ]
          }
        },
        "description": "Describes the parameters of a VPC used by the application."
      },
      "SubnetIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetId"
        },
        "minItems": 1,
        "maxItems": 16
      },
      "SubnetId": {
        "type": "string"
      },
      "SecurityGroupIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SecurityGroupId"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "SecurityGroupId": {
        "type": "string"
      },
      "ZeppelinApplicationConfiguration": {
        "type": "object",
        "properties": {
          "MonitoringConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ZeppelinMonitoringConfiguration"
              },
              {
                "description": "The monitoring configuration of a Kinesis Data Analytics Studio notebook."
              }
            ]
          },
          "CatalogConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogConfiguration"
              },
              {
                "description": "The Amazon Glue Data Catalog that you use in queries in a Kinesis Data Analytics Studio notebook."
              }
            ]
          },
          "DeployAsApplicationConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DeployAsApplicationConfiguration"
              },
              {
                "description": "The information required to deploy a Kinesis Data Analytics Studio notebook as an application with durable state."
              }
            ]
          },
          "CustomArtifactsConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomArtifactsConfigurationList"
              },
              {
                "description": "Custom artifacts are dependency JARs and user-defined functions (UDF)."
              }
            ]
          }
        },
        "description": "The configuration of a Kinesis Data Analytics Studio notebook."
      },
      "ZeppelinMonitoringConfiguration": {
        "type": "object",
        "required": [
          "LogLevel"
        ],
        "properties": {
          "LogLevel": {
            "allOf": [
              {
                "$ref": "#/$defs/LogLevel"
              },
              {
                "description": "The verbosity of the CloudWatch Logs for an application."
              }
            ]
          }
        },
        "description": "Describes configuration parameters for Amazon CloudWatch logging for a Kinesis Data Analytics Studio notebook. For more information about CloudWatch logging, see <a href=\"https://docs.aws.amazon.com/kinesisanalytics/latest/java/monitoring-overview.html\">Monitoring</a>."
      },
      "CatalogConfiguration": {
        "type": "object",
        "required": [
          "GlueDataCatalogConfiguration"
        ],
        "properties": {
          "GlueDataCatalogConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueDataCatalogConfiguration"
              },
              {
                "description": "The configuration parameters for the default Amazon Glue database. You use this database for Apache Flink SQL queries and table API transforms that you write in a Kinesis Data Analytics Studio notebook."
              }
            ]
          }
        },
        "description": "The configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook."
      },
      "GlueDataCatalogConfiguration": {
        "type": "object",
        "required": [
          "DatabaseARN"
        ],
        "properties": {
          "DatabaseARN": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the database."
              }
            ]
          }
        },
        "description": "The configuration of the Glue Data Catalog that you use for Apache Flink SQL queries and table API transforms that you write in an application."
      },
      "DatabaseARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "DeployAsApplicationConfiguration": {
        "type": "object",
        "required": [
          "S3ContentLocation"
        ],
        "properties": {
          "S3ContentLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ContentBaseLocation"
              },
              {
                "description": "The description of an Amazon S3 object that contains the Amazon Data Analytics application, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. "
              }
            ]
          }
        },
        "description": "The information required to deploy a Kinesis Data Analytics Studio notebook as an application with durable state."
      },
      "S3ContentBaseLocation": {
        "type": "object",
        "required": [
          "BucketARN"
        ],
        "properties": {
          "BucketARN": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the S3 bucket."
              }
            ]
          },
          "BasePath": {
            "allOf": [
              {
                "$ref": "#/$defs/BasePath"
              },
              {
                "description": "The base path for the S3 bucket."
              }
            ]
          }
        },
        "description": "The S3 bucket that holds the application information."
      },
      "BasePath": {
        "type": "string",
        "pattern": "[a-zA-Z0-9/!-_.*'()]+",
        "minLength": 1,
        "maxLength": 1024
      },
      "CustomArtifactsConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CustomArtifactConfiguration"
        },
        "maxItems": 50
      },
      "CustomArtifactConfiguration": {
        "type": "object",
        "required": [
          "ArtifactType"
        ],
        "properties": {
          "ArtifactType": {
            "allOf": [
              {
                "$ref": "#/$defs/ArtifactType"
              },
              {
                "description": " <code>UDF</code> stands for user-defined functions. This type of artifact must be in an S3 bucket. A <code>DEPENDENCY_JAR</code> can be in either Maven or an S3 bucket."
              }
            ]
          },
          "S3ContentLocation": {
            "$ref": "#/$defs/S3ContentLocation"
          },
          "MavenReference": {
            "allOf": [
              {
                "$ref": "#/$defs/MavenReference"
              },
              {
                "description": "The parameters required to fully specify a Maven reference."
              }
            ]
          }
        },
        "description": "Specifies dependency JARs, as well as JAR files that contain user-defined functions (UDF)."
      },
      "ArtifactType": {
        "type": "string",
        "enum": [
          "UDF",
          "DEPENDENCY_JAR"
        ]
      },
      "MavenReference": {
        "type": "object",
        "required": [
          "GroupId",
          "ArtifactId",
          "Version"
        ],
        "properties": {
          "GroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/MavenGroupId"
              },
              {
                "description": "The group ID of the Maven reference."
              }
            ]
          },
          "ArtifactId": {
            "allOf": [
              {
                "$ref": "#/$defs/MavenArtifactId"
              },
              {
                "description": "The artifact ID of the Maven reference."
              }
            ]
          },
          "Version": {
            "allOf": [
              {
                "$ref": "#/$defs/MavenVersion"
              },
              {
                "description": "The version of the Maven reference."
              }
            ]
          }
        },
        "description": "The information required to specify a Maven reference. You can use Maven references to specify dependency JAR files."
      },
      "MavenGroupId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "MavenArtifactId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "MavenVersion": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "CloudWatchLoggingOptions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CloudWatchLoggingOption"
        }
      },
      "CloudWatchLoggingOption": {
        "type": "object",
        "required": [
          "LogStreamARN"
        ],
        "properties": {
          "LogStreamARN": {
            "allOf": [
              {
                "$ref": "#/$defs/LogStreamARN"
              },
              {
                "description": "The ARN of the CloudWatch log to receive application messages."
              }
            ]
          }
        },
        "description": "Provides a description of Amazon CloudWatch logging options, including the log stream Amazon Resource Name (ARN). "
      },
      "LogStreamARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 1,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key of the key-value tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of the key-value tag. The value is optional."
              }
            ]
          }
        },
        "description": "A key-value pair (the value is optional) that you can define and assign to Amazon resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see <a href=\"https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html\">Using Tagging</a>."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "ApplicationMode": {
        "type": "string",
        "enum": [
          "STREAMING",
          "INTERACTIVE"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://kinesisanalytics.us-east-1.amazonaws.com/#X-Amz-Target=KinesisAnalytics_20180523.CreateApplication"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ApplicationDetail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
