{
  "name": "AddApplicationReferenceDataSource",
  "description": "<p>Adds a reference data source to an existing SQL-based Kinesis Data Analytics application.</p> <p>Kinesis Data Analytics reads reference data (that is, an Amazon S3 object) and creates an in-application table within your application. In the request, you provide the source (S3 bucket name and object key name), name of the in-application table to create, and the necessary mapping information that describes how data in an Amazon S3 object maps to columns in the resulting in-application table.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "KinesisAnalytics_20180523.AddApplicationReferenceDataSource"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/AddApplicationReferenceDataSourceRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "AddApplicationReferenceDataSourceRequest": {
        "type": "object",
        "required": [
          "ApplicationName",
          "CurrentApplicationVersionId",
          "ReferenceDataSource"
        ],
        "title": "AddApplicationReferenceDataSourceRequest",
        "properties": {
          "ApplicationName": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationName"
              },
              {
                "description": "The name of an existing application."
              }
            ]
          },
          "CurrentApplicationVersionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationVersionId"
              },
              {
                "description": "The version of the application for which you are adding the reference data source. You can use the <a>DescribeApplication</a> operation to get the current application version. If the version specified is not the current version, the <code>ConcurrentModificationException</code> is returned."
              }
            ]
          },
          "ReferenceDataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceDataSource"
              },
              {
                "description": "The reference data source can be an object in your Amazon S3 bucket. Kinesis Data Analytics reads the object and copies the data into the in-application table that is created. You provide an S3 bucket, object key name, and the resulting in-application table that is created. "
              }
            ]
          }
        }
      },
      "ApplicationName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 128
      },
      "ApplicationVersionId": {
        "type": "integer",
        "minimum": 1,
        "maximum": 999999999
      },
      "ReferenceDataSource": {
        "type": "object",
        "required": [
          "TableName",
          "ReferenceSchema"
        ],
        "properties": {
          "TableName": {
            "allOf": [
              {
                "$ref": "#/$defs/InAppTableName"
              },
              {
                "description": "The name of the in-application table to create."
              }
            ]
          },
          "S3ReferenceDataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ReferenceDataSource"
              },
              {
                "description": "Identifies the S3 bucket and object that contains the reference data. A Kinesis Data Analytics application loads reference data only once. If the data changes, you call the <a>UpdateApplication</a> operation to trigger reloading of data into your application. "
              }
            ]
          },
          "ReferenceSchema": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceSchema"
              },
              {
                "description": "Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes the reference data source by providing the source information (Amazon S3 bucket name and object key name), the resulting in-application table name that is created, and the necessary schema to map the data elements in the Amazon S3 object to the in-application table."
      },
      "InAppTableName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32
      },
      "S3ReferenceDataSource": {
        "type": "object",
        "properties": {
          "BucketARN": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the S3 bucket."
              }
            ]
          },
          "FileKey": {
            "allOf": [
              {
                "$ref": "#/$defs/FileKey"
              },
              {
                "description": "The object key name containing the reference data."
              }
            ]
          }
        },
        "description": "<p>For a SQL-based Kinesis Data Analytics application, identifies the Amazon S3 bucket and object that contains the reference data.</p> <p>A Kinesis Data Analytics application loads reference data only once. If the data changes, you call the <a>UpdateApplication</a> operation to trigger reloading of data into your application. </p>"
      },
      "BucketARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "FileKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "SourceSchema": {
        "type": "object",
        "required": [
          "RecordFormat",
          "RecordColumns"
        ],
        "properties": {
          "RecordFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordFormat"
              },
              {
                "description": "Specifies the format of the records on the streaming source."
              }
            ]
          },
          "RecordEncoding": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordEncoding"
              },
              {
                "description": "Specifies the encoding of the records in the streaming source. For example, UTF-8."
              }
            ]
          },
          "RecordColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumns"
              },
              {
                "description": "A list of <code>RecordColumn</code> objects. "
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. "
      },
      "RecordFormat": {
        "type": "object",
        "required": [
          "RecordFormatType"
        ],
        "properties": {
          "RecordFormatType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordFormatType"
              },
              {
                "description": "The type of record format."
              }
            ]
          },
          "MappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/MappingParameters"
              },
              {
                "description": "When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source."
              }
            ]
          }
        },
        "description": " For a SQL-based Kinesis Data Analytics application, describes the record format and relevant mapping information that should be applied to schematize the records on the stream. "
      },
      "RecordFormatType": {
        "type": "string",
        "enum": [
          "JSON",
          "CSV"
        ]
      },
      "MappingParameters": {
        "type": "object",
        "properties": {
          "JSONMappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/JSONMappingParameters"
              },
              {
                "description": "Provides additional mapping information when JSON is the record format on the streaming source."
              }
            ]
          },
          "CSVMappingParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/CSVMappingParameters"
              },
              {
                "description": "Provides additional mapping information when the record format uses delimiters (for example, CSV)."
              }
            ]
          }
        },
        "description": "When you configure a SQL-based Kinesis Data Analytics application's input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source."
      },
      "JSONMappingParameters": {
        "type": "object",
        "required": [
          "RecordRowPath"
        ],
        "properties": {
          "RecordRowPath": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordRowPath"
              },
              {
                "description": "The path to the top-level parent that contains the records."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, provides additional mapping information when JSON is the record format on the streaming source."
      },
      "RecordRowPath": {
        "type": "string",
        "pattern": "^(?=^\\$)(?=^\\S+$).*$",
        "minLength": 1,
        "maxLength": 65535
      },
      "CSVMappingParameters": {
        "type": "object",
        "required": [
          "RecordRowDelimiter",
          "RecordColumnDelimiter"
        ],
        "properties": {
          "RecordRowDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordRowDelimiter"
              },
              {
                "description": "The row delimiter. For example, in a CSV format, <i>'\\n'</i> is the typical row delimiter."
              }
            ]
          },
          "RecordColumnDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnDelimiter"
              },
              {
                "description": "The column delimiter. For example, in a CSV format, a comma (\",\") is the typical column delimiter."
              }
            ]
          }
        },
        "description": "<p>For a SQL-based Kinesis Data Analytics application, provides additional mapping information when the record format uses delimiters, such as CSV. For example, the following sample records use CSV format, where the records use the <i>'\\n'</i> as the row delimiter and a comma (\",\") as the column delimiter: </p> <p> <code>\"name1\", \"address1\"</code> </p> <p> <code>\"name2\", \"address2\"</code> </p>"
      },
      "RecordRowDelimiter": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "RecordColumnDelimiter": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "RecordEncoding": {
        "type": "string",
        "pattern": "UTF-8",
        "minLength": 5,
        "maxLength": 5
      },
      "RecordColumns": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RecordColumn"
        },
        "minItems": 1,
        "maxItems": 1000
      },
      "RecordColumn": {
        "type": "object",
        "required": [
          "Name",
          "SqlType"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnName"
              },
              {
                "description": "The name of the column that is created in the in-application input stream or reference table."
              }
            ]
          },
          "Mapping": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnMapping"
              },
              {
                "description": "A reference to the data element in the streaming input or the reference data source."
              }
            ]
          },
          "SqlType": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordColumnSqlType"
              },
              {
                "description": "The type of column created in the in-application input stream or reference table."
              }
            ]
          }
        },
        "description": "<p>For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.</p> <p>Also used to describe the format of the reference data source.</p>"
      },
      "RecordColumnName": {
        "type": "string",
        "pattern": "[^-\\s<>&]*",
        "minLength": 1,
        "maxLength": 256
      },
      "RecordColumnMapping": {
        "type": "string",
        "minLength": 0,
        "maxLength": 65535
      },
      "RecordColumnSqlType": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://kinesisanalytics.us-east-1.amazonaws.com/#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationReferenceDataSource"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ApplicationARN**",
            "**ApplicationVersionId**",
            "**ReferenceDataSourceDescriptions**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
