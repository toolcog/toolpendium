{
  "name": "DiscoverInputSchema",
  "description": "<p>Infers a schema for a SQL-based Kinesis Data Analytics application by evaluating sample records on the specified streaming source (Kinesis data stream or Kinesis Data Firehose delivery stream) or Amazon S3 object. In the response, the operation returns the inferred schema and also the sample records that the operation used to infer the schema.</p> <p> You can use the inferred schema when configuring a streaming source for your application. When you create an application using the Kinesis Data Analytics console, the console uses this operation to infer a schema and show it in the console user interface. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "KinesisAnalytics_20180523.DiscoverInputSchema"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DiscoverInputSchemaRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DiscoverInputSchemaRequest": {
        "type": "object",
        "required": [
          "ServiceExecutionRole"
        ],
        "title": "DiscoverInputSchemaRequest",
        "properties": {
          "ResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the streaming source."
              }
            ]
          },
          "ServiceExecutionRole": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleARN"
              },
              {
                "description": "The ARN of the role that is used to access the streaming source."
              }
            ]
          },
          "InputStartingPositionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/InputStartingPositionConfiguration"
              },
              {
                "description": "The point at which you want Kinesis Data Analytics to start reading records from the specified streaming source discovery purposes."
              }
            ]
          },
          "S3Configuration": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Configuration"
              },
              {
                "description": "Specify this parameter to discover a schema from data in an Amazon S3 object."
              }
            ]
          },
          "InputProcessingConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/InputProcessingConfiguration"
              },
              {
                "description": "The <a>InputProcessingConfiguration</a> to use to preprocess the records before discovering the schema of the records."
              }
            ]
          }
        }
      },
      "ResourceARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "RoleARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "InputStartingPositionConfiguration": {
        "type": "object",
        "properties": {
          "InputStartingPosition": {
            "allOf": [
              {
                "$ref": "#/$defs/InputStartingPosition"
              },
              {
                "description": "<p>The starting position on the stream.</p> <ul> <li> <p> <code>NOW</code> - Start reading just after the most recent record in the stream, and start at the request timestamp that the customer issued.</p> </li> <li> <p> <code>TRIM_HORIZON</code> - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>LAST_STOPPED_POINT</code> - Resume reading from where the application last stopped reading.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Describes the point at which the application reads from the streaming source."
      },
      "InputStartingPosition": {
        "type": "string",
        "enum": [
          "NOW",
          "TRIM_HORIZON",
          "LAST_STOPPED_POINT"
        ]
      },
      "S3Configuration": {
        "type": "object",
        "required": [
          "BucketARN",
          "FileKey"
        ],
        "properties": {
          "BucketARN": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketARN"
              },
              {
                "description": "The ARN of the S3 bucket that contains the data."
              }
            ]
          },
          "FileKey": {
            "allOf": [
              {
                "$ref": "#/$defs/FileKey"
              },
              {
                "description": "The name of the object that contains the data."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, provides a description of an Amazon S3 data source, including the Amazon Resource Name (ARN) of the S3 bucket and the name of the Amazon S3 object that contains the data."
      },
      "BucketARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "FileKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "InputProcessingConfiguration": {
        "type": "object",
        "required": [
          "InputLambdaProcessor"
        ],
        "properties": {
          "InputLambdaProcessor": {
            "allOf": [
              {
                "$ref": "#/$defs/InputLambdaProcessor"
              },
              {
                "description": "The <a>InputLambdaProcessor</a> that is used to preprocess the records in the stream before being processed by your application code."
              }
            ]
          }
        },
        "description": "For a SQL-based Kinesis Data Analytics application, describes a processor that is used to preprocess the records in the stream before being processed by your application code. Currently, the only input processor available is <a href=\"https://docs.aws.amazon.com/lambda/\">Amazon Lambda</a>."
      },
      "InputLambdaProcessor": {
        "type": "object",
        "required": [
          "ResourceARN"
        ],
        "properties": {
          "ResourceARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceARN"
              },
              {
                "description": "<p>The ARN of the Amazon Lambda function that operates on records in the stream.</p> <note> <p>To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda\">Example ARNs: Amazon Lambda</a> </p> </note>"
              }
            ]
          }
        },
        "description": "An object that contains the Amazon Resource Name (ARN) of the Amazon Lambda function that is used to preprocess records in the stream in a SQL-based Kinesis Data Analytics application. "
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://kinesisanalytics.us-east-1.amazonaws.com/#X-Amz-Target=KinesisAnalytics_20180523.DiscoverInputSchema"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**InputSchema**",
            "**ParsedInputRecords**",
            "**ProcessedInputRecords**",
            "**RawInputRecords**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
