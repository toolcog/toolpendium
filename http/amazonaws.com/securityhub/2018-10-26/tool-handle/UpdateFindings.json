{
  "name": "UpdateFindings",
  "description": "<p> <code>UpdateFindings</code> is deprecated. Instead of <code>UpdateFindings</code>, use <code>BatchUpdateFindings</code>.</p> <p>Updates the <code>Note</code> and <code>RecordState</code> of the Security Hub-aggregated findings that the filter attributes specify. Any member account that can view the finding also sees the update to the finding.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Filters"
        ],
        "properties": {
          "Filters": {
            "description": "<p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>",
            "type": "object",
            "properties": {
              "ProductArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub."
                  }
                ]
              },
              "AwsAccountId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The Amazon Web Services account ID that a finding is generated in."
                  }
                ]
              },
              "Id": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The security findings provider-specific identifier for a finding."
                  }
                ]
              },
              "GeneratorId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc."
                  }
                ]
              },
              "Region": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The Region from which the finding was generated."
                  }
                ]
              },
              "Type": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "A finding type in the format of <code>namespace/category/classifier</code> that classifies a finding."
                  }
                ]
              },
              "FirstObservedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "<p>An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href=\"https://www.rfc-editor.org/rfc/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>"
                  }
                ]
              },
              "LastObservedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "<p>An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href=\"https://www.rfc-editor.org/rfc/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>"
                  }
                ]
              },
              "CreatedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "<p>An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href=\"https://www.rfc-editor.org/rfc/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>"
                  }
                ]
              },
              "UpdatedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "<p>An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record. </p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href=\"https://www.rfc-editor.org/rfc/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>"
                  }
                ]
              },
              "SeverityProduct": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "deprecated": true,
                    "description": "The native severity as defined by the security findings provider's solution that generated the finding.This filter is deprecated. Instead, use FindingProviderSeverityOriginal."
                  }
                ]
              },
              "SeverityNormalized": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "deprecated": true,
                    "description": "The normalized severity of a finding.This filter is deprecated. Instead, use SeverityLabel or FindingProviderFieldsSeverityLabel."
                  }
                ]
              },
              "SeverityLabel": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The label of a finding's severity."
                  }
                ]
              },
              "Confidence": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "description": "<p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>"
                  }
                ]
              },
              "Criticality": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "description": "<p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>"
                  }
                ]
              },
              "Title": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "A finding's title."
                  }
                ]
              },
              "Description": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "A finding's description."
                  }
                ]
              },
              "RecommendationText": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The recommendation of what to do about the issue described in a finding."
                  }
                ]
              },
              "SourceUrl": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "A URL that links to a page about the current finding in the security findings provider's solution."
                  }
                ]
              },
              "ProductFields": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MapFilterList"
                  },
                  {
                    "description": "A data type where security findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format."
                  }
                ]
              },
              "ProductName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The name of the solution (product) that generates findings."
                  }
                ]
              },
              "CompanyName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The name of the findings provider (company) that owns the solution (product) that generates findings."
                  }
                ]
              },
              "UserDefinedFields": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MapFilterList"
                  },
                  {
                    "description": "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
                  }
                ]
              },
              "MalwareName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The name of the malware that was observed."
                  }
                ]
              },
              "MalwareType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The type of the malware that was observed."
                  }
                ]
              },
              "MalwarePath": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The filesystem path of the malware that was observed."
                  }
                ]
              },
              "MalwareState": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The state of the malware that was observed."
                  }
                ]
              },
              "NetworkDirection": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Indicates the direction of network traffic associated with a finding."
                  }
                ]
              },
              "NetworkProtocol": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The protocol of network-related information about a finding."
                  }
                ]
              },
              "NetworkSourceIpV4": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IpFilterList"
                  },
                  {
                    "description": "The source IPv4 address of network-related information about a finding."
                  }
                ]
              },
              "NetworkSourceIpV6": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IpFilterList"
                  },
                  {
                    "description": "The source IPv6 address of network-related information about a finding."
                  }
                ]
              },
              "NetworkSourcePort": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "description": "The source port of network-related information about a finding."
                  }
                ]
              },
              "NetworkSourceDomain": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The source domain of network-related information about a finding."
                  }
                ]
              },
              "NetworkSourceMac": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The source media access control (MAC) address of network-related information about a finding."
                  }
                ]
              },
              "NetworkDestinationIpV4": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IpFilterList"
                  },
                  {
                    "description": "The destination IPv4 address of network-related information about a finding."
                  }
                ]
              },
              "NetworkDestinationIpV6": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IpFilterList"
                  },
                  {
                    "description": "The destination IPv6 address of network-related information about a finding."
                  }
                ]
              },
              "NetworkDestinationPort": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "description": "The destination port of network-related information about a finding."
                  }
                ]
              },
              "NetworkDestinationDomain": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The destination domain of network-related information about a finding."
                  }
                ]
              },
              "ProcessName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The name of the process."
                  }
                ]
              },
              "ProcessPath": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The path to the process executable."
                  }
                ]
              },
              "ProcessPid": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "description": "The process ID."
                  }
                ]
              },
              "ProcessParentPid": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "description": "The parent process ID. This field accepts positive integers between <code>O</code> and <code>2147483647</code>."
                  }
                ]
              },
              "ProcessLaunchedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "<p>A timestamp that identifies when the process was launched.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href=\"https://www.rfc-editor.org/rfc/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>"
                  }
                ]
              },
              "ProcessTerminatedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "<p>A timestamp that identifies when the process was terminated.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href=\"https://www.rfc-editor.org/rfc/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>"
                  }
                ]
              },
              "ThreatIntelIndicatorType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The type of a threat intelligence indicator."
                  }
                ]
              },
              "ThreatIntelIndicatorValue": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The value of a threat intelligence indicator."
                  }
                ]
              },
              "ThreatIntelIndicatorCategory": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The category of a threat intelligence indicator."
                  }
                ]
              },
              "ThreatIntelIndicatorLastObservedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "A timestamp that identifies the last observation of a threat intelligence indicator."
                  }
                ]
              },
              "ThreatIntelIndicatorSource": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The source of the threat intelligence."
                  }
                ]
              },
              "ThreatIntelIndicatorSourceUrl": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The URL for more details from the source of the threat intelligence."
                  }
                ]
              },
              "ResourceType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Specifies the type of the resource that details are provided for."
                  }
                ]
              },
              "ResourceId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The canonical identifier for the given resource type."
                  }
                ]
              },
              "ResourcePartition": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The canonical Amazon Web Services partition name that the Region is assigned to."
                  }
                ]
              },
              "ResourceRegion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The canonical Amazon Web Services external Region name where this resource is located."
                  }
                ]
              },
              "ResourceTags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MapFilterList"
                  },
                  {
                    "description": "A list of Amazon Web Services tags associated with a resource at the time the finding was processed."
                  }
                ]
              },
              "ResourceAwsEc2InstanceType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The instance type of the instance."
                  }
                ]
              },
              "ResourceAwsEc2InstanceImageId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The Amazon Machine Image (AMI) ID of the instance."
                  }
                ]
              },
              "ResourceAwsEc2InstanceIpV4Addresses": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IpFilterList"
                  },
                  {
                    "description": "The IPv4 addresses associated with the instance."
                  }
                ]
              },
              "ResourceAwsEc2InstanceIpV6Addresses": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IpFilterList"
                  },
                  {
                    "description": "The IPv6 addresses associated with the instance."
                  }
                ]
              },
              "ResourceAwsEc2InstanceKeyName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The key name associated with the instance."
                  }
                ]
              },
              "ResourceAwsEc2InstanceIamInstanceProfileArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The IAM profile ARN of the instance."
                  }
                ]
              },
              "ResourceAwsEc2InstanceVpcId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The identifier of the VPC that the instance was launched in."
                  }
                ]
              },
              "ResourceAwsEc2InstanceSubnetId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The identifier of the subnet that the instance was launched in."
                  }
                ]
              },
              "ResourceAwsEc2InstanceLaunchedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "The date and time the instance was launched."
                  }
                ]
              },
              "ResourceAwsS3BucketOwnerId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The canonical user ID of the owner of the S3 bucket."
                  }
                ]
              },
              "ResourceAwsS3BucketOwnerName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The display name of the owner of the S3 bucket."
                  }
                ]
              },
              "ResourceAwsIamAccessKeyUserName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "deprecated": true,
                    "description": "The user associated with the IAM access key related to a finding.This filter is deprecated. Instead, use ResourceAwsIamAccessKeyPrincipalName."
                  }
                ]
              },
              "ResourceAwsIamAccessKeyPrincipalName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The name of the principal that is associated with an IAM access key."
                  }
                ]
              },
              "ResourceAwsIamAccessKeyStatus": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The status of the IAM access key related to a finding."
                  }
                ]
              },
              "ResourceAwsIamAccessKeyCreatedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "The creation date/time of the IAM access key related to a finding."
                  }
                ]
              },
              "ResourceAwsIamUserUserName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The name of an IAM user."
                  }
                ]
              },
              "ResourceContainerName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The name of the container related to a finding."
                  }
                ]
              },
              "ResourceContainerImageId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The identifier of the image related to a finding."
                  }
                ]
              },
              "ResourceContainerImageName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The name of the image related to a finding."
                  }
                ]
              },
              "ResourceContainerLaunchedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "<p>A timestamp that identifies when the container was started.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href=\"https://www.rfc-editor.org/rfc/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>"
                  }
                ]
              },
              "ResourceDetailsOther": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MapFilterList"
                  },
                  {
                    "description": "The details of a resource that doesn't have a specific subfield for the resource type defined."
                  }
                ]
              },
              "ComplianceStatus": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS Amazon Web Services Foundations. Contains security standard-related finding details."
                  }
                ]
              },
              "VerificationState": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The veracity of a finding."
                  }
                ]
              },
              "WorkflowState": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "<p>The workflow state of a finding.</p> <p>Note that this field is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>"
                  }
                ]
              },
              "WorkflowStatus": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "<p>The status of the investigation into a finding. Allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> <p>Security Hub also resets the workflow status from <code>NOTIFIED</code> or <code>RESOLVED</code> to <code>NEW</code> in the following cases:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to either <code>WARNING</code>, <code>FAILED</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>NOTIFIED</code> - Indicates that the resource owner has been notified about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> <p>If one of the following occurs, the workflow status is changed automatically from <code>NOTIFIED</code> to <code>NEW</code>:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>SUPPRESSED</code> - Indicates that you reviewed the finding and do not believe that any action is needed.</p> <p>The workflow status of a <code>SUPPRESSED</code> finding does not change if <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> <p>The finding remains <code>RESOLVED</code> unless one of the following occurs:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> <p>In those cases, the workflow status is automatically reset to <code>NEW</code>.</p> <p>For findings from controls, if <code>Compliance.Status</code> is <code>PASSED</code>, then Security Hub automatically sets the workflow status to <code>RESOLVED</code>.</p> </li> </ul>"
                  }
                ]
              },
              "RecordState": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The updated record state for the finding."
                  }
                ]
              },
              "RelatedFindingsProductArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The ARN of the solution that generated a related finding."
                  }
                ]
              },
              "RelatedFindingsId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The solution-generated identifier for a related finding."
                  }
                ]
              },
              "NoteText": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The text of a note."
                  }
                ]
              },
              "NoteUpdatedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "The timestamp of when the note was updated."
                  }
                ]
              },
              "NoteUpdatedBy": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The principal that created a note."
                  }
                ]
              },
              "Keyword": {
                "allOf": [
                  {
                    "$ref": "#/$defs/KeywordFilterList"
                  },
                  {
                    "deprecated": true,
                    "description": "A keyword for a finding.The Keyword property is deprecated."
                  }
                ]
              },
              "FindingProviderFieldsConfidence": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "description": "<p>The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>"
                  }
                ]
              },
              "FindingProviderFieldsCriticality": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "description": "<p>The finding provider value for the level of importance assigned to the resources associated with the findings.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. </p>"
                  }
                ]
              },
              "FindingProviderFieldsRelatedFindingsId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The finding identifier of a related finding that is identified by the finding provider."
                  }
                ]
              },
              "FindingProviderFieldsRelatedFindingsProductArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The ARN of the solution that generated a related finding that is identified by the finding provider."
                  }
                ]
              },
              "FindingProviderFieldsSeverityLabel": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The finding provider value for the severity label."
                  }
                ]
              },
              "FindingProviderFieldsSeverityOriginal": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The finding provider's original value for the severity."
                  }
                ]
              },
              "FindingProviderFieldsTypes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "<p>One or more finding types that the finding provider assigned to the finding. Uses the format of <code>namespace/category/classifier</code> that classify a finding.</p> <p>Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications</p>"
                  }
                ]
              },
              "Sample": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BooleanFilterList"
                  },
                  {
                    "description": "Indicates whether or not sample findings are included in the filter results."
                  }
                ]
              },
              "ComplianceSecurityControlId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": " The unique identifier of a control across standards. Values for this field typically consist of an Amazon Web Service and a number, such as APIGateway.5. "
                  }
                ]
              },
              "ComplianceAssociatedStandardsId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": " The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the <a href=\"https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html\">DescribeStandards</a> API response. "
                  }
                ]
              }
            }
          },
          "Note": {
            "description": "The updated note.",
            "type": "object",
            "properties": {
              "Text": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NonEmptyString"
                  },
                  {
                    "description": "The updated note text."
                  }
                ]
              },
              "UpdatedBy": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NonEmptyString"
                  },
                  {
                    "description": "The principal that updated the note."
                  }
                ]
              }
            }
          },
          "RecordState": {
            "description": "The updated record state for the finding.",
            "type": "string",
            "enum": [
              "ACTIVE",
              "ARCHIVED"
            ]
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "StringFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StringFilter"
        }
      },
      "StringFilter": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The string filter value. Filter values are case sensitive. For example, the product name for control-based findings is <code>Security Hub</code>. If you provide <code>security hub</code> as the filter value, there's no match."
              }
            ]
          },
          "Comparison": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterComparison"
              },
              {
                "description": "<p>The condition to apply to a string value when filtering Security Hub findings.</p> <p>To search for values that have the filter value, use one of the following comparison operators:</p> <ul> <li> <p>To search for values that include the filter value, use <code>CONTAINS</code>. For example, the filter <code>Title CONTAINS CloudFront</code> matches findings that have a <code>Title</code> that includes the string CloudFront.</p> </li> <li> <p>To search for values that exactly match the filter value, use <code>EQUALS</code>. For example, the filter <code>AwsAccountId EQUALS 123456789012</code> only matches findings that have an account ID of <code>123456789012</code>.</p> </li> <li> <p>To search for values that start with the filter value, use <code>PREFIX</code>. For example, the filter <code>ResourceRegion PREFIX us</code> matches findings that have a <code>ResourceRegion</code> that starts with <code>us</code>. A <code>ResourceRegion</code> that starts with a different value, such as <code>af</code>, <code>ap</code>, or <code>ca</code>, doesn't match.</p> </li> </ul> <p> <code>CONTAINS</code>, <code>EQUALS</code>, and <code>PREFIX</code> filters on the same field are joined by <code>OR</code>. A finding matches if it matches any one of those filters. For example, the filters <code>Title CONTAINS CloudFront OR Title CONTAINS CloudWatch</code> match a finding that includes either <code>CloudFront</code>, <code>CloudWatch</code>, or both strings in the title.</p> <p>To search for values that don’t have the filter value, use one of the following comparison operators:</p> <ul> <li> <p>To search for values that exclude the filter value, use <code>NOT_CONTAINS</code>. For example, the filter <code>Title NOT_CONTAINS CloudFront</code> matches findings that have a <code>Title</code> that excludes the string CloudFront.</p> </li> <li> <p>To search for values other than the filter value, use <code>NOT_EQUALS</code>. For example, the filter <code>AwsAccountId NOT_EQUALS 123456789012</code> only matches findings that have an account ID other than <code>123456789012</code>.</p> </li> <li> <p>To search for values that don't start with the filter value, use <code>PREFIX_NOT_EQUALS</code>. For example, the filter <code>ResourceRegion PREFIX_NOT_EQUALS us</code> matches findings with a <code>ResourceRegion</code> that starts with a value other than <code>us</code>.</p> </li> </ul> <p> <code>NOT_CONTAINS</code>, <code>NOT_EQUALS</code>, and <code>PREFIX_NOT_EQUALS</code> filters on the same field are joined by <code>AND</code>. A finding matches only if it matches all of those filters. For example, the filters <code>Title NOT_CONTAINS CloudFront AND Title NOT_CONTAINS CloudWatch</code> match a finding that excludes both <code>CloudFront</code> and <code>CloudWatch</code> in the title.</p> <p>You can’t have both a <code>CONTAINS</code> filter and a <code>NOT_CONTAINS</code> filter on the same field. Similarly, you can't provide both an <code>EQUALS</code> filter and a <code>NOT_EQUALS</code> or <code>PREFIX_NOT_EQUALS</code> filter on the same field. Combining filters in this way returns an error. <code>CONTAINS</code> filters can only be used with other <code>CONTAINS</code> filters. <code>NOT_CONTAINS</code> filters can only be used with other <code>NOT_CONTAINS</code> filters. </p> <p>You can combine <code>PREFIX</code> filters with <code>NOT_EQUALS</code> or <code>PREFIX_NOT_EQUALS</code> filters for the same field. Security Hub first processes the <code>PREFIX</code> filters, and then the <code>NOT_EQUALS</code> or <code>PREFIX_NOT_EQUALS</code> filters.</p> <p>For example, for the following filters, Security Hub first identifies findings that have resource types that start with either <code>AwsIam</code> or <code>AwsEc2</code>. It then excludes findings that have a resource type of <code>AwsIamPolicy</code> and findings that have a resource type of <code>AwsEc2NetworkInterface</code>.</p> <ul> <li> <p> <code>ResourceType PREFIX AwsIam</code> </p> </li> <li> <p> <code>ResourceType PREFIX AwsEc2</code> </p> </li> <li> <p> <code>ResourceType NOT_EQUALS AwsIamPolicy</code> </p> </li> <li> <p> <code>ResourceType NOT_EQUALS AwsEc2NetworkInterface</code> </p> </li> </ul> <p> <code>CONTAINS</code> and <code>NOT_CONTAINS</code> operators can be used only with automation rules. For more information, see <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html\">Automation rules</a> in the <i>Security Hub User Guide</i>.</p>"
              }
            ]
          }
        },
        "description": "A string filter for filtering Security Hub findings."
      },
      "NonEmptyString": {
        "type": "string",
        "pattern": ".*\\S.*"
      },
      "StringFilterComparison": {
        "type": "string",
        "enum": [
          "EQUALS",
          "PREFIX",
          "NOT_EQUALS",
          "PREFIX_NOT_EQUALS",
          "CONTAINS",
          "NOT_CONTAINS"
        ]
      },
      "DateFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DateFilter"
        }
      },
      "DateFilter": {
        "type": "object",
        "properties": {
          "Start": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "<p>A timestamp that provides the start date for the date filter.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href=\"https://www.rfc-editor.org/rfc/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>"
              }
            ]
          },
          "End": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "<p>A timestamp that provides the end date for the date filter.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href=\"https://www.rfc-editor.org/rfc/rfc3339#section-5.6\">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>"
              }
            ]
          },
          "DateRange": {
            "allOf": [
              {
                "$ref": "#/$defs/DateRange"
              },
              {
                "description": "A date range for the date filter."
              }
            ]
          }
        },
        "description": "A date filter for querying findings."
      },
      "DateRange": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "A date range value for the date filter."
              }
            ]
          },
          "Unit": {
            "allOf": [
              {
                "$ref": "#/$defs/DateRangeUnit"
              },
              {
                "description": "A date range unit for the date filter."
              }
            ]
          }
        },
        "description": "A date range for the date filter."
      },
      "Integer": {
        "type": "integer"
      },
      "DateRangeUnit": {
        "type": "string",
        "enum": [
          "DAYS"
        ]
      },
      "NumberFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NumberFilter"
        }
      },
      "NumberFilter": {
        "type": "object",
        "properties": {
          "Gte": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The greater-than-equal condition to be applied to a single field when querying for findings. "
              }
            ]
          },
          "Lte": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The less-than-equal condition to be applied to a single field when querying for findings. "
              }
            ]
          },
          "Eq": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The equal-to condition to be applied to a single field when querying for findings."
              }
            ]
          }
        },
        "description": "A number filter for querying findings."
      },
      "Double": {
        "type": "number",
        "format": "double"
      },
      "MapFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MapFilter"
        }
      },
      "MapFilter": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The key of the map filter. For example, for <code>ResourceTags</code>, <code>Key</code> identifies the name of the tag. For <code>UserDefinedFields</code>, <code>Key</code> is the name of the field."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The value for the key in the map filter. Filter values are case sensitive. For example, one of the values for a tag called <code>Department</code> might be <code>Security</code>. If you provide <code>security</code> as the filter value, then there's no match."
              }
            ]
          },
          "Comparison": {
            "allOf": [
              {
                "$ref": "#/$defs/MapFilterComparison"
              },
              {
                "description": "<p>The condition to apply to the key value when filtering Security Hub findings with a map filter.</p> <p>To search for values that have the filter value, use one of the following comparison operators:</p> <ul> <li> <p>To search for values that include the filter value, use <code>CONTAINS</code>. For example, for the <code>ResourceTags</code> field, the filter <code>Department CONTAINS Security</code> matches findings that include the value <code>Security</code> for the <code>Department</code> tag. In the same example, a finding with a value of <code>Security team</code> for the <code>Department</code> tag is a match.</p> </li> <li> <p>To search for values that exactly match the filter value, use <code>EQUALS</code>. For example, for the <code>ResourceTags</code> field, the filter <code>Department EQUALS Security</code> matches findings that have the value <code>Security</code> for the <code>Department</code> tag.</p> </li> </ul> <p> <code>CONTAINS</code> and <code>EQUALS</code> filters on the same field are joined by <code>OR</code>. A finding matches if it matches any one of those filters. For example, the filters <code>Department CONTAINS Security OR Department CONTAINS Finance</code> match a finding that includes either <code>Security</code>, <code>Finance</code>, or both values.</p> <p>To search for values that don't have the filter value, use one of the following comparison operators:</p> <ul> <li> <p>To search for values that exclude the filter value, use <code>NOT_CONTAINS</code>. For example, for the <code>ResourceTags</code> field, the filter <code>Department NOT_CONTAINS Finance</code> matches findings that exclude the value <code>Finance</code> for the <code>Department</code> tag.</p> </li> <li> <p>To search for values other than the filter value, use <code>NOT_EQUALS</code>. For example, for the <code>ResourceTags</code> field, the filter <code>Department NOT_EQUALS Finance</code> matches findings that don’t have the value <code>Finance</code> for the <code>Department</code> tag.</p> </li> </ul> <p> <code>NOT_CONTAINS</code> and <code>NOT_EQUALS</code> filters on the same field are joined by <code>AND</code>. A finding matches only if it matches all of those filters. For example, the filters <code>Department NOT_CONTAINS Security AND Department NOT_CONTAINS Finance</code> match a finding that excludes both the <code>Security</code> and <code>Finance</code> values.</p> <p> <code>CONTAINS</code> filters can only be used with other <code>CONTAINS</code> filters. <code>NOT_CONTAINS</code> filters can only be used with other <code>NOT_CONTAINS</code> filters.</p> <p>You can’t have both a <code>CONTAINS</code> filter and a <code>NOT_CONTAINS</code> filter on the same field. Similarly, you can’t have both an <code>EQUALS</code> filter and a <code>NOT_EQUALS</code> filter on the same field. Combining filters in this way returns an error. </p> <p> <code>CONTAINS</code> and <code>NOT_CONTAINS</code> operators can be used only with automation rules. For more information, see <a href=\"https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html\">Automation rules</a> in the <i>Security Hub User Guide</i>.</p>"
              }
            ]
          }
        },
        "description": "A map filter for filtering Security Hub findings. Each map filter provides the field to check for, the value to check for, and the comparison operator."
      },
      "MapFilterComparison": {
        "type": "string",
        "enum": [
          "EQUALS",
          "NOT_EQUALS",
          "CONTAINS",
          "NOT_CONTAINS"
        ]
      },
      "IpFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/IpFilter"
        }
      },
      "IpFilter": {
        "type": "object",
        "properties": {
          "Cidr": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "A finding's CIDR value."
              }
            ]
          }
        },
        "description": "The IP filter for querying findings."
      },
      "KeywordFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/KeywordFilter"
        }
      },
      "KeywordFilter": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "A value for the keyword."
              }
            ]
          }
        },
        "description": "A keyword filter for querying findings."
      },
      "BooleanFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/BooleanFilter"
        }
      },
      "BooleanFilter": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "The value of the boolean."
              }
            ]
          }
        },
        "description": "Boolean filter for querying findings."
      },
      "Boolean": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "http://securityhub.us-east-1.amazonaws.com/findings"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
