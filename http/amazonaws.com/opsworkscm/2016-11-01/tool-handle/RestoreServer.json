{
  "name": "RestoreServer",
  "description": "<p> Restores a backup to a server that is in a <code>CONNECTION_LOST</code>, <code>HEALTHY</code>, <code>RUNNING</code>, <code>UNHEALTHY</code>, or <code>TERMINATED</code> state. When you run RestoreServer, the server's EC2 instance is deleted, and a new EC2 instance is configured. RestoreServer maintains the existing server endpoint, so configuration management of the server's client devices (nodes) should continue to work. </p> <p>Restoring from a backup is performed by creating a new EC2 instance. If restoration is successful, and the server is in a <code>HEALTHY</code> state, AWS OpsWorks CM switches traffic over to the new instance. After restoration is finished, the old EC2 instance is maintained in a <code>Running</code> or <code>Stopped</code> state, but is eventually terminated.</p> <p> This operation is asynchronous. </p> <p> An <code>InvalidStateException</code> is thrown when the server is not in a valid state. A <code>ResourceNotFoundException</code> is thrown when the server does not exist. A <code>ValidationException</code> is raised when parameters of the request are not valid. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "OpsWorksCM_V2016_11_01.RestoreServer"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/RestoreServerRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "RestoreServerRequest": {
        "type": "object",
        "required": [
          "BackupId",
          "ServerName"
        ],
        "title": "RestoreServerRequest",
        "properties": {
          "BackupId": {
            "allOf": [
              {
                "$ref": "#/$defs/BackupId"
              },
              {
                "description": " The ID of the backup that you want to use to restore a server. "
              }
            ]
          },
          "ServerName": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerName"
              },
              {
                "description": " The name of the server that you want to restore. "
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": " The type of instance to restore. Valid values must be specified in the following format: <code>^([cm][34]|t2).*</code> For example, <code>m5.large</code>. Valid values are <code>m5.large</code>, <code>r5.xlarge</code>, and <code>r5.2xlarge</code>. If you do not specify this parameter, RestoreServer uses the instance type from the specified backup. "
              }
            ]
          },
          "KeyPair": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyPair"
              },
              {
                "description": " The name of the key pair to set on the new EC2 instance. This can be helpful if the administrator no longer has the SSH key. "
              }
            ]
          }
        }
      },
      "BackupId": {
        "type": "string",
        "pattern": "[a-zA-Z][a-zA-Z0-9\\-\\.\\:]*",
        "maxLength": 79
      },
      "ServerName": {
        "type": "string",
        "pattern": "[a-zA-Z][a-zA-Z0-9\\-]*",
        "minLength": 1,
        "maxLength": 40
      },
      "String": {
        "type": "string",
        "pattern": "\\(\\?s\\).*",
        "maxLength": 10000
      },
      "KeyPair": {
        "type": "string",
        "pattern": ".*",
        "maxLength": 10000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://opsworks-cm.us-east-1.amazonaws.com/#X-Amz-Target=OpsWorksCM_V2016_11_01.RestoreServer"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**Server**: Describes a configuration management server. ",
              {
                "$ul": [
                  "**AssociatePublicIpAddress**",
                  "**BackupRetentionCount**",
                  "**ServerName**",
                  "**CreatedAt**",
                  "**CloudFormationStackArn**",
                  "**CustomDomain**",
                  "**DisableAutomatedBackup**",
                  "**Endpoint**",
                  "**Engine**",
                  "**EngineModel**",
                  "**EngineAttributes**",
                  "**EngineVersion**",
                  "**InstanceProfileArn**",
                  "**InstanceType**",
                  "**KeyPair**",
                  "**MaintenanceStatus**",
                  "**PreferredMaintenanceWindow**",
                  "**PreferredBackupWindow**",
                  "**SecurityGroupIds**",
                  "**ServiceRoleArn**",
                  "**Status**",
                  "**StatusReason**",
                  "**SubnetIds**",
                  "**ServerArn**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
