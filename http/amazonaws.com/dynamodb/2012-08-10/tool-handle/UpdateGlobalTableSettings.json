{
  "name": "UpdateGlobalTableSettings",
  "description": "<p>Updates settings for a global table.</p> <important> <p>This operation only applies to <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html\">Version 2017.11.29 (Legacy)</a> of global tables. We recommend using <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html\">Version 2019.11.21 (Current)</a> when creating new global tables, as it provides greater flexibility, higher efficiency and consumes less write capacity than 2017.11.29 (Legacy). To determine which version you are using, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.DetermineVersion.html\">Determining the version</a>. To update existing global tables from version 2017.11.29 (Legacy) to version 2019.11.21 (Current), see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/V2globaltables_upgrade.html\"> Updating global tables</a>. </p> </important>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "DynamoDB_20120810.UpdateGlobalTableSettings"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateGlobalTableSettingsInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateGlobalTableSettingsInput": {
        "type": "object",
        "required": [
          "GlobalTableName"
        ],
        "title": "UpdateGlobalTableSettingsInput",
        "properties": {
          "GlobalTableName": {
            "allOf": [
              {
                "$ref": "#/$defs/TableName"
              },
              {
                "description": "The name of the global table"
              }
            ]
          },
          "GlobalTableBillingMode": {
            "allOf": [
              {
                "$ref": "#/$defs/BillingMode"
              },
              {
                "description": "<p>The billing mode of the global table. If <code>GlobalTableBillingMode</code> is not specified, the global table defaults to <code>PROVISIONED</code> capacity billing mode.</p> <ul> <li> <p> <code>PROVISIONED</code> - We recommend using <code>PROVISIONED</code> for predictable workloads. <code>PROVISIONED</code> sets the billing mode to <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual\">Provisioned Mode</a>.</p> </li> <li> <p> <code>PAY_PER_REQUEST</code> - We recommend using <code>PAY_PER_REQUEST</code> for unpredictable workloads. <code>PAY_PER_REQUEST</code> sets the billing mode to <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand\">On-Demand Mode</a>. </p> </li> </ul>"
              }
            ]
          },
          "GlobalTableProvisionedWriteCapacityUnits": {
            "allOf": [
              {
                "$ref": "#/$defs/PositiveLongObject"
              },
              {
                "description": "The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException.</code> "
              }
            ]
          },
          "GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoScalingSettingsUpdate"
              },
              {
                "description": "Auto scaling settings for managing provisioned write capacity for the global table."
              }
            ]
          },
          "GlobalTableGlobalSecondaryIndexSettingsUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/GlobalTableGlobalSecondaryIndexSettingsUpdateList"
              },
              {
                "description": "Represents the settings of a global secondary index for a global table that will be modified."
              }
            ]
          },
          "ReplicaSettingsUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ReplicaSettingsUpdateList"
              },
              {
                "description": "Represents the settings for a global table in a Region that will be modified."
              }
            ]
          }
        }
      },
      "TableName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 3,
        "maxLength": 255
      },
      "BillingMode": {
        "type": "string",
        "enum": [
          "PROVISIONED",
          "PAY_PER_REQUEST"
        ]
      },
      "PositiveLongObject": {
        "type": "integer",
        "minimum": 1
      },
      "AutoScalingSettingsUpdate": {
        "type": "object",
        "properties": {
          "MinimumUnits": {
            "allOf": [
              {
                "$ref": "#/$defs/PositiveLongObject"
              },
              {
                "description": "The minimum capacity units that a global table or global secondary index should be scaled down to."
              }
            ]
          },
          "MaximumUnits": {
            "allOf": [
              {
                "$ref": "#/$defs/PositiveLongObject"
              },
              {
                "description": "The maximum capacity units that a global table or global secondary index should be scaled up to."
              }
            ]
          },
          "AutoScalingDisabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Disabled auto scaling for this global table or global secondary index."
              }
            ]
          },
          "AutoScalingRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoScalingRoleArn"
              },
              {
                "description": "Role ARN used for configuring auto scaling policy."
              }
            ]
          },
          "ScalingPolicyUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoScalingPolicyUpdate"
              },
              {
                "description": "The scaling policy to apply for scaling target global table or global secondary index capacity units."
              }
            ]
          }
        },
        "description": "Represents the auto scaling settings to be modified for a global table or global secondary index."
      },
      "BooleanObject": {
        "type": "boolean"
      },
      "AutoScalingRoleArn": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1600,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "AutoScalingPolicyUpdate": {
        "type": "object",
        "required": [
          "TargetTrackingScalingPolicyConfiguration"
        ],
        "properties": {
          "PolicyName": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoScalingPolicyName"
              },
              {
                "description": "The name of the scaling policy."
              }
            ]
          },
          "TargetTrackingScalingPolicyConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoScalingTargetTrackingScalingPolicyConfigurationUpdate"
              },
              {
                "description": "Represents a target tracking scaling policy configuration."
              }
            ]
          }
        },
        "description": "Represents the auto scaling policy to be modified."
      },
      "AutoScalingPolicyName": {
        "type": "string",
        "pattern": "\\p{Print}+",
        "minLength": 1,
        "maxLength": 256
      },
      "AutoScalingTargetTrackingScalingPolicyConfigurationUpdate": {
        "type": "object",
        "required": [
          "TargetValue"
        ],
        "properties": {
          "DisableScaleIn": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Indicates whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is false."
              }
            ]
          },
          "ScaleInCooldown": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerObject"
              },
              {
                "description": "The amount of time, in seconds, after a scale in activity completes before another scale in activity can start. The cooldown period is used to block subsequent scale in requests until it has expired. You should scale in conservatively to protect your application's availability. However, if another alarm triggers a scale out policy during the cooldown period after a scale-in, application auto scaling scales out your scalable target immediately. "
              }
            ]
          },
          "ScaleOutCooldown": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerObject"
              },
              {
                "description": "The amount of time, in seconds, after a scale out activity completes before another scale out activity can start. While the cooldown period is in effect, the capacity that has been added by the previous scale out event that initiated the cooldown is calculated as part of the desired capacity for the next scale out. You should continuously (but not excessively) scale out."
              }
            ]
          },
          "TargetValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DoubleObject"
              },
              {
                "description": "The target value for the metric. The range is 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2)."
              }
            ]
          }
        },
        "description": "Represents the settings of a target tracking scaling policy that will be modified."
      },
      "IntegerObject": {
        "type": "integer"
      },
      "DoubleObject": {
        "type": "number",
        "format": "double"
      },
      "GlobalTableGlobalSecondaryIndexSettingsUpdateList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GlobalTableGlobalSecondaryIndexSettingsUpdate"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "GlobalTableGlobalSecondaryIndexSettingsUpdate": {
        "type": "object",
        "required": [
          "IndexName"
        ],
        "properties": {
          "IndexName": {
            "allOf": [
              {
                "$ref": "#/$defs/IndexName"
              },
              {
                "description": "The name of the global secondary index. The name must be unique among all other indexes on this table."
              }
            ]
          },
          "ProvisionedWriteCapacityUnits": {
            "allOf": [
              {
                "$ref": "#/$defs/PositiveLongObject"
              },
              {
                "description": "The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException.</code> "
              }
            ]
          },
          "ProvisionedWriteCapacityAutoScalingSettingsUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoScalingSettingsUpdate"
              },
              {
                "description": "Auto scaling settings for managing a global secondary index's write capacity units."
              }
            ]
          }
        },
        "description": "Represents the settings of a global secondary index for a global table that will be modified."
      },
      "IndexName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 3,
        "maxLength": 255
      },
      "ReplicaSettingsUpdateList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ReplicaSettingsUpdate"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "ReplicaSettingsUpdate": {
        "type": "object",
        "required": [
          "RegionName"
        ],
        "properties": {
          "RegionName": {
            "allOf": [
              {
                "$ref": "#/$defs/RegionName"
              },
              {
                "description": "The Region of the replica to be added."
              }
            ]
          },
          "ReplicaProvisionedReadCapacityUnits": {
            "allOf": [
              {
                "$ref": "#/$defs/PositiveLongObject"
              },
              {
                "description": "The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>. For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput\">Specifying Read and Write Requirements</a> in the <i>Amazon DynamoDB Developer Guide</i>. "
              }
            ]
          },
          "ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoScalingSettingsUpdate"
              },
              {
                "description": "Auto scaling settings for managing a global table replica's read capacity units."
              }
            ]
          },
          "ReplicaGlobalSecondaryIndexSettingsUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ReplicaGlobalSecondaryIndexSettingsUpdateList"
              },
              {
                "description": "Represents the settings of a global secondary index for a global table that will be modified."
              }
            ]
          },
          "ReplicaTableClass": {
            "allOf": [
              {
                "$ref": "#/$defs/TableClass"
              },
              {
                "description": "Replica-specific table class. If not specified, uses the source table's table class."
              }
            ]
          }
        },
        "description": "Represents the settings for a global table in a Region that will be modified."
      },
      "RegionName": {
        "type": "string"
      },
      "ReplicaGlobalSecondaryIndexSettingsUpdateList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ReplicaGlobalSecondaryIndexSettingsUpdate"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "ReplicaGlobalSecondaryIndexSettingsUpdate": {
        "type": "object",
        "required": [
          "IndexName"
        ],
        "properties": {
          "IndexName": {
            "allOf": [
              {
                "$ref": "#/$defs/IndexName"
              },
              {
                "description": "The name of the global secondary index. The name must be unique among all other indexes on this table."
              }
            ]
          },
          "ProvisionedReadCapacityUnits": {
            "allOf": [
              {
                "$ref": "#/$defs/PositiveLongObject"
              },
              {
                "description": "The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>."
              }
            ]
          },
          "ProvisionedReadCapacityAutoScalingSettingsUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoScalingSettingsUpdate"
              },
              {
                "description": "Auto scaling settings for managing a global secondary index replica's read capacity units."
              }
            ]
          }
        },
        "description": "Represents the settings of a global secondary index for a global table that will be modified."
      },
      "TableClass": {
        "type": "string",
        "enum": [
          "STANDARD",
          "STANDARD_INFREQUENT_ACCESS"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://dynamodb.us-east-1.amazonaws.com/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTableSettings"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**GlobalTableName**",
            "**ReplicaSettings**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
