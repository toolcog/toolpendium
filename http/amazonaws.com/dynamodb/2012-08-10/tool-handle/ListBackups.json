{
  "name": "ListBackups",
  "description": "<p>List backups associated with an Amazon Web Services account. To list backups for a given table, specify <code>TableName</code>. <code>ListBackups</code> returns a paginated list of results with at most 1 MB worth of items in a page. You can also specify a maximum number of entries to be returned in a page.</p> <p>In the request, start time is inclusive, but end time is exclusive. Note that these boundaries are for the time at which the original backup was requested.</p> <p>You can call <code>ListBackups</code> a maximum of five times per second.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "DynamoDB_20120810.ListBackups"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListBackupsInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListBackupsInput": {
        "type": "object",
        "title": "ListBackupsInput",
        "properties": {
          "TableName": {
            "allOf": [
              {
                "$ref": "#/$defs/TableName"
              },
              {
                "description": "The backups from the table specified by <code>TableName</code> are listed. "
              }
            ]
          },
          "Limit": {
            "allOf": [
              {
                "$ref": "#/$defs/BackupsInputLimit"
              },
              {
                "description": "Maximum number of backups to return at once."
              }
            ]
          },
          "TimeRangeLowerBound": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeRangeLowerBound"
              },
              {
                "description": "Only backups created after this time are listed. <code>TimeRangeLowerBound</code> is inclusive."
              }
            ]
          },
          "TimeRangeUpperBound": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeRangeUpperBound"
              },
              {
                "description": "Only backups created before this time are listed. <code>TimeRangeUpperBound</code> is exclusive. "
              }
            ]
          },
          "ExclusiveStartBackupArn": {
            "allOf": [
              {
                "$ref": "#/$defs/BackupArn"
              },
              {
                "description": " <code>LastEvaluatedBackupArn</code> is the Amazon Resource Name (ARN) of the backup last evaluated when the current page of results was returned, inclusive of the current page of results. This value may be specified as the <code>ExclusiveStartBackupArn</code> of a new <code>ListBackups</code> operation in order to fetch the next page of results. "
              }
            ]
          },
          "BackupType": {
            "allOf": [
              {
                "$ref": "#/$defs/BackupTypeFilter"
              },
              {
                "description": "<p>The backups from the table specified by <code>BackupType</code> are listed.</p> <p>Where <code>BackupType</code> can be:</p> <ul> <li> <p> <code>USER</code> - On-demand backup created by you. (The default setting if no other backup types are specified.)</p> </li> <li> <p> <code>SYSTEM</code> - On-demand backup automatically created by DynamoDB.</p> </li> <li> <p> <code>ALL</code> - All types of on-demand backups (USER and SYSTEM).</p> </li> </ul>"
              }
            ]
          }
        }
      },
      "TableName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 3,
        "maxLength": 255
      },
      "BackupsInputLimit": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "TimeRangeLowerBound": {
        "type": "string",
        "format": "date-time"
      },
      "TimeRangeUpperBound": {
        "type": "string",
        "format": "date-time"
      },
      "BackupArn": {
        "type": "string",
        "minLength": 37,
        "maxLength": 1024
      },
      "BackupTypeFilter": {
        "type": "string",
        "enum": [
          "USER",
          "SYSTEM",
          "AWS_BACKUP",
          "ALL"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://dynamodb.us-east-1.amazonaws.com/#X-Amz-Target=DynamoDB_20120810.ListBackups"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**BackupSummaries**",
            "**LastEvaluatedBackupArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
