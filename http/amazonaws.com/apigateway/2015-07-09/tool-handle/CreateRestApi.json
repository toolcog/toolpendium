{
  "name": "CreateRestApi",
  "description": "Creates a new RestApi resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "description": "The name of the RestApi.",
            "type": "string"
          },
          "description": {
            "description": "The description of the RestApi.",
            "type": "string"
          },
          "version": {
            "description": "A version identifier for the API.",
            "type": "string"
          },
          "cloneFrom": {
            "description": "The ID of the RestApi that you want to clone from.",
            "type": "string"
          },
          "binaryMediaTypes": {
            "description": "The list of binary media types supported by the RestApi. By default, the RestApi supports only UTF-8-encoded text payloads.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/String"
            }
          },
          "minimumCompressionSize": {
            "description": "A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API. When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.",
            "type": "integer"
          },
          "apiKeySource": {
            "description": "The source of the API key for metering requests according to a usage plan. Valid values are: &gt;<code>HEADER</code> to read the API key from the <code>X-API-Key</code> header of a request. <code>AUTHORIZER</code> to read the API key from the <code>UsageIdentifierKey</code> from a custom authorizer.",
            "type": "string",
            "enum": [
              "HEADER",
              "AUTHORIZER"
            ]
          },
          "endpointConfiguration": {
            "description": "The endpoint configuration to indicate the types of endpoints an API (RestApi) or its custom domain name (DomainName) has. ",
            "type": "object",
            "properties": {
              "types": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ListOfEndpointType"
                  },
                  {
                    "description": "A list of endpoint types of an API (RestApi) or its custom domain name (DomainName). For an edge-optimized API and its custom domain name, the endpoint type is <code>\"EDGE\"</code>. For a regional API and its custom domain name, the endpoint type is <code>REGIONAL</code>. For a private API, the endpoint type is <code>PRIVATE</code>."
                  }
                ]
              },
              "vpcEndpointIds": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ListOfString"
                  },
                  {
                    "description": "A list of VpcEndpointIds of an API (RestApi) against which to create Route53 ALIASes. It is only supported for <code>PRIVATE</code> endpoint type."
                  }
                ]
              }
            }
          },
          "policy": {
            "description": "A stringified JSON policy document that applies to this RestApi regardless of the caller and Method configuration.",
            "type": "string"
          },
          "tags": {
            "description": "The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/String"
            }
          },
          "disableExecuteApiEndpoint": {
            "description": "Specifies whether clients can invoke your API by using the default <code>execute-api</code> endpoint. By default, clients can invoke your API with the default <code>https://{api_id}.execute-api.{region}.amazonaws.com</code> endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint",
            "type": "boolean"
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "String": {
        "type": "string"
      },
      "ListOfEndpointType": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EndpointType"
        }
      },
      "EndpointType": {
        "type": "string",
        "enum": [
          "REGIONAL",
          "EDGE",
          "PRIVATE"
        ],
        "description": "The endpoint type. The valid values are <code>EDGE</code> for edge-optimized API setup, most suitable for mobile applications; <code>REGIONAL</code> for regional API endpoint setup, most suitable for calling from AWS Region; and <code>PRIVATE</code> for private APIs."
      },
      "ListOfString": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://apigateway.us-east-1.amazonaws.com/restapis"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a REST API.",
        "**Key properties:**",
        {
          "$ul": [
            "**id**",
            "**name**",
            "**description**",
            "**createdDate**",
            "**version**",
            "**warnings**",
            "**binaryMediaTypes**",
            "**minimumCompressionSize**",
            "**apiKeySource**",
            "**endpointConfiguration**",
            "**policy**",
            "**tags**",
            "**disableExecuteApiEndpoint**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
