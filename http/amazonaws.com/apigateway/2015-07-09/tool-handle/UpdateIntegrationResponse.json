{
  "name": "UpdateIntegrationResponse",
  "description": "Represents an update integration response.",
  "parameters": {
    "type": "object",
    "properties": {
      "restapi_id": {
        "type": "string",
        "description": "The string identifier of the associated RestApi."
      },
      "resource_id": {
        "type": "string",
        "description": "Specifies an update integration response request's resource identifier."
      },
      "http_method": {
        "type": "string",
        "description": "Specifies an update integration response request's HTTP method."
      },
      "status_code": {
        "type": "string",
        "pattern": "[1-5]\\d\\d",
        "description": "Specifies an update integration response request's status code."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "patchOperations": {
            "description": "A list of operations describing the updates to apply to the specified resource. The patches are applied in the order specified in the list.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/PatchOperation"
            }
          }
        }
      }
    },
    "required": [
      "restapi_id",
      "resource_id",
      "http_method",
      "status_code",
      "body"
    ],
    "$defs": {
      "PatchOperation": {
        "type": "object",
        "properties": {
          "op": {
            "allOf": [
              {
                "$ref": "#/$defs/Op"
              },
              {
                "description": "An update operation to be performed with this PATCH request. The valid value can be add, remove, replace or copy. Not all valid operations are supported for a given resource. Support of the operations depends on specific operational contexts. Attempts to apply an unsupported operation on a resource will return an error message.."
              }
            ]
          },
          "path": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The op operation's target, as identified by a JSON Pointer value that references a location within the targeted resource. For example, if the target resource has an updateable property of {\"name\":\"value\"}, the path for this property is /name. If the name property value is a JSON object (e.g., {\"name\": {\"child/name\": \"child-value\"}}), the path for the child/name property will be /name/child~1name. Any slash (\"/\") character appearing in path names must be escaped with \"~1\", as shown in the example above. Each op operation can have only one path associated with it."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The new target value of the update operation. It is applicable for the add or replace operation. When using AWS CLI to update a property of a JSON value, enclose the JSON object with a pair of single quotes in a Linux shell, e.g., '{\"a\": ...}'."
              }
            ]
          },
          "from": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The copy update operation's source as identified by a JSON-Pointer value referencing the location within the targeted resource to copy the value from. For example, to promote a canary deployment, you copy the canary deployment ID to the affiliated deployment ID by calling a PATCH request on a Stage resource with \"op\":\"copy\", \"from\":\"/canarySettings/deploymentId\" and \"path\":\"/deploymentId\"."
              }
            ]
          }
        },
        "description": "For more information about supported patch operations, see <a href=\"https://docs.aws.amazon.com/apigateway/latest/api/patch-operations.html\">Patch Operations</a>."
      },
      "Op": {
        "type": "string",
        "enum": [
          "add",
          "remove",
          "replace",
          "move",
          "copy",
          "test"
        ]
      },
      "String": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "http://apigateway.us-east-1.amazonaws.com/restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}/integration/responses/{status_code}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an integration response. The status code must map to an existing MethodResponse, and parameters and templates can be used to transform the back-end response.",
        "**Key properties:**",
        {
          "$ul": [
            "**statusCode**",
            "**selectionPattern**",
            "**responseParameters**",
            "**responseTemplates**",
            "**contentHandling**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
