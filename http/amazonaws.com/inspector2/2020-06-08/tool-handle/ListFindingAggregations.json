{
  "name": "ListFindingAggregations",
  "description": "Lists aggregated finding data for your environment based on specific criteria.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "aggregationType"
        ],
        "properties": {
          "accountIds": {
            "description": "The Amazon Web Services account IDs to retrieve finding aggregation data for.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/StringFilter"
            },
            "minItems": 1,
            "maxItems": 10
          },
          "aggregationRequest": {
            "description": "Contains details about an aggregation request.",
            "type": "object",
            "properties": {
              "accountAggregation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AccountAggregation"
                  },
                  {
                    "description": "An object that contains details about an aggregation request based on Amazon Web Services account IDs."
                  }
                ]
              },
              "amiAggregation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AmiAggregation"
                  },
                  {
                    "description": "An object that contains details about an aggregation request based on Amazon Machine Images (AMIs)."
                  }
                ]
              },
              "awsEcrContainerAggregation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AwsEcrContainerAggregation"
                  },
                  {
                    "description": "An object that contains details about an aggregation request based on Amazon ECR container images."
                  }
                ]
              },
              "ec2InstanceAggregation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Ec2InstanceAggregation"
                  },
                  {
                    "description": "An object that contains details about an aggregation request based on Amazon EC2 instances."
                  }
                ]
              },
              "findingTypeAggregation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FindingTypeAggregation"
                  },
                  {
                    "description": "An object that contains details about an aggregation request based on finding types."
                  }
                ]
              },
              "imageLayerAggregation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ImageLayerAggregation"
                  },
                  {
                    "description": "An object that contains details about an aggregation request based on container image layers."
                  }
                ]
              },
              "lambdaFunctionAggregation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LambdaFunctionAggregation"
                  },
                  {
                    "description": "Returns an object with findings aggregated by AWS Lambda function."
                  }
                ]
              },
              "lambdaLayerAggregation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LambdaLayerAggregation"
                  },
                  {
                    "description": "Returns an object with findings aggregated by AWS Lambda layer."
                  }
                ]
              },
              "packageAggregation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PackageAggregation"
                  },
                  {
                    "description": "An object that contains details about an aggregation request based on operating system package type."
                  }
                ]
              },
              "repositoryAggregation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RepositoryAggregation"
                  },
                  {
                    "description": "An object that contains details about an aggregation request based on Amazon ECR repositories."
                  }
                ]
              },
              "titleAggregation": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TitleAggregation"
                  },
                  {
                    "description": "An object that contains details about an aggregation request based on finding title."
                  }
                ]
              }
            }
          },
          "aggregationType": {
            "description": "The type of the aggregation request.",
            "type": "string",
            "enum": [
              "FINDING_TYPE",
              "PACKAGE",
              "TITLE",
              "REPOSITORY",
              "AMI",
              "AWS_EC2_INSTANCE",
              "AWS_ECR_CONTAINER",
              "IMAGE_LAYER",
              "ACCOUNT",
              "AWS_LAMBDA_FUNCTION",
              "LAMBDA_LAYER"
            ]
          },
          "maxResults": {
            "description": "The maximum number of results to return in the response.",
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "nextToken": {
            "description": "A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.",
            "type": "string",
            "minLength": 0,
            "maxLength": 1000000
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "StringFilter": {
        "type": "object",
        "required": [
          "comparison",
          "value"
        ],
        "properties": {
          "comparison": {
            "allOf": [
              {
                "$ref": "#/$defs/StringComparison"
              },
              {
                "description": "The operator to use when comparing values in the filter."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/StringInput"
              },
              {
                "description": "The value to filter on."
              }
            ]
          }
        },
        "description": "An object that describes the details of a string filter."
      },
      "StringComparison": {
        "type": "string",
        "enum": [
          "EQUALS",
          "PREFIX",
          "NOT_EQUALS"
        ]
      },
      "StringInput": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "AccountAggregation": {
        "type": "object",
        "properties": {
          "findingType": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationFindingType"
              },
              {
                "description": "The type of finding."
              }
            ]
          },
          "resourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationResourceType"
              },
              {
                "description": "The type of resource."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountSortBy"
              },
              {
                "description": "The value to sort by."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The sort order (ascending or descending)."
              }
            ]
          }
        },
        "description": "An object that contains details about an aggregation response based on Amazon Web Services accounts."
      },
      "AggregationFindingType": {
        "type": "string",
        "enum": [
          "NETWORK_REACHABILITY",
          "PACKAGE_VULNERABILITY",
          "CODE_VULNERABILITY"
        ]
      },
      "AggregationResourceType": {
        "type": "string",
        "enum": [
          "AWS_EC2_INSTANCE",
          "AWS_ECR_CONTAINER_IMAGE",
          "AWS_LAMBDA_FUNCTION"
        ]
      },
      "AccountSortBy": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "ALL"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "AmiAggregation": {
        "type": "object",
        "properties": {
          "amis": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The IDs of AMIs to aggregate findings for."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/AmiSortBy"
              },
              {
                "description": "The value to sort results by."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The order to sort results by."
              }
            ]
          }
        },
        "description": "The details that define an aggregation based on Amazon machine images (AMIs)."
      },
      "StringFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StringFilter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "AmiSortBy": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "ALL",
          "AFFECTED_INSTANCES"
        ]
      },
      "AwsEcrContainerAggregation": {
        "type": "object",
        "properties": {
          "architectures": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The architecture of the containers."
              }
            ]
          },
          "imageShas": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The image SHA values."
              }
            ]
          },
          "imageTags": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The image tags."
              }
            ]
          },
          "repositories": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The container repositories."
              }
            ]
          },
          "resourceIds": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The container resource IDs."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsEcrContainerSortBy"
              },
              {
                "description": "The value to sort by."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The sort order (ascending or descending)."
              }
            ]
          }
        },
        "description": "An aggregation of information about Amazon ECR containers."
      },
      "AwsEcrContainerSortBy": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "ALL"
        ]
      },
      "Ec2InstanceAggregation": {
        "type": "object",
        "properties": {
          "amis": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The AMI IDs associated with the Amazon EC2 instances to aggregate findings for."
              }
            ]
          },
          "instanceIds": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The Amazon EC2 instance IDs to aggregate findings for."
              }
            ]
          },
          "instanceTags": {
            "allOf": [
              {
                "$ref": "#/$defs/MapFilterList"
              },
              {
                "description": "The Amazon EC2 instance tags to aggregate findings for."
              }
            ]
          },
          "operatingSystems": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The operating system types to aggregate findings for. Valid values must be uppercase and underscore separated, examples are <code>ORACLE_LINUX_7</code> and <code>ALPINE_LINUX_3_8</code>."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/Ec2InstanceSortBy"
              },
              {
                "description": "The value to sort results by."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The order to sort results by."
              }
            ]
          }
        },
        "description": "The details that define an aggregation based on Amazon EC2 instances."
      },
      "MapFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MapFilter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "MapFilter": {
        "type": "object",
        "required": [
          "comparison",
          "key"
        ],
        "properties": {
          "comparison": {
            "allOf": [
              {
                "$ref": "#/$defs/MapComparison"
              },
              {
                "description": "The operator to use when comparing values in the filter."
              }
            ]
          },
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/MapKey"
              },
              {
                "description": "The tag key used in the filter."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/MapValue"
              },
              {
                "description": "The tag value used in the filter."
              }
            ]
          }
        },
        "description": "An object that describes details of a map filter."
      },
      "MapComparison": {
        "type": "string",
        "enum": [
          "EQUALS"
        ]
      },
      "MapKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "MapValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "Ec2InstanceSortBy": {
        "type": "string",
        "enum": [
          "NETWORK_FINDINGS",
          "CRITICAL",
          "HIGH",
          "ALL"
        ]
      },
      "FindingTypeAggregation": {
        "type": "object",
        "properties": {
          "findingType": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationFindingType"
              },
              {
                "description": "The finding type to aggregate."
              }
            ]
          },
          "resourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationResourceType"
              },
              {
                "description": "The resource type to aggregate."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/FindingTypeSortBy"
              },
              {
                "description": "The value to sort results by."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The order to sort results by."
              }
            ]
          }
        },
        "description": "The details that define an aggregation based on finding type."
      },
      "FindingTypeSortBy": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "ALL"
        ]
      },
      "ImageLayerAggregation": {
        "type": "object",
        "properties": {
          "layerHashes": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The hashes associated with the layers."
              }
            ]
          },
          "repositories": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The repository associated with the container image hosting the layers."
              }
            ]
          },
          "resourceIds": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The ID of the container image layer."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageLayerSortBy"
              },
              {
                "description": "The value to sort results by."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The order to sort results by."
              }
            ]
          }
        },
        "description": "The details that define an aggregation based on container image layers."
      },
      "ImageLayerSortBy": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "ALL"
        ]
      },
      "LambdaFunctionAggregation": {
        "type": "object",
        "properties": {
          "functionNames": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The AWS Lambda function names to include in the aggregation results."
              }
            ]
          },
          "functionTags": {
            "allOf": [
              {
                "$ref": "#/$defs/MapFilterList"
              },
              {
                "description": "The tags to include in the aggregation results."
              }
            ]
          },
          "resourceIds": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The resource IDs to include in the aggregation results."
              }
            ]
          },
          "runtimes": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "Returns findings aggregated by AWS Lambda function runtime environments."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/LambdaFunctionSortBy"
              },
              {
                "description": "The finding severity to use for sorting the results."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The order to use for sorting the results."
              }
            ]
          }
        },
        "description": "The details that define a findings aggregation based on AWS Lambda functions."
      },
      "LambdaFunctionSortBy": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "ALL"
        ]
      },
      "LambdaLayerAggregation": {
        "type": "object",
        "properties": {
          "functionNames": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The names of the AWS Lambda functions associated with the layers."
              }
            ]
          },
          "layerArns": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the AWS Lambda function layer. "
              }
            ]
          },
          "resourceIds": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The resource IDs for the AWS Lambda function layers."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/LambdaLayerSortBy"
              },
              {
                "description": "The finding severity to use for sorting the results."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The order to use for sorting the results."
              }
            ]
          }
        },
        "description": "The details that define a findings aggregation based on an AWS Lambda function's layers."
      },
      "LambdaLayerSortBy": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "ALL"
        ]
      },
      "PackageAggregation": {
        "type": "object",
        "properties": {
          "packageNames": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The names of packages to aggregate findings on."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/PackageSortBy"
              },
              {
                "description": "The value to sort results by."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The order to sort results by."
              }
            ]
          }
        },
        "description": "The details that define an aggregation based on operating system package type."
      },
      "PackageSortBy": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "ALL"
        ]
      },
      "RepositoryAggregation": {
        "type": "object",
        "properties": {
          "repositories": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The names of repositories to aggregate findings on."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositorySortBy"
              },
              {
                "description": "The value to sort results by."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The order to sort results by."
              }
            ]
          }
        },
        "description": "The details that define an aggregation based on repository."
      },
      "RepositorySortBy": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "ALL",
          "AFFECTED_IMAGES"
        ]
      },
      "TitleAggregation": {
        "type": "object",
        "properties": {
          "findingType": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationFindingType"
              },
              {
                "description": "The type of finding to aggregate on."
              }
            ]
          },
          "resourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationResourceType"
              },
              {
                "description": "The resource type to aggregate on."
              }
            ]
          },
          "sortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/TitleSortBy"
              },
              {
                "description": "The value to sort results by."
              }
            ]
          },
          "sortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The order to sort results by."
              }
            ]
          },
          "titles": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The finding titles to aggregate on."
              }
            ]
          },
          "vulnerabilityIds": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilterList"
              },
              {
                "description": "The vulnerability IDs of the findings."
              }
            ]
          }
        },
        "description": "The details that define an aggregation based on finding title."
      },
      "TitleSortBy": {
        "type": "string",
        "enum": [
          "CRITICAL",
          "HIGH",
          "ALL"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://inspector2.us-east-1.amazonaws.com/findings/aggregation/list{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**aggregationType**",
            "**nextToken**",
            "**responses**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
