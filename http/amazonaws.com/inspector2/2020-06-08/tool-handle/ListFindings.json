{
  "name": "ListFindings",
  "description": "Lists findings for your environment.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "filterCriteria": {
            "description": "Details on the criteria used to define the filter.",
            "type": "object",
            "properties": {
              "awsAccountId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details of the Amazon Web Services account IDs used to filter findings."
                  }
                ]
              },
              "codeVulnerabilityDetectorName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The name of the detector used to identify a code vulnerability in a Lambda function used to filter findings."
                  }
                ]
              },
              "codeVulnerabilityDetectorTags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The detector type tag associated with the vulnerability used to filter findings. Detector tags group related vulnerabilities by common themes or tactics. For a list of available tags by programming language, see <a href=\"https://docs.aws.amazon.com/codeguru/detector-library/java/tags/\">Java tags</a>, or <a href=\"https://docs.aws.amazon.com/codeguru/detector-library/python/tags/\">Python tags</a>. "
                  }
                ]
              },
              "codeVulnerabilityFilePath": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The file path to the file in a Lambda function that contains a code vulnerability used to filter findings."
                  }
                ]
              },
              "componentId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details of the component IDs used to filter findings."
                  }
                ]
              },
              "componentType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details of the component types used to filter findings."
                  }
                ]
              },
              "ec2InstanceImageId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details of the Amazon EC2 instance image IDs used to filter findings."
                  }
                ]
              },
              "ec2InstanceSubnetId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details of the Amazon EC2 instance subnet IDs used to filter findings."
                  }
                ]
              },
              "ec2InstanceVpcId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details of the Amazon EC2 instance VPC IDs used to filter findings."
                  }
                ]
              },
              "ecrImageArchitecture": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details of the Amazon ECR image architecture types used to filter findings."
                  }
                ]
              },
              "ecrImageHash": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details of the Amazon ECR image hashes used to filter findings."
                  }
                ]
              },
              "ecrImagePushedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "Details on the Amazon ECR image push date and time used to filter findings."
                  }
                ]
              },
              "ecrImageRegistry": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the Amazon ECR registry used to filter findings."
                  }
                ]
              },
              "ecrImageRepositoryName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the name of the Amazon ECR repository used to filter findings."
                  }
                ]
              },
              "ecrImageTags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "The tags attached to the Amazon ECR container image."
                  }
                ]
              },
              "epssScore": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "description": "The EPSS score used to filter findings."
                  }
                ]
              },
              "exploitAvailable": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Filters the list of AWS Lambda findings by the availability of exploits."
                  }
                ]
              },
              "findingArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the finding ARNs used to filter findings."
                  }
                ]
              },
              "findingStatus": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the finding status types used to filter findings."
                  }
                ]
              },
              "findingType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the finding types used to filter findings."
                  }
                ]
              },
              "firstObservedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "Details on the date and time a finding was first seen used to filter findings."
                  }
                ]
              },
              "fixAvailable": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on whether a fix is available through a version update. This value can be <code>YES</code>, <code>NO</code>, or <code>PARTIAL</code>. A <code>PARTIAL</code> fix means that some, but not all, of the packages identified in the finding have fixes available through updated versions."
                  }
                ]
              },
              "inspectorScore": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NumberFilterList"
                  },
                  {
                    "description": "The Amazon Inspector score to filter on."
                  }
                ]
              },
              "lambdaFunctionExecutionRoleArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Filters the list of AWS Lambda functions by execution role."
                  }
                ]
              },
              "lambdaFunctionLastModifiedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "Filters the list of AWS Lambda functions by the date and time that a user last updated the configuration, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\">ISO 8601 format</a> "
                  }
                ]
              },
              "lambdaFunctionLayers": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Filters the list of AWS Lambda functions by the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\"> layers</a>. A Lambda function can have up to five layers."
                  }
                ]
              },
              "lambdaFunctionName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Filters the list of AWS Lambda functions by the name of the function."
                  }
                ]
              },
              "lambdaFunctionRuntime": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Filters the list of AWS Lambda functions by the runtime environment for the Lambda function."
                  }
                ]
              },
              "lastObservedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "Details on the date and time a finding was last seen used to filter findings."
                  }
                ]
              },
              "networkProtocol": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on network protocol used to filter findings."
                  }
                ]
              },
              "portRange": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PortRangeFilterList"
                  },
                  {
                    "description": "Details on the port ranges used to filter findings."
                  }
                ]
              },
              "relatedVulnerabilities": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the related vulnerabilities used to filter findings."
                  }
                ]
              },
              "resourceId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the resource IDs used to filter findings."
                  }
                ]
              },
              "resourceTags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MapFilterList"
                  },
                  {
                    "description": "Details on the resource tags used to filter findings."
                  }
                ]
              },
              "resourceType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the resource types used to filter findings."
                  }
                ]
              },
              "severity": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the severity used to filter findings."
                  }
                ]
              },
              "title": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the finding title used to filter findings."
                  }
                ]
              },
              "updatedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateFilterList"
                  },
                  {
                    "description": "Details on the date and time a finding was last updated at used to filter findings."
                  }
                ]
              },
              "vendorSeverity": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the vendor severity used to filter findings."
                  }
                ]
              },
              "vulnerabilityId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the vulnerability ID used to filter findings."
                  }
                ]
              },
              "vulnerabilitySource": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringFilterList"
                  },
                  {
                    "description": "Details on the vulnerability type used to filter findings."
                  }
                ]
              },
              "vulnerablePackages": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PackageFilterList"
                  },
                  {
                    "description": "Details on the vulnerable packages used to filter findings."
                  }
                ]
              }
            }
          },
          "maxResults": {
            "description": "The maximum number of results to return in the response.",
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "nextToken": {
            "description": "A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.",
            "type": "string",
            "minLength": 0,
            "maxLength": 1000000
          },
          "sortCriteria": {
            "description": "Details about the criteria used to sort finding results.",
            "type": "object",
            "properties": {
              "field": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SortField"
                  },
                  {
                    "description": "The finding detail field by which results are sorted."
                  }
                ]
              },
              "sortOrder": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SortOrder"
                  },
                  {
                    "description": "The order by which findings are sorted."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "StringFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StringFilter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "StringFilter": {
        "type": "object",
        "required": [
          "comparison",
          "value"
        ],
        "properties": {
          "comparison": {
            "allOf": [
              {
                "$ref": "#/$defs/StringComparison"
              },
              {
                "description": "The operator to use when comparing values in the filter."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/StringInput"
              },
              {
                "description": "The value to filter on."
              }
            ]
          }
        },
        "description": "An object that describes the details of a string filter."
      },
      "StringComparison": {
        "type": "string",
        "enum": [
          "EQUALS",
          "PREFIX",
          "NOT_EQUALS"
        ]
      },
      "StringInput": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "DateFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DateFilter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "DateFilter": {
        "type": "object",
        "properties": {
          "endInclusive": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "A timestamp representing the end of the time period filtered on."
              }
            ]
          },
          "startInclusive": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "A timestamp representing the start of the time period filtered on."
              }
            ]
          }
        },
        "description": "Contains details on the time range used to filter findings."
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "NumberFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NumberFilter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "NumberFilter": {
        "type": "object",
        "properties": {
          "lowerInclusive": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The lowest number to be included in the filter."
              }
            ]
          },
          "upperInclusive": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The highest number to be included in the filter."
              }
            ]
          }
        },
        "description": "An object that describes the details of a number filter."
      },
      "Double": {
        "type": "number",
        "format": "double"
      },
      "PortRangeFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PortRangeFilter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "PortRangeFilter": {
        "type": "object",
        "properties": {
          "beginInclusive": {
            "allOf": [
              {
                "$ref": "#/$defs/Port"
              },
              {
                "description": "The port number the port range begins at."
              }
            ]
          },
          "endInclusive": {
            "allOf": [
              {
                "$ref": "#/$defs/Port"
              },
              {
                "description": "The port number the port range ends at."
              }
            ]
          }
        },
        "description": "An object that describes the details of a port range filter."
      },
      "Port": {
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      },
      "MapFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MapFilter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "MapFilter": {
        "type": "object",
        "required": [
          "comparison",
          "key"
        ],
        "properties": {
          "comparison": {
            "allOf": [
              {
                "$ref": "#/$defs/MapComparison"
              },
              {
                "description": "The operator to use when comparing values in the filter."
              }
            ]
          },
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/MapKey"
              },
              {
                "description": "The tag key used in the filter."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/MapValue"
              },
              {
                "description": "The tag value used in the filter."
              }
            ]
          }
        },
        "description": "An object that describes details of a map filter."
      },
      "MapComparison": {
        "type": "string",
        "enum": [
          "EQUALS"
        ]
      },
      "MapKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "MapValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "PackageFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PackageFilter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "PackageFilter": {
        "type": "object",
        "properties": {
          "architecture": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilter"
              },
              {
                "description": "An object that contains details on the package architecture type to filter on."
              }
            ]
          },
          "epoch": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberFilter"
              },
              {
                "description": "An object that contains details on the package epoch to filter on."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilter"
              },
              {
                "description": "An object that contains details on the name of the package to filter on."
              }
            ]
          },
          "release": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilter"
              },
              {
                "description": "An object that contains details on the package release to filter on."
              }
            ]
          },
          "sourceLambdaLayerArn": {
            "$ref": "#/$defs/StringFilter"
          },
          "sourceLayerHash": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilter"
              },
              {
                "description": "An object that contains details on the source layer hash to filter on."
              }
            ]
          },
          "version": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFilter"
              },
              {
                "description": "The package version to filter on."
              }
            ]
          }
        },
        "description": "Contains information on the details of a package filter."
      },
      "SortField": {
        "type": "string",
        "enum": [
          "AWS_ACCOUNT_ID",
          "FINDING_TYPE",
          "SEVERITY",
          "FIRST_OBSERVED_AT",
          "LAST_OBSERVED_AT",
          "FINDING_STATUS",
          "RESOURCE_TYPE",
          "ECR_IMAGE_PUSHED_AT",
          "ECR_IMAGE_REPOSITORY_NAME",
          "ECR_IMAGE_REGISTRY",
          "NETWORK_PROTOCOL",
          "COMPONENT_TYPE",
          "VULNERABILITY_ID",
          "VULNERABILITY_SOURCE",
          "INSPECTOR_SCORE",
          "VENDOR_SEVERITY",
          "EPSS_SCORE"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://inspector2.us-east-1.amazonaws.com/findings/list{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**findings**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
