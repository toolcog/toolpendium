{
  "name": "ListCoverage",
  "description": "Lists coverage details for you environment.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "filterCriteria": {
            "description": "A structure that identifies filter criteria for <code>GetCoverageStatistics</code>.",
            "type": "object",
            "properties": {
              "accountId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageStringFilterList"
                  },
                  {
                    "description": "An array of Amazon Web Services account IDs to return coverage statistics for."
                  }
                ]
              },
              "ec2InstanceTags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageMapFilterList"
                  },
                  {
                    "description": "The Amazon EC2 instance tags to filter on."
                  }
                ]
              },
              "ecrImageTags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageStringFilterList"
                  },
                  {
                    "description": "The Amazon ECR image tags to filter on."
                  }
                ]
              },
              "ecrRepositoryName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageStringFilterList"
                  },
                  {
                    "description": "The Amazon ECR repository name to filter on."
                  }
                ]
              },
              "lambdaFunctionName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageStringFilterList"
                  },
                  {
                    "description": "Returns coverage statistics for AWS Lambda functions filtered by function names."
                  }
                ]
              },
              "lambdaFunctionRuntime": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageStringFilterList"
                  },
                  {
                    "description": "Returns coverage statistics for AWS Lambda functions filtered by runtime."
                  }
                ]
              },
              "lambdaFunctionTags": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageMapFilterList"
                  },
                  {
                    "description": "Returns coverage statistics for AWS Lambda functions filtered by tag."
                  }
                ]
              },
              "lastScannedAt": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageDateFilterList"
                  },
                  {
                    "description": "Filters Amazon Web Services resources based on whether Amazon Inspector has checked them for vulnerabilities within the specified time range."
                  }
                ]
              },
              "resourceId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageStringFilterList"
                  },
                  {
                    "description": "An array of Amazon Web Services resource IDs to return coverage statistics for."
                  }
                ]
              },
              "resourceType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageStringFilterList"
                  },
                  {
                    "description": "An array of Amazon Web Services resource types to return coverage statistics for. The values can be <code>AWS_EC2_INSTANCE</code>, <code>AWS_LAMBDA_FUNCTION</code> or <code>AWS_ECR_REPOSITORY</code>."
                  }
                ]
              },
              "scanStatusCode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageStringFilterList"
                  },
                  {
                    "description": "The scan status code to filter on."
                  }
                ]
              },
              "scanStatusReason": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageStringFilterList"
                  },
                  {
                    "description": "The scan status reason to filter on."
                  }
                ]
              },
              "scanType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CoverageStringFilterList"
                  },
                  {
                    "description": "An array of Amazon Inspector scan types to return coverage statistics for."
                  }
                ]
              }
            }
          },
          "maxResults": {
            "description": "The maximum number of results to return in the response.",
            "type": "integer",
            "minimum": 1,
            "maximum": 200
          },
          "nextToken": {
            "description": "A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.",
            "type": "string",
            "minLength": 0,
            "maxLength": 1000000
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "CoverageStringFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CoverageStringFilter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "CoverageStringFilter": {
        "type": "object",
        "required": [
          "comparison",
          "value"
        ],
        "properties": {
          "comparison": {
            "allOf": [
              {
                "$ref": "#/$defs/CoverageStringComparison"
              },
              {
                "description": "The operator to compare strings on."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/CoverageStringInput"
              },
              {
                "description": "The value to compare strings on."
              }
            ]
          }
        },
        "description": "Contains details of a coverage string filter."
      },
      "CoverageStringComparison": {
        "type": "string",
        "enum": [
          "EQUALS",
          "NOT_EQUALS"
        ]
      },
      "CoverageStringInput": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "CoverageMapFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CoverageMapFilter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "CoverageMapFilter": {
        "type": "object",
        "required": [
          "comparison",
          "key"
        ],
        "properties": {
          "comparison": {
            "allOf": [
              {
                "$ref": "#/$defs/CoverageMapComparison"
              },
              {
                "description": "The operator to compare coverage on."
              }
            ]
          },
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The tag key associated with the coverage map filter."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The tag value associated with the coverage map filter."
              }
            ]
          }
        },
        "description": "Contains details of a coverage map filter."
      },
      "CoverageMapComparison": {
        "type": "string",
        "enum": [
          "EQUALS"
        ]
      },
      "NonEmptyString": {
        "type": "string",
        "minLength": 1
      },
      "CoverageDateFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CoverageDateFilter"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "CoverageDateFilter": {
        "type": "object",
        "properties": {
          "endInclusive": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeTimestamp"
              },
              {
                "description": "A timestamp representing the end of the time period to filter results by."
              }
            ]
          },
          "startInclusive": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeTimestamp"
              },
              {
                "description": "A timestamp representing the start of the time period to filter results by."
              }
            ]
          }
        },
        "description": "Contains details of a coverage date filter."
      },
      "DateTimeTimestamp": {
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://inspector2.us-east-1.amazonaws.com/coverage/list{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**coveredResources**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
