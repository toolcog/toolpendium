{
  "name": "CreateJob",
  "description": "Creates an Amazon Braket job.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "algorithmSpecification",
          "clientToken",
          "deviceConfig",
          "instanceConfig",
          "jobName",
          "outputDataConfig",
          "roleArn"
        ],
        "properties": {
          "algorithmSpecification": {
            "description": "Defines the Amazon Braket job to be created. Specifies the container image the job uses and the paths to the Python scripts used for entry and training.",
            "type": "object",
            "properties": {
              "containerImage": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ContainerImage"
                  },
                  {
                    "description": "The container image used to create an Amazon Braket job."
                  }
                ]
              },
              "scriptModeConfig": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ScriptModeConfig"
                  },
                  {
                    "description": "Configures the paths to the Python scripts used for entry and training."
                  }
                ]
              }
            }
          },
          "checkpointConfig": {
            "description": "Contains information about the output locations for job checkpoint data.",
            "type": "object",
            "properties": {
              "localPath": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String4096"
                  },
                  {
                    "description": "(Optional) The local directory where checkpoints are written. The default directory is <code>/opt/braket/checkpoints/</code>."
                  }
                ]
              },
              "s3Uri": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Path"
                  },
                  {
                    "description": "Identifies the S3 path where you want Amazon Braket to store checkpoints. For example, <code>s3://bucket-name/key-name-prefix</code>."
                  }
                ]
              }
            }
          },
          "clientToken": {
            "description": "A unique token that guarantees that the call to this API is idempotent.",
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "deviceConfig": {
            "description": "Configures the quantum processing units (QPUs) or simulator used to create and run an Amazon Braket job.",
            "type": "object",
            "properties": {
              "device": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String256"
                  },
                  {
                    "description": "The primary quantum processing unit (QPU) or simulator used to create and run an Amazon Braket job."
                  }
                ]
              }
            }
          },
          "hyperParameters": {
            "description": "Algorithm-specific parameters used by an Amazon Braket job that influence the quality of the training job. The values are set with a string of JSON key:value pairs, where the key is the name of the hyperparameter and the value is the value of th hyperparameter.",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 100,
            "additionalProperties": {
              "$ref": "#/$defs/HyperParametersValueString"
            }
          },
          "inputDataConfig": {
            "description": "A list of parameters that specify the name and type of input data and where it is located.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/InputFileConfig"
            },
            "minItems": 0,
            "maxItems": 20
          },
          "instanceConfig": {
            "description": "Configures the resource instances to use while running the Amazon Braket hybrid job on Amazon Braket.",
            "type": "object",
            "properties": {
              "instanceCount": {
                "allOf": [
                  {
                    "$ref": "#/$defs/InstanceConfigInstanceCountInteger"
                  },
                  {
                    "description": "Configures the number of resource instances to use while running an Amazon Braket job on Amazon Braket. The default value is 1."
                  }
                ]
              },
              "instanceType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/InstanceType"
                  },
                  {
                    "description": "Configures the type resource instances to use while running an Amazon Braket hybrid job."
                  }
                ]
              },
              "volumeSizeInGb": {
                "allOf": [
                  {
                    "$ref": "#/$defs/InstanceConfigVolumeSizeInGbInteger"
                  },
                  {
                    "description": "The size of the storage volume, in GB, that user wants to provision."
                  }
                ]
              }
            }
          },
          "jobName": {
            "description": "The name of the Amazon Braket job.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,50}$",
            "minLength": 1,
            "maxLength": 50
          },
          "outputDataConfig": {
            "description": "Specifies the path to the S3 location where you want to store job artifacts and the encryption key used to store them.",
            "type": "object",
            "properties": {
              "kmsKeyId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String2048"
                  },
                  {
                    "description": "The AWS Key Management Service (AWS KMS) key that Amazon Braket uses to encrypt the job training artifacts at rest using Amazon S3 server-side encryption."
                  }
                ]
              },
              "s3Path": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Path"
                  },
                  {
                    "description": "Identifies the S3 path where you want Amazon Braket to store the job training artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>."
                  }
                ]
              }
            }
          },
          "roleArn": {
            "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon Braket can assume to perform tasks on behalf of a user. It can access user resources, run an Amazon Braket job container on behalf of user, and output resources to the users' s3 buckets.",
            "type": "string",
            "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
          },
          "stoppingCondition": {
            "description": "Specifies limits for how long an Amazon Braket job can run. ",
            "type": "object",
            "properties": {
              "maxRuntimeInSeconds": {
                "allOf": [
                  {
                    "$ref": "#/$defs/JobStoppingConditionMaxRuntimeInSecondsInteger"
                  },
                  {
                    "description": "The maximum length of time, in seconds, that an Amazon Braket job can run."
                  }
                ]
              }
            }
          },
          "tags": {
            "description": "A tag object that consists of a key and an optional value, used to manage metadata for Amazon Braket resources.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/String"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ContainerImage": {
        "type": "object",
        "required": [
          "uri"
        ],
        "properties": {
          "uri": {
            "allOf": [
              {
                "$ref": "#/$defs/Uri"
              },
              {
                "description": "The URI locating the container image."
              }
            ]
          }
        },
        "description": "The container image used to create an Amazon Braket job."
      },
      "Uri": {
        "type": "string",
        "pattern": "\\d{10,14}\\.dkr\\.ecr.[a-z0-9-]+\\.amazonaws\\.com\\/.+(@sha256)?:.+",
        "minLength": 1,
        "maxLength": 255
      },
      "ScriptModeConfig": {
        "type": "object",
        "required": [
          "entryPoint",
          "s3Uri"
        ],
        "properties": {
          "compressionType": {
            "allOf": [
              {
                "$ref": "#/$defs/CompressionType"
              },
              {
                "description": "The type of compression used by the Python scripts for an Amazon Braket job."
              }
            ]
          },
          "entryPoint": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The path to the Python script that serves as the entry point for an Amazon Braket job."
              }
            ]
          },
          "s3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Path"
              },
              {
                "description": "The URI that specifies the S3 path to the Python script module that contains the training script used by an Amazon Braket job."
              }
            ]
          }
        },
        "description": "Contains information about the Python scripts used for entry and by an Amazon Braket job."
      },
      "CompressionType": {
        "type": "string",
        "enum": [
          "NONE",
          "GZIP"
        ]
      },
      "String": {
        "type": "string"
      },
      "S3Path": {
        "type": "string",
        "pattern": "^(https|s3)://([^/]+)/?(.*)$",
        "minLength": 0,
        "maxLength": 1024
      },
      "String4096": {
        "type": "string",
        "minLength": 1,
        "maxLength": 4096
      },
      "String256": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "HyperParametersValueString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2500
      },
      "InputFileConfig": {
        "type": "object",
        "required": [
          "channelName",
          "dataSource"
        ],
        "properties": {
          "channelName": {
            "allOf": [
              {
                "$ref": "#/$defs/InputFileConfigChannelNameString"
              },
              {
                "description": "A named input source that an Amazon Braket job can consume."
              }
            ]
          },
          "contentType": {
            "allOf": [
              {
                "$ref": "#/$defs/String256"
              },
              {
                "description": "The MIME type of the data."
              }
            ]
          },
          "dataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSource"
              },
              {
                "description": "The location of the channel data."
              }
            ]
          }
        },
        "description": "A list of parameters that specify the input channels, type of input data, and where it is located."
      },
      "InputFileConfigChannelNameString": {
        "type": "string",
        "pattern": "^[A-Za-z0-9\\.\\-_]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "DataSource": {
        "type": "object",
        "required": [
          "s3DataSource"
        ],
        "properties": {
          "s3DataSource": {
            "allOf": [
              {
                "$ref": "#/$defs/S3DataSource"
              },
              {
                "description": "Information about the data stored in Amazon S3 used by the Amazon Braket job."
              }
            ]
          }
        },
        "description": "Information about the source of the data used by the Amazon Braket job."
      },
      "S3DataSource": {
        "type": "object",
        "required": [
          "s3Uri"
        ],
        "properties": {
          "s3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Path"
              },
              {
                "description": "Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest that locates the S3 data source."
              }
            ]
          }
        },
        "description": "Information about the data stored in Amazon S3 used by the Amazon Braket job."
      },
      "InstanceConfigInstanceCountInteger": {
        "type": "integer",
        "minimum": 1
      },
      "InstanceType": {
        "type": "string",
        "enum": [
          "ml.m4.xlarge",
          "ml.m4.2xlarge",
          "ml.m4.4xlarge",
          "ml.m4.10xlarge",
          "ml.m4.16xlarge",
          "ml.g4dn.xlarge",
          "ml.g4dn.2xlarge",
          "ml.g4dn.4xlarge",
          "ml.g4dn.8xlarge",
          "ml.g4dn.12xlarge",
          "ml.g4dn.16xlarge",
          "ml.m5.large",
          "ml.m5.xlarge",
          "ml.m5.2xlarge",
          "ml.m5.4xlarge",
          "ml.m5.12xlarge",
          "ml.m5.24xlarge",
          "ml.c4.xlarge",
          "ml.c4.2xlarge",
          "ml.c4.4xlarge",
          "ml.c4.8xlarge",
          "ml.p2.xlarge",
          "ml.p2.8xlarge",
          "ml.p2.16xlarge",
          "ml.p3.2xlarge",
          "ml.p3.8xlarge",
          "ml.p3.16xlarge",
          "ml.p3dn.24xlarge",
          "ml.p4d.24xlarge",
          "ml.c5.xlarge",
          "ml.c5.2xlarge",
          "ml.c5.4xlarge",
          "ml.c5.9xlarge",
          "ml.c5.18xlarge",
          "ml.c5n.xlarge",
          "ml.c5n.2xlarge",
          "ml.c5n.4xlarge",
          "ml.c5n.9xlarge",
          "ml.c5n.18xlarge"
        ]
      },
      "InstanceConfigVolumeSizeInGbInteger": {
        "type": "integer",
        "minimum": 1
      },
      "String2048": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "JobStoppingConditionMaxRuntimeInSecondsInteger": {
        "type": "integer",
        "minimum": 1,
        "maximum": 432000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://braket.us-east-1.amazonaws.com/job"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**jobArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
