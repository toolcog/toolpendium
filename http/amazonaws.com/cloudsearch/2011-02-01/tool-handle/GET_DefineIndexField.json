{
  "name": "GET_DefineIndexField",
  "description": "Configures an <code>IndexField</code> for the search domain. Used to create new fields and modify existing ones. If the field exists, the new configuration replaces the old one. You can configure a maximum of 200 index fields.",
  "parameters": {
    "type": "object",
    "properties": {
      "DomainName": {
        "type": "string",
        "pattern": "[a-z][a-z0-9\\-]+",
        "description": "",
        "minLength": 3,
        "maxLength": 28
      },
      "IndexField": {
        "type": "object",
        "required": [
          "IndexFieldName",
          "IndexFieldType"
        ],
        "properties": {
          "IndexFieldName": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldName"
              },
              {
                "description": "The name of a field in the search index. Field names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Uppercase letters and hyphens are not allowed. The names \"body\", \"docid\", and \"text_relevance\" are reserved and cannot be specified as field or rank expression names."
              }
            ]
          },
          "IndexFieldType": {
            "allOf": [
              {
                "$ref": "#/$defs/IndexFieldType"
              },
              {
                "description": "The type of field. Based on this type, exactly one of the <a>UIntOptions</a>, <a>LiteralOptions</a> or <a>TextOptions</a> must be present."
              }
            ]
          },
          "UIntOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/UIntOptions"
              },
              {
                "description": "Options for an unsigned integer field. Present if <code>IndexFieldType</code> specifies the field is of type unsigned integer."
              }
            ]
          },
          "LiteralOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/LiteralOptions"
              },
              {
                "description": "Options for literal field. Present if <code>IndexFieldType</code> specifies the field is of type literal."
              }
            ]
          },
          "TextOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TextOptions"
              },
              {
                "description": "Options for text field. Present if <code>IndexFieldType</code> specifies the field is of type text."
              }
            ]
          },
          "SourceAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceAttributeList"
              },
              {
                "description": "An optional list of source attributes that provide data for this index field. If not specified, the data is pulled from a source attribute with the same name as this <code>IndexField</code>. When one or more source attributes are specified, an optional data transformation can be applied to the source data when populating the index field. You can configure a maximum of 20 sources for an <code>IndexField</code>."
              }
            ]
          }
        },
        "description": ""
      },
      "Action": {
        "type": "string",
        "enum": [
          "DefineIndexField"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2011-02-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "DomainName",
      "IndexField",
      "Action",
      "Version"
    ],
    "$defs": {
      "FieldName": {
        "type": "string",
        "pattern": "[a-z][a-z0-9_]*",
        "description": "A string that represents the name of an index field. Field names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Uppercase letters and hyphens are not allowed. The names \"body\", \"docid\", and \"text_relevance\" are reserved and cannot be specified as field or rank expression names.",
        "minLength": 1,
        "maxLength": 64
      },
      "IndexFieldType": {
        "type": "string",
        "enum": [
          "uint",
          "literal",
          "text"
        ],
        "description": "The type of <code>IndexField</code>."
      },
      "UIntOptions": {
        "type": "object",
        "properties": {
          "DefaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/UIntValue"
              },
              {
                "description": "The default value for an unsigned integer field. Optional."
              }
            ]
          }
        },
        "description": "Options that define a <code>uint</code> field in the search index."
      },
      "UIntValue": {
        "type": "integer",
        "minimum": 0
      },
      "LiteralOptions": {
        "type": "object",
        "properties": {
          "DefaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldValue"
              },
              {
                "description": "The default value for a literal field. Optional."
              }
            ]
          },
          "SearchEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether search is enabled for this field. Default: False."
              }
            ]
          },
          "FacetEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether facets are enabled for this field. Default: False."
              }
            ]
          },
          "ResultEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether values of this field can be returned in search results and used for ranking. Default: False."
              }
            ]
          }
        },
        "description": "Options that define a literal field in the search index."
      },
      "FieldValue": {
        "type": "string",
        "description": "The value of a field or source document attribute.",
        "minLength": 0,
        "maxLength": 1024
      },
      "Boolean": {
        "type": "boolean"
      },
      "TextOptions": {
        "type": "object",
        "properties": {
          "DefaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldValue"
              },
              {
                "description": "The default value for a text field. Optional."
              }
            ]
          },
          "FacetEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether facets are enabled for this field. Default: False."
              }
            ]
          },
          "ResultEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies whether values of this field can be returned in search results and used for ranking. Default: False."
              }
            ]
          },
          "TextProcessor": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldName"
              },
              {
                "description": "<p>The text processor to apply to this field. Optional. Possible values:</p> <ul> <li> <code>cs_text_no_stemming</code>: turns off stemming for the field.</li> </ul> <p>Default: none</p>"
              }
            ]
          }
        },
        "description": "Options that define a text field in the search index."
      },
      "SourceAttributeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SourceAttribute"
        }
      },
      "SourceAttribute": {
        "type": "object",
        "required": [
          "SourceDataFunction"
        ],
        "properties": {
          "SourceDataFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceDataFunction"
              },
              {
                "description": "Identifies the transformation to apply when copying data from a source attribute."
              }
            ]
          },
          "SourceDataCopy": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceData"
              },
              {
                "description": "Copies data from a source document attribute to an <code>IndexField</code>."
              }
            ]
          },
          "SourceDataTrimTitle": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceDataTrimTitle"
              },
              {
                "description": "Trims common title words from a source document attribute when populating an <code>IndexField</code>. This can be used to create an <code>IndexField</code> you can use for sorting."
              }
            ]
          },
          "SourceDataMap": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceDataMap"
              },
              {
                "description": "Maps source document attribute values to new values when populating the <code>IndexField</code>."
              }
            ]
          }
        },
        "description": "Identifies the source data for an index field. An optional data transformation can be applied to the source data when populating the index field. By default, the value of the source attribute is copied to the index field."
      },
      "SourceDataFunction": {
        "type": "string",
        "enum": [
          "Copy",
          "TrimTitle",
          "Map"
        ]
      },
      "SourceData": {
        "type": "object",
        "required": [
          "SourceName"
        ],
        "properties": {
          "SourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldName"
              },
              {
                "description": "The name of the document source field to add to this <code>IndexField</code>."
              }
            ]
          },
          "DefaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldValue"
              },
              {
                "description": "The default value to use if the source attribute is not specified in a document. Optional."
              }
            ]
          }
        },
        "description": "The source attribute name and an optional default value to use if a document doesn't have an attribute of that name."
      },
      "SourceDataTrimTitle": {
        "type": "object",
        "required": [
          "SourceName"
        ],
        "properties": {
          "SourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldName"
              },
              {
                "description": "The name of the document source field to add to this <code>IndexField</code>."
              }
            ]
          },
          "DefaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldValue"
              },
              {
                "description": "The default value to use if the source attribute is not specified in a document. Optional."
              }
            ]
          },
          "Separator": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The separator that follows the text to trim."
              }
            ]
          },
          "Language": {
            "$ref": "#/$defs/Language"
          }
        },
        "description": "Specifies how to trim common words from the beginning of a field to enable title sorting by that field."
      },
      "String": {
        "type": "string"
      },
      "Language": {
        "type": "string",
        "pattern": "[a-zA-Z]{2,8}(?:-[a-zA-Z]{2,8})*",
        "description": "An <a href=\"http://tools.ietf.org/html/rfc4646\">IETF RFC 4646</a> language code. Only the primary language is considered. English (en) is currently the only supported language."
      },
      "SourceDataMap": {
        "type": "object",
        "required": [
          "SourceName"
        ],
        "properties": {
          "SourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldName"
              },
              {
                "description": "The name of the document source field to add to this <code>IndexField</code>."
              }
            ]
          },
          "DefaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldValue"
              },
              {
                "description": "The default value to use if the source attribute is not specified in a document. Optional."
              }
            ]
          },
          "Cases": {
            "allOf": [
              {
                "$ref": "#/$defs/StringCaseMap"
              },
              {
                "description": "A map that translates source field values to custom values."
              }
            ]
          }
        },
        "description": "Specifies how to map source attribute values to custom values when populating an <code>IndexField</code>."
      },
      "StringCaseMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/FieldValue"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://cloudsearch.us-east-1.amazonaws.com/#Action=DefineIndexField{?DomainName,IndexField,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A response message that contains the status of an updated index field.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**IndexField**: The value of an <code>IndexField</code> and its current status.",
              {
                "$ul": [
                  [
                    "**Options**: Defines a field in the index, including its name, type, and the source of its data. The <code>IndexFieldType</code> indicates which of the options will be present. It is invalid to specify options for a type other than the <code>IndexFieldType</code>.",
                    {
                      "$ul": [
                        "**IndexFieldName**",
                        "**IndexFieldType**",
                        "**UIntOptions**",
                        "**LiteralOptions**",
                        "**TextOptions**",
                        "**SourceAttributes**"
                      ]
                    }
                  ],
                  [
                    "**Status**: The status of an option, including when it was last updated and whether it is actively in use for searches.",
                    {
                      "$ul": [
                        "**CreationDate**",
                        "**UpdateDate**",
                        "**UpdateVersion**",
                        "**State**",
                        "**PendingDeletion**"
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The request was rejected because it attempted to reference a resource that does not exist.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An error occurred while processing the request.",
        "**Key properties:**",
        {
          "$ul": [
            "**Code**: A machine-parsable string error or warning code.",
            "**Message**: A human-readable string error or warning message."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An internal error occurred while processing the request. If this problem persists, report an issue from the <a href=\"http://status.aws.amazon.com/\">Service Health Dashboard</a>.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
