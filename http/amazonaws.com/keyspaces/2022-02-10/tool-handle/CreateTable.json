{
  "name": "CreateTable",
  "description": "<p>The <code>CreateTable</code> operation adds a new table to the specified keyspace. Within a keyspace, table names must be unique.</p> <p> <code>CreateTable</code> is an asynchronous operation. When the request is received, the status of the table is set to <code>CREATING</code>. You can monitor the creation status of the new table by using the <code>GetTable</code> operation, which returns the current <code>status</code> of the table. You can start using a table when the status is <code>ACTIVE</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/working-with-tables.html#tables-create\">Creating tables</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "KeyspacesService.CreateTable"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateTableRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateTableRequest": {
        "type": "object",
        "required": [
          "keyspaceName",
          "tableName",
          "schemaDefinition"
        ],
        "title": "CreateTableRequest",
        "properties": {
          "keyspaceName": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyspaceName"
              },
              {
                "description": "The name of the keyspace that the table is going to be created in."
              }
            ]
          },
          "tableName": {
            "allOf": [
              {
                "$ref": "#/$defs/TableName"
              },
              {
                "description": "The name of the table."
              }
            ]
          },
          "schemaDefinition": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaDefinition"
              },
              {
                "description": "<p>The <code>schemaDefinition</code> consists of the following parameters.</p> <p>For each column to be created:</p> <ul> <li> <p> <code>name</code> - The name of the column.</p> </li> <li> <p> <code>type</code> - An Amazon Keyspaces data type. For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/cql.elements.html#cql.data-types\">Data types</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p> </li> </ul> <p>The primary key of the table consists of the following columns:</p> <ul> <li> <p> <code>partitionKeys</code> - The partition key can be a single column, or it can be a compound value composed of two or more columns. The partition key portion of the primary key is required and determines how Amazon Keyspaces stores your data.</p> </li> <li> <p> <code>name</code> - The name of each partition key column.</p> </li> <li> <p> <code>clusteringKeys</code> - The optional clustering column portion of your primary key determines how the data is clustered and sorted within each partition.</p> </li> <li> <p> <code>name</code> - The name of the clustering column. </p> </li> <li> <p> <code>orderBy</code> - Sets the ascendant (<code>ASC</code>) or descendant (<code>DESC</code>) order modifier.</p> <p>To define a column as static use <code>staticColumns</code> - Static columns store values that are shared by all rows in the same partition:</p> </li> <li> <p> <code>name</code> - The name of the column.</p> </li> <li> <p> <code>type</code> - An Amazon Keyspaces data type.</p> </li> </ul>"
              }
            ]
          },
          "comment": {
            "allOf": [
              {
                "$ref": "#/$defs/Comment"
              },
              {
                "description": "This parameter allows to enter a description of the table."
              }
            ]
          },
          "capacitySpecification": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacitySpecification"
              },
              {
                "description": "<p>Specifies the read/write throughput capacity mode for the table. The options are:</p> <ul> <li> <p> <code>throughputMode:PAY_PER_REQUEST</code> and </p> </li> <li> <p> <code>throughputMode:PROVISIONED</code> - Provisioned capacity mode requires <code>readCapacityUnits</code> and <code>writeCapacityUnits</code> as input.</p> </li> </ul> <p>The default is <code>throughput_mode:PAY_PER_REQUEST</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html\">Read/write capacity modes</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
              }
            ]
          },
          "encryptionSpecification": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionSpecification"
              },
              {
                "description": "<p>Specifies how the encryption key for encryption at rest is managed for the table. You can choose one of the following KMS key (KMS key):</p> <ul> <li> <p> <code>type:AWS_OWNED_KMS_KEY</code> - This key is owned by Amazon Keyspaces. </p> </li> <li> <p> <code>type:CUSTOMER_MANAGED_KMS_KEY</code> - This key is stored in your account and is created, owned, and managed by you. This option requires the <code>kms_key_identifier</code> of the KMS key in Amazon Resource Name (ARN) format as input.</p> </li> </ul> <p>The default is <code>type:AWS_OWNED_KMS_KEY</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\">Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
              }
            ]
          },
          "pointInTimeRecovery": {
            "allOf": [
              {
                "$ref": "#/$defs/PointInTimeRecovery"
              },
              {
                "description": "<p>Specifies if <code>pointInTimeRecovery</code> is enabled or disabled for the table. The options are:</p> <ul> <li> <p> <code>status=ENABLED</code> </p> </li> <li> <p> <code>status=DISABLED</code> </p> </li> </ul> <p>If it's not specified, the default is <code>status=DISABLED</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html\">Point-in-time recovery</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
              }
            ]
          },
          "ttl": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeToLive"
              },
              {
                "description": "<p>Enables Time to Live custom settings for the table. The options are:</p> <ul> <li> <p> <code>status:enabled</code> </p> </li> <li> <p> <code>status:disabled</code> </p> </li> </ul> <p>The default is <code>status:disabled</code>. After <code>ttl</code> is enabled, you can't disable it for the table.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html\">Expiring data by using Amazon Keyspaces Time to Live (TTL)</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
              }
            ]
          },
          "defaultTimeToLive": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultTimeToLive"
              },
              {
                "description": "<p>The default Time to Live setting in seconds for the table.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl\">Setting the default TTL value for a table</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "<p>A list of key-value pair tags to be attached to the resource. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/tagging-keyspaces.html\">Adding tags and labels to Amazon Keyspaces resources</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
              }
            ]
          },
          "clientSideTimestamps": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientSideTimestamps"
              },
              {
                "description": "<p> Enables client-side timestamps for the table. By default, the setting is disabled. You can enable client-side timestamps with the following option:</p> <ul> <li> <p> <code>status: \"enabled\"</code> </p> </li> </ul> <p>Once client-side timestamps are enabled for a table, this setting cannot be disabled.</p>"
              }
            ]
          }
        }
      },
      "KeyspaceName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_]{0,47}",
        "minLength": 1,
        "maxLength": 48
      },
      "TableName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_]{0,47}",
        "minLength": 1,
        "maxLength": 48
      },
      "SchemaDefinition": {
        "type": "object",
        "required": [
          "allColumns",
          "partitionKeys"
        ],
        "properties": {
          "allColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnDefinitionList"
              },
              {
                "description": "The regular columns of the table."
              }
            ]
          },
          "partitionKeys": {
            "allOf": [
              {
                "$ref": "#/$defs/PartitionKeyList"
              },
              {
                "description": "The columns that are part of the partition key of the table ."
              }
            ]
          },
          "clusteringKeys": {
            "allOf": [
              {
                "$ref": "#/$defs/ClusteringKeyList"
              },
              {
                "description": "The columns that are part of the clustering key of the table."
              }
            ]
          },
          "staticColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/StaticColumnList"
              },
              {
                "description": "The columns that have been defined as <code>STATIC</code>. Static columns store values that are shared by all rows in the same partition."
              }
            ]
          }
        },
        "description": "Describes the schema of the table."
      },
      "ColumnDefinitionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnDefinition"
        },
        "minItems": 1
      },
      "ColumnDefinition": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericString"
              },
              {
                "description": "The name of the column."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericString"
              },
              {
                "description": "The data type of the column. For a list of available data types, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/cql.elements.html#cql.data-types\">Data types</a> in the <i>Amazon Keyspaces Developer Guide</i>."
              }
            ]
          }
        },
        "description": "The names and data types of regular columns."
      },
      "GenericString": {
        "type": "string"
      },
      "PartitionKeyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PartitionKey"
        },
        "minItems": 1
      },
      "PartitionKey": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericString"
              },
              {
                "description": "The name(s) of the partition key column(s)."
              }
            ]
          }
        },
        "description": "The partition key portion of the primary key is required and determines how Amazon Keyspaces stores the data. The partition key can be a single column, or it can be a compound value composed of two or more columns."
      },
      "ClusteringKeyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ClusteringKey"
        }
      },
      "ClusteringKey": {
        "type": "object",
        "required": [
          "name",
          "orderBy"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericString"
              },
              {
                "description": "The name(s) of the clustering column(s)."
              }
            ]
          },
          "orderBy": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "Sets the ascendant (<code>ASC</code>) or descendant (<code>DESC</code>) order modifier."
              }
            ]
          }
        },
        "description": "The optional clustering column portion of your primary key determines how the data is clustered and sorted within each partition."
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "StaticColumnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StaticColumn"
        }
      },
      "StaticColumn": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericString"
              },
              {
                "description": "The name of the static column."
              }
            ]
          }
        },
        "description": "The static columns of the table. Static columns store values that are shared by all rows in the same partition."
      },
      "Comment": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "An optional description of the table."
              }
            ]
          }
        },
        "description": "An optional comment that describes the table."
      },
      "String": {
        "type": "string"
      },
      "CapacitySpecification": {
        "type": "object",
        "required": [
          "throughputMode"
        ],
        "properties": {
          "throughputMode": {
            "allOf": [
              {
                "$ref": "#/$defs/ThroughputMode"
              },
              {
                "description": "<p>The read/write throughput capacity mode for a table. The options are:</p> <ul> <li> <p> <code>throughputMode:PAY_PER_REQUEST</code> and </p> </li> <li> <p> <code>throughputMode:PROVISIONED</code> - Provisioned capacity mode requires <code>readCapacityUnits</code> and <code>writeCapacityUnits</code> as input.</p> </li> </ul> <p>The default is <code>throughput_mode:PAY_PER_REQUEST</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html\">Read/write capacity modes</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
              }
            ]
          },
          "readCapacityUnits": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacityUnits"
              },
              {
                "description": "The throughput capacity specified for <code>read</code> operations defined in <code>read capacity units</code> <code>(RCUs)</code>."
              }
            ]
          },
          "writeCapacityUnits": {
            "allOf": [
              {
                "$ref": "#/$defs/CapacityUnits"
              },
              {
                "description": "The throughput capacity specified for <code>write</code> operations defined in <code>write capacity units</code> <code>(WCUs)</code>."
              }
            ]
          }
        },
        "description": "<p>Amazon Keyspaces has two read/write capacity modes for processing reads and writes on your tables: </p> <ul> <li> <p>On-demand (default)</p> </li> <li> <p>Provisioned</p> </li> </ul> <p>The read/write capacity mode that you choose controls how you are charged for read and write throughput and how table throughput capacity is managed.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html\">Read/write capacity modes</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      },
      "ThroughputMode": {
        "type": "string",
        "enum": [
          "PAY_PER_REQUEST",
          "PROVISIONED"
        ]
      },
      "CapacityUnits": {
        "type": "integer",
        "minimum": 1
      },
      "EncryptionSpecification": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionType"
              },
              {
                "description": "<p>The encryption option specified for the table. You can choose one of the following KMS keys (KMS keys):</p> <ul> <li> <p> <code>type:AWS_OWNED_KMS_KEY</code> - This key is owned by Amazon Keyspaces. </p> </li> <li> <p> <code>type:CUSTOMER_MANAGED_KMS_KEY</code> - This key is stored in your account and is created, owned, and managed by you. This option requires the <code>kms_key_identifier</code> of the KMS key in Amazon Resource Name (ARN) format as input. </p> </li> </ul> <p>The default is <code>type:AWS_OWNED_KMS_KEY</code>. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\">Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
              }
            ]
          },
          "kmsKeyIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/kmsKeyARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the customer managed KMS key, for example <code>kms_key_identifier:ARN</code>."
              }
            ]
          }
        },
        "description": "<p>Amazon Keyspaces encrypts and decrypts the table data at rest transparently and integrates with Key Management Service for storing and managing the encryption key. You can choose one of the following KMS keys (KMS keys):</p> <ul> <li> <p>Amazon Web Services owned key - This is the default encryption type. The key is owned by Amazon Keyspaces (no additional charge). </p> </li> <li> <p>Customer managed key - This key is stored in your account and is created, owned, and managed by you. You have full control over the customer managed key (KMS charges apply).</p> </li> </ul> <p>For more information about encryption at rest in Amazon Keyspaces, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\">Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p> <p>For more information about KMS, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html\">KMS management service concepts</a> in the <i>Key Management Service Developer Guide</i>.</p>"
      },
      "EncryptionType": {
        "type": "string",
        "enum": [
          "CUSTOMER_MANAGED_KMS_KEY",
          "AWS_OWNED_KMS_KEY"
        ]
      },
      "kmsKeyARN": {
        "type": "string",
        "minLength": 1,
        "maxLength": 5096
      },
      "PointInTimeRecovery": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/$defs/PointInTimeRecoveryStatus"
              },
              {
                "description": "<p>The options are:</p> <ul> <li> <p> <code>status=ENABLED</code> </p> </li> <li> <p> <code>status=DISABLED</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "<p>Point-in-time recovery (PITR) helps protect your Amazon Keyspaces tables from accidental write or delete operations by providing you continuous backups of your table data.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html\">Point-in-time recovery</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      },
      "PointInTimeRecoveryStatus": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "TimeToLive": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeToLiveStatus"
              },
              {
                "description": "Shows how to enable custom Time to Live (TTL) settings for the specified table."
              }
            ]
          }
        },
        "description": "<p>Enable custom Time to Live (TTL) settings for rows and columns without setting a TTL default for the specified table.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_enabling\">Enabling TTL on tables</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      },
      "TimeToLiveStatus": {
        "type": "string",
        "enum": [
          "ENABLED"
        ]
      },
      "DefaultTimeToLive": {
        "type": "integer",
        "minimum": 1,
        "maximum": 630720000
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 1,
        "maxItems": 60
      },
      "Tag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key of the tag. Tag keys are case sensitive. Each Amazon Keyspaces resource can only have up to one tag with the same key. If you try to add an existing tag (same key), the existing tag value will be updated to the new value."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of the tag. Tag values are case-sensitive and can be null."
              }
            ]
          }
        },
        "description": "<p>Describes a tag. A tag is a key-value pair. You can add up to 50 tags to a single Amazon Keyspaces resource.</p> <p>Amazon Web Services-assigned tag names and values are automatically assigned the <code>aws:</code> prefix, which the user cannot assign. Amazon Web Services-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix <code>user:</code> in the Cost Allocation Report. You cannot backdate the application of a tag.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/tagging-keyspaces.html\">Adding tags and labels to Amazon Keyspaces resources</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "ClientSideTimestamps": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientSideTimestampsStatus"
              },
              {
                "description": "Shows how to enable client-side timestamps settings for the specified table."
              }
            ]
          }
        },
        "description": "<p>The client-side timestamp setting of the table.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/keyspaces/latest/devguide/client-side-timestamps-how-it-works.html\">How it works: Amazon Keyspaces client-side timestamps</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>"
      },
      "ClientSideTimestampsStatus": {
        "type": "string",
        "enum": [
          "ENABLED"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cassandra.us-east-1.amazonaws.com/#X-Amz-Target=KeyspacesService.CreateTable"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**resourceArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
