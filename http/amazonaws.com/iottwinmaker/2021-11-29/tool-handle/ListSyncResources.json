{
  "name": "ListSyncResources",
  "description": "Lists the sync resources.",
  "parameters": {
    "type": "object",
    "properties": {
      "workspaceId": {
        "type": "string",
        "pattern": "[a-zA-Z_0-9][a-zA-Z_\\-0-9]*[a-zA-Z0-9]+",
        "minLength": 1,
        "maxLength": 128,
        "description": "The ID of the workspace that contains the sync job."
      },
      "syncSource": {
        "type": "string",
        "pattern": "[a-zA-Z_0-9]+",
        "description": "<p>The sync source.</p> <note> <p>Currently the only supported syncSource is <code>SITEWISE </code>.</p> </note>"
      },
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "filters": {
            "description": "<p>A list of objects that filter the request.</p> <p>The following filter combinations are supported:</p> <ul> <li> <p>Filter with state</p> </li> <li> <p>Filter with ResourceType and ResourceId</p> </li> <li> <p>Filter with ResourceType and ExternalId</p> </li> </ul>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/SyncResourceFilter"
            }
          },
          "maxResults": {
            "description": "<p>The maximum number of results to return at one time. The default is 50.</p> <p>Valid Range: Minimum value of 0. Maximum value of 200.</p>",
            "type": "integer",
            "minimum": 0,
            "maximum": 200
          },
          "nextToken": {
            "description": "The string that specifies the next page of results.",
            "type": "string",
            "pattern": ".*",
            "minLength": 0,
            "maxLength": 17880
          }
        }
      }
    },
    "required": [
      "workspaceId",
      "syncSource",
      "body"
    ],
    "$defs": {
      "SyncResourceFilter": {
        "type": "object",
        "properties": {
          "state": {
            "allOf": [
              {
                "$ref": "#/$defs/SyncResourceState"
              },
              {
                "description": "The sync resource filter's state."
              }
            ]
          },
          "resourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/SyncResourceType"
              },
              {
                "description": "The sync resource filter resource type"
              }
            ]
          },
          "resourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The sync resource filter resource ID."
              }
            ]
          },
          "externalId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The external ID."
              }
            ]
          }
        },
        "description": "The sync resource filter."
      },
      "SyncResourceState": {
        "type": "string",
        "enum": [
          "INITIALIZING",
          "PROCESSING",
          "DELETED",
          "IN_SYNC",
          "ERROR"
        ]
      },
      "SyncResourceType": {
        "type": "string",
        "enum": [
          "ENTITY",
          "COMPONENT_TYPE"
        ]
      },
      "Id": {
        "type": "string",
        "pattern": "[a-zA-Z_0-9][a-zA-Z_\\-0-9]*[a-zA-Z0-9]+",
        "minLength": 1,
        "maxLength": 128
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iottwinmaker.us-east-1.amazonaws.com/workspaces/{workspaceId}/sync-jobs/{syncSource}/resources-list{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**syncResources**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
