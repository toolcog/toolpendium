{
  "name": "CreateScene",
  "description": "Creates a scene.",
  "parameters": {
    "type": "object",
    "properties": {
      "workspaceId": {
        "type": "string",
        "pattern": "[a-zA-Z_0-9][a-zA-Z_\\-0-9]*[a-zA-Z0-9]+",
        "minLength": 1,
        "maxLength": 128,
        "description": "The ID of the workspace that contains the scene."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "sceneId",
          "contentLocation"
        ],
        "properties": {
          "sceneId": {
            "description": "The ID of the scene.",
            "type": "string",
            "pattern": "[a-zA-Z_0-9][a-zA-Z_\\-0-9]*[a-zA-Z0-9]+",
            "minLength": 1,
            "maxLength": 128
          },
          "contentLocation": {
            "description": "The relative path that specifies the location of the content definition file.",
            "type": "string",
            "pattern": "[sS]3://[A-Za-z0-9._/-]+",
            "minLength": 0,
            "maxLength": 256
          },
          "description": {
            "description": "The description for this scene.",
            "type": "string",
            "pattern": ".*",
            "minLength": 0,
            "maxLength": 2048
          },
          "capabilities": {
            "description": "A list of capabilities that the scene uses to render itself.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/SceneCapability"
            },
            "minItems": 0,
            "maxItems": 50
          },
          "tags": {
            "description": "Metadata that you can use to manage the scene.",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "sceneMetadata": {
            "description": "The request metadata.",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/SceneMetadataValue"
            }
          }
        }
      }
    },
    "required": [
      "workspaceId",
      "body"
    ],
    "$defs": {
      "SceneCapability": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 256
      },
      "TagValue": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 256
      },
      "SceneMetadataValue": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iottwinmaker.us-east-1.amazonaws.com/workspaces/{workspaceId}/scenes"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**arn**",
            "**creationDateTime**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
