{
  "name": "UpdateAnswer",
  "description": "Update the answer to a specific question in a workload review.",
  "parameters": {
    "type": "object",
    "properties": {
      "WorkloadId": {
        "type": "string",
        "pattern": "[0-9a-f]{32}",
        "description": "",
        "minLength": 32,
        "maxLength": 32
      },
      "LensAlias": {
        "type": "string",
        "description": "",
        "minLength": 1,
        "maxLength": 128
      },
      "QuestionId": {
        "type": "string",
        "description": "",
        "minLength": 1,
        "maxLength": 128
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "SelectedChoices": {
            "description": "<p>List of selected choice IDs in a question answer.</p> <p>The values entered replace the previously selected choices.</p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ChoiceId"
            }
          },
          "ChoiceUpdates": {
            "description": "A list of choices to update on a question in your workload. The String key corresponds to the choice ID to be updated.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/ChoiceUpdate"
            }
          },
          "Notes": {
            "description": "The notes associated with the workload.",
            "type": "string",
            "maxLength": 2084
          },
          "IsApplicable": {
            "description": "Defines whether this question is applicable to a lens review.",
            "type": "boolean"
          },
          "Reason": {
            "description": "The reason why a question is not applicable to your workload.",
            "type": "string",
            "enum": [
              "OUT_OF_SCOPE",
              "BUSINESS_PRIORITIES",
              "ARCHITECTURE_CONSTRAINTS",
              "OTHER",
              "NONE"
            ]
          }
        }
      }
    },
    "required": [
      "WorkloadId",
      "LensAlias",
      "QuestionId",
      "body"
    ],
    "$defs": {
      "ChoiceId": {
        "type": "string",
        "description": "The ID of a choice.",
        "minLength": 1,
        "maxLength": 64
      },
      "ChoiceUpdate": {
        "type": "object",
        "required": [
          "Status"
        ],
        "properties": {
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/ChoiceStatus"
              },
              {
                "description": "The status of a choice."
              }
            ]
          },
          "Reason": {
            "allOf": [
              {
                "$ref": "#/$defs/ChoiceReason"
              },
              {
                "description": "The reason why a choice is non-applicable to a question in your workload."
              }
            ]
          },
          "Notes": {
            "allOf": [
              {
                "$ref": "#/$defs/ChoiceNotes"
              },
              {
                "description": "The notes associated with a choice."
              }
            ]
          }
        },
        "description": "A list of choices to be updated."
      },
      "ChoiceStatus": {
        "type": "string",
        "enum": [
          "SELECTED",
          "NOT_APPLICABLE",
          "UNSELECTED"
        ]
      },
      "ChoiceReason": {
        "type": "string",
        "enum": [
          "OUT_OF_SCOPE",
          "BUSINESS_PRIORITIES",
          "ARCHITECTURE_CONSTRAINTS",
          "OTHER",
          "NONE"
        ]
      },
      "ChoiceNotes": {
        "type": "string",
        "maxLength": 250
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "http://wellarchitected.us-east-1.amazonaws.com/workloads/{WorkloadId}/lensReviews/{LensAlias}/answers/{QuestionId}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Output of a update answer call.",
        "**Key properties:**",
        {
          "$ul": [
            "**WorkloadId**: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.",
            "**LensAlias**: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>",
            "**LensArn**",
            [
              "**Answer**: An answer of the question.",
              {
                "$ul": [
                  "**QuestionId**: The ID of the question.",
                  "**PillarId**: <p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>",
                  "**QuestionTitle**: The title of the question.",
                  "**QuestionDescription**: The description of the question.",
                  "**ImprovementPlanUrl**: <p>The improvement plan URL for a question in an Amazon Web Services official lenses.</p> <p>This value is only available if the question has been answered.</p> <p>This value does not apply to custom lenses.</p>",
                  "**HelpfulResourceUrl**: <p>The helpful resource URL.</p> <p>For Amazon Web Services official lenses, this is the helpful resource URL for a question or choice.</p> <p>For custom lenses, this is the helpful resource URL for a question and is only provided if <code>HelpfulResourceDisplayText</code> was specified for the question.</p>",
                  "**HelpfulResourceDisplayText**",
                  "**Choices**: List of choices available for a question.",
                  "**SelectedChoices**: <p>List of selected choice IDs in a question answer.</p> <p>The values entered replace the previously selected choices.</p>",
                  "**ChoiceAnswers**",
                  "**IsApplicable**: Defines whether this question is applicable to a lens review.",
                  "**Risk**: The risk for a given workload, lens review, pillar, or question.",
                  "**Notes**: The notes associated with the workload.",
                  "**Reason**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
