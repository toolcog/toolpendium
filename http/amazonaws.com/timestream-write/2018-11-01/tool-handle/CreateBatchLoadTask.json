{
  "name": "CreateBatchLoadTask",
  "description": "Creates a new Timestream batch load task. A batch load task processes data from a CSV source in an S3 location and writes to a Timestream table. A mapping from source to target is defined in a batch load task. Errors and events are written to a report at an S3 location. For the report, if the KMS key is not specified, the report will be encrypted with an S3 managed key when <code>SSE_S3</code> is the option. Otherwise an error is thrown. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk\">Amazon Web Services managed keys</a>. <a href=\"https://docs.aws.amazon.com/timestream/latest/developerguide/ts-limits.html\">Service quotas apply</a>. For details, see <a href=\"https://docs.aws.amazon.com/timestream/latest/developerguide/code-samples.create-batch-load.html\">code sample</a>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Timestream_20181101.CreateBatchLoadTask"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateBatchLoadTaskRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateBatchLoadTaskRequest": {
        "type": "object",
        "required": [
          "DataSourceConfiguration",
          "ReportConfiguration",
          "TargetDatabaseName",
          "TargetTableName"
        ],
        "title": "CreateBatchLoadTaskRequest",
        "properties": {
          "ClientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientRequestToken"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "DataModelConfiguration": {
            "$ref": "#/$defs/DataModelConfiguration"
          },
          "DataSourceConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSourceConfiguration"
              },
              {
                "description": "Defines configuration details about the data source for a batch load task."
              }
            ]
          },
          "ReportConfiguration": {
            "$ref": "#/$defs/ReportConfiguration"
          },
          "TargetDatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceCreateAPIName"
              },
              {
                "description": "Target Timestream database for a batch load task."
              }
            ]
          },
          "TargetTableName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceCreateAPIName"
              },
              {
                "description": "Target Timestream table for a batch load task."
              }
            ]
          },
          "RecordVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordVersion"
              },
              {
                "description": "<p/>"
              }
            ]
          }
        }
      },
      "ClientRequestToken": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64,
        "format": "password"
      },
      "DataModelConfiguration": {
        "type": "object",
        "properties": {
          "DataModel": {
            "allOf": [
              {
                "$ref": "#/$defs/DataModel"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "DataModelS3Configuration": {
            "allOf": [
              {
                "$ref": "#/$defs/DataModelS3Configuration"
              },
              {
                "description": "<p/>"
              }
            ]
          }
        },
        "description": "<p/>"
      },
      "DataModel": {
        "type": "object",
        "required": [
          "DimensionMappings"
        ],
        "properties": {
          "TimeColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/StringValue256"
              },
              {
                "description": "Source column to be mapped to time."
              }
            ]
          },
          "TimeUnit": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeUnit"
              },
              {
                "description": " The granularity of the timestamp unit. It indicates if the time value is in seconds, milliseconds, nanoseconds, or other supported values. Default is <code>MILLISECONDS</code>. "
              }
            ]
          },
          "DimensionMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionMappings"
              },
              {
                "description": "Source to target mappings for dimensions."
              }
            ]
          },
          "MultiMeasureMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/MultiMeasureMappings"
              },
              {
                "description": "Source to target mappings for multi-measure records."
              }
            ]
          },
          "MixedMeasureMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/MixedMeasureMappingList"
              },
              {
                "description": "Source to target mappings for measures."
              }
            ]
          },
          "MeasureNameColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/StringValue256"
              },
              {
                "description": "<p/>"
              }
            ]
          }
        },
        "description": "Data model for a batch load task."
      },
      "StringValue256": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "TimeUnit": {
        "type": "string",
        "enum": [
          "MILLISECONDS",
          "SECONDS",
          "MICROSECONDS",
          "NANOSECONDS"
        ]
      },
      "DimensionMappings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionMapping"
        },
        "minItems": 1
      },
      "DimensionMapping": {
        "type": "object",
        "properties": {
          "SourceColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaName"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "DestinationColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaName"
              },
              {
                "description": " "
              }
            ]
          }
        },
        "description": "<p/>"
      },
      "SchemaName": {
        "type": "string",
        "minLength": 1
      },
      "MultiMeasureMappings": {
        "type": "object",
        "required": [
          "MultiMeasureAttributeMappings"
        ],
        "properties": {
          "TargetMultiMeasureName": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaName"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "MultiMeasureAttributeMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/MultiMeasureAttributeMappingList"
              },
              {
                "description": "<p/>"
              }
            ]
          }
        },
        "description": "<p/>"
      },
      "MultiMeasureAttributeMappingList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MultiMeasureAttributeMapping"
        },
        "minItems": 1
      },
      "MultiMeasureAttributeMapping": {
        "type": "object",
        "required": [
          "SourceColumn"
        ],
        "properties": {
          "SourceColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaName"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "TargetMultiMeasureAttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaName"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "MeasureValueType": {
            "allOf": [
              {
                "$ref": "#/$defs/ScalarMeasureValueType"
              },
              {
                "description": "<p/>"
              }
            ]
          }
        },
        "description": "<p/>"
      },
      "ScalarMeasureValueType": {
        "type": "string",
        "enum": [
          "DOUBLE",
          "BIGINT",
          "BOOLEAN",
          "VARCHAR",
          "TIMESTAMP"
        ]
      },
      "MixedMeasureMappingList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MixedMeasureMapping"
        },
        "minItems": 1
      },
      "MixedMeasureMapping": {
        "type": "object",
        "required": [
          "MeasureValueType"
        ],
        "properties": {
          "MeasureName": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaName"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "SourceColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaName"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "TargetMeasureName": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaName"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "MeasureValueType": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureValueType"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "MultiMeasureAttributeMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/MultiMeasureAttributeMappingList"
              },
              {
                "description": "<p/>"
              }
            ]
          }
        },
        "description": "<p/>"
      },
      "MeasureValueType": {
        "type": "string",
        "enum": [
          "DOUBLE",
          "BIGINT",
          "VARCHAR",
          "BOOLEAN",
          "TIMESTAMP",
          "MULTI"
        ]
      },
      "DataModelS3Configuration": {
        "type": "object",
        "properties": {
          "BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BucketName"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "ObjectKey": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ObjectKey"
              },
              {
                "description": "<p/>"
              }
            ]
          }
        },
        "description": "<p/>"
      },
      "S3BucketName": {
        "type": "string",
        "pattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
        "minLength": 3,
        "maxLength": 63
      },
      "S3ObjectKey": {
        "type": "string",
        "pattern": "[a-zA-Z0-9|!\\-_*'\\(\\)]([a-zA-Z0-9]|[!\\-_*'\\(\\)\\/.])+",
        "minLength": 1,
        "maxLength": 1024
      },
      "DataSourceConfiguration": {
        "type": "object",
        "required": [
          "DataSourceS3Configuration",
          "DataFormat"
        ],
        "properties": {
          "DataSourceS3Configuration": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSourceS3Configuration"
              },
              {
                "description": "Configuration of an S3 location for a file which contains data to load."
              }
            ]
          },
          "CsvConfiguration": {
            "$ref": "#/$defs/CsvConfiguration"
          },
          "DataFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchLoadDataFormat"
              },
              {
                "description": "This is currently CSV."
              }
            ]
          }
        },
        "description": "Defines configuration details about the data source."
      },
      "DataSourceS3Configuration": {
        "type": "object",
        "required": [
          "BucketName"
        ],
        "properties": {
          "BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BucketName"
              },
              {
                "description": "The bucket name of the customer S3 bucket."
              }
            ]
          },
          "ObjectKeyPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ObjectKey"
              },
              {
                "description": " "
              }
            ]
          }
        },
        "description": " "
      },
      "CsvConfiguration": {
        "type": "object",
        "properties": {
          "ColumnSeparator": {
            "allOf": [
              {
                "$ref": "#/$defs/StringValue1"
              },
              {
                "description": "Column separator can be one of comma (','), pipe ('|), semicolon (';'), tab('/t'), or blank space (' '). "
              }
            ]
          },
          "EscapeChar": {
            "allOf": [
              {
                "$ref": "#/$defs/StringValue1"
              },
              {
                "description": "Escape character can be one of "
              }
            ]
          },
          "QuoteChar": {
            "allOf": [
              {
                "$ref": "#/$defs/StringValue1"
              },
              {
                "description": "Can be single quote (') or double quote (\")."
              }
            ]
          },
          "NullValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StringValue256"
              },
              {
                "description": "Can be blank space (' ')."
              }
            ]
          },
          "TrimWhiteSpace": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies to trim leading and trailing white space."
              }
            ]
          }
        },
        "description": "A delimited data format where the column separator can be a comma and the record separator is a newline character."
      },
      "StringValue1": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1
      },
      "Boolean": {
        "type": "boolean"
      },
      "BatchLoadDataFormat": {
        "type": "string",
        "enum": [
          "CSV"
        ]
      },
      "ReportConfiguration": {
        "type": "object",
        "properties": {
          "ReportS3Configuration": {
            "allOf": [
              {
                "$ref": "#/$defs/ReportS3Configuration"
              },
              {
                "description": "Configuration of an S3 location to write error reports and events for a batch load."
              }
            ]
          }
        },
        "description": "Report configuration for a batch load task. This contains details about where error reports are stored."
      },
      "ReportS3Configuration": {
        "type": "object",
        "required": [
          "BucketName"
        ],
        "properties": {
          "BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BucketName"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "ObjectKeyPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ObjectKeyPrefix"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "EncryptionOption": {
            "allOf": [
              {
                "$ref": "#/$defs/S3EncryptionOption"
              },
              {
                "description": "<p/>"
              }
            ]
          },
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/StringValue2048"
              },
              {
                "description": "<p/>"
              }
            ]
          }
        },
        "description": "<p/>"
      },
      "S3ObjectKeyPrefix": {
        "type": "string",
        "pattern": "[a-zA-Z0-9|!\\-_*'\\(\\)]([a-zA-Z0-9]|[!\\-_*'\\(\\)\\/.])+",
        "minLength": 1,
        "maxLength": 928
      },
      "S3EncryptionOption": {
        "type": "string",
        "enum": [
          "SSE_S3",
          "SSE_KMS"
        ]
      },
      "StringValue2048": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "ResourceCreateAPIName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+"
      },
      "RecordVersion": {
        "type": "integer"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ingest.timestream.us-east-1.amazonaws.com/#X-Amz-Target=Timestream_20181101.CreateBatchLoadTask"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**TaskId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
