{
  "name": "UpdateProjectDataDelivery",
  "description": "<p>Updates the data storage options for this project. If you store evaluation events, you an keep them and analyze them on your own. If you choose not to store evaluation events, Evidently deletes them after using them to produce metrics and other experiment results that you can view.</p> <p>You can't specify both <code>cloudWatchLogs</code> and <code>s3Destination</code> in the same operation.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "pattern": "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)",
        "minLength": 0,
        "maxLength": 2048,
        "description": "The name or ARN of the project that you want to modify the data storage options for."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "cloudWatchLogs": {
            "description": "A structure containing the CloudWatch Logs log group where the project stores evaluation events.",
            "type": "object",
            "properties": {
              "logGroup": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CwLogGroupSafeName"
                  },
                  {
                    "description": "The name of the log group where the project stores evaluation events."
                  }
                ]
              }
            }
          },
          "s3Destination": {
            "description": "If the project stores evaluation events in an Amazon S3 bucket, this structure stores the bucket name and bucket prefix.",
            "type": "object",
            "properties": {
              "bucket": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3BucketSafeName"
                  },
                  {
                    "description": "The name of the bucket in which Evidently stores evaluation events."
                  }
                ]
              },
              "prefix": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3PrefixSafeName"
                  },
                  {
                    "description": "The bucket prefix in which Evidently stores evaluation events."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "project",
      "body"
    ],
    "$defs": {
      "CwLogGroupSafeName": {
        "type": "string",
        "pattern": "^[-a-zA-Z0-9._/]+$",
        "minLength": 1,
        "maxLength": 512
      },
      "S3BucketSafeName": {
        "type": "string",
        "pattern": "^[a-z0-9][-a-z0-9]*[a-z0-9]$",
        "minLength": 3,
        "maxLength": 63
      },
      "S3PrefixSafeName": {
        "type": "string",
        "pattern": "^[-a-zA-Z0-9!_.*'()/]*$",
        "minLength": 1,
        "maxLength": 1024
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "http://evidently.us-east-1.amazonaws.com/projects/{project}/data-delivery"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**project**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
