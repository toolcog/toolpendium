{
  "name": "BatchEvaluateFeature",
  "description": "<p>This operation assigns feature variation to user sessions. For each user session, you pass in an <code>entityID</code> that represents the user. Evidently then checks the evaluation rules and assigns the variation.</p> <p>The first rules that are evaluated are the override rules. If the user's <code>entityID</code> matches an override rule, the user is served the variation specified by that rule.</p> <p>Next, if there is a launch of the feature, the user might be assigned to a variation in the launch. The chance of this depends on the percentage of users that are allocated to that launch. If the user is enrolled in the launch, the variation they are served depends on the allocation of the various feature variations used for the launch.</p> <p>If the user is not assigned to a launch, and there is an ongoing experiment for this feature, the user might be assigned to a variation in the experiment. The chance of this depends on the percentage of users that are allocated to that experiment. If the user is enrolled in the experiment, the variation they are served depends on the allocation of the various feature variations used for the experiment. </p> <p>If the user is not assigned to a launch or experiment, they are served the default variation.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "pattern": "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)",
        "minLength": 0,
        "maxLength": 2048,
        "description": "The name or ARN of the project that contains the feature being evaluated."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "requests"
        ],
        "properties": {
          "requests": {
            "description": "An array of structures, where each structure assigns a feature variation to one user session.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/EvaluationRequest"
            },
            "minItems": 1,
            "maxItems": 20
          }
        }
      }
    },
    "required": [
      "project",
      "body"
    ],
    "$defs": {
      "EvaluationRequest": {
        "type": "object",
        "required": [
          "entityId",
          "feature"
        ],
        "properties": {
          "entityId": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityId"
              },
              {
                "description": "An internal ID that represents a unique user session of the application. This <code>entityID</code> is checked against any override rules assigned for this feature."
              }
            ]
          },
          "evaluationContext": {
            "allOf": [
              {
                "$ref": "#/$defs/JsonValue"
              },
              {
                "description": "A JSON block of attributes that you can optionally pass in. This JSON block is included in the evaluation events sent to Evidently from the user session. "
              }
            ]
          },
          "feature": {
            "allOf": [
              {
                "$ref": "#/$defs/FeatureName"
              },
              {
                "description": "The name of the feature being evaluated."
              }
            ]
          }
        },
        "description": "This structure assigns a feature variation to one user session."
      },
      "EntityId": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 512
      },
      "JsonValue": {
        "type": "string"
      },
      "FeatureName": {
        "type": "string",
        "pattern": "^[-a-zA-Z0-9._]*$",
        "minLength": 1,
        "maxLength": 127
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://evidently.us-east-1.amazonaws.com/projects/{project}/evaluations"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**results**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
