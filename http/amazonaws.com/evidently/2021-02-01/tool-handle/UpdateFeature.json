{
  "name": "UpdateFeature",
  "description": "<p>Updates an existing feature.</p> <p>You can't use this operation to update the tags of an existing feature. Instead, use <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html\">TagResource</a>. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "feature": {
        "type": "string",
        "pattern": "^[-a-zA-Z0-9._]*$",
        "minLength": 1,
        "maxLength": 127,
        "description": "The name of the feature to be updated."
      },
      "project": {
        "type": "string",
        "pattern": "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)",
        "minLength": 0,
        "maxLength": 2048,
        "description": "The name or ARN of the project that contains the feature to be updated."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "addOrUpdateVariations": {
            "description": "To update variation configurations for this feature, or add new ones, specify this structure. In this array, include any variations that you want to add or update. If the array includes a variation name that already exists for this feature, it is updated. If it includes a new variation name, it is added as a new variation.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/VariationConfig"
            },
            "minItems": 1,
            "maxItems": 5
          },
          "defaultVariation": {
            "description": "The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.",
            "type": "string",
            "pattern": "^[-a-zA-Z0-9._]*$",
            "minLength": 1,
            "maxLength": 127
          },
          "description": {
            "description": "An optional description of the feature.",
            "type": "string",
            "pattern": ".*",
            "minLength": 0,
            "maxLength": 160
          },
          "entityOverrides": {
            "description": "<p>Specified users that should always be served a specific variation of a feature. Each user is specified by a key-value pair . For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.</p> <p>This parameter is limited to 2500 overrides or a total of 40KB. The 40KB limit includes an overhead of 6 bytes per override.</p>",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 2500,
            "additionalProperties": {
              "$ref": "#/$defs/VariationName"
            }
          },
          "evaluationStrategy": {
            "description": "Specify <code>ALL_RULES</code> to activate the traffic allocation specified by any ongoing launches or experiments. Specify <code>DEFAULT_VARIATION</code> to serve the default variation to all users instead.",
            "type": "string",
            "enum": [
              "ALL_RULES",
              "DEFAULT_VARIATION"
            ]
          },
          "removeVariations": {
            "description": "<p>Removes a variation from the feature. If the variation you specify doesn't exist, then this makes no change and does not report an error.</p> <p>This operation fails if you try to remove a variation that is part of an ongoing launch or experiment.</p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/VariationName"
            },
            "minItems": 0,
            "maxItems": 5
          }
        }
      }
    },
    "required": [
      "feature",
      "project",
      "body"
    ],
    "$defs": {
      "VariationConfig": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/VariationName"
              },
              {
                "description": "The name of the variation."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/VariableValue"
              },
              {
                "description": "The value assigned to this variation."
              }
            ]
          }
        },
        "description": "This structure contains the name and variation value of one variation of a feature."
      },
      "VariationName": {
        "type": "string",
        "pattern": "^[-a-zA-Z0-9._]*$",
        "minLength": 1,
        "maxLength": 127
      },
      "VariableValue": {
        "type": "object",
        "properties": {
          "boolValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "If this feature uses the Boolean variation type, this field contains the Boolean value of this variation."
              }
            ]
          },
          "doubleValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "If this feature uses the double integer variation type, this field contains the double integer value of this variation."
              }
            ]
          },
          "longValue": {
            "allOf": [
              {
                "$ref": "#/$defs/VariableValueLongValueLong"
              },
              {
                "description": "If this feature uses the long variation type, this field contains the long value of this variation."
              }
            ]
          },
          "stringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/VariableValueStringValueString"
              },
              {
                "description": "If this feature uses the string variation type, this field contains the string value of this variation."
              }
            ]
          }
        },
        "description": "The value assigned to a feature variation. This structure must contain exactly one field. It can be <code>boolValue</code>, <code>doubleValue</code>, <code>longValue</code>, or <code>stringValue</code>."
      },
      "Boolean": {
        "type": "boolean"
      },
      "Double": {
        "type": "number",
        "format": "double"
      },
      "VariableValueLongValueLong": {
        "type": "integer",
        "minimum": -9007199254740991,
        "maximum": 9007199254740991
      },
      "VariableValueStringValueString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 512
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "http://evidently.us-east-1.amazonaws.com/projects/{project}/features/{feature}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**feature**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
