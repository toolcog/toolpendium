openapi: 3.0.0
info:
  version: '2021-02-01'
  x-release: v4
  title: Amazon CloudWatch Evidently
  description: <p>You can use Amazon CloudWatch Evidently to safely validate new features by serving them to a specified percentage of your users while you roll out the feature. You can monitor the performance of the new feature to help you decide when to ramp up traffic to your users. This helps you reduce risk and identify unintended consequences before you fully launch the feature.</p> <p>You can also conduct A/B experiments to make feature design decisions based on evidence and data. An experiment can test as many as five variations at once. Evidently collects experiment data and analyzes it using statistical methods. It also provides clear recommendations about which variations perform better. You can test both user-facing features and backend features.</p>
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: evidently
  x-aws-signingName: evidently
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/evidently-2021-02-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/evidently/'
servers:
  - url: 'http://evidently.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon CloudWatch Evidently multi-region endpoint
  - url: 'https://evidently.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon CloudWatch Evidently multi-region endpoint
  - url: 'http://evidently.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon CloudWatch Evidently endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://evidently.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon CloudWatch Evidently endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/projects/{project}/evaluations':
    post:
      operationId: BatchEvaluateFeature
      description: '<p>This operation assigns feature variation to user sessions. For each user session, you pass in an <code>entityID</code> that represents the user. Evidently then checks the evaluation rules and assigns the variation.</p> <p>The first rules that are evaluated are the override rules. If the user''s <code>entityID</code> matches an override rule, the user is served the variation specified by that rule.</p> <p>Next, if there is a launch of the feature, the user might be assigned to a variation in the launch. The chance of this depends on the percentage of users that are allocated to that launch. If the user is enrolled in the launch, the variation they are served depends on the allocation of the various feature variations used for the launch.</p> <p>If the user is not assigned to a launch, and there is an ongoing experiment for this feature, the user might be assigned to a variation in the experiment. The chance of this depends on the percentage of users that are allocated to that experiment. If the user is enrolled in the experiment, the variation they are served depends on the allocation of the various feature variations used for the experiment. </p> <p>If the user is not assigned to a launch or experiment, they are served the default variation.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchEvaluateFeatureResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the feature being evaluated.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requests
              properties:
                requests:
                  description: 'An array of structures, where each structure assigns a feature variation to one user session.'
                  type: array
                  items:
                    $ref: '#/components/schemas/EvaluationRequest'
                  minItems: 1
                  maxItems: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{project}/experiments':
    post:
      operationId: CreateExperiment
      description: '<p>Creates an Evidently <i>experiment</i>. Before you create an experiment, you must create the feature to use for the experiment.</p> <p>An experiment helps you make feature design decisions based on evidence and data. An experiment can test as many as five variations at once. Evidently collects experiment data and analyzes it by statistical methods, and provides clear recommendations about which variations perform better.</p> <p>You can optionally specify a <code>segment</code> to have the experiment consider only certain audience types in the experiment, such as using only user sessions from a certain location or who use a certain internet browser.</p> <p>Don''t use this operation to update an existing experiment. Instead, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateExperiment.html">UpdateExperiment</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExperimentResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that you want to create the new experiment in.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - metricGoals
                - name
                - treatments
              properties:
                description:
                  description: An optional description of the experiment.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 160
                metricGoals:
                  description: 'An array of structures that defines the metrics used for the experiment, and whether a higher or lower value for each metric is the goal.'
                  type: array
                  items:
                    $ref: '#/components/schemas/MetricGoalConfig'
                  minItems: 1
                  maxItems: 3
                name:
                  description: A name for the new experiment.
                  type: string
                  pattern: '^[-a-zA-Z0-9._]*$'
                  minLength: 1
                  maxLength: 127
                onlineAbConfig:
                  description: A structure that contains the configuration of which variation to use as the "control" version. The "control" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.
                  type: object
                  properties:
                    controlTreatmentName:
                      allOf:
                        - $ref: '#/components/schemas/TreatmentName'
                        - description: The name of the variation that is to be the default variation that the other variations are compared to.
                    treatmentWeights:
                      allOf:
                        - $ref: '#/components/schemas/TreatmentToWeightMap'
                        - description: 'A set of key-value pairs. The keys are variation names, and the values are the portion of experiment traffic to be assigned to that variation. Specify the traffic portion in thousandths of a percent, so 20,000 for a variation would allocate 20% of the experiment traffic to that variation.'
                randomizationSalt:
                  description: 'When Evidently assigns a particular user session to an experiment, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>, Evidently uses the experiment name as the <code>randomizationSalt</code>.'
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 127
                samplingRate:
                  description: '<p>The portion of the available audience that you want to allocate to this experiment, in thousandths of a percent. The available audience is the total audience minus the audience that you have allocated to overrides or current launches of this feature.</p> <p>This is represented in thousandths of a percent. For example, specify 10,000 to allocate 10% of the available audience.</p>'
                  type: integer
                  minimum: 0
                  maximum: 100000
                segment:
                  description: 'Specifies an audience <i>segment</i> to use in the experiment. When a segment is used in an experiment, only user sessions that match the segment pattern are used in the experiment.'
                  type: string
                  pattern: '(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)'
                  minLength: 0
                  maxLength: 2048
                tags:
                  description: '<p>Assigns one or more tags (key-value pairs) to the experiment.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p> <p>You can associate as many as 50 tags with an experiment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                treatments:
                  description: An array of structures that describe the configuration of each feature variation used in the experiment.
                  type: array
                  items:
                    $ref: '#/components/schemas/TreatmentConfig'
                  minItems: 0
                  maxItems: 5
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListExperiments
      description: Returns configuration details about all the experiments in the specified project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExperimentsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to include in the response.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token to use when requesting the next set of results. You received this token from a previous <code>ListExperiments</code> operation.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 8192
        - name: project
          in: path
          required: true
          description: The name or ARN of the project to return the experiment list from.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
        - name: status
          in: query
          required: false
          description: Use this optional parameter to limit the returned results to only the experiments with the status that you specify here.
          schema:
            type: string
            enum:
              - CREATED
              - UPDATING
              - RUNNING
              - COMPLETED
              - CANCELLED
  '/projects/{project}/features':
    post:
      operationId: CreateFeature
      description: '<p>Creates an Evidently <i>feature</i> that you want to launch or test. You can define up to five variations of a feature, and use these variations in your launches and experiments. A feature must be created in a project. For information about creating a project, see <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateProject.html">CreateProject</a>.</p> <p>Don''t use this operation to update an existing feature. Instead, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateFeature.html">UpdateFeature</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeatureResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that is to contain the new feature.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - variations
              properties:
                defaultVariation:
                  description: '<p>The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.</p> <p>This variation must also be listed in the <code>variations</code> structure.</p> <p>If you omit <code>defaultVariation</code>, the first variation listed in the <code>variations</code> structure is used as the default variation.</p>'
                  type: string
                  pattern: '^[-a-zA-Z0-9._]*$'
                  minLength: 1
                  maxLength: 127
                description:
                  description: An optional description of the feature.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 160
                entityOverrides:
                  description: '<p>Specify users that should always be served a specific variation of a feature. Each user is specified by a key-value pair . For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.</p> <p>This parameter is limited to 2500 overrides or a total of 40KB. The 40KB limit includes an overhead of 6 bytes per override.</p>'
                  type: object
                  minProperties: 0
                  maxProperties: 2500
                  additionalProperties:
                    $ref: '#/components/schemas/VariationName'
                evaluationStrategy:
                  description: Specify <code>ALL_RULES</code> to activate the traffic allocation specified by any ongoing launches or experiments. Specify <code>DEFAULT_VARIATION</code> to serve the default variation to all users instead.
                  type: string
                  enum:
                    - ALL_RULES
                    - DEFAULT_VARIATION
                name:
                  description: The name for the new feature.
                  type: string
                  pattern: '^[-a-zA-Z0-9._]*$'
                  minLength: 1
                  maxLength: 127
                tags:
                  description: '<p>Assigns one or more tags (key-value pairs) to the feature.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p> <p>You can associate as many as 50 tags with a feature.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                variations:
                  description: An array of structures that contain the configuration of the feature's different variations.
                  type: array
                  items:
                    $ref: '#/components/schemas/VariationConfig'
                  minItems: 1
                  maxItems: 5
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListFeatures
      description: Returns configuration details about all the features in the specified project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeaturesResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to include in the response.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token to use when requesting the next set of results. You received this token from a previous <code>ListFeatures</code> operation.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 8192
        - name: project
          in: path
          required: true
          description: The name or ARN of the project to return the feature list from.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
  '/projects/{project}/launches':
    post:
      operationId: CreateLaunch
      description: '<p>Creates a <i>launch</i> of a given feature. Before you create a launch, you must create the feature to use for the launch.</p> <p>You can use a launch to safely validate new features by serving them to a specified percentage of your users while you roll out the feature. You can monitor the performance of the new feature to help you decide when to ramp up traffic to more users. This helps you reduce risk and identify unintended consequences before you fully launch the feature.</p> <p>Don''t use this operation to update an existing launch. Instead, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateLaunch.html">UpdateLaunch</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLaunchResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that you want to create the launch in.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - groups
                - name
              properties:
                description:
                  description: An optional description for the launch.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 160
                groups:
                  description: An array of structures that contains the feature and variations that are to be used for the launch.
                  type: array
                  items:
                    $ref: '#/components/schemas/LaunchGroupConfig'
                  minItems: 1
                  maxItems: 5
                metricMonitors:
                  description: An array of structures that define the metrics that will be used to monitor the launch performance.
                  type: array
                  items:
                    $ref: '#/components/schemas/MetricMonitorConfig'
                  minItems: 0
                  maxItems: 3
                name:
                  description: The name for the new launch.
                  type: string
                  pattern: '^[-a-zA-Z0-9._]*$'
                  minLength: 1
                  maxLength: 127
                randomizationSalt:
                  description: 'When Evidently assigns a particular user session to a launch, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>, Evidently uses the launch name as the <code>randomizationSalt</code>.'
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 127
                scheduledSplitsConfig:
                  description: An array of structures that define the traffic allocation percentages among the feature variations during each step of a launch. This also defines the start time of each step.
                  type: object
                  properties:
                    steps:
                      allOf:
                        - $ref: '#/components/schemas/ScheduledSplitConfigList'
                        - description: An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch. This also defines the start time of each step.
                tags:
                  description: '<p>Assigns one or more tags (key-value pairs) to the launch.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p> <p>You can associate as many as 50 tags with a launch.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListLaunches
      description: Returns configuration details about all the launches in the specified project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLaunchesResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to include in the response.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token to use when requesting the next set of results. You received this token from a previous <code>ListLaunches</code> operation.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 8192
        - name: project
          in: path
          required: true
          description: The name or ARN of the project to return the launch list from.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
        - name: status
          in: query
          required: false
          description: Use this optional parameter to limit the returned results to only the launches with the status that you specify here.
          schema:
            type: string
            enum:
              - CREATED
              - UPDATING
              - RUNNING
              - COMPLETED
              - CANCELLED
  /projects:
    post:
      operationId: CreateProject
      description: '<p>Creates a project, which is the logical object in Evidently that can contain features, launches, and experiments. Use projects to group similar features together.</p> <p>To update an existing project, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateProject.html">UpdateProject</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                appConfigResource:
                  description: '<p>Use this parameter to configure client-side evaluation for your project. Client-side evaluation allows your application to assign variations to user sessions locally instead of by calling the <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html">EvaluateFeature</a> operation to assign the variations. This mitigates the latency and availability risks that come with an API call.</p> <p> <code>ProjectAppConfigResource</code> is a structure that defines the configuration of how your application integrates with AppConfig to run client-side evaluation.</p>'
                  type: object
                  properties:
                    applicationId:
                      allOf:
                        - $ref: '#/components/schemas/AppConfigResourceId'
                        - description: 'The ID of the AppConfig application to use for client-side evaluation. '
                    environmentId:
                      allOf:
                        - $ref: '#/components/schemas/AppConfigResourceId'
                        - description: The ID of the AppConfig environment to use for client-side evaluation. This must be an environment that is within the application that you specify for <code>applicationId</code>.
                dataDelivery:
                  description: A structure that contains information about where Evidently is to store evaluation events for longer term storage.
                  type: object
                  properties:
                    cloudWatchLogs:
                      allOf:
                        - $ref: '#/components/schemas/CloudWatchLogsDestinationConfig'
                        - description: 'If the project stores evaluation events in CloudWatch Logs, this structure stores the log group name.'
                    s3Destination:
                      allOf:
                        - $ref: '#/components/schemas/S3DestinationConfig'
                        - description: 'If the project stores evaluation events in an Amazon S3 bucket, this structure stores the bucket name and bucket prefix.'
                description:
                  description: An optional description of the project.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 160
                name:
                  description: The name for the project.
                  type: string
                  pattern: '^[-a-zA-Z0-9._]*$'
                  minLength: 1
                  maxLength: 127
                tags:
                  description: '<p>Assigns one or more tags (key-value pairs) to the project.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p> <p>You can associate as many as 50 tags with a project.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListProjects
      description: Returns configuration details about all the projects in the current Region in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to include in the response.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: nextToken
          in: query
          required: false
          description: The token to use when requesting the next set of results. You received this token from a previous <code>ListProjects</code> operation.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 8192
  /segments:
    post:
      operationId: CreateSegment
      description: '<p>Use this operation to define a <i>segment</i> of your audience. A segment is a portion of your audience that share one or more characteristics. Examples could be Chrome browser users, users in Europe, or Firefox browser users in Europe who also fit other criteria that your application collects, such as age.</p> <p>Using a segment in an experiment limits that experiment to evaluate only the users who match the segment criteria. Using one or more segments in a launch allows you to define different traffic splits for the different audience segments.</p> <p>For more information about segment pattern syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html#CloudWatch-Evidently-segments-syntax.html"> Segment rule pattern syntax</a>.</p> <p>The pattern that you define for a segment is matched against the value of <code>evaluationContext</code>, which is passed into Evidently in the <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html">EvaluateFeature</a> operation, when Evidently assigns a feature variation to a user.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSegmentResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - pattern
              properties:
                description:
                  description: An optional description for this segment.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 160
                name:
                  description: A name for the segment.
                  type: string
                  pattern: '^[-a-zA-Z0-9._]*$'
                  minLength: 1
                  maxLength: 64
                pattern:
                  description: 'The pattern to use for the segment. For more information about pattern syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html#CloudWatch-Evidently-segments-syntax.html"> Segment rule pattern syntax</a>.'
                  type: string
                  minLength: 1
                  maxLength: 1024
                tags:
                  description: '<p>Assigns one or more tags (key-value pairs) to the segment.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p> <p>You can associate as many as 50 tags with a segment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListSegments
      description: Returns a list of audience segments that you have created in your account in this Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSegmentsResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to include in the response. If you omit this, the default of 50 is used.'
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: nextToken
          in: query
          required: false
          description: The token to use when requesting the next set of results. You received this token from a previous <code>ListSegments</code> operation.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 8192
  '/projects/{project}/experiments/{experiment}':
    delete:
      operationId: DeleteExperiment
      description: '<p>Deletes an Evidently experiment. The feature used for the experiment is not deleted.</p> <p>To stop an experiment without deleting it, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_StopExperiment.html">StopExperiment</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteExperimentResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: experiment
          in: path
          required: true
          description: The name of the experiment to delete.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the experiment to delete.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetExperiment
      description: 'Returns the details about one experiment. You must already know the experiment name. To retrieve a list of experiments in your account, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ListExperiments.html">ListExperiments</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExperimentResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: experiment
          in: path
          required: true
          description: The name of the experiment that you want to see the details of.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the experiment.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
    patch:
      operationId: UpdateExperiment
      description: '<p>Updates an Evidently experiment. </p> <p>Don''t use this operation to update an experiment''s tag. Instead, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html">TagResource</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExperimentResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: experiment
          in: path
          required: true
          description: The name of the experiment to update.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the experiment that you want to update.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: An optional description of the experiment.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 160
                metricGoals:
                  description: 'An array of structures that defines the metrics used for the experiment, and whether a higher or lower value for each metric is the goal.'
                  type: array
                  items:
                    $ref: '#/components/schemas/MetricGoalConfig'
                  minItems: 1
                  maxItems: 3
                onlineAbConfig:
                  description: A structure that contains the configuration of which variation to use as the "control" version. The "control" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.
                  type: object
                  properties:
                    controlTreatmentName:
                      allOf:
                        - $ref: '#/components/schemas/TreatmentName'
                        - description: The name of the variation that is to be the default variation that the other variations are compared to.
                    treatmentWeights:
                      allOf:
                        - $ref: '#/components/schemas/TreatmentToWeightMap'
                        - description: 'A set of key-value pairs. The keys are variation names, and the values are the portion of experiment traffic to be assigned to that variation. Specify the traffic portion in thousandths of a percent, so 20,000 for a variation would allocate 20% of the experiment traffic to that variation.'
                randomizationSalt:
                  description: 'When Evidently assigns a particular user session to an experiment, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>, Evidently uses the experiment name as the <code>randomizationSalt</code>.'
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 127
                removeSegment:
                  description: Removes a segment from being used in an experiment. You can't use this parameter if the experiment is currently running.
                  type: boolean
                samplingRate:
                  description: '<p>The portion of the available audience that you want to allocate to this experiment, in thousandths of a percent. The available audience is the total audience minus the audience that you have allocated to overrides or current launches of this feature.</p> <p>This is represented in thousandths of a percent. For example, specify 20,000 to allocate 20% of the available audience.</p>'
                  type: integer
                  minimum: 0
                  maximum: 100000
                segment:
                  description: 'Adds an audience <i>segment</i> to an experiment. When a segment is used in an experiment, only user sessions that match the segment pattern are used in the experiment. You can''t use this parameter if the experiment is currently running.'
                  type: string
                  pattern: '(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)'
                  minLength: 0
                  maxLength: 2048
                treatments:
                  description: An array of structures that define the variations being tested in the experiment.
                  type: array
                  items:
                    $ref: '#/components/schemas/TreatmentConfig'
                  minItems: 0
                  maxItems: 5
  '/projects/{project}/features/{feature}':
    delete:
      operationId: DeleteFeature
      description: Deletes an Evidently feature.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFeatureResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: feature
          in: path
          required: true
          description: The name of the feature to delete.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the feature to delete.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetFeature
      description: 'Returns the details about one feature. You must already know the feature name. To retrieve a list of features in your account, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ListFeatures.html">ListFeatures</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeatureResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: feature
          in: path
          required: true
          description: The name of the feature that you want to retrieve information for.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the feature.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
    patch:
      operationId: UpdateFeature
      description: '<p>Updates an existing feature.</p> <p>You can''t use this operation to update the tags of an existing feature. Instead, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html">TagResource</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFeatureResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: feature
          in: path
          required: true
          description: The name of the feature to be updated.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the feature to be updated.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addOrUpdateVariations:
                  description: 'To update variation configurations for this feature, or add new ones, specify this structure. In this array, include any variations that you want to add or update. If the array includes a variation name that already exists for this feature, it is updated. If it includes a new variation name, it is added as a new variation.'
                  type: array
                  items:
                    $ref: '#/components/schemas/VariationConfig'
                  minItems: 1
                  maxItems: 5
                defaultVariation:
                  description: The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.
                  type: string
                  pattern: '^[-a-zA-Z0-9._]*$'
                  minLength: 1
                  maxLength: 127
                description:
                  description: An optional description of the feature.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 160
                entityOverrides:
                  description: '<p>Specified users that should always be served a specific variation of a feature. Each user is specified by a key-value pair . For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.</p> <p>This parameter is limited to 2500 overrides or a total of 40KB. The 40KB limit includes an overhead of 6 bytes per override.</p>'
                  type: object
                  minProperties: 0
                  maxProperties: 2500
                  additionalProperties:
                    $ref: '#/components/schemas/VariationName'
                evaluationStrategy:
                  description: Specify <code>ALL_RULES</code> to activate the traffic allocation specified by any ongoing launches or experiments. Specify <code>DEFAULT_VARIATION</code> to serve the default variation to all users instead.
                  type: string
                  enum:
                    - ALL_RULES
                    - DEFAULT_VARIATION
                removeVariations:
                  description: '<p>Removes a variation from the feature. If the variation you specify doesn''t exist, then this makes no change and does not report an error.</p> <p>This operation fails if you try to remove a variation that is part of an ongoing launch or experiment.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/VariationName'
                  minItems: 0
                  maxItems: 5
  '/projects/{project}/launches/{launch}':
    delete:
      operationId: DeleteLaunch
      description: '<p>Deletes an Evidently launch. The feature used for the launch is not deleted.</p> <p>To stop a launch without deleting it, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_StopLaunch.html">StopLaunch</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLaunchResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: launch
          in: path
          required: true
          description: The name of the launch to delete.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the launch to delete.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLaunch
      description: 'Returns the details about one launch. You must already know the launch name. To retrieve a list of launches in your account, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ListLaunches.html">ListLaunches</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaunchResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: launch
          in: path
          required: true
          description: The name of the launch that you want to see the details of.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the launch.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
    patch:
      operationId: UpdateLaunch
      description: '<p>Updates a launch of a given feature. </p> <p>Don''t use this operation to update the tags of an existing launch. Instead, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html">TagResource</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLaunchResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: launch
          in: path
          required: true
          description: The name of the launch that is to be updated.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the launch that you want to update.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: An optional description for the launch.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 160
                groups:
                  description: An array of structures that contains the feature and variations that are to be used for the launch.
                  type: array
                  items:
                    $ref: '#/components/schemas/LaunchGroupConfig'
                  minItems: 1
                  maxItems: 5
                metricMonitors:
                  description: An array of structures that define the metrics that will be used to monitor the launch performance.
                  type: array
                  items:
                    $ref: '#/components/schemas/MetricMonitorConfig'
                  minItems: 0
                  maxItems: 3
                randomizationSalt:
                  description: 'When Evidently assigns a particular user session to a launch, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>, Evidently uses the launch name as the <code>randomizationSalt</code>.'
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 127
                scheduledSplitsConfig:
                  description: An array of structures that define the traffic allocation percentages among the feature variations during each step of a launch. This also defines the start time of each step.
                  type: object
                  properties:
                    steps:
                      allOf:
                        - $ref: '#/components/schemas/ScheduledSplitConfigList'
                        - description: An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch. This also defines the start time of each step.
  '/projects/{project}':
    delete:
      operationId: DeleteProject
      description: 'Deletes an Evidently project. Before you can delete a project, you must delete all the features that the project contains. To delete a feature, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_DeleteFeature.html">DeleteFeature</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProjectResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: project
          in: path
          required: true
          description: The name or ARN of the project to delete.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetProject
      description: 'Returns the details about one launch. You must already know the project name. To retrieve a list of projects in your account, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ListProjects.html">ListProjects</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that you want to see the details of.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
    patch:
      operationId: UpdateProject
      description: '<p>Updates the description of an existing project.</p> <p>To create a new project, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateProject.html">CreateProject</a>.</p> <p>Don''t use this operation to update the data storage options of a project. Instead, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateProjectDataDelivery.html">UpdateProjectDataDelivery</a>. </p> <p>Don''t use this operation to update the tags of a project. Instead, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html">TagResource</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: project
          in: path
          required: true
          description: The name or ARN of the project to update.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appConfigResource:
                  description: '<p>Use this parameter to configure client-side evaluation for your project. Client-side evaluation allows your application to assign variations to user sessions locally instead of by calling the <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html">EvaluateFeature</a> operation to assign the variations. This mitigates the latency and availability risks that come with an API call.</p> <p> <code>ProjectAppConfigResource</code> is a structure that defines the configuration of how your application integrates with AppConfig to run client-side evaluation.</p>'
                  type: object
                  properties:
                    applicationId:
                      allOf:
                        - $ref: '#/components/schemas/AppConfigResourceId'
                        - description: 'The ID of the AppConfig application to use for client-side evaluation. '
                    environmentId:
                      allOf:
                        - $ref: '#/components/schemas/AppConfigResourceId'
                        - description: The ID of the AppConfig environment to use for client-side evaluation. This must be an environment that is within the application that you specify for <code>applicationId</code>.
                description:
                  description: An optional description of the project.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 160
  '/segments/{segment}':
    delete:
      operationId: DeleteSegment
      description: 'Deletes a segment. You can''t delete a segment that is being used in a launch or experiment, even if that launch or experiment is not currently running.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSegmentResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: segment
          in: path
          required: true
          description: Specifies the segment to delete.
          schema:
            type: string
            pattern: '(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)'
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetSegment
      description: Returns information about the specified segment. Specify the segment you want to view by specifying its ARN.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSegmentResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: segment
          in: path
          required: true
          description: The ARN of the segment to return information for.
          schema:
            type: string
            pattern: '(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)'
            minLength: 0
            maxLength: 2048
  '/projects/{project}/evaluations/{feature}':
    post:
      operationId: EvaluateFeature
      description: '<p>This operation assigns a feature variation to one given user session. You pass in an <code>entityID</code> that represents the user. Evidently then checks the evaluation rules and assigns the variation.</p> <p>The first rules that are evaluated are the override rules. If the user''s <code>entityID</code> matches an override rule, the user is served the variation specified by that rule.</p> <p>If there is a current launch with this feature that uses segment overrides, and if the user session''s <code>evaluationContext</code> matches a segment rule defined in a segment override, the configuration in the segment overrides is used. For more information about segments, see <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateSegment.html">CreateSegment</a> and <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html">Use segments to focus your audience</a>.</p> <p>If there is a launch with no segment overrides, the user might be assigned to a variation in the launch. The chance of this depends on the percentage of users that are allocated to that launch. If the user is enrolled in the launch, the variation they are served depends on the allocation of the various feature variations used for the launch.</p> <p>If the user is not assigned to a launch, and there is an ongoing experiment for this feature, the user might be assigned to a variation in the experiment. The chance of this depends on the percentage of users that are allocated to that experiment.</p> <p>If the experiment uses a segment, then only user sessions with <code>evaluationContext</code> values that match the segment rule are used in the experiment.</p> <p>If the user is enrolled in the experiment, the variation they are served depends on the allocation of the various feature variations used for the experiment. </p> <p>If the user is not assigned to a launch or experiment, they are served the default variation.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateFeatureResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: feature
          in: path
          required: true
          description: The name of the feature being evaluated.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains this feature.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - entityId
              properties:
                entityId:
                  description: An internal ID that represents a unique user of the application. This <code>entityID</code> is checked against any override rules assigned for this feature.
                  type: string
                  pattern: .*
                  minLength: 1
                  maxLength: 512
                evaluationContext:
                  description: '<p>A JSON object of attributes that you can optionally pass in as part of the evaluation event sent to Evidently from the user session. Evidently can use this value to match user sessions with defined audience segments. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html">Use segments to focus your audience</a>.</p> <p>If you include this parameter, the value must be a JSON object. A JSON array is not supported.</p>'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{project}/experiments/{experiment}/results':
    post:
      operationId: GetExperimentResults
      description: '<p>Retrieves the results of a running or completed experiment. No results are available until there have been 100 events for each variation and at least 10 minutes have passed since the start of the experiment. To increase the statistical power, Evidently performs an additional offline p-value analysis at the end of the experiment. Offline p-value analysis can detect statistical significance in some cases where the anytime p-values used during the experiment do not find statistical significance.</p> <p>Experiment results are available up to 63 days after the start of the experiment. They are not available after that because of CloudWatch data retention policies.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExperimentResultsResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: experiment
          in: path
          required: true
          description: The name of the experiment to retrieve the results of.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the experiment that you want to see the results of.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - metricNames
                - treatmentNames
              properties:
                baseStat:
                  description: 'The statistic used to calculate experiment results. Currently the only valid value is <code>mean</code>, which uses the mean of the collected values as the statistic.'
                  type: string
                  enum:
                    - Mean
                endTime:
                  description: 'The date and time that the experiment ended, if it is completed. This must be no longer than 30 days after the experiment start time.'
                  type: string
                  format: date-time
                metricNames:
                  description: The names of the experiment metrics that you want to see the results of.
                  type: array
                  items:
                    $ref: '#/components/schemas/CwDimensionSafeName'
                  minItems: 1
                  maxItems: 1
                period:
                  description: 'In seconds, the amount of time to aggregate results together. '
                  type: integer
                  minimum: 300
                  maximum: 90000
                reportNames:
                  description: 'The names of the report types that you want to see. Currently, <code>BayesianInference</code> is the only valid value.'
                  type: array
                  items:
                    $ref: '#/components/schemas/ExperimentReportName'
                  minItems: 0
                  maxItems: 5
                resultStats:
                  description: '<p>The statistics that you want to see in the returned results.</p> <ul> <li> <p> <code>PValue</code> specifies to use p-values for the results. A p-value is used in hypothesis testing to measure how often you are willing to make a mistake in rejecting the null hypothesis. A general practice is to reject the null hypothesis and declare that the results are statistically significant when the p-value is less than 0.05.</p> </li> <li> <p> <code>ConfidenceInterval</code> specifies a confidence interval for the results. The confidence interval represents the range of values for the chosen metric that is likely to contain the true difference between the <code>baseStat</code> of a variation and the baseline. Evidently returns the 95% confidence interval. </p> </li> <li> <p> <code>TreatmentEffect</code> is the difference in the statistic specified by the <code>baseStat</code> parameter between each variation and the default variation. </p> </li> <li> <p> <code>BaseStat</code> returns the statistical values collected for the metric for each variation. The statistic uses the same statistic specified in the <code>baseStat</code> parameter. Therefore, if <code>baseStat</code> is <code>mean</code>, this returns the mean of the values collected for each variation.</p> </li> </ul>'
                  type: array
                  items:
                    $ref: '#/components/schemas/ExperimentResultRequestType'
                  minItems: 0
                  maxItems: 5
                startTime:
                  description: The date and time that the experiment started.
                  type: string
                  format: date-time
                treatmentNames:
                  description: The names of the experiment treatments that you want to see the results for.
                  type: array
                  items:
                    $ref: '#/components/schemas/TreatmentName'
                  minItems: 1
                  maxItems: 5
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/segments/{segment}/references#type':
    get:
      operationId: ListSegmentReferences
      description: Use this operation to find which experiments or launches are using a specified segment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSegmentReferencesResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to include in the response. If you omit this, the default of 50 is used.'
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token to use when requesting the next set of results. You received this token from a previous <code>ListSegmentReferences</code> operation.
          schema:
            type: string
            pattern: .*
            minLength: 1
            maxLength: 8192
        - name: segment
          in: path
          required: true
          description: The ARN of the segment that you want to view information for.
          schema:
            type: string
            pattern: '(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)'
            minLength: 0
            maxLength: 2048
        - name: type
          in: query
          required: true
          description: Specifies whether to return information about launches or experiments that use this segment.
          schema:
            type: string
            enum:
              - EXPERIMENT
              - LAUNCH
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: Displays the tags associated with an Evidently resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource that you want to see the tags of.
          schema:
            type: string
            pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:.*'
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: '<p>Assigns one or more tags (key-value pairs) to the specified CloudWatch Evidently resource. Projects, features, launches, and experiments can be tagged.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p> <p>You can use the <code>TagResource</code> action with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the alarm. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the CloudWatch Evidently resource that you're adding tags to.
          schema:
            type: string
            pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:.*'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: The list of key-value pairs to associate with the resource.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/events/projects/{project}':
    post:
      operationId: PutProjectEvents
      description: Sends performance events to Evidently. These events can be used to evaluate a launch or an experiment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProjectEventsResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: project
          in: path
          required: true
          description: The name or ARN of the project to write the events to.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - events
              properties:
                events:
                  description: An array of event structures that contain the performance data that is being sent to Evidently.
                  type: array
                  items:
                    $ref: '#/components/schemas/Event'
                  minItems: 0
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{project}/experiments/{experiment}/start':
    post:
      operationId: StartExperiment
      description: 'Starts an existing experiment. To create an experiment, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateExperiment.html">CreateExperiment</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartExperimentResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: experiment
          in: path
          required: true
          description: The name of the experiment to start.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the experiment to start.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - analysisCompleteTime
              properties:
                analysisCompleteTime:
                  description: The date and time to end the experiment. This must be no more than 30 days after the experiment starts.
                  type: string
                  format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{project}/launches/{launch}/start':
    post:
      operationId: StartLaunch
      description: 'Starts an existing launch. To create a launch, use <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateLaunch.html">CreateLaunch</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartLaunchResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: launch
          in: path
          required: true
          description: The name of the launch to start.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the launch to start.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{project}/experiments/{experiment}/cancel':
    post:
      operationId: StopExperiment
      description: 'Stops an experiment that is currently running. If you stop an experiment, you can''t resume it or restart it.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopExperimentResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: experiment
          in: path
          required: true
          description: The name of the experiment to stop.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the experiment to stop.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                desiredState:
                  description: Specify whether the experiment is to be considered <code>COMPLETED</code> or <code>CANCELLED</code> after it stops.
                  type: string
                  enum:
                    - COMPLETED
                    - CANCELLED
                reason:
                  description: A string that describes why you are stopping the experiment.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 160
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{project}/launches/{launch}/cancel':
    post:
      operationId: StopLaunch
      description: 'Stops a launch that is currently running. After you stop a launch, you will not be able to resume it or restart it. Also, it will not be evaluated as a rule for traffic allocation, and the traffic that was allocated to the launch will instead be available to the feature''s experiment, if there is one. Otherwise, all traffic will be served the default variation after the launch is stopped.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopLaunchResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: launch
          in: path
          required: true
          description: The name of the launch to stop.
          schema:
            type: string
            pattern: '^[-a-zA-Z0-9._]*$'
            minLength: 1
            maxLength: 127
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that contains the launch that you want to stop.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                desiredState:
                  description: Specify whether to consider the launch as <code>COMPLETED</code> or <code>CANCELLED</code> after it stops.
                  type: string
                  enum:
                    - COMPLETED
                    - CANCELLED
                reason:
                  description: A string that describes why you are stopping the launch.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 160
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /test-segment-pattern:
    post:
      operationId: TestSegmentPattern
      description: 'Use this operation to test a rules pattern that you plan to use to create an audience segment. For more information about segments, see <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateSegment.html">CreateSegment</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSegmentPatternResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - pattern
                - payload
              properties:
                pattern:
                  description: The pattern to test.
                  type: string
                  minLength: 1
                  maxLength: 1024
                payload:
                  description: A sample <code>evaluationContext</code> JSON block to test against the specified pattern.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes one or more tags from the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the CloudWatch Evidently resource that you're removing tags from.
          schema:
            type: string
            pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:.*'
            minLength: 0
            maxLength: 2048
        - name: tagKeys
          in: query
          required: true
          description: The list of tag keys to remove from the resource.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 0
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{project}/data-delivery':
    patch:
      operationId: UpdateProjectDataDelivery
      description: '<p>Updates the data storage options for this project. If you store evaluation events, you an keep them and analyze them on your own. If you choose not to store evaluation events, Evidently deletes them after using them to produce metrics and other experiment results that you can view.</p> <p>You can''t specify both <code>cloudWatchLogs</code> and <code>s3Destination</code> in the same operation.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectDataDeliveryResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: project
          in: path
          required: true
          description: The name or ARN of the project that you want to modify the data storage options for.
          schema:
            type: string
            pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cloudWatchLogs:
                  description: A structure containing the CloudWatch Logs log group where the project stores evaluation events.
                  type: object
                  properties:
                    logGroup:
                      allOf:
                        - $ref: '#/components/schemas/CwLogGroupSafeName'
                        - description: The name of the log group where the project stores evaluation events.
                s3Destination:
                  description: 'If the project stores evaluation events in an Amazon S3 bucket, this structure stores the bucket name and bucket prefix.'
                  type: object
                  properties:
                    bucket:
                      allOf:
                        - $ref: '#/components/schemas/S3BucketSafeName'
                        - description: The name of the bucket in which Evidently stores evaluation events.
                    prefix:
                      allOf:
                        - $ref: '#/components/schemas/S3PrefixSafeName'
                        - description: The bucket prefix in which Evidently stores evaluation events.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchEvaluateFeatureResponse:
      type: object
      properties:
        results:
          allOf:
            - $ref: '#/components/schemas/EvaluationResultsList'
            - description: 'An array of structures, where each structure displays the results of one feature evaluation assignment to one user session.'
    EvaluationRequest:
      type: object
      required:
        - entityId
        - feature
      properties:
        entityId:
          allOf:
            - $ref: '#/components/schemas/EntityId'
            - description: An internal ID that represents a unique user session of the application. This <code>entityID</code> is checked against any override rules assigned for this feature.
        evaluationContext:
          allOf:
            - $ref: '#/components/schemas/JsonValue'
            - description: 'A JSON block of attributes that you can optionally pass in. This JSON block is included in the evaluation events sent to Evidently from the user session. '
        feature:
          allOf:
            - $ref: '#/components/schemas/FeatureName'
            - description: The name of the feature being evaluated.
      description: This structure assigns a feature variation to one user session.
    ThrottlingException: {}
    ValidationException: {}
    ResourceNotFoundException: {}
    AccessDeniedException: {}
    CreateExperimentResponse:
      type: object
      required:
        - experiment
      properties:
        experiment:
          allOf:
            - $ref: '#/components/schemas/Experiment'
            - description: A structure containing the configuration details of the experiment that you created.
    MetricGoalConfig:
      type: object
      required:
        - metricDefinition
      properties:
        desiredChange:
          allOf:
            - $ref: '#/components/schemas/ChangeDirectionEnum'
            - description: <p> <code>INCREASE</code> means that a variation with a higher number for this metric is performing better.</p> <p> <code>DECREASE</code> means that a variation with a lower number for this metric is performing better.</p>
        metricDefinition:
          allOf:
            - $ref: '#/components/schemas/MetricDefinitionConfig'
            - description: A structure that contains details about the metric.
      description: Use this structure to tell Evidently whether higher or lower values are desired for a metric that is used in an experiment.
    TreatmentName:
      type: string
      pattern: '^[-a-zA-Z0-9._]*$'
      minLength: 1
      maxLength: 127
    TreatmentToWeightMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SplitWeight'
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TreatmentConfig:
      type: object
      required:
        - feature
        - name
        - variation
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description for this treatment.
        feature:
          allOf:
            - $ref: '#/components/schemas/FeatureName'
            - description: The feature that this experiment is testing.
        name:
          allOf:
            - $ref: '#/components/schemas/TreatmentName'
            - description: A name for this treatment.
        variation:
          allOf:
            - $ref: '#/components/schemas/VariationName'
            - description: The name of the variation to use as this treatment in the experiment.
      description: A structure that defines one treatment in an experiment. A treatment is a variation of the feature that you are including in the experiment.
    ConflictException: {}
    ServiceQuotaExceededException: {}
    CreateFeatureResponse:
      type: object
      properties:
        feature:
          allOf:
            - $ref: '#/components/schemas/Feature'
            - description: A structure that contains information about the new feature.
    VariationName:
      type: string
      pattern: '^[-a-zA-Z0-9._]*$'
      minLength: 1
      maxLength: 127
    VariationConfig:
      type: object
      required:
        - name
        - value
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/VariationName'
            - description: The name of the variation.
        value:
          allOf:
            - $ref: '#/components/schemas/VariableValue'
            - description: The value assigned to this variation.
      description: This structure contains the name and variation value of one variation of a feature.
    CreateLaunchResponse:
      type: object
      required:
        - launch
      properties:
        launch:
          allOf:
            - $ref: '#/components/schemas/Launch'
            - description: A structure that contains the configuration of the launch that was created.
    LaunchGroupConfig:
      type: object
      required:
        - feature
        - name
        - variation
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description of the launch group.
        feature:
          allOf:
            - $ref: '#/components/schemas/FeatureName'
            - description: The feature that this launch is using.
        name:
          allOf:
            - $ref: '#/components/schemas/GroupName'
            - description: A name for this launch group.
        variation:
          allOf:
            - $ref: '#/components/schemas/VariationName'
            - description: The feature variation to use for this launch group.
      description: A structure that defines one launch group in a launch. A launch group is a variation of the feature that you are including in the launch.
    MetricMonitorConfig:
      type: object
      required:
        - metricDefinition
      properties:
        metricDefinition:
          allOf:
            - $ref: '#/components/schemas/MetricDefinitionConfig'
            - description: A structure that defines the metric.
      description: A structure that defines a metric to be used to monitor performance of the variations during a launch.
    ScheduledSplitConfigList:
      type: array
      items:
        $ref: '#/components/schemas/ScheduledSplitConfig'
      minItems: 1
      maxItems: 6
    CreateProjectResponse:
      type: object
      required:
        - project
      properties:
        project:
          allOf:
            - $ref: '#/components/schemas/Project'
            - description: A structure that contains information about the created project.
    AppConfigResourceId:
      type: string
      pattern: '[a-z0-9]{4,7}'
    CloudWatchLogsDestinationConfig:
      type: object
      properties:
        logGroup:
          allOf:
            - $ref: '#/components/schemas/CwLogGroupSafeName'
            - description: The name of the log group where the project stores evaluation events.
      description: A structure containing the CloudWatch Logs log group where the project stores evaluation events.
    S3DestinationConfig:
      type: object
      properties:
        bucket:
          allOf:
            - $ref: '#/components/schemas/S3BucketSafeName'
            - description: The name of the bucket in which Evidently stores evaluation events.
        prefix:
          allOf:
            - $ref: '#/components/schemas/S3PrefixSafeName'
            - description: The bucket prefix in which Evidently stores evaluation events.
      description: 'If the project stores evaluation events in an Amazon S3 bucket, this structure stores the bucket name and bucket prefix.'
    CreateSegmentResponse:
      type: object
      required:
        - segment
      properties:
        segment:
          allOf:
            - $ref: '#/components/schemas/Segment'
            - description: A structure that contains the complete information about the segment that was just created.
    DeleteExperimentResponse:
      type: object
      properties: {}
    InternalServerException: {}
    ServiceUnavailableException: {}
    DeleteFeatureResponse:
      type: object
      properties: {}
    DeleteLaunchResponse:
      type: object
      properties: {}
    DeleteProjectResponse:
      type: object
      properties: {}
    DeleteSegmentResponse:
      type: object
      properties: {}
    EvaluateFeatureResponse:
      type: object
      properties:
        details:
          allOf:
            - $ref: '#/components/schemas/JsonValue'
            - description: 'If this user was assigned to a launch or experiment, this field lists the launch or experiment name.'
        reason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Specifies the reason that the user session was assigned this variation. Possible values include <code>DEFAULT</code>, meaning the user was served the default variation; <code>LAUNCH_RULE_MATCH</code>, if the user session was enrolled in a launch; <code>EXPERIMENT_RULE_MATCH</code>, if the user session was enrolled in an experiment; or <code>ENTITY_OVERRIDES_MATCH</code>, if the user''s <code>entityId</code> matches an override rule.'
        value:
          allOf:
            - $ref: '#/components/schemas/VariableValue'
            - description: The value assigned to this variation to differentiate it from the other variations of this feature.
        variation:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the variation that was served to the user session.
    GetExperimentResponse:
      type: object
      properties:
        experiment:
          allOf:
            - $ref: '#/components/schemas/Experiment'
            - description: A structure containing the configuration details of the experiment.
    GetExperimentResultsResponse:
      type: object
      properties:
        details:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'If the experiment doesn''t yet have enough events to provide valid results, this field is returned with the message <code>Not enough events to generate results</code>. If there are enough events to provide valid results, this field is not returned.'
        reports:
          allOf:
            - $ref: '#/components/schemas/ExperimentReportList'
            - description: An array of structures that include the reports that you requested.
        resultsData:
          allOf:
            - $ref: '#/components/schemas/ExperimentResultsDataList'
            - description: 'An array of structures that include experiment results including metric names and values. '
        timestamps:
          allOf:
            - $ref: '#/components/schemas/TimestampList'
            - description: The timestamps of each result returned.
    CwDimensionSafeName:
      type: string
      pattern: '^[\S]+$'
      minLength: 1
      maxLength: 255
    ExperimentReportName:
      type: string
      enum:
        - BayesianInference
    ExperimentResultRequestType:
      type: string
      enum:
        - BaseStat
        - TreatmentEffect
        - ConfidenceInterval
        - PValue
    GetFeatureResponse:
      type: object
      required:
        - feature
      properties:
        feature:
          allOf:
            - $ref: '#/components/schemas/Feature'
            - description: A structure containing the configuration details of the feature.
    GetLaunchResponse:
      type: object
      properties:
        launch:
          allOf:
            - $ref: '#/components/schemas/Launch'
            - description: A structure containing the configuration details of the launch.
    GetProjectResponse:
      type: object
      required:
        - project
      properties:
        project:
          allOf:
            - $ref: '#/components/schemas/Project'
            - description: A structure containing the configuration details of the project.
    GetSegmentResponse:
      type: object
      required:
        - segment
      properties:
        segment:
          allOf:
            - $ref: '#/components/schemas/Segment'
            - description: A structure that contains the complete information about the segment.
    ListExperimentsResponse:
      type: object
      properties:
        experiments:
          allOf:
            - $ref: '#/components/schemas/ExperimentList'
            - description: An array of structures that contain the configuration details of the experiments in the specified project.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use in a subsequent <code>ListExperiments</code> operation to return the next set of results.
    ListFeaturesResponse:
      type: object
      properties:
        features:
          allOf:
            - $ref: '#/components/schemas/FeatureSummariesList'
            - description: An array of structures that contain the configuration details of the features in the specified project.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use in a subsequent <code>ListFeatures</code> operation to return the next set of results.
    ListLaunchesResponse:
      type: object
      properties:
        launches:
          allOf:
            - $ref: '#/components/schemas/LaunchesList'
            - description: An array of structures that contain the configuration details of the launches in the specified project.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use in a subsequent <code>ListLaunches</code> operation to return the next set of results.
    ListProjectsResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use in a subsequent <code>ListProjects</code> operation to return the next set of results.
        projects:
          allOf:
            - $ref: '#/components/schemas/ProjectSummariesList'
            - description: An array of structures that contain the configuration details of the projects in the Region.
    ListSegmentReferencesResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use in a subsequent <code>ListSegmentReferences</code> operation to return the next set of results.
        referencedBy:
          allOf:
            - $ref: '#/components/schemas/RefResourceList'
            - description: 'An array of structures, where each structure contains information about one experiment or launch that uses this segment. '
    ListSegmentsResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token to use in a subsequent <code>ListSegments</code> operation to return the next set of results.
        segments:
          allOf:
            - $ref: '#/components/schemas/SegmentList'
            - description: An array of structures that contain information about the segments in this Region.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The list of tag keys and values associated with the resource you specified.
    PutProjectEventsResponse:
      type: object
      properties:
        eventResults:
          allOf:
            - $ref: '#/components/schemas/PutProjectEventsResultEntryList'
            - description: 'A structure that contains Evidently''s response to the sent events, including an event ID and error codes, if any.'
        failedEventCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of events in the operation that could not be used by Evidently.
    Event:
      type: object
      required:
        - data
        - timestamp
        - type
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/JsonValue'
            - description: The event data.
        timestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The timestamp of the event.
        type:
          allOf:
            - $ref: '#/components/schemas/EventType'
            - description: ' <code>aws.evidently.evaluation</code> specifies an evaluation event, which determines which feature variation that a user sees. <code>aws.evidently.custom</code> specifies a custom event, which generates metrics from user actions such as clicks and checkouts.'
      description: 'A structure that contains the information about one evaluation event or custom event sent to Evidently. This is a JSON payload. If this event specifies a pre-defined event type, the payload must follow the defined event schema.'
    StartExperimentResponse:
      type: object
      properties:
        startedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: A timestamp that indicates when the experiment started.
    StartLaunchResponse:
      type: object
      required:
        - launch
      properties:
        launch:
          allOf:
            - $ref: '#/components/schemas/Launch'
            - description: A structure that contains information about the launch that was started.
    StopExperimentResponse:
      type: object
      properties:
        endedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the experiment stopped.
    StopLaunchResponse:
      type: object
      properties:
        endedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the launch stopped.
    TagResourceResponse:
      type: object
      properties: {}
    TestSegmentPatternResponse:
      type: object
      required:
        - match
      properties:
        match:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Returns <code>true</code> if the pattern matches the payload.
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
      minLength: 1
      maxLength: 128
    UpdateExperimentResponse:
      type: object
      required:
        - experiment
      properties:
        experiment:
          allOf:
            - $ref: '#/components/schemas/Experiment'
            - description: A structure containing the configuration details of the experiment that was updated.
    UpdateFeatureResponse:
      type: object
      required:
        - feature
      properties:
        feature:
          allOf:
            - $ref: '#/components/schemas/Feature'
            - description: A structure that contains information about the updated feature.
    UpdateLaunchResponse:
      type: object
      required:
        - launch
      properties:
        launch:
          allOf:
            - $ref: '#/components/schemas/Launch'
            - description: A structure that contains the new configuration of the launch that was updated.
    UpdateProjectResponse:
      type: object
      required:
        - project
      properties:
        project:
          allOf:
            - $ref: '#/components/schemas/Project'
            - description: A structure containing information about the updated project.
    UpdateProjectDataDeliveryResponse:
      type: object
      required:
        - project
      properties:
        project:
          allOf:
            - $ref: '#/components/schemas/Project'
            - description: A structure containing details about the project that you updated.
    CwLogGroupSafeName:
      type: string
      pattern: '^[-a-zA-Z0-9._/]+$'
      minLength: 1
      maxLength: 512
    S3BucketSafeName:
      type: string
      pattern: '^[a-z0-9][-a-z0-9]*[a-z0-9]$'
      minLength: 3
      maxLength: 63
    S3PrefixSafeName:
      type: string
      pattern: '^[-a-zA-Z0-9!_.*''()/]*$'
      minLength: 1
      maxLength: 1024
    Arn:
      type: string
      pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:.*'
      minLength: 0
      maxLength: 2048
    ProjectRef:
      type: string
      pattern: '(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)'
      minLength: 0
      maxLength: 2048
    EvaluationRequestsList:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationRequest'
      minItems: 1
      maxItems: 20
    BatchEvaluateFeatureRequest:
      type: object
      required:
        - requests
      title: BatchEvaluateFeatureRequest
      properties:
        requests:
          allOf:
            - $ref: '#/components/schemas/EvaluationRequestsList'
            - description: 'An array of structures, where each structure assigns a feature variation to one user session.'
    EvaluationResultsList:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationResult'
    Boolean:
      type: boolean
    ChangeDirectionEnum:
      type: string
      enum:
        - INCREASE
        - DECREASE
    CloudWatchLogsDestination:
      type: object
      properties:
        logGroup:
          allOf:
            - $ref: '#/components/schemas/CwLogGroupSafeName'
            - description: The name of the log group where the project stores evaluation events.
      description: A structure containing the CloudWatch Logs log group where the project stores evaluation events.
    Description:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 160
    MetricGoalConfigList:
      type: array
      items:
        $ref: '#/components/schemas/MetricGoalConfig'
      minItems: 1
      maxItems: 3
    ExperimentName:
      type: string
      pattern: '^[-a-zA-Z0-9._]*$'
      minLength: 1
      maxLength: 127
    OnlineAbConfig:
      type: object
      properties:
        controlTreatmentName:
          allOf:
            - $ref: '#/components/schemas/TreatmentName'
            - description: The name of the variation that is to be the default variation that the other variations are compared to.
        treatmentWeights:
          allOf:
            - $ref: '#/components/schemas/TreatmentToWeightMap'
            - description: 'A set of key-value pairs. The keys are variation names, and the values are the portion of experiment traffic to be assigned to that variation. Specify the traffic portion in thousandths of a percent, so 20,000 for a variation would allocate 20% of the experiment traffic to that variation.'
      description: A structure that contains the configuration of which variation to use as the "control" version. The "control" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.
    RandomizationSalt:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 127
    SplitWeight:
      type: integer
      minimum: 0
      maximum: 100000
    SegmentRef:
      type: string
      pattern: '(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)'
      minLength: 0
      maxLength: 2048
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TreatmentConfigList:
      type: array
      items:
        $ref: '#/components/schemas/TreatmentConfig'
      minItems: 0
      maxItems: 5
    CreateExperimentRequest:
      type: object
      required:
        - metricGoals
        - name
        - treatments
      title: CreateExperimentRequest
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: An optional description of the experiment.
        metricGoals:
          allOf:
            - $ref: '#/components/schemas/MetricGoalConfigList'
            - description: 'An array of structures that defines the metrics used for the experiment, and whether a higher or lower value for each metric is the goal.'
        name:
          allOf:
            - $ref: '#/components/schemas/ExperimentName'
            - description: A name for the new experiment.
        onlineAbConfig:
          allOf:
            - $ref: '#/components/schemas/OnlineAbConfig'
            - description: A structure that contains the configuration of which variation to use as the "control" version. tThe "control" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.
        randomizationSalt:
          allOf:
            - $ref: '#/components/schemas/RandomizationSalt'
            - description: 'When Evidently assigns a particular user session to an experiment, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>, Evidently uses the experiment name as the <code>randomizationSalt</code>.'
        samplingRate:
          allOf:
            - $ref: '#/components/schemas/SplitWeight'
            - description: '<p>The portion of the available audience that you want to allocate to this experiment, in thousandths of a percent. The available audience is the total audience minus the audience that you have allocated to overrides or current launches of this feature.</p> <p>This is represented in thousandths of a percent. For example, specify 10,000 to allocate 10% of the available audience.</p>'
        segment:
          allOf:
            - $ref: '#/components/schemas/SegmentRef'
            - description: 'Specifies an audience <i>segment</i> to use in the experiment. When a segment is used in an experiment, only user sessions that match the segment pattern are used in the experiment.'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: '<p>Assigns one or more tags (key-value pairs) to the experiment.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p> <p>You can associate as many as 50 tags with an experiment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>'
        treatments:
          allOf:
            - $ref: '#/components/schemas/TreatmentConfigList'
            - description: An array of structures that describe the configuration of each feature variation used in the experiment.
    Experiment:
      type: object
      required:
        - arn
        - createdTime
        - lastUpdatedTime
        - name
        - status
        - type
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ExperimentArn'
            - description: The ARN of the experiment.
        createdTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the experiment is first created.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description of the experiment.
        execution:
          allOf:
            - $ref: '#/components/schemas/ExperimentExecution'
            - description: A structure that contains the date and time that the experiment started and ended.
        lastUpdatedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the experiment was most recently updated.
        metricGoals:
          allOf:
            - $ref: '#/components/schemas/MetricGoalsList'
            - description: 'An array of structures that defines the metrics used for the experiment, and whether a higher or lower value for each metric is the goal.'
        name:
          allOf:
            - $ref: '#/components/schemas/ExperimentName'
            - description: The name of the experiment.
        onlineAbDefinition:
          allOf:
            - $ref: '#/components/schemas/OnlineAbDefinition'
            - description: A structure that contains the configuration of which variation to use as the "control" version. The "control" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.
        project:
          allOf:
            - $ref: '#/components/schemas/ProjectArn'
            - description: The name or ARN of the project that contains this experiment.
        randomizationSalt:
          allOf:
            - $ref: '#/components/schemas/RandomizationSalt'
            - description: This value is used when Evidently assigns a particular user session to the experiment. It helps create a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and <code>randomizationSalt</code>.
        samplingRate:
          allOf:
            - $ref: '#/components/schemas/SplitWeight'
            - description: '<p>In thousandths of a percent, the amount of the available audience that is allocated to this experiment. The available audience is the total audience minus the audience that you have allocated to overrides or current launches of this feature.</p> <p>This is represented in thousandths of a percent, so a value of 10,000 is 10% of the available audience.</p>'
        schedule:
          allOf:
            - $ref: '#/components/schemas/ExperimentSchedule'
            - description: A structure that contains the time and date that Evidently completed the analysis of the experiment.
        segment:
          allOf:
            - $ref: '#/components/schemas/SegmentArn'
            - description: 'The audience segment being used for the experiment, if a segment is being used.'
        status:
          allOf:
            - $ref: '#/components/schemas/ExperimentStatus'
            - description: The current state of the experiment.
        statusReason:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: 'If the experiment was stopped, this is the string that was entered by the person who stopped the experiment, to explain why it was stopped.'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The list of tag keys and values associated with this experiment.
        treatments:
          allOf:
            - $ref: '#/components/schemas/TreatmentList'
            - description: An array of structures that describe the configuration of each feature variation used in the experiment.
        type:
          allOf:
            - $ref: '#/components/schemas/ExperimentType'
            - description: 'The type of this experiment. Currently, this value must be <code>aws.experiment.onlineab</code>.'
      description: A structure containing the configuration details of an experiment.
    EntityOverrideMap:
      type: object
      minProperties: 0
      maxProperties: 2500
      additionalProperties:
        $ref: '#/components/schemas/VariationName'
    FeatureEvaluationStrategy:
      type: string
      enum:
        - ALL_RULES
        - DEFAULT_VARIATION
    FeatureName:
      type: string
      pattern: '^[-a-zA-Z0-9._]*$'
      minLength: 1
      maxLength: 127
    VariationConfigsList:
      type: array
      items:
        $ref: '#/components/schemas/VariationConfig'
      minItems: 1
      maxItems: 5
    CreateFeatureRequest:
      type: object
      required:
        - name
        - variations
      title: CreateFeatureRequest
      properties:
        defaultVariation:
          allOf:
            - $ref: '#/components/schemas/VariationName'
            - description: '<p>The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.</p> <p>This variation must also be listed in the <code>variations</code> structure.</p> <p>If you omit <code>defaultVariation</code>, the first variation listed in the <code>variations</code> structure is used as the default variation.</p>'
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: An optional description of the feature.
        entityOverrides:
          allOf:
            - $ref: '#/components/schemas/EntityOverrideMap'
            - description: '<p>Specify users that should always be served a specific variation of a feature. Each user is specified by a key-value pair . For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.</p> <p>This parameter is limited to 2500 overrides or a total of 40KB. The 40KB limit includes an overhead of 6 bytes per override.</p>'
        evaluationStrategy:
          allOf:
            - $ref: '#/components/schemas/FeatureEvaluationStrategy'
            - description: Specify <code>ALL_RULES</code> to activate the traffic allocation specified by any ongoing launches or experiments. Specify <code>DEFAULT_VARIATION</code> to serve the default variation to all users instead.
        name:
          allOf:
            - $ref: '#/components/schemas/FeatureName'
            - description: The name for the new feature.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: '<p>Assigns one or more tags (key-value pairs) to the feature.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p> <p>You can associate as many as 50 tags with a feature.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>'
        variations:
          allOf:
            - $ref: '#/components/schemas/VariationConfigsList'
            - description: An array of structures that contain the configuration of the feature's different variations.
    Feature:
      type: object
      required:
        - arn
        - createdTime
        - evaluationStrategy
        - lastUpdatedTime
        - name
        - status
        - valueType
        - variations
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/FeatureArn'
            - description: The ARN of the feature.
        createdTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the feature is created.
        defaultVariation:
          allOf:
            - $ref: '#/components/schemas/VariationName'
            - description: '<p>The name of the variation that is used as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.</p> <p>This variation must also be listed in the <code>variations</code> structure.</p> <p>If you omit <code>defaultVariation</code>, the first variation listed in the <code>variations</code> structure is used as the default variation.</p>'
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the feature.
        entityOverrides:
          allOf:
            - $ref: '#/components/schemas/EntityOverrideMap'
            - description: '<p>A set of key-value pairs that specify users who should always be served a specific variation of a feature. Each key specifies a user using their user ID, account ID, or some other identifier. The value specifies the name of the variation that the user is to be served.</p> <p>For the override to be successful, the value of the key must match the <code>entityId</code> used in the <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html">EvaluateFeature</a> operation.</p>'
        evaluationRules:
          allOf:
            - $ref: '#/components/schemas/EvaluationRulesList'
            - description: An array of structures that define the evaluation rules for the feature.
        evaluationStrategy:
          allOf:
            - $ref: '#/components/schemas/FeatureEvaluationStrategy'
            - description: 'If this value is <code>ALL_RULES</code>, the traffic allocation specified by any ongoing launches or experiments is being used. If this is <code>DEFAULT_VARIATION</code>, the default variation is being served to all users.'
        lastUpdatedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the feature was most recently updated.
        name:
          allOf:
            - $ref: '#/components/schemas/FeatureName'
            - description: The name of the feature.
        project:
          allOf:
            - $ref: '#/components/schemas/ProjectArn'
            - description: The name or ARN of the project that contains the feature.
        status:
          allOf:
            - $ref: '#/components/schemas/FeatureStatus'
            - description: The current state of the feature.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The list of tag keys and values associated with this feature.
        valueType:
          allOf:
            - $ref: '#/components/schemas/VariationValueType'
            - description: 'Defines the type of value used to define the different feature variations. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-variationtypes.html">Variation types</a> '
        variations:
          allOf:
            - $ref: '#/components/schemas/VariationsList'
            - description: An array of structures that contain the configuration of the feature's different variations.
      description: This structure contains information about one Evidently feature in your account.
    LaunchGroupConfigList:
      type: array
      items:
        $ref: '#/components/schemas/LaunchGroupConfig'
      minItems: 1
      maxItems: 5
    MetricMonitorConfigList:
      type: array
      items:
        $ref: '#/components/schemas/MetricMonitorConfig'
      minItems: 0
      maxItems: 3
    LaunchName:
      type: string
      pattern: '^[-a-zA-Z0-9._]*$'
      minLength: 1
      maxLength: 127
    ScheduledSplitsLaunchConfig:
      type: object
      required:
        - steps
      properties:
        steps:
          allOf:
            - $ref: '#/components/schemas/ScheduledSplitConfigList'
            - description: An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch. This also defines the start time of each step.
      description: An array of structures that define the traffic allocation percentages among the feature variations during each step of a launch. This also defines the start time of each step.
    CreateLaunchRequest:
      type: object
      required:
        - groups
        - name
      title: CreateLaunchRequest
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: An optional description for the launch.
        groups:
          allOf:
            - $ref: '#/components/schemas/LaunchGroupConfigList'
            - description: An array of structures that contains the feature and variations that are to be used for the launch.
        metricMonitors:
          allOf:
            - $ref: '#/components/schemas/MetricMonitorConfigList'
            - description: An array of structures that define the metrics that will be used to monitor the launch performance.
        name:
          allOf:
            - $ref: '#/components/schemas/LaunchName'
            - description: The name for the new launch.
        randomizationSalt:
          allOf:
            - $ref: '#/components/schemas/RandomizationSalt'
            - description: 'When Evidently assigns a particular user session to a launch, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>, Evidently uses the launch name as the <code>randomizationSalt</code>.'
        scheduledSplitsConfig:
          allOf:
            - $ref: '#/components/schemas/ScheduledSplitsLaunchConfig'
            - description: An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: '<p>Assigns one or more tags (key-value pairs) to the launch.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p> <p>You can associate as many as 50 tags with a launch.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>'
    Launch:
      type: object
      required:
        - arn
        - createdTime
        - lastUpdatedTime
        - name
        - status
        - type
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/LaunchArn'
            - description: The ARN of the launch.
        createdTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the launch is created.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the launch.
        execution:
          allOf:
            - $ref: '#/components/schemas/LaunchExecution'
            - description: A structure that contains information about the start and end times of the launch.
        groups:
          allOf:
            - $ref: '#/components/schemas/LaunchGroupList'
            - description: An array of structures that define the feature variations that are being used in the launch.
        lastUpdatedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the launch was most recently updated.
        metricMonitors:
          allOf:
            - $ref: '#/components/schemas/MetricMonitorList'
            - description: An array of structures that define the metrics that are being used to monitor the launch performance.
        name:
          allOf:
            - $ref: '#/components/schemas/LaunchName'
            - description: The name of the launch.
        project:
          allOf:
            - $ref: '#/components/schemas/ProjectRef'
            - description: The name or ARN of the project that contains the launch.
        randomizationSalt:
          allOf:
            - $ref: '#/components/schemas/RandomizationSalt'
            - description: 'This value is used when Evidently assigns a particular user session to the launch, to help create a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and <code>randomizationSalt</code>.'
        scheduledSplitsDefinition:
          allOf:
            - $ref: '#/components/schemas/ScheduledSplitsLaunchDefinition'
            - description: An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch.
        status:
          allOf:
            - $ref: '#/components/schemas/LaunchStatus'
            - description: The current state of the launch.
        statusReason:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: 'If the launch was stopped, this is the string that was entered by the person who stopped the launch, to explain why it was stopped.'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The list of tag keys and values associated with this launch.
        type:
          allOf:
            - $ref: '#/components/schemas/LaunchType'
            - description: The type of launch.
      description: This structure contains the configuration details of one Evidently launch.
    ProjectAppConfigResourceConfig:
      type: object
      properties:
        applicationId:
          allOf:
            - $ref: '#/components/schemas/AppConfigResourceId'
            - description: 'The ID of the AppConfig application to use for client-side evaluation. '
        environmentId:
          allOf:
            - $ref: '#/components/schemas/AppConfigResourceId'
            - description: The ID of the AppConfig environment to use for client-side evaluation. This must be an environment that is within the application that you specify for <code>applicationId</code>.
      description: '<p>Use this parameter to configure client-side evaluation for your project. Client-side evaluation allows your application to assign variations to user sessions locally instead of by calling the <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html">EvaluateFeature</a> operation to assign the variations. This mitigates the latency and availability risks that come with an API call.</p> <p> <code>ProjectAppConfigResource</code> is a structure that defines the configuration of how your application integrates with AppConfig to run client-side evaluation.</p>'
    ProjectDataDeliveryConfig:
      type: object
      properties:
        cloudWatchLogs:
          allOf:
            - $ref: '#/components/schemas/CloudWatchLogsDestinationConfig'
            - description: 'If the project stores evaluation events in CloudWatch Logs, this structure stores the log group name.'
        s3Destination:
          allOf:
            - $ref: '#/components/schemas/S3DestinationConfig'
            - description: 'If the project stores evaluation events in an Amazon S3 bucket, this structure stores the bucket name and bucket prefix.'
      description: A structure that contains information about where Evidently is to store evaluation events for longer term storage.
    ProjectName:
      type: string
      pattern: '^[-a-zA-Z0-9._]*$'
      minLength: 1
      maxLength: 127
    CreateProjectRequest:
      type: object
      required:
        - name
      title: CreateProjectRequest
      properties:
        appConfigResource:
          allOf:
            - $ref: '#/components/schemas/ProjectAppConfigResourceConfig'
            - description: '<p>Use this parameter if the project will use <i>client-side evaluation powered by AppConfig</i>. Client-side evaluation allows your application to assign variations to user sessions locally instead of by calling the <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html">EvaluateFeature</a> operation. This mitigates the latency and availability risks that come with an API call. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-client-side-evaluation.html"> Client-side evaluation - powered by AppConfig.</a> </p> <p>This parameter is a structure that contains information about the AppConfig application and environment that will be used as for client-side evaluation.</p> <p>To create a project that uses client-side evaluation, you must have the <code>evidently:ExportProjectAsConfiguration</code> permission.</p>'
        dataDelivery:
          allOf:
            - $ref: '#/components/schemas/ProjectDataDeliveryConfig'
            - description: 'A structure that contains information about where Evidently is to store evaluation events for longer term storage, if you choose to do so. If you choose not to store these events, Evidently deletes them after using them to produce metrics and other experiment results that you can view.'
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: An optional description of the project.
        name:
          allOf:
            - $ref: '#/components/schemas/ProjectName'
            - description: The name for the project.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: '<p>Assigns one or more tags (key-value pairs) to the project.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p> <p>You can associate as many as 50 tags with a project.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>'
    Project:
      type: object
      required:
        - arn
        - createdTime
        - lastUpdatedTime
        - name
        - status
      properties:
        activeExperimentCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of ongoing experiments currently in the project.
        activeLaunchCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of ongoing launches currently in the project.
        appConfigResource:
          allOf:
            - $ref: '#/components/schemas/ProjectAppConfigResource'
            - description: This structure defines the configuration of how your application integrates with AppConfig to run client-side evaluation.
        arn:
          allOf:
            - $ref: '#/components/schemas/ProjectArn'
            - description: The name or ARN of the project.
        createdTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the project is created.
        dataDelivery:
          allOf:
            - $ref: '#/components/schemas/ProjectDataDelivery'
            - description: A structure that contains information about where Evidently is to store evaluation events for longer term storage.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The user-entered description of the project.
        experimentCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The number of experiments currently in the project. This includes all experiments that have been created and not deleted, whether they are ongoing or not.'
        featureCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of features currently in the project.
        lastUpdatedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the project was most recently updated.
        launchCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The number of launches currently in the project. This includes all launches that have been created and not deleted, whether they are ongoing or not.'
        name:
          allOf:
            - $ref: '#/components/schemas/ProjectName'
            - description: The name of the project.
        status:
          allOf:
            - $ref: '#/components/schemas/ProjectStatus'
            - description: The current state of the project.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The list of tag keys and values associated with this project.
      description: 'This structure defines a project, which is the logical object in Evidently that can contain features, launches, and experiments. Use projects to group similar features together.'
    SegmentName:
      type: string
      pattern: '^[-a-zA-Z0-9._]*$'
      minLength: 1
      maxLength: 64
    SegmentPattern:
      type: string
      minLength: 1
      maxLength: 1024
    CreateSegmentRequest:
      type: object
      required:
        - name
        - pattern
      title: CreateSegmentRequest
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: An optional description for this segment.
        name:
          allOf:
            - $ref: '#/components/schemas/SegmentName'
            - description: A name for the segment.
        pattern:
          allOf:
            - $ref: '#/components/schemas/SegmentPattern'
            - description: 'The pattern to use for the segment. For more information about pattern syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html#CloudWatch-Evidently-segments-syntax.html"> Segment rule pattern syntax</a>.'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: '<p>Assigns one or more tags (key-value pairs) to the segment.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p> <p>You can associate as many as 50 tags with a segment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>.</p>'
    Segment:
      type: object
      required:
        - arn
        - createdTime
        - lastUpdatedTime
        - name
        - pattern
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/SegmentArn'
            - description: The ARN of the segment.
        createdTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that this segment was created.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The customer-created description for this segment.
        experimentCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The number of experiments that this segment is used in. This count includes all current experiments, not just those that are currently running.'
        lastUpdatedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that this segment was most recently updated.
        launchCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The number of launches that this segment is used in. This count includes all current launches, not just those that are currently running.'
        name:
          allOf:
            - $ref: '#/components/schemas/SegmentName'
            - description: The name of the segment.
        pattern:
          allOf:
            - $ref: '#/components/schemas/SegmentPattern'
            - description: 'The pattern that defines the attributes to use to evalute whether a user session will be in the segment. For more information about the pattern syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html">Segment rule pattern syntax</a>.'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The list of tag keys and values associated with this launch.
      description: This structure contains information about one audience <i>segment</i>. You can use segments in your experiments and launches to narrow the user sessions used for experiment or launch to only the user sessions that match one or more criteria.
    DeleteExperimentRequest:
      type: object
      title: DeleteExperimentRequest
      properties: {}
    DeleteFeatureRequest:
      type: object
      title: DeleteFeatureRequest
      properties: {}
    DeleteLaunchRequest:
      type: object
      title: DeleteLaunchRequest
      properties: {}
    DeleteProjectRequest:
      type: object
      title: DeleteProjectRequest
      properties: {}
    DeleteSegmentRequest:
      type: object
      title: DeleteSegmentRequest
      properties: {}
    Double:
      type: number
      format: double
    DoubleValueList:
      type: array
      items:
        $ref: '#/components/schemas/Double'
      minItems: 0
      maxItems: 100800
    EntityId:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 512
    ErrorCodeEnum:
      type: string
      description: 'Recommended errors from AWS API standards: https://w.amazon.com/bin/view/AWS/API_Standards/Exceptions ErrorCode = &quot;ValidationException&quot;|&quot;ServiceQuotaExceededException&quot;|&quot;AccessDeniedException&quot;|&quot;ResourceNotFoundException&quot;|&quot;ConflictException&quot;|&quot;ThrottlingException&quot;|&quot;InternalServerException&quot;|string;'
      minLength: 1
      maxLength: 64
    ErrorMessage:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    JsonValue:
      type: string
    EvaluateFeatureRequest:
      type: object
      required:
        - entityId
      title: EvaluateFeatureRequest
      properties:
        entityId:
          allOf:
            - $ref: '#/components/schemas/EntityId'
            - description: An internal ID that represents a unique user of the application. This <code>entityID</code> is checked against any override rules assigned for this feature.
        evaluationContext:
          allOf:
            - $ref: '#/components/schemas/JsonValue'
            - description: '<p>A JSON object of attributes that you can optionally pass in as part of the evaluation event sent to Evidently from the user session. Evidently can use this value to match user sessions with defined audience segments. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html">Use segments to focus your audience</a>.</p> <p>If you include this parameter, the value must be a JSON object. A JSON array is not supported.</p>'
    String:
      type: string
    VariableValue:
      type: object
      properties:
        boolValue:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'If this feature uses the Boolean variation type, this field contains the Boolean value of this variation.'
        doubleValue:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: 'If this feature uses the double integer variation type, this field contains the double integer value of this variation.'
        longValue:
          allOf:
            - $ref: '#/components/schemas/VariableValueLongValueLong'
            - description: 'If this feature uses the long variation type, this field contains the long value of this variation.'
        stringValue:
          allOf:
            - $ref: '#/components/schemas/VariableValueStringValueString'
            - description: 'If this feature uses the string variation type, this field contains the string value of this variation.'
      description: 'The value assigned to a feature variation. This structure must contain exactly one field. It can be <code>boolValue</code>, <code>doubleValue</code>, <code>longValue</code>, or <code>stringValue</code>.'
    EvaluationResult:
      type: object
      required:
        - entityId
        - feature
      properties:
        details:
          allOf:
            - $ref: '#/components/schemas/JsonValue'
            - description: 'If this user was assigned to a launch or experiment, this field lists the launch or experiment name.'
        entityId:
          allOf:
            - $ref: '#/components/schemas/EntityId'
            - description: An internal ID that represents a unique user session of the application.
        feature:
          allOf:
            - $ref: '#/components/schemas/FeatureName'
            - description: The name of the feature being evaluated.
        project:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The name or ARN of the project that contains the feature being evaluated.
        reason:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'Specifies the reason that the user session was assigned this variation. Possible values include <code>DEFAULT</code>, meaning the user was served the default variation; <code>LAUNCH_RULE_MATCH</code>, if the user session was enrolled in a launch; or <code>EXPERIMENT_RULE_MATCH</code>, if the user session was enrolled in an experiment.'
        value:
          allOf:
            - $ref: '#/components/schemas/VariableValue'
            - description: The value assigned to this variation to differentiate it from the other variations of this feature.
        variation:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the variation that was served to the user session.
      description: This structure displays the results of one feature evaluation assignment to one user session.
    RuleName:
      type: string
      minLength: 0
      maxLength: 1024
    RuleType:
      type: string
      minLength: 0
      maxLength: 1024
    EvaluationRule:
      type: object
      required:
        - type
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/RuleName'
            - description: The name of the experiment or launch.
        type:
          allOf:
            - $ref: '#/components/schemas/RuleType'
            - description: 'This value is <code>aws.evidently.splits</code> if this is an evaluation rule for a launch, and it is <code>aws.evidently.onlineab</code> if this is an evaluation rule for an experiment.'
      description: 'A structure that contains the information about an evaluation rule for this feature, if it is used in a launch or experiment.'
    EvaluationRulesList:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationRule'
    Timestamp:
      type: string
      format: date-time
    EventType:
      type: string
      enum:
        - aws.evidently.evaluation
        - aws.evidently.custom
    EventList:
      type: array
      items:
        $ref: '#/components/schemas/Event'
      minItems: 0
      maxItems: 50
    ExperimentArn:
      type: string
      pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/experiment/[-a-zA-Z0-9._]*'
      minLength: 0
      maxLength: 2048
    ExperimentExecution:
      type: object
      properties:
        endedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the experiment ended.
        startedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the experiment started.
      description: This structure contains the date and time that the experiment started and ended.
    MetricGoalsList:
      type: array
      items:
        $ref: '#/components/schemas/MetricGoal'
      minItems: 1
      maxItems: 3
    OnlineAbDefinition:
      type: object
      properties:
        controlTreatmentName:
          allOf:
            - $ref: '#/components/schemas/TreatmentName'
            - description: The name of the variation that is the default variation that the other variations are compared to.
        treatmentWeights:
          allOf:
            - $ref: '#/components/schemas/TreatmentToWeightMap'
            - description: 'A set of key-value pairs. The keys are variation names, and the values are the portion of experiment traffic to be assigned to that variation. The traffic portion is specified in thousandths of a percent, so 20,000 for a variation would allocate 20% of the experiment traffic to that variation.'
      description: A structure that contains the configuration of which variation to use as the "control" version. The "control" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.
    ProjectArn:
      type: string
      pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*'
      minLength: 0
      maxLength: 2048
    ExperimentSchedule:
      type: object
      properties:
        analysisCompleteTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time and date that Evidently completed the analysis of the experiment.
      description: This structure contains the time and date that Evidently completed the analysis of the experiment.
    SegmentArn:
      type: string
      pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*'
      minLength: 0
      maxLength: 2048
    ExperimentStatus:
      type: string
      enum:
        - CREATED
        - UPDATING
        - RUNNING
        - COMPLETED
        - CANCELLED
    TreatmentList:
      type: array
      items:
        $ref: '#/components/schemas/Treatment'
      minItems: 2
      maxItems: 5
    ExperimentType:
      type: string
      enum:
        - aws.evidently.onlineab
    ExperimentBaseStat:
      type: string
      enum:
        - Mean
    ExperimentList:
      type: array
      items:
        $ref: '#/components/schemas/Experiment'
    ExperimentReport:
      type: object
      properties:
        content:
          allOf:
            - $ref: '#/components/schemas/JsonValue'
            - description: The content of the report.
        metricName:
          allOf:
            - $ref: '#/components/schemas/CwDimensionSafeName'
            - description: The name of the metric that is analyzed in this experiment report.
        reportName:
          allOf:
            - $ref: '#/components/schemas/ExperimentReportName'
            - description: The type of analysis used for this report.
        treatmentName:
          allOf:
            - $ref: '#/components/schemas/TreatmentName'
            - description: The name of the variation that this report pertains to.
      description: A structure that contains results of an experiment.
    ExperimentReportList:
      type: array
      items:
        $ref: '#/components/schemas/ExperimentReport'
      minItems: 0
      maxItems: 1000
    ExperimentReportNameList:
      type: array
      items:
        $ref: '#/components/schemas/ExperimentReportName'
      minItems: 0
      maxItems: 5
    ExperimentResultRequestTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ExperimentResultRequestType'
      minItems: 0
      maxItems: 5
    ExperimentResultResponseType:
      type: string
      enum:
        - Mean
        - TreatmentEffect
        - ConfidenceIntervalUpperBound
        - ConfidenceIntervalLowerBound
        - PValue
    ExperimentResultsData:
      type: object
      properties:
        metricName:
          allOf:
            - $ref: '#/components/schemas/CwDimensionSafeName'
            - description: The name of the metric.
        resultStat:
          allOf:
            - $ref: '#/components/schemas/ExperimentResultResponseType'
            - description: The experiment statistic that these results pertain to.
        treatmentName:
          allOf:
            - $ref: '#/components/schemas/TreatmentName'
            - description: 'The treatment, or variation, that returned the <code>values</code> in this structure.'
        values:
          allOf:
            - $ref: '#/components/schemas/DoubleValueList'
            - description: The values for the <code>metricName</code> that were recorded in the experiment.
      description: A structure that contains experiment results for one metric that is monitored in the experiment.
    ExperimentResultsDataList:
      type: array
      items:
        $ref: '#/components/schemas/ExperimentResultsData'
      minItems: 0
      maxItems: 1000
    ExperimentStopDesiredState:
      type: string
      enum:
        - COMPLETED
        - CANCELLED
    FeatureArn:
      type: string
      pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/feature/[-a-zA-Z0-9._]*'
      minLength: 0
      maxLength: 2048
    FeatureStatus:
      type: string
      enum:
        - AVAILABLE
        - UPDATING
    VariationValueType:
      type: string
      enum:
        - STRING
        - LONG
        - DOUBLE
        - BOOLEAN
    VariationsList:
      type: array
      items:
        $ref: '#/components/schemas/Variation'
    FeatureSummary:
      type: object
      required:
        - arn
        - createdTime
        - evaluationStrategy
        - lastUpdatedTime
        - name
        - status
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/Arn'
            - description: The ARN of the feature.
        createdTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the feature is created.
        defaultVariation:
          allOf:
            - $ref: '#/components/schemas/VariationName'
            - description: The name of the variation that is used as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.
        evaluationRules:
          allOf:
            - $ref: '#/components/schemas/EvaluationRulesList'
            - description: An array of structures that define
        evaluationStrategy:
          allOf:
            - $ref: '#/components/schemas/FeatureEvaluationStrategy'
            - description: 'If this value is <code>ALL_RULES</code>, the traffic allocation specified by any ongoing launches or experiments is being used. If this is <code>DEFAULT_VARIATION</code>, the default variation is being served to all users.'
        lastUpdatedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the feature was most recently updated.
        name:
          allOf:
            - $ref: '#/components/schemas/FeatureName'
            - description: The name of the feature.
        project:
          allOf:
            - $ref: '#/components/schemas/ProjectRef'
            - description: The name or ARN of the project that contains the feature.
        status:
          allOf:
            - $ref: '#/components/schemas/FeatureStatus'
            - description: The current state of the feature.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The list of tag keys and values associated with this feature.
      description: This structure contains information about one Evidently feature in your account.
    FeatureSummariesList:
      type: array
      items:
        $ref: '#/components/schemas/FeatureSummary'
    FeatureToVariationMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/VariationName'
    GetExperimentRequest:
      type: object
      title: GetExperimentRequest
      properties: {}
    MetricNameList:
      type: array
      items:
        $ref: '#/components/schemas/CwDimensionSafeName'
      minItems: 1
      maxItems: 1
    ResultsPeriod:
      type: integer
      minimum: 300
      maximum: 90000
    TreatmentNameList:
      type: array
      items:
        $ref: '#/components/schemas/TreatmentName'
      minItems: 1
      maxItems: 5
    GetExperimentResultsRequest:
      type: object
      required:
        - metricNames
        - treatmentNames
      title: GetExperimentResultsRequest
      properties:
        baseStat:
          allOf:
            - $ref: '#/components/schemas/ExperimentBaseStat'
            - description: 'The statistic used to calculate experiment results. Currently the only valid value is <code>mean</code>, which uses the mean of the collected values as the statistic.'
        endTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the experiment ended, if it is completed. This must be no longer than 30 days after the experiment start time.'
        metricNames:
          allOf:
            - $ref: '#/components/schemas/MetricNameList'
            - description: The names of the experiment metrics that you want to see the results of.
        period:
          allOf:
            - $ref: '#/components/schemas/ResultsPeriod'
            - description: 'In seconds, the amount of time to aggregate results together. '
        reportNames:
          allOf:
            - $ref: '#/components/schemas/ExperimentReportNameList'
            - description: 'The names of the report types that you want to see. Currently, <code>BayesianInference</code> is the only valid value.'
        resultStats:
          allOf:
            - $ref: '#/components/schemas/ExperimentResultRequestTypeList'
            - description: '<p>The statistics that you want to see in the returned results.</p> <ul> <li> <p> <code>PValue</code> specifies to use p-values for the results. A p-value is used in hypothesis testing to measure how often you are willing to make a mistake in rejecting the null hypothesis. A general practice is to reject the null hypothesis and declare that the results are statistically significant when the p-value is less than 0.05.</p> </li> <li> <p> <code>ConfidenceInterval</code> specifies a confidence interval for the results. The confidence interval represents the range of values for the chosen metric that is likely to contain the true difference between the <code>baseStat</code> of a variation and the baseline. Evidently returns the 95% confidence interval. </p> </li> <li> <p> <code>TreatmentEffect</code> is the difference in the statistic specified by the <code>baseStat</code> parameter between each variation and the default variation. </p> </li> <li> <p> <code>BaseStat</code> returns the statistical values collected for the metric for each variation. The statistic uses the same statistic specified in the <code>baseStat</code> parameter. Therefore, if <code>baseStat</code> is <code>mean</code>, this returns the mean of the values collected for each variation.</p> </li> </ul>'
        startTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the experiment started.
        treatmentNames:
          allOf:
            - $ref: '#/components/schemas/TreatmentNameList'
            - description: The names of the experiment treatments that you want to see the results for.
    TimestampList:
      type: array
      items:
        $ref: '#/components/schemas/Timestamp'
      minItems: 0
      maxItems: 100800
    GetFeatureRequest:
      type: object
      title: GetFeatureRequest
      properties: {}
    GetLaunchRequest:
      type: object
      title: GetLaunchRequest
      properties: {}
    GetProjectRequest:
      type: object
      title: GetProjectRequest
      properties: {}
    GetSegmentRequest:
      type: object
      title: GetSegmentRequest
      properties: {}
    GroupName:
      type: string
      pattern: '^[-a-zA-Z0-9._]*$'
      minLength: 1
      maxLength: 127
    GroupToWeightMap:
      type: object
      minProperties: 0
      maxProperties: 5
      additionalProperties:
        $ref: '#/components/schemas/SplitWeight'
    Integer:
      type: integer
    JsonPath:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 256
    LaunchArn:
      type: string
      pattern: 'arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/launch/[-a-zA-Z0-9._]*'
      minLength: 0
      maxLength: 2048
    LaunchExecution:
      type: object
      properties:
        endedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the launch ended.
        startedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the launch started.
      description: This structure contains information about the start and end times of the launch.
    LaunchGroupList:
      type: array
      items:
        $ref: '#/components/schemas/LaunchGroup'
    MetricMonitorList:
      type: array
      items:
        $ref: '#/components/schemas/MetricMonitor'
      minItems: 0
      maxItems: 3
    ScheduledSplitsLaunchDefinition:
      type: object
      properties:
        steps:
          allOf:
            - $ref: '#/components/schemas/ScheduledStepList'
            - description: An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch. This also defines the start time of each step.
      description: An array of structures that define the traffic allocation percentages among the feature variations during each step of a launch. This also defines the start time of each step.
    LaunchStatus:
      type: string
      enum:
        - CREATED
        - UPDATING
        - RUNNING
        - COMPLETED
        - CANCELLED
    LaunchType:
      type: string
      enum:
        - aws.evidently.splits
    LaunchGroup:
      type: object
      required:
        - featureVariations
        - name
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A description of the launch group.
        featureVariations:
          allOf:
            - $ref: '#/components/schemas/FeatureToVariationMap'
            - description: The feature variation for this launch group. This is a key-value pair.
        name:
          allOf:
            - $ref: '#/components/schemas/GroupName'
            - description: The name of the launch group.
      description: A structure that defines one launch group in a launch. A launch group is a variation of the feature that you are including in the launch.
    LaunchStopDesiredState:
      type: string
      enum:
        - COMPLETED
        - CANCELLED
    LaunchesList:
      type: array
      items:
        $ref: '#/components/schemas/Launch'
    MaxExperiments:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 8192
    ListExperimentsRequest:
      type: object
      title: ListExperimentsRequest
      properties: {}
    MaxFeatures:
      type: integer
      minimum: 1
      maximum: 100
    ListFeaturesRequest:
      type: object
      title: ListFeaturesRequest
      properties: {}
    MaxLaunches:
      type: integer
      minimum: 1
      maximum: 100
    ListLaunchesRequest:
      type: object
      title: ListLaunchesRequest
      properties: {}
    MaxProjects:
      type: integer
      minimum: 1
      maximum: 50
    ListProjectsRequest:
      type: object
      title: ListProjectsRequest
      properties: {}
    ProjectSummariesList:
      type: array
      items:
        $ref: '#/components/schemas/ProjectSummary'
    MaxReferences:
      type: integer
      minimum: 1
      maximum: 100
    SegmentReferenceResourceType:
      type: string
      enum:
        - EXPERIMENT
        - LAUNCH
    ListSegmentReferencesRequest:
      type: object
      title: ListSegmentReferencesRequest
      properties: {}
    RefResourceList:
      type: array
      items:
        $ref: '#/components/schemas/RefResource'
    MaxSegments:
      type: integer
      minimum: 1
      maximum: 50
    ListSegmentsRequest:
      type: object
      title: ListSegmentsRequest
      properties: {}
    SegmentList:
      type: array
      items:
        $ref: '#/components/schemas/Segment'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    Long:
      type: integer
    MetricUnitLabel:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 256
    MetricDefinition:
      type: object
      properties:
        entityIdKey:
          allOf:
            - $ref: '#/components/schemas/JsonPath'
            - description: 'The entity, such as a user or session, that does an action that causes a metric value to be recorded.'
        eventPattern:
          allOf:
            - $ref: '#/components/schemas/JsonValue'
            - description: '<p>The EventBridge event pattern that defines how the metric is recorded.</p> <p>For more information about EventBridge event patterns, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html">Amazon EventBridge event patterns</a>.</p>'
        name:
          allOf:
            - $ref: '#/components/schemas/CwDimensionSafeName'
            - description: The name of the metric.
        unitLabel:
          allOf:
            - $ref: '#/components/schemas/MetricUnitLabel'
            - description: The label for the units that the metric is measuring.
        valueKey:
          allOf:
            - $ref: '#/components/schemas/JsonPath'
            - description: The value that is tracked to produce the metric.
      description: This structure defines a metric that is being used to evaluate the variations during a launch or experiment.
    MetricDefinitionConfigEventPatternString:
      type: string
      minLength: 0
      maxLength: 1024
    MetricDefinitionConfig:
      type: object
      required:
        - entityIdKey
        - name
        - valueKey
      properties:
        entityIdKey:
          allOf:
            - $ref: '#/components/schemas/JsonPath'
            - description: 'The entity, such as a user or session, that does an action that causes a metric value to be recorded. An example is <code>userDetails.userID</code>.'
        eventPattern:
          allOf:
            - $ref: '#/components/schemas/MetricDefinitionConfigEventPatternString'
            - description: '<p>The EventBridge event pattern that defines how the metric is recorded.</p> <p>For more information about EventBridge event patterns, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html">Amazon EventBridge event patterns</a>.</p>'
        name:
          allOf:
            - $ref: '#/components/schemas/CwDimensionSafeName'
            - description: A name for the metric.
        unitLabel:
          allOf:
            - $ref: '#/components/schemas/MetricUnitLabel'
            - description: A label for the units that the metric is measuring.
        valueKey:
          allOf:
            - $ref: '#/components/schemas/JsonPath'
            - description: The value that is tracked to produce the metric.
      description: This structure defines a metric that you want to use to evaluate the variations during a launch or experiment.
    MetricGoal:
      type: object
      required:
        - metricDefinition
      properties:
        desiredChange:
          allOf:
            - $ref: '#/components/schemas/ChangeDirectionEnum'
            - description: <p> <code>INCREASE</code> means that a variation with a higher number for this metric is performing better.</p> <p> <code>DECREASE</code> means that a variation with a lower number for this metric is performing better.</p>
        metricDefinition:
          allOf:
            - $ref: '#/components/schemas/MetricDefinition'
            - description: A structure that contains details about the metric.
      description: A structure that tells Evidently whether higher or lower values are desired for a metric that is used in an experiment.
    MetricMonitor:
      type: object
      required:
        - metricDefinition
      properties:
        metricDefinition:
          allOf:
            - $ref: '#/components/schemas/MetricDefinition'
            - description: A structure that defines the metric.
      description: A structure that defines a metric to be used to monitor performance of the variations during a launch.
    PrimitiveBoolean:
      type: boolean
    ProjectAppConfigResource:
      type: object
      required:
        - applicationId
        - configurationProfileId
        - environmentId
      properties:
        applicationId:
          allOf:
            - $ref: '#/components/schemas/AppConfigResourceId'
            - description: 'The ID of the AppConfig application to use for client-side evaluation. '
        configurationProfileId:
          allOf:
            - $ref: '#/components/schemas/AppConfigResourceId'
            - description: 'The ID of the AppConfig profile to use for client-side evaluation. '
        environmentId:
          allOf:
            - $ref: '#/components/schemas/AppConfigResourceId'
            - description: The ID of the AppConfig environment to use for client-side evaluation. This must be an environment that is within the application that you specify for <code>applicationId</code>.
      description: This is a structure that defines the configuration of how your application integrates with AppConfig to run client-side evaluation.
    ProjectDataDelivery:
      type: object
      properties:
        cloudWatchLogs:
          allOf:
            - $ref: '#/components/schemas/CloudWatchLogsDestination'
            - description: 'If the project stores evaluation events in CloudWatch Logs, this structure stores the log group name.'
        s3Destination:
          allOf:
            - $ref: '#/components/schemas/S3Destination'
            - description: 'If the project stores evaluation events in an Amazon S3 bucket, this structure stores the bucket name and bucket prefix.'
      description: A structure that contains information about where Evidently is to store evaluation events for longer term storage.
    ProjectStatus:
      type: string
      enum:
        - AVAILABLE
        - UPDATING
    S3Destination:
      type: object
      properties:
        bucket:
          allOf:
            - $ref: '#/components/schemas/S3BucketSafeName'
            - description: The name of the bucket in which Evidently stores evaluation events.
        prefix:
          allOf:
            - $ref: '#/components/schemas/S3PrefixSafeName'
            - description: The bucket prefix in which Evidently stores evaluation events.
      description: 'If the project stores evaluation events in an Amazon S3 bucket, this structure stores the bucket name and bucket prefix.'
    ProjectSummary:
      type: object
      required:
        - arn
        - createdTime
        - lastUpdatedTime
        - name
        - status
      properties:
        activeExperimentCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of experiments currently in the project.
        activeLaunchCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of ongoing launches currently in the project.
        arn:
          allOf:
            - $ref: '#/components/schemas/ProjectArn'
            - description: The name or ARN of the project.
        createdTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the project is created.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the project.
        experimentCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of experiments currently in the project.
        featureCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of features currently in the project.
        lastUpdatedTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the project was most recently updated.
        launchCount:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The number of launches currently in the project, including launches that are ongoing, completed, and not started yet.'
        name:
          allOf:
            - $ref: '#/components/schemas/ProjectName'
            - description: The name of the project.
        status:
          allOf:
            - $ref: '#/components/schemas/ProjectStatus'
            - description: The current state of the project.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The list of tag keys and values associated with this project.
      description: A structure that contains configuration information about an Evidently project.
    PutProjectEventsRequest:
      type: object
      required:
        - events
      title: PutProjectEventsRequest
      properties:
        events:
          allOf:
            - $ref: '#/components/schemas/EventList'
            - description: An array of event structures that contain the performance data that is being sent to Evidently.
    PutProjectEventsResultEntryList:
      type: array
      items:
        $ref: '#/components/schemas/PutProjectEventsResultEntry'
    Uuid:
      type: string
      pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
      minLength: 36
      maxLength: 36
    PutProjectEventsResultEntry:
      type: object
      properties:
        errorCode:
          allOf:
            - $ref: '#/components/schemas/ErrorCodeEnum'
            - description: 'If the <code>PutProjectEvents</code> operation has an error, the error code is returned here.'
        errorMessage:
          allOf:
            - $ref: '#/components/schemas/ErrorMessage'
            - description: 'If the <code>PutProjectEvents</code> operation has an error, the error message is returned here.'
        eventId:
          allOf:
            - $ref: '#/components/schemas/Uuid'
            - description: 'A unique ID assigned to this <code>PutProjectEvents</code> operation. '
      description: 'A structure that contains Evidently''s response to the sent events, including an event ID and error codes, if any. '
    RefResource:
      type: object
      required:
        - name
        - type
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ARN of the experiment or launch.
        endTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The day and time that this experiment or launch ended.
        lastUpdatedOn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The day and time that this experiment or launch was most recently updated.
        name:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the experiment or launch.
        startTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The day and time that this experiment or launch started.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status of the experiment or launch.
        type:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Specifies whether the resource that this structure contains information about is an experiment or a launch.
      description: 'A structure that contains information about one experiment or launch that uses the specified segment. '
    SegmentOverridesList:
      type: array
      items:
        $ref: '#/components/schemas/SegmentOverride'
      minItems: 0
      maxItems: 6
    ScheduledSplit:
      type: object
      required:
        - startTime
      properties:
        groupWeights:
          allOf:
            - $ref: '#/components/schemas/GroupToWeightMap'
            - description: '<p>The traffic allocation percentages among the feature variations during one step of a launch. This is a set of key-value pairs. The keys are variation names. The values represent the percentage of traffic to allocate to that variation during this step.</p> <p>The values is expressed in thousandths of a percent, so assigning a weight of 50000 assigns 50% of traffic to that variation.</p> <p>If the sum of the weights for all the variations in a segment override does not add up to 100,000, then the remaining traffic that matches this segment is not assigned by this segment override, and instead moves on to the next segment override or the default traffic split.</p>'
        segmentOverrides:
          allOf:
            - $ref: '#/components/schemas/SegmentOverridesList'
            - description: '<p>Use this parameter to specify different traffic splits for one or more audience <i>segments</i>. A segment is a portion of your audience that share one or more characteristics. Examples could be Chrome browser users, users in Europe, or Firefox browser users in Europe who also fit other criteria that your application collects, such as age.</p> <p>This parameter is an array of up to six segment override objects. Each of these objects specifies a segment that you have already created, and defines the traffic split for that segment.</p>'
        startTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that this step of the launch starts.
      description: 'This structure defines the traffic allocation percentages among the feature variations during one step of a launch, and the start time of that step.'
    ScheduledSplitConfig:
      type: object
      required:
        - groupWeights
        - startTime
      properties:
        groupWeights:
          allOf:
            - $ref: '#/components/schemas/GroupToWeightMap'
            - description: '<p>The traffic allocation percentages among the feature variations during one step of a launch. This is a set of key-value pairs. The keys are variation names. The values represent the percentage of traffic to allocate to that variation during this step.</p> <p>The values is expressed in thousandths of a percent, so assigning a weight of 50000 assigns 50% of traffic to that variation.</p> <p>If the sum of the weights for all the variations in a segment override does not add up to 100,000, then the remaining traffic that matches this segment is not assigned by this segment override, and instead moves on to the next segment override or the default traffic split.</p>'
        segmentOverrides:
          allOf:
            - $ref: '#/components/schemas/SegmentOverridesList'
            - description: '<p>Use this parameter to specify different traffic splits for one or more audience <i>segments</i>. A segment is a portion of your audience that share one or more characteristics. Examples could be Chrome browser users, users in Europe, or Firefox browser users in Europe who also fit other criteria that your application collects, such as age.</p> <p>This parameter is an array of up to six segment override objects. Each of these objects specifies a segment that you have already created, and defines the traffic split for that segment.</p>'
        startTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that this step of the launch starts.
      description: 'This structure defines the traffic allocation percentages among the feature variations during one step of a launch, and the start time of that step.'
    ScheduledStepList:
      type: array
      items:
        $ref: '#/components/schemas/ScheduledSplit'
      minItems: 1
      maxItems: 6
    SegmentOverride:
      type: object
      required:
        - evaluationOrder
        - segment
        - weights
      properties:
        evaluationOrder:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'A number indicating the order to use to evaluate segment overrides, if there are more than one. Segment overrides with lower numbers are evaluated first.'
        segment:
          allOf:
            - $ref: '#/components/schemas/SegmentRef'
            - description: The ARN of the segment to use.
        weights:
          allOf:
            - $ref: '#/components/schemas/GroupToWeightMap'
            - description: 'The traffic allocation percentages among the feature variations to assign to this segment. This is a set of key-value pairs. The keys are variation names. The values represent the amount of traffic to allocate to that variation for this segment. This is expressed in thousandths of a percent, so a weight of 50000 represents 50% of traffic.'
      description: 'This structure specifies a segment that you have already created, and defines the traffic split for that segment to be used in a launch.'
    StartExperimentRequest:
      type: object
      required:
        - analysisCompleteTime
      title: StartExperimentRequest
      properties:
        analysisCompleteTime:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time to end the experiment. This must be no more than 30 days after the experiment starts.
    StartLaunchRequest:
      type: object
      title: StartLaunchRequest
      properties: {}
    StopExperimentRequest:
      type: object
      title: StopExperimentRequest
      properties:
        desiredState:
          allOf:
            - $ref: '#/components/schemas/ExperimentStopDesiredState'
            - description: Specify whether the experiment is to be considered <code>COMPLETED</code> or <code>CANCELLED</code> after it stops.
        reason:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A string that describes why you are stopping the experiment.
    StopLaunchRequest:
      type: object
      title: StopLaunchRequest
      properties:
        desiredState:
          allOf:
            - $ref: '#/components/schemas/LaunchStopDesiredState'
            - description: Specify whether to consider the launch as <code>COMPLETED</code> or <code>CANCELLED</code> after it stops.
        reason:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: A string that describes why you are stopping the launch.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The list of key-value pairs to associate with the resource.
    TestSegmentPatternRequest:
      type: object
      required:
        - pattern
        - payload
      title: TestSegmentPatternRequest
      properties:
        pattern:
          allOf:
            - $ref: '#/components/schemas/SegmentPattern'
            - description: The pattern to test.
        payload:
          allOf:
            - $ref: '#/components/schemas/JsonValue'
            - description: A sample <code>evaluationContext</code> JSON block to test against the specified pattern.
    Treatment:
      type: object
      required:
        - name
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the treatment.
        featureVariations:
          allOf:
            - $ref: '#/components/schemas/FeatureToVariationMap'
            - description: 'The feature variation used for this treatment. This is a key-value pair. The key is the feature name, and the value is the variation name.'
        name:
          allOf:
            - $ref: '#/components/schemas/TreatmentName'
            - description: The name of this treatment.
      description: A structure that defines one treatment in an experiment. A treatment is a variation of the feature that you are including in the experiment.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateExperimentRequest:
      type: object
      title: UpdateExperimentRequest
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: An optional description of the experiment.
        metricGoals:
          allOf:
            - $ref: '#/components/schemas/MetricGoalConfigList'
            - description: 'An array of structures that defines the metrics used for the experiment, and whether a higher or lower value for each metric is the goal.'
        onlineAbConfig:
          allOf:
            - $ref: '#/components/schemas/OnlineAbConfig'
            - description: A structure that contains the configuration of which variation o use as the "control" version. The "control" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.
        randomizationSalt:
          allOf:
            - $ref: '#/components/schemas/RandomizationSalt'
            - description: 'When Evidently assigns a particular user session to an experiment, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>, Evidently uses the experiment name as the <code>randomizationSalt</code>.'
        removeSegment:
          allOf:
            - $ref: '#/components/schemas/PrimitiveBoolean'
            - description: Removes a segment from being used in an experiment. You can't use this parameter if the experiment is currently running.
        samplingRate:
          allOf:
            - $ref: '#/components/schemas/SplitWeight'
            - description: '<p>The portion of the available audience that you want to allocate to this experiment, in thousandths of a percent. The available audience is the total audience minus the audience that you have allocated to overrides or current launches of this feature.</p> <p>This is represented in thousandths of a percent. For example, specify 20,000 to allocate 20% of the available audience.</p>'
        segment:
          allOf:
            - $ref: '#/components/schemas/SegmentRef'
            - description: 'Adds an audience <i>segment</i> to an experiment. When a segment is used in an experiment, only user sessions that match the segment pattern are used in the experiment. You can''t use this parameter if the experiment is currently running.'
        treatments:
          allOf:
            - $ref: '#/components/schemas/TreatmentConfigList'
            - description: An array of structures that define the variations being tested in the experiment.
    VariationNameList:
      type: array
      items:
        $ref: '#/components/schemas/VariationName'
      minItems: 0
      maxItems: 5
    UpdateFeatureRequest:
      type: object
      title: UpdateFeatureRequest
      properties:
        addOrUpdateVariations:
          allOf:
            - $ref: '#/components/schemas/VariationConfigsList'
            - description: 'To update variation configurations for this feature, or add new ones, specify this structure. In this array, include any variations that you want to add or update. If the array includes a variation name that already exists for this feature, it is updated. If it includes a new variation name, it is added as a new variation.'
        defaultVariation:
          allOf:
            - $ref: '#/components/schemas/VariationName'
            - description: The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: An optional description of the feature.
        entityOverrides:
          allOf:
            - $ref: '#/components/schemas/EntityOverrideMap'
            - description: '<p>Specified users that should always be served a specific variation of a feature. Each user is specified by a key-value pair . For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.</p> <p>This parameter is limited to 2500 overrides or a total of 40KB. The 40KB limit includes an overhead of 6 bytes per override.</p>'
        evaluationStrategy:
          allOf:
            - $ref: '#/components/schemas/FeatureEvaluationStrategy'
            - description: Specify <code>ALL_RULES</code> to activate the traffic allocation specified by any ongoing launches or experiments. Specify <code>DEFAULT_VARIATION</code> to serve the default variation to all users instead.
        removeVariations:
          allOf:
            - $ref: '#/components/schemas/VariationNameList'
            - description: '<p>Removes a variation from the feature. If the variation you specify doesn''t exist, then this makes no change and does not report an error.</p> <p>This operation fails if you try to remove a variation that is part of an ongoing launch or experiment.</p>'
    UpdateLaunchRequest:
      type: object
      title: UpdateLaunchRequest
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: An optional description for the launch.
        groups:
          allOf:
            - $ref: '#/components/schemas/LaunchGroupConfigList'
            - description: An array of structures that contains the feature and variations that are to be used for the launch.
        metricMonitors:
          allOf:
            - $ref: '#/components/schemas/MetricMonitorConfigList'
            - description: An array of structures that define the metrics that will be used to monitor the launch performance.
        randomizationSalt:
          allOf:
            - $ref: '#/components/schemas/RandomizationSalt'
            - description: 'When Evidently assigns a particular user session to a launch, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>, Evidently uses the launch name as the <code>randomizationSalt</code>.'
        scheduledSplitsConfig:
          allOf:
            - $ref: '#/components/schemas/ScheduledSplitsLaunchConfig'
            - description: An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch.
    UpdateProjectDataDeliveryRequest:
      type: object
      title: UpdateProjectDataDeliveryRequest
      properties:
        cloudWatchLogs:
          allOf:
            - $ref: '#/components/schemas/CloudWatchLogsDestinationConfig'
            - description: A structure containing the CloudWatch Logs log group where you want to store evaluation events.
        s3Destination:
          allOf:
            - $ref: '#/components/schemas/S3DestinationConfig'
            - description: A structure containing the S3 bucket name and bucket prefix where you want to store evaluation events.
    UpdateProjectRequest:
      type: object
      title: UpdateProjectRequest
      properties:
        appConfigResource:
          allOf:
            - $ref: '#/components/schemas/ProjectAppConfigResourceConfig'
            - description: '<p>Use this parameter if the project will use client-side evaluation powered by AppConfig. Client-side evaluation allows your application to assign variations to user sessions locally instead of by calling the <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html">EvaluateFeature</a> operation. This mitigates the latency and availability risks that come with an API call. allows you to</p> <p>This parameter is a structure that contains information about the AppConfig application that will be used for client-side evaluation.</p>'
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: An optional description of the project.
    VariableValueLongValueLong:
      type: integer
      minimum: -9007199254740991
      maximum: 9007199254740991
    VariableValueStringValueString:
      type: string
      minLength: 0
      maxLength: 512
    Variation:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/VariationName'
            - description: The name of the variation.
        value:
          allOf:
            - $ref: '#/components/schemas/VariableValue'
            - description: The value assigned to this variation.
      description: This structure contains the name and variation value of one variation of a feature.
security:
  - hmac: []
