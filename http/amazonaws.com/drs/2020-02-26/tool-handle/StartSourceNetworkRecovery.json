{
  "name": "StartSourceNetworkRecovery",
  "description": "Deploy VPC for the specified Source Network and modify launch templates to use this network. The VPC will be deployed using a dedicated CloudFormation stack.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "sourceNetworks"
        ],
        "properties": {
          "deployAsNew": {
            "description": "Don't update existing CloudFormation Stack, recover the network using a new stack.",
            "type": "boolean"
          },
          "sourceNetworks": {
            "description": "The Source Networks that we want to start a Recovery Job for.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/StartSourceNetworkRecoveryRequestNetworkEntry"
            },
            "minItems": 1,
            "maxItems": 100
          },
          "tags": {
            "description": "The tags to be associated with the Source Network recovery Job.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "StartSourceNetworkRecoveryRequestNetworkEntry": {
        "type": "object",
        "required": [
          "sourceNetworkID"
        ],
        "properties": {
          "cfnStackName": {
            "allOf": [
              {
                "$ref": "#/$defs/CfnStackName"
              },
              {
                "description": "CloudFormation stack name to be used for recovering the network."
              }
            ]
          },
          "sourceNetworkID": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceNetworkID"
              },
              {
                "description": "The ID of the Source Network you want to recover."
              }
            ]
          }
        },
        "description": "An object representing the Source Network to recover."
      },
      "CfnStackName": {
        "type": "string",
        "pattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "SourceNetworkID": {
        "type": "string",
        "pattern": "^sn-[0-9a-zA-Z]{17}$",
        "minLength": 20,
        "maxLength": 20
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://drs.us-east-1.amazonaws.com/StartSourceNetworkRecovery"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**job**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
