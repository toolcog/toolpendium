openapi: 3.0.0
info:
  version: '2020-02-26'
  x-release: v4
  title: Elastic Disaster Recovery Service
  description: AWS Elastic Disaster Recovery Service.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: drs
  x-aws-signingName: drs
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/drs-2020-02-26.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/drs/'
servers:
  - url: 'http://drs.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The drs multi-region endpoint
  - url: 'https://drs.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The drs multi-region endpoint
  - url: 'http://drs.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The drs endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://drs.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The drs endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /AssociateSourceNetworkStack:
    post:
      operationId: AssociateSourceNetworkStack
      description: Associate a Source Network to an existing CloudFormation Stack and modify launch templates to use this network. Can be used for reverting to previously deployed CloudFormation stacks.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateSourceNetworkStackResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '486':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - cfnStackName
                - sourceNetworkID
              properties:
                cfnStackName:
                  description: CloudFormation template to associate with a Source Network.
                  type: string
                  pattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
                  minLength: 1
                  maxLength: 128
                  format: password
                sourceNetworkID:
                  description: The Source Network ID to associate with CloudFormation template.
                  type: string
                  pattern: '^sn-[0-9a-zA-Z]{17}$'
                  minLength: 20
                  maxLength: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /CreateExtendedSourceServer:
    post:
      operationId: CreateExtendedSourceServer
      description: Create an extended source server in the target Account based on the source server in staging account.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExtendedSourceServerResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '486':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerArn
              properties:
                sourceServerArn:
                  description: This defines the ARN of the source server in staging Account based on which you want to create an extended source server.
                  type: string
                  pattern: '^arn:(?:[0-9a-zA-Z_-]+:){3}([0-9]{12,}):source-server/(s-[0-9a-zA-Z]{17})$'
                  minLength: 20
                  maxLength: 2048
                tags:
                  description: A list of tags associated with the extended source server.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /CreateLaunchConfigurationTemplate:
    post:
      operationId: CreateLaunchConfigurationTemplate
      description: Creates a new Launch Configuration Template.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLaunchConfigurationTemplateResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                copyPrivateIp:
                  description: Copy private IP.
                  type: boolean
                copyTags:
                  description: Copy tags.
                  type: boolean
                exportBucketArn:
                  description: S3 bucket ARN to export Source Network templates.
                  type: string
                  pattern: '^arn:.{16,2044}$'
                  minLength: 20
                  maxLength: 2048
                launchDisposition:
                  description: Launch disposition.
                  type: string
                  enum:
                    - STOPPED
                    - STARTED
                licensing:
                  description: Configuration of a machine's license.
                  type: object
                  properties:
                    osByol:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to enable "Bring your own license" or not.
                tags:
                  description: Request to associate tags during creation of a Launch Configuration Template.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                targetInstanceTypeRightSizingMethod:
                  description: Target instance type right-sizing method.
                  type: string
                  enum:
                    - NONE
                    - BASIC
                    - IN_AWS
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /CreateReplicationConfigurationTemplate:
    post:
      operationId: CreateReplicationConfigurationTemplate
      description: Creates a new ReplicationConfigurationTemplate.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfigurationTemplate'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - associateDefaultSecurityGroup
                - bandwidthThrottling
                - createPublicIP
                - dataPlaneRouting
                - defaultLargeStagingDiskType
                - ebsEncryption
                - pitPolicy
                - replicationServerInstanceType
                - replicationServersSecurityGroupsIDs
                - stagingAreaSubnetId
                - stagingAreaTags
                - useDedicatedReplicationServer
              properties:
                associateDefaultSecurityGroup:
                  description: Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration Template.
                  type: boolean
                autoReplicateNewDisks:
                  description: Whether to allow the AWS replication agent to automatically replicate newly added disks.
                  type: boolean
                bandwidthThrottling:
                  description: Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.
                  type: integer
                  minimum: 0
                createPublicIP:
                  description: Whether to create a Public IP for the Recovery Instance by default.
                  type: boolean
                dataPlaneRouting:
                  description: The data plane routing mechanism that will be used for replication.
                  type: string
                  enum:
                    - PRIVATE_IP
                    - PUBLIC_IP
                defaultLargeStagingDiskType:
                  description: The Staging Disk EBS volume type to be used during replication.
                  type: string
                  enum:
                    - GP2
                    - GP3
                    - ST1
                    - AUTO
                ebsEncryption:
                  description: The type of EBS encryption to be used during replication.
                  type: string
                  enum:
                    - DEFAULT
                    - CUSTOM
                    - NONE
                ebsEncryptionKeyArn:
                  description: The ARN of the EBS encryption key to be used during replication.
                  type: string
                  pattern: '^arn:.{16,2044}$'
                  minLength: 20
                  maxLength: 2048
                pitPolicy:
                  description: The Point in time (PIT) policy to manage snapshots taken during replication.
                  type: array
                  items:
                    $ref: '#/components/schemas/PITPolicyRule'
                  minItems: 1
                  maxItems: 10
                replicationServerInstanceType:
                  description: The instance type to be used for the replication server.
                  type: string
                  minLength: 0
                  maxLength: 255
                replicationServersSecurityGroupsIDs:
                  description: The security group IDs that will be used by the replication server.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupID'
                  minItems: 0
                  maxItems: 32
                stagingAreaSubnetId:
                  description: The subnet to be used by the replication staging area.
                  type: string
                  pattern: '^subnet-[0-9a-fA-F]{8,}$'
                  minLength: 0
                  maxLength: 255
                stagingAreaTags:
                  description: 'A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                tags:
                  description: A set of tags to be associated with the Replication Configuration Template resource.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                useDedicatedReplicationServer:
                  description: Whether to use a dedicated Replication Server in the replication staging area.
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /CreateSourceNetwork:
    post:
      operationId: CreateSourceNetwork
      description: Create a new Source Network resource for a provided VPC ID.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSourceNetworkResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '486':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - originAccountID
                - originRegion
                - vpcID
              properties:
                originAccountID:
                  description: Account containing the VPC to protect.
                  type: string
                  pattern: '[0-9]{12,}'
                  minLength: 12
                  maxLength: 12
                originRegion:
                  description: Region containing the VPC to protect.
                  type: string
                  pattern: '^(us(-gov)?|ap|ca|cn|eu|sa|af|me)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-[0-9]$'
                  minLength: 0
                  maxLength: 255
                tags:
                  description: A set of tags to be associated with the Source Network resource.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                vpcID:
                  description: Which VPC ID to protect.
                  type: string
                  pattern: '^vpc-[0-9a-fA-F]{8,}$'
                  minLength: 12
                  maxLength: 21
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteJob:
    post:
      operationId: DeleteJob
      description: Deletes a single Job by ID.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - jobID
              properties:
                jobID:
                  description: The ID of the Job to be deleted.
                  type: string
                  pattern: '^drsjob-[0-9a-zA-Z]{17}$'
                  minLength: 24
                  maxLength: 24
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteLaunchConfigurationTemplate:
    post:
      operationId: DeleteLaunchConfigurationTemplate
      description: Deletes a single Launch Configuration Template by ID.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLaunchConfigurationTemplateResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - launchConfigurationTemplateID
              properties:
                launchConfigurationTemplateID:
                  description: The ID of the Launch Configuration Template to be deleted.
                  type: string
                  pattern: '^lct-[0-9a-zA-Z]{17}$'
                  minLength: 21
                  maxLength: 21
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteRecoveryInstance:
    post:
      operationId: DeleteRecoveryInstance
      description: Deletes a single Recovery Instance by ID. This deletes the Recovery Instance resource from Elastic Disaster Recovery. The Recovery Instance must be disconnected first in order to delete it.
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recoveryInstanceID
              properties:
                recoveryInstanceID:
                  description: The ID of the Recovery Instance to be deleted.
                  type: string
                  pattern: '^i-[0-9a-fA-F]{8,}$'
                  minLength: 10
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteReplicationConfigurationTemplate:
    post:
      operationId: DeleteReplicationConfigurationTemplate
      description: Deletes a single Replication Configuration Template by ID
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReplicationConfigurationTemplateResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - replicationConfigurationTemplateID
              properties:
                replicationConfigurationTemplateID:
                  description: The ID of the Replication Configuration Template to be deleted.
                  type: string
                  pattern: '^rct-[0-9a-zA-Z]{17}$'
                  minLength: 21
                  maxLength: 21
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteSourceNetwork:
    post:
      operationId: DeleteSourceNetwork
      description: Delete Source Network resource.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSourceNetworkResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceNetworkID
              properties:
                sourceNetworkID:
                  description: ID of the Source Network to delete.
                  type: string
                  pattern: '^sn-[0-9a-zA-Z]{17}$'
                  minLength: 20
                  maxLength: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteSourceServer:
    post:
      operationId: DeleteSourceServer
      description: Deletes a single Source Server by ID. The Source Server must be disconnected first.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSourceServerResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: The ID of the Source Server to be deleted.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeJobLogItems:
    post:
      operationId: DescribeJobLogItems
      description: Retrieves a detailed Job log with pagination.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobLogItemsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - jobID
              properties:
                jobID:
                  description: The ID of the Job for which Job log items will be retrieved.
                  type: string
                  pattern: '^drsjob-[0-9a-zA-Z]{17}$'
                  minLength: 24
                  maxLength: 24
                maxResults:
                  description: Maximum number of Job log items to retrieve.
                  type: integer
                  minimum: 1
                nextToken:
                  description: The token of the next Job log items to retrieve.
                  type: string
                  minLength: 0
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeJobs:
    post:
      operationId: DescribeJobs
      description: 'Returns a list of Jobs. Use the JobsID and fromDate and toDate filters to limit which jobs are returned. The response is sorted by creationDataTime - latest date first. Jobs are created by the StartRecovery, TerminateRecoveryInstances and StartFailbackLaunch APIs. Jobs are also created by DiagnosticLaunch and TerminateDiagnosticInstances, which are APIs available only to *Support* and only used in response to relevant support tickets.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  description: A set of filters by which to return Jobs.
                  type: object
                  properties:
                    fromDate:
                      allOf:
                        - $ref: '#/components/schemas/ISO8601DatetimeString'
                        - description: The start date in a date range query.
                    jobIDs:
                      allOf:
                        - $ref: '#/components/schemas/DescribeJobsRequestFiltersJobIDs'
                        - description: An array of Job IDs that should be returned. An empty array means all jobs.
                    toDate:
                      allOf:
                        - $ref: '#/components/schemas/ISO8601DatetimeString'
                        - description: The end date in a date range query.
                maxResults:
                  description: Maximum number of Jobs to retrieve.
                  type: integer
                  minimum: 1
                nextToken:
                  description: The token of the next Job to retrieve.
                  type: string
                  minLength: 0
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeLaunchConfigurationTemplates:
    post:
      operationId: DescribeLaunchConfigurationTemplates
      description: 'Lists all Launch Configuration Templates, filtered by Launch Configuration Template IDs'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLaunchConfigurationTemplatesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                launchConfigurationTemplateIDs:
                  description: Request to filter Launch Configuration Templates list by Launch Configuration Template ID.
                  type: array
                  items:
                    $ref: '#/components/schemas/LaunchConfigurationTemplateID'
                  minItems: 0
                  maxItems: 1
                maxResults:
                  description: Maximum results to be returned in DescribeLaunchConfigurationTemplates.
                  type: integer
                  minimum: 1
                  maximum: 1000
                nextToken:
                  description: The token of the next Launch Configuration Template to retrieve.
                  type: string
                  minLength: 0
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeRecoveryInstances:
    post:
      operationId: DescribeRecoveryInstances
      description: Lists all Recovery Instances or multiple Recovery Instances by ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRecoveryInstancesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  description: A set of filters by which to return Recovery Instances.
                  type: object
                  properties:
                    recoveryInstanceIDs:
                      allOf:
                        - $ref: '#/components/schemas/RecoveryInstanceIDs'
                        - description: An array of Recovery Instance IDs that should be returned. An empty array means all Recovery Instances.
                    sourceServerIDs:
                      allOf:
                        - $ref: '#/components/schemas/SourceServerIDs'
                        - description: An array of Source Server IDs for which associated Recovery Instances should be returned.
                maxResults:
                  description: Maximum number of Recovery Instances to retrieve.
                  type: integer
                  minimum: 1
                nextToken:
                  description: The token of the next Recovery Instance to retrieve.
                  type: string
                  minLength: 0
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeRecoverySnapshots:
    post:
      operationId: DescribeRecoverySnapshots
      description: Lists all Recovery Snapshots for a single Source Server.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRecoverySnapshotsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                filters:
                  description: A set of filters by which to return Recovery Snapshots.
                  type: object
                  properties:
                    fromDateTime:
                      allOf:
                        - $ref: '#/components/schemas/ISO8601DatetimeString'
                        - description: The start date in a date range query.
                    toDateTime:
                      allOf:
                        - $ref: '#/components/schemas/ISO8601DatetimeString'
                        - description: The end date in a date range query.
                maxResults:
                  description: Maximum number of Recovery Snapshots to retrieve.
                  type: integer
                  minimum: 1
                nextToken:
                  description: The token of the next Recovery Snapshot to retrieve.
                  type: string
                  minLength: 0
                  maxLength: 2048
                order:
                  description: The sorted ordering by which to return Recovery Snapshots.
                  type: string
                  enum:
                    - ASC
                    - DESC
                sourceServerID:
                  description: Filter Recovery Snapshots by Source Server ID.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeReplicationConfigurationTemplates:
    post:
      operationId: DescribeReplicationConfigurationTemplates
      description: 'Lists all ReplicationConfigurationTemplates, filtered by Source Server IDs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReplicationConfigurationTemplatesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  description: Maximum number of Replication Configuration Templates to retrieve.
                  type: integer
                  minimum: 1
                nextToken:
                  description: The token of the next Replication Configuration Template to retrieve.
                  type: string
                  minLength: 0
                  maxLength: 2048
                replicationConfigurationTemplateIDs:
                  description: The IDs of the Replication Configuration Templates to retrieve. An empty list means all Replication Configuration Templates.
                  type: array
                  items:
                    $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeSourceNetworks:
    post:
      operationId: DescribeSourceNetworks
      description: Lists all Source Networks or multiple Source Networks filtered by ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSourceNetworksResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  description: A set of filters by which to return Source Networks.
                  type: object
                  properties:
                    originAccountID:
                      allOf:
                        - $ref: '#/components/schemas/AccountID'
                        - description: Filter Source Networks by account ID containing the protected VPCs.
                    originRegion:
                      allOf:
                        - $ref: '#/components/schemas/AwsRegion'
                        - description: Filter Source Networks by the region containing the protected VPCs.
                    sourceNetworkIDs:
                      allOf:
                        - $ref: '#/components/schemas/DescribeSourceNetworksRequestFiltersIDs'
                        - description: An array of Source Network IDs that should be returned. An empty array means all Source Networks.
                maxResults:
                  description: Maximum number of Source Networks to retrieve.
                  type: integer
                  minimum: 1
                nextToken:
                  description: The token of the next Source Networks to retrieve.
                  type: string
                  minLength: 0
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DescribeSourceServers:
    post:
      operationId: DescribeSourceServers
      description: Lists all Source Servers or multiple Source Servers filtered by ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSourceServersResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  description: A set of filters by which to return Source Servers.
                  type: object
                  properties:
                    hardwareId:
                      allOf:
                        - $ref: '#/components/schemas/BoundedString'
                        - description: 'An ID that describes the hardware of the Source Server. This is either an EC2 instance id, a VMware uuid or a mac address.'
                    sourceServerIDs:
                      allOf:
                        - $ref: '#/components/schemas/DescribeSourceServersRequestFiltersIDs'
                        - description: An array of Source Servers IDs that should be returned. An empty array means all Source Servers.
                    stagingAccountIDs:
                      allOf:
                        - $ref: '#/components/schemas/AccountIDs'
                        - description: An array of staging account IDs that extended source servers belong to. An empty array means all source servers will be shown.
                maxResults:
                  description: Maximum number of Source Servers to retrieve.
                  type: integer
                  minimum: 1
                nextToken:
                  description: The token of the next Source Server to retrieve.
                  type: string
                  minLength: 0
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DisconnectRecoveryInstance:
    post:
      operationId: DisconnectRecoveryInstance
      description: 'Disconnect a Recovery Instance from Elastic Disaster Recovery. Data replication is stopped immediately. All AWS resources created by Elastic Disaster Recovery for enabling the replication of the Recovery Instance will be terminated / deleted within 90 minutes. If the agent on the Recovery Instance has not been prevented from communicating with the Elastic Disaster Recovery service, then it will receive a command to uninstall itself (within approximately 10 minutes). The following properties of the Recovery Instance will be changed immediately: dataReplicationInfo.dataReplicationState will be set to DISCONNECTED; The totalStorageBytes property for each of dataReplicationInfo.replicatedDisks will be set to zero; dataReplicationInfo.lagDuration and dataReplicationInfo.lagDuration will be nullified.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recoveryInstanceID
              properties:
                recoveryInstanceID:
                  description: The ID of the Recovery Instance to disconnect.
                  type: string
                  pattern: '^i-[0-9a-fA-F]{8,}$'
                  minLength: 10
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DisconnectSourceServer:
    post:
      operationId: DisconnectSourceServer
      description: 'Disconnects a specific Source Server from Elastic Disaster Recovery. Data replication is stopped immediately. All AWS resources created by Elastic Disaster Recovery for enabling the replication of the Source Server will be terminated / deleted within 90 minutes. You cannot disconnect a Source Server if it has a Recovery Instance. If the agent on the Source Server has not been prevented from communicating with the Elastic Disaster Recovery service, then it will receive a command to uninstall itself (within approximately 10 minutes). The following properties of the SourceServer will be changed immediately: dataReplicationInfo.dataReplicationState will be set to DISCONNECTED; The totalStorageBytes property for each of dataReplicationInfo.replicatedDisks will be set to zero; dataReplicationInfo.lagDuration and dataReplicationInfo.lagDuration will be nullified.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: The ID of the Source Server to disconnect.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ExportSourceNetworkCfnTemplate:
    post:
      operationId: ExportSourceNetworkCfnTemplate
      description: Export the Source Network CloudFormation template to an S3 bucket.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportSourceNetworkCfnTemplateResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceNetworkID
              properties:
                sourceNetworkID:
                  description: The Source Network ID to export its CloudFormation template to an S3 bucket.
                  type: string
                  pattern: '^sn-[0-9a-zA-Z]{17}$'
                  minLength: 20
                  maxLength: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /GetFailbackReplicationConfiguration:
    post:
      operationId: GetFailbackReplicationConfiguration
      description: 'Lists all Failback ReplicationConfigurations, filtered by Recovery Instance ID.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFailbackReplicationConfigurationResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recoveryInstanceID
              properties:
                recoveryInstanceID:
                  description: The ID of the Recovery Instance whose failback replication configuration should be returned.
                  type: string
                  pattern: '^i-[0-9a-fA-F]{8,}$'
                  minLength: 10
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /GetLaunchConfiguration:
    post:
      operationId: GetLaunchConfiguration
      description: 'Gets a LaunchConfiguration, filtered by Source Server IDs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchConfiguration'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: The ID of the Source Server that we want to retrieve a Launch Configuration for.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /GetReplicationConfiguration:
    post:
      operationId: GetReplicationConfiguration
      description: 'Gets a ReplicationConfiguration, filtered by Source Server ID.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfiguration'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: The ID of the Source Serve for this Replication Configuration.r
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /InitializeService:
    post:
      operationId: InitializeService
      description: Initialize Elastic Disaster Recovery.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitializeServiceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ListExtensibleSourceServers:
    post:
      operationId: ListExtensibleSourceServers
      description: 'Returns a list of source servers on a staging account that are extensible, which means that: a. The source server is not already extended into this Account. b. The source server on the Account we’re reading from is not an extension of another source server. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExtensibleSourceServersResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - stagingAccountID
              properties:
                maxResults:
                  description: The maximum number of extensible source servers to retrieve.
                  type: integer
                  minimum: 1
                  maximum: 300
                nextToken:
                  description: The token of the next extensible source server to retrieve.
                  type: string
                  minLength: 0
                  maxLength: 2048
                stagingAccountID:
                  description: The Id of the staging Account to retrieve extensible source servers from.
                  type: string
                  pattern: '[0-9]{12,}'
                  minLength: 12
                  maxLength: 12
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ListStagingAccounts:
    get:
      operationId: ListStagingAccounts
      description: Returns an array of staging accounts for existing extended source servers.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStagingAccountsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of staging Accounts to retrieve.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: nextToken
          in: query
          required: false
          description: The token of the next staging Account to retrieve.
          schema:
            type: string
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: List all tags for your Elastic Disaster Recovery resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource whose tags should be returned.
          schema:
            type: string
            pattern: '^arn:.{16,2044}$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: 'Adds or overwrites only the specified tags for the specified Elastic Disaster Recovery resource or resources. When you specify an existing tag key, the value is overwritten with the new value. Each resource can have a maximum of 50 tags. Each tag consists of a key and optional value.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: ARN of the resource for which tags are to be added or updated.
          schema:
            type: string
            pattern: '^arn:.{16,2044}$'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: Array of tags to be added or updated.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  /RetryDataReplication:
    post:
      deprecated: true
      operationId: RetryDataReplication
      description: 'WARNING: RetryDataReplication is deprecated. Causes the data replication initiation sequence to begin immediately upon next Handshake for the specified Source Server ID, regardless of when the previous initiation started. This command will work only if the Source Server is stalled or is in a DISCONNECTED or STOPPED state. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: The ID of the Source Server whose data replication should be retried.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ReverseReplication:
    post:
      operationId: ReverseReplication
      description: 'Start replication to origin / target region - applies only to protected instances that originated in EC2. For recovery instances on target region - starts replication back to origin region. For failback instances on origin region - starts replication to target region to re-protect them. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReverseReplicationResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '486':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recoveryInstanceID
              properties:
                recoveryInstanceID:
                  description: The ID of the Recovery Instance that we want to reverse the replication for.
                  type: string
                  pattern: '^i-[0-9a-fA-F]{8,}$'
                  minLength: 10
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /StartFailbackLaunch:
    post:
      operationId: StartFailbackLaunch
      description: 'Initiates a Job for launching the machine that is being failed back to from the specified Recovery Instance. This will run conversion on the failback client and will reboot your machine, thus completing the failback process.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFailbackLaunchResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recoveryInstanceIDs
              properties:
                recoveryInstanceIDs:
                  description: The IDs of the Recovery Instance whose failback launch we want to request.
                  type: array
                  items:
                    $ref: '#/components/schemas/RecoveryInstanceID'
                  minItems: 1
                  maxItems: 200
                tags:
                  description: The tags to be associated with the failback launch Job.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /StartRecovery:
    post:
      operationId: StartRecovery
      description: 'Launches Recovery Instances for the specified Source Servers. For each Source Server you may choose a point in time snapshot to launch from, or use an on demand snapshot.'
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRecoveryResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServers
              properties:
                isDrill:
                  description: Whether this Source Server Recovery operation is a drill or not.
                  type: boolean
                sourceServers:
                  description: The Source Servers that we want to start a Recovery Job for.
                  type: array
                  items:
                    $ref: '#/components/schemas/StartRecoveryRequestSourceServer'
                  minItems: 1
                  maxItems: 200
                tags:
                  description: The tags to be associated with the Recovery Job.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /StartReplication:
    post:
      operationId: StartReplication
      description: Starts replication for a stopped Source Server. This action would make the Source Server protected again and restart billing for it.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartReplicationResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: The ID of the Source Server to start replication for.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /StartSourceNetworkRecovery:
    post:
      operationId: StartSourceNetworkRecovery
      description: Deploy VPC for the specified Source Network and modify launch templates to use this network. The VPC will be deployed using a dedicated CloudFormation stack.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSourceNetworkRecoveryResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceNetworks
              properties:
                deployAsNew:
                  description: 'Don''t update existing CloudFormation Stack, recover the network using a new stack.'
                  type: boolean
                sourceNetworks:
                  description: The Source Networks that we want to start a Recovery Job for.
                  type: array
                  items:
                    $ref: '#/components/schemas/StartSourceNetworkRecoveryRequestNetworkEntry'
                  minItems: 1
                  maxItems: 100
                tags:
                  description: The tags to be associated with the Source Network recovery Job.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /StartSourceNetworkReplication:
    post:
      operationId: StartSourceNetworkReplication
      description: Starts replication for a Source Network. This action would make the Source Network protected.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSourceNetworkReplicationResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceNetworkID
              properties:
                sourceNetworkID:
                  description: ID of the Source Network to replicate.
                  type: string
                  pattern: '^sn-[0-9a-zA-Z]{17}$'
                  minLength: 20
                  maxLength: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /StopFailback:
    post:
      operationId: StopFailback
      description: Stops the failback process for a specified Recovery Instance. This changes the Failback State of the Recovery Instance back to FAILBACK_NOT_STARTED.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recoveryInstanceID
              properties:
                recoveryInstanceID:
                  description: The ID of the Recovery Instance we want to stop failback for.
                  type: string
                  pattern: '^i-[0-9a-fA-F]{8,}$'
                  minLength: 10
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /StopReplication:
    post:
      operationId: StopReplication
      description: 'Stops replication for a Source Server. This action would make the Source Server unprotected, delete its existing snapshots and stop billing for it.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopReplicationResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                sourceServerID:
                  description: The ID of the Source Server to stop replication for.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /StopSourceNetworkReplication:
    post:
      operationId: StopSourceNetworkReplication
      description: Stops replication for a Source Network. This action would make the Source Network unprotected.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopSourceNetworkReplicationResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceNetworkID
              properties:
                sourceNetworkID:
                  description: ID of the Source Network to stop replication.
                  type: string
                  pattern: '^sn-[0-9a-zA-Z]{17}$'
                  minLength: 20
                  maxLength: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /TerminateRecoveryInstances:
    post:
      operationId: TerminateRecoveryInstances
      description: 'Initiates a Job for terminating the EC2 resources associated with the specified Recovery Instances, and then will delete the Recovery Instances from the Elastic Disaster Recovery service.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateRecoveryInstancesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recoveryInstanceIDs
              properties:
                recoveryInstanceIDs:
                  description: The IDs of the Recovery Instances that should be terminated.
                  type: array
                  items:
                    $ref: '#/components/schemas/RecoveryInstanceID'
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Deletes the specified set of tags from the specified set of Elastic Disaster Recovery resources.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: ARN of the resource for which tags are to be removed.
          schema:
            type: string
            pattern: '^arn:.{16,2044}$'
            minLength: 20
            maxLength: 2048
        - name: tagKeys
          in: query
          required: true
          description: Array of tags to be removed.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateFailbackReplicationConfiguration:
    post:
      operationId: UpdateFailbackReplicationConfiguration
      description: Allows you to update the failback replication configuration of a Recovery Instance by ID.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recoveryInstanceID
              properties:
                bandwidthThrottling:
                  description: Configure bandwidth throttling for the outbound data transfer rate of the Recovery Instance in Mbps.
                  type: integer
                  minimum: 0
                name:
                  description: The name of the Failback Replication Configuration.
                  type: string
                  minLength: 0
                  maxLength: 256
                recoveryInstanceID:
                  description: The ID of the Recovery Instance.
                  type: string
                  pattern: '^i-[0-9a-fA-F]{8,}$'
                  minLength: 10
                  maxLength: 19
                usePrivateIP:
                  description: Whether to use Private IP for the failback replication of the Recovery Instance.
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateLaunchConfiguration:
    post:
      operationId: UpdateLaunchConfiguration
      description: Updates a LaunchConfiguration by Source Server ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchConfiguration'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                copyPrivateIp:
                  description: Whether we should copy the Private IP of the Source Server to the Recovery Instance.
                  type: boolean
                copyTags:
                  description: Whether we want to copy the tags of the Source Server to the EC2 machine of the Recovery Instance.
                  type: boolean
                launchDisposition:
                  description: The state of the Recovery Instance in EC2 after the recovery operation.
                  type: string
                  enum:
                    - STOPPED
                    - STARTED
                licensing:
                  description: Configuration of a machine's license.
                  type: object
                  properties:
                    osByol:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to enable "Bring your own license" or not.
                name:
                  description: The name of the launch configuration.
                  type: string
                  minLength: 0
                  maxLength: 128
                sourceServerID:
                  description: The ID of the Source Server that we want to retrieve a Launch Configuration for.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
                targetInstanceTypeRightSizingMethod:
                  description: 'Whether Elastic Disaster Recovery should try to automatically choose the instance type that best matches the OS, CPU, and RAM of your Source Server.'
                  type: string
                  enum:
                    - NONE
                    - BASIC
                    - IN_AWS
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateLaunchConfigurationTemplate:
    post:
      operationId: UpdateLaunchConfigurationTemplate
      description: Updates an existing Launch Configuration Template by ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLaunchConfigurationTemplateResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - launchConfigurationTemplateID
              properties:
                copyPrivateIp:
                  description: Copy private IP.
                  type: boolean
                copyTags:
                  description: Copy tags.
                  type: boolean
                exportBucketArn:
                  description: S3 bucket ARN to export Source Network templates.
                  type: string
                  pattern: '^arn:.{16,2044}$'
                  minLength: 20
                  maxLength: 2048
                launchConfigurationTemplateID:
                  description: Launch Configuration Template ID.
                  type: string
                  pattern: '^lct-[0-9a-zA-Z]{17}$'
                  minLength: 21
                  maxLength: 21
                launchDisposition:
                  description: Launch disposition.
                  type: string
                  enum:
                    - STOPPED
                    - STARTED
                licensing:
                  description: Configuration of a machine's license.
                  type: object
                  properties:
                    osByol:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to enable "Bring your own license" or not.
                targetInstanceTypeRightSizingMethod:
                  description: Target instance type right-sizing method.
                  type: string
                  enum:
                    - NONE
                    - BASIC
                    - IN_AWS
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateReplicationConfiguration:
    post:
      operationId: UpdateReplicationConfiguration
      description: Allows you to update a ReplicationConfiguration by Source Server ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfiguration'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '486':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sourceServerID
              properties:
                associateDefaultSecurityGroup:
                  description: Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration.
                  type: boolean
                autoReplicateNewDisks:
                  description: Whether to allow the AWS replication agent to automatically replicate newly added disks.
                  type: boolean
                bandwidthThrottling:
                  description: Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.
                  type: integer
                  minimum: 0
                createPublicIP:
                  description: Whether to create a Public IP for the Recovery Instance by default.
                  type: boolean
                dataPlaneRouting:
                  description: The data plane routing mechanism that will be used for replication.
                  type: string
                  enum:
                    - PRIVATE_IP
                    - PUBLIC_IP
                defaultLargeStagingDiskType:
                  description: The Staging Disk EBS volume type to be used during replication.
                  type: string
                  enum:
                    - GP2
                    - GP3
                    - ST1
                    - AUTO
                ebsEncryption:
                  description: The type of EBS encryption to be used during replication.
                  type: string
                  enum:
                    - DEFAULT
                    - CUSTOM
                    - NONE
                ebsEncryptionKeyArn:
                  description: The ARN of the EBS encryption key to be used during replication.
                  type: string
                  pattern: '^arn:.{16,2044}$'
                  minLength: 20
                  maxLength: 2048
                name:
                  description: The name of the Replication Configuration.
                  type: string
                  minLength: 0
                  maxLength: 128
                pitPolicy:
                  description: The Point in time (PIT) policy to manage snapshots taken during replication.
                  type: array
                  items:
                    $ref: '#/components/schemas/PITPolicyRule'
                  minItems: 1
                  maxItems: 10
                replicatedDisks:
                  description: The configuration of the disks of the Source Server to be replicated.
                  type: array
                  items:
                    $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisk'
                  minItems: 0
                  maxItems: 60
                replicationServerInstanceType:
                  description: The instance type to be used for the replication server.
                  type: string
                  minLength: 0
                  maxLength: 255
                replicationServersSecurityGroupsIDs:
                  description: The security group IDs that will be used by the replication server.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupID'
                  minItems: 0
                  maxItems: 32
                sourceServerID:
                  description: The ID of the Source Server for this Replication Configuration.
                  type: string
                  pattern: '^s-[0-9a-zA-Z]{17}$'
                  minLength: 19
                  maxLength: 19
                stagingAreaSubnetId:
                  description: The subnet to be used by the replication staging area.
                  type: string
                  pattern: '^subnet-[0-9a-fA-F]{8,}$'
                  minLength: 0
                  maxLength: 255
                stagingAreaTags:
                  description: 'A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                useDedicatedReplicationServer:
                  description: Whether to use a dedicated Replication Server in the replication staging area.
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateReplicationConfigurationTemplate:
    post:
      operationId: UpdateReplicationConfigurationTemplate
      description: Updates a ReplicationConfigurationTemplate by ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfigurationTemplate'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: UninitializedAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - replicationConfigurationTemplateID
              properties:
                arn:
                  description: The Replication Configuration Template ARN.
                  type: string
                  pattern: '^arn:.{16,2044}$'
                  minLength: 20
                  maxLength: 2048
                associateDefaultSecurityGroup:
                  description: Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration Template.
                  type: boolean
                autoReplicateNewDisks:
                  description: Whether to allow the AWS replication agent to automatically replicate newly added disks.
                  type: boolean
                bandwidthThrottling:
                  description: Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.
                  type: integer
                  minimum: 0
                createPublicIP:
                  description: Whether to create a Public IP for the Recovery Instance by default.
                  type: boolean
                dataPlaneRouting:
                  description: The data plane routing mechanism that will be used for replication.
                  type: string
                  enum:
                    - PRIVATE_IP
                    - PUBLIC_IP
                defaultLargeStagingDiskType:
                  description: The Staging Disk EBS volume type to be used during replication.
                  type: string
                  enum:
                    - GP2
                    - GP3
                    - ST1
                    - AUTO
                ebsEncryption:
                  description: The type of EBS encryption to be used during replication.
                  type: string
                  enum:
                    - DEFAULT
                    - CUSTOM
                    - NONE
                ebsEncryptionKeyArn:
                  description: The ARN of the EBS encryption key to be used during replication.
                  type: string
                  pattern: '^arn:.{16,2044}$'
                  minLength: 20
                  maxLength: 2048
                pitPolicy:
                  description: The Point in time (PIT) policy to manage snapshots taken during replication.
                  type: array
                  items:
                    $ref: '#/components/schemas/PITPolicyRule'
                  minItems: 1
                  maxItems: 10
                replicationConfigurationTemplateID:
                  description: The Replication Configuration Template ID.
                  type: string
                  pattern: '^rct-[0-9a-zA-Z]{17}$'
                  minLength: 21
                  maxLength: 21
                replicationServerInstanceType:
                  description: The instance type to be used for the replication server.
                  type: string
                  minLength: 0
                  maxLength: 255
                replicationServersSecurityGroupsIDs:
                  description: The security group IDs that will be used by the replication server.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupID'
                  minItems: 0
                  maxItems: 32
                stagingAreaSubnetId:
                  description: The subnet to be used by the replication staging area.
                  type: string
                  pattern: '^subnet-[0-9a-fA-F]{8,}$'
                  minLength: 0
                  maxLength: 255
                stagingAreaTags:
                  description: 'A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                useDedicatedReplicationServer:
                  description: Whether to use a dedicated Replication Server in the replication staging area.
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateSourceNetworkStackResponse:
      type: object
      properties:
        job:
          allOf:
            - $ref: '#/components/schemas/Job'
            - description: The Source Network association Job.
    ResourceNotFoundException: {}
    InternalServerException: {}
    ConflictException: {}
    ServiceQuotaExceededException: {}
    ThrottlingException: {}
    ValidationException: {}
    UninitializedAccountException: {}
    CreateExtendedSourceServerResponse:
      type: object
      properties:
        sourceServer:
          allOf:
            - $ref: '#/components/schemas/SourceServer'
            - description: Created extended source server.
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    AccessDeniedException: {}
    CreateLaunchConfigurationTemplateResponse:
      type: object
      properties:
        launchConfigurationTemplate:
          allOf:
            - $ref: '#/components/schemas/LaunchConfigurationTemplate'
            - description: Created Launch Configuration Template.
    Boolean:
      type: boolean
    ReplicationConfigurationTemplate:
      type: object
      required:
        - replicationConfigurationTemplateID
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Replication Configuration Template ARN.
        associateDefaultSecurityGroup:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration Template.
        autoReplicateNewDisks:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to allow the AWS replication agent to automatically replicate newly added disks.
        bandwidthThrottling:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.
        createPublicIP:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to create a Public IP for the Recovery Instance by default.
        dataPlaneRouting:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
            - description: The data plane routing mechanism that will be used for replication.
        defaultLargeStagingDiskType:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
            - description: The Staging Disk EBS volume type to be used during replication.
        ebsEncryption:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
            - description: The type of EBS encryption to be used during replication.
        ebsEncryptionKeyArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the EBS encryption key to be used during replication.
        pitPolicy:
          allOf:
            - $ref: '#/components/schemas/PITPolicy'
            - description: The Point in time (PIT) policy to manage snapshots taken during replication.
        replicationConfigurationTemplateID:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
            - description: The Replication Configuration Template ID.
        replicationServerInstanceType:
          allOf:
            - $ref: '#/components/schemas/EC2InstanceType'
            - description: The instance type to be used for the replication server.
        replicationServersSecurityGroupsIDs:
          allOf:
            - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
            - description: The security group IDs that will be used by the replication server.
        stagingAreaSubnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetID'
            - description: The subnet to be used by the replication staging area.
        stagingAreaTags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: 'A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: A set of tags to be associated with the Replication Configuration Template resource.
        useDedicatedReplicationServer:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to use a dedicated Replication Server in the replication staging area.
    PITPolicyRule:
      type: object
      required:
        - interval
        - retentionDuration
        - units
      properties:
        enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether this rule is enabled or not.
        interval:
          allOf:
            - $ref: '#/components/schemas/StrictlyPositiveInteger'
            - description: 'How often, in the chosen units, a snapshot should be taken.'
        retentionDuration:
          allOf:
            - $ref: '#/components/schemas/StrictlyPositiveInteger'
            - description: 'The duration to retain a snapshot for, in the chosen units.'
        ruleID:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The ID of the rule.
        units:
          allOf:
            - $ref: '#/components/schemas/PITPolicyRuleUnits'
            - description: The units used to measure the interval and retentionDuration.
      description: A rule in the Point in Time (PIT) policy representing when to take snapshots and how long to retain them for.
    SecurityGroupID:
      type: string
      pattern: '^sg-[0-9a-fA-F]{8,}$'
      minLength: 0
      maxLength: 255
    CreateSourceNetworkResponse:
      type: object
      properties:
        sourceNetworkID:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkID'
            - description: ID of the created Source Network.
    DeleteJobResponse:
      type: object
      properties: {}
    DeleteLaunchConfigurationTemplateResponse:
      type: object
      properties: {}
    DeleteReplicationConfigurationTemplateResponse:
      type: object
      properties: {}
    DeleteSourceNetworkResponse:
      type: object
      properties: {}
    DeleteSourceServerResponse:
      type: object
      properties: {}
    DescribeJobLogItemsResponse:
      type: object
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/JobLogs'
            - description: An array of Job log items.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Job log items to retrieve.
    DescribeJobsResponse:
      type: object
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/JobsList'
            - description: An array of Jobs.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Job to retrieve.
    ISO8601DatetimeString:
      type: string
      pattern: '^[1-9][0-9]*-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?Z$'
      minLength: 19
      maxLength: 32
    DescribeJobsRequestFiltersJobIDs:
      type: array
      items:
        $ref: '#/components/schemas/JobID'
      minItems: 0
      maxItems: 1000
    DescribeLaunchConfigurationTemplatesResponse:
      type: object
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/LaunchConfigurationTemplates'
            - description: List of items returned by DescribeLaunchConfigurationTemplates.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Launch Configuration Template to retrieve.
    LaunchConfigurationTemplateID:
      type: string
      pattern: '^lct-[0-9a-zA-Z]{17}$'
      minLength: 21
      maxLength: 21
    DescribeRecoveryInstancesResponse:
      type: object
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/DescribeRecoveryInstancesItems'
            - description: An array of Recovery Instances.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Recovery Instance to retrieve.
    RecoveryInstanceIDs:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceID'
      minItems: 0
      maxItems: 200
    SourceServerIDs:
      type: array
      items:
        $ref: '#/components/schemas/SourceServerID'
    DescribeRecoverySnapshotsResponse:
      type: object
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/RecoverySnapshotsList'
            - description: An array of Recovery Snapshots.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Recovery Snapshot to retrieve.
    DescribeReplicationConfigurationTemplatesResponse:
      type: object
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationTemplates'
            - description: An array of Replication Configuration Templates.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Replication Configuration Template to retrieve.
    ReplicationConfigurationTemplateID:
      type: string
      pattern: '^rct-[0-9a-zA-Z]{17}$'
      minLength: 21
      maxLength: 21
    DescribeSourceNetworksResponse:
      type: object
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/SourceNetworksList'
            - description: An array of Source Networks.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Source Networks to retrieve.
    AccountID:
      type: string
      pattern: '[0-9]{12,}'
      minLength: 12
      maxLength: 12
    AwsRegion:
      type: string
      pattern: '^(us(-gov)?|ap|ca|cn|eu|sa|af|me)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-[0-9]$'
      minLength: 0
      maxLength: 255
    DescribeSourceNetworksRequestFiltersIDs:
      type: array
      items:
        $ref: '#/components/schemas/SourceNetworkID'
      minItems: 0
      maxItems: 100
    DescribeSourceServersResponse:
      type: object
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/SourceServersList'
            - description: An array of Source Servers.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Source Server to retrieve.
    BoundedString:
      type: string
      minLength: 0
      maxLength: 256
    DescribeSourceServersRequestFiltersIDs:
      type: array
      items:
        $ref: '#/components/schemas/SourceServerID'
      minItems: 0
      maxItems: 200
    AccountIDs:
      type: array
      items:
        $ref: '#/components/schemas/AccountID'
      minItems: 0
      maxItems: 200
    SourceServer:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the Source Server.
        dataReplicationInfo:
          allOf:
            - $ref: '#/components/schemas/DataReplicationInfo'
            - description: The Data Replication Info of the Source Server.
        lastLaunchResult:
          allOf:
            - $ref: '#/components/schemas/LastLaunchResult'
            - description: The status of the last recovery launch of this Source Server.
        lifeCycle:
          allOf:
            - $ref: '#/components/schemas/LifeCycle'
            - description: The lifecycle information of this Source Server.
        recoveryInstanceId:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceID'
            - description: The ID of the Recovery Instance associated with this Source Server.
        replicationDirection:
          allOf:
            - $ref: '#/components/schemas/ReplicationDirection'
            - description: Replication direction of the Source Server.
        reversedDirectionSourceServerArn:
          allOf:
            - $ref: '#/components/schemas/SourceServerARN'
            - description: 'For EC2-originated Source Servers which have been failed over and then failed back, this value will mean the ARN of the Source Server on the opposite replication direction.'
        sourceCloudProperties:
          allOf:
            - $ref: '#/components/schemas/SourceCloudProperties'
            - description: Source cloud properties of the Source Server.
        sourceNetworkID:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkID'
            - description: ID of the Source Network which is protecting this Source Server's network.
        sourceProperties:
          allOf:
            - $ref: '#/components/schemas/SourceProperties'
            - description: The source properties of the Source Server.
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server.
        stagingArea:
          allOf:
            - $ref: '#/components/schemas/StagingArea'
            - description: The staging area of the source server.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: The tags associated with the Source Server.
    ExportSourceNetworkCfnTemplateResponse:
      type: object
      properties:
        s3DestinationUrl:
          allOf:
            - $ref: '#/components/schemas/LargeBoundedString'
            - description: S3 bucket URL where the Source Network CloudFormation template was exported to.
    GetFailbackReplicationConfigurationResponse:
      type: object
      required:
        - recoveryInstanceID
      properties:
        bandwidthThrottling:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: Configure bandwidth throttling for the outbound data transfer rate of the Recovery Instance in Mbps.
        name:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The name of the Failback Replication Configuration.
        recoveryInstanceID:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceID'
            - description: The ID of the Recovery Instance.
        usePrivateIP:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to use Private IP for the failback replication of the Recovery Instance.
    LaunchConfiguration:
      type: object
      properties:
        copyPrivateIp:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether we should copy the Private IP of the Source Server to the Recovery Instance.
        copyTags:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether we want to copy the tags of the Source Server to the EC2 machine of the Recovery Instance.
        ec2LaunchTemplateID:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The EC2 launch template ID of this launch configuration.
        launchDisposition:
          allOf:
            - $ref: '#/components/schemas/LaunchDisposition'
            - description: The state of the Recovery Instance in EC2 after the recovery operation.
        licensing:
          allOf:
            - $ref: '#/components/schemas/Licensing'
            - description: The licensing configuration to be used for this launch configuration.
        name:
          allOf:
            - $ref: '#/components/schemas/SmallBoundedString'
            - description: The name of the launch configuration.
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server for this launch configuration.
        targetInstanceTypeRightSizingMethod:
          allOf:
            - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
            - description: 'Whether Elastic Disaster Recovery should try to automatically choose the instance type that best matches the OS, CPU, and RAM of your Source Server.'
    ReplicationConfiguration:
      type: object
      properties:
        associateDefaultSecurityGroup:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration.
        autoReplicateNewDisks:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to allow the AWS replication agent to automatically replicate newly added disks.
        bandwidthThrottling:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.
        createPublicIP:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to create a Public IP for the Recovery Instance by default.
        dataPlaneRouting:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
            - description: The data plane routing mechanism that will be used for replication.
        defaultLargeStagingDiskType:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
            - description: The Staging Disk EBS volume type to be used during replication.
        ebsEncryption:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
            - description: The type of EBS encryption to be used during replication.
        ebsEncryptionKeyArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the EBS encryption key to be used during replication.
        name:
          allOf:
            - $ref: '#/components/schemas/SmallBoundedString'
            - description: The name of the Replication Configuration.
        pitPolicy:
          allOf:
            - $ref: '#/components/schemas/PITPolicy'
            - description: The Point in time (PIT) policy to manage snapshots taken during replication.
        replicatedDisks:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisks'
            - description: The configuration of the disks of the Source Server to be replicated.
        replicationServerInstanceType:
          allOf:
            - $ref: '#/components/schemas/EC2InstanceType'
            - description: The instance type to be used for the replication server.
        replicationServersSecurityGroupsIDs:
          allOf:
            - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
            - description: The security group IDs that will be used by the replication server.
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server for this Replication Configuration.
        stagingAreaSubnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetID'
            - description: The subnet to be used by the replication staging area.
        stagingAreaTags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: 'A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.'
        useDedicatedReplicationServer:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to use a dedicated Replication Server in the replication staging area.
    InitializeServiceResponse:
      type: object
      properties: {}
    ListExtensibleSourceServersResponse:
      type: object
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/StagingSourceServersList'
            - description: A list of source servers on a staging Account that are extensible.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next extensible source server to retrieve.
    ListStagingAccountsResponse:
      type: object
      properties:
        accounts:
          allOf:
            - $ref: '#/components/schemas/Accounts'
            - description: An array of staging AWS Accounts.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next staging Account to retrieve.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: The tags of the requested resource.
    ReverseReplicationResponse:
      type: object
      properties:
        reversedDirectionSourceServerArn:
          allOf:
            - $ref: '#/components/schemas/SourceServerARN'
            - description: ARN of created SourceServer.
    StartFailbackLaunchResponse:
      type: object
      properties:
        job:
          allOf:
            - $ref: '#/components/schemas/Job'
            - description: The failback launch Job.
    RecoveryInstanceID:
      type: string
      pattern: '^i-[0-9a-fA-F]{8,}$'
      minLength: 10
      maxLength: 19
    StartRecoveryResponse:
      type: object
      properties:
        job:
          allOf:
            - $ref: '#/components/schemas/Job'
            - description: The Recovery Job.
    StartRecoveryRequestSourceServer:
      type: object
      required:
        - sourceServerID
      properties:
        recoverySnapshotID:
          allOf:
            - $ref: '#/components/schemas/RecoverySnapshotID'
            - description: The ID of a Recovery Snapshot we want to recover from. Omit this field to launch from the latest data by taking an on-demand snapshot.
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server you want to recover.
      description: An object representing the Source Server to recover.
    StartReplicationResponse:
      type: object
      properties:
        sourceServer:
          allOf:
            - $ref: '#/components/schemas/SourceServer'
            - description: The Source Server that this action was targeted on.
    StartSourceNetworkRecoveryResponse:
      type: object
      properties:
        job:
          allOf:
            - $ref: '#/components/schemas/Job'
            - description: The Source Network recovery Job.
    StartSourceNetworkRecoveryRequestNetworkEntry:
      type: object
      required:
        - sourceNetworkID
      properties:
        cfnStackName:
          allOf:
            - $ref: '#/components/schemas/CfnStackName'
            - description: CloudFormation stack name to be used for recovering the network.
        sourceNetworkID:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkID'
            - description: The ID of the Source Network you want to recover.
      description: An object representing the Source Network to recover.
    StartSourceNetworkReplicationResponse:
      type: object
      properties:
        sourceNetwork:
          allOf:
            - $ref: '#/components/schemas/SourceNetwork'
            - description: Source Network which was requested for replication.
    StopReplicationResponse:
      type: object
      properties:
        sourceServer:
          allOf:
            - $ref: '#/components/schemas/SourceServer'
            - description: The Source Server that this action was targeted on.
    StopSourceNetworkReplicationResponse:
      type: object
      properties:
        sourceNetwork:
          allOf:
            - $ref: '#/components/schemas/SourceNetwork'
            - description: Source Network which was requested to stop replication.
    TerminateRecoveryInstancesResponse:
      type: object
      properties:
        job:
          allOf:
            - $ref: '#/components/schemas/Job'
            - description: The Job for terminating the Recovery Instances.
    TagKey:
      type: string
      minLength: 0
      maxLength: 256
    UpdateLaunchConfigurationTemplateResponse:
      type: object
      properties:
        launchConfigurationTemplate:
          allOf:
            - $ref: '#/components/schemas/LaunchConfigurationTemplate'
            - description: Updated Launch Configuration Template.
    ReplicationConfigurationReplicatedDisk:
      type: object
      properties:
        deviceName:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The name of the device.
        iops:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The requested number of I/O operations per second (IOPS).
        isBootDisk:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to boot from this disk or not.
        optimizedStagingDiskType:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationReplicatedDiskStagingDiskType'
            - description: The Staging Disk EBS volume type to be used during replication when <code>stagingDiskType</code> is set to Auto. This is a read-only field.
        stagingDiskType:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationReplicatedDiskStagingDiskType'
            - description: The Staging Disk EBS volume type to be used during replication.
        throughput:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The throughput to use for the EBS volume in MiB/s. This parameter is valid only for gp3 volumes.
      description: The configuration of a disk of the Source Server to be replicated.
    ARN:
      type: string
      pattern: '^arn:.{16,2044}$'
      minLength: 20
      maxLength: 2048
    Account:
      type: object
      properties:
        accountID:
          allOf:
            - $ref: '#/components/schemas/AccountID'
            - description: Account ID of AWS account.
      description: AWS account.
    Accounts:
      type: array
      items:
        $ref: '#/components/schemas/Account'
      minItems: 0
      maxItems: 50
    CfnStackName:
      type: string
      pattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
      minLength: 1
      maxLength: 128
      format: password
    SourceNetworkID:
      type: string
      pattern: '^sn-[0-9a-zA-Z]{17}$'
      minLength: 20
      maxLength: 20
    AssociateSourceNetworkStackRequest:
      type: object
      required:
        - cfnStackName
        - sourceNetworkID
      title: AssociateSourceNetworkStackRequest
      properties:
        cfnStackName:
          allOf:
            - $ref: '#/components/schemas/CfnStackName'
            - description: CloudFormation template to associate with a Source Network.
        sourceNetworkID:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkID'
            - description: The Source Network ID to associate with CloudFormation template.
    Job:
      type: object
      required:
        - jobID
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of a Job.
        creationDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time of when the Job was created.
        endDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time of when the Job ended.
        initiatedBy:
          allOf:
            - $ref: '#/components/schemas/InitiatedBy'
            - description: A string representing who initiated the Job.
        jobID:
          allOf:
            - $ref: '#/components/schemas/JobID'
            - description: The ID of the Job.
        participatingResources:
          allOf:
            - $ref: '#/components/schemas/ParticipatingResources'
            - description: A list of resources that the Job is acting upon.
        participatingServers:
          allOf:
            - $ref: '#/components/schemas/ParticipatingServers'
            - description: A list of servers that the Job is acting upon.
        status:
          allOf:
            - $ref: '#/components/schemas/JobStatus'
            - description: The status of the Job.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: A list of tags associated with the Job.
        type:
          allOf:
            - $ref: '#/components/schemas/JobType'
            - description: The type of the Job.
      description: A job is an asynchronous workflow.
    AwsAvailabilityZone:
      type: string
      pattern: '^(us(-gov)?|ap|ca|cn|eu|sa|af|me)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-[0-9][a-z]$'
      minLength: 0
      maxLength: 255
    PositiveInteger:
      type: integer
      minimum: 0
    CPU:
      type: object
      properties:
        cores:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The number of CPU cores.
        modelName:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The model name of the CPU.
      description: Information about a server's CPU.
    EbsSnapshot:
      type: string
      pattern: '^snap-[0-9a-zA-Z]{17}$'
    ConversionMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EbsSnapshot'
    LargeBoundedString:
      type: string
      minLength: 0
      maxLength: 65536
    VolumeToConversionMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ConversionMap'
    VolumeToSizeMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/PositiveInteger'
    ConversionProperties:
      type: object
      properties:
        dataTimestamp:
          allOf:
            - $ref: '#/components/schemas/LargeBoundedString'
            - description: The timestamp of when the snapshot being converted was taken
        forceUefi:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether the volume being converted uses UEFI or not
        rootVolumeName:
          allOf:
            - $ref: '#/components/schemas/LargeBoundedString'
            - description: The root volume name of a conversion job
        volumeToConversionMap:
          allOf:
            - $ref: '#/components/schemas/VolumeToConversionMap'
            - description: A mapping between the volumes being converted and the converted snapshot ids
        volumeToVolumeSize:
          allOf:
            - $ref: '#/components/schemas/VolumeToSizeMap'
            - description: A mapping between the volumes and their sizes
      description: Properties of a conversion job
    Cpus:
      type: array
      items:
        $ref: '#/components/schemas/CPU'
      minItems: 0
      maxItems: 256
    SourceServerARN:
      type: string
      pattern: '^arn:(?:[0-9a-zA-Z_-]+:){3}([0-9]{12,}):source-server/(s-[0-9a-zA-Z]{17})$'
      minLength: 20
      maxLength: 2048
    TagsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateExtendedSourceServerRequest:
      type: object
      required:
        - sourceServerArn
      title: CreateExtendedSourceServerRequest
      properties:
        sourceServerArn:
          allOf:
            - $ref: '#/components/schemas/SourceServerARN'
            - description: This defines the ARN of the source server in staging Account based on which you want to create an extended source server.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: A list of tags associated with the extended source server.
    LaunchDisposition:
      type: string
      enum:
        - STOPPED
        - STARTED
    Licensing:
      type: object
      properties:
        osByol:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to enable "Bring your own license" or not.
      description: Configuration of a machine's license.
    TargetInstanceTypeRightSizingMethod:
      type: string
      enum:
        - NONE
        - BASIC
        - IN_AWS
    CreateLaunchConfigurationTemplateRequest:
      type: object
      title: CreateLaunchConfigurationTemplateRequest
      properties:
        copyPrivateIp:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Copy private IP.
        copyTags:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Copy tags.
        exportBucketArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: S3 bucket ARN to export Source Network templates.
        launchDisposition:
          allOf:
            - $ref: '#/components/schemas/LaunchDisposition'
            - description: Launch disposition.
        licensing:
          allOf:
            - $ref: '#/components/schemas/Licensing'
            - description: Licensing.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: Request to associate tags during creation of a Launch Configuration Template.
        targetInstanceTypeRightSizingMethod:
          allOf:
            - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
            - description: Target instance type right-sizing method.
    LaunchConfigurationTemplate:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: ARN of the Launch Configuration Template.
        copyPrivateIp:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Copy private IP.
        copyTags:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Copy tags.
        exportBucketArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: S3 bucket ARN to export Source Network templates.
        launchConfigurationTemplateID:
          allOf:
            - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
            - description: ID of the Launch Configuration Template.
        launchDisposition:
          allOf:
            - $ref: '#/components/schemas/LaunchDisposition'
            - description: Launch disposition.
        licensing:
          allOf:
            - $ref: '#/components/schemas/Licensing'
            - description: Licensing.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: Tags of the Launch Configuration Template.
        targetInstanceTypeRightSizingMethod:
          allOf:
            - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
            - description: Target instance type right-sizing method.
      description: Account level Launch Configuration Template.
    ReplicationConfigurationDataPlaneRouting:
      type: string
      enum:
        - PRIVATE_IP
        - PUBLIC_IP
    ReplicationConfigurationDefaultLargeStagingDiskType:
      type: string
      enum:
        - GP2
        - GP3
        - ST1
        - AUTO
    ReplicationConfigurationEbsEncryption:
      type: string
      enum:
        - DEFAULT
        - CUSTOM
        - NONE
    PITPolicy:
      type: array
      items:
        $ref: '#/components/schemas/PITPolicyRule'
      minItems: 1
      maxItems: 10
    EC2InstanceType:
      type: string
      minLength: 0
      maxLength: 255
    ReplicationServersSecurityGroupsIDs:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupID'
      minItems: 0
      maxItems: 32
    SubnetID:
      type: string
      pattern: '^subnet-[0-9a-fA-F]{8,}$'
      minLength: 0
      maxLength: 255
    CreateReplicationConfigurationTemplateRequest:
      type: object
      required:
        - associateDefaultSecurityGroup
        - bandwidthThrottling
        - createPublicIP
        - dataPlaneRouting
        - defaultLargeStagingDiskType
        - ebsEncryption
        - pitPolicy
        - replicationServerInstanceType
        - replicationServersSecurityGroupsIDs
        - stagingAreaSubnetId
        - stagingAreaTags
        - useDedicatedReplicationServer
      title: CreateReplicationConfigurationTemplateRequest
      properties:
        associateDefaultSecurityGroup:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration Template.
        autoReplicateNewDisks:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to allow the AWS replication agent to automatically replicate newly added disks.
        bandwidthThrottling:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.
        createPublicIP:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to create a Public IP for the Recovery Instance by default.
        dataPlaneRouting:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
            - description: The data plane routing mechanism that will be used for replication.
        defaultLargeStagingDiskType:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
            - description: The Staging Disk EBS volume type to be used during replication.
        ebsEncryption:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
            - description: The type of EBS encryption to be used during replication.
        ebsEncryptionKeyArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the EBS encryption key to be used during replication.
        pitPolicy:
          allOf:
            - $ref: '#/components/schemas/PITPolicy'
            - description: The Point in time (PIT) policy to manage snapshots taken during replication.
        replicationServerInstanceType:
          allOf:
            - $ref: '#/components/schemas/EC2InstanceType'
            - description: The instance type to be used for the replication server.
        replicationServersSecurityGroupsIDs:
          allOf:
            - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
            - description: The security group IDs that will be used by the replication server.
        stagingAreaSubnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetID'
            - description: The subnet to be used by the replication staging area.
        stagingAreaTags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: 'A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: A set of tags to be associated with the Replication Configuration Template resource.
        useDedicatedReplicationServer:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to use a dedicated Replication Server in the replication staging area.
    VpcID:
      type: string
      pattern: '^vpc-[0-9a-fA-F]{8,}$'
      minLength: 12
      maxLength: 21
    CreateSourceNetworkRequest:
      type: object
      required:
        - originAccountID
        - originRegion
        - vpcID
      title: CreateSourceNetworkRequest
      properties:
        originAccountID:
          allOf:
            - $ref: '#/components/schemas/AccountID'
            - description: Account containing the VPC to protect.
        originRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: Region containing the VPC to protect.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: A set of tags to be associated with the Source Network resource.
        vpcID:
          allOf:
            - $ref: '#/components/schemas/VpcID'
            - description: Which VPC ID to protect.
    DataReplicationErrorString:
      type: string
      enum:
        - AGENT_NOT_SEEN
        - SNAPSHOTS_FAILURE
        - NOT_CONVERGING
        - UNSTABLE_NETWORK
        - FAILED_TO_CREATE_SECURITY_GROUP
        - FAILED_TO_LAUNCH_REPLICATION_SERVER
        - FAILED_TO_BOOT_REPLICATION_SERVER
        - FAILED_TO_AUTHENTICATE_WITH_SERVICE
        - FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE
        - FAILED_TO_CREATE_STAGING_DISKS
        - FAILED_TO_ATTACH_STAGING_DISKS
        - FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT
        - FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER
        - FAILED_TO_START_DATA_TRANSFER
    DataReplicationError:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/DataReplicationErrorString'
            - description: Error in data replication.
        rawError:
          allOf:
            - $ref: '#/components/schemas/LargeBoundedString'
            - description: Error in data replication.
      description: Error in data replication.
    DataReplicationInitiation:
      type: object
      properties:
        nextAttemptDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time of the next attempt to initiate data replication.
        startDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time of the current attempt to initiate data replication.
        steps:
          allOf:
            - $ref: '#/components/schemas/DataReplicationInitiationSteps'
            - description: The steps of the current attempt to initiate data replication.
      description: Data replication initiation.
    DataReplicationState:
      type: string
      enum:
        - STOPPED
        - INITIATING
        - INITIAL_SYNC
        - BACKLOG
        - CREATING_SNAPSHOT
        - CONTINUOUS
        - PAUSED
        - RESCAN
        - STALLED
        - DISCONNECTED
    ISO8601DurationString:
      type: string
      minLength: 1
      maxLength: 64
    DataReplicationInfoReplicatedDisks:
      type: array
      items:
        $ref: '#/components/schemas/DataReplicationInfoReplicatedDisk'
      minItems: 0
      maxItems: 60
    DataReplicationInfo:
      type: object
      properties:
        dataReplicationError:
          allOf:
            - $ref: '#/components/schemas/DataReplicationError'
            - description: Error in data replication.
        dataReplicationInitiation:
          allOf:
            - $ref: '#/components/schemas/DataReplicationInitiation'
            - description: Information about whether the data replication has been initiated.
        dataReplicationState:
          allOf:
            - $ref: '#/components/schemas/DataReplicationState'
            - description: The state of the data replication.
        etaDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: An estimate of when the data replication will be completed.
        lagDuration:
          allOf:
            - $ref: '#/components/schemas/ISO8601DurationString'
            - description: Data replication lag duration.
        replicatedDisks:
          allOf:
            - $ref: '#/components/schemas/DataReplicationInfoReplicatedDisks'
            - description: The disks that should be replicated.
        stagingAvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/AwsAvailabilityZone'
            - description: AWS Availability zone into which data is being replicated.
      description: Information about Data Replication
    DataReplicationInfoReplicatedDisk:
      type: object
      properties:
        backloggedStorageBytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The size of the replication backlog in bytes.
        deviceName:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The name of the device.
        replicatedStorageBytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The amount of data replicated so far in bytes.
        rescannedStorageBytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The amount of data to be rescanned in bytes.
        totalStorageBytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The total amount of data to be replicated in bytes.
      description: A disk that should be replicated.
    DataReplicationInitiationSteps:
      type: array
      items:
        $ref: '#/components/schemas/DataReplicationInitiationStep'
    DataReplicationInitiationStepName:
      type: string
      enum:
        - WAIT
        - CREATE_SECURITY_GROUP
        - LAUNCH_REPLICATION_SERVER
        - BOOT_REPLICATION_SERVER
        - AUTHENTICATE_WITH_SERVICE
        - DOWNLOAD_REPLICATION_SOFTWARE
        - CREATE_STAGING_DISKS
        - ATTACH_STAGING_DISKS
        - PAIR_REPLICATION_SERVER_WITH_AGENT
        - CONNECT_AGENT_TO_REPLICATION_SERVER
        - START_DATA_TRANSFER
    DataReplicationInitiationStepStatus:
      type: string
      enum:
        - NOT_STARTED
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
        - SKIPPED
    DataReplicationInitiationStep:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/DataReplicationInitiationStepName'
            - description: The name of the step.
        status:
          allOf:
            - $ref: '#/components/schemas/DataReplicationInitiationStepStatus'
            - description: The status of the step.
      description: Data replication initiation step.
    JobID:
      type: string
      pattern: '^drsjob-[0-9a-zA-Z]{17}$'
      minLength: 24
      maxLength: 24
    DeleteJobRequest:
      type: object
      required:
        - jobID
      title: DeleteJobRequest
      properties:
        jobID:
          allOf:
            - $ref: '#/components/schemas/JobID'
            - description: The ID of the Job to be deleted.
    DeleteLaunchConfigurationTemplateRequest:
      type: object
      required:
        - launchConfigurationTemplateID
      title: DeleteLaunchConfigurationTemplateRequest
      properties:
        launchConfigurationTemplateID:
          allOf:
            - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
            - description: The ID of the Launch Configuration Template to be deleted.
    DeleteRecoveryInstanceRequest:
      type: object
      required:
        - recoveryInstanceID
      title: DeleteRecoveryInstanceRequest
      properties:
        recoveryInstanceID:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceID'
            - description: The ID of the Recovery Instance to be deleted.
    DeleteReplicationConfigurationTemplateRequest:
      type: object
      required:
        - replicationConfigurationTemplateID
      title: DeleteReplicationConfigurationTemplateRequest
      properties:
        replicationConfigurationTemplateID:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
            - description: The ID of the Replication Configuration Template to be deleted.
    DeleteSourceNetworkRequest:
      type: object
      required:
        - sourceNetworkID
      title: DeleteSourceNetworkRequest
      properties:
        sourceNetworkID:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkID'
            - description: ID of the Source Network to delete.
    SourceServerID:
      type: string
      pattern: '^s-[0-9a-zA-Z]{17}$'
      minLength: 19
      maxLength: 19
    DeleteSourceServerRequest:
      type: object
      required:
        - sourceServerID
      title: DeleteSourceServerRequest
      properties:
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server to be deleted.
    StrictlyPositiveInteger:
      type: integer
      minimum: 1
    PaginationToken:
      type: string
      minLength: 0
      maxLength: 2048
    DescribeJobLogItemsRequest:
      type: object
      required:
        - jobID
      title: DescribeJobLogItemsRequest
      properties:
        jobID:
          allOf:
            - $ref: '#/components/schemas/JobID'
            - description: The ID of the Job for which Job log items will be retrieved.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/StrictlyPositiveInteger'
            - description: Maximum number of Job log items to retrieve.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Job log items to retrieve.
    JobLogs:
      type: array
      items:
        $ref: '#/components/schemas/JobLog'
    DescribeJobsRequestFilters:
      type: object
      properties:
        fromDate:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The start date in a date range query.
        jobIDs:
          allOf:
            - $ref: '#/components/schemas/DescribeJobsRequestFiltersJobIDs'
            - description: An array of Job IDs that should be returned. An empty array means all jobs.
        toDate:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The end date in a date range query.
      description: A set of filters by which to return Jobs.
    DescribeJobsRequest:
      type: object
      title: DescribeJobsRequest
      properties:
        filters:
          allOf:
            - $ref: '#/components/schemas/DescribeJobsRequestFilters'
            - description: A set of filters by which to return Jobs.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/StrictlyPositiveInteger'
            - description: Maximum number of Jobs to retrieve.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Job to retrieve.
    JobsList:
      type: array
      items:
        $ref: '#/components/schemas/Job'
    LaunchConfigurationTemplateIDs:
      type: array
      items:
        $ref: '#/components/schemas/LaunchConfigurationTemplateID'
      minItems: 0
      maxItems: 1
    MaxResultsType:
      type: integer
      minimum: 1
      maximum: 1000
    DescribeLaunchConfigurationTemplatesRequest:
      type: object
      title: DescribeLaunchConfigurationTemplatesRequest
      properties:
        launchConfigurationTemplateIDs:
          allOf:
            - $ref: '#/components/schemas/LaunchConfigurationTemplateIDs'
            - description: Request to filter Launch Configuration Templates list by Launch Configuration Template ID.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResultsType'
            - description: Maximum results to be returned in DescribeLaunchConfigurationTemplates.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Launch Configuration Template to retrieve.
    LaunchConfigurationTemplates:
      type: array
      items:
        $ref: '#/components/schemas/LaunchConfigurationTemplate'
      minItems: 0
      maxItems: 200
    RecoveryInstance:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the Recovery Instance.
        dataReplicationInfo:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInfo'
            - description: The Data Replication Info of the Recovery Instance.
        ec2InstanceID:
          allOf:
            - $ref: '#/components/schemas/EC2InstanceID'
            - description: The EC2 instance ID of the Recovery Instance.
        ec2InstanceState:
          allOf:
            - $ref: '#/components/schemas/EC2InstanceState'
            - description: The state of the EC2 instance for this Recovery Instance.
        failback:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceFailback'
            - description: An object representing failback related information of the Recovery Instance.
        isDrill:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether this Recovery Instance was created for a drill or for an actual Recovery event.
        jobID:
          allOf:
            - $ref: '#/components/schemas/JobID'
            - description: The ID of the Job that created the Recovery Instance.
        originAvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/AwsAvailabilityZone'
            - description: AWS availability zone associated with the recovery instance.
        originEnvironment:
          allOf:
            - $ref: '#/components/schemas/OriginEnvironment'
            - description: Environment (On Premises / AWS) of the instance that the recovery instance originated from.
        pointInTimeSnapshotDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time of the Point in Time (PIT) snapshot that this Recovery Instance was launched from.
        recoveryInstanceID:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceID'
            - description: The ID of the Recovery Instance.
        recoveryInstanceProperties:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceProperties'
            - description: Properties of the Recovery Instance machine.
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The Source Server ID that this Recovery Instance is associated with.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: An array of tags that are associated with the Recovery Instance.
      description: A Recovery Instance is a replica of a Source Server running on EC2.
    DescribeRecoveryInstancesItems:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstance'
    DescribeRecoveryInstancesRequestFilters:
      type: object
      properties:
        recoveryInstanceIDs:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceIDs'
            - description: An array of Recovery Instance IDs that should be returned. An empty array means all Recovery Instances.
        sourceServerIDs:
          allOf:
            - $ref: '#/components/schemas/SourceServerIDs'
            - description: An array of Source Server IDs for which associated Recovery Instances should be returned.
      description: A set of filters by which to return Recovery Instances.
    DescribeRecoveryInstancesRequest:
      type: object
      title: DescribeRecoveryInstancesRequest
      properties:
        filters:
          allOf:
            - $ref: '#/components/schemas/DescribeRecoveryInstancesRequestFilters'
            - description: A set of filters by which to return Recovery Instances.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/StrictlyPositiveInteger'
            - description: Maximum number of Recovery Instances to retrieve.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Recovery Instance to retrieve.
    DescribeRecoverySnapshotsRequestFilters:
      type: object
      properties:
        fromDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The start date in a date range query.
        toDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The end date in a date range query.
      description: A set of filters by which to return Recovery Snapshots.
    RecoverySnapshotsOrder:
      type: string
      enum:
        - ASC
        - DESC
    DescribeRecoverySnapshotsRequest:
      type: object
      required:
        - sourceServerID
      title: DescribeRecoverySnapshotsRequest
      properties:
        filters:
          allOf:
            - $ref: '#/components/schemas/DescribeRecoverySnapshotsRequestFilters'
            - description: A set of filters by which to return Recovery Snapshots.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/StrictlyPositiveInteger'
            - description: Maximum number of Recovery Snapshots to retrieve.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Recovery Snapshot to retrieve.
        order:
          allOf:
            - $ref: '#/components/schemas/RecoverySnapshotsOrder'
            - description: The sorted ordering by which to return Recovery Snapshots.
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: Filter Recovery Snapshots by Source Server ID.
    RecoverySnapshotsList:
      type: array
      items:
        $ref: '#/components/schemas/RecoverySnapshot'
    ReplicationConfigurationTemplateIDs:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
      minItems: 0
      maxItems: 200
    DescribeReplicationConfigurationTemplatesRequest:
      type: object
      title: DescribeReplicationConfigurationTemplatesRequest
      properties:
        maxResults:
          allOf:
            - $ref: '#/components/schemas/StrictlyPositiveInteger'
            - description: Maximum number of Replication Configuration Templates to retrieve.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Replication Configuration Template to retrieve.
        replicationConfigurationTemplateIDs:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationTemplateIDs'
            - description: The IDs of the Replication Configuration Templates to retrieve. An empty list means all Replication Configuration Templates.
    ReplicationConfigurationTemplates:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationConfigurationTemplate'
    DescribeSourceNetworksRequestFilters:
      type: object
      properties:
        originAccountID:
          allOf:
            - $ref: '#/components/schemas/AccountID'
            - description: Filter Source Networks by account ID containing the protected VPCs.
        originRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: Filter Source Networks by the region containing the protected VPCs.
        sourceNetworkIDs:
          allOf:
            - $ref: '#/components/schemas/DescribeSourceNetworksRequestFiltersIDs'
            - description: An array of Source Network IDs that should be returned. An empty array means all Source Networks.
      description: A set of filters by which to return Source Networks.
    DescribeSourceNetworksRequest:
      type: object
      title: DescribeSourceNetworksRequest
      properties:
        filters:
          allOf:
            - $ref: '#/components/schemas/DescribeSourceNetworksRequestFilters'
            - description: A set of filters by which to return Source Networks.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/StrictlyPositiveInteger'
            - description: Maximum number of Source Networks to retrieve.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Source Networks to retrieve.
    SourceNetworksList:
      type: array
      items:
        $ref: '#/components/schemas/SourceNetwork'
    DescribeSourceServersRequestFilters:
      type: object
      properties:
        hardwareId:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: 'An ID that describes the hardware of the Source Server. This is either an EC2 instance id, a VMware uuid or a mac address.'
        sourceServerIDs:
          allOf:
            - $ref: '#/components/schemas/DescribeSourceServersRequestFiltersIDs'
            - description: An array of Source Servers IDs that should be returned. An empty array means all Source Servers.
        stagingAccountIDs:
          allOf:
            - $ref: '#/components/schemas/AccountIDs'
            - description: An array of staging account IDs that extended source servers belong to. An empty array means all source servers will be shown.
      description: A set of filters by which to return Source Servers.
    DescribeSourceServersRequest:
      type: object
      title: DescribeSourceServersRequest
      properties:
        filters:
          allOf:
            - $ref: '#/components/schemas/DescribeSourceServersRequestFilters'
            - description: A set of filters by which to return Source Servers.
        maxResults:
          allOf:
            - $ref: '#/components/schemas/StrictlyPositiveInteger'
            - description: Maximum number of Source Servers to retrieve.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next Source Server to retrieve.
    SourceServersList:
      type: array
      items:
        $ref: '#/components/schemas/SourceServer'
    DisconnectRecoveryInstanceRequest:
      type: object
      required:
        - recoveryInstanceID
      title: DisconnectRecoveryInstanceRequest
      properties:
        recoveryInstanceID:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceID'
            - description: The ID of the Recovery Instance to disconnect.
    DisconnectSourceServerRequest:
      type: object
      required:
        - sourceServerID
      title: DisconnectSourceServerRequest
      properties:
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server to disconnect.
    Disk:
      type: object
      properties:
        bytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The amount of storage on the disk in bytes.
        deviceName:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The disk or device name.
      description: An object representing a data storage device on a server.
    Disks:
      type: array
      items:
        $ref: '#/components/schemas/Disk'
      minItems: 0
      maxItems: 1000
    EC2InstanceID:
      type: string
      pattern: '^i-[0-9a-fA-F]{8,}$'
      minLength: 0
      maxLength: 255
    EC2InstanceState:
      type: string
      enum:
        - PENDING
        - RUNNING
        - STOPPING
        - STOPPED
        - SHUTTING-DOWN
        - TERMINATED
        - NOT_FOUND
    EbsSnapshotsList:
      type: array
      items:
        $ref: '#/components/schemas/EbsSnapshot'
    EbsVolumeID:
      type: string
      pattern: '^vol-([0-9a-fA-F]{8}|[0-9a-fA-F]{17})$'
      minLength: 10
      maxLength: 19
    SourceNetworkData:
      type: object
      properties:
        sourceNetworkID:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkID'
            - description: Source Network ID.
        sourceVpc:
          allOf:
            - $ref: '#/components/schemas/VpcID'
            - description: VPC ID protected by the Source Network.
        stackName:
          allOf:
            - $ref: '#/components/schemas/LargeBoundedString'
            - description: CloudFormation stack name that was deployed for recovering the Source Network.
        targetVpc:
          allOf:
            - $ref: '#/components/schemas/VpcID'
            - description: ID of the recovered VPC following Source Network recovery.
      description: Properties of Source Network related to a job event.
    EventResourceData:
      type: object
      properties:
        sourceNetworkData:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkData'
            - description: Source Network properties.
      description: Properties of resource related to a job event.
    ExportSourceNetworkCfnTemplateRequest:
      type: object
      required:
        - sourceNetworkID
      title: ExportSourceNetworkCfnTemplateRequest
      properties:
        sourceNetworkID:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkID'
            - description: The Source Network ID to export its CloudFormation template to an S3 bucket.
    ExtensionStatus:
      type: string
      enum:
        - EXTENDED
        - EXTENSION_ERROR
        - NOT_EXTENDED
    FailbackLaunchType:
      type: string
      enum:
        - RECOVERY
        - DRILL
    FailbackReplicationError:
      type: string
      enum:
        - AGENT_NOT_SEEN
        - FAILBACK_CLIENT_NOT_SEEN
        - NOT_CONVERGING
        - UNSTABLE_NETWORK
        - FAILED_TO_ESTABLISH_RECOVERY_INSTANCE_COMMUNICATION
        - FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE_TO_FAILBACK_CLIENT
        - FAILED_TO_CONFIGURE_REPLICATION_SOFTWARE
        - FAILED_TO_PAIR_AGENT_WITH_REPLICATION_SOFTWARE
        - FAILED_TO_ESTABLISH_AGENT_REPLICATOR_SOFTWARE_COMMUNICATION
        - FAILED_GETTING_REPLICATION_STATE
        - SNAPSHOTS_FAILURE
        - FAILED_TO_CREATE_SECURITY_GROUP
        - FAILED_TO_LAUNCH_REPLICATION_SERVER
        - FAILED_TO_BOOT_REPLICATION_SERVER
        - FAILED_TO_AUTHENTICATE_WITH_SERVICE
        - FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE
        - FAILED_TO_CREATE_STAGING_DISKS
        - FAILED_TO_ATTACH_STAGING_DISKS
        - FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT
        - FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER
        - FAILED_TO_START_DATA_TRANSFER
    FailbackState:
      type: string
      enum:
        - FAILBACK_NOT_STARTED
        - FAILBACK_IN_PROGRESS
        - FAILBACK_READY_FOR_LAUNCH
        - FAILBACK_COMPLETED
        - FAILBACK_ERROR
        - FAILBACK_NOT_READY_FOR_LAUNCH
        - FAILBACK_LAUNCH_STATE_NOT_AVAILABLE
    GetFailbackReplicationConfigurationRequest:
      type: object
      required:
        - recoveryInstanceID
      title: GetFailbackReplicationConfigurationRequest
      properties:
        recoveryInstanceID:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceID'
            - description: The ID of the Recovery Instance whose failback replication configuration should be returned.
    GetLaunchConfigurationRequest:
      type: object
      required:
        - sourceServerID
      title: GetLaunchConfigurationRequest
      properties:
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server that we want to retrieve a Launch Configuration for.
    GetReplicationConfigurationRequest:
      type: object
      required:
        - sourceServerID
      title: GetReplicationConfigurationRequest
      properties:
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Serve for this Replication Configuration.r
    IPsList:
      type: array
      items:
        $ref: '#/components/schemas/BoundedString'
    IdentificationHints:
      type: object
      properties:
        awsInstanceID:
          allOf:
            - $ref: '#/components/schemas/EC2InstanceID'
            - description: AWS Instance ID identification hint.
        fqdn:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: Fully Qualified Domain Name identification hint.
        hostname:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: Hostname identification hint.
        vmWareUuid:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: vCenter VM path identification hint.
      description: Hints used to uniquely identify a machine.
    InitializeServiceRequest:
      type: object
      title: InitializeServiceRequest
      properties: {}
    InitiatedBy:
      type: string
      enum:
        - START_RECOVERY
        - START_DRILL
        - FAILBACK
        - DIAGNOSTIC
        - TERMINATE_RECOVERY_INSTANCES
        - TARGET_ACCOUNT
        - CREATE_NETWORK_RECOVERY
        - UPDATE_NETWORK_RECOVERY
        - ASSOCIATE_NETWORK_RECOVERY
    ParticipatingResources:
      type: array
      items:
        $ref: '#/components/schemas/ParticipatingResource'
    ParticipatingServers:
      type: array
      items:
        $ref: '#/components/schemas/ParticipatingServer'
    JobStatus:
      type: string
      enum:
        - PENDING
        - STARTED
        - COMPLETED
    JobType:
      type: string
      enum:
        - LAUNCH
        - TERMINATE
        - CREATE_CONVERTED_SNAPSHOT
    JobLogEvent:
      type: string
      enum:
        - JOB_START
        - SERVER_SKIPPED
        - CLEANUP_START
        - CLEANUP_END
        - CLEANUP_FAIL
        - SNAPSHOT_START
        - SNAPSHOT_END
        - SNAPSHOT_FAIL
        - USING_PREVIOUS_SNAPSHOT
        - USING_PREVIOUS_SNAPSHOT_FAILED
        - CONVERSION_START
        - CONVERSION_END
        - CONVERSION_FAIL
        - LAUNCH_START
        - LAUNCH_FAILED
        - JOB_CANCEL
        - JOB_END
        - DEPLOY_NETWORK_CONFIGURATION_START
        - DEPLOY_NETWORK_CONFIGURATION_END
        - DEPLOY_NETWORK_CONFIGURATION_FAILED
        - UPDATE_NETWORK_CONFIGURATION_START
        - UPDATE_NETWORK_CONFIGURATION_END
        - UPDATE_NETWORK_CONFIGURATION_FAILED
        - UPDATE_LAUNCH_TEMPLATE_START
        - UPDATE_LAUNCH_TEMPLATE_END
        - UPDATE_LAUNCH_TEMPLATE_FAILED
        - NETWORK_RECOVERY_FAIL
    JobLogEventData:
      type: object
      properties:
        conversionProperties:
          allOf:
            - $ref: '#/components/schemas/ConversionProperties'
            - description: Properties of a conversion job
        conversionServerID:
          allOf:
            - $ref: '#/components/schemas/EC2InstanceID'
            - description: The ID of a conversion server.
        eventResourceData:
          allOf:
            - $ref: '#/components/schemas/EventResourceData'
            - description: Properties of resource related to a job event.
        rawError:
          allOf:
            - $ref: '#/components/schemas/LargeBoundedString'
            - description: A string representing a job error.
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of a Source Server.
        targetInstanceID:
          allOf:
            - $ref: '#/components/schemas/EC2InstanceID'
            - description: The ID of a Recovery Instance.
      description: Metadata associated with a Job log.
    JobLog:
      type: object
      properties:
        event:
          allOf:
            - $ref: '#/components/schemas/JobLogEvent'
            - description: The event represents the type of a log.
        eventData:
          allOf:
            - $ref: '#/components/schemas/JobLogEventData'
            - description: Metadata associated with a Job log.
        logDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time the log was taken.
      description: A log outputted by a Job.
    LastLaunchResult:
      type: string
      enum:
        - NOT_STARTED
        - PENDING
        - SUCCEEDED
        - FAILED
    LastLaunchType:
      type: string
      enum:
        - RECOVERY
        - DRILL
    SmallBoundedString:
      type: string
      minLength: 0
      maxLength: 128
    LaunchStatus:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - LAUNCHED
        - FAILED
        - TERMINATED
    LifeCycleLastLaunch:
      type: object
      properties:
        initiated:
          allOf:
            - $ref: '#/components/schemas/LifeCycleLastLaunchInitiated'
            - description: An object containing information regarding the initiation of the last launch of a Source Server.
        status:
          allOf:
            - $ref: '#/components/schemas/LaunchStatus'
            - description: Status of Source Server's last launch.
      description: An object containing information regarding the last launch of a Source Server.
    LifeCycle:
      type: object
      properties:
        addedToServiceDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time of when the Source Server was added to the service.
        elapsedReplicationDuration:
          allOf:
            - $ref: '#/components/schemas/ISO8601DurationString'
            - description: The amount of time that the Source Server has been replicating for.
        firstByteDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time of the first byte that was replicated from the Source Server.
        lastLaunch:
          allOf:
            - $ref: '#/components/schemas/LifeCycleLastLaunch'
            - description: An object containing information regarding the last launch of the Source Server.
        lastSeenByServiceDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time this Source Server was last seen by the service.
      description: An object representing the Source Server Lifecycle.
    LifeCycleLastLaunchInitiated:
      type: object
      properties:
        apiCallDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time the last Source Server launch was initiated.
        jobID:
          allOf:
            - $ref: '#/components/schemas/JobID'
            - description: The ID of the Job that was used to last launch the Source Server.
        type:
          allOf:
            - $ref: '#/components/schemas/LastLaunchType'
            - description: The Job type that was used to last launch the Source Server.
      description: An object containing information regarding the initiation of the last launch of a Source Server.
    MaxResultsReplicatingSourceServers:
      type: integer
      minimum: 1
      maximum: 300
    ListExtensibleSourceServersRequest:
      type: object
      required:
        - stagingAccountID
      title: ListExtensibleSourceServersRequest
      properties:
        maxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResultsReplicatingSourceServers'
            - description: The maximum number of extensible source servers to retrieve.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The token of the next extensible source server to retrieve.
        stagingAccountID:
          allOf:
            - $ref: '#/components/schemas/AccountID'
            - description: The Id of the staging Account to retrieve extensible source servers from.
    StagingSourceServersList:
      type: array
      items:
        $ref: '#/components/schemas/StagingSourceServer'
    ListStagingAccountsRequestMaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 50
    ListStagingAccountsRequest:
      type: object
      title: ListStagingAccountsRequest
      properties: {}
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    NetworkInterface:
      type: object
      properties:
        ips:
          allOf:
            - $ref: '#/components/schemas/IPsList'
            - description: Network interface IPs.
        isPrimary:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether this is the primary network interface.
        macAddress:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The MAC address of the network interface.
      description: Network interface.
    NetworkInterfaces:
      type: array
      items:
        $ref: '#/components/schemas/NetworkInterface'
      minItems: 0
      maxItems: 32
    OS:
      type: object
      properties:
        fullString:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The long name of the Operating System.
      description: Operating System.
    OriginEnvironment:
      type: string
      enum:
        - ON_PREMISES
        - AWS
    PITPolicyRuleUnits:
      type: string
      enum:
        - MINUTE
        - HOUR
        - DAY
    ParticipatingResourceID:
      type: object
      properties:
        sourceNetworkID:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkID'
            - description: Source Network ID.
      description: ID of a resource participating in an asynchronous Job.
    ParticipatingResource:
      type: object
      properties:
        launchStatus:
          allOf:
            - $ref: '#/components/schemas/LaunchStatus'
            - description: The launch status of a participating resource.
        participatingResourceID:
          allOf:
            - $ref: '#/components/schemas/ParticipatingResourceID'
            - description: The ID of a participating resource.
      description: Represents a resource participating in an asynchronous Job.
    ParticipatingServer:
      type: object
      properties:
        launchStatus:
          allOf:
            - $ref: '#/components/schemas/LaunchStatus'
            - description: The launch status of a participating server.
        recoveryInstanceID:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceID'
            - description: The Recovery Instance ID of a participating server.
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The Source Server ID of a participating server.
      description: Represents a server participating in an asynchronous Job.
    RecoveryInstanceDataReplicationInfo:
      type: object
      properties:
        dataReplicationError:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceDataReplicationError'
            - description: Information about Data Replication
        dataReplicationInitiation:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInitiation'
            - description: Information about whether the data replication has been initiated.
        dataReplicationState:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceDataReplicationState'
            - description: The state of the data replication.
        etaDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: An estimate of when the data replication will be completed.
        lagDuration:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: Data replication lag duration.
        replicatedDisks:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInfoReplicatedDisks'
            - description: The disks that should be replicated.
        stagingAvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/AwsAvailabilityZone'
            - description: AWS Availability zone into which data is being replicated.
      description: Information about Data Replication
    RecoveryInstanceFailback:
      type: object
      properties:
        agentLastSeenByServiceDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time the agent on the Recovery Instance was last seen by the service.
        elapsedReplicationDuration:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The amount of time that the Recovery Instance has been replicating for.
        failbackClientID:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The ID of the failback client that this Recovery Instance is associated with.
        failbackClientLastSeenByServiceDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time that the failback client was last seen by the service.
        failbackInitiationTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time that the failback initiation started.
        failbackJobID:
          allOf:
            - $ref: '#/components/schemas/JobID'
            - description: The Job ID of the last failback log for this Recovery Instance.
        failbackLaunchType:
          allOf:
            - $ref: '#/components/schemas/FailbackLaunchType'
            - description: The launch type (Recovery / Drill) of the last launch for the failback replication of this recovery instance.
        failbackToOriginalServer:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether we are failing back to the original Source Server for this Recovery Instance.
        firstByteDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time of the first byte that was replicated from the Recovery Instance.
        state:
          allOf:
            - $ref: '#/components/schemas/FailbackState'
            - description: The state of the failback process that this Recovery Instance is in.
      description: An object representing failback related information of the Recovery Instance.
    RecoveryInstanceProperties:
      type: object
      properties:
        cpus:
          allOf:
            - $ref: '#/components/schemas/Cpus'
            - description: An array of CPUs.
        disks:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceDisks'
            - description: An array of disks.
        identificationHints:
          allOf:
            - $ref: '#/components/schemas/IdentificationHints'
            - description: Hints used to uniquely identify a machine.
        lastUpdatedDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time the Recovery Instance properties were last updated on.
        networkInterfaces:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaces'
            - description: An array of network interfaces.
        os:
          allOf:
            - $ref: '#/components/schemas/OS'
            - description: Operating system.
        ramBytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The amount of RAM in bytes.
      description: Properties of the Recovery Instance machine.
    RecoveryInstanceDataReplicationError:
      type: object
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/FailbackReplicationError'
            - description: Error in data replication.
        rawError:
          allOf:
            - $ref: '#/components/schemas/LargeBoundedString'
            - description: Error in data replication.
      description: Error in data replication.
    RecoveryInstanceDataReplicationInitiation:
      type: object
      properties:
        startDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time of the current attempt to initiate data replication.
        steps:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInitiationSteps'
            - description: The steps of the current attempt to initiate data replication.
      description: Data replication initiation.
    RecoveryInstanceDataReplicationState:
      type: string
      enum:
        - STOPPED
        - INITIATING
        - INITIAL_SYNC
        - BACKLOG
        - CREATING_SNAPSHOT
        - CONTINUOUS
        - PAUSED
        - RESCAN
        - STALLED
        - DISCONNECTED
        - REPLICATION_STATE_NOT_AVAILABLE
        - NOT_STARTED
    RecoveryInstanceDataReplicationInfoReplicatedDisks:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceDataReplicationInfoReplicatedDisk'
      minItems: 0
      maxItems: 60
    RecoveryInstanceDataReplicationInfoReplicatedDisk:
      type: object
      properties:
        backloggedStorageBytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The size of the replication backlog in bytes.
        deviceName:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The name of the device.
        replicatedStorageBytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The amount of data replicated so far in bytes.
        rescannedStorageBytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The amount of data to be rescanned in bytes.
        totalStorageBytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The total amount of data to be replicated in bytes.
      description: A disk that should be replicated.
    RecoveryInstanceDataReplicationInitiationSteps:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceDataReplicationInitiationStep'
    RecoveryInstanceDataReplicationInitiationStepName:
      type: string
      enum:
        - LINK_FAILBACK_CLIENT_WITH_RECOVERY_INSTANCE
        - COMPLETE_VOLUME_MAPPING
        - ESTABLISH_RECOVERY_INSTANCE_COMMUNICATION
        - DOWNLOAD_REPLICATION_SOFTWARE_TO_FAILBACK_CLIENT
        - CONFIGURE_REPLICATION_SOFTWARE
        - PAIR_AGENT_WITH_REPLICATION_SOFTWARE
        - ESTABLISH_AGENT_REPLICATOR_SOFTWARE_COMMUNICATION
        - WAIT
        - CREATE_SECURITY_GROUP
        - LAUNCH_REPLICATION_SERVER
        - BOOT_REPLICATION_SERVER
        - AUTHENTICATE_WITH_SERVICE
        - DOWNLOAD_REPLICATION_SOFTWARE
        - CREATE_STAGING_DISKS
        - ATTACH_STAGING_DISKS
        - PAIR_REPLICATION_SERVER_WITH_AGENT
        - CONNECT_AGENT_TO_REPLICATION_SERVER
        - START_DATA_TRANSFER
    RecoveryInstanceDataReplicationInitiationStepStatus:
      type: string
      enum:
        - NOT_STARTED
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
        - SKIPPED
    RecoveryInstanceDataReplicationInitiationStep:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInitiationStepName'
            - description: The name of the step.
        status:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInitiationStepStatus'
            - description: The status of the step.
      description: Data replication initiation step.
    RecoveryInstanceDisk:
      type: object
      properties:
        bytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The amount of storage on the disk in bytes.
        ebsVolumeID:
          allOf:
            - $ref: '#/components/schemas/EbsVolumeID'
            - description: The EBS Volume ID of this disk.
        internalDeviceName:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The internal device name of this disk. This is the name that is visible on the machine itself and not from the EC2 console.
      description: An object representing a block storage device on the Recovery Instance.
    RecoveryInstanceDisks:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceDisk'
      minItems: 0
      maxItems: 1000
    RecoveryInstancesForTerminationRequest:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceID'
      minItems: 1
      maxItems: 200
    SyntheticTimestamp_date_time:
      type: string
      format: date-time
    RecoveryResult:
      type: string
      enum:
        - NOT_STARTED
        - IN_PROGRESS
        - SUCCESS
        - FAIL
        - PARTIAL_SUCCESS
        - ASSOCIATE_SUCCESS
        - ASSOCIATE_FAIL
    RecoveryLifeCycle:
      type: object
      properties:
        apiCallDateTime:
          allOf:
            - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
            - description: The date and time the last Source Network recovery was initiated.
        jobID:
          allOf:
            - $ref: '#/components/schemas/JobID'
            - description: The ID of the Job that was used to last recover the Source Network.
        lastRecoveryResult:
          allOf:
            - $ref: '#/components/schemas/RecoveryResult'
            - description: The status of the last recovery status of this Source Network.
      description: An object representing the Source Network recovery Lifecycle.
    RecoverySnapshotID:
      type: string
      pattern: '^pit-[0-9a-zA-Z]{17}$'
      minLength: 21
      maxLength: 21
    RecoverySnapshot:
      type: object
      required:
        - expectedTimestamp
        - snapshotID
        - sourceServerID
      properties:
        ebsSnapshots:
          allOf:
            - $ref: '#/components/schemas/EbsSnapshotsList'
            - description: A list of EBS snapshots.
        expectedTimestamp:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The timestamp of when we expect the snapshot to be taken.
        snapshotID:
          allOf:
            - $ref: '#/components/schemas/RecoverySnapshotID'
            - description: The ID of the Recovery Snapshot.
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server that the snapshot was taken for.
        timestamp:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The actual timestamp that the snapshot was taken.
      description: A snapshot of a Source Server used during recovery.
    ReplicationConfigurationReplicatedDisks:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisk'
      minItems: 0
      maxItems: 60
    ReplicationConfigurationReplicatedDiskStagingDiskType:
      type: string
      enum:
        - AUTO
        - GP2
        - GP3
        - IO1
        - SC1
        - ST1
        - STANDARD
    ReplicationDirection:
      type: string
      enum:
        - FAILOVER
        - FAILBACK
      description: 'Replication direction designates if this is a failover replication, or a failback replication. When a DRS agent is installed on an instance, the replication direction is failover. In cases where a recovery launch was made in the recovery location and a new recovery instance was created, and then a failback replication was initiated from that recovery instance back to the origin location, then the replication direction will be failback.'
    ReplicationStatus:
      type: string
      enum:
        - STOPPED
        - IN_PROGRESS
        - PROTECTED
        - ERROR
    RetryDataReplicationRequest:
      type: object
      required:
        - sourceServerID
      deprecated: true
      title: RetryDataReplicationRequest
      properties:
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server whose data replication should be retried.
      description: 'WARNING: RetryDataReplication is deprecated'
    ReverseReplicationRequest:
      type: object
      required:
        - recoveryInstanceID
      title: ReverseReplicationRequest
      properties:
        recoveryInstanceID:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceID'
            - description: The ID of the Recovery Instance that we want to reverse the replication for.
    SensitiveBoundedString:
      type: string
      minLength: 0
      maxLength: 256
      format: password
    SourceCloudProperties:
      type: object
      properties:
        originAccountID:
          allOf:
            - $ref: '#/components/schemas/AccountID'
            - description: AWS Account ID for an EC2-originated Source Server.
        originAvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/AwsAvailabilityZone'
            - description: AWS Availability Zone for an EC2-originated Source Server.
        originRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: AWS Region for an EC2-originated Source Server.
      description: Properties of the cloud environment where this Source Server originated from.
    SourceNetwork:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the Source Network.
        cfnStackName:
          allOf:
            - $ref: '#/components/schemas/CfnStackName'
            - description: CloudFormation stack name that was deployed for recovering the Source Network.
        lastRecovery:
          allOf:
            - $ref: '#/components/schemas/RecoveryLifeCycle'
            - description: An object containing information regarding the last recovery of the Source Network.
        launchedVpcID:
          allOf:
            - $ref: '#/components/schemas/VpcID'
            - description: ID of the recovered VPC following Source Network recovery.
        replicationStatus:
          allOf:
            - $ref: '#/components/schemas/ReplicationStatus'
            - description: 'Status of Source Network Replication. Possible values: (a) STOPPED - Source Network is not replicating. (b) IN_PROGRESS - Source Network is being replicated. (c) PROTECTED - Source Network was replicated successfully and is being synchronized for changes. (d) ERROR - Source Network replication has failed'
        replicationStatusDetails:
          allOf:
            - $ref: '#/components/schemas/SensitiveBoundedString'
            - description: Error details in case Source Network replication status is ERROR.
        sourceAccountID:
          allOf:
            - $ref: '#/components/schemas/AccountID'
            - description: Account ID containing the VPC protected by the Source Network.
        sourceNetworkID:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkID'
            - description: Source Network ID.
        sourceRegion:
          allOf:
            - $ref: '#/components/schemas/AwsRegion'
            - description: Region containing the VPC protected by the Source Network.
        sourceVpcID:
          allOf:
            - $ref: '#/components/schemas/VpcID'
            - description: VPC ID protected by the Source Network.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: A list of tags associated with the Source Network.
      description: The ARN of the Source Network.
    SourceProperties:
      type: object
      properties:
        cpus:
          allOf:
            - $ref: '#/components/schemas/Cpus'
            - description: An array of CPUs.
        disks:
          allOf:
            - $ref: '#/components/schemas/Disks'
            - description: An array of disks.
        identificationHints:
          allOf:
            - $ref: '#/components/schemas/IdentificationHints'
            - description: Hints used to uniquely identify a machine.
        lastUpdatedDateTime:
          allOf:
            - $ref: '#/components/schemas/ISO8601DatetimeString'
            - description: The date and time the Source Properties were last updated on.
        networkInterfaces:
          allOf:
            - $ref: '#/components/schemas/NetworkInterfaces'
            - description: An array of network interfaces.
        os:
          allOf:
            - $ref: '#/components/schemas/OS'
            - description: Operating system.
        ramBytes:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: The amount of RAM in bytes.
        recommendedInstanceType:
          allOf:
            - $ref: '#/components/schemas/EC2InstanceType'
            - description: The recommended EC2 instance type that will be used when recovering the Source Server.
        supportsNitroInstances:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Are EC2 nitro instance types supported when recovering the Source Server.
      description: Properties of the Source Server machine.
    StagingArea:
      type: object
      properties:
        errorMessage:
          allOf:
            - $ref: '#/components/schemas/LargeBoundedString'
            - description: Shows an error message that occurred when DRS tried to access the staging source server. In this case StagingArea$status will have value EXTENSION_ERROR
        stagingAccountID:
          allOf:
            - $ref: '#/components/schemas/AccountID'
            - description: Account ID of the account to which source server belongs. If this source server is extended - shows Account ID of staging source server.
        stagingSourceServerArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: Arn of the staging source server if this source server is extended
        status:
          allOf:
            - $ref: '#/components/schemas/ExtensionStatus'
            - description: 'Status of Source server extension. Possible values: (a) NOT_EXTENDED - This is a source server that is replicating in the current account. (b) EXTENDED - Source server is extended from a staging source server. In this case, the value of stagingSourceServerArn is pointing to the Arn of the source server in the staging account. (c) EXTENSION_ERROR - Some issue occurred when accessing staging source server. In this case, errorMessage field will contain an error message that explains what happened.'
      description: Staging information related to source server.
    StagingSourceServer:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/SourceServerARN'
            - description: The ARN of the source server.
        hostname:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: Hostname of staging source server.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: A list of tags associated with the staging source server.
      description: Source server in staging account that extended source server connected to.
    StartFailbackRequestRecoveryInstanceIDs:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceID'
      minItems: 1
      maxItems: 200
    StartFailbackLaunchRequest:
      type: object
      required:
        - recoveryInstanceIDs
      title: StartFailbackLaunchRequest
      properties:
        recoveryInstanceIDs:
          allOf:
            - $ref: '#/components/schemas/StartFailbackRequestRecoveryInstanceIDs'
            - description: The IDs of the Recovery Instance whose failback launch we want to request.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: The tags to be associated with the failback launch Job.
    StartRecoveryRequestSourceServers:
      type: array
      items:
        $ref: '#/components/schemas/StartRecoveryRequestSourceServer'
      minItems: 1
      maxItems: 200
    StartRecoveryRequest:
      type: object
      required:
        - sourceServers
      title: StartRecoveryRequest
      properties:
        isDrill:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether this Source Server Recovery operation is a drill or not.
        sourceServers:
          allOf:
            - $ref: '#/components/schemas/StartRecoveryRequestSourceServers'
            - description: The Source Servers that we want to start a Recovery Job for.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: The tags to be associated with the Recovery Job.
    StartReplicationRequest:
      type: object
      required:
        - sourceServerID
      title: StartReplicationRequest
      properties:
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server to start replication for.
    StartSourceNetworkRecoveryRequestNetworkEntries:
      type: array
      items:
        $ref: '#/components/schemas/StartSourceNetworkRecoveryRequestNetworkEntry'
      minItems: 1
      maxItems: 100
    StartSourceNetworkRecoveryRequest:
      type: object
      required:
        - sourceNetworks
      title: StartSourceNetworkRecoveryRequest
      properties:
        deployAsNew:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Don''t update existing CloudFormation Stack, recover the network using a new stack.'
        sourceNetworks:
          allOf:
            - $ref: '#/components/schemas/StartSourceNetworkRecoveryRequestNetworkEntries'
            - description: The Source Networks that we want to start a Recovery Job for.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: The tags to be associated with the Source Network recovery Job.
    StartSourceNetworkReplicationRequest:
      type: object
      required:
        - sourceNetworkID
      title: StartSourceNetworkReplicationRequest
      properties:
        sourceNetworkID:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkID'
            - description: ID of the Source Network to replicate.
    StopFailbackRequest:
      type: object
      required:
        - recoveryInstanceID
      title: StopFailbackRequest
      properties:
        recoveryInstanceID:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceID'
            - description: The ID of the Recovery Instance we want to stop failback for.
    StopReplicationRequest:
      type: object
      required:
        - sourceServerID
      title: StopReplicationRequest
      properties:
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server to stop replication for.
    StopSourceNetworkReplicationRequest:
      type: object
      required:
        - sourceNetworkID
      title: StopSourceNetworkReplicationRequest
      properties:
        sourceNetworkID:
          allOf:
            - $ref: '#/components/schemas/SourceNetworkID'
            - description: ID of the Source Network to stop replication.
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: Array of tags to be added or updated.
    TerminateRecoveryInstancesRequest:
      type: object
      required:
        - recoveryInstanceIDs
      title: TerminateRecoveryInstancesRequest
      properties:
        recoveryInstanceIDs:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstancesForTerminationRequest'
            - description: The IDs of the Recovery Instances that should be terminated.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateFailbackReplicationConfigurationRequest:
      type: object
      required:
        - recoveryInstanceID
      title: UpdateFailbackReplicationConfigurationRequest
      properties:
        bandwidthThrottling:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: Configure bandwidth throttling for the outbound data transfer rate of the Recovery Instance in Mbps.
        name:
          allOf:
            - $ref: '#/components/schemas/BoundedString'
            - description: The name of the Failback Replication Configuration.
        recoveryInstanceID:
          allOf:
            - $ref: '#/components/schemas/RecoveryInstanceID'
            - description: The ID of the Recovery Instance.
        usePrivateIP:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to use Private IP for the failback replication of the Recovery Instance.
    UpdateLaunchConfigurationRequest:
      type: object
      required:
        - sourceServerID
      title: UpdateLaunchConfigurationRequest
      properties:
        copyPrivateIp:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether we should copy the Private IP of the Source Server to the Recovery Instance.
        copyTags:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether we want to copy the tags of the Source Server to the EC2 machine of the Recovery Instance.
        launchDisposition:
          allOf:
            - $ref: '#/components/schemas/LaunchDisposition'
            - description: The state of the Recovery Instance in EC2 after the recovery operation.
        licensing:
          allOf:
            - $ref: '#/components/schemas/Licensing'
            - description: The licensing configuration to be used for this launch configuration.
        name:
          allOf:
            - $ref: '#/components/schemas/SmallBoundedString'
            - description: The name of the launch configuration.
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server that we want to retrieve a Launch Configuration for.
        targetInstanceTypeRightSizingMethod:
          allOf:
            - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
            - description: 'Whether Elastic Disaster Recovery should try to automatically choose the instance type that best matches the OS, CPU, and RAM of your Source Server.'
    UpdateLaunchConfigurationTemplateRequest:
      type: object
      required:
        - launchConfigurationTemplateID
      title: UpdateLaunchConfigurationTemplateRequest
      properties:
        copyPrivateIp:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Copy private IP.
        copyTags:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Copy tags.
        exportBucketArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: S3 bucket ARN to export Source Network templates.
        launchConfigurationTemplateID:
          allOf:
            - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
            - description: Launch Configuration Template ID.
        launchDisposition:
          allOf:
            - $ref: '#/components/schemas/LaunchDisposition'
            - description: Launch disposition.
        licensing:
          allOf:
            - $ref: '#/components/schemas/Licensing'
            - description: Licensing.
        targetInstanceTypeRightSizingMethod:
          allOf:
            - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
            - description: Target instance type right-sizing method.
    UpdateReplicationConfigurationRequest:
      type: object
      required:
        - sourceServerID
      title: UpdateReplicationConfigurationRequest
      properties:
        associateDefaultSecurityGroup:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration.
        autoReplicateNewDisks:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to allow the AWS replication agent to automatically replicate newly added disks.
        bandwidthThrottling:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.
        createPublicIP:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to create a Public IP for the Recovery Instance by default.
        dataPlaneRouting:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
            - description: The data plane routing mechanism that will be used for replication.
        defaultLargeStagingDiskType:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
            - description: The Staging Disk EBS volume type to be used during replication.
        ebsEncryption:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
            - description: The type of EBS encryption to be used during replication.
        ebsEncryptionKeyArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the EBS encryption key to be used during replication.
        name:
          allOf:
            - $ref: '#/components/schemas/SmallBoundedString'
            - description: The name of the Replication Configuration.
        pitPolicy:
          allOf:
            - $ref: '#/components/schemas/PITPolicy'
            - description: The Point in time (PIT) policy to manage snapshots taken during replication.
        replicatedDisks:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisks'
            - description: The configuration of the disks of the Source Server to be replicated.
        replicationServerInstanceType:
          allOf:
            - $ref: '#/components/schemas/EC2InstanceType'
            - description: The instance type to be used for the replication server.
        replicationServersSecurityGroupsIDs:
          allOf:
            - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
            - description: The security group IDs that will be used by the replication server.
        sourceServerID:
          allOf:
            - $ref: '#/components/schemas/SourceServerID'
            - description: The ID of the Source Server for this Replication Configuration.
        stagingAreaSubnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetID'
            - description: The subnet to be used by the replication staging area.
        stagingAreaTags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: 'A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.'
        useDedicatedReplicationServer:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to use a dedicated Replication Server in the replication staging area.
    UpdateReplicationConfigurationTemplateRequest:
      type: object
      required:
        - replicationConfigurationTemplateID
      title: UpdateReplicationConfigurationTemplateRequest
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Replication Configuration Template ARN.
        associateDefaultSecurityGroup:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration Template.
        autoReplicateNewDisks:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to allow the AWS replication agent to automatically replicate newly added disks.
        bandwidthThrottling:
          allOf:
            - $ref: '#/components/schemas/PositiveInteger'
            - description: Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.
        createPublicIP:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to create a Public IP for the Recovery Instance by default.
        dataPlaneRouting:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
            - description: The data plane routing mechanism that will be used for replication.
        defaultLargeStagingDiskType:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
            - description: The Staging Disk EBS volume type to be used during replication.
        ebsEncryption:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
            - description: The type of EBS encryption to be used during replication.
        ebsEncryptionKeyArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the EBS encryption key to be used during replication.
        pitPolicy:
          allOf:
            - $ref: '#/components/schemas/PITPolicy'
            - description: The Point in time (PIT) policy to manage snapshots taken during replication.
        replicationConfigurationTemplateID:
          allOf:
            - $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
            - description: The Replication Configuration Template ID.
        replicationServerInstanceType:
          allOf:
            - $ref: '#/components/schemas/EC2InstanceType'
            - description: The instance type to be used for the replication server.
        replicationServersSecurityGroupsIDs:
          allOf:
            - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
            - description: The security group IDs that will be used by the replication server.
        stagingAreaSubnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetID'
            - description: The subnet to be used by the replication staging area.
        stagingAreaTags:
          allOf:
            - $ref: '#/components/schemas/TagsMap'
            - description: 'A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.'
        useDedicatedReplicationServer:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to use a dedicated Replication Server in the replication staging area.
security:
  - hmac: []
