{
  "name": "CreateRecordingConfiguration",
  "description": "<p>Creates a new recording configuration, used to enable recording to Amazon S3.</p> <p> <b>Known issue:</b> In the us-east-1 region, if you use the Amazon Web Services CLI to create a recording configuration, it returns success even if the S3 bucket is in a different region. In this case, the <code>state</code> of the recording configuration is <code>CREATE_FAILED</code> (instead of <code>ACTIVE</code>). (In other regions, the CLI correctly returns failure if the bucket is in a different region.)</p> <p> <b>Workaround:</b> Ensure that your S3 bucket is in the same region as the recording configuration. If you create a recording configuration in a different region as your S3 bucket, delete that recording configuration and create a new one with an S3 bucket from the correct region.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "destinationConfiguration"
        ],
        "properties": {
          "destinationConfiguration": {
            "description": "A complex type that describes a location where recorded videos will be stored. Each member represents a type of destination configuration. For recording, you define one and only one type of destination configuration.",
            "type": "object",
            "properties": {
              "s3": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3DestinationConfiguration"
                  },
                  {
                    "description": "An S3 destination configuration where recorded videos will be stored."
                  }
                ]
              }
            }
          },
          "name": {
            "description": "Recording-configuration name. The value does not need to be unique.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]*$",
            "minLength": 0,
            "maxLength": 128
          },
          "recordingReconnectWindowSeconds": {
            "description": "If a broadcast disconnects and then reconnects within the specified interval, the multiple streams will be considered a single broadcast and merged together. Default: 0.",
            "type": "integer",
            "minimum": 0,
            "maximum": 300
          },
          "renditionConfiguration": {
            "description": "Object that describes which renditions should be recorded for a stream.",
            "type": "object",
            "properties": {
              "renditionSelection": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RenditionConfigurationRenditionSelection"
                  },
                  {
                    "description": "Indicates which set of renditions are recorded for a stream. For <code>BASIC</code> channels, the <code>CUSTOM</code> value has no effect. If <code>CUSTOM</code> is specified, a set of renditions must be specified in the <code>renditions</code> field. Default: <code>ALL</code>."
                  }
                ]
              },
              "renditions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RenditionConfigurationRenditionList"
                  },
                  {
                    "description": "Indicates which renditions are recorded for a stream, if <code>renditionSelection</code> is <code>CUSTOM</code>; otherwise, this field is irrelevant. The selected renditions are recorded if they are available during the stream. If a selected rendition is unavailable, the best available rendition is recorded. For details on the resolution dimensions of each rendition, see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/record-to-s3.html\">Auto-Record to Amazon S3</a>."
                  }
                ]
              }
            }
          },
          "tags": {
            "description": "Array of 1-50 maps, each of the form <code>string:string (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services Resources</a> for more information, including restrictions that apply to tags and \"Tag naming limits and requirements\"; Amazon IVS has no service-specific constraints beyond what is documented there.",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "thumbnailConfiguration": {
            "description": "An object representing a configuration of thumbnails for recorded video.",
            "type": "object",
            "properties": {
              "recordingMode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RecordingMode"
                  },
                  {
                    "description": "Thumbnail recording mode. Default: <code>INTERVAL</code>."
                  }
                ]
              },
              "resolution": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ThumbnailConfigurationResolution"
                  },
                  {
                    "description": "Indicates the desired resolution of recorded thumbnails. Thumbnails are recorded at the selected resolution if the corresponding rendition is available during the stream; otherwise, they are recorded at source resolution. For more information about resolution values and their corresponding height and width dimensions, see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/record-to-s3.html\">Auto-Record to Amazon S3</a>. Default: Null (source resolution is returned)."
                  }
                ]
              },
              "storage": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ThumbnailConfigurationStorageList"
                  },
                  {
                    "description": "Indicates the format in which thumbnails are recorded. <code>SEQUENTIAL</code> records all generated thumbnails in a serial manner, to the media/thumbnails directory. <code>LATEST</code> saves the latest thumbnail in media/latest_thumbnail/thumb.jpg and overwrites it at the interval specified by <code>targetIntervalSeconds</code>. You can enable both <code>SEQUENTIAL</code> and <code>LATEST</code>. Default: <code>SEQUENTIAL</code>."
                  }
                ]
              },
              "targetIntervalSeconds": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TargetIntervalSeconds"
                  },
                  {
                    "description": "<p>The targeted thumbnail-generation interval in seconds. This is configurable (and required) only if <code>recordingMode</code> is <code>INTERVAL</code>. Default: 60.</p> <p> <b>Important:</b> For the <code>BASIC</code> channel type, setting a value for <code>targetIntervalSeconds</code> does not guarantee that thumbnails are generated at the specified interval. For thumbnails to be generated at the <code>targetIntervalSeconds</code> interval, the <code>IDR/Keyframe</code> value for the input video must be less than the <code>targetIntervalSeconds</code> value. See <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/streaming-config.html\"> Amazon IVS Streaming Configuration</a> for information on setting <code>IDR/Keyframe</code> to the recommended value in video-encoder settings.</p>"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "S3DestinationConfiguration": {
        "type": "object",
        "required": [
          "bucketName"
        ],
        "properties": {
          "bucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/S3DestinationBucketName"
              },
              {
                "description": "Location (S3 bucket name) where recorded videos will be stored."
              }
            ]
          }
        },
        "description": "A complex type that describes an S3 location where recorded videos will be stored."
      },
      "S3DestinationBucketName": {
        "type": "string",
        "pattern": "^[a-z0-9-.]+$",
        "minLength": 3,
        "maxLength": 63
      },
      "RenditionConfigurationRenditionSelection": {
        "type": "string",
        "enum": [
          "ALL",
          "NONE",
          "CUSTOM"
        ]
      },
      "RenditionConfigurationRenditionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RenditionConfigurationRendition"
        }
      },
      "RenditionConfigurationRendition": {
        "type": "string",
        "enum": [
          "FULL_HD",
          "HD",
          "SD",
          "LOWEST_RESOLUTION"
        ]
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "RecordingMode": {
        "type": "string",
        "enum": [
          "DISABLED",
          "INTERVAL"
        ]
      },
      "ThumbnailConfigurationResolution": {
        "type": "string",
        "enum": [
          "FULL_HD",
          "HD",
          "SD",
          "LOWEST_RESOLUTION"
        ]
      },
      "ThumbnailConfigurationStorageList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ThumbnailConfigurationStorage"
        }
      },
      "ThumbnailConfigurationStorage": {
        "type": "string",
        "enum": [
          "SEQUENTIAL",
          "LATEST"
        ]
      },
      "TargetIntervalSeconds": {
        "type": "integer",
        "minimum": 1,
        "maximum": 60
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ivs.us-east-1.amazonaws.com/CreateRecordingConfiguration"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**recordingConfiguration**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
