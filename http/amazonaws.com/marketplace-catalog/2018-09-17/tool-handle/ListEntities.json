{
  "name": "ListEntities",
  "description": "Provides the list of entities of a given type.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Catalog",
          "EntityType"
        ],
        "properties": {
          "Catalog": {
            "description": "The catalog related to the request. Fixed value: <code>AWSMarketplace</code> ",
            "type": "string",
            "pattern": "^[a-zA-Z]+$",
            "minLength": 1,
            "maxLength": 64
          },
          "EntityType": {
            "description": "The type of entities to retrieve.",
            "type": "string",
            "pattern": "^[a-zA-Z]+$",
            "minLength": 1,
            "maxLength": 255
          },
          "FilterList": {
            "description": "An array of filter objects. Each filter object contains two attributes, <code>filterName</code> and <code>filterValues</code>.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Filter"
            },
            "minItems": 1,
            "maxItems": 8
          },
          "Sort": {
            "description": "An object that contains two attributes, <code>SortBy</code> and <code>SortOrder</code>.",
            "type": "object",
            "properties": {
              "SortBy": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SortBy"
                  },
                  {
                    "description": "<p>For <code>ListEntities</code>, supported attributes include <code>LastModifiedDate</code> (default), <code>Visibility</code>, <code>EntityId</code>, and <code>Name</code>.</p> <p>For <code>ListChangeSets</code>, supported attributes include <code>StartTime</code> and <code>EndTime</code>.</p>"
                  }
                ]
              },
              "SortOrder": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SortOrder"
                  },
                  {
                    "description": "The sorting order. Can be <code>ASCENDING</code> or <code>DESCENDING</code>. The default value is <code>DESCENDING</code>."
                  }
                ]
              }
            }
          },
          "NextToken": {
            "description": "The value of the next token, if it exists. Null if there are no more results.",
            "type": "string",
            "pattern": "^[\\w+=.:@\\-\\/]$",
            "minLength": 1,
            "maxLength": 2048
          },
          "MaxResults": {
            "description": "Specifies the upper limit of the elements on a single page. If a value isn't provided, the default value is 20.",
            "type": "integer",
            "minimum": 1,
            "maximum": 50
          },
          "OwnershipType": {
            "description": "",
            "type": "string",
            "enum": [
              "SELF",
              "SHARED"
            ]
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Filter": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterName"
              },
              {
                "description": "<p>For <code>ListEntities</code>, the supported value for this is an <code>EntityId</code>.</p> <p>For <code>ListChangeSets</code>, the supported values are as follows:</p>"
              }
            ]
          },
          "ValueList": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueList"
              },
              {
                "description": "<p> <code>ListEntities</code> - This is a list of unique <code>EntityId</code>s.</p> <p> <code>ListChangeSets</code> - The supported filter names and associated <code>ValueList</code>s is as follows:</p> <ul> <li> <p> <code>ChangeSetName</code> - The supported <code>ValueList</code> is a list of non-unique <code>ChangeSetName</code>s. These are defined when you call the <code>StartChangeSet</code> action.</p> </li> <li> <p> <code>Status</code> - The supported <code>ValueList</code> is a list of statuses for all change set requests.</p> </li> <li> <p> <code>EntityId</code> - The supported <code>ValueList</code> is a list of unique <code>EntityId</code>s.</p> </li> <li> <p> <code>BeforeStartTime</code> - The supported <code>ValueList</code> is a list of all change sets that started before the filter value.</p> </li> <li> <p> <code>AfterStartTime</code> - The supported <code>ValueList</code> is a list of all change sets that started after the filter value.</p> </li> <li> <p> <code>BeforeEndTime</code> - The supported <code>ValueList</code> is a list of all change sets that ended before the filter value.</p> </li> <li> <p> <code>AfterEndTime</code> - The supported <code>ValueList</code> is a list of all change sets that ended after the filter value.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "A filter object, used to optionally filter results from calls to the <code>ListEntities</code> and <code>ListChangeSets</code> actions."
      },
      "FilterName": {
        "type": "string",
        "pattern": "^[a-zA-Z]+$",
        "minLength": 1,
        "maxLength": 255
      },
      "ValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilterValueContent"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "FilterValueContent": {
        "type": "string",
        "pattern": "^(.)+$",
        "minLength": 1,
        "maxLength": 255
      },
      "SortBy": {
        "type": "string",
        "pattern": "^[a-zA-Z]+$",
        "minLength": 1,
        "maxLength": 255
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://catalog.marketplace.us-east-1.amazonaws.com/ListEntities{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**EntitySummaryList**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
