{
  "name": "StartChangeSet",
  "description": "<p>Allows you to request changes for your entities. Within a single <code>ChangeSet</code>, you can't start the same change type against the same entity multiple times. Additionally, when a <code>ChangeSet</code> is running, all the entities targeted by the different changes are locked until the change set has completed (either succeeded, cancelled, or failed). If you try to start a change set containing a change against an entity that is already locked, you will receive a <code>ResourceInUseException</code> error.</p> <p>For example, you can't start the <code>ChangeSet</code> described in the <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/API_StartChangeSet.html#API_StartChangeSet_Examples\">example</a> later in this topic because it contains two changes to run the same change type (<code>AddRevisions</code>) against the same entity (<code>entity-id@1</code>).</p> <p>For more information about working with change sets, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#working-with-change-sets\"> Working with change sets</a>. For information on change types for single-AMI products, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/ami-products.html#working-with-single-AMI-products\">Working with single-AMI products</a>. Als, for more information on change types available for container-based products, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/container-products.html#working-with-container-products\">Working with container products</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Catalog",
          "ChangeSet"
        ],
        "properties": {
          "Catalog": {
            "description": "The catalog related to the request. Fixed value: <code>AWSMarketplace</code> ",
            "type": "string",
            "pattern": "^[a-zA-Z]+$",
            "minLength": 1,
            "maxLength": 64
          },
          "ChangeSet": {
            "description": "Array of <code>change</code> object.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Change"
            },
            "minItems": 1,
            "maxItems": 20
          },
          "ChangeSetName": {
            "description": "Optional case sensitive string of up to 100 ASCII characters. The change set name can be used to filter the list of change sets. ",
            "type": "string",
            "pattern": "^[\\w\\s+=.:@-]+$",
            "minLength": 1,
            "maxLength": 100
          },
          "ClientRequestToken": {
            "description": "A unique token to identify the request to ensure idempotency.",
            "type": "string",
            "pattern": "^[!-~]+$",
            "minLength": 1,
            "maxLength": 64
          },
          "ChangeSetTags": {
            "description": "A list of objects specifying each key name and value for the <code>ChangeSetTags</code> property.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 1,
            "maxItems": 200
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Change": {
        "type": "object",
        "required": [
          "ChangeType",
          "Entity",
          "Details"
        ],
        "properties": {
          "ChangeType": {
            "allOf": [
              {
                "$ref": "#/$defs/ChangeType"
              },
              {
                "description": "Change types are single string values that describe your intention for the change. Each change type is unique for each <code>EntityType</code> provided in the change's scope. For more information on change types available for single-AMI products, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/ami-products.html#working-with-single-AMI-products\">Working with single-AMI products</a>. Also, for more information on change types available for container-based products, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/container-products.html#working-with-container-products\">Working with container products</a>."
              }
            ]
          },
          "Entity": {
            "allOf": [
              {
                "$ref": "#/$defs/Entity"
              },
              {
                "description": "The entity to be changed."
              }
            ]
          },
          "EntityTags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "The tags associated with the change."
              }
            ]
          },
          "Details": {
            "allOf": [
              {
                "$ref": "#/$defs/Json"
              },
              {
                "description": "This object contains details specific to the change type of the requested change. For more information on change types available for single-AMI products, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/ami-products.html#working-with-single-AMI-products\">Working with single-AMI products</a>. Also, for more information on change types available for container-based products, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/container-products.html#working-with-container-products\">Working with container products</a>."
              }
            ]
          },
          "ChangeName": {
            "allOf": [
              {
                "$ref": "#/$defs/ChangeName"
              },
              {
                "description": "Optional name for the change."
              }
            ]
          }
        },
        "description": "An object that contains the <code>ChangeType</code>, <code>Details</code>, and <code>Entity</code>."
      },
      "ChangeType": {
        "type": "string",
        "pattern": "^[A-Z][\\w]*$",
        "minLength": 1,
        "maxLength": 255
      },
      "Entity": {
        "type": "object",
        "required": [
          "Type"
        ],
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityType"
              },
              {
                "description": "The type of entity."
              }
            ]
          },
          "Identifier": {
            "allOf": [
              {
                "$ref": "#/$defs/Identifier"
              },
              {
                "description": "The identifier for the entity."
              }
            ]
          }
        },
        "description": "An entity contains data that describes your product, its supported features, and how it can be used or launched by your customer. "
      },
      "EntityType": {
        "type": "string",
        "pattern": "^[a-zA-Z]+$",
        "minLength": 1,
        "maxLength": 255
      },
      "Identifier": {
        "type": "string",
        "pattern": "^[\\w\\-@]+$",
        "minLength": 1,
        "maxLength": 255
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 1,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key associated with the tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value associated with the tag."
              }
            ]
          }
        },
        "description": "A list of objects specifying each key name and value."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      },
      "Json": {
        "type": "string",
        "pattern": "^[\\s]*\\{[\\s\\S]*\\}[\\s]*$",
        "minLength": 2,
        "maxLength": 16384
      },
      "ChangeName": {
        "type": "string",
        "pattern": "^[a-zA-Z]$",
        "minLength": 1,
        "maxLength": 72
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://catalog.marketplace.us-east-1.amazonaws.com/StartChangeSet"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ChangeSetId**",
            "**ChangeSetArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
