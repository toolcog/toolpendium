{
  "name": "CreateJob",
  "description": "This operation creates a job.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Details",
          "Type"
        ],
        "properties": {
          "Details": {
            "description": "The details for the request.",
            "type": "object",
            "properties": {
              "ExportAssetToSignedUrl": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExportAssetToSignedUrlRequestDetails"
                  },
                  {
                    "description": "Details about the export to signed URL request."
                  }
                ]
              },
              "ExportAssetsToS3": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExportAssetsToS3RequestDetails"
                  },
                  {
                    "description": "Details about the export to Amazon S3 request."
                  }
                ]
              },
              "ExportRevisionsToS3": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExportRevisionsToS3RequestDetails"
                  },
                  {
                    "description": "Details about the export to Amazon S3 request."
                  }
                ]
              },
              "ImportAssetFromSignedUrl": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ImportAssetFromSignedUrlRequestDetails"
                  },
                  {
                    "description": "Details about the import from Amazon S3 request."
                  }
                ]
              },
              "ImportAssetsFromS3": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ImportAssetsFromS3RequestDetails"
                  },
                  {
                    "description": "Details about the import asset from API Gateway API request."
                  }
                ]
              },
              "ImportAssetsFromRedshiftDataShares": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ImportAssetsFromRedshiftDataSharesRequestDetails"
                  },
                  {
                    "description": "Details from an import from Amazon Redshift datashare request."
                  }
                ]
              },
              "ImportAssetFromApiGatewayApi": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ImportAssetFromApiGatewayApiRequestDetails"
                  },
                  {
                    "description": "Details about the import from signed URL request."
                  }
                ]
              },
              "CreateS3DataAccessFromS3Bucket": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CreateS3DataAccessFromS3BucketRequestDetails"
                  },
                  {
                    "description": "Details of the request to create S3 data access from the Amazon S3 bucket."
                  }
                ]
              },
              "ImportAssetsFromLakeFormationTagPolicy": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ImportAssetsFromLakeFormationTagPolicyRequestDetails"
                  },
                  {
                    "description": "Request details for the ImportAssetsFromLakeFormationTagPolicy job."
                  }
                ]
              }
            }
          },
          "Type": {
            "description": "The type of job to be created.",
            "type": "string",
            "enum": [
              "IMPORT_ASSETS_FROM_S3",
              "IMPORT_ASSET_FROM_SIGNED_URL",
              "EXPORT_ASSETS_TO_S3",
              "EXPORT_ASSET_TO_SIGNED_URL",
              "EXPORT_REVISIONS_TO_S3",
              "IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES",
              "IMPORT_ASSET_FROM_API_GATEWAY_API",
              "CREATE_S3_DATA_ACCESS_FROM_S3_BUCKET",
              "IMPORT_ASSETS_FROM_LAKE_FORMATION_TAG_POLICY"
            ]
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ExportAssetToSignedUrlRequestDetails": {
        "type": "object",
        "required": [
          "AssetId",
          "DataSetId",
          "RevisionId"
        ],
        "properties": {
          "AssetId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the asset that is exported to a signed URL."
              }
            ]
          },
          "DataSetId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the data set associated with this export job."
              }
            ]
          },
          "RevisionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the revision associated with this export request."
              }
            ]
          }
        },
        "description": "Details of the operation to be performed by the job."
      },
      "Id": {
        "type": "string"
      },
      "ExportAssetsToS3RequestDetails": {
        "type": "object",
        "required": [
          "AssetDestinations",
          "DataSetId",
          "RevisionId"
        ],
        "properties": {
          "AssetDestinations": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfAssetDestinationEntry"
              },
              {
                "description": "The destination for the asset."
              }
            ]
          },
          "DataSetId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the data set associated with this export job."
              }
            ]
          },
          "Encryption": {
            "allOf": [
              {
                "$ref": "#/$defs/ExportServerSideEncryption"
              },
              {
                "description": "Encryption configuration for the export job."
              }
            ]
          },
          "RevisionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the revision associated with this export request."
              }
            ]
          }
        },
        "description": "Details of the operation to be performed by the job."
      },
      "ListOfAssetDestinationEntry": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AssetDestinationEntry"
        }
      },
      "AssetDestinationEntry": {
        "type": "object",
        "required": [
          "AssetId",
          "Bucket"
        ],
        "properties": {
          "AssetId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the asset."
              }
            ]
          },
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The Amazon S3 bucket that is the destination for the asset."
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The name of the object in Amazon S3 for the asset."
              }
            ]
          }
        },
        "description": "The destination for the asset."
      },
      "__string": {
        "type": "string"
      },
      "ExportServerSideEncryption": {
        "type": "object",
        "required": [
          "Type"
        ],
        "properties": {
          "KmsKeyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the AWS KMS key you want to use to encrypt the Amazon S3 objects. This parameter is required if you choose aws:kms as an encryption type."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerSideEncryptionTypes"
              },
              {
                "description": "The type of server side encryption used for encrypting the objects in Amazon S3."
              }
            ]
          }
        },
        "description": "Encryption configuration of the export job. Includes the encryption type in addition to the AWS KMS key. The KMS key is only necessary if you chose the KMS encryption type."
      },
      "ServerSideEncryptionTypes": {
        "type": "string",
        "enum": [
          "aws:kms",
          "AES256"
        ]
      },
      "ExportRevisionsToS3RequestDetails": {
        "type": "object",
        "required": [
          "DataSetId",
          "RevisionDestinations"
        ],
        "properties": {
          "DataSetId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the data set associated with this export job."
              }
            ]
          },
          "Encryption": {
            "allOf": [
              {
                "$ref": "#/$defs/ExportServerSideEncryption"
              },
              {
                "description": "Encryption configuration for the export job."
              }
            ]
          },
          "RevisionDestinations": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfRevisionDestinationEntry"
              },
              {
                "description": "The destination for the revision."
              }
            ]
          }
        },
        "description": "Details of the operation to be performed by the job."
      },
      "ListOfRevisionDestinationEntry": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RevisionDestinationEntry"
        }
      },
      "RevisionDestinationEntry": {
        "type": "object",
        "required": [
          "Bucket",
          "RevisionId"
        ],
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The Amazon S3 bucket that is the destination for the assets in the revision."
              }
            ]
          },
          "KeyPattern": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "A string representing the pattern for generated names of the individual assets in the revision. For more information about key patterns, see <a href=\"https://docs.aws.amazon.com/data-exchange/latest/userguide/jobs.html#revision-export-keypatterns\">Key patterns when exporting revisions</a>."
              }
            ]
          },
          "RevisionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the revision."
              }
            ]
          }
        },
        "description": "The destination where the assets in the revision will be exported."
      },
      "ImportAssetFromSignedUrlRequestDetails": {
        "type": "object",
        "required": [
          "AssetName",
          "DataSetId",
          "Md5Hash",
          "RevisionId"
        ],
        "properties": {
          "AssetName": {
            "allOf": [
              {
                "$ref": "#/$defs/AssetName"
              },
              {
                "description": "The name of the asset. When importing from Amazon S3, the Amazon S3 object key is used as the asset name."
              }
            ]
          },
          "DataSetId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the data set associated with this import job."
              }
            ]
          },
          "Md5Hash": {
            "allOf": [
              {
                "$ref": "#/$defs/__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093"
              },
              {
                "description": "The Base64-encoded Md5 hash for the asset, used to ensure the integrity of the file at that location."
              }
            ]
          },
          "RevisionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the revision associated with this import request."
              }
            ]
          }
        },
        "description": "Details of the operation to be performed by the job."
      },
      "AssetName": {
        "type": "string"
      },
      "__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093": {
        "type": "string",
        "pattern": "(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?",
        "minLength": 24,
        "maxLength": 24
      },
      "ImportAssetsFromS3RequestDetails": {
        "type": "object",
        "required": [
          "AssetSources",
          "DataSetId",
          "RevisionId"
        ],
        "properties": {
          "AssetSources": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfAssetSourceEntry"
              },
              {
                "description": "Is a list of Amazon S3 bucket and object key pairs."
              }
            ]
          },
          "DataSetId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the data set associated with this import job."
              }
            ]
          },
          "RevisionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the revision associated with this import request."
              }
            ]
          }
        },
        "description": "Details of the operation to be performed by the job."
      },
      "ListOfAssetSourceEntry": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AssetSourceEntry"
        }
      },
      "AssetSourceEntry": {
        "type": "object",
        "required": [
          "Bucket",
          "Key"
        ],
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The Amazon S3 bucket that's part of the source of the asset."
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The name of the object in Amazon S3 for the asset."
              }
            ]
          }
        },
        "description": "The source of the assets."
      },
      "ImportAssetsFromRedshiftDataSharesRequestDetails": {
        "type": "object",
        "required": [
          "AssetSources",
          "DataSetId",
          "RevisionId"
        ],
        "properties": {
          "AssetSources": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfRedshiftDataShareAssetSourceEntry"
              },
              {
                "description": "A list of Amazon Redshift datashare assets."
              }
            ]
          },
          "DataSetId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the data set associated with this import job."
              }
            ]
          },
          "RevisionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the revision associated with this import job."
              }
            ]
          }
        },
        "description": "Details from an import from Amazon Redshift datashare request."
      },
      "ListOfRedshiftDataShareAssetSourceEntry": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RedshiftDataShareAssetSourceEntry"
        }
      },
      "RedshiftDataShareAssetSourceEntry": {
        "type": "object",
        "required": [
          "DataShareArn"
        ],
        "properties": {
          "DataShareArn": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the datashare asset."
              }
            ]
          }
        },
        "description": "The source of the Amazon Redshift datashare asset."
      },
      "ImportAssetFromApiGatewayApiRequestDetails": {
        "type": "object",
        "required": [
          "ApiId",
          "ApiName",
          "ApiSpecificationMd5Hash",
          "DataSetId",
          "ProtocolType",
          "RevisionId",
          "Stage"
        ],
        "properties": {
          "ApiDescription": {
            "allOf": [
              {
                "$ref": "#/$defs/ApiDescription"
              },
              {
                "description": "The API description. Markdown supported."
              }
            ]
          },
          "ApiId": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The API Gateway API ID."
              }
            ]
          },
          "ApiKey": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The API Gateway API key."
              }
            ]
          },
          "ApiName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The API name."
              }
            ]
          },
          "ApiSpecificationMd5Hash": {
            "allOf": [
              {
                "$ref": "#/$defs/__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093"
              },
              {
                "description": "The Base64-encoded MD5 hash of the OpenAPI 3.0 JSON API specification file. It is used to ensure the integrity of the file."
              }
            ]
          },
          "DataSetId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The data set ID."
              }
            ]
          },
          "ProtocolType": {
            "allOf": [
              {
                "$ref": "#/$defs/ProtocolType"
              },
              {
                "description": "The protocol type."
              }
            ]
          },
          "RevisionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The revision ID."
              }
            ]
          },
          "Stage": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The API stage."
              }
            ]
          }
        },
        "description": "The request details."
      },
      "ApiDescription": {
        "type": "string"
      },
      "ProtocolType": {
        "type": "string",
        "enum": [
          "REST"
        ]
      },
      "CreateS3DataAccessFromS3BucketRequestDetails": {
        "type": "object",
        "required": [
          "AssetSource",
          "DataSetId",
          "RevisionId"
        ],
        "properties": {
          "AssetSource": {
            "allOf": [
              {
                "$ref": "#/$defs/S3DataAccessAssetSourceEntry"
              },
              {
                "description": "Details about the S3 data access source asset."
              }
            ]
          },
          "DataSetId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the data set associated with the creation of this Amazon S3 data access."
              }
            ]
          },
          "RevisionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for a revision."
              }
            ]
          }
        },
        "description": "Details of the operation to create an Amazon S3 data access from an S3 bucket."
      },
      "S3DataAccessAssetSourceEntry": {
        "type": "object",
        "required": [
          "Bucket"
        ],
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The Amazon S3 bucket used for hosting shared data in the Amazon S3 data access."
              }
            ]
          },
          "KeyPrefixes": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOf__string"
              },
              {
                "description": "Organizes Amazon S3 asset key prefixes stored in an Amazon S3 bucket."
              }
            ]
          },
          "Keys": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOf__string"
              },
              {
                "description": "The keys used to create the Amazon S3 data access."
              }
            ]
          },
          "KmsKeysToGrant": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfKmsKeysToGrant"
              },
              {
                "description": "List of AWS KMS CMKs (Key Management System Customer Managed Keys) and ARNs used to encrypt S3 objects being shared in this S3 Data Access asset."
              }
            ]
          }
        },
        "description": "Source details for an Amazon S3 data access asset."
      },
      "ListOf__string": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/__string"
        }
      },
      "ListOfKmsKeysToGrant": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/KmsKeyToGrant"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "KmsKeyToGrant": {
        "type": "object",
        "required": [
          "KmsKeyArn"
        ],
        "properties": {
          "KmsKeyArn": {
            "allOf": [
              {
                "$ref": "#/$defs/KmsKeyArn"
              },
              {
                "description": "The AWS KMS CMK (Key Management System Customer Managed Key) used to encrypt S3 objects in the shared S3 Bucket. AWS Data exchange will create a KMS grant for each subscriber to allow them to access and decrypt their entitled data that is encrypted using this KMS key specified."
              }
            ]
          }
        },
        "description": "The Amazon Resource Name (ARN) of the AWS KMS key used to encrypt the shared S3 objects."
      },
      "KmsKeyArn": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "ImportAssetsFromLakeFormationTagPolicyRequestDetails": {
        "type": "object",
        "required": [
          "CatalogId",
          "RoleArn",
          "DataSetId",
          "RevisionId"
        ],
        "properties": {
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/AwsAccountId"
              },
              {
                "description": "The identifier for the AWS Glue Data Catalog."
              }
            ]
          },
          "Database": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseLFTagPolicyAndPermissions"
              },
              {
                "description": "A structure for the database object."
              }
            ]
          },
          "Table": {
            "allOf": [
              {
                "$ref": "#/$defs/TableLFTagPolicyAndPermissions"
              },
              {
                "description": "A structure for the table object."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The IAM role's ARN that allows AWS Data Exchange to assume the role and grant and revoke permissions of subscribers to AWS Lake Formation data permissions."
              }
            ]
          },
          "DataSetId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the data set associated with this import job."
              }
            ]
          },
          "RevisionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Id"
              },
              {
                "description": "The unique identifier for the revision associated with this import job."
              }
            ]
          }
        },
        "description": "Details about the assets imported from an AWS Lake Formation tag policy request."
      },
      "AwsAccountId": {
        "type": "string",
        "pattern": ".*/^[\\d]{12}$/.*",
        "minLength": 12,
        "maxLength": 12
      },
      "DatabaseLFTagPolicyAndPermissions": {
        "type": "object",
        "required": [
          "Expression",
          "Permissions"
        ],
        "properties": {
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfLFTags"
              },
              {
                "description": "A list of LF-tag conditions that apply to database resources."
              }
            ]
          },
          "Permissions": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfDatabaseLFTagPolicyPermissions"
              },
              {
                "description": "The permissions granted to subscribers on database resources."
              }
            ]
          }
        },
        "description": "The LF-tag policy and permissions for database resources."
      },
      "ListOfLFTags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LFTag"
        }
      },
      "LFTag": {
        "type": "object",
        "required": [
          "TagKey",
          "TagValues"
        ],
        "properties": {
          "TagKey": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The key name for the LF-tag."
              }
            ]
          },
          "TagValues": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfLFTagValues"
              },
              {
                "description": "A list of LF-tag values."
              }
            ]
          }
        },
        "description": "A structure that allows an LF-admin to grant permissions on certain conditions."
      },
      "String": {
        "type": "string"
      },
      "ListOfLFTagValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "ListOfDatabaseLFTagPolicyPermissions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DatabaseLFTagPolicyPermission"
        }
      },
      "DatabaseLFTagPolicyPermission": {
        "type": "string",
        "enum": [
          "DESCRIBE"
        ]
      },
      "TableLFTagPolicyAndPermissions": {
        "type": "object",
        "required": [
          "Expression",
          "Permissions"
        ],
        "properties": {
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfLFTags"
              },
              {
                "description": "A list of LF-tag conditions that apply to table resources."
              }
            ]
          },
          "Permissions": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfTableTagPolicyLFPermissions"
              },
              {
                "description": "The permissions granted to subscribers on table resources."
              }
            ]
          }
        },
        "description": "The LF-tag policy and permissions that apply to table resources."
      },
      "ListOfTableTagPolicyLFPermissions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TableTagPolicyLFPermission"
        }
      },
      "TableTagPolicyLFPermission": {
        "type": "string",
        "enum": [
          "DESCRIBE",
          "SELECT"
        ]
      },
      "RoleArn": {
        "type": "string",
        "pattern": "arn:aws:iam::(\\d{12}):role\\/.+"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://dataexchange.us-east-1.amazonaws.com/v1/jobs"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Arn**",
            "**CreatedAt**",
            "**Details**",
            "**Errors**",
            "**Id**",
            "**State**",
            "**Type**",
            "**UpdatedAt**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
