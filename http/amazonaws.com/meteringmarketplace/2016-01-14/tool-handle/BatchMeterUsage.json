{
  "name": "BatchMeterUsage",
  "description": "<p> <code>BatchMeterUsage</code> is called from a SaaS application listed on AWS Marketplace to post metering records for a set of customers.</p> <p>For identical requests, the API is idempotent; requests can be retried with the same records or a subset of the input records.</p> <p>Every request to <code>BatchMeterUsage</code> is for one product. If you need to meter usage for multiple products, you must make multiple calls to <code>BatchMeterUsage</code>.</p> <p>Usage records are expected to be submitted as quickly as possible after the event that is being recorded, and are not accepted more than 6 hours after the event.</p> <p> <code>BatchMeterUsage</code> can process up to 25 <code>UsageRecords</code> at a time.</p> <p>A <code>UsageRecord</code> can optionally include multiple usage allocations, to provide customers with usage data split into buckets by tags that you define (or allow the customer to define).</p> <p> <code>BatchMeterUsage</code> returns a list of <code>UsageRecordResult</code> objects, showing the result for each <code>UsageRecord</code>, as well as a list of <code>UnprocessedRecords</code>, indicating errors in the service side that you should retry.</p> <p> <code>BatchMeterUsage</code> requests must be less than 1MB in size.</p> <note> <p>For an example of using <code>BatchMeterUsage</code>, see <a href=\"https://docs.aws.amazon.com/marketplace/latest/userguide/saas-code-examples.html#saas-batchmeterusage-example\"> BatchMeterUsage code example</a> in the <i>AWS Marketplace Seller Guide</i>.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSMPMeteringService.BatchMeterUsage"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/BatchMeterUsageRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "BatchMeterUsageRequest": {
        "type": "object",
        "required": [
          "UsageRecords",
          "ProductCode"
        ],
        "title": "BatchMeterUsageRequest",
        "properties": {
          "UsageRecords": {
            "allOf": [
              {
                "$ref": "#/$defs/UsageRecordList"
              },
              {
                "description": "The set of <code>UsageRecords</code> to submit. <code>BatchMeterUsage</code> accepts up to 25 <code>UsageRecords</code> at a time."
              }
            ]
          },
          "ProductCode": {
            "allOf": [
              {
                "$ref": "#/$defs/ProductCode"
              },
              {
                "description": "Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product."
              }
            ]
          }
        },
        "description": "A <code>BatchMeterUsageRequest</code> contains <code>UsageRecords</code>, which indicate quantities of usage within your application."
      },
      "UsageRecordList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/UsageRecord"
        },
        "minItems": 0,
        "maxItems": 25
      },
      "UsageRecord": {
        "type": "object",
        "required": [
          "Timestamp",
          "CustomerIdentifier",
          "Dimension"
        ],
        "properties": {
          "Timestamp": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "<p>Timestamp, in UTC, for which the usage is being reported.</p> <p>Your application can meter usage for up to one hour in the past. Make sure the <code>timestamp</code> value is not before the start of the software usage.</p>"
              }
            ]
          },
          "CustomerIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomerIdentifier"
              },
              {
                "description": "The <code>CustomerIdentifier</code> is obtained through the <code>ResolveCustomer</code> operation and represents an individual buyer in your application."
              }
            ]
          },
          "Dimension": {
            "allOf": [
              {
                "$ref": "#/$defs/UsageDimension"
              },
              {
                "description": "During the process of registering a product on AWS Marketplace, dimensions are specified. These represent different units of value in your application."
              }
            ]
          },
          "Quantity": {
            "allOf": [
              {
                "$ref": "#/$defs/UsageQuantity"
              },
              {
                "description": "The quantity of usage consumed by the customer for the given dimension and time. Defaults to <code>0</code> if not specified."
              }
            ]
          },
          "UsageAllocations": {
            "allOf": [
              {
                "$ref": "#/$defs/UsageAllocations"
              },
              {
                "description": "The set of <code>UsageAllocations</code> to submit. The sum of all <code>UsageAllocation</code> quantities must equal the Quantity of the <code>UsageRecord</code>."
              }
            ]
          }
        },
        "description": "<p>A <code>UsageRecord</code> indicates a quantity of usage for a given product, customer, dimension and time.</p> <p>Multiple requests with the same <code>UsageRecords</code> as input will be de-duplicated to prevent double charges.</p>"
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "CustomerIdentifier": {
        "type": "string",
        "pattern": "[\\s\\S]+",
        "minLength": 1,
        "maxLength": 255
      },
      "UsageDimension": {
        "type": "string",
        "pattern": "[\\s\\S]+",
        "minLength": 1,
        "maxLength": 255
      },
      "UsageQuantity": {
        "type": "integer",
        "minimum": 0,
        "maximum": 2147483647
      },
      "UsageAllocations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/UsageAllocation"
        },
        "minItems": 1,
        "maxItems": 2500
      },
      "UsageAllocation": {
        "type": "object",
        "required": [
          "AllocatedUsageQuantity"
        ],
        "properties": {
          "AllocatedUsageQuantity": {
            "allOf": [
              {
                "$ref": "#/$defs/AllocatedUsageQuantity"
              },
              {
                "description": "The total quantity allocated to this bucket of usage."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "The set of tags that define the bucket of usage. For the bucket of items with no tags, this parameter can be left out."
              }
            ]
          }
        },
        "description": "<p>Usage allocations allow you to split usage into buckets by tags.</p> <p>Each <code>UsageAllocation</code> indicates the usage quantity for a specific set of tags.</p>"
      },
      "AllocatedUsageQuantity": {
        "type": "integer",
        "minimum": 0,
        "maximum": 2147483647
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "One part of a key-value pair that makes up a <code>tag</code>. A <code>key</code> is a label that acts like a category for the specific tag values."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "One part of a key-value pair that makes up a <code>tag</code>. A <code>value</code> acts as a descriptor within a tag category (key). The value can be empty or null."
              }
            ]
          }
        },
        "description": "Metadata assigned to an allocation. Each tag is made up of a <code>key</code> and a <code>value</code>."
      },
      "TagKey": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9+ -=._:\\/@]+$",
        "minLength": 1,
        "maxLength": 100
      },
      "TagValue": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9+ -=._:\\/@]+$",
        "minLength": 1,
        "maxLength": 256
      },
      "ProductCode": {
        "type": "string",
        "pattern": "^[-a-zA-Z0-9/=:_.@]*$",
        "minLength": 1,
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://metering.marketplace.us-east-1.amazonaws.com/#X-Amz-Target=AWSMPMeteringService.BatchMeterUsage"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains the <code>UsageRecords</code> processed by <code>BatchMeterUsage</code> and any records that have failed due to transient error.",
        "**Key properties:**",
        {
          "$ul": [
            "**Results**",
            "**UnprocessedRecords**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
