{
  "name": "SearchRoutingProfiles",
  "description": "Searches routing profiles in an Amazon Connect instance, with optional filtering.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "InstanceId"
        ],
        "properties": {
          "InstanceId": {
            "description": "The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "NextToken": {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2500
          },
          "MaxResults": {
            "description": "The maximum number of results to return per page.",
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "SearchFilter": {
            "description": "Filters to be applied to search results.",
            "type": "object",
            "properties": {
              "TagFilter": {
                "$ref": "#/$defs/ControlPlaneTagFilter"
              }
            }
          },
          "SearchCriteria": {
            "description": "<p>The search criteria to be used to return routing profiles.</p> <note> <p>The <code>name</code> and <code>description</code> fields support \"contains\" queries with a minimum of 2 characters and a maximum of 25 characters. Any queries with character lengths outside of this range will throw invalid results. </p> </note>",
            "type": "object",
            "properties": {
              "OrConditions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RoutingProfileSearchConditionList"
                  },
                  {
                    "description": "A list of conditions which would be applied together with an OR condition."
                  }
                ]
              },
              "AndConditions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RoutingProfileSearchConditionList"
                  },
                  {
                    "description": "A list of conditions which would be applied together with an AND condition."
                  }
                ]
              },
              "StringCondition": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringCondition"
                  },
                  {
                    "description": "<p>A leaf node condition which can be used to specify a string condition.</p> <note> <p>The currently supported values for <code>FieldName</code> are <code>name</code>, <code>description</code>, and <code>resourceID</code>.</p> </note>"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ControlPlaneTagFilter": {
        "type": "object",
        "properties": {
          "OrConditions": {
            "allOf": [
              {
                "$ref": "#/$defs/TagOrConditionList"
              },
              {
                "description": "A list of conditions which would be applied together with an <code>OR</code> condition. "
              }
            ]
          },
          "AndConditions": {
            "allOf": [
              {
                "$ref": "#/$defs/TagAndConditionList"
              },
              {
                "description": "A list of conditions which would be applied together with an <code>AND</code> condition."
              }
            ]
          },
          "TagCondition": {
            "allOf": [
              {
                "$ref": "#/$defs/TagCondition"
              },
              {
                "description": "A leaf node condition which can be used to specify a tag condition. "
              }
            ]
          }
        },
        "description": "<p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>"
      },
      "TagOrConditionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TagAndConditionList"
        }
      },
      "TagAndConditionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TagCondition"
        }
      },
      "TagCondition": {
        "type": "object",
        "properties": {
          "TagKey": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The tag key in the tag condition."
              }
            ]
          },
          "TagValue": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The tag value in the tag condition."
              }
            ]
          }
        },
        "description": "A leaf node condition which can be used to specify a tag condition, for example, <code>HAVE BPO = 123</code>. "
      },
      "String": {
        "type": "string"
      },
      "RoutingProfileSearchConditionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RoutingProfileSearchCriteria"
        }
      },
      "RoutingProfileSearchCriteria": {
        "type": "object",
        "properties": {
          "OrConditions": {
            "allOf": [
              {
                "$ref": "#/$defs/RoutingProfileSearchConditionList"
              },
              {
                "description": "A list of conditions which would be applied together with an OR condition."
              }
            ]
          },
          "AndConditions": {
            "allOf": [
              {
                "$ref": "#/$defs/RoutingProfileSearchConditionList"
              },
              {
                "description": "A list of conditions which would be applied together with an AND condition."
              }
            ]
          },
          "StringCondition": {
            "allOf": [
              {
                "$ref": "#/$defs/StringCondition"
              },
              {
                "description": "<p>A leaf node condition which can be used to specify a string condition.</p> <note> <p>The currently supported values for <code>FieldName</code> are <code>name</code>, <code>description</code>, and <code>resourceID</code>.</p> </note>"
              }
            ]
          }
        },
        "description": "<p>The search criteria to be used to return routing profiles.</p> <note> <p>The <code>name</code> and <code>description</code> fields support \"contains\" queries with a minimum of 2 characters and a maximum of 25 characters. Any queries with character lengths outside of this range will throw invalid results. </p> </note>"
      },
      "StringCondition": {
        "type": "object",
        "properties": {
          "FieldName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the field in the string condition."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value of the string."
              }
            ]
          },
          "ComparisonType": {
            "allOf": [
              {
                "$ref": "#/$defs/StringComparisonType"
              },
              {
                "description": "The type of comparison to be made when evaluating the string condition."
              }
            ]
          }
        },
        "description": "A leaf node condition which can be used to specify a string condition. "
      },
      "StringComparisonType": {
        "type": "string",
        "enum": [
          "STARTS_WITH",
          "CONTAINS",
          "EXACT"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://connect.us-east-1.amazonaws.com/search-routing-profiles{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**RoutingProfiles**",
            "**NextToken**",
            "**ApproximateTotalCount**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
