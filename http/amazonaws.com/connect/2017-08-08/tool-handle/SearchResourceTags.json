{
  "name": "SearchResourceTags",
  "description": "Searches tags used in an Amazon Connect instance using optional search criteria.",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "InstanceId"
        ],
        "properties": {
          "InstanceId": {
            "description": "The identifier of the Amazon Connect instance. You can find the instanceId in the Amazon Resource Name (ARN) of the instance.",
            "type": "string",
            "pattern": "^(arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
            "minLength": 1,
            "maxLength": 250
          },
          "ResourceTypes": {
            "description": "The list of resource types to be used to search tags from. If not provided or if any empty list is provided, this API will search from all supported resource types.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/String"
            }
          },
          "NextToken": {
            "description": "The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2500
          },
          "MaxResults": {
            "description": "The maximum number of results to return per page.",
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "SearchCriteria": {
            "description": "The search criteria to be used to search tags.",
            "type": "object",
            "properties": {
              "TagSearchCondition": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TagSearchCondition"
                  },
                  {
                    "description": "The search criteria to be used to return tags."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "String": {
        "type": "string"
      },
      "TagSearchCondition": {
        "type": "object",
        "properties": {
          "tagKey": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKeyString"
              },
              {
                "description": "The tag key used in the tag search condition."
              }
            ]
          },
          "tagValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValueString"
              },
              {
                "description": "The tag value used in the tag search condition."
              }
            ]
          },
          "tagKeyComparisonType": {
            "allOf": [
              {
                "$ref": "#/$defs/StringComparisonType"
              },
              {
                "description": "The type of comparison to be made when evaluating the tag key in tag search condition."
              }
            ]
          },
          "tagValueComparisonType": {
            "allOf": [
              {
                "$ref": "#/$defs/StringComparisonType"
              },
              {
                "description": "The type of comparison to be made when evaluating the tag value in tag search condition."
              }
            ]
          }
        },
        "description": "The search criteria to be used to return tags."
      },
      "TagKeyString": {
        "type": "string",
        "maxLength": 128
      },
      "TagValueString": {
        "type": "string",
        "maxLength": 256
      },
      "StringComparisonType": {
        "type": "string",
        "enum": [
          "STARTS_WITH",
          "CONTAINS",
          "EXACT"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://connect.us-east-1.amazonaws.com/search-resource-tags{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Tags**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
