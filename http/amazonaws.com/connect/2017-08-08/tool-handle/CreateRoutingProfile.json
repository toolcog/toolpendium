{
  "name": "CreateRoutingProfile",
  "description": "Creates a new routing profile.",
  "parameters": {
    "type": "object",
    "properties": {
      "InstanceId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "description": "The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Name",
          "Description",
          "DefaultOutboundQueueId",
          "MediaConcurrencies"
        ],
        "properties": {
          "Name": {
            "description": "The name of the routing profile. Must not be more than 127 characters.",
            "type": "string",
            "minLength": 1,
            "maxLength": 127
          },
          "Description": {
            "description": "Description of the routing profile. Must not be more than 250 characters.",
            "type": "string",
            "minLength": 1,
            "maxLength": 250
          },
          "DefaultOutboundQueueId": {
            "description": "The default outbound queue for the routing profile.",
            "type": "string"
          },
          "QueueConfigs": {
            "description": "<p>The inbound queues associated with the routing profile. If no queue is added, the agent can make only outbound calls.</p> <p>The limit of 10 array members applies to the maximum number of <code>RoutingProfileQueueConfig</code> objects that can be passed during a CreateRoutingProfile API request. It is different from the quota of 50 queues per routing profile per instance that is listed in <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect service quotas</a>. </p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/RoutingProfileQueueConfig"
            },
            "minItems": 1,
            "maxItems": 10
          },
          "MediaConcurrencies": {
            "description": "The channels that agents can handle in the Contact Control Panel (CCP) for this routing profile.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/MediaConcurrency"
            }
          },
          "Tags": {
            "description": "The tags used to organize, track, or control access for this resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }.",
            "type": "object",
            "minProperties": 1,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "AgentAvailabilityTimer": {
            "description": "Whether agents with this routing profile will have their routing order calculated based on <i>time since their last inbound contact</i> or <i>longest idle time</i>. ",
            "type": "string",
            "enum": [
              "TIME_SINCE_LAST_ACTIVITY",
              "TIME_SINCE_LAST_INBOUND"
            ]
          }
        }
      }
    },
    "required": [
      "InstanceId",
      "body"
    ],
    "$defs": {
      "RoutingProfileQueueConfig": {
        "type": "object",
        "required": [
          "QueueReference",
          "Priority",
          "Delay"
        ],
        "properties": {
          "QueueReference": {
            "allOf": [
              {
                "$ref": "#/$defs/RoutingProfileQueueReference"
              },
              {
                "description": "Contains information about a queue resource."
              }
            ]
          },
          "Priority": {
            "allOf": [
              {
                "$ref": "#/$defs/Priority"
              },
              {
                "description": "The order in which contacts are to be handled for the queue. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html\">Queues: priority and delay</a>."
              }
            ]
          },
          "Delay": {
            "allOf": [
              {
                "$ref": "#/$defs/Delay"
              },
              {
                "description": "The delay, in seconds, a contact should be in the queue before they are routed to an available agent. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html\">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>."
              }
            ]
          }
        },
        "description": "Contains information about the queue and channel for which priority and delay can be set."
      },
      "RoutingProfileQueueReference": {
        "type": "object",
        "required": [
          "QueueId",
          "Channel"
        ],
        "properties": {
          "QueueId": {
            "allOf": [
              {
                "$ref": "#/$defs/QueueId"
              },
              {
                "description": "The identifier for the queue."
              }
            ]
          },
          "Channel": {
            "allOf": [
              {
                "$ref": "#/$defs/Channel"
              },
              {
                "description": "The channels agents can handle in the Contact Control Panel (CCP) for this routing profile."
              }
            ]
          }
        },
        "description": "Contains the channel and queue identifier for a routing profile."
      },
      "QueueId": {
        "type": "string"
      },
      "Channel": {
        "type": "string",
        "enum": [
          "VOICE",
          "CHAT",
          "TASK"
        ]
      },
      "Priority": {
        "type": "integer",
        "minimum": 1,
        "maximum": 99
      },
      "Delay": {
        "type": "integer",
        "minimum": 0,
        "maximum": 9999
      },
      "MediaConcurrency": {
        "type": "object",
        "required": [
          "Channel",
          "Concurrency"
        ],
        "properties": {
          "Channel": {
            "allOf": [
              {
                "$ref": "#/$defs/Channel"
              },
              {
                "description": "The channels that agents can handle in the Contact Control Panel (CCP)."
              }
            ]
          },
          "Concurrency": {
            "allOf": [
              {
                "$ref": "#/$defs/Concurrency"
              },
              {
                "description": "<p>The number of contacts an agent can have on a channel simultaneously.</p> <p>Valid Range for <code>VOICE</code>: Minimum value of 1. Maximum value of 1.</p> <p>Valid Range for <code>CHAT</code>: Minimum value of 1. Maximum value of 10.</p> <p>Valid Range for <code>TASK</code>: Minimum value of 1. Maximum value of 10.</p>"
              }
            ]
          },
          "CrossChannelBehavior": {
            "allOf": [
              {
                "$ref": "#/$defs/CrossChannelBehavior"
              },
              {
                "description": "Defines the cross-channel routing behavior for each channel that is enabled for this Routing Profile. For example, this allows you to offer an agent a different contact from another channel when they are currently working with a contact from a Voice channel."
              }
            ]
          }
        },
        "description": "Contains information about which channels are supported, and how many contacts an agent can have on a channel simultaneously."
      },
      "Concurrency": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10
      },
      "CrossChannelBehavior": {
        "type": "object",
        "required": [
          "BehaviorType"
        ],
        "properties": {
          "BehaviorType": {
            "allOf": [
              {
                "$ref": "#/$defs/BehaviorType"
              },
              {
                "description": "Specifies the other channels that can be routed to an agent handling their current channel."
              }
            ]
          }
        },
        "description": "Defines the cross-channel routing behavior that allows an agent working on a contact in one channel to be offered a contact from a different channel."
      },
      "BehaviorType": {
        "type": "string",
        "enum": [
          "ROUTE_CURRENT_CHANNEL_ONLY",
          "ROUTE_ANY_CHANNEL"
        ]
      },
      "TagValue": {
        "type": "string",
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://connect.us-east-1.amazonaws.com/routing-profiles/{InstanceId}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**RoutingProfileArn**",
            "**RoutingProfileId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
