{
  "name": "CreateEvaluationForm",
  "description": "Creates an evaluation form in the specified Amazon Connect instance. The form can be used to define questions related to agent performance, and create sections to organize such questions. Question and section identifiers cannot be duplicated within the same evaluation form.",
  "parameters": {
    "type": "object",
    "properties": {
      "InstanceId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "description": "The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Title",
          "Items"
        ],
        "properties": {
          "Title": {
            "description": "A title of the evaluation form.",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "Description": {
            "description": "The description of the evaluation form.",
            "type": "string",
            "minLength": 0,
            "maxLength": 1024
          },
          "Items": {
            "description": "Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/EvaluationFormItem"
            },
            "minItems": 1,
            "maxItems": 100
          },
          "ScoringStrategy": {
            "description": "Information about scoring strategy for an evaluation form.",
            "type": "object",
            "properties": {
              "Mode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EvaluationFormScoringMode"
                  },
                  {
                    "description": "The scoring mode of the evaluation form."
                  }
                ]
              },
              "Status": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EvaluationFormScoringStatus"
                  },
                  {
                    "description": "The scoring status of the evaluation form."
                  }
                ]
              }
            }
          },
          "ClientToken": {
            "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\">Making retries safe with idempotent APIs</a>.",
            "type": "string",
            "maxLength": 500
          }
        }
      }
    },
    "required": [
      "InstanceId",
      "body"
    ],
    "$defs": {
      "EvaluationFormItem": {
        "type": "object",
        "properties": {
          "Section": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormSection"
              },
              {
                "description": "The information of the section."
              }
            ]
          },
          "Question": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormQuestion"
              },
              {
                "description": "The information of the question."
              }
            ]
          }
        },
        "description": "Information about an item from an evaluation form. The item must be either a section or a question."
      },
      "EvaluationFormSection": {
        "type": "object",
        "required": [
          "Title",
          "RefId",
          "Items"
        ],
        "properties": {
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormSectionTitle"
              },
              {
                "description": "The title of the section."
              }
            ]
          },
          "RefId": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceId"
              },
              {
                "description": "The identifier of the section. An identifier must be unique within the evaluation form."
              }
            ]
          },
          "Instructions": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormQuestionInstructions"
              },
              {
                "description": "The instructions of the section."
              }
            ]
          },
          "Items": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormItemsList"
              },
              {
                "description": "The items of the section."
              }
            ]
          },
          "Weight": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormItemWeight"
              },
              {
                "description": "The scoring weight of the section."
              }
            ]
          }
        },
        "description": "Information about a section from an evaluation form. A section can contain sections and/or questions. Evaluation forms can only contain sections and subsections (two level nesting)."
      },
      "EvaluationFormSectionTitle": {
        "type": "string",
        "minLength": 0,
        "maxLength": 128
      },
      "ReferenceId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 40
      },
      "EvaluationFormQuestionInstructions": {
        "type": "string",
        "minLength": 0,
        "maxLength": 1024
      },
      "EvaluationFormItemsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EvaluationFormItem"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "EvaluationFormItemWeight": {
        "type": "number",
        "format": "double",
        "minimum": 0,
        "maximum": 100
      },
      "EvaluationFormQuestion": {
        "type": "object",
        "required": [
          "Title",
          "RefId",
          "QuestionType"
        ],
        "properties": {
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormQuestionTitle"
              },
              {
                "description": "The title of the question."
              }
            ]
          },
          "Instructions": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormQuestionInstructions"
              },
              {
                "description": "The instructions of the section."
              }
            ]
          },
          "RefId": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceId"
              },
              {
                "description": "The identifier of the question. An identifier must be unique within the evaluation form."
              }
            ]
          },
          "NotApplicableEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "The flag to enable not applicable answers to the question."
              }
            ]
          },
          "QuestionType": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormQuestionType"
              },
              {
                "description": "The type of the question."
              }
            ]
          },
          "QuestionTypeProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormQuestionTypeProperties"
              },
              {
                "description": "The properties of the type of question. Text questions do not have to define question type properties."
              }
            ]
          },
          "Weight": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormItemWeight"
              },
              {
                "description": "The scoring weight of the section."
              }
            ]
          }
        },
        "description": "Information about a question from an evaluation form."
      },
      "EvaluationFormQuestionTitle": {
        "type": "string",
        "minLength": 0,
        "maxLength": 350
      },
      "Boolean": {
        "type": "boolean"
      },
      "EvaluationFormQuestionType": {
        "type": "string",
        "enum": [
          "TEXT",
          "SINGLESELECT",
          "NUMERIC"
        ]
      },
      "EvaluationFormQuestionTypeProperties": {
        "type": "object",
        "properties": {
          "Numeric": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormNumericQuestionProperties"
              },
              {
                "description": "The properties of the numeric question."
              }
            ]
          },
          "SingleSelect": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormSingleSelectQuestionProperties"
              },
              {
                "description": "The properties of the numeric question."
              }
            ]
          }
        },
        "description": "Information about properties for a question in an evaluation form. The question type properties must be either for a numeric question or a single select question."
      },
      "EvaluationFormNumericQuestionProperties": {
        "type": "object",
        "required": [
          "MinValue",
          "MaxValue"
        ],
        "properties": {
          "MinValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The minimum answer value."
              }
            ]
          },
          "MaxValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum answer value."
              }
            ]
          },
          "Options": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormNumericQuestionOptionList"
              },
              {
                "description": "The scoring options of the numeric question."
              }
            ]
          },
          "Automation": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormNumericQuestionAutomation"
              },
              {
                "description": "The automation properties of the numeric question."
              }
            ]
          }
        },
        "description": "Information about properties for a numeric question in an evaluation form."
      },
      "Integer": {
        "type": "integer"
      },
      "EvaluationFormNumericQuestionOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EvaluationFormNumericQuestionOption"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "EvaluationFormNumericQuestionOption": {
        "type": "object",
        "required": [
          "MinValue",
          "MaxValue"
        ],
        "properties": {
          "MinValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The minimum answer value of the range option."
              }
            ]
          },
          "MaxValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum answer value of the range option."
              }
            ]
          },
          "Score": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormQuestionAnswerScore"
              },
              {
                "description": "The score assigned to answer values within the range option."
              }
            ]
          },
          "AutomaticFail": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "The flag to mark the option as automatic fail. If an automatic fail answer is provided, the overall evaluation gets a score of 0."
              }
            ]
          }
        },
        "description": "Information about the option range used for scoring in numeric questions."
      },
      "EvaluationFormQuestionAnswerScore": {
        "type": "integer",
        "minimum": 0,
        "maximum": 10
      },
      "EvaluationFormNumericQuestionAutomation": {
        "type": "object",
        "properties": {
          "PropertyValue": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericQuestionPropertyValueAutomation"
              },
              {
                "description": "The property value of the automation."
              }
            ]
          }
        },
        "description": "Information about the automation configuration in numeric questions."
      },
      "NumericQuestionPropertyValueAutomation": {
        "type": "object",
        "required": [
          "Label"
        ],
        "properties": {
          "Label": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericQuestionPropertyAutomationLabel"
              },
              {
                "description": "The property label of the automation."
              }
            ]
          }
        },
        "description": "<p>Information about the property value used in automation of a numeric questions. Label values are associated with minimum and maximum values for the numeric question.</p> <ul> <li> <p>Sentiment scores have a minimum value of -5 and maximum value of 5.</p> </li> <li> <p> Duration labels, such as <code>NON_TALK_TIME</code>, <code>CONTACT_DURATION</code>, <code>AGENT_INTERACTION_DURATION</code>, <code>CUSTOMER_HOLD_TIME</code> have a minimum value of 0 and maximum value of 28800.</p> </li> <li> <p>Percentages have a minimum value of 0 and maximum value of 100. </p> </li> <li> <p> <code>NUMBER_OF_INTERRUPTIONS</code> has a minimum value of 0 and maximum value of 1000.</p> </li> </ul>"
      },
      "NumericQuestionPropertyAutomationLabel": {
        "type": "string",
        "enum": [
          "OVERALL_CUSTOMER_SENTIMENT_SCORE",
          "OVERALL_AGENT_SENTIMENT_SCORE",
          "NON_TALK_TIME",
          "NON_TALK_TIME_PERCENTAGE",
          "NUMBER_OF_INTERRUPTIONS",
          "CONTACT_DURATION",
          "AGENT_INTERACTION_DURATION",
          "CUSTOMER_HOLD_TIME"
        ]
      },
      "EvaluationFormSingleSelectQuestionProperties": {
        "type": "object",
        "required": [
          "Options"
        ],
        "properties": {
          "Options": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormSingleSelectQuestionOptionList"
              },
              {
                "description": "The answer options of the single select question."
              }
            ]
          },
          "DisplayAs": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormSingleSelectQuestionDisplayMode"
              },
              {
                "description": "The display mode of the single select question."
              }
            ]
          },
          "Automation": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormSingleSelectQuestionAutomation"
              },
              {
                "description": "The display mode of the single select question."
              }
            ]
          }
        },
        "description": "Information about the options in single select questions."
      },
      "EvaluationFormSingleSelectQuestionOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EvaluationFormSingleSelectQuestionOption"
        },
        "minItems": 1,
        "maxItems": 256
      },
      "EvaluationFormSingleSelectQuestionOption": {
        "type": "object",
        "required": [
          "RefId",
          "Text"
        ],
        "properties": {
          "RefId": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceId"
              },
              {
                "description": "The identifier of the answer option. An identifier must be unique within the question."
              }
            ]
          },
          "Text": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormSingleSelectQuestionOptionText"
              },
              {
                "description": "The title of the answer option."
              }
            ]
          },
          "Score": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormQuestionAnswerScore"
              },
              {
                "description": "The score assigned to the answer option."
              }
            ]
          },
          "AutomaticFail": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "The flag to mark the option as automatic fail. If an automatic fail answer is provided, the overall evaluation gets a score of 0."
              }
            ]
          }
        },
        "description": "Information about the automation configuration in single select questions."
      },
      "EvaluationFormSingleSelectQuestionOptionText": {
        "type": "string",
        "minLength": 0,
        "maxLength": 128
      },
      "EvaluationFormSingleSelectQuestionDisplayMode": {
        "type": "string",
        "enum": [
          "DROPDOWN",
          "RADIO"
        ]
      },
      "EvaluationFormSingleSelectQuestionAutomation": {
        "type": "object",
        "required": [
          "Options"
        ],
        "properties": {
          "Options": {
            "allOf": [
              {
                "$ref": "#/$defs/EvaluationFormSingleSelectQuestionAutomationOptionList"
              },
              {
                "description": "The automation options of the single select question."
              }
            ]
          },
          "DefaultOptionRefId": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceId"
              },
              {
                "description": "The identifier of the default answer option, when none of the automation options match the criteria."
              }
            ]
          }
        },
        "description": "Information about the automation configuration in single select questions. Automation options are evaluated in order, and the first matched option is applied. If no automation option matches, and there is a default option, then the default option is applied."
      },
      "EvaluationFormSingleSelectQuestionAutomationOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EvaluationFormSingleSelectQuestionAutomationOption"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "EvaluationFormSingleSelectQuestionAutomationOption": {
        "type": "object",
        "properties": {
          "RuleCategory": {
            "allOf": [
              {
                "$ref": "#/$defs/SingleSelectQuestionRuleCategoryAutomation"
              },
              {
                "description": "The automation option based on a rule category for the single select question."
              }
            ]
          }
        },
        "description": "Information about the automation option of a single select question."
      },
      "SingleSelectQuestionRuleCategoryAutomation": {
        "type": "object",
        "required": [
          "Category",
          "Condition",
          "OptionRefId"
        ],
        "properties": {
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/SingleSelectQuestionRuleCategoryAutomationLabel"
              },
              {
                "description": " The category name, as defined in Rules."
              }
            ]
          },
          "Condition": {
            "allOf": [
              {
                "$ref": "#/$defs/SingleSelectQuestionRuleCategoryAutomationCondition"
              },
              {
                "description": "The condition to apply for the automation option. If the condition is <code>PRESENT</code>, then the option is applied when the contact data includes the category. Similarly, if the condition is <code>NOT_PRESENT</code>, then the option is applied when the contact data does not include the category."
              }
            ]
          },
          "OptionRefId": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceId"
              },
              {
                "description": "The identifier of the answer option."
              }
            ]
          }
        },
        "description": "Information about the automation option based on a rule category for a single select question."
      },
      "SingleSelectQuestionRuleCategoryAutomationLabel": {
        "type": "string",
        "minLength": 1,
        "maxLength": 50
      },
      "SingleSelectQuestionRuleCategoryAutomationCondition": {
        "type": "string",
        "enum": [
          "PRESENT",
          "NOT_PRESENT"
        ]
      },
      "EvaluationFormScoringMode": {
        "type": "string",
        "enum": [
          "QUESTION_ONLY",
          "SECTION_ONLY"
        ]
      },
      "EvaluationFormScoringStatus": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://connect.us-east-1.amazonaws.com/evaluation-forms/{InstanceId}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**EvaluationFormId**",
            "**EvaluationFormArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
