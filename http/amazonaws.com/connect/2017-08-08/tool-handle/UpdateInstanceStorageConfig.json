{
  "name": "UpdateInstanceStorageConfig",
  "description": "<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates an existing configuration for a resource type. This API is idempotent.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "InstanceId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "description": "The identifier of the Amazon Connect instance. You can <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html\">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance."
      },
      "AssociationId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID."
      },
      "resourceType": {
        "type": "string",
        "enum": [
          "CHAT_TRANSCRIPTS",
          "CALL_RECORDINGS",
          "SCHEDULED_REPORTS",
          "MEDIA_STREAMS",
          "CONTACT_TRACE_RECORDS",
          "AGENT_EVENTS",
          "REAL_TIME_CONTACT_ANALYSIS_SEGMENTS",
          "ATTACHMENTS",
          "CONTACT_EVALUATIONS",
          "SCREEN_RECORDINGS"
        ],
        "description": "A valid resource type."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "StorageConfig"
        ],
        "properties": {
          "StorageConfig": {
            "description": "The storage configuration for the instance.",
            "type": "object",
            "properties": {
              "AssociationId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AssociationId"
                  },
                  {
                    "description": "The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID."
                  }
                ]
              },
              "StorageType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StorageType"
                  },
                  {
                    "description": "A valid storage type."
                  }
                ]
              },
              "S3Config": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3Config"
                  },
                  {
                    "description": "The S3 bucket configuration."
                  }
                ]
              },
              "KinesisVideoStreamConfig": {
                "allOf": [
                  {
                    "$ref": "#/$defs/KinesisVideoStreamConfig"
                  },
                  {
                    "description": "The configuration of the Kinesis video stream."
                  }
                ]
              },
              "KinesisStreamConfig": {
                "allOf": [
                  {
                    "$ref": "#/$defs/KinesisStreamConfig"
                  },
                  {
                    "description": "The configuration of the Kinesis data stream."
                  }
                ]
              },
              "KinesisFirehoseConfig": {
                "allOf": [
                  {
                    "$ref": "#/$defs/KinesisFirehoseConfig"
                  },
                  {
                    "description": "The configuration of the Kinesis Firehose delivery stream."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "InstanceId",
      "AssociationId",
      "resourceType",
      "body"
    ],
    "$defs": {
      "AssociationId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "StorageType": {
        "type": "string",
        "enum": [
          "S3",
          "KINESIS_VIDEO_STREAM",
          "KINESIS_STREAM",
          "KINESIS_FIREHOSE"
        ]
      },
      "S3Config": {
        "type": "object",
        "required": [
          "BucketName",
          "BucketPrefix"
        ],
        "properties": {
          "BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketName"
              },
              {
                "description": "The S3 bucket name."
              }
            ]
          },
          "BucketPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/Prefix"
              },
              {
                "description": "The S3 bucket prefix."
              }
            ]
          },
          "EncryptionConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionConfig"
              },
              {
                "description": "The Amazon S3 encryption configuration."
              }
            ]
          }
        },
        "description": "Information about the Amazon Simple Storage Service (Amazon S3) storage type."
      },
      "BucketName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "Prefix": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "EncryptionConfig": {
        "type": "object",
        "required": [
          "EncryptionType",
          "KeyId"
        ],
        "properties": {
          "EncryptionType": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionType"
              },
              {
                "description": "The type of encryption."
              }
            ]
          },
          "KeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyId"
              },
              {
                "description": "<p>The full ARN of the encryption key. </p> <note> <p>Be sure to provide the full ARN of the encryption key, not just the ID.</p> <p>Amazon Connect supports only KMS keys with the default key spec of <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/asymmetric-key-specs.html#key-spec-symmetric-default\"> <code>SYMMETRIC_DEFAULT</code> </a>. </p> </note>"
              }
            ]
          }
        },
        "description": "The encryption configuration."
      },
      "EncryptionType": {
        "type": "string",
        "enum": [
          "KMS"
        ]
      },
      "KeyId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "KinesisVideoStreamConfig": {
        "type": "object",
        "required": [
          "Prefix",
          "RetentionPeriodHours",
          "EncryptionConfig"
        ],
        "properties": {
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/Prefix"
              },
              {
                "description": "The prefix of the video stream."
              }
            ]
          },
          "RetentionPeriodHours": {
            "allOf": [
              {
                "$ref": "#/$defs/Hours"
              },
              {
                "description": "<p>The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.</p> <p>The default value is 0, indicating that the stream does not persist data.</p>"
              }
            ]
          },
          "EncryptionConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionConfig"
              },
              {
                "description": "The encryption configuration."
              }
            ]
          }
        },
        "description": "Configuration information of a Kinesis video stream."
      },
      "Hours": {
        "type": "integer",
        "minimum": 0,
        "maximum": 87600
      },
      "KinesisStreamConfig": {
        "type": "object",
        "required": [
          "StreamArn"
        ],
        "properties": {
          "StreamArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the data stream."
              }
            ]
          }
        },
        "description": "Configuration information of a Kinesis data stream."
      },
      "ARN": {
        "type": "string"
      },
      "KinesisFirehoseConfig": {
        "type": "object",
        "required": [
          "FirehoseArn"
        ],
        "properties": {
          "FirehoseArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the delivery stream."
              }
            ]
          }
        },
        "description": "Configuration information of a Kinesis Data Firehose delivery stream."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://connect.us-east-1.amazonaws.com/instance/{InstanceId}/storage-config/{AssociationId}#resourceType{?resourceType}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
