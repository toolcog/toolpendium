{
  "name": "UpdateBrokerStorage",
  "description": "\n            <p>Updates the EBS storage associated with MSK brokers.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "clusterArn": {
        "type": "string",
        "description": "\n            <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "currentVersion",
          "targetBrokerEBSVolumeInfo"
        ],
        "properties": {
          "currentVersion": {
            "description": "\n            <p>The version of cluster to update from. A successful operation will then generate a new version.</p>",
            "type": "string"
          },
          "targetBrokerEBSVolumeInfo": {
            "description": "\n            <p>Describes the target volume size and the ID of the broker to apply the update to.</p>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/BrokerEBSVolumeInfo"
            }
          }
        }
      }
    },
    "required": [
      "clusterArn",
      "body"
    ],
    "$defs": {
      "BrokerEBSVolumeInfo": {
        "type": "object",
        "required": [
          "KafkaBrokerNodeId"
        ],
        "properties": {
          "KafkaBrokerNodeId": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "kafkaBrokerNodeId"
                },
                "description": "\n            <p>The ID of the broker to update.</p>"
              }
            ]
          },
          "ProvisionedThroughput": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisionedThroughput"
              },
              {
                "xml": {
                  "name": "provisionedThroughput"
                },
                "description": "\n            <p>EBS volume provisioned throughput information.</p>"
              }
            ]
          },
          "VolumeSizeGB": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "xml": {
                  "name": "volumeSizeGB"
                },
                "description": "\n            <p>Size of the EBS volume to update.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Specifies the EBS volume upgrade information. The broker identifier must be set to the keyword ALL. This means the changes apply to all the brokers in the cluster.</p>"
      },
      "__string": {
        "type": "string"
      },
      "ProvisionedThroughput": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                },
                "description": "\n            <p>Provisioned throughput is enabled or not.</p>"
              }
            ]
          },
          "VolumeThroughput": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "xml": {
                  "name": "volumeThroughput"
                },
                "description": "\n            <p>Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Contains information about provisioned throughput for EBS storage volumes attached to kafka broker nodes.</p>"
      },
      "__boolean": {
        "type": "boolean"
      },
      "__integer": {
        "type": "integer"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://kafka.us-east-1.amazonaws.com/v1/clusters/{clusterArn}/nodes/storage"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ClusterArn**",
            "**ClusterOperationArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
