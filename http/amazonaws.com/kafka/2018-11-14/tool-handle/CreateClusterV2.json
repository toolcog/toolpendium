{
  "name": "CreateClusterV2",
  "description": "\n            <p>Creates a new MSK cluster.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "clusterName"
        ],
        "properties": {
          "clusterName": {
            "description": "\n            <p>The name of the cluster.</p>",
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "tags": {
            "description": "\n            <p>A map of tags that you want the cluster to have.</p>",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/__string"
            }
          },
          "provisioned": {
            "description": "\n            <p>Provisioned cluster request.</p>",
            "type": "object",
            "properties": {
              "BrokerNodeGroupInfo": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BrokerNodeGroupInfo"
                  },
                  {
                    "xml": {
                      "name": "brokerNodeGroupInfo"
                    },
                    "description": "\n            <p>Information about the brokers.</p>"
                  }
                ]
              },
              "ClientAuthentication": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ClientAuthentication"
                  },
                  {
                    "xml": {
                      "name": "clientAuthentication"
                    },
                    "description": "\n            <p>Includes all client authentication information.</p>"
                  }
                ]
              },
              "ConfigurationInfo": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ConfigurationInfo"
                  },
                  {
                    "xml": {
                      "name": "configurationInfo"
                    },
                    "description": "\n            <p>Represents the configuration that you want Amazon MSK to use for the brokers in a cluster.</p>"
                  }
                ]
              },
              "EncryptionInfo": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EncryptionInfo"
                  },
                  {
                    "xml": {
                      "name": "encryptionInfo"
                    },
                    "description": "\n            <p>Includes all encryption-related information.</p>"
                  }
                ]
              },
              "EnhancedMonitoring": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EnhancedMonitoring"
                  },
                  {
                    "xml": {
                      "name": "enhancedMonitoring"
                    },
                    "description": "\n            <p>Specifies the level of monitoring for the MSK cluster. The possible values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION.</p>"
                  }
                ]
              },
              "OpenMonitoring": {
                "allOf": [
                  {
                    "$ref": "#/$defs/OpenMonitoringInfo"
                  },
                  {
                    "xml": {
                      "name": "openMonitoring"
                    },
                    "description": "\n            <p>The settings for open monitoring.</p>"
                  }
                ]
              },
              "KafkaVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__stringMin1Max128"
                  },
                  {
                    "xml": {
                      "name": "kafkaVersion"
                    },
                    "description": "\n            <p>The Apache Kafka version that you want for the cluster.</p>"
                  }
                ]
              },
              "LoggingInfo": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LoggingInfo"
                  },
                  {
                    "xml": {
                      "name": "loggingInfo"
                    },
                    "description": "\n            <p>Log delivery information for the cluster.</p>"
                  }
                ]
              },
              "NumberOfBrokerNodes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integerMin1Max15"
                  },
                  {
                    "xml": {
                      "name": "numberOfBrokerNodes"
                    },
                    "description": "\n            <p>The number of broker nodes in the cluster.</p>"
                  }
                ]
              },
              "StorageMode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StorageMode"
                  },
                  {
                    "xml": {
                      "name": "storageMode"
                    },
                    "description": "\n            <p>This controls storage mode for supported storage tiers.</p>"
                  }
                ]
              }
            }
          },
          "serverless": {
            "description": "\n            <p>Serverless cluster request.</p>",
            "type": "object",
            "properties": {
              "VpcConfigs": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__listOfVpcConfig"
                  },
                  {
                    "xml": {
                      "name": "vpcConfigs"
                    },
                    "description": "\n            <p>The configuration of the Amazon VPCs for the cluster.</p>"
                  }
                ]
              },
              "ClientAuthentication": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ServerlessClientAuthentication"
                  },
                  {
                    "xml": {
                      "name": "clientAuthentication"
                    },
                    "description": "\n            <p>Includes all client authentication information.</p>"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "__string": {
        "type": "string"
      },
      "BrokerNodeGroupInfo": {
        "type": "object",
        "required": [
          "ClientSubnets",
          "InstanceType"
        ],
        "properties": {
          "BrokerAZDistribution": {
            "allOf": [
              {
                "$ref": "#/$defs/BrokerAZDistribution"
              },
              {
                "xml": {
                  "name": "brokerAZDistribution"
                },
                "description": "\n            <p>The distribution of broker nodes across Availability Zones. This is an optional parameter. If you don't specify it, Amazon MSK gives it the value DEFAULT. You can also explicitly set this parameter to the value DEFAULT. No other values are currently allowed.</p>\n         <p>Amazon MSK distributes the broker nodes evenly across the Availability Zones that correspond to the subnets you provide when you create the cluster.</p>"
              }
            ]
          },
          "ClientSubnets": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "xml": {
                  "name": "clientSubnets"
                },
                "description": "\n            <p>The list of subnets to connect to in the client virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets. Client applications use elastic network interfaces to produce and consume data. Client subnets can't occupy the Availability Zone with ID use use1-az3.</p>"
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/__stringMin5Max32"
              },
              {
                "xml": {
                  "name": "instanceType"
                },
                "description": "\n            <p>The type of Amazon EC2 instances to use for Apache Kafka brokers. The following instance types are allowed: kafka.m5.large, kafka.m5.xlarge, kafka.m5.2xlarge,\nkafka.m5.4xlarge, kafka.m5.12xlarge, and kafka.m5.24xlarge.</p>"
              }
            ]
          },
          "SecurityGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "xml": {
                  "name": "securityGroups"
                },
                "description": "\n            <p>The AWS security groups to associate with the elastic network interfaces in order to specify who can connect to and communicate with the Amazon MSK cluster. If you don't specify a security group, Amazon MSK uses the default security group associated with the VPC.</p>"
              }
            ]
          },
          "StorageInfo": {
            "allOf": [
              {
                "$ref": "#/$defs/StorageInfo"
              },
              {
                "xml": {
                  "name": "storageInfo"
                },
                "description": "\n            <p>Contains information about storage volumes attached to MSK broker nodes.</p>"
              }
            ]
          },
          "ConnectivityInfo": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectivityInfo"
              },
              {
                "xml": {
                  "name": "connectivityInfo"
                },
                "description": "\n            <p>Information about the broker access configuration.</p>"
              }
            ]
          },
          "ZoneIds": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "xml": {
                  "name": "zoneIds"
                },
                "description": "\n            <p>The list of zoneIds for the cluster in the virtual private cloud (VPC).</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Describes the setup to be used for Apache Kafka broker nodes in the cluster.</p>"
      },
      "BrokerAZDistribution": {
        "type": "string",
        "enum": [
          "DEFAULT"
        ],
        "description": "\n            <p>The distribution of broker nodes across Availability Zones. This is an optional parameter. If you don't specify it, Amazon MSK gives it the value DEFAULT. You can also explicitly set this parameter to the value DEFAULT. No other values are currently allowed.</p>\n         <p>Amazon MSK distributes the broker nodes evenly across the Availability Zones that correspond to the subnets you provide when you create the cluster.</p>"
      },
      "__listOf__string": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/__string"
        }
      },
      "__stringMin5Max32": {
        "type": "string",
        "minLength": 5,
        "maxLength": 32
      },
      "StorageInfo": {
        "type": "object",
        "properties": {
          "EbsStorageInfo": {
            "allOf": [
              {
                "$ref": "#/$defs/EBSStorageInfo"
              },
              {
                "xml": {
                  "name": "ebsStorageInfo"
                },
                "description": "\n            <p>EBS volume information.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Contains information about storage volumes attached to MSK broker nodes.</p>"
      },
      "EBSStorageInfo": {
        "type": "object",
        "properties": {
          "ProvisionedThroughput": {
            "allOf": [
              {
                "$ref": "#/$defs/ProvisionedThroughput"
              },
              {
                "xml": {
                  "name": "provisionedThroughput"
                },
                "description": "\n            <p>EBS volume provisioned throughput information.</p>"
              }
            ]
          },
          "VolumeSize": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin1Max16384"
              },
              {
                "xml": {
                  "name": "volumeSize"
                },
                "description": "\n            <p>The size in GiB of the EBS volume for the data drive on each broker node.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Contains information about the EBS storage volumes attached to Apache Kafka broker nodes.</p>"
      },
      "ProvisionedThroughput": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                },
                "description": "\n            <p>Provisioned throughput is enabled or not.</p>"
              }
            ]
          },
          "VolumeThroughput": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "xml": {
                  "name": "volumeThroughput"
                },
                "description": "\n            <p>Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Contains information about provisioned throughput for EBS storage volumes attached to kafka broker nodes.</p>"
      },
      "__boolean": {
        "type": "boolean"
      },
      "__integer": {
        "type": "integer"
      },
      "__integerMin1Max16384": {
        "type": "integer",
        "minimum": 1,
        "maximum": 16384
      },
      "ConnectivityInfo": {
        "type": "object",
        "properties": {
          "PublicAccess": {
            "allOf": [
              {
                "$ref": "#/$defs/PublicAccess"
              },
              {
                "xml": {
                  "name": "publicAccess"
                },
                "description": "\n            <p>Public access control for brokers.</p>"
              }
            ]
          },
          "VpcConnectivity": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcConnectivity"
              },
              {
                "xml": {
                  "name": "vpcConnectivity"
                },
                "description": "\n            <p>VPC connectivity access control for brokers.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Information about the broker access configuration.</p>"
      },
      "PublicAccess": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "type"
                },
                "description": "\n            <p>The value DISABLED indicates that public access is turned off. SERVICE_PROVIDED_EIPS indicates that public access is turned on.</p>"
              }
            ]
          }
        },
        "description": "Public access control for brokers."
      },
      "VpcConnectivity": {
        "type": "object",
        "properties": {
          "ClientAuthentication": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcConnectivityClientAuthentication"
              },
              {
                "xml": {
                  "name": "clientAuthentication"
                },
                "description": "\n            <p>Includes all client authentication information for VPC connectivity.</p>"
              }
            ]
          }
        },
        "description": "VPC connectivity access control for brokers."
      },
      "VpcConnectivityClientAuthentication": {
        "type": "object",
        "properties": {
          "Sasl": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcConnectivitySasl"
              },
              {
                "xml": {
                  "name": "sasl"
                },
                "description": "\n            <p>SASL authentication type details for VPC connectivity.</p>"
              }
            ]
          },
          "Tls": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcConnectivityTls"
              },
              {
                "xml": {
                  "name": "tls"
                },
                "description": "\n            <p>TLS authentication type details for VPC connectivity.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Includes all client authentication information for VPC connectivity.</p>"
      },
      "VpcConnectivitySasl": {
        "type": "object",
        "properties": {
          "Scram": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcConnectivityScram"
              },
              {
                "xml": {
                  "name": "scram"
                },
                "description": "\n            <p>Details for SASL/SCRAM client authentication for VPC connectivity.</p>"
              }
            ]
          },
          "Iam": {
            "allOf": [
              {
                "$ref": "#/$defs/VpcConnectivityIam"
              },
              {
                "xml": {
                  "name": "iam"
                },
                "description": "\n            <p>Details for SASL/IAM client authentication for VPC connectivity.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Details for SASL client authentication for VPC connectivity.</p>"
      },
      "VpcConnectivityScram": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                },
                "description": "\n            <p>SASL/SCRAM authentication is on or off for VPC connectivity.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Details for SASL/SCRAM client authentication for VPC connectivity.</p>"
      },
      "VpcConnectivityIam": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                },
                "description": "\n            <p>SASL/IAM authentication is on or off for VPC connectivity.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Details for IAM access control for VPC connectivity.</p>"
      },
      "VpcConnectivityTls": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                },
                "description": "\n            <p>TLS authentication is on or off for VPC connectivity.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Details for TLS client authentication for VPC connectivity.</p>"
      },
      "ClientAuthentication": {
        "type": "object",
        "properties": {
          "Sasl": {
            "allOf": [
              {
                "$ref": "#/$defs/Sasl"
              },
              {
                "xml": {
                  "name": "sasl"
                },
                "description": "\n            <p>Details for ClientAuthentication using SASL.</p>"
              }
            ]
          },
          "Tls": {
            "allOf": [
              {
                "$ref": "#/$defs/Tls"
              },
              {
                "xml": {
                  "name": "tls"
                },
                "description": "\n            <p>Details for ClientAuthentication using TLS.</p>"
              }
            ]
          },
          "Unauthenticated": {
            "allOf": [
              {
                "$ref": "#/$defs/Unauthenticated"
              },
              {
                "xml": {
                  "name": "unauthenticated"
                },
                "description": "\n            <p>Contains information about unauthenticated traffic to the cluster.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Includes all client authentication information.</p>"
      },
      "Sasl": {
        "type": "object",
        "properties": {
          "Scram": {
            "allOf": [
              {
                "$ref": "#/$defs/Scram"
              },
              {
                "xml": {
                  "name": "scram"
                },
                "description": "\n            <p>Details for SASL/SCRAM client authentication.</p>"
              }
            ]
          },
          "Iam": {
            "allOf": [
              {
                "$ref": "#/$defs/Iam"
              },
              {
                "xml": {
                  "name": "iam"
                },
                "description": "\n            <p>Indicates whether IAM access control is enabled.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Details for client authentication using SASL.</p>"
      },
      "Scram": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                },
                "description": "\n            <p>SASL/SCRAM authentication is enabled or not.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Details for SASL/SCRAM client authentication.</p>"
      },
      "Iam": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                },
                "description": "\n            <p>Indicates whether IAM access control is enabled.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Details for IAM access control.</p>"
      },
      "Tls": {
        "type": "object",
        "properties": {
          "CertificateAuthorityArnList": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "xml": {
                  "name": "certificateAuthorityArnList"
                },
                "description": "\n            <p>List of ACM Certificate Authority ARNs.</p>"
              }
            ]
          },
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                },
                "description": "\n            <p>Specifies whether you want to turn on or turn off TLS authentication.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Details for client authentication using TLS.</p>"
      },
      "Unauthenticated": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                },
                "description": "\n            <p>Specifies whether you want to turn on or turn off unauthenticated traffic to your cluster.</p>"
              }
            ]
          }
        }
      },
      "ConfigurationInfo": {
        "type": "object",
        "required": [
          "Revision",
          "Arn"
        ],
        "properties": {
          "Arn": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "arn"
                },
                "description": "\n            <p>ARN of the configuration to use.</p>"
              }
            ]
          },
          "Revision": {
            "allOf": [
              {
                "$ref": "#/$defs/__long"
              },
              {
                "xml": {
                  "name": "revision"
                },
                "description": "\n            <p>The revision of the configuration to use.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Specifies the configuration to use for the brokers.</p>"
      },
      "__long": {
        "type": "integer"
      },
      "EncryptionInfo": {
        "type": "object",
        "properties": {
          "EncryptionAtRest": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionAtRest"
              },
              {
                "xml": {
                  "name": "encryptionAtRest"
                },
                "description": "\n            <p>The data-volume encryption details.</p>"
              }
            ]
          },
          "EncryptionInTransit": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionInTransit"
              },
              {
                "xml": {
                  "name": "encryptionInTransit"
                },
                "description": "\n            <p>The details for encryption in transit.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Includes encryption-related information, such as the AWS KMS key used for encrypting data at rest and whether you want MSK to encrypt your data in transit.</p>"
      },
      "EncryptionAtRest": {
        "type": "object",
        "required": [
          "DataVolumeKMSKeyId"
        ],
        "properties": {
          "DataVolumeKMSKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "dataVolumeKMSKeyId"
                },
                "description": "\n            <p>The ARN of the AWS KMS key for encrypting data at rest. If you don't specify a KMS key, MSK creates one for you and uses it.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>The data-volume encryption details.</p>"
      },
      "EncryptionInTransit": {
        "type": "object",
        "properties": {
          "ClientBroker": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientBroker"
              },
              {
                "xml": {
                  "name": "clientBroker"
                },
                "description": "\n            <p>Indicates the encryption setting for data in transit between clients and brokers. The following are the possible values.</p>\n            <p>\n               TLS means that client-broker communication is enabled with TLS only.</p>\n            <p>\n               TLS_PLAINTEXT means that client-broker communication is enabled for both TLS-encrypted, as well as plaintext data.</p>\n            <p>\n               PLAINTEXT means that client-broker communication is enabled in plaintext only.</p>\n            <p>The default value is TLS_PLAINTEXT.</p>"
              }
            ]
          },
          "InCluster": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "inCluster"
                },
                "description": "\n            <p>When set to true, it indicates that data communication among the broker nodes of the cluster is encrypted. When set to false, the communication happens in plaintext.</p>\n            <p>The default value is true.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>The settings for encrypting data in transit.</p>"
      },
      "ClientBroker": {
        "type": "string",
        "enum": [
          "TLS",
          "TLS_PLAINTEXT",
          "PLAINTEXT"
        ],
        "description": "\n            <p>Client-broker encryption in transit setting.</p>"
      },
      "EnhancedMonitoring": {
        "type": "string",
        "enum": [
          "DEFAULT",
          "PER_BROKER",
          "PER_TOPIC_PER_BROKER",
          "PER_TOPIC_PER_PARTITION"
        ],
        "description": "\n            <p>Specifies which metrics are gathered for the MSK cluster. This property has the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each of these levels of monitoring, see <a href=\"https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html\">Monitoring</a>.</p>"
      },
      "OpenMonitoringInfo": {
        "type": "object",
        "required": [
          "Prometheus"
        ],
        "properties": {
          "Prometheus": {
            "allOf": [
              {
                "$ref": "#/$defs/PrometheusInfo"
              },
              {
                "xml": {
                  "name": "prometheus"
                },
                "description": "\n            <p>Prometheus settings.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>JMX and Node monitoring for the MSK cluster.</p>"
      },
      "PrometheusInfo": {
        "type": "object",
        "properties": {
          "JmxExporter": {
            "allOf": [
              {
                "$ref": "#/$defs/JmxExporterInfo"
              },
              {
                "xml": {
                  "name": "jmxExporter"
                },
                "description": "\n            <p>Indicates whether you want to turn on or turn off the JMX Exporter.</p>"
              }
            ]
          },
          "NodeExporter": {
            "allOf": [
              {
                "$ref": "#/$defs/NodeExporterInfo"
              },
              {
                "xml": {
                  "name": "nodeExporter"
                },
                "description": "\n            <p>Indicates whether you want to turn on or turn off the Node Exporter.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Prometheus settings.</p>"
      },
      "JmxExporterInfo": {
        "type": "object",
        "required": [
          "EnabledInBroker"
        ],
        "properties": {
          "EnabledInBroker": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabledInBroker"
                },
                "description": "\n            <p>Indicates whether you want to turn on or turn off the JMX Exporter.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Indicates whether you want to turn on or turn off the JMX Exporter.</p>"
      },
      "NodeExporterInfo": {
        "type": "object",
        "required": [
          "EnabledInBroker"
        ],
        "properties": {
          "EnabledInBroker": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabledInBroker"
                },
                "description": "\n            <p>Indicates whether you want to turn on or turn off the Node Exporter.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Indicates whether you want to turn on or turn off the Node Exporter.</p>"
      },
      "__stringMin1Max128": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "LoggingInfo": {
        "type": "object",
        "required": [
          "BrokerLogs"
        ],
        "properties": {
          "BrokerLogs": {
            "allOf": [
              {
                "$ref": "#/$defs/BrokerLogs"
              },
              {
                "xml": {
                  "name": "brokerLogs"
                }
              }
            ]
          }
        }
      },
      "BrokerLogs": {
        "type": "object",
        "properties": {
          "CloudWatchLogs": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLogs"
              },
              {
                "xml": {
                  "name": "cloudWatchLogs"
                }
              }
            ]
          },
          "Firehose": {
            "allOf": [
              {
                "$ref": "#/$defs/Firehose"
              },
              {
                "xml": {
                  "name": "firehose"
                }
              }
            ]
          },
          "S3": {
            "allOf": [
              {
                "$ref": "#/$defs/S3"
              },
              {
                "xml": {
                  "name": "s3"
                }
              }
            ]
          }
        }
      },
      "CloudWatchLogs": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                }
              }
            ]
          },
          "LogGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "logGroup"
                }
              }
            ]
          }
        }
      },
      "Firehose": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "DeliveryStream": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "deliveryStream"
                }
              }
            ]
          },
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                }
              }
            ]
          }
        }
      },
      "S3": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "bucket"
                }
              }
            ]
          },
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                }
              }
            ]
          },
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "xml": {
                  "name": "prefix"
                }
              }
            ]
          }
        }
      },
      "__integerMin1Max15": {
        "type": "integer",
        "minimum": 1,
        "maximum": 15
      },
      "StorageMode": {
        "type": "string",
        "enum": [
          "LOCAL",
          "TIERED"
        ],
        "description": "Controls storage mode for various supported storage tiers."
      },
      "__listOfVpcConfig": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VpcConfig"
        }
      },
      "VpcConfig": {
        "type": "object",
        "required": [
          "SubnetIds"
        ],
        "properties": {
          "SubnetIds": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "xml": {
                  "name": "subnetIds"
                },
                "description": "\n            <p>The IDs of the subnets associated with the cluster.</p>"
              }
            ]
          },
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "xml": {
                  "name": "securityGroupIds"
                },
                "description": "\n            <p>The IDs of the security groups associated with the cluster.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>The configuration of the Amazon VPCs for the cluster.</p>"
      },
      "ServerlessClientAuthentication": {
        "type": "object",
        "properties": {
          "Sasl": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerlessSasl"
              },
              {
                "xml": {
                  "name": "sasl"
                },
                "description": "\n            <p>Details for ClientAuthentication using SASL.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Includes all client authentication information.</p>"
      },
      "ServerlessSasl": {
        "type": "object",
        "properties": {
          "Iam": {
            "allOf": [
              {
                "$ref": "#/$defs/Iam"
              },
              {
                "xml": {
                  "name": "iam"
                },
                "description": "\n            <p>Indicates whether IAM access control is enabled.</p>"
              }
            ]
          }
        },
        "description": "\n            <p>Details for client authentication using SASL.</p>"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://kafka.us-east-1.amazonaws.com/api/v2/clusters"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ClusterArn**",
            "**ClusterName**",
            "**State**",
            "**ClusterType**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
