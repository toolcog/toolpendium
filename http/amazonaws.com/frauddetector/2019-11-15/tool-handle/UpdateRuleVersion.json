{
  "name": "UpdateRuleVersion",
  "description": "Updates a rule version resulting in a new rule version. Updates a rule version resulting in a new rule version (version 1, 2, 3 ...). ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSHawksNestServiceFacade.UpdateRuleVersion"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateRuleVersionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateRuleVersionRequest": {
        "type": "object",
        "required": [
          "rule",
          "expression",
          "language",
          "outcomes"
        ],
        "title": "UpdateRuleVersionRequest",
        "properties": {
          "rule": {
            "allOf": [
              {
                "$ref": "#/$defs/Rule"
              },
              {
                "description": "The rule to update."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/description"
              },
              {
                "description": "The description."
              }
            ]
          },
          "expression": {
            "allOf": [
              {
                "$ref": "#/$defs/ruleExpression"
              },
              {
                "description": "The rule expression."
              }
            ]
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/$defs/Language"
              },
              {
                "description": "The language."
              }
            ]
          },
          "outcomes": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyListOfStrings"
              },
              {
                "description": "The outcomes."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/tagList"
              },
              {
                "description": "The tags to assign to the rule version."
              }
            ]
          }
        }
      },
      "Rule": {
        "type": "object",
        "required": [
          "detectorId",
          "ruleId",
          "ruleVersion"
        ],
        "properties": {
          "detectorId": {
            "allOf": [
              {
                "$ref": "#/$defs/identifier"
              },
              {
                "description": "The detector for which the rule is associated."
              }
            ]
          },
          "ruleId": {
            "allOf": [
              {
                "$ref": "#/$defs/identifier"
              },
              {
                "description": "The rule ID."
              }
            ]
          },
          "ruleVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/wholeNumberVersionString"
              },
              {
                "description": "The rule version."
              }
            ]
          }
        },
        "description": "A rule."
      },
      "identifier": {
        "type": "string",
        "pattern": "^[0-9a-z_-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "wholeNumberVersionString": {
        "type": "string",
        "pattern": "^([1-9][0-9]*)$",
        "minLength": 1,
        "maxLength": 5
      },
      "description": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "ruleExpression": {
        "type": "string",
        "minLength": 1,
        "maxLength": 4096,
        "format": "password"
      },
      "Language": {
        "type": "string",
        "enum": [
          "DETECTORPL"
        ]
      },
      "NonEmptyListOfStrings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/string"
        },
        "minItems": 1
      },
      "string": {
        "type": "string"
      },
      "tagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/tagKey"
              },
              {
                "description": "A tag key."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/tagValue"
              },
              {
                "description": "A value assigned to a tag key."
              }
            ]
          }
        },
        "description": "A key and value pair. "
      },
      "tagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "tagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://frauddetector.us-east-1.amazonaws.com/#X-Amz-Target=AWSHawksNestServiceFacade.UpdateRuleVersion"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**rule**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
