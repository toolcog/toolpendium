{
  "name": "PutEventType",
  "description": "Creates or updates an event type. An event is a business activity that is evaluated for fraud risk. With Amazon Fraud Detector, you generate fraud predictions for events. An event type defines the structure for an event sent to Amazon Fraud Detector. This includes the variables sent as part of the event, the entity performing the event (such as a customer), and the labels that classify the event. Example event types include online payment transactions, account registrations, and authentications.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSHawksNestServiceFacade.PutEventType"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutEventTypeRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutEventTypeRequest": {
        "type": "object",
        "required": [
          "name",
          "eventVariables",
          "entityTypes"
        ],
        "title": "PutEventTypeRequest",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/identifier"
              },
              {
                "description": "The name."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/description"
              },
              {
                "description": "The description of the event type."
              }
            ]
          },
          "eventVariables": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyListOfStrings"
              },
              {
                "description": "The event type variables."
              }
            ]
          },
          "labels": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfStrings"
              },
              {
                "description": "The event type labels."
              }
            ]
          },
          "entityTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyListOfStrings"
              },
              {
                "description": "The entity type for the event type. Example entity types: customer, merchant, account."
              }
            ]
          },
          "eventIngestion": {
            "allOf": [
              {
                "$ref": "#/$defs/EventIngestion"
              },
              {
                "description": "Specifies if ingestion is enabled or disabled."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/tagList"
              },
              {
                "description": "A collection of key and value pairs."
              }
            ]
          },
          "eventOrchestration": {
            "allOf": [
              {
                "$ref": "#/$defs/EventOrchestration"
              },
              {
                "description": "Enables or disables event orchestration. If enabled, you can send event predictions to select AWS services for downstream processing of the events."
              }
            ]
          }
        }
      },
      "identifier": {
        "type": "string",
        "pattern": "^[0-9a-z_-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "description": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "NonEmptyListOfStrings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/string"
        },
        "minItems": 1
      },
      "string": {
        "type": "string"
      },
      "ListOfStrings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/string"
        }
      },
      "EventIngestion": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "tagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/tagKey"
              },
              {
                "description": "A tag key."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/tagValue"
              },
              {
                "description": "A value assigned to a tag key."
              }
            ]
          }
        },
        "description": "A key and value pair. "
      },
      "tagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "tagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "EventOrchestration": {
        "type": "object",
        "required": [
          "eventBridgeEnabled"
        ],
        "properties": {
          "eventBridgeEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Specifies if event orchestration is enabled through Amazon EventBridge."
              }
            ]
          }
        },
        "description": " The event orchestration status. "
      },
      "Boolean": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://frauddetector.us-east-1.amazonaws.com/#X-Amz-Target=AWSHawksNestServiceFacade.PutEventType"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
