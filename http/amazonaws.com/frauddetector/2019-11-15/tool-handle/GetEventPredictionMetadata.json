{
  "name": "GetEventPredictionMetadata",
  "description": " Gets details of the past fraud predictions for the specified event ID, event type, detector ID, and detector version ID that was generated in the specified time period. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSHawksNestServiceFacade.GetEventPredictionMetadata"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetEventPredictionMetadataRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetEventPredictionMetadataRequest": {
        "type": "object",
        "required": [
          "eventId",
          "eventTypeName",
          "detectorId",
          "detectorVersionId",
          "predictionTimestamp"
        ],
        "title": "GetEventPredictionMetadataRequest",
        "properties": {
          "eventId": {
            "allOf": [
              {
                "$ref": "#/$defs/identifier"
              },
              {
                "description": " The event ID. "
              }
            ]
          },
          "eventTypeName": {
            "allOf": [
              {
                "$ref": "#/$defs/identifier"
              },
              {
                "description": " The event type associated with the detector specified for the prediction. "
              }
            ]
          },
          "detectorId": {
            "allOf": [
              {
                "$ref": "#/$defs/identifier"
              },
              {
                "description": " The detector ID. "
              }
            ]
          },
          "detectorVersionId": {
            "allOf": [
              {
                "$ref": "#/$defs/wholeNumberVersionString"
              },
              {
                "description": " The detector version ID. "
              }
            ]
          },
          "predictionTimestamp": {
            "allOf": [
              {
                "$ref": "#/$defs/time"
              },
              {
                "description": "<p> The timestamp that defines when the prediction was generated. The timestamp must be specified using ISO 8601 standard in UTC.</p> <p>We recommend calling <a href=\"https://docs.aws.amazon.com/frauddetector/latest/api/API_ListEventPredictions.html\">ListEventPredictions</a> first, and using the <code>predictionTimestamp</code> value in the response to provide an accurate prediction timestamp value.</p>"
              }
            ]
          }
        }
      },
      "identifier": {
        "type": "string",
        "pattern": "^[0-9a-z_-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "wholeNumberVersionString": {
        "type": "string",
        "pattern": "^([1-9][0-9]*)$",
        "minLength": 1,
        "maxLength": 5
      },
      "time": {
        "type": "string",
        "minLength": 11,
        "maxLength": 30
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://frauddetector.us-east-1.amazonaws.com/#X-Amz-Target=AWSHawksNestServiceFacade.GetEventPredictionMetadata"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**eventId**",
            "**eventTypeName**",
            "**entityId**",
            "**entityType**",
            "**eventTimestamp**",
            "**detectorId**",
            "**detectorVersionId**",
            "**detectorVersionStatus**",
            "**eventVariables**",
            "**rules**",
            "**ruleExecutionMode**",
            "**outcomes**",
            "**evaluatedModelVersions**",
            "**evaluatedExternalModels**",
            "**predictionTimestamp**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
