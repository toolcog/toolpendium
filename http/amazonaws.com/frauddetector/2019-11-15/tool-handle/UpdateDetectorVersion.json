{
  "name": "UpdateDetectorVersion",
  "description": " Updates a detector version. The detector version attributes that you can update include models, external model endpoints, rules, rule execution mode, and description. You can only update a <code>DRAFT</code> detector version.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSHawksNestServiceFacade.UpdateDetectorVersion"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateDetectorVersionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateDetectorVersionRequest": {
        "type": "object",
        "required": [
          "detectorId",
          "detectorVersionId",
          "externalModelEndpoints",
          "rules"
        ],
        "title": "UpdateDetectorVersionRequest",
        "properties": {
          "detectorId": {
            "allOf": [
              {
                "$ref": "#/$defs/identifier"
              },
              {
                "description": "The parent detector ID for the detector version you want to update."
              }
            ]
          },
          "detectorVersionId": {
            "allOf": [
              {
                "$ref": "#/$defs/wholeNumberVersionString"
              },
              {
                "description": "The detector version ID. "
              }
            ]
          },
          "externalModelEndpoints": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfStrings"
              },
              {
                "description": "The Amazon SageMaker model endpoints to include in the detector version."
              }
            ]
          },
          "rules": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleList"
              },
              {
                "description": "The rules to include in the detector version."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/description"
              },
              {
                "description": "The detector version description. "
              }
            ]
          },
          "modelVersions": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfModelVersions"
              },
              {
                "description": "The model versions to include in the detector version."
              }
            ]
          },
          "ruleExecutionMode": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleExecutionMode"
              },
              {
                "description": "<p>The rule execution mode to add to the detector.</p> <p>If you specify <code>FIRST_MATCHED</code>, Amazon Fraud Detector evaluates rules sequentially, first to last, stopping at the first matched rule. Amazon Fraud dectector then provides the outcomes for that single rule.</p> <p>If you specifiy <code>ALL_MATCHED</code>, Amazon Fraud Detector evaluates all rules and returns the outcomes for all matched rules. You can define and edit the rule mode at the detector version level, when it is in draft status.</p> <p>The default behavior is <code>FIRST_MATCHED</code>.</p>"
              }
            ]
          }
        }
      },
      "identifier": {
        "type": "string",
        "pattern": "^[0-9a-z_-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "wholeNumberVersionString": {
        "type": "string",
        "pattern": "^([1-9][0-9]*)$",
        "minLength": 1,
        "maxLength": 5
      },
      "ListOfStrings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/string"
        }
      },
      "string": {
        "type": "string"
      },
      "RuleList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Rule"
        }
      },
      "Rule": {
        "type": "object",
        "required": [
          "detectorId",
          "ruleId",
          "ruleVersion"
        ],
        "properties": {
          "detectorId": {
            "allOf": [
              {
                "$ref": "#/$defs/identifier"
              },
              {
                "description": "The detector for which the rule is associated."
              }
            ]
          },
          "ruleId": {
            "allOf": [
              {
                "$ref": "#/$defs/identifier"
              },
              {
                "description": "The rule ID."
              }
            ]
          },
          "ruleVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/wholeNumberVersionString"
              },
              {
                "description": "The rule version."
              }
            ]
          }
        },
        "description": "A rule."
      },
      "description": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "ListOfModelVersions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ModelVersion"
        }
      },
      "ModelVersion": {
        "type": "object",
        "required": [
          "modelId",
          "modelType",
          "modelVersionNumber"
        ],
        "properties": {
          "modelId": {
            "allOf": [
              {
                "$ref": "#/$defs/modelIdentifier"
              },
              {
                "description": "The model ID."
              }
            ]
          },
          "modelType": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelTypeEnum"
              },
              {
                "description": "The model type."
              }
            ]
          },
          "modelVersionNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/floatVersionString"
              },
              {
                "description": "The model version number."
              }
            ]
          },
          "arn": {
            "allOf": [
              {
                "$ref": "#/$defs/fraudDetectorArn"
              },
              {
                "description": "The model version ARN."
              }
            ]
          }
        },
        "description": "The model version."
      },
      "modelIdentifier": {
        "type": "string",
        "pattern": "^[0-9a-z_]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "ModelTypeEnum": {
        "type": "string",
        "enum": [
          "ONLINE_FRAUD_INSIGHTS",
          "TRANSACTION_FRAUD_INSIGHTS",
          "ACCOUNT_TAKEOVER_INSIGHTS"
        ]
      },
      "floatVersionString": {
        "type": "string",
        "pattern": "^[1-9][0-9]{0,3}\\.[0-9]{1,2}$",
        "minLength": 3,
        "maxLength": 7
      },
      "fraudDetectorArn": {
        "type": "string",
        "pattern": "^arn\\:aws[a-z-]{0,15}\\:frauddetector\\:[a-z0-9-]{3,20}\\:[0-9]{12}\\:[^\\s]{2,128}$",
        "minLength": 1,
        "maxLength": 256
      },
      "RuleExecutionMode": {
        "type": "string",
        "enum": [
          "ALL_MATCHED",
          "FIRST_MATCHED"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://frauddetector.us-east-1.amazonaws.com/#X-Amz-Target=AWSHawksNestServiceFacade.UpdateDetectorVersion"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
