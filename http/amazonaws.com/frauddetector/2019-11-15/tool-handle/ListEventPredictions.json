{
  "name": "ListEventPredictions",
  "description": "<p>Gets a list of past predictions. The list can be filtered by detector ID, detector version ID, event ID, event type, or by specifying a time period. If filter is not specified, the most recent prediction is returned.</p> <p>For example, the following filter lists all past predictions for <code>xyz</code> event type - <code>{ \"eventType\":{ \"value\": \"xyz\" }‚Äù } </code> </p> <p>This is a paginated API. If you provide a null <code>maxResults</code>, this action will retrieve a maximum of 10 records per page. If you provide a <code>maxResults</code>, the value must be between 50 and 100. To get the next page results, provide the <code>nextToken</code> from the response as part of your request. A null <code>nextToken</code> fetches the records from the beginning. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSHawksNestServiceFacade.ListEventPredictions"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListEventPredictionsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListEventPredictionsRequest": {
        "type": "object",
        "title": "ListEventPredictionsRequest",
        "properties": {
          "eventId": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterCondition"
              },
              {
                "description": " The event ID. "
              }
            ]
          },
          "eventType": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterCondition"
              },
              {
                "description": " The event type associated with the detector. "
              }
            ]
          },
          "detectorId": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterCondition"
              },
              {
                "description": " The detector ID. "
              }
            ]
          },
          "detectorVersionId": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterCondition"
              },
              {
                "description": " The detector version ID. "
              }
            ]
          },
          "predictionTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/PredictionTimeRange"
              },
              {
                "description": " The time period for when the predictions were generated. "
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": " Identifies the next page of results to return. Use the token to make the call again to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. "
              }
            ]
          },
          "maxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/EventPredictionsMaxResults"
              },
              {
                "description": " The maximum number of predictions to return for the request. "
              }
            ]
          }
        }
      },
      "FilterCondition": {
        "type": "object",
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/filterString"
              },
              {
                "description": " A statement containing a resource property and a value to specify filter condition. "
              }
            ]
          }
        },
        "description": " A conditional statement for filtering a list of past predictions. "
      },
      "filterString": {
        "type": "string",
        "pattern": "^[0-9A-Za-z_-]+$",
        "minLength": 1,
        "maxLength": 256
      },
      "PredictionTimeRange": {
        "type": "object",
        "required": [
          "startTime",
          "endTime"
        ],
        "properties": {
          "startTime": {
            "allOf": [
              {
                "$ref": "#/$defs/time"
              },
              {
                "description": " The start time of the time period for when the predictions were generated. "
              }
            ]
          },
          "endTime": {
            "allOf": [
              {
                "$ref": "#/$defs/time"
              },
              {
                "description": " The end time of the time period for when the predictions were generated. "
              }
            ]
          }
        },
        "description": " The time period for when the predictions were generated. "
      },
      "time": {
        "type": "string",
        "minLength": 11,
        "maxLength": 30
      },
      "string": {
        "type": "string"
      },
      "EventPredictionsMaxResults": {
        "type": "integer",
        "minimum": 50,
        "maximum": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://frauddetector.us-east-1.amazonaws.com/#X-Amz-Target=AWSHawksNestServiceFacade.ListEventPredictions{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**eventPredictionSummaries**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
