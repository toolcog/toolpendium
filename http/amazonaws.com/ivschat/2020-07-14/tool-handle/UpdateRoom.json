{
  "name": "UpdateRoom",
  "description": "Updates a roomâ€™s configuration.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "identifier"
        ],
        "properties": {
          "identifier": {
            "description": "Identifier of the room to be updated. Currently this must be an ARN.",
            "type": "string",
            "pattern": "^arn:aws:ivschat:[a-z0-9-]+:[0-9]+:room/[a-zA-Z0-9-]+$",
            "minLength": 1,
            "maxLength": 128
          },
          "loggingConfigurationIdentifiers": {
            "description": "Array of logging-configuration identifiers attached to the room.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/LoggingConfigurationIdentifier"
            },
            "minItems": 0,
            "maxItems": 3
          },
          "maximumMessageLength": {
            "description": "The maximum number of characters in a single message. Messages are expected to be UTF-8 encoded and this limit applies specifically to rune/code-point count, not number of bytes. Default: 500.",
            "type": "integer",
            "minimum": 1,
            "maximum": 500
          },
          "maximumMessageRatePerSecond": {
            "description": "Maximum number of messages per second that can be sent to the room (by all clients). Default: 10.",
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "messageReviewHandler": {
            "description": "Configuration information for optional message review.",
            "type": "object",
            "properties": {
              "fallbackResult": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FallbackResult"
                  },
                  {
                    "description": "Specifies the fallback behavior (whether the message is allowed or denied) if the handler does not return a valid response, encounters an error, or times out. (For the timeout period, see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/service-quotas.html\"> Service Quotas</a>.) If allowed, the message is delivered with returned content to all users connected to the room. If denied, the message is not delivered to any user. Default: <code>ALLOW</code>."
                  }
                ]
              },
              "uri": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LambdaArn"
                  },
                  {
                    "description": "Identifier of the message review handler. Currently this must be an ARN of a lambda function."
                  }
                ]
              }
            }
          },
          "name": {
            "description": "Room name. The value does not need to be unique.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]*$",
            "minLength": 0,
            "maxLength": 128
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "LoggingConfigurationIdentifier": {
        "type": "string",
        "pattern": "^arn:aws:ivschat:[a-z0-9-]+:[0-9]+:logging-configuration/[a-zA-Z0-9-]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "FallbackResult": {
        "type": "string",
        "enum": [
          "ALLOW",
          "DENY"
        ]
      },
      "LambdaArn": {
        "type": "string",
        "pattern": "^$|^arn:aws:lambda:[a-z0-9-]+:[0-9]{12}:function:.+",
        "minLength": 0,
        "maxLength": 170
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ivschat.us-east-1.amazonaws.com/UpdateRoom"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**arn**",
            "**createTime**",
            "**id**",
            "**loggingConfigurationIdentifiers**",
            "**maximumMessageLength**",
            "**maximumMessageRatePerSecond**",
            "**messageReviewHandler**",
            "**name**",
            "**tags**",
            "**updateTime**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
