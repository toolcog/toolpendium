{
  "name": "StartReadSetImportJob",
  "description": "Starts a read set import job.",
  "parameters": {
    "type": "object",
    "properties": {
      "sequenceStoreId": {
        "type": "string",
        "pattern": "[0-9]+",
        "minLength": 10,
        "maxLength": 36,
        "description": "The read set's sequence store ID."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "roleArn",
          "sources"
        ],
        "properties": {
          "roleArn": {
            "description": "A service role for the job.",
            "type": "string",
            "pattern": "arn:.*",
            "minLength": 20,
            "maxLength": 2048
          },
          "clientToken": {
            "description": "To ensure that jobs don't run multiple times, specify a unique token for each job.",
            "type": "string",
            "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
            "minLength": 1,
            "maxLength": 127
          },
          "sources": {
            "description": "The job's source files.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/StartReadSetImportJobSourceItem"
            },
            "minItems": 1,
            "maxItems": 100
          }
        }
      }
    },
    "required": [
      "sequenceStoreId",
      "body"
    ],
    "$defs": {
      "StartReadSetImportJobSourceItem": {
        "type": "object",
        "required": [
          "sourceFiles",
          "sourceFileType",
          "subjectId",
          "sampleId",
          "referenceArn"
        ],
        "properties": {
          "sourceFiles": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceFiles"
              },
              {
                "description": "The source files' location in Amazon S3."
              }
            ]
          },
          "sourceFileType": {
            "allOf": [
              {
                "$ref": "#/$defs/FileType"
              },
              {
                "description": "The source's file type."
              }
            ]
          },
          "subjectId": {
            "allOf": [
              {
                "$ref": "#/$defs/SubjectId"
              },
              {
                "description": "The source's subject ID."
              }
            ]
          },
          "sampleId": {
            "allOf": [
              {
                "$ref": "#/$defs/SampleId"
              },
              {
                "description": "The source's sample ID."
              }
            ]
          },
          "generatedFrom": {
            "allOf": [
              {
                "$ref": "#/$defs/GeneratedFrom"
              },
              {
                "description": "Where the source originated."
              }
            ]
          },
          "referenceArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceArn"
              },
              {
                "description": "The source's reference ARN."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/ReadSetName"
              },
              {
                "description": "The source's name."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/ReadSetDescription"
              },
              {
                "description": "The source's description."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagMap"
              },
              {
                "description": "The source's tags."
              }
            ]
          }
        },
        "description": "A source for a read set import job."
      },
      "SourceFiles": {
        "type": "object",
        "required": [
          "source1"
        ],
        "properties": {
          "source1": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The location of the first file in Amazon S3."
              }
            ]
          },
          "source2": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The location of the second file in Amazon S3."
              }
            ]
          }
        },
        "description": "Source files for a sequence."
      },
      "S3Uri": {
        "type": "string",
        "pattern": "s3://([a-z0-9][a-z0-9-.]{1,61}[a-z0-9])/(.{1,1024})"
      },
      "FileType": {
        "type": "string",
        "enum": [
          "FASTQ",
          "BAM",
          "CRAM"
        ]
      },
      "SubjectId": {
        "type": "string",
        "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
        "minLength": 1,
        "maxLength": 127
      },
      "SampleId": {
        "type": "string",
        "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
        "minLength": 1,
        "maxLength": 127
      },
      "GeneratedFrom": {
        "type": "string",
        "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
        "minLength": 1,
        "maxLength": 127
      },
      "ReferenceArn": {
        "type": "string",
        "pattern": "arn:.+",
        "minLength": 1,
        "maxLength": 127
      },
      "ReadSetName": {
        "type": "string",
        "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
        "minLength": 1,
        "maxLength": 127
      },
      "ReadSetDescription": {
        "type": "string",
        "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
        "minLength": 1,
        "maxLength": 255
      },
      "TagMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/TagValue"
        }
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://omics.us-east-1.amazonaws.com/sequencestore/{sequenceStoreId}/importjob"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**",
            "**sequenceStoreId**",
            "**roleArn**",
            "**status**",
            "**creationTime**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
