{
  "name": "StartRun",
  "description": "Starts a run.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "roleArn",
          "requestId"
        ],
        "properties": {
          "workflowId": {
            "description": "The run's workflow ID.",
            "type": "string",
            "pattern": "[0-9]+",
            "minLength": 1,
            "maxLength": 18
          },
          "workflowType": {
            "description": "The run's workflows type.",
            "type": "string",
            "enum": [
              "PRIVATE",
              "READY2RUN"
            ],
            "minLength": 1,
            "maxLength": 64
          },
          "runId": {
            "description": "The run's ID.",
            "type": "string",
            "pattern": "[0-9]+",
            "minLength": 1,
            "maxLength": 18
          },
          "roleArn": {
            "description": "A service role for the run.",
            "type": "string",
            "pattern": "arn:.+",
            "minLength": 1,
            "maxLength": 128
          },
          "name": {
            "description": "A name for the run.",
            "type": "string",
            "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
            "minLength": 1,
            "maxLength": 128
          },
          "runGroupId": {
            "description": "The run's group ID.",
            "type": "string",
            "pattern": "[0-9]+",
            "minLength": 1,
            "maxLength": 18
          },
          "priority": {
            "description": "A priority for the run.",
            "type": "integer",
            "minimum": 0,
            "maximum": 100000
          },
          "parameters": {
            "description": "Parameters for the run.",
            "type": "object",
            "properties": {}
          },
          "storageCapacity": {
            "description": "A storage capacity for the run in gigabytes.",
            "type": "integer",
            "minimum": 0,
            "maximum": 100000
          },
          "outputUri": {
            "description": "An output URI for the run.",
            "type": "string",
            "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
            "minLength": 1,
            "maxLength": 128
          },
          "logLevel": {
            "description": "A log level for the run.",
            "type": "string",
            "enum": [
              "OFF",
              "FATAL",
              "ERROR",
              "ALL"
            ],
            "minLength": 1,
            "maxLength": 64
          },
          "tags": {
            "description": "Tags for the run.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "requestId": {
            "description": "To ensure that requests don't run multiple times, specify a unique ID for each request.",
            "type": "string",
            "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
            "minLength": 1,
            "maxLength": 128
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://omics.us-east-1.amazonaws.com/run"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**arn**",
            "**id**",
            "**status**",
            "**tags**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
