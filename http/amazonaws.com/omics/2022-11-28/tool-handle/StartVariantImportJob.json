{
  "name": "StartVariantImportJob",
  "description": "Starts a variant import job.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "destinationName",
          "roleArn",
          "items"
        ],
        "properties": {
          "destinationName": {
            "description": "The destination variant store for the job.",
            "type": "string",
            "pattern": "([a-z]){1}([a-z0-9_]){2,254}",
            "minLength": 3,
            "maxLength": 255
          },
          "roleArn": {
            "description": "A service role for the job.",
            "type": "string",
            "pattern": "arn:([^: ]*):([^: ]*):([^: ]*):([0-9]{12}):([^: ]*)",
            "minLength": 20,
            "maxLength": 2048
          },
          "items": {
            "description": "Items to import.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/VariantImportItemSource"
            },
            "minItems": 1
          },
          "runLeftNormalization": {
            "description": "The job's left normalization setting.",
            "type": "boolean"
          },
          "annotationFields": {
            "description": " The annotation schema generated by the parsed annotation data. ",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/AnnotationFieldMapValueString"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "VariantImportItemSource": {
        "type": "object",
        "required": [
          "source"
        ],
        "properties": {
          "source": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The source file's location in Amazon S3."
              }
            ]
          }
        },
        "description": "A imported variant item's source."
      },
      "S3Uri": {
        "type": "string",
        "pattern": "s3://([a-z0-9][a-z0-9-.]{1,61}[a-z0-9])/(.{1,1024})"
      },
      "AnnotationFieldMapValueString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 21
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://omics.us-east-1.amazonaws.com/import/variant"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**jobId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
