{
  "name": "ListReadSetUploadParts",
  "description": " This operation will list all parts in a requested multipart upload for a sequence store. ",
  "parameters": {
    "type": "object",
    "properties": {
      "sequenceStoreId": {
        "type": "string",
        "pattern": "[0-9]+",
        "minLength": 10,
        "maxLength": 36,
        "description": " The Sequence Store ID used for the multipart uploads. "
      },
      "uploadId": {
        "type": "string",
        "pattern": "[0-9]+",
        "minLength": 10,
        "maxLength": 36,
        "description": " The ID for the initiated multipart upload. "
      },
      "maxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100,
        "description": " The maximum number of read set upload parts returned in a page. "
      },
      "nextToken": {
        "type": "string",
        "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
        "minLength": 1,
        "maxLength": 6144,
        "description": " Next token returned in the response of a previous ListReadSetUploadPartsRequest call. Used to get the next page of results. "
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "partSource"
        ],
        "properties": {
          "partSource": {
            "description": " The source file for the upload part. ",
            "type": "string",
            "enum": [
              "SOURCE1",
              "SOURCE2"
            ]
          },
          "filter": {
            "description": " Filter settings that select for read set upload parts of interest. ",
            "type": "object",
            "properties": {
              "createdAfter": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SyntheticTimestamp_date_time"
                  },
                  {
                    "description": " Filters for read set uploads after a specified time. "
                  }
                ]
              },
              "createdBefore": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SyntheticTimestamp_date_time"
                  },
                  {
                    "description": " Filters for read set part uploads before a specified time. "
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "sequenceStoreId",
      "uploadId",
      "body"
    ],
    "$defs": {
      "SyntheticTimestamp_date_time": {
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://omics.us-east-1.amazonaws.com/sequencestore/{sequenceStoreId}/upload/{uploadId}/parts{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**nextToken**",
            "**parts**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
