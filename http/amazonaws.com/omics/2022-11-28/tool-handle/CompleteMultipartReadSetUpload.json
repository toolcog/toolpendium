{
  "name": "CompleteMultipartReadSetUpload",
  "description": " Concludes a multipart upload once you have uploaded all the components. ",
  "parameters": {
    "type": "object",
    "properties": {
      "sequenceStoreId": {
        "type": "string",
        "pattern": "[0-9]+",
        "minLength": 10,
        "maxLength": 36,
        "description": " The sequence store ID for the store involved in the multipart upload. "
      },
      "uploadId": {
        "type": "string",
        "pattern": "[0-9]+",
        "minLength": 10,
        "maxLength": 36,
        "description": " The ID for the multipart upload. "
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "parts"
        ],
        "properties": {
          "parts": {
            "description": " The individual uploads or parts of a multipart upload. ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/CompleteReadSetUploadPartListItem"
            }
          }
        }
      }
    },
    "required": [
      "sequenceStoreId",
      "uploadId",
      "body"
    ],
    "$defs": {
      "CompleteReadSetUploadPartListItem": {
        "type": "object",
        "required": [
          "partNumber",
          "partSource",
          "checksum"
        ],
        "properties": {
          "partNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/CompleteReadSetUploadPartListItemPartNumberInteger"
              },
              {
                "description": " A number identifying the part in a read set upload. "
              }
            ]
          },
          "partSource": {
            "allOf": [
              {
                "$ref": "#/$defs/ReadSetPartSource"
              },
              {
                "description": " The source file of the part being uploaded. "
              }
            ]
          },
          "checksum": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": " A unique identifier used to confirm that parts are being added to the correct upload. "
              }
            ]
          }
        },
        "description": " Part of the response to the CompleteReadSetUpload API, including metadata. "
      },
      "CompleteReadSetUploadPartListItemPartNumberInteger": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10000
      },
      "ReadSetPartSource": {
        "type": "string",
        "enum": [
          "SOURCE1",
          "SOURCE2"
        ]
      },
      "String": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://omics.us-east-1.amazonaws.com/sequencestore/{sequenceStoreId}/upload/{uploadId}/complete"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**readSetId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
