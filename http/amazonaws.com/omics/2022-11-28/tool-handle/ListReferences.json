{
  "name": "ListReferences",
  "description": "Retrieves a list of references.",
  "parameters": {
    "type": "object",
    "properties": {
      "referenceStoreId": {
        "type": "string",
        "pattern": "[0-9]+",
        "minLength": 10,
        "maxLength": 36,
        "description": "The references' reference store ID."
      },
      "maxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100,
        "description": "The maximum number of references to return in one page of results."
      },
      "nextToken": {
        "type": "string",
        "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
        "minLength": 1,
        "maxLength": 6144,
        "description": "Specify the pagination token from a previous request to retrieve the next page of results."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "filter": {
            "description": "A filter for references.",
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ReferenceName"
                  },
                  {
                    "description": "A name to filter on."
                  }
                ]
              },
              "md5": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Md5"
                  },
                  {
                    "description": "An MD5 checksum to filter on."
                  }
                ]
              },
              "createdAfter": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SyntheticTimestamp_date_time"
                  },
                  {
                    "description": "The filter's start date."
                  }
                ]
              },
              "createdBefore": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SyntheticTimestamp_date_time"
                  },
                  {
                    "description": "The filter's end date."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "referenceStoreId",
      "body"
    ],
    "$defs": {
      "ReferenceName": {
        "type": "string",
        "pattern": "[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+",
        "minLength": 3,
        "maxLength": 255
      },
      "Md5": {
        "type": "string",
        "pattern": "[\\p{L}||\\p{N}]+",
        "minLength": 1,
        "maxLength": 255
      },
      "SyntheticTimestamp_date_time": {
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://omics.us-east-1.amazonaws.com/referencestore/{referenceStoreId}/references{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**nextToken**",
            "**references**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
