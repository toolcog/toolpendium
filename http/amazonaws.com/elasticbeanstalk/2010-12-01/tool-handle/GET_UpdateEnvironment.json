{
  "name": "GET_UpdateEnvironment",
  "description": "<p>Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.</p> <p> Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p> <p> When updating the configuration settings to a new template or individual settings, a draft configuration is created and <a>DescribeConfigurationSettings</a> for this environment returns two setting descriptions with different <code>DeploymentStatus</code> values. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "ApplicationName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "description": "The name of the application with which the environment is associated."
      },
      "EnvironmentId": {
        "type": "string",
        "description": "<p>The ID of the environment to update.</p> <p>If no environment with this ID exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
      },
      "EnvironmentName": {
        "type": "string",
        "minLength": 4,
        "maxLength": 40,
        "description": "<p>The name of the environment to update. If no environment with this name exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
      },
      "GroupName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 19,
        "description": "The name of the group to which the target environment belongs. Specify a group name only if the environment's name is specified in an environment manifest and not with the environment name or environment ID parameters. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html\">Environment Manifest (env.yaml)</a> for details."
      },
      "Description": {
        "type": "string",
        "maxLength": 200,
        "description": "If this parameter is specified, AWS Elastic Beanstalk updates the description of this environment."
      },
      "Tier": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>"
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>"
              }
            ]
          },
          "Version": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>"
              }
            ]
          }
        },
        "description": "<p>This specifies the tier to use to update the environment.</p> <p>Condition: At this time, if you change the tier version, name, or type, AWS Elastic Beanstalk returns <code>InvalidParameterValue</code> error. </p>"
      },
      "VersionLabel": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "description": "If this parameter is specified, AWS Elastic Beanstalk deploys the named application version to the environment. If no such application version is found, returns an <code>InvalidParameterValue</code> error. "
      },
      "TemplateName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "description": "If this parameter is specified, AWS Elastic Beanstalk deploys this configuration template to the environment. If no such configuration template is found, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. "
      },
      "SolutionStackName": {
        "type": "string",
        "description": "This specifies the platform version that the environment will run after the environment is updated."
      },
      "PlatformArn": {
        "type": "string",
        "description": "The ARN of the platform, if used."
      },
      "OptionSettings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConfigurationOptionSetting"
        },
        "description": "If specified, AWS Elastic Beanstalk updates the configuration set associated with the running environment and sets the specified configuration options to the requested value."
      },
      "OptionsToRemove": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OptionSpecification"
        },
        "description": "A list of custom user-defined configuration options to remove from the configuration set for this environment."
      },
      "Action": {
        "type": "string",
        "enum": [
          "UpdateEnvironment"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2010-12-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Action",
      "Version"
    ],
    "$defs": {
      "String": {
        "type": "string"
      },
      "ConfigurationOptionSetting": {
        "type": "object",
        "properties": {
          "ResourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "A unique resource name for the option setting. Use it for a time–based scaling configuration option."
              }
            ]
          },
          "Namespace": {
            "allOf": [
              {
                "$ref": "#/$defs/OptionNamespace"
              },
              {
                "description": "A unique namespace that identifies the option's associated AWS resource."
              }
            ]
          },
          "OptionName": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationOptionName"
              },
              {
                "description": "The name of the configuration option."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationOptionValue"
              },
              {
                "description": "The current value for the configuration option."
              }
            ]
          }
        },
        "description": "A specification identifying an individual configuration option along with its current value. For a list of possible namespaces and option values, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html\">Option Values</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>. "
      },
      "ResourceName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "OptionNamespace": {
        "type": "string"
      },
      "ConfigurationOptionName": {
        "type": "string"
      },
      "ConfigurationOptionValue": {
        "type": "string"
      },
      "OptionSpecification": {
        "type": "object",
        "properties": {
          "ResourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "A unique resource name for a time-based scaling configuration option."
              }
            ]
          },
          "Namespace": {
            "allOf": [
              {
                "$ref": "#/$defs/OptionNamespace"
              },
              {
                "description": "A unique namespace identifying the option's associated AWS resource."
              }
            ]
          },
          "OptionName": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationOptionName"
              },
              {
                "description": "The name of the configuration option."
              }
            ]
          }
        },
        "description": "A specification identifying an individual configuration option."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://elasticbeanstalk.us-east-1.amazonaws.com/#Action=UpdateEnvironment{?ApplicationName,EnvironmentId,EnvironmentName,GroupName,Description,Tier,VersionLabel,TemplateName,SolutionStackName,PlatformArn,OptionSettings,OptionsToRemove,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Describes the properties of an environment.",
        "**Key properties:**",
        {
          "$ul": [
            "**EnvironmentName**",
            "**EnvironmentId**",
            "**ApplicationName**",
            "**VersionLabel**",
            "**SolutionStackName**",
            "**PlatformArn**",
            "**TemplateName**",
            "**Description**",
            "**EndpointURL**",
            "**CNAME**",
            "**DateCreated**",
            "**DateUpdated**",
            "**Status**",
            "**AbortableOperationInProgress**",
            "**Health**",
            "**HealthStatus**",
            "**Resources**",
            "**Tier**",
            "**EnvironmentLinks**",
            "**EnvironmentArn**",
            "**OperationsRole**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
