{
  "name": "GET_CreateApplication",
  "description": "Creates an application that has one configuration template named <code>default</code> and no application versions.",
  "parameters": {
    "type": "object",
    "properties": {
      "ApplicationName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "description": "The name of the application. Must be unique within your account."
      },
      "Description": {
        "type": "string",
        "maxLength": 200,
        "description": "Your description of the application."
      },
      "ResourceLifecycleConfig": {
        "type": "object",
        "properties": {
          "ServiceRole": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>"
              }
            ]
          },
          "VersionLifecycleConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ApplicationVersionLifecycleConfig"
              },
              {
                "description": "Defines lifecycle settings for application versions."
              }
            ]
          }
        },
        "description": "Specifies an application resource lifecycle configuration to prevent your application from accumulating too many versions."
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "description": "<p>Specifies the tags applied to the application.</p> <p>Elastic Beanstalk applies these tags only to the application. Environments that you create in the application don't inherit the tags.</p>"
      },
      "Action": {
        "type": "string",
        "enum": [
          "CreateApplication"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2010-12-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "ApplicationName",
      "Action",
      "Version"
    ],
    "$defs": {
      "String": {
        "type": "string"
      },
      "ApplicationVersionLifecycleConfig": {
        "type": "object",
        "properties": {
          "MaxCountRule": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxCountRule"
              },
              {
                "description": "Specify a max count rule to restrict the number of application versions that are retained for an application."
              }
            ]
          },
          "MaxAgeRule": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxAgeRule"
              },
              {
                "description": "Specify a max age rule to restrict the length of time that application versions are retained for an application."
              }
            ]
          }
        },
        "description": "<p>The application version lifecycle settings for an application. Defines the rules that Elastic Beanstalk applies to an application's versions in order to avoid hitting the per-region limit for application versions.</p> <p>When Elastic Beanstalk deletes an application version from its database, you can no longer deploy that version to an environment. The source bundle remains in S3 unless you configure the rule to delete it.</p>"
      },
      "MaxCountRule": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "Specify <code>true</code> to apply the rule, or <code>false</code> to disable it."
              }
            ]
          },
          "MaxCount": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedInt"
              },
              {
                "description": "Specify the maximum number of application versions to retain."
              }
            ]
          },
          "DeleteSourceFromS3": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "Set to <code>true</code> to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version."
              }
            ]
          }
        },
        "description": "A lifecycle rule that deletes the oldest application version when the maximum count is exceeded."
      },
      "BoxedBoolean": {
        "type": "boolean"
      },
      "BoxedInt": {
        "type": "integer"
      },
      "MaxAgeRule": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "Specify <code>true</code> to apply the rule, or <code>false</code> to disable it."
              }
            ]
          },
          "MaxAgeInDays": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedInt"
              },
              {
                "description": "Specify the number of days to retain an application versions."
              }
            ]
          },
          "DeleteSourceFromS3": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxedBoolean"
              },
              {
                "description": "Set to <code>true</code> to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version."
              }
            ]
          }
        },
        "description": "A lifecycle rule that deletes application versions after the specified number of days."
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key of the tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of the tag."
              }
            ]
          }
        },
        "description": "Describes a tag applied to a resource in an environment."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://elasticbeanstalk.us-east-1.amazonaws.com/#Action=CreateApplication{?ApplicationName,Description,ResourceLifecycleConfig,Tags,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Result message containing a single description of an application.",
        "**Key properties:**",
        {
          "$ul": [
            "**Application**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
