{
  "name": "GET_CreateEnvironment",
  "description": "Launches an AWS Elastic Beanstalk environment for the specified application using the specified configuration.",
  "parameters": {
    "type": "object",
    "properties": {
      "ApplicationName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "description": "The name of the application that is associated with this environment."
      },
      "EnvironmentName": {
        "type": "string",
        "minLength": 4,
        "maxLength": 40,
        "description": "<p>A unique name for the environment.</p> <p>Constraint: Must be from 4 to 40 characters in length. The name can contain only letters, numbers, and hyphens. It can't start or end with a hyphen. This name must be unique within a region in your account. If the specified name already exists in the region, Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>If you don't specify the <code>CNAMEPrefix</code> parameter, the environment name becomes part of the CNAME, and therefore part of the visible URL for your application.</p>"
      },
      "GroupName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 19,
        "description": "The name of the group to which the target environment belongs. Specify a group name only if the environment's name is specified in an environment manifest and not with the environment name parameter. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html\">Environment Manifest (env.yaml)</a> for details."
      },
      "Description": {
        "type": "string",
        "maxLength": 200,
        "description": "Your description for this environment."
      },
      "CNAMEPrefix": {
        "type": "string",
        "minLength": 4,
        "maxLength": 63,
        "description": "If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name."
      },
      "Tier": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>"
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>"
              }
            ]
          },
          "Version": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>"
              }
            ]
          }
        },
        "description": "Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks."
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "description": "Specifies the tags applied to resources in the environment."
      },
      "VersionLabel": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "description": "<p>The name of the application version to deploy.</p> <p>Default: If not specified, Elastic Beanstalk attempts to deploy the sample application.</p>"
      },
      "TemplateName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100,
        "description": "<p>The name of the Elastic Beanstalk configuration template to use with the environment.</p> <note> <p>If you specify <code>TemplateName</code>, then don't specify <code>SolutionStackName</code>.</p> </note>"
      },
      "SolutionStackName": {
        "type": "string",
        "description": "<p>The name of an Elastic Beanstalk solution stack (platform version) to use with the environment. If specified, Elastic Beanstalk sets the configuration values to the default values associated with the specified solution stack. For a list of current solution stacks, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/platforms/platforms-supported.html\">Elastic Beanstalk Supported Platforms</a> in the <i>AWS Elastic Beanstalk Platforms</i> guide.</p> <note> <p>If you specify <code>SolutionStackName</code>, don't specify <code>PlatformArn</code> or <code>TemplateName</code>.</p> </note>"
      },
      "PlatformArn": {
        "type": "string",
        "description": "<p>The Amazon Resource Name (ARN) of the custom platform to use with the environment. For more information, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/custom-platforms.html\">Custom Platforms</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.</p> <note> <p>If you specify <code>PlatformArn</code>, don't specify <code>SolutionStackName</code>.</p> </note>"
      },
      "OptionSettings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConfigurationOptionSetting"
        },
        "description": "If specified, AWS Elastic Beanstalk sets the specified configuration options to the requested value in the configuration set for the new environment. These override the values obtained from the solution stack or the configuration template."
      },
      "OptionsToRemove": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OptionSpecification"
        },
        "description": "A list of custom user-defined configuration options to remove from the configuration set for this new environment."
      },
      "OperationsRole": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256,
        "description": "The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role. If specified, Elastic Beanstalk uses the operations role for permissions to downstream services during this call and during subsequent calls acting on this environment. To specify an operations role, you must have the <code>iam:PassRole</code> permission for the role. For more information, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html\">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>."
      },
      "Action": {
        "type": "string",
        "enum": [
          "CreateEnvironment"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2010-12-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "ApplicationName",
      "Action",
      "Version"
    ],
    "$defs": {
      "String": {
        "type": "string"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key of the tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of the tag."
              }
            ]
          }
        },
        "description": "Describes a tag applied to a resource in an environment."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "ConfigurationOptionSetting": {
        "type": "object",
        "properties": {
          "ResourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "A unique resource name for the option setting. Use it for a time–based scaling configuration option."
              }
            ]
          },
          "Namespace": {
            "allOf": [
              {
                "$ref": "#/$defs/OptionNamespace"
              },
              {
                "description": "A unique namespace that identifies the option's associated AWS resource."
              }
            ]
          },
          "OptionName": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationOptionName"
              },
              {
                "description": "The name of the configuration option."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationOptionValue"
              },
              {
                "description": "The current value for the configuration option."
              }
            ]
          }
        },
        "description": "A specification identifying an individual configuration option along with its current value. For a list of possible namespaces and option values, see <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html\">Option Values</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>. "
      },
      "ResourceName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "OptionNamespace": {
        "type": "string"
      },
      "ConfigurationOptionName": {
        "type": "string"
      },
      "ConfigurationOptionValue": {
        "type": "string"
      },
      "OptionSpecification": {
        "type": "object",
        "properties": {
          "ResourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "A unique resource name for a time-based scaling configuration option."
              }
            ]
          },
          "Namespace": {
            "allOf": [
              {
                "$ref": "#/$defs/OptionNamespace"
              },
              {
                "description": "A unique namespace identifying the option's associated AWS resource."
              }
            ]
          },
          "OptionName": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationOptionName"
              },
              {
                "description": "The name of the configuration option."
              }
            ]
          }
        },
        "description": "A specification identifying an individual configuration option."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://elasticbeanstalk.us-east-1.amazonaws.com/#Action=CreateEnvironment{?ApplicationName,EnvironmentName,GroupName,Description,CNAMEPrefix,Tier,Tags,VersionLabel,TemplateName,SolutionStackName,PlatformArn,OptionSettings,OptionsToRemove,OperationsRole,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Describes the properties of an environment.",
        "**Key properties:**",
        {
          "$ul": [
            "**EnvironmentName**",
            "**EnvironmentId**",
            "**ApplicationName**",
            "**VersionLabel**",
            "**SolutionStackName**",
            "**PlatformArn**",
            "**TemplateName**",
            "**Description**",
            "**EndpointURL**",
            "**CNAME**",
            "**DateCreated**",
            "**DateUpdated**",
            "**Status**",
            "**AbortableOperationInProgress**",
            "**Health**",
            "**HealthStatus**",
            "**Resources**",
            "**Tier**",
            "**EnvironmentLinks**",
            "**EnvironmentArn**",
            "**OperationsRole**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
