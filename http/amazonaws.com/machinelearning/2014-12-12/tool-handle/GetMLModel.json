{
  "name": "GetMLModel",
  "description": "<p>Returns an <code>MLModel</code> that includes detailed metadata, data source information, and the current status of the <code>MLModel</code>.</p> <p> <code>GetMLModel</code> provides results in normal or verbose format. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonML_20141212.GetMLModel"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetMLModelInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetMLModelInput": {
        "type": "object",
        "required": [
          "MLModelId"
        ],
        "title": "GetMLModelInput",
        "properties": {
          "MLModelId": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityId"
              },
              {
                "description": "The ID assigned to the <code>MLModel</code> at creation."
              }
            ]
          },
          "Verbose": {
            "allOf": [
              {
                "$ref": "#/$defs/Verbose"
              },
              {
                "description": "<p>Specifies whether the <code>GetMLModel</code> operation should return <code>Recipe</code>.</p> <p>If true, <code>Recipe</code> is returned.</p> <p>If false, <code>Recipe</code> is not returned.</p>"
              }
            ]
          }
        }
      },
      "EntityId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 64
      },
      "Verbose": {
        "type": "boolean",
        "description": "Specifies whether a describe operation should return exhaustive or abbreviated information."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://machinelearning.us-east-1.amazonaws.com/#X-Amz-Target=AmazonML_20141212.GetMLModel"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the output of a <code>GetMLModel</code> operation, and provides detailed information about a <code>MLModel</code>.",
        "**Key properties:**",
        {
          "$ul": [
            "**MLModelId**",
            "**TrainingDataSourceId**",
            "**CreatedByIamUser**",
            "**CreatedAt**",
            "**LastUpdatedAt**",
            "**Name**",
            "**Status**",
            "**SizeInBytes**: Long integer type that is a 64-bit signed number.",
            "**EndpointInfo**",
            "**TrainingParameters**",
            "**InputDataLocationS3**",
            "**MLModelType**",
            "**ScoreThreshold**",
            "**ScoreThresholdLastUpdatedAt**",
            "**LogUri**",
            "**Message**",
            "**ComputeTime**",
            "**FinishedAt**",
            "**StartedAt**",
            "**Recipe**",
            "**Schema**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
