{
  "name": "LookupEvents",
  "description": "<p>Looks up <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-management-events\">management events</a> or <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html#cloudtrail-concepts-insights-events\">CloudTrail Insights events</a> that are captured by CloudTrail. You can look up events that occurred in a Region within the last 90 days. Lookup supports the following attributes for management events:</p> <ul> <li> <p>Amazon Web Services access key</p> </li> <li> <p>Event ID</p> </li> <li> <p>Event name</p> </li> <li> <p>Event source</p> </li> <li> <p>Read only</p> </li> <li> <p>Resource name</p> </li> <li> <p>Resource type</p> </li> <li> <p>User name</p> </li> </ul> <p>Lookup supports the following attributes for Insights events:</p> <ul> <li> <p>Event ID</p> </li> <li> <p>Event name</p> </li> <li> <p>Event source</p> </li> </ul> <p>All attributes are optional. The default number of results returned is 50, with a maximum of 50 possible. The response includes a token that you can use to get the next page of results.</p> <important> <p>The rate of lookup requests is limited to two per second, per account, per Region. If this limit is exceeded, a throttling error occurs.</p> </important>",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.LookupEvents"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/LookupEventsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "LookupEventsRequest": {
        "type": "object",
        "title": "LookupEventsRequest",
        "properties": {
          "LookupAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/LookupAttributesList"
              },
              {
                "description": "Contains a list of lookup attributes. Currently the list can contain only one item."
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Date"
              },
              {
                "description": "Specifies that only events that occur after or at the specified time are returned. If the specified start time is after the specified end time, an error is returned."
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Date"
              },
              {
                "description": "Specifies that only events that occur before or at the specified time are returned. If the specified end time is before the specified start time, an error is returned."
              }
            ]
          },
          "EventCategory": {
            "allOf": [
              {
                "$ref": "#/$defs/EventCategory"
              },
              {
                "description": "Specifies the event category. If you do not specify an event category, events of the category are not returned in the response. For example, if you do not specify <code>insight</code> as the value of <code>EventCategory</code>, no Insights events are returned."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxResults"
              },
              {
                "description": "The number of events to return. Possible values are 1 through 50. The default is 50."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The token to use to get the next page of results after a previous API call. This token must be passed in with the same parameters that were specified in the original call. For example, if the original call specified an AttributeKey of 'Username' with a value of 'root', the call with NextToken should include those same parameters."
              }
            ]
          }
        },
        "description": "Contains a request for LookupEvents."
      },
      "LookupAttributesList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LookupAttribute"
        }
      },
      "LookupAttribute": {
        "type": "object",
        "required": [
          "AttributeKey",
          "AttributeValue"
        ],
        "properties": {
          "AttributeKey": {
            "allOf": [
              {
                "$ref": "#/$defs/LookupAttributeKey"
              },
              {
                "description": "Specifies an attribute on which to filter the events returned."
              }
            ]
          },
          "AttributeValue": {
            "allOf": [
              {
                "$ref": "#/$defs/LookupAttributeValue"
              },
              {
                "description": "Specifies a value for the specified AttributeKey."
              }
            ]
          }
        },
        "description": "Specifies an attribute and value that filter the events returned."
      },
      "LookupAttributeKey": {
        "type": "string",
        "enum": [
          "EventId",
          "EventName",
          "ReadOnly",
          "Username",
          "ResourceType",
          "ResourceName",
          "EventSource",
          "AccessKeyId"
        ]
      },
      "LookupAttributeValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2000
      },
      "Date": {
        "type": "string",
        "format": "date-time"
      },
      "EventCategory": {
        "type": "string",
        "enum": [
          "insight"
        ]
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 50
      },
      "NextToken": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cloudtrail.us-east-1.amazonaws.com/#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.LookupEvents{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains a response to a LookupEvents action.",
        "**Key properties:**",
        {
          "$ul": [
            "**Events**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
