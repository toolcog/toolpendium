{
  "name": "StartImport",
  "description": "<p> Starts an import of logged trail events from a source S3 bucket to a destination event data store. By default, CloudTrail only imports events contained in the S3 bucket's <code>CloudTrail</code> prefix and the prefixes inside the <code>CloudTrail</code> prefix, and does not check prefixes for other Amazon Web Services services. If you want to import CloudTrail events contained in another prefix, you must include the prefix in the <code>S3LocationUri</code>. For more considerations about importing trail events, see <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-copy-trail-to-lake.html#cloudtrail-trail-copy-considerations\">Considerations</a>. </p> <p> When you start a new import, the <code>Destinations</code> and <code>ImportSource</code> parameters are required. Before starting a new import, disable any access control lists (ACLs) attached to the source S3 bucket. For more information about disabling ACLs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html\">Controlling ownership of objects and disabling ACLs for your bucket</a>. </p> <p> When you retry an import, the <code>ImportID</code> parameter is required. </p> <note> <p> If the destination event data store is for an organization, you must use the management account to import trail events. You cannot use the delegated administrator account for the organization. </p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StartImport"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/StartImportRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "StartImportRequest": {
        "type": "object",
        "title": "StartImportRequest",
        "properties": {
          "Destinations": {
            "allOf": [
              {
                "$ref": "#/$defs/ImportDestinations"
              },
              {
                "description": " The ARN of the destination event data store. Use this parameter for a new import. "
              }
            ]
          },
          "ImportSource": {
            "allOf": [
              {
                "$ref": "#/$defs/ImportSource"
              },
              {
                "description": " The source S3 bucket for the import. Use this parameter for a new import. "
              }
            ]
          },
          "StartEventTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Date"
              },
              {
                "description": " Use with <code>EndEventTime</code> to bound a <code>StartImport</code> request, and limit imported trail events to only those events logged within a specified time period. When you specify a time range, CloudTrail checks the prefix and log file names to verify the names contain a date between the specified <code>StartEventTime</code> and <code>EndEventTime</code> before attempting to import events. "
              }
            ]
          },
          "EndEventTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Date"
              },
              {
                "description": " Use with <code>StartEventTime</code> to bound a <code>StartImport</code> request, and limit imported trail events to only those events logged within a specified time period. When you specify a time range, CloudTrail checks the prefix and log file names to verify the names contain a date between the specified <code>StartEventTime</code> and <code>EndEventTime</code> before attempting to import events. "
              }
            ]
          },
          "ImportId": {
            "allOf": [
              {
                "$ref": "#/$defs/UUID"
              },
              {
                "description": " The ID of the import. Use this parameter when you are retrying an import. "
              }
            ]
          }
        }
      },
      "ImportDestinations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EventDataStoreArn"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "EventDataStoreArn": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._/\\-:]+$",
        "minLength": 3,
        "maxLength": 256
      },
      "ImportSource": {
        "type": "object",
        "required": [
          "S3"
        ],
        "properties": {
          "S3": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ImportSource"
              },
              {
                "description": " The source S3 bucket. "
              }
            ]
          }
        },
        "description": " The import source. "
      },
      "S3ImportSource": {
        "type": "object",
        "required": [
          "S3LocationUri",
          "S3BucketRegion",
          "S3BucketAccessRoleArn"
        ],
        "properties": {
          "S3LocationUri": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": " The URI for the source S3 bucket. "
              }
            ]
          },
          "S3BucketRegion": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": " The Region associated with the source S3 bucket. "
              }
            ]
          },
          "S3BucketAccessRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": " The IAM ARN role used to access the source S3 bucket. "
              }
            ]
          }
        },
        "description": " The settings for the source S3 bucket. "
      },
      "String": {
        "type": "string"
      },
      "Date": {
        "type": "string",
        "format": "date-time"
      },
      "UUID": {
        "type": "string",
        "pattern": "^[a-f0-9\\-]+$",
        "minLength": 36,
        "maxLength": 36
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cloudtrail.us-east-1.amazonaws.com/#X-Amz-Target=com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.StartImport"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ImportId**",
            "**Destinations**",
            "**ImportSource**",
            "**StartEventTime**",
            "**EndEventTime**",
            "**ImportStatus**",
            "**CreatedTimestamp**",
            "**UpdatedTimestamp**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "490": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "491": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "492": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "493": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
