{
  "name": "CreateCallAnalyticsCategory",
  "description": "<p>Creates a new Call Analytics category.</p> <p>All categories are automatically applied to your Call Analytics transcriptions. Note that in order to apply categories to your transcriptions, you must create them before submitting your transcription request, as categories cannot be applied retroactively.</p> <p>When creating a new category, you can use the <code>InputType</code> parameter to label the category as a <code>POST_CALL</code> or a <code>REAL_TIME</code> category. <code>POST_CALL</code> categories can only be applied to post-call transcriptions and <code>REAL_TIME</code> categories can only be applied to real-time transcriptions. If you do not include <code>InputType</code>, your category is created as a <code>POST_CALL</code> category by default.</p> <p>Call Analytics categories are composed of rules. For each category, you must create between 1 and 20 rules. Rules can include these parameters: , , , and .</p> <p>To update an existing category, see .</p> <p>To learn more about Call Analytics categories, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-batch.html\">Creating categories for post-call transcriptions</a> and <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-stream.html\">Creating categories for real-time transcriptions</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Transcribe.CreateCallAnalyticsCategory"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateCallAnalyticsCategoryRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateCallAnalyticsCategoryRequest": {
        "type": "object",
        "required": [
          "CategoryName",
          "Rules"
        ],
        "title": "CreateCallAnalyticsCategoryRequest",
        "properties": {
          "CategoryName": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryName"
              },
              {
                "description": "<p>A unique name, chosen by you, for your Call Analytics category. It's helpful to use a detailed naming system that will make sense to you in the future. For example, it's better to use <code>sentiment-positive-last30seconds</code> for a category over a generic name like <code>test-category</code>.</p> <p>Category names are case sensitive.</p>"
              }
            ]
          },
          "Rules": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleList"
              },
              {
                "description": "Rules define a Call Analytics category. When creating a new category, you must create between 1 and 20 rules for that category. For each rule, you specify a filter you want applied to the attributes of a call. For example, you can choose a sentiment filter that detects if a customer's sentiment was positive during the last 30 seconds of the call."
              }
            ]
          },
          "InputType": {
            "allOf": [
              {
                "$ref": "#/$defs/InputType"
              },
              {
                "description": "<p>Choose whether you want to create a real-time or a post-call category for your Call Analytics transcription.</p> <p>Specifying <code>POST_CALL</code> assigns your category to post-call transcriptions; categories with this input type cannot be applied to streaming (real-time) transcriptions.</p> <p>Specifying <code>REAL_TIME</code> assigns your category to streaming transcriptions; categories with this input type cannot be applied to post-call transcriptions.</p> <p>If you do not include <code>InputType</code>, your category is created as a post-call category by default.</p>"
              }
            ]
          }
        }
      },
      "CategoryName": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z._-]+",
        "minLength": 1,
        "maxLength": 200
      },
      "RuleList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Rule"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "Rule": {
        "type": "object",
        "properties": {
          "NonTalkTimeFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/NonTalkTimeFilter"
              },
              {
                "description": "Flag the presence or absence of periods of silence in your Call Analytics transcription output. Refer to for more detail."
              }
            ]
          },
          "InterruptionFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/InterruptionFilter"
              },
              {
                "description": "Flag the presence or absence of interruptions in your Call Analytics transcription output. Refer to for more detail."
              }
            ]
          },
          "TranscriptFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/TranscriptFilter"
              },
              {
                "description": "Flag the presence or absence of specific words or phrases in your Call Analytics transcription output. Refer to for more detail."
              }
            ]
          },
          "SentimentFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/SentimentFilter"
              },
              {
                "description": "Flag the presence or absence of specific sentiments in your Call Analytics transcription output. Refer to for more detail."
              }
            ]
          }
        },
        "description": "<p>A rule is a set of criteria that you can specify to flag an attribute in your Call Analytics output. Rules define a Call Analytics category.</p> <p>Rules can include these parameters: , , , and .</p> <p>To learn more about Call Analytics rules and categories, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-batch.html\">Creating categories for post-call transcriptions</a> and <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-stream.html\">Creating categories for real-time transcriptions</a>.</p> <p>To learn more about Call Analytics, see <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/call-analytics.html\">Analyzing call center audio with Call Analytics</a>.</p>"
      },
      "NonTalkTimeFilter": {
        "type": "object",
        "properties": {
          "Threshold": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampMilliseconds"
              },
              {
                "description": "Specify the duration, in milliseconds, of the period of silence that you want to flag. For example, you can flag a silent period that lasts 30,000 milliseconds."
              }
            ]
          },
          "AbsoluteTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/AbsoluteTimeRange"
              },
              {
                "description": "Makes it possible to specify a time range (in milliseconds) in your audio, during which you want to search for a period of silence. See for more detail."
              }
            ]
          },
          "RelativeTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/RelativeTimeRange"
              },
              {
                "description": "Makes it possible to specify a time range (in percentage) in your media file, during which you want to search for a period of silence. See for more detail."
              }
            ]
          },
          "Negate": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Set to <code>TRUE</code> to flag periods of speech. Set to <code>FALSE</code> to flag periods of silence"
              }
            ]
          }
        },
        "description": "<p>Flag the presence or absence of periods of silence in your Call Analytics transcription output.</p> <p>Rules using <code>NonTalkTimeFilter</code> are designed to match:</p> <ul> <li> <p>The presence of silence at specified periods throughout the call</p> </li> <li> <p>The presence of speech at specified periods throughout the call</p> </li> </ul> <p>See <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-batch.html#tca-rules-batch\">Rule criteria for post-call categories</a> for usage examples.</p>"
      },
      "TimestampMilliseconds": {
        "type": "integer",
        "minimum": 0,
        "maximum": 14400000
      },
      "AbsoluteTimeRange": {
        "type": "object",
        "properties": {
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampMilliseconds"
              },
              {
                "description": "The time, in milliseconds, when Amazon Transcribe starts searching for the specified criteria in your audio. If you include <code>StartTime</code> in your request, you must also include <code>EndTime</code>."
              }
            ]
          },
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampMilliseconds"
              },
              {
                "description": "The time, in milliseconds, when Amazon Transcribe stops searching for the specified criteria in your audio. If you include <code>EndTime</code> in your request, you must also include <code>StartTime</code>."
              }
            ]
          },
          "First": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampMilliseconds"
              },
              {
                "description": "The time, in milliseconds, from the start of your media file until the specified value. Amazon Transcribe searches for your specified criteria in this time segment."
              }
            ]
          },
          "Last": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampMilliseconds"
              },
              {
                "description": "The time, in milliseconds, from the specified value until the end of your media file. Amazon Transcribe searches for your specified criteria in this time segment."
              }
            ]
          }
        },
        "description": "<p>A time range, in milliseconds, between two points in your media file.</p> <p>You can use <code>StartTime</code> and <code>EndTime</code> to search a custom segment. For example, setting <code>StartTime</code> to 10000 and <code>EndTime</code> to 50000 only searches for your specified criteria in the audio contained between the 10,000 millisecond mark and the 50,000 millisecond mark of your media file. You must use <code>StartTime</code> and <code>EndTime</code> as a set; that is, if you include one, you must include both.</p> <p>You can use also <code>First</code> to search from the start of the audio until the time that you specify, or <code>Last</code> to search from the time that you specify until the end of the audio. For example, setting <code>First</code> to 50000 only searches for your specified criteria in the audio contained between the start of the media file to the 50,000 millisecond mark. You can use <code>First</code> and <code>Last</code> independently of each other.</p> <p>If you prefer to use percentage instead of milliseconds, see .</p>"
      },
      "RelativeTimeRange": {
        "type": "object",
        "properties": {
          "StartPercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/Percentage"
              },
              {
                "description": "The time, in percentage, when Amazon Transcribe starts searching for the specified criteria in your media file. If you include <code>StartPercentage</code> in your request, you must also include <code>EndPercentage</code>."
              }
            ]
          },
          "EndPercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/Percentage"
              },
              {
                "description": "The time, in percentage, when Amazon Transcribe stops searching for the specified criteria in your media file. If you include <code>EndPercentage</code> in your request, you must also include <code>StartPercentage</code>."
              }
            ]
          },
          "First": {
            "allOf": [
              {
                "$ref": "#/$defs/Percentage"
              },
              {
                "description": "The time, in percentage, from the start of your media file until the specified value. Amazon Transcribe searches for your specified criteria in this time segment."
              }
            ]
          },
          "Last": {
            "allOf": [
              {
                "$ref": "#/$defs/Percentage"
              },
              {
                "description": "The time, in percentage, from the specified value until the end of your media file. Amazon Transcribe searches for your specified criteria in this time segment."
              }
            ]
          }
        },
        "description": "<p>A time range, in percentage, between two points in your media file.</p> <p>You can use <code>StartPercentage</code> and <code>EndPercentage</code> to search a custom segment. For example, setting <code>StartPercentage</code> to 10 and <code>EndPercentage</code> to 50 only searches for your specified criteria in the audio contained between the 10 percent mark and the 50 percent mark of your media file.</p> <p>You can use also <code>First</code> to search from the start of the media file until the time that you specify. Or use <code>Last</code> to search from the time that you specify until the end of the media file. For example, setting <code>First</code> to 10 only searches for your specified criteria in the audio contained in the first 10 percent of the media file.</p> <p>If you prefer to use milliseconds instead of percentage, see .</p>"
      },
      "Percentage": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100
      },
      "Boolean": {
        "type": "boolean"
      },
      "InterruptionFilter": {
        "type": "object",
        "properties": {
          "Threshold": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampMilliseconds"
              },
              {
                "description": "Specify the duration of the interruptions in milliseconds. For example, you can flag speech that contains more than 10,000 milliseconds of interruptions."
              }
            ]
          },
          "ParticipantRole": {
            "allOf": [
              {
                "$ref": "#/$defs/ParticipantRole"
              },
              {
                "description": "Specify the interrupter that you want to flag. Omitting this parameter is equivalent to specifying both participants."
              }
            ]
          },
          "AbsoluteTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/AbsoluteTimeRange"
              },
              {
                "description": "Makes it possible to specify a time range (in milliseconds) in your audio, during which you want to search for an interruption. See for more detail."
              }
            ]
          },
          "RelativeTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/RelativeTimeRange"
              },
              {
                "description": "Makes it possible to specify a time range (in percentage) in your media file, during which you want to search for an interruption. See for more detail."
              }
            ]
          },
          "Negate": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Set to <code>TRUE</code> to flag speech that does not contain interruptions. Set to <code>FALSE</code> to flag speech that contains interruptions."
              }
            ]
          }
        },
        "description": "<p>Flag the presence or absence of interruptions in your Call Analytics transcription output.</p> <p>Rules using <code>InterruptionFilter</code> are designed to match:</p> <ul> <li> <p>Instances where an agent interrupts a customer</p> </li> <li> <p>Instances where a customer interrupts an agent</p> </li> <li> <p>Either participant interrupting the other</p> </li> <li> <p>A lack of interruptions</p> </li> </ul> <p>See <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-batch.html#tca-rules-batch\">Rule criteria for post-call categories</a> for usage examples.</p>"
      },
      "ParticipantRole": {
        "type": "string",
        "enum": [
          "AGENT",
          "CUSTOMER"
        ]
      },
      "TranscriptFilter": {
        "type": "object",
        "required": [
          "TranscriptFilterType",
          "Targets"
        ],
        "properties": {
          "TranscriptFilterType": {
            "allOf": [
              {
                "$ref": "#/$defs/TranscriptFilterType"
              },
              {
                "description": "<p>Flag the presence or absence of an exact match to the phrases that you specify. For example, if you specify the phrase \"speak to a manager\" as your <code>Targets</code> value, only that exact phrase is flagged.</p> <p>Note that semantic matching is not supported. For example, if your customer says \"speak to <i>the</i> manager\", instead of \"speak to <i>a</i> manager\", your content is not flagged.</p>"
              }
            ]
          },
          "AbsoluteTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/AbsoluteTimeRange"
              },
              {
                "description": "Makes it possible to specify a time range (in milliseconds) in your audio, during which you want to search for the specified key words or phrases. See for more detail."
              }
            ]
          },
          "RelativeTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/RelativeTimeRange"
              },
              {
                "description": "Makes it possible to specify a time range (in percentage) in your media file, during which you want to search for the specified key words or phrases. See for more detail."
              }
            ]
          },
          "ParticipantRole": {
            "allOf": [
              {
                "$ref": "#/$defs/ParticipantRole"
              },
              {
                "description": "Specify the participant that you want to flag. Omitting this parameter is equivalent to specifying both participants."
              }
            ]
          },
          "Negate": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Set to <code>TRUE</code> to flag the absence of the phrase that you specified in your request. Set to <code>FALSE</code> to flag the presence of the phrase that you specified in your request."
              }
            ]
          },
          "Targets": {
            "allOf": [
              {
                "$ref": "#/$defs/StringTargetList"
              },
              {
                "description": "Specify the phrases that you want to flag."
              }
            ]
          }
        },
        "description": "<p>Flag the presence or absence of specific words or phrases detected in your Call Analytics transcription output.</p> <p>Rules using <code>TranscriptFilter</code> are designed to match:</p> <ul> <li> <p>Custom words or phrases spoken by the agent, the customer, or both</p> </li> <li> <p>Custom words or phrases <b>not</b> spoken by the agent, the customer, or either</p> </li> <li> <p>Custom words or phrases that occur at a specific time frame</p> </li> </ul> <p>See <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-batch.html#tca-rules-batch\">Rule criteria for post-call categories</a> and <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-stream.html#tca-rules-stream\">Rule criteria for streaming categories</a> for usage examples.</p>"
      },
      "TranscriptFilterType": {
        "type": "string",
        "enum": [
          "EXACT"
        ]
      },
      "StringTargetList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NonEmptyString"
        },
        "minItems": 1
      },
      "NonEmptyString": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 2000
      },
      "SentimentFilter": {
        "type": "object",
        "required": [
          "Sentiments"
        ],
        "properties": {
          "Sentiments": {
            "allOf": [
              {
                "$ref": "#/$defs/SentimentValueList"
              },
              {
                "description": "Specify the sentiments that you want to flag."
              }
            ]
          },
          "AbsoluteTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/AbsoluteTimeRange"
              },
              {
                "description": "Makes it possible to specify a time range (in milliseconds) in your audio, during which you want to search for the specified sentiments. See for more detail."
              }
            ]
          },
          "RelativeTimeRange": {
            "allOf": [
              {
                "$ref": "#/$defs/RelativeTimeRange"
              },
              {
                "description": "Makes it possible to specify a time range (in percentage) in your media file, during which you want to search for the specified sentiments. See for more detail."
              }
            ]
          },
          "ParticipantRole": {
            "allOf": [
              {
                "$ref": "#/$defs/ParticipantRole"
              },
              {
                "description": "Specify the participant that you want to flag. Omitting this parameter is equivalent to specifying both participants."
              }
            ]
          },
          "Negate": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Set to <code>TRUE</code> to flag the sentiments that you didn't include in your request. Set to <code>FALSE</code> to flag the sentiments that you specified in your request."
              }
            ]
          }
        },
        "description": "<p>Flag the presence or absence of specific sentiments detected in your Call Analytics transcription output.</p> <p>Rules using <code>SentimentFilter</code> are designed to match:</p> <ul> <li> <p>The presence or absence of a positive sentiment felt by the customer, agent, or both at specified points in the call</p> </li> <li> <p>The presence or absence of a negative sentiment felt by the customer, agent, or both at specified points in the call</p> </li> <li> <p>The presence or absence of a neutral sentiment felt by the customer, agent, or both at specified points in the call</p> </li> <li> <p>The presence or absence of a mixed sentiment felt by the customer, the agent, or both at specified points in the call</p> </li> </ul> <p>See <a href=\"https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-batch.html#tca-rules-batch\">Rule criteria for post-call categories</a> for usage examples.</p>"
      },
      "SentimentValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SentimentValue"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "SentimentValue": {
        "type": "string",
        "enum": [
          "POSITIVE",
          "NEGATIVE",
          "NEUTRAL",
          "MIXED"
        ]
      },
      "InputType": {
        "type": "string",
        "enum": [
          "REAL_TIME",
          "POST_CALL"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://transcribe.us-east-1.amazonaws.com/#X-Amz-Target=Transcribe.CreateCallAnalyticsCategory"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**CategoryProperties**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
