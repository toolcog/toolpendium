{
  "name": "CreateApp",
  "description": " Creates a new Amplify app. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "description": " The name for an Amplify app. ",
            "type": "string",
            "pattern": "\\(\\?s\\).\\+",
            "minLength": 1,
            "maxLength": 255
          },
          "description": {
            "description": " The description for an Amplify app. ",
            "type": "string",
            "pattern": "\\(\\?s\\).*",
            "maxLength": 1000
          },
          "repository": {
            "description": " The repository for an Amplify app. ",
            "type": "string",
            "pattern": "\\(\\?s\\).*",
            "maxLength": 1000
          },
          "platform": {
            "description": " The platform for the Amplify app. For a static app, set the platform type to <code>WEB</code>. For a dynamic server-side rendered (SSR) app, set the platform type to <code>WEB_COMPUTE</code>. For an app requiring Amplify Hosting's original SSR support only, set the platform type to <code>WEB_DYNAMIC</code>.",
            "type": "string",
            "enum": [
              "WEB",
              "WEB_DYNAMIC",
              "WEB_COMPUTE"
            ]
          },
          "iamServiceRoleArn": {
            "description": " The AWS Identity and Access Management (IAM) service role for an Amplify app. ",
            "type": "string",
            "pattern": "\\(\\?s\\).*",
            "minLength": 0,
            "maxLength": 1000
          },
          "oauthToken": {
            "description": "<p>The OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key using SSH cloning. The OAuth token is not stored.</p> <p>Use <code>oauthToken</code> for repository providers other than GitHub, such as Bitbucket or CodeCommit. To authorize access to GitHub as your repository provider, use <code>accessToken</code>.</p> <p>You must specify either <code>oauthToken</code> or <code>accessToken</code> when you create a new app.</p> <p>Existing Amplify apps deployed from a GitHub repository using OAuth continue to work with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub App. For more information, see <a href=\"https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\">Migrating an existing OAuth app to the Amplify GitHub App</a> in the <i>Amplify User Guide</i> .</p>",
            "type": "string",
            "pattern": "\\(\\?s\\).*",
            "maxLength": 1000,
            "format": "password"
          },
          "accessToken": {
            "description": "<p>The personal access token for a GitHub repository for an Amplify app. The personal access token is used to authorize access to a GitHub repository using the Amplify GitHub App. The token is not stored.</p> <p>Use <code>accessToken</code> for GitHub repositories only. To authorize access to a repository provider such as Bitbucket or CodeCommit, use <code>oauthToken</code>.</p> <p>You must specify either <code>accessToken</code> or <code>oauthToken</code> when you create a new app.</p> <p>Existing Amplify apps deployed from a GitHub repository using OAuth continue to work with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub App. For more information, see <a href=\"https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\">Migrating an existing OAuth app to the Amplify GitHub App</a> in the <i>Amplify User Guide</i> .</p>",
            "type": "string",
            "pattern": "\\(\\?s\\).\\+",
            "minLength": 1,
            "maxLength": 255,
            "format": "password"
          },
          "environmentVariables": {
            "description": " The environment variables map for an Amplify app. ",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/EnvValue"
            }
          },
          "enableBranchAutoBuild": {
            "description": " Enables the auto building of branches for an Amplify app. ",
            "type": "boolean"
          },
          "enableBranchAutoDeletion": {
            "description": " Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository. ",
            "type": "boolean"
          },
          "enableBasicAuth": {
            "description": " Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app. ",
            "type": "boolean"
          },
          "basicAuthCredentials": {
            "description": " The credentials for basic authorization for an Amplify app. You must base64-encode the authorization credentials and provide them in the format <code>user:password</code>.",
            "type": "string",
            "pattern": "\\(\\?s\\).*",
            "maxLength": 2000,
            "format": "password"
          },
          "customRules": {
            "description": " The custom rewrite and redirect rules for an Amplify app. ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/CustomRule"
            }
          },
          "tags": {
            "description": " The tag for an Amplify app. ",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "buildSpec": {
            "description": " The build specification (build spec) file for an Amplify app build. ",
            "type": "string",
            "pattern": "\\(\\?s\\).\\+",
            "minLength": 1,
            "maxLength": 25000,
            "format": "password"
          },
          "customHeaders": {
            "description": "The custom HTTP headers for an Amplify app.",
            "type": "string",
            "pattern": "\\(\\?s\\).*",
            "minLength": 0,
            "maxLength": 25000
          },
          "enableAutoBranchCreation": {
            "description": " Enables automated branch creation for an Amplify app. ",
            "type": "boolean"
          },
          "autoBranchCreationPatterns": {
            "description": " The automated branch creation glob patterns for an Amplify app. ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AutoBranchCreationPattern"
            }
          },
          "autoBranchCreationConfig": {
            "description": " Describes the automated branch creation configuration. ",
            "type": "object",
            "properties": {
              "stage": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Stage"
                  },
                  {
                    "description": " Describes the current stage for the autocreated branch. "
                  }
                ]
              },
              "framework": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Framework"
                  },
                  {
                    "description": " The framework for the autocreated branch. "
                  }
                ]
              },
              "enableAutoBuild": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EnableAutoBuild"
                  },
                  {
                    "description": " Enables auto building for the autocreated branch. "
                  }
                ]
              },
              "environmentVariables": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EnvironmentVariables"
                  },
                  {
                    "description": " The environment variables for the autocreated branch. "
                  }
                ]
              },
              "basicAuthCredentials": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BasicAuthCredentials"
                  },
                  {
                    "description": " The basic authorization credentials for the autocreated branch. You must base64-encode the authorization credentials and provide them in the format <code>user:password</code>."
                  }
                ]
              },
              "enableBasicAuth": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EnableBasicAuth"
                  },
                  {
                    "description": " Enables basic authorization for the autocreated branch. "
                  }
                ]
              },
              "enablePerformanceMode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EnablePerformanceMode"
                  },
                  {
                    "description": "<p>Enables performance mode for the branch.</p> <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p>"
                  }
                ]
              },
              "buildSpec": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BuildSpec"
                  },
                  {
                    "description": " The build specification (build spec) for the autocreated branch. "
                  }
                ]
              },
              "enablePullRequestPreview": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EnablePullRequestPreview"
                  },
                  {
                    "description": " Enables pull request previews for the autocreated branch. "
                  }
                ]
              },
              "pullRequestEnvironmentName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PullRequestEnvironmentName"
                  },
                  {
                    "description": " The Amplify environment name for the pull request. "
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "EnvValue": {
        "type": "string",
        "pattern": "\\(\\?s\\).*",
        "maxLength": 5500
      },
      "CustomRule": {
        "type": "object",
        "required": [
          "source",
          "target"
        ],
        "properties": {
          "source": {
            "allOf": [
              {
                "$ref": "#/$defs/Source"
              },
              {
                "description": " The source pattern for a URL rewrite or redirect rule. "
              }
            ]
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/$defs/Target"
              },
              {
                "description": " The target pattern for a URL rewrite or redirect rule. "
              }
            ]
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/$defs/Status"
              },
              {
                "description": "<p> The status code for a URL rewrite or redirect rule. </p> <dl> <dt>200</dt> <dd> <p>Represents a 200 rewrite rule.</p> </dd> <dt>301</dt> <dd> <p>Represents a 301 (moved pemanently) redirect rule. This and all future requests should be directed to the target URL. </p> </dd> <dt>302</dt> <dd> <p>Represents a 302 temporary redirect rule.</p> </dd> <dt>404</dt> <dd> <p>Represents a 404 redirect rule.</p> </dd> <dt>404-200</dt> <dd> <p>Represents a 404 rewrite rule.</p> </dd> </dl>"
              }
            ]
          },
          "condition": {
            "allOf": [
              {
                "$ref": "#/$defs/Condition"
              },
              {
                "description": " The condition for a URL rewrite or redirect rule, such as a country code. "
              }
            ]
          }
        },
        "description": " Describes a custom rewrite or redirect rule. "
      },
      "Source": {
        "type": "string",
        "pattern": "\\(\\?s\\).\\+",
        "minLength": 1,
        "maxLength": 2048
      },
      "Target": {
        "type": "string",
        "pattern": "\\(\\?s\\).\\+",
        "minLength": 1,
        "maxLength": 2048
      },
      "Status": {
        "type": "string",
        "pattern": ".{3,7}",
        "minLength": 3,
        "maxLength": 7
      },
      "Condition": {
        "type": "string",
        "pattern": "\\(\\?s\\).*",
        "minLength": 0,
        "maxLength": 2048
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "maxLength": 256
      },
      "AutoBranchCreationPattern": {
        "type": "string",
        "pattern": "\\(\\?s\\).\\+",
        "minLength": 1,
        "maxLength": 2048
      },
      "Stage": {
        "type": "string",
        "enum": [
          "PRODUCTION",
          "BETA",
          "DEVELOPMENT",
          "EXPERIMENTAL",
          "PULL_REQUEST"
        ]
      },
      "Framework": {
        "type": "string",
        "pattern": "\\(\\?s\\).*",
        "maxLength": 255
      },
      "EnableAutoBuild": {
        "type": "boolean"
      },
      "EnvironmentVariables": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/EnvValue"
        }
      },
      "BasicAuthCredentials": {
        "type": "string",
        "pattern": "\\(\\?s\\).*",
        "maxLength": 2000,
        "format": "password"
      },
      "EnableBasicAuth": {
        "type": "boolean"
      },
      "EnablePerformanceMode": {
        "type": "boolean"
      },
      "BuildSpec": {
        "type": "string",
        "pattern": "\\(\\?s\\).\\+",
        "description": " The build specification (build spec) file for an Amplify app build. ",
        "minLength": 1,
        "maxLength": 25000,
        "format": "password"
      },
      "EnablePullRequestPreview": {
        "type": "boolean"
      },
      "PullRequestEnvironmentName": {
        "type": "string",
        "pattern": "\\(\\?s\\).*",
        "maxLength": 20
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://amplify.us-east-1.amazonaws.com/apps"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**app**:  Represents the different branches of a repository for building, deploying, and hosting an Amplify app. ",
              {
                "$ul": [
                  "**appId**",
                  "**appArn**",
                  "**name**",
                  "**tags**",
                  "**description**",
                  "**repository**",
                  "**platform**",
                  "**createTime**",
                  "**updateTime**",
                  "**iamServiceRoleArn**",
                  "**environmentVariables**",
                  "**defaultDomain**",
                  "**enableBranchAutoBuild**",
                  "**enableBranchAutoDeletion**",
                  "**enableBasicAuth**",
                  "**basicAuthCredentials**",
                  "**customRules**",
                  "**productionBranch**",
                  "**buildSpec**",
                  "**customHeaders**",
                  "**enableAutoBranchCreation**",
                  "**autoBranchCreationPatterns**",
                  "**autoBranchCreationConfig**",
                  "**repositoryCloneMethod**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
