{
  "name": "ImportDecoderManifest",
  "description": " Creates a decoder manifest using your existing CAN DBC file from your local device. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "IoTAutobahnControlPlane.ImportDecoderManifest"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ImportDecoderManifestRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ImportDecoderManifestRequest": {
        "type": "object",
        "required": [
          "name",
          "networkFileDefinitions"
        ],
        "title": "ImportDecoderManifestRequest",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/resourceName"
              },
              {
                "description": " The name of the decoder manifest to import. "
              }
            ]
          },
          "networkFileDefinitions": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkFileDefinitions"
              },
              {
                "description": " The file to load into an Amazon Web Services account. "
              }
            ]
          }
        }
      },
      "resourceName": {
        "type": "string",
        "pattern": "[a-zA-Z\\d\\-_:]+",
        "minLength": 1,
        "maxLength": 100
      },
      "NetworkFileDefinitions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NetworkFileDefinition"
        }
      },
      "NetworkFileDefinition": {
        "type": "object",
        "properties": {
          "canDbc": {
            "allOf": [
              {
                "$ref": "#/$defs/CanDbcDefinition"
              },
              {
                "description": "Information, including CAN DBC files, about the configurations used to create a decoder manifest."
              }
            ]
          }
        },
        "description": "Specifications for defining a vehicle network."
      },
      "CanDbcDefinition": {
        "type": "object",
        "required": [
          "networkInterface",
          "canDbcFiles"
        ],
        "properties": {
          "networkInterface": {
            "allOf": [
              {
                "$ref": "#/$defs/InterfaceId"
              },
              {
                "description": "Contains information about a network interface."
              }
            ]
          },
          "canDbcFiles": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkFilesList"
              },
              {
                "description": "A list of DBC files. You can upload only one DBC file for each network interface and specify up to five (inclusive) files in the list."
              }
            ]
          },
          "signalsMap": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelSignalsMap"
              },
              {
                "description": "Pairs every signal specified in your vehicle model with a signal decoder."
              }
            ]
          }
        },
        "description": "Configurations used to create a decoder manifest."
      },
      "InterfaceId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 50
      },
      "NetworkFilesList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NetworkFileBlob"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "NetworkFileBlob": {
        "type": "string"
      },
      "ModelSignalsMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/string"
        }
      },
      "string": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iotfleetwise.us-east-1.amazonaws.com/#X-Amz-Target=IoTAutobahnControlPlane.ImportDecoderManifest"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**name**",
            "**arn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
