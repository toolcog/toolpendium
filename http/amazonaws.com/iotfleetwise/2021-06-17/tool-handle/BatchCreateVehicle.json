{
  "name": "BatchCreateVehicle",
  "description": "<p> Creates a group, or batch, of vehicles. </p> <note> <p> You must specify a decoder manifest and a vehicle model (model manifest) for each vehicle. </p> </note> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iot-fleetwise/latest/developerguide/create-vehicles-cli.html\">Create multiple vehicles (AWS CLI)</a> in the <i>Amazon Web Services IoT FleetWise Developer Guide</i>. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "IoTAutobahnControlPlane.BatchCreateVehicle"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/BatchCreateVehicleRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "BatchCreateVehicleRequest": {
        "type": "object",
        "required": [
          "vehicles"
        ],
        "title": "BatchCreateVehicleRequest",
        "properties": {
          "vehicles": {
            "allOf": [
              {
                "$ref": "#/$defs/createVehicleRequestItems"
              },
              {
                "description": " A list of information about each vehicle to create. For more information, see the API data type."
              }
            ]
          }
        }
      },
      "createVehicleRequestItems": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CreateVehicleRequestItem"
        },
        "minItems": 1
      },
      "CreateVehicleRequestItem": {
        "type": "object",
        "required": [
          "vehicleName",
          "modelManifestArn",
          "decoderManifestArn"
        ],
        "properties": {
          "vehicleName": {
            "allOf": [
              {
                "$ref": "#/$defs/vehicleName"
              },
              {
                "description": "The unique ID of the vehicle to create."
              }
            ]
          },
          "modelManifestArn": {
            "allOf": [
              {
                "$ref": "#/$defs/arn"
              },
              {
                "description": "The ARN of the vehicle model (model manifest) to create the vehicle from."
              }
            ]
          },
          "decoderManifestArn": {
            "allOf": [
              {
                "$ref": "#/$defs/arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of a decoder manifest associated with the vehicle to create. "
              }
            ]
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/attributesMap"
              },
              {
                "description": "Static information about a vehicle in a key-value pair. For example: <code>\"engine Type\"</code> : <code>\"v6\"</code> "
              }
            ]
          },
          "associationBehavior": {
            "allOf": [
              {
                "$ref": "#/$defs/VehicleAssociationBehavior"
              },
              {
                "description": "An option to create a new Amazon Web Services IoT thing when creating a vehicle, or to validate an existing thing as a vehicle."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "Metadata which can be used to manage the vehicle."
              }
            ]
          }
        },
        "description": "Information about the vehicle to create."
      },
      "vehicleName": {
        "type": "string",
        "pattern": "[a-zA-Z\\d\\-_:]+",
        "minLength": 1,
        "maxLength": 100
      },
      "arn": {
        "type": "string"
      },
      "attributesMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/attributeValue"
        }
      },
      "attributeValue": {
        "type": "string"
      },
      "VehicleAssociationBehavior": {
        "type": "string",
        "enum": [
          "CreateIotThing",
          "ValidateIotThingExists"
        ]
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag's key."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag's value."
              }
            ]
          }
        },
        "description": "A set of key/value pairs that are used to manage the resource."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iotfleetwise.us-east-1.amazonaws.com/#X-Amz-Target=IoTAutobahnControlPlane.BatchCreateVehicle"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**vehicles**",
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
