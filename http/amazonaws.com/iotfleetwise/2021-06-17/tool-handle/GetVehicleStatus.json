{
  "name": "GetVehicleStatus",
  "description": " Retrieves information about the status of a vehicle with any associated campaigns. ",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "IoTAutobahnControlPlane.GetVehicleStatus"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetVehicleStatusRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetVehicleStatusRequest": {
        "type": "object",
        "required": [
          "vehicleName"
        ],
        "title": "GetVehicleStatusRequest",
        "properties": {
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/nextToken"
              },
              {
                "description": "<p>A pagination token for the next set of results.</p> <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next set of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value. </p>"
              }
            ]
          },
          "maxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/maxResults"
              },
              {
                "description": " The maximum number of items to return, between 1 and 100, inclusive. "
              }
            ]
          },
          "vehicleName": {
            "allOf": [
              {
                "$ref": "#/$defs/vehicleName"
              },
              {
                "description": " The ID of the vehicle to retrieve information about. "
              }
            ]
          }
        }
      },
      "nextToken": {
        "type": "string",
        "minLength": 1,
        "maxLength": 4096
      },
      "maxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "vehicleName": {
        "type": "string",
        "pattern": "[a-zA-Z\\d\\-_:]+",
        "minLength": 1,
        "maxLength": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iotfleetwise.us-east-1.amazonaws.com/#X-Amz-Target=IoTAutobahnControlPlane.GetVehicleStatus{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**campaigns**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
