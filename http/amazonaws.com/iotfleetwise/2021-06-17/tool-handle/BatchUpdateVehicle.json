{
  "name": "BatchUpdateVehicle",
  "description": "<p> Updates a group, or batch, of vehicles.</p> <note> <p> You must specify a decoder manifest and a vehicle model (model manifest) for each vehicle. </p> </note> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iot-fleetwise/latest/developerguide/update-vehicles-cli.html\">Update multiple vehicles (AWS CLI)</a> in the <i>Amazon Web Services IoT FleetWise Developer Guide</i>. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "IoTAutobahnControlPlane.BatchUpdateVehicle"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/BatchUpdateVehicleRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "BatchUpdateVehicleRequest": {
        "type": "object",
        "required": [
          "vehicles"
        ],
        "title": "BatchUpdateVehicleRequest",
        "properties": {
          "vehicles": {
            "allOf": [
              {
                "$ref": "#/$defs/updateVehicleRequestItems"
              },
              {
                "description": " A list of information about the vehicles to update. For more information, see the API data type."
              }
            ]
          }
        }
      },
      "updateVehicleRequestItems": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/UpdateVehicleRequestItem"
        },
        "minItems": 1
      },
      "UpdateVehicleRequestItem": {
        "type": "object",
        "required": [
          "vehicleName"
        ],
        "properties": {
          "vehicleName": {
            "allOf": [
              {
                "$ref": "#/$defs/vehicleName"
              },
              {
                "description": "The unique ID of the vehicle to update."
              }
            ]
          },
          "modelManifestArn": {
            "allOf": [
              {
                "$ref": "#/$defs/arn"
              },
              {
                "description": "The ARN of the vehicle model (model manifest) associated with the vehicle to update."
              }
            ]
          },
          "decoderManifestArn": {
            "allOf": [
              {
                "$ref": "#/$defs/arn"
              },
              {
                "description": "The ARN of the signal decoder manifest associated with the vehicle to update."
              }
            ]
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/attributesMap"
              },
              {
                "description": "<p>Static information about a vehicle in a key-value pair. For example:</p> <p> <code>\"engineType\"</code> : <code>\"1.3 L R2\"</code> </p>"
              }
            ]
          },
          "attributeUpdateMode": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateMode"
              },
              {
                "description": "<p>The method the specified attributes will update the existing attributes on the vehicle. Use<code>Overwite</code> to replace the vehicle attributes with the specified attributes. Or use <code>Merge</code> to combine all attributes.</p> <p>This is required if attributes are present in the input.</p>"
              }
            ]
          }
        },
        "description": "Information about the vehicle to update."
      },
      "vehicleName": {
        "type": "string",
        "pattern": "[a-zA-Z\\d\\-_:]+",
        "minLength": 1,
        "maxLength": 100
      },
      "arn": {
        "type": "string"
      },
      "attributesMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/attributeValue"
        }
      },
      "attributeValue": {
        "type": "string"
      },
      "UpdateMode": {
        "type": "string",
        "enum": [
          "Overwrite",
          "Merge"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iotfleetwise.us-east-1.amazonaws.com/#X-Amz-Target=IoTAutobahnControlPlane.BatchUpdateVehicle"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**vehicles**",
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
