{
  "name": "CreateChannel",
  "description": "Used to create a channel. A channel collects data from an MQTT topic and archives the raw, unprocessed messages before publishing the data to a pipeline.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "channelName"
        ],
        "properties": {
          "channelName": {
            "description": "The name of the channel.",
            "type": "string",
            "pattern": "(^(?!_{2}))(^[a-zA-Z0-9_]+$)",
            "minLength": 1,
            "maxLength": 128
          },
          "channelStorage": {
            "description": "Where channel data is stored. You may choose one of <code>serviceManagedS3</code>, <code>customerManagedS3</code> storage. If not specified, the default is <code>serviceManagedS3</code>. This can't be changed after creation of the channel.",
            "type": "object",
            "properties": {
              "serviceManagedS3": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ServiceManagedChannelS3Storage"
                  },
                  {
                    "description": "Used to store channel data in an S3 bucket managed by IoT Analytics. You can't change the choice of S3 storage after the data store is created."
                  }
                ]
              },
              "customerManagedS3": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CustomerManagedChannelS3Storage"
                  },
                  {
                    "description": "Used to store channel data in an S3 bucket that you manage. If customer managed storage is selected, the <code>retentionPeriod</code> parameter is ignored. You can't change the choice of S3 storage after the data store is created."
                  }
                ]
              }
            }
          },
          "retentionPeriod": {
            "description": "How long, in days, message data is kept.",
            "type": "object",
            "properties": {
              "unlimited": {
                "allOf": [
                  {
                    "$ref": "#/$defs/UnlimitedRetentionPeriod"
                  },
                  {
                    "description": "If true, message data is kept indefinitely."
                  }
                ]
              },
              "numberOfDays": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RetentionPeriodInDays"
                  },
                  {
                    "description": "The number of days that message data is kept. The <code>unlimited</code> parameter must be false."
                  }
                ]
              }
            }
          },
          "tags": {
            "description": "Metadata which can be used to manage the channel.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 1,
            "maxItems": 50
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ServiceManagedChannelS3Storage": {
        "type": "object",
        "properties": {},
        "description": "Used to store channel data in an S3 bucket managed by IoT Analytics. You can't change the choice of S3 storage after the data store is created."
      },
      "CustomerManagedChannelS3Storage": {
        "type": "object",
        "required": [
          "bucket",
          "roleArn"
        ],
        "properties": {
          "bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketName"
              },
              {
                "description": "The name of the S3 bucket in which channel data is stored."
              }
            ]
          },
          "keyPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/S3KeyPrefix"
              },
              {
                "description": "(Optional) The prefix used to create the keys of the channel data objects. Each object in an S3 bucket has a key that is its unique identifier in the bucket. Each object in a bucket has exactly one key. The prefix must end with a forward slash (/)."
              }
            ]
          },
          "roleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The ARN of the role that grants IoT Analytics permission to interact with your Amazon S3 resources."
              }
            ]
          }
        },
        "description": "Used to store channel data in an S3 bucket that you manage. If customer-managed storage is selected, the <code>retentionPeriod</code> parameter is ignored. You can't change the choice of S3 storage after the data store is created."
      },
      "BucketName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9.\\-_]*$",
        "minLength": 3,
        "maxLength": 255
      },
      "S3KeyPrefix": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9!_.*'()/{}:-]*/$",
        "minLength": 1,
        "maxLength": 255
      },
      "RoleArn": {
        "type": "string",
        "minLength": 20,
        "maxLength": 2048
      },
      "UnlimitedRetentionPeriod": {
        "type": "boolean"
      },
      "RetentionPeriodInDays": {
        "type": "integer",
        "minimum": 1
      },
      "Tag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag's key."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag's value."
              }
            ]
          }
        },
        "description": "A set of key-value pairs that are used to manage the resource."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "TagValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://iotanalytics.us-east-1.amazonaws.com/channels"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**channelName**",
            "**channelArn**",
            "**retentionPeriod**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
