openapi: 3.0.0
info:
  version: '2021-05-15'
  x-release: v4
  title: Amazon Chime SDK Messaging
  description: 'The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html">Amazon Chime SDK messaging</a>.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: chime-sdk-messaging
  x-aws-signingName: chime
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/chime-sdk-messaging-2021-05-15.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/messaging-chime/'
servers:
  - url: 'http://messaging-chime.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Chime SDK Messaging multi-region endpoint
  - url: 'https://messaging-chime.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Chime SDK Messaging multi-region endpoint
  - url: 'http://messaging-chime.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Chime SDK Messaging endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://messaging-chime.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Chime SDK Messaging endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/channels/{channelArn}/channel-flow#x-amz-chime-bearer':
    put:
      operationId: AssociateChannelFlow
      description: '<p>Associates a channel flow with a channel. Once associated, all messages to that channel go through channel flow processors. To stop processing, use the <code>DisassociateChannelFlow</code> API.</p> <note> <p>Only administrators or channel moderators can associate a channel flow. The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The <code>AppInstanceUserArn</code> of the user making the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ChannelFlowArn
              properties:
                ChannelFlowArn:
                  description: The ARN of the channel flow.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/memberships#operation=batch-create&x-amz-chime-bearer':
    post:
      operationId: BatchCreateChannelMembership
      description: 'Adds a specified number of users and bots to a channel. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateChannelMembershipResponse'
        '480':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '486':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '487':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel to which you're adding users or bots.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - batch-create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MemberArns
              properties:
                Type:
                  description: 'The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.'
                  type: string
                  enum:
                    - DEFAULT
                    - HIDDEN
                MemberArns:
                  description: The ARNs of the members you want to add to the channel. Only <code>AppInstanceUsers</code> and <code>AppInstanceBots</code> can be added as a channel member.
                  type: array
                  items:
                    $ref: '#/components/schemas/ChimeArn'
                  minItems: 1
                  maxItems: 100
                SubChannelId:
                  description: <p>The ID of the SubChannel in the request. </p> <note> <p>Only required when creating membership in a SubChannel for a moderator in an elastic channel.</p> </note>
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 1
                  maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}#operation=channel-flow-callback':
    post:
      operationId: ChannelFlowCallback
      description: '<p>Calls back Amazon Chime SDK messaging with a processing response message. This should be invoked from the processor Lambda. This is a developer API.</p> <p>You can return one of the following processing responses:</p> <ul> <li> <p>Update message content or metadata</p> </li> <li> <p>Deny a message</p> </li> <li> <p>Make no changes to the message</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelFlowCallbackResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - channel-flow-callback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CallbackId
                - ChannelMessage
              properties:
                CallbackId:
                  description: The identifier passed to the processor by the service when invoked. Use the identifier to call back the service.
                  type: string
                  minLength: 32
                  maxLength: 64
                DeleteResource:
                  description: 'When a processor determines that a message needs to be <code>DENIED</code>, pass this parameter with a value of true.'
                  type: boolean
                ChannelMessage:
                  description: Stores information about a callback.
                  type: object
                  properties:
                    MessageId:
                      allOf:
                        - $ref: '#/components/schemas/MessageId'
                        - description: The message ID.
                    Content:
                      allOf:
                        - $ref: '#/components/schemas/NonEmptyContent'
                        - description: 'The message content. For Amazon Lex V2 bot responses, this field holds a list of messages originating from the bot. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
                    Metadata:
                      allOf:
                        - $ref: '#/components/schemas/Metadata'
                        - description: The message metadata.
                    PushNotification:
                      allOf:
                        - $ref: '#/components/schemas/PushNotificationConfiguration'
                        - description: The push notification configuration of the message.
                    MessageAttributes:
                      allOf:
                        - $ref: '#/components/schemas/MessageAttributeMap'
                        - description: 'The attributes for the channel message. For Amazon Lex V2 bot responses, the attributes are mapped to specific fields from the bot. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
                    SubChannelId:
                      allOf:
                        - $ref: '#/components/schemas/SubChannelId'
                        - description: The ID of the SubChannel.
                    ContentType:
                      allOf:
                        - $ref: '#/components/schemas/ContentType'
                        - description: 'The content type of the call-back message. For Amazon Lex V2 bot responses, the content type is <code>application/amz-chime-lex-msgs</code> for success responses and <code>application/amz-chime-lex-error</code> for failure responses. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /channels#x-amz-chime-bearer:
    post:
      operationId: CreateChannel
      description: '<p>Creates a channel to which you can add users and send messages.</p> <p> <b>Restriction</b>: You can''t change a channel''s privacy.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AppInstanceArn
                - Name
                - ClientRequestToken
              properties:
                AppInstanceArn:
                  description: The ARN of the channel request.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
                Name:
                  description: The name of the channel.
                  type: string
                  pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
                  minLength: 1
                  maxLength: 256
                  format: password
                Mode:
                  description: 'The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels.'
                  type: string
                  enum:
                    - UNRESTRICTED
                    - RESTRICTED
                Privacy:
                  description: 'The channel''s privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren''t discoverable by users outside the channel. Public channels are discoverable by anyone in the <code>AppInstance</code>.'
                  type: string
                  enum:
                    - PUBLIC
                    - PRIVATE
                Metadata:
                  description: The metadata of the creation request. Limited to 1KB and UTF-8.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
                ClientRequestToken:
                  description: The client token for the request. An <code>Idempotency</code> token.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 2
                  maxLength: 64
                  format: password
                Tags:
                  description: The tags for the creation request.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 50
                ChannelId:
                  description: The ID of the channel in the request.
                  type: string
                  pattern: '[A-Za-z0-9]([A-Za-z0-9\:\-\_\.\@]{0,62}[A-Za-z0-9])?'
                  minLength: 1
                  maxLength: 64
                  format: password
                MemberArns:
                  description: The ARNs of the channel members in the request.
                  type: array
                  items:
                    $ref: '#/components/schemas/ChimeArn'
                  minItems: 1
                  maxItems: 10
                ModeratorArns:
                  description: The ARNs of the channel moderators in the request.
                  type: array
                  items:
                    $ref: '#/components/schemas/ChimeArn'
                  minItems: 1
                  maxItems: 10
                ElasticChannelConfiguration:
                  description: The attributes required to configure and create an elastic channel. An elastic channel can support a maximum of 1-million members.
                  type: object
                  properties:
                    MaximumSubChannels:
                      allOf:
                        - $ref: '#/components/schemas/MaximumSubChannels'
                        - description: The maximum number of SubChannels that you want to allow in the elastic channel.
                    TargetMembershipsPerSubChannel:
                      allOf:
                        - $ref: '#/components/schemas/TargetMembershipsPerSubChannel'
                        - description: The maximum number of members allowed in a SubChannel.
                    MinimumMembershipPercentage:
                      allOf:
                        - $ref: '#/components/schemas/MinimumMembershipPercentage'
                        - description: The minimum allowed percentage of TargetMembershipsPerSubChannel users. Ceil of the calculated value is used in balancing members among SubChannels of the elastic channel.
                ExpirationSettings:
                  description: Settings that control the interval after which a channel is deleted.
                  type: object
                  properties:
                    ExpirationDays:
                      allOf:
                        - $ref: '#/components/schemas/ExpirationDays'
                        - description: The period in days after which the system automatically deletes a channel.
                    ExpirationCriterion:
                      allOf:
                        - $ref: '#/components/schemas/ExpirationCriterion'
                        - description: The conditions that must be met for a channel to expire.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/bans#x-amz-chime-bearer':
    post:
      operationId: CreateChannelBan
      description: '<p>Permanently bans a member from a channel. Moderators can''t add banned members to a channel. To undo a ban, you first have to <code>DeleteChannelBan</code>, and then <code>CreateChannelMembership</code>. Bans are cleaned up when you delete users or channels.</p> <p>If you ban a user who is already part of a channel, that user is automatically kicked from the channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelBanResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the ban request.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MemberArn
              properties:
                MemberArn:
                  description: The <code>AppInstanceUserArn</code> of the member being banned.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListChannelBans
      description: <p>Lists all the users and bots banned from a particular channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelBansResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of bans that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested bans are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /channel-flows:
    post:
      operationId: CreateChannelFlow
      description: '<p>Creates a channel flow, a container for processors. Processors are AWS Lambda functions that perform actions on chat messages, such as stripping out profanity. You can associate channel flows with channels, and the processors in the channel flow then take action on all messages sent to that channel. This is a developer API.</p> <p>Channel flows process the following items:</p> <ol> <li> <p>New and updated messages</p> </li> <li> <p>Persistent and non-persistent messages</p> </li> <li> <p>The Standard message type</p> </li> </ol> <note> <p>Channel flows don''t process Control or System messages. For more information about the message types provided by Chime SDK messaging, refer to <a href="https://docs.aws.amazon.com/chime/latest/dg/using-the-messaging-sdk.html#msg-types">Message types</a> in the <i>Amazon Chime developer guide</i>.</p> </note>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AppInstanceArn
                - Processors
                - Name
                - ClientRequestToken
              properties:
                AppInstanceArn:
                  description: The ARN of the channel flow request.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
                Processors:
                  description: Information about the processor Lambda functions.
                  type: array
                  items:
                    $ref: '#/components/schemas/Processor'
                  minItems: 1
                  maxItems: 3
                Name:
                  description: The name of the channel flow.
                  type: string
                  pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
                  minLength: 1
                  maxLength: 256
                  format: password
                Tags:
                  description: The tags for the creation request.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 50
                ClientRequestToken:
                  description: The client token for the request. An Idempotency token.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 2
                  maxLength: 64
                  format: password
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/memberships#x-amz-chime-bearer':
    post:
      operationId: CreateChannelMembership
      description: '<p>Adds a member to a channel. The <code>InvitedBy</code> field in <code>ChannelMembership</code> is derived from the request header. A channel member can:</p> <ul> <li> <p>List messages</p> </li> <li> <p>Send messages</p> </li> <li> <p>Receive messages</p> </li> <li> <p>Edit their own messages</p> </li> <li> <p>Leave the channel</p> </li> </ul> <p>Privacy settings impact this action as follows:</p> <ul> <li> <p>Public Channels: You do not need to be a member to list messages, but you must be a member to send messages.</p> </li> <li> <p>Private Channels: You must be a member to list or send messages.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUserArn</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelMembershipResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '487':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '488':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel to which you're adding users.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MemberArn
                - Type
              properties:
                MemberArn:
                  description: The <code>AppInstanceUserArn</code> of the member you want to add to the channel.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
                Type:
                  description: 'The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.'
                  type: string
                  enum:
                    - DEFAULT
                    - HIDDEN
                SubChannelId:
                  description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only required when creating membership in a SubChannel for a moderator in an elastic channel.</p> </note>
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 1
                  maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListChannelMemberships
      description: '<p>Lists all channel memberships in a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note> <p>If you want to list the channels to which a specific app instance user belongs, see the <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_messaging-chime_ListChannelMembershipsForAppInstanceUser.html">ListChannelMembershipsForAppInstanceUser</a> API.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMembershipsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The maximum number of channel memberships that you want returned.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: type
          in: query
          required: false
          description: 'The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are returned as part of <code>ListChannelMemberships</code> if no type is specified. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>.'
          schema:
            type: string
            enum:
              - DEFAULT
              - HIDDEN
        - name: max-results
          in: query
          required: false
          description: The maximum number of channel memberships that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested channel memberships are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: sub-channel-id
          in: query
          required: false
          description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only required when listing a user's memberships in a particular sub-channel of an elastic channel.</p> </note>
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/channels/{channelArn}/moderators#x-amz-chime-bearer':
    post:
      operationId: CreateChannelModerator
      description: '<p>Creates a new <code>ChannelModerator</code>. A channel moderator can:</p> <ul> <li> <p>Add and remove other members of the channel.</p> </li> <li> <p>Add and remove other moderators of the channel.</p> </li> <li> <p>Add and remove user bans for the channel.</p> </li> <li> <p>Redact messages in the channel.</p> </li> <li> <p>List messages in the channel.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>of the user that makes the API call as the value in the header.</p> </note>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelModeratorResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ChannelModeratorArn
              properties:
                ChannelModeratorArn:
                  description: The <code>AppInstanceUserArn</code> of the moderator.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListChannelModerators
      description: <p>Lists all the moderators for a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelModeratorsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of moderators that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested moderators are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/channels/{channelArn}#x-amz-chime-bearer':
    delete:
      operationId: DeleteChannel
      description: <p>Immediately makes a channel and its memberships inaccessible and marks them for deletion. This is an irreversible process.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUserArn</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel being deleted.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannel
      description: <p>Returns the full details of a channel in an Amazon Chime <code>AppInstance</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    put:
      operationId: UpdateChannel
      description: '<p>Update a channel''s attributes.</p> <p> <b>Restriction</b>: You can''t change a channel''s privacy. </p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the channel.
                  type: string
                  pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
                  minLength: 1
                  maxLength: 256
                  format: password
                Mode:
                  description: The mode of the update request.
                  type: string
                  enum:
                    - UNRESTRICTED
                    - RESTRICTED
                Metadata:
                  description: The metadata for the update request.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
  '/channels/{channelArn}/bans/{memberArn}#x-amz-chime-bearer':
    delete:
      operationId: DeleteChannelBan
      description: <p>Removes a member from a channel's ban list.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel from which the <code>AppInstanceUser</code> was banned.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: memberArn
          in: path
          required: true
          description: The ARN of the <code>AppInstanceUser</code> that you want to reinstate.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannelBan
      description: <p>Returns the full details of a channel ban.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelBanResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel from which the user is banned.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: memberArn
          in: path
          required: true
          description: The <code>AppInstanceUserArn</code> of the member being banned.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
  '/channel-flows/{channelFlowArn}':
    delete:
      operationId: DeleteChannelFlow
      description: '<p>Deletes a channel flow, an irreversible process. This is a developer API.</p> <note> <p> This API works only when the channel flow is not associated with any channel. To get a list of all channels that a channel flow is associated with, use the <code>ListChannelsAssociatedWithChannelFlow</code> API. Use the <code>DisassociateChannelFlow</code> API to disassociate a channel flow from all channels. </p> </note>'
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelFlowArn
          in: path
          required: true
          description: The ARN of the channel flow.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannelFlow
      description: Returns the full details of a channel flow in an Amazon Chime <code>AppInstance</code>. This is a developer API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelFlowArn
          in: path
          required: true
          description: The ARN of the channel flow.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    put:
      operationId: UpdateChannelFlow
      description: Updates channel flow attributes. This is a developer API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelFlowArn
          in: path
          required: true
          description: The ARN of the channel flow.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Processors
                - Name
              properties:
                Processors:
                  description: 'Information about the processor Lambda functions '
                  type: array
                  items:
                    $ref: '#/components/schemas/Processor'
                  minItems: 1
                  maxItems: 3
                Name:
                  description: The name of the channel flow.
                  type: string
                  pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
                  minLength: 1
                  maxLength: 256
                  format: password
  '/channels/{channelArn}/memberships/{memberArn}#x-amz-chime-bearer':
    delete:
      operationId: DeleteChannelMembership
      description: <p>Removes a member from a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel from which you want to remove the user.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: memberArn
          in: path
          required: true
          description: The <code>AppInstanceUserArn</code> of the member that you're removing from the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: sub-channel-id
          in: query
          required: false
          description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only for use by moderators.</p> </note>
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannelMembership
      description: <p>Returns the full details of a user's channel membership.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelMembershipResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: memberArn
          in: path
          required: true
          description: The <code>AppInstanceUserArn</code> of the member.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: sub-channel-id
          in: query
          required: false
          description: <p>The ID of the SubChannel in the request. The response contains an <code>ElasticChannelConfiguration</code> object.</p> <note> <p>Only required to get a user’s SubChannel membership details.</p> </note>
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
  '/channels/{channelArn}/messages/{messageId}#x-amz-chime-bearer':
    delete:
      operationId: DeleteChannelMessage
      description: <p>Deletes a channel message. Only admins can perform this action. Deletion makes messages inaccessible immediately. A background process deletes any revisions created by <code>UpdateChannelMessage</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: messageId
          in: path
          required: true
          description: The ID of the message being deleted.
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: sub-channel-id
          in: query
          required: false
          description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only required when deleting messages in a SubChannel that the user belongs to.</p> </note>
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetChannelMessage
      description: <p>Gets the full details of a channel message.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelMessageResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: messageId
          in: path
          required: true
          description: The ID of the message.
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: sub-channel-id
          in: query
          required: false
          description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only required when getting messages in a SubChannel that the user belongs to.</p> </note>
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
    put:
      operationId: UpdateChannelMessage
      description: <p>Updates the content of a message.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelMessageResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: messageId
          in: path
          required: true
          description: The ID string of the message being updated.
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Content
              properties:
                Content:
                  description: 'The content of the channel message. '
                  type: string
                  pattern: '[\s\S]*'
                  minLength: 1
                  format: password
                Metadata:
                  description: The metadata of the message being updated.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
                SubChannelId:
                  description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only required when updating messages in a SubChannel that the user belongs to.</p> </note>
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 1
                  maxLength: 128
                ContentType:
                  description: The content type of the channel message.
                  type: string
                  pattern: '[\s\S]*'
                  minLength: 0
                  maxLength: 45
                  format: password
  '/channels/{channelArn}/moderators/{channelModeratorArn}#x-amz-chime-bearer':
    delete:
      operationId: DeleteChannelModerator
      description: <p>Deletes a channel moderator.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: channelModeratorArn
          in: path
          required: true
          description: The <code>AppInstanceUserArn</code> of the moderator being deleted.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannelModerator
      description: <p>Returns the full details of a single ChannelModerator.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelModeratorResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: channelModeratorArn
          in: path
          required: true
          description: The <code>AppInstanceUserArn</code> of the channel moderator.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
  '/app-instances/{appInstanceArn}/streaming-configurations':
    delete:
      operationId: DeleteMessagingStreamingConfigurations
      description: 'Deletes the streaming configurations for an <code>AppInstance</code>. For more information, see <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/streaming-export.html">Streaming messaging data</a> in the <i>Amazon Chime SDK Developer Guide</i>.'
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the streaming configurations being deleted.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetMessagingStreamingConfigurations
      description: 'Retrieves the data streaming configuration for an <code>AppInstance</code>. For more information, see <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/streaming-export.html">Streaming messaging data</a> in the <i>Amazon Chime SDK Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagingStreamingConfigurationsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the streaming configurations.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    put:
      operationId: PutMessagingStreamingConfigurations
      description: 'Sets the data streaming configuration for an <code>AppInstance</code>. For more information, see <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/streaming-export.html">Streaming messaging data</a> in the <i>Amazon Chime SDK Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMessagingStreamingConfigurationsResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: appInstanceArn
          in: path
          required: true
          description: The ARN of the streaming configuration.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StreamingConfigurations
              properties:
                StreamingConfigurations:
                  description: The streaming configurations.
                  type: array
                  items:
                    $ref: '#/components/schemas/StreamingConfiguration'
                  minItems: 1
                  maxItems: 2
  '/channels/{channelArn}#scope=app-instance-user-membership&app-instance-user-arn&x-amz-chime-bearer':
    get:
      operationId: DescribeChannelMembershipForAppInstanceUser
      description: <p> Returns the details of a channel based on the membership of the specified <code>AppInstanceUser</code> or <code>AppInstanceBot</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelMembershipForAppInstanceUserResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel to which the user belongs.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: app-instance-user-arn
          in: query
          required: true
          description: The ARN of the user or bot in a channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: scope
          in: query
          required: true
          schema:
            type: string
            enum:
              - app-instance-user-membership
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}#scope=app-instance-user-moderated-channel&app-instance-user-arn&x-amz-chime-bearer':
    get:
      operationId: DescribeChannelModeratedByAppInstanceUser
      description: <p>Returns the full details of a channel moderated by the specified <code>AppInstanceUser</code> or <code>AppInstanceBot</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelModeratedByAppInstanceUserResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the moderated channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: app-instance-user-arn
          in: query
          required: true
          description: The ARN of the user or bot in the moderated channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: scope
          in: query
          required: true
          schema:
            type: string
            enum:
              - app-instance-user-moderated-channel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/channel-flow/{channelFlowArn}#x-amz-chime-bearer':
    delete:
      operationId: DisassociateChannelFlow
      description: '<p>Disassociates a channel flow from all its channels. Once disassociated, all messages to that channel stop going through the channel flow processor.</p> <note> <p>Only administrators or channel moderators can disassociate a channel flow.</p> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>'
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '487':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: channelFlowArn
          in: path
          required: true
          description: The ARN of the channel flow.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The <code>AppInstanceUserArn</code> of the user making the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/memberships/{memberArn}/preferences#x-amz-chime-bearer':
    get:
      operationId: GetChannelMembershipPreferences
      description: <p>Gets the membership preferences of an <code>AppInstanceUser</code> or <code>AppInstanceBot</code> for the specified channel. A user or a bot must be a member of the channel and own the membership in order to retrieve membership preferences. Users or bots in the <code>AppInstanceAdmin</code> and channel moderator roles can't retrieve preferences for other users or bots. Banned users or bots can't retrieve membership preferences for the channel from which they are banned.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelMembershipPreferencesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: memberArn
          in: path
          required: true
          description: The <code>AppInstanceUserArn</code> of the member retrieving the preferences.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutChannelMembershipPreferences
      description: <p>Sets the membership preferences of an <code>AppInstanceUser</code> or <code>AppInstanceBot</code> for the specified channel. The user or bot must be a member of the channel. Only the user or bot who owns the membership can set preferences. Users or bots in the <code>AppInstanceAdmin</code> and channel moderator roles can't set preferences for other users. Banned users or bots can't set membership preferences for the channel from which they are banned.</p> <note> <p>The x-amz-chime-bearer request header is mandatory. Use the ARN of an <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChannelMembershipPreferencesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: memberArn
          in: path
          required: true
          description: The ARN of the member setting the preferences.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Preferences
              properties:
                Preferences:
                  description: The channel membership preferences for an <code>AppInstanceUser</code>.
                  type: object
                  properties:
                    PushNotifications:
                      allOf:
                        - $ref: '#/components/schemas/PushNotificationPreferences'
                        - description: The push notification configuration of a message.
  '/channels/{channelArn}/messages/{messageId}#scope=message-status&x-amz-chime-bearer':
    get:
      operationId: GetChannelMessageStatus
      description: '<p>Gets message status for a specified <code>messageId</code>. Use this API to determine the intermediate status of messages going through channel flow processing. The API provides an alternative to retrieving message status if the event was not received because a client wasn''t connected to a websocket. </p> <p>Messages can have any one of these statuses.</p> <dl> <dt>SENT</dt> <dd> <p>Message processed successfully</p> </dd> <dt>PENDING</dt> <dd> <p>Ongoing processing</p> </dd> <dt>FAILED</dt> <dd> <p>Processing failed</p> </dd> <dt>DENIED</dt> <dd> <p>Message denied by the processor</p> </dd> </dl> <note> <ul> <li> <p>This API does not return statuses for denied messages, because we don''t store them once the processor denies them. </p> </li> <li> <p>Only the message sender can invoke this API.</p> </li> <li> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </li> </ul> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelMessageStatusResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: messageId
          in: path
          required: true
          description: The ID of the message.
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The <code>AppInstanceUserArn</code> of the user making the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: sub-channel-id
          in: query
          required: false
          description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only required when getting message status in a SubChannel that the user belongs to.</p> </note>
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: scope
          in: query
          required: true
          schema:
            type: string
            enum:
              - message-status
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /endpoints/messaging-session:
    get:
      operationId: GetMessagingSessionEndpoint
      description: The details of the endpoint for the messaging session.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagingSessionEndpointResponse'
        '480':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /channel-flows#app-instance-arn:
    get:
      operationId: ListChannelFlows
      description: Returns a paginated lists of all the channel flows created under a single Chime. This is a developer API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelFlowsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: app-instance-arn
          in: query
          required: true
          description: The ARN of the app instance.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of channel flows that you want to return.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested channel flows are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /channels#scope=app-instance-user-memberships&x-amz-chime-bearer:
    get:
      operationId: ListChannelMembershipsForAppInstanceUser
      description: <p> Lists all channels that an <code>AppInstanceUser</code> or <code>AppInstanceBot</code> is a part of. Only an <code>AppInstanceAdmin</code> can call the API with a user ARN that is not their own. </p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMembershipsForAppInstanceUserResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: app-instance-user-arn
          in: query
          required: false
          description: The ARN of the user or bot.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of users that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token returned from previous API requests until the number of channel memberships is reached.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: scope
          in: query
          required: true
          schema:
            type: string
            enum:
              - app-instance-user-memberships
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/messages#x-amz-chime-bearer':
    get:
      operationId: ListChannelMessages
      description: '<p>List all the messages in a channel. Returns a paginated list of <code>ChannelMessages</code>. By default, sorted by creation timestamp in descending order.</p> <note> <p>Redacted messages appear in the results as empty, since they are only redacted, not deleted. Deleted messages do not appear in the results. This action always returns the latest version of an edited message.</p> <p>Also, the <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMessagesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: sort-order
          in: query
          required: false
          description: 'The order in which you want messages sorted. Default is Descending, based on time created.'
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - name: not-before
          in: query
          required: false
          description: The initial or starting time stamp for your requested messages.
          schema:
            type: string
            format: date-time
        - name: not-after
          in: query
          required: false
          description: The final or ending time stamp for your requested messages.
          schema:
            type: string
            format: date-time
        - name: max-results
          in: query
          required: false
          description: The maximum number of messages that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested messages are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: sub-channel-id
          in: query
          required: false
          description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only required when listing the messages in a SubChannel that the user belongs to.</p> </note>
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: SendChannelMessage
      description: '<p>Sends a message to a particular channel that the member is a part of.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> <p>Also, <code>STANDARD</code> messages can be up to 4KB in size and contain metadata. Metadata is arbitrary, and you can use it in a variety of ways, such as containing a link to an attachment.</p> <p> <code>CONTROL</code> messages are limited to 30 bytes and do not contain metadata.</p> </note>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendChannelMessageResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Content
                - Type
                - Persistence
                - ClientRequestToken
              properties:
                Content:
                  description: The content of the channel message.
                  type: string
                  pattern: '[\s\S]*'
                  minLength: 1
                  format: password
                Type:
                  description: '<p>The type of message, <code>STANDARD</code> or <code>CONTROL</code>.</p> <p> <code>STANDARD</code> messages can be up to 4KB in size and contain metadata. Metadata is arbitrary, and you can use it in a variety of ways, such as containing a link to an attachment.</p> <p> <code>CONTROL</code> messages are limited to 30 bytes and do not contain metadata.</p>'
                  type: string
                  enum:
                    - STANDARD
                    - CONTROL
                Persistence:
                  description: Boolean that controls whether the message is persisted on the back end. Required.
                  type: string
                  enum:
                    - PERSISTENT
                    - NON_PERSISTENT
                Metadata:
                  description: The optional metadata for each message.
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 1024
                  format: password
                ClientRequestToken:
                  description: The <code>Idempotency</code> token for each client request.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 2
                  maxLength: 64
                  format: password
                PushNotification:
                  description: The push notification configuration of the message.
                  type: object
                  properties:
                    Title:
                      allOf:
                        - $ref: '#/components/schemas/PushNotificationTitle'
                        - description: The title of the push notification.
                    Body:
                      allOf:
                        - $ref: '#/components/schemas/PushNotificationBody'
                        - description: The body of the push notification.
                    Type:
                      allOf:
                        - $ref: '#/components/schemas/PushNotificationType'
                        - description: 'Enum value that indicates the type of the push notification for a message. <code>DEFAULT</code>: Normal mobile push notification. <code>VOIP</code>: VOIP mobile push notification.'
                MessageAttributes:
                  description: 'The attributes for the message, used for message filtering along with a <code>FilterRule</code> defined in the <code>PushNotificationPreferences</code>.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/MessageAttributeValue'
                SubChannelId:
                  description: The ID of the SubChannel in the request.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 1
                  maxLength: 128
                ContentType:
                  description: The content type of the channel message.
                  type: string
                  pattern: '[\s\S]*'
                  minLength: 0
                  maxLength: 45
                  format: password
                Target:
                  description: 'The target of a message. Must be a member of the channel, such as another user, a bot, or the sender. Only the target and the sender can view targeted messages. Only users who can see targeted messages can take actions on them. However, administrators can delete targeted messages that they can’t see. '
                  type: array
                  items:
                    $ref: '#/components/schemas/Target'
                  minItems: 1
                  maxItems: 1
  /channels#app-instance-arn&x-amz-chime-bearer:
    get:
      operationId: ListChannels
      description: <p>Lists all Channels created under a single Chime App as a paginated list. You can specify filters to narrow results.</p> <p class="title"> <b>Functionality &amp; restrictions</b> </p> <ul> <li> <p>Use privacy = <code>PUBLIC</code> to retrieve all public channels in the account.</p> </li> <li> <p>Only an <code>AppInstanceAdmin</code> can set privacy = <code>PRIVATE</code> to list the private channels in an account.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: app-instance-arn
          in: query
          required: true
          description: The ARN of the <code>AppInstance</code>.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: privacy
          in: query
          required: false
          description: 'The privacy setting. <code>PUBLIC</code> retrieves all the public channels. <code>PRIVATE</code> retrieves private channels. Only an <code>AppInstanceAdmin</code> can retrieve private channels. '
          schema:
            type: string
            enum:
              - PUBLIC
              - PRIVATE
        - name: max-results
          in: query
          required: false
          description: The maximum number of channels that you want to return.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested channels are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /channels#scope=channel-flow-associations&channel-flow-arn:
    get:
      operationId: ListChannelsAssociatedWithChannelFlow
      description: 'Lists all channels associated with a specified channel flow. You can associate a channel flow with multiple channels, but you can only associate a channel with one channel flow. This is a developer API.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsAssociatedWithChannelFlowResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channel-flow-arn
          in: query
          required: true
          description: The ARN of the channel flow.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of channels that you want to return.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested channels are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: scope
          in: query
          required: true
          schema:
            type: string
            enum:
              - channel-flow-associations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /channels#scope=app-instance-user-moderated-channels&x-amz-chime-bearer:
    get:
      operationId: ListChannelsModeratedByAppInstanceUser
      description: <p>A list of the channels moderated by an <code>AppInstanceUser</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsModeratedByAppInstanceUserResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: app-instance-user-arn
          in: query
          required: false
          description: The ARN of the user or bot in the moderated channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of channels in the request.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token returned from previous API requests until the number of channels moderated by the user is reached.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: scope
          in: query
          required: true
          schema:
            type: string
            enum:
              - app-instance-user-moderated-channels
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/subchannels#x-amz-chime-bearer':
    get:
      operationId: ListSubChannels
      description: Lists all the SubChannels in an elastic channel when given a channel ID. Available only to the app instance admins and channel moderators of elastic channels.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubChannelsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of elastic channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The <code>AppInstanceUserArn</code> of the user making the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of sub-channels that you want to return.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token passed by previous API calls until all requested sub-channels are returned.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tags#arn:
    get:
      operationId: ListTagsForResource
      description: Lists the tags applied to an Amazon Chime SDK messaging resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: arn
          in: query
          required: true
          description: The ARN of the resource.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/expiration-settings':
    put:
      operationId: PutChannelExpirationSettings
      description: '<p>Sets the number of days before the channel is automatically deleted.</p> <note> <ul> <li> <p>A background process deletes expired channels within 6 hours of expiration. Actual deletion times may vary.</p> </li> <li> <p>Expired channels that have not yet been deleted appear as active, and you can update their expiration settings. The system honors the new settings.</p> </li> <li> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </li> </ul> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChannelExpirationSettingsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExpirationSettings:
                  description: Settings that control the interval after which a channel is deleted.
                  type: object
                  properties:
                    ExpirationDays:
                      allOf:
                        - $ref: '#/components/schemas/ExpirationDays'
                        - description: The period in days after which the system automatically deletes a channel.
                    ExpirationCriterion:
                      allOf:
                        - $ref: '#/components/schemas/ExpirationCriterion'
                        - description: The conditions that must be met for a channel to expire.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/messages/{messageId}#operation=redact&x-amz-chime-bearer':
    post:
      operationId: RedactChannelMessage
      description: '<p>Redacts message content, but not metadata. The message exists in the back end, but the action returns null content, and the state shows as redacted.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedactChannelMessageResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel containing the messages that you want to redact.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: messageId
          in: path
          required: true
          description: The ID of the message being redacted.
          schema:
            type: string
            pattern: '[-_a-zA-Z0-9]*'
            minLength: 1
            maxLength: 128
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - redact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SubChannelId:
                  description: The ID of the SubChannel in the request.
                  type: string
                  pattern: '[-_a-zA-Z0-9]*'
                  minLength: 1
                  maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /channels#operation=search:
    post:
      operationId: SearchChannels
      description: <p>Allows the <code>ChimeBearer</code> to search channels by channel members. Users or bots can search across the channels that they belong to. Users in the <code>AppInstanceAdmin</code> role can search across all channels.</p> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchChannelsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: x-amz-chime-bearer
          in: header
          required: false
          description: The <code>AppInstanceUserArn</code> of the user making the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: max-results
          in: query
          required: false
          description: The maximum number of channels that you want returned.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: next-token
          in: query
          required: false
          description: The token returned from previous API requests until the number of channels is reached.
          schema:
            type: string
            pattern: .*
            minLength: 0
            maxLength: 2048
            format: password
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Fields
              properties:
                Fields:
                  description: A list of the <code>Field</code> objects in the channel being searched.
                  type: array
                  items:
                    $ref: '#/components/schemas/SearchField'
                  minItems: 1
                  maxItems: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tags#operation=tag-resource:
    post:
      operationId: TagResource
      description: Applies the specified tags to the specified Amazon Chime SDK messaging resource.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - tag-resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceARN
                - Tags
              properties:
                ResourceARN:
                  description: The resource ARN.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
                Tags:
                  description: The tag key-value pairs.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tags#operation=untag-resource:
    post:
      operationId: UntagResource
      description: Removes the specified tags from the specified Amazon Chime SDK messaging resource.
      responses:
        '204':
          description: Success
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '483':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - untag-resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceARN
                - TagKeys
              properties:
                ResourceARN:
                  description: The resource ARN.
                  type: string
                  pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
                  minLength: 5
                  maxLength: 1600
                TagKeys:
                  description: The tag keys.
                  type: array
                  items:
                    $ref: '#/components/schemas/TagKey'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/channels/{channelArn}/readMarker#x-amz-chime-bearer':
    put:
      operationId: UpdateChannelReadMarker
      description: <p>The details of the time when a user last read messages in a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelReadMarkerResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: UnauthorizedClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
        '484':
          description: ThrottledClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: channelArn
          in: path
          required: true
          description: The ARN of the channel.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
        - name: x-amz-chime-bearer
          in: header
          required: true
          description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.
          schema:
            type: string
            pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
            minLength: 5
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BadRequestException: {}
    ForbiddenException: {}
    NotFoundException: {}
    UnauthorizedClientException: {}
    ConflictException: {}
    ThrottledClientException: {}
    ServiceUnavailableException: {}
    ServiceFailureException: {}
    BatchCreateChannelMembershipResponse:
      type: object
      properties:
        BatchChannelMemberships:
          allOf:
            - $ref: '#/components/schemas/BatchChannelMemberships'
            - description: The list of channel memberships in the response.
        Errors:
          allOf:
            - $ref: '#/components/schemas/BatchCreateChannelMembershipErrors'
            - description: 'If the action fails for one or more of the memberships in the request, a list of the memberships is returned, along with error codes and error messages.'
    ChimeArn:
      type: string
      pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
      minLength: 5
      maxLength: 1600
    ResourceLimitExceededException: {}
    ChannelFlowCallbackResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        CallbackId:
          allOf:
            - $ref: '#/components/schemas/CallbackIdType'
            - description: The call back ID passed in the request.
    MessageId:
      type: string
      pattern: '[-_a-zA-Z0-9]*'
      minLength: 1
      maxLength: 128
    NonEmptyContent:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      format: password
    Metadata:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
      format: password
    PushNotificationConfiguration:
      type: object
      properties:
        Title:
          allOf:
            - $ref: '#/components/schemas/PushNotificationTitle'
            - description: The title of the push notification.
        Body:
          allOf:
            - $ref: '#/components/schemas/PushNotificationBody'
            - description: The body of the push notification.
        Type:
          allOf:
            - $ref: '#/components/schemas/PushNotificationType'
            - description: 'Enum value that indicates the type of the push notification for a message. <code>DEFAULT</code>: Normal mobile push notification. <code>VOIP</code>: VOIP mobile push notification.'
      description: The push notification configuration of the message.
    MessageAttributeMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MessageAttributeValue'
    SubChannelId:
      type: string
      pattern: '[-_a-zA-Z0-9]*'
      minLength: 1
      maxLength: 128
    ContentType:
      type: string
      pattern: '[\s\S]*'
      minLength: 0
      maxLength: 45
      format: password
    CreateChannelResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/TagKey'
            - description: The key in a tag.
        Value:
          allOf:
            - $ref: '#/components/schemas/TagValue'
            - description: The value in a tag.
      description: A tag object containing a key-value pair.
    MaximumSubChannels:
      type: integer
      minimum: 2
    TargetMembershipsPerSubChannel:
      type: integer
      minimum: 2
    MinimumMembershipPercentage:
      type: integer
      minimum: 1
      maximum: 40
    ExpirationDays:
      type: integer
      minimum: 1
      maximum: 5475
    ExpirationCriterion:
      type: string
      enum:
        - CREATED_TIMESTAMP
        - LAST_MESSAGE_TIMESTAMP
    CreateChannelBanResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the response to the ban request.
        Member:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The <code>ChannelArn</code> and <code>BannedIdentity</code> of the member in the ban response.
    CreateChannelFlowResponse:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel flow.
    Processor:
      type: object
      required:
        - Name
        - Configuration
        - ExecutionOrder
        - FallbackAction
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyResourceName'
            - description: The name of the channel flow.
        Configuration:
          allOf:
            - $ref: '#/components/schemas/ProcessorConfiguration'
            - description: The information about the type of processor and its identifier.
        ExecutionOrder:
          allOf:
            - $ref: '#/components/schemas/ChannelFlowExecutionOrder'
            - description: 'The sequence in which processors run. If you have multiple processors in a channel flow, message processing goes through each processor in the sequence. The value determines the sequence. At this point, we support only 1 processor within a flow.'
        FallbackAction:
          allOf:
            - $ref: '#/components/schemas/FallbackAction'
            - description: 'Determines whether to continue with message processing or stop it in cases where communication with a processor fails. If a processor has a fallback action of <code>ABORT</code> and communication with it fails, the processor sets the message status to <code>FAILED</code> and does not send the message to any recipients. Note that if the last processor in the channel flow sequence has a fallback action of <code>CONTINUE</code> and communication with the processor fails, then the message is considered processed and sent to recipients of the channel.'
      description: The information about a processor in a channel flow.
    CreateChannelMembershipResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        Member:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The ARN and metadata of the member being added.
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The ID of the SubChannel in the response.
    CreateChannelModeratorResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        ChannelModerator:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The ARNs of the channel and the moderator.
    DescribeChannelResponse:
      type: object
      properties:
        Channel:
          allOf:
            - $ref: '#/components/schemas/Channel'
            - description: The channel details.
    DescribeChannelBanResponse:
      type: object
      properties:
        ChannelBan:
          allOf:
            - $ref: '#/components/schemas/ChannelBan'
            - description: The details of the ban.
    DescribeChannelFlowResponse:
      type: object
      properties:
        ChannelFlow:
          allOf:
            - $ref: '#/components/schemas/ChannelFlow'
            - description: The channel flow details.
    DescribeChannelMembershipResponse:
      type: object
      properties:
        ChannelMembership:
          allOf:
            - $ref: '#/components/schemas/ChannelMembership'
            - description: The details of the membership.
    DescribeChannelMembershipForAppInstanceUserResponse:
      type: object
      properties:
        ChannelMembership:
          allOf:
            - $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummary'
            - description: The channel to which a user belongs.
    DescribeChannelModeratedByAppInstanceUserResponse:
      type: object
      properties:
        Channel:
          allOf:
            - $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummary'
            - description: The moderated channel.
    DescribeChannelModeratorResponse:
      type: object
      properties:
        ChannelModerator:
          allOf:
            - $ref: '#/components/schemas/ChannelModerator'
            - description: The details of the channel moderator.
    GetChannelMembershipPreferencesResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        Member:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The details of a user.
        Preferences:
          allOf:
            - $ref: '#/components/schemas/ChannelMembershipPreferences'
            - description: The channel membership preferences for an <code>AppInstanceUser</code> .
    GetChannelMessageResponse:
      type: object
      properties:
        ChannelMessage:
          allOf:
            - $ref: '#/components/schemas/ChannelMessage'
            - description: The details of and content in the message.
    GetChannelMessageStatusResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/ChannelMessageStatusStructure'
            - description: The message status and details.
    GetMessagingSessionEndpointResponse:
      type: object
      properties:
        Endpoint:
          allOf:
            - $ref: '#/components/schemas/MessagingSessionEndpoint'
            - description: The endpoint returned in the response.
    GetMessagingStreamingConfigurationsResponse:
      type: object
      properties:
        StreamingConfigurations:
          allOf:
            - $ref: '#/components/schemas/StreamingConfigurationList'
            - description: The streaming settings.
    ListChannelBansResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token passed by previous API calls until all requested bans are returned.
        ChannelBans:
          allOf:
            - $ref: '#/components/schemas/ChannelBanSummaryList'
            - description: The information for each requested ban.
    ListChannelFlowsResponse:
      type: object
      properties:
        ChannelFlows:
          allOf:
            - $ref: '#/components/schemas/ChannelFlowSummaryList'
            - description: The information about each channel flow.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token passed by previous API calls until all requested channels are returned.
    ListChannelMembershipsResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        ChannelMemberships:
          allOf:
            - $ref: '#/components/schemas/ChannelMembershipSummaryList'
            - description: The information for the requested channel memberships.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token passed by previous API calls until all requested channel memberships are returned.
    ListChannelMembershipsForAppInstanceUserResponse:
      type: object
      properties:
        ChannelMemberships:
          allOf:
            - $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummaryList'
            - description: The information for the requested channel memberships.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token passed by previous API calls until all requested users are returned.
    ListChannelMessagesResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel containing the requested messages.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token passed by previous API calls until all requested messages are returned.
        ChannelMessages:
          allOf:
            - $ref: '#/components/schemas/ChannelMessageSummaryList'
            - description: 'The information about, and content of, each requested message.'
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The ID of the SubChannel in the response.
    ListChannelModeratorsResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token passed by previous API calls until all requested moderators are returned.
        ChannelModerators:
          allOf:
            - $ref: '#/components/schemas/ChannelModeratorSummaryList'
            - description: The information about and names of each moderator.
    ListChannelsResponse:
      type: object
      properties:
        Channels:
          allOf:
            - $ref: '#/components/schemas/ChannelSummaryList'
            - description: The information about each channel.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token returned from previous API requests until the number of channels is reached.
    ListChannelsAssociatedWithChannelFlowResponse:
      type: object
      properties:
        Channels:
          allOf:
            - $ref: '#/components/schemas/ChannelAssociatedWithFlowSummaryList'
            - description: The information about each channel.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token passed by previous API calls until all requested channels are returned.
    ListChannelsModeratedByAppInstanceUserResponse:
      type: object
      properties:
        Channels:
          allOf:
            - $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummaryList'
            - description: The moderated channels in the request.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token returned from previous API requests until the number of channels moderated by the user is reached.
    ListSubChannelsResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of elastic channel.
        SubChannels:
          allOf:
            - $ref: '#/components/schemas/SubChannelSummaryList'
            - description: The information about each sub-channel.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token passed by previous API calls until all requested sub-channels are returned.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tag key-value pairs.
    PutChannelExpirationSettingsResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The channel ARN.
        ExpirationSettings:
          allOf:
            - $ref: '#/components/schemas/ExpirationSettings'
            - description: Settings that control the interval after which a channel is deleted.
    PutChannelMembershipPreferencesResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        Member:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The details of a user.
        Preferences:
          allOf:
            - $ref: '#/components/schemas/ChannelMembershipPreferences'
            - description: The ARN and metadata of the member being added.
    PushNotificationPreferences:
      type: object
      required:
        - AllowNotifications
      properties:
        AllowNotifications:
          allOf:
            - $ref: '#/components/schemas/AllowNotifications'
            - description: 'Enum value that indicates which push notifications to send to the requested member of a channel. <code>ALL</code> sends all push notifications, <code>NONE</code> sends no push notifications, <code>FILTERED</code> sends only filtered push notifications. '
        FilterRule:
          allOf:
            - $ref: '#/components/schemas/FilterRule'
            - description: The simple JSON object used to send a subset of a push notification to the requested member.
      description: The channel membership preferences for push notification.
    PutMessagingStreamingConfigurationsResponse:
      type: object
      properties:
        StreamingConfigurations:
          allOf:
            - $ref: '#/components/schemas/StreamingConfigurationList'
            - description: The requested streaming configurations.
    StreamingConfiguration:
      type: object
      required:
        - DataType
        - ResourceArn
      properties:
        DataType:
          allOf:
            - $ref: '#/components/schemas/MessagingDataType'
            - description: The data type of the configuration.
        ResourceArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: 'The ARN of the resource in the configuration. '
      description: The configuration for connecting a messaging stream to Amazon Kinesis.
    RedactChannelMessageResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel containing the messages that you want to redact.
        MessageId:
          allOf:
            - $ref: '#/components/schemas/MessageId'
            - description: The ID of the message being redacted.
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: <p>The ID of the SubChannel in the response.</p> <note> <p>Only required when redacting messages in a SubChannel that the user belongs to.</p> </note>
    SearchChannelsResponse:
      type: object
      properties:
        Channels:
          allOf:
            - $ref: '#/components/schemas/ChannelSummaryList'
            - description: A list of the channels in the request.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: The token returned from previous API responses until the number of channels is reached.
    SearchField:
      type: object
      required:
        - Key
        - Values
        - Operator
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/SearchFieldKey'
            - description: 'An <code>enum</code> value that indicates the key to search the channel on. <code>MEMBERS</code> allows you to search channels based on memberships. You can use it with the <code>EQUALS</code> operator to get channels whose memberships are equal to the specified values, and with the <code>INCLUDES</code> operator to get channels whose memberships include the specified values.'
        Values:
          allOf:
            - $ref: '#/components/schemas/SearchFieldValues'
            - description: '<p>The values that you want to search for, a list of strings. The values must be <code>AppInstanceUserArns</code> specified as a list of strings.</p> <note> <p>This operation isn''t supported for <code>AppInstanceUsers</code> with large number of memberships.</p> </note>'
        Operator:
          allOf:
            - $ref: '#/components/schemas/SearchFieldOperator'
            - description: 'The operator used to compare field values, currently <code>EQUALS</code> or <code>INCLUDES</code>. Use the <code>EQUALS</code> operator to find channels whose memberships equal the specified values. Use the <code>INCLUDES</code> operator to find channels whose memberships include the specified values.'
      description: A <code>Field</code> of the channel that you want to search.
    SendChannelMessageResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        MessageId:
          allOf:
            - $ref: '#/components/schemas/MessageId'
            - description: The ID string assigned to each message.
        Status:
          allOf:
            - $ref: '#/components/schemas/ChannelMessageStatusStructure'
            - description: The status of the channel message.
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The ID of the SubChannel in the response.
    PushNotificationTitle:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 50
      format: password
    PushNotificationBody:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      maxLength: 150
      format: password
    PushNotificationType:
      type: string
      enum:
        - DEFAULT
        - VOIP
    MessageAttributeValue:
      type: object
      properties:
        StringValues:
          allOf:
            - $ref: '#/components/schemas/MessageAttributeStringValues'
            - description: The strings in a message attribute value.
      description: A list of message attribute values.
    Target:
      type: object
      properties:
        MemberArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the target channel member.
      description: 'The target of a message, a sender, a user, or a bot. Only the target and the sender can view targeted messages. Only users who can see targeted messages can take actions on them. However, administrators can delete targeted messages that they can’t see.'
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
      format: password
    UpdateChannelResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
    UpdateChannelFlowResponse:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel flow.
    UpdateChannelMessageResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        MessageId:
          allOf:
            - $ref: '#/components/schemas/MessageId'
            - description: The ID string of the message being updated.
        Status:
          allOf:
            - $ref: '#/components/schemas/ChannelMessageStatusStructure'
            - description: The status of the message update.
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The ID of the SubChannel in the response.
    UpdateChannelReadMarkerResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
    AllowNotifications:
      type: string
      enum:
        - ALL
        - NONE
        - FILTERED
    ChannelMembershipType:
      type: string
      enum:
        - DEFAULT
        - HIDDEN
    Timestamp:
      type: string
      format: date-time
    AppInstanceUserMembershipSummary:
      type: object
      properties:
        Type:
          allOf:
            - $ref: '#/components/schemas/ChannelMembershipType'
            - description: The type of <code>ChannelMembership</code>.
        ReadMarkerTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which an <code>AppInstanceUser</code> last marked a channel as read.
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The ID of the SubChannel that the <code>AppInstanceUser</code> is a member of.
      description: Summary of the membership details of an <code>AppInstanceUser</code>.
    AssociateChannelFlowRequest:
      type: object
      required:
        - ChannelFlowArn
      title: AssociateChannelFlowRequest
      properties:
        ChannelFlowArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel flow.
    Identity:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN in an Identity.
        Name:
          allOf:
            - $ref: '#/components/schemas/ResourceName'
            - description: The name in an Identity.
      description: The details of a user or bot.
    Members:
      type: array
      items:
        $ref: '#/components/schemas/Identity'
    BatchChannelMemberships:
      type: object
      properties:
        InvitedBy:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The identifier of the member who invited another member.
        Type:
          allOf:
            - $ref: '#/components/schemas/ChannelMembershipType'
            - description: The membership types set for the channel members.
        Members:
          allOf:
            - $ref: '#/components/schemas/Members'
            - description: The users successfully added to the request.
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel to which you're adding members.
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The ID of the SubChannel.
      description: 'The membership information, including member ARNs, the channel ARN, and membership types.'
    ErrorCode:
      type: string
      enum:
        - BadRequest
        - Conflict
        - Forbidden
        - NotFound
        - PreconditionFailed
        - ResourceLimitExceeded
        - ServiceFailure
        - AccessDenied
        - ServiceUnavailable
        - Throttled
        - Throttling
        - Unauthorized
        - Unprocessable
        - VoiceConnectorGroupAssociationsExist
        - PhoneNumberAssociationsExist
    String:
      type: string
    BatchCreateChannelMembershipError:
      type: object
      properties:
        MemberArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The <code>AppInstanceUserArn</code> of the member that the service couldn't add.
        ErrorCode:
          allOf:
            - $ref: '#/components/schemas/ErrorCode'
            - description: The error code.
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message.
      description: 'A list of failed member ARNs, error codes, and error messages.'
    BatchCreateChannelMembershipErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchCreateChannelMembershipError'
    MemberArns:
      type: array
      items:
        $ref: '#/components/schemas/ChimeArn'
      minItems: 1
      maxItems: 100
    BatchCreateChannelMembershipRequest:
      type: object
      required:
        - MemberArns
      title: BatchCreateChannelMembershipRequest
      properties:
        Type:
          allOf:
            - $ref: '#/components/schemas/ChannelMembershipType'
            - description: 'The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.'
        MemberArns:
          allOf:
            - $ref: '#/components/schemas/MemberArns'
            - description: The ARNs of the members you want to add to the channel. Only <code>AppInstanceUsers</code> and <code>AppInstanceBots</code> can be added as a channel member.
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: <p>The ID of the SubChannel in the request. </p> <note> <p>Only required when creating membership in a SubChannel for a moderator in an elastic channel.</p> </note>
    CallbackIdType:
      type: string
      minLength: 32
      maxLength: 64
    NonEmptyResourceName:
      type: string
      pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
      minLength: 1
      maxLength: 256
      format: password
    ChannelMode:
      type: string
      enum:
        - UNRESTRICTED
        - RESTRICTED
    ChannelPrivacy:
      type: string
      enum:
        - PUBLIC
        - PRIVATE
    ElasticChannelConfiguration:
      type: object
      required:
        - MaximumSubChannels
        - TargetMembershipsPerSubChannel
        - MinimumMembershipPercentage
      properties:
        MaximumSubChannels:
          allOf:
            - $ref: '#/components/schemas/MaximumSubChannels'
            - description: The maximum number of SubChannels that you want to allow in the elastic channel.
        TargetMembershipsPerSubChannel:
          allOf:
            - $ref: '#/components/schemas/TargetMembershipsPerSubChannel'
            - description: The maximum number of members allowed in a SubChannel.
        MinimumMembershipPercentage:
          allOf:
            - $ref: '#/components/schemas/MinimumMembershipPercentage'
            - description: The minimum allowed percentage of TargetMembershipsPerSubChannel users. Ceil of the calculated value is used in balancing members among SubChannels of the elastic channel.
      description: The attributes required to configure and create an elastic channel. An elastic channel can support a maximum of 1-million members.
    ExpirationSettings:
      type: object
      required:
        - ExpirationDays
        - ExpirationCriterion
      properties:
        ExpirationDays:
          allOf:
            - $ref: '#/components/schemas/ExpirationDays'
            - description: The period in days after which the system automatically deletes a channel.
        ExpirationCriterion:
          allOf:
            - $ref: '#/components/schemas/ExpirationCriterion'
            - description: The conditions that must be met for a channel to expire.
      description: Settings that control the interval after which a channel is deleted.
    Channel:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyResourceName'
            - description: The name of a channel.
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of a channel.
        Mode:
          allOf:
            - $ref: '#/components/schemas/ChannelMode'
            - description: The mode of the channel.
        Privacy:
          allOf:
            - $ref: '#/components/schemas/ChannelPrivacy'
            - description: The channel's privacy setting.
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - description: The channel's metadata.
        CreatedBy:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The <code>AppInstanceUser</code> who created the channel.
        CreatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the <code>AppInstanceUser</code> created the channel.
        LastMessageTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which a member sent the last message in the channel.
        LastUpdatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which a channel was last updated.
        ChannelFlowArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel flow.
        ElasticChannelConfiguration:
          allOf:
            - $ref: '#/components/schemas/ElasticChannelConfiguration'
            - description: The attributes required to configure and create an elastic channel. An elastic channel can support a maximum of 1-million members.
        ExpirationSettings:
          allOf:
            - $ref: '#/components/schemas/ExpirationSettings'
            - description: Settings that control when a channel expires.
      description: The details of a channel.
    ChannelAssociatedWithFlowSummary:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyResourceName'
            - description: The name of the channel flow.
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        Mode:
          allOf:
            - $ref: '#/components/schemas/ChannelMode'
            - description: The mode of the channel.
        Privacy:
          allOf:
            - $ref: '#/components/schemas/ChannelPrivacy'
            - description: The channel's privacy setting.
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - description: The channel's metadata.
      description: Summary of details of a channel associated with channel flow.
    ChannelAssociatedWithFlowSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelAssociatedWithFlowSummary'
    ChannelBan:
      type: object
      properties:
        Member:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The member being banned from the channel.
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel from which a member is being banned.
        CreatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the ban was created.
        CreatedBy:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The <code>AppInstanceUser</code> who created the ban.
      description: The details of a channel ban.
    ChannelBanSummary:
      type: object
      properties:
        Member:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The member being banned from a channel.
      description: Summary of the details of a <code>ChannelBan</code>.
    ChannelBanSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelBanSummary'
    ProcessorList:
      type: array
      items:
        $ref: '#/components/schemas/Processor'
      minItems: 1
      maxItems: 3
    ChannelFlow:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel flow.
        Processors:
          allOf:
            - $ref: '#/components/schemas/ProcessorList'
            - description: Information about the processor Lambda functions.
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyResourceName'
            - description: The name of the channel flow.
        CreatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the channel flow was created.
        LastUpdatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which a channel flow was updated.
      description: The details of a channel flow.
    NonNullableBoolean:
      type: boolean
    ChannelMessageCallback:
      type: object
      required:
        - MessageId
      properties:
        MessageId:
          allOf:
            - $ref: '#/components/schemas/MessageId'
            - description: The message ID.
        Content:
          allOf:
            - $ref: '#/components/schemas/NonEmptyContent'
            - description: 'The message content. For Amazon Lex V2 bot responses, this field holds a list of messages originating from the bot. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - description: The message metadata.
        PushNotification:
          allOf:
            - $ref: '#/components/schemas/PushNotificationConfiguration'
            - description: The push notification configuration of the message.
        MessageAttributes:
          allOf:
            - $ref: '#/components/schemas/MessageAttributeMap'
            - description: 'The attributes for the channel message. For Amazon Lex V2 bot responses, the attributes are mapped to specific fields from the bot. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The ID of the SubChannel.
        ContentType:
          allOf:
            - $ref: '#/components/schemas/ContentType'
            - description: 'The content type of the call-back message. For Amazon Lex V2 bot responses, the content type is <code>application/amz-chime-lex-msgs</code> for success responses and <code>application/amz-chime-lex-error</code> for failure responses. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
      description: Stores information about a callback.
    ChannelFlowCallbackRequest:
      type: object
      required:
        - CallbackId
        - ChannelMessage
      title: ChannelFlowCallbackRequest
      properties:
        CallbackId:
          allOf:
            - $ref: '#/components/schemas/CallbackIdType'
            - description: The identifier passed to the processor by the service when invoked. Use the identifier to call back the service.
        DeleteResource:
          allOf:
            - $ref: '#/components/schemas/NonNullableBoolean'
            - description: 'When a processor determines that a message needs to be <code>DENIED</code>, pass this parameter with a value of true.'
        ChannelMessage:
          allOf:
            - $ref: '#/components/schemas/ChannelMessageCallback'
            - description: Stores information about the processed message.
    ChannelFlowExecutionOrder:
      type: integer
      minimum: 1
      maximum: 3
    ChannelFlowSummary:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel flow.
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyResourceName'
            - description: The name of the channel flow.
        Processors:
          allOf:
            - $ref: '#/components/schemas/ProcessorList'
            - description: Information about the processor Lambda functions.
      description: Summary of details of a channel flow.
    ChannelFlowSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelFlowSummary'
    ChannelId:
      type: string
      pattern: '[A-Za-z0-9]([A-Za-z0-9\:\-\_\.\@]{0,62}[A-Za-z0-9])?'
      minLength: 1
      maxLength: 64
      format: password
    ChannelMemberArns:
      type: array
      items:
        $ref: '#/components/schemas/ChimeArn'
      minItems: 1
      maxItems: 10
    ChannelMembership:
      type: object
      properties:
        InvitedBy:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The identifier of the member who invited another member.
        Type:
          allOf:
            - $ref: '#/components/schemas/ChannelMembershipType'
            - description: The membership type set for the channel member.
        Member:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The data of the channel member.
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the member's channel.
        CreatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the channel membership was created.
        LastUpdatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which a channel membership was last updated.
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The ID of the SubChannel that a user belongs to.
      description: The details of a channel member.
    ChannelSummary:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyResourceName'
            - description: The name of the channel.
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        Mode:
          allOf:
            - $ref: '#/components/schemas/ChannelMode'
            - description: The mode of the channel.
        Privacy:
          allOf:
            - $ref: '#/components/schemas/ChannelPrivacy'
            - description: The privacy setting of the channel.
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - description: The metadata of the channel.
        LastMessageTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the last persistent message visible to the caller in a channel was sent.
      description: Summary of the details of a <code>Channel</code>.
    ChannelMembershipForAppInstanceUserSummary:
      type: object
      properties:
        ChannelSummary:
          allOf:
            - $ref: '#/components/schemas/ChannelSummary'
            - description: Returns the channel data for an <code>AppInstance</code>.
        AppInstanceUserMembershipSummary:
          allOf:
            - $ref: '#/components/schemas/AppInstanceUserMembershipSummary'
            - description: Returns the channel membership data for an <code>AppInstance</code>.
      description: Summary of the channel membership details of an <code>AppInstanceUser</code>.
    ChannelMembershipForAppInstanceUserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummary'
    ChannelMembershipPreferences:
      type: object
      properties:
        PushNotifications:
          allOf:
            - $ref: '#/components/schemas/PushNotificationPreferences'
            - description: The push notification configuration of a message.
      description: The channel membership preferences for an <code>AppInstanceUser</code>.
    ChannelMembershipSummary:
      type: object
      properties:
        Member:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: A member's summary data.
      description: Summary of the details of a <code>ChannelMembership</code>.
    ChannelMembershipSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelMembershipSummary'
    Content:
      type: string
      pattern: '[\s\S]*'
      minLength: 0
      maxLength: 4096
      format: password
    ChannelMessageType:
      type: string
      enum:
        - STANDARD
        - CONTROL
    ChannelMessagePersistenceType:
      type: string
      enum:
        - PERSISTENT
        - NON_PERSISTENT
    ChannelMessageStatusStructure:
      type: object
      properties:
        Value:
          allOf:
            - $ref: '#/components/schemas/ChannelMessageStatus'
            - description: The message status value.
        Detail:
          allOf:
            - $ref: '#/components/schemas/StatusDetail'
            - description: Contains more details about the message status.
      description: Stores information about a message status.
    TargetList:
      type: array
      items:
        $ref: '#/components/schemas/Target'
      minItems: 1
      maxItems: 1
    ChannelMessage:
      type: object
      properties:
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel.
        MessageId:
          allOf:
            - $ref: '#/components/schemas/MessageId'
            - description: The ID of a message.
        Content:
          allOf:
            - $ref: '#/components/schemas/Content'
            - description: 'The content of the channel message. For Amazon Lex V2 bot responses, this field holds a list of messages originating from the bot. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - description: The message metadata.
        Type:
          allOf:
            - $ref: '#/components/schemas/ChannelMessageType'
            - description: The message type.
        CreatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the message was created.
        LastEditedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which a message was edited.
        LastUpdatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which a message was updated.
        Sender:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The message sender.
        Redacted:
          allOf:
            - $ref: '#/components/schemas/NonNullableBoolean'
            - description: Hides the content of a message.
        Persistence:
          allOf:
            - $ref: '#/components/schemas/ChannelMessagePersistenceType'
            - description: The persistence setting for a channel message.
        Status:
          allOf:
            - $ref: '#/components/schemas/ChannelMessageStatusStructure'
            - description: The status of the channel message.
        MessageAttributes:
          allOf:
            - $ref: '#/components/schemas/MessageAttributeMap'
            - description: 'The attributes for the channel message. For Amazon Lex V2 bot responses, the attributes are mapped to specific fields from the bot. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The ID of the SubChannel.
        ContentType:
          allOf:
            - $ref: '#/components/schemas/ContentType'
            - description: 'The content type of the channel message. For Amazon Lex V2 bot responses, the content type is <code>application/amz-chime-lex-msgs</code> for success responses and <code>application/amz-chime-lex-error</code> for failure responses. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
        Target:
          allOf:
            - $ref: '#/components/schemas/TargetList'
            - description: 'The target of a message, a sender, a user, or a bot. Only the target and the sender can view targeted messages. Only users who can see targeted messages can take actions on them. However, administrators can delete targeted messages that they can’t see.'
      description: The details of a message in a channel.
    ChannelMessageStatus:
      type: string
      enum:
        - SENT
        - PENDING
        - FAILED
        - DENIED
    StatusDetail:
      type: string
      pattern: '[\s\S]*'
      minLength: 0
      maxLength: 256
    ChannelMessageSummary:
      type: object
      properties:
        MessageId:
          allOf:
            - $ref: '#/components/schemas/MessageId'
            - description: The ID of the message.
        Content:
          allOf:
            - $ref: '#/components/schemas/Content'
            - description: 'The content of the channel message. For Amazon Lex V2 bot responses, this field holds a list of messages originating from the bot. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - description: The metadata of the message.
        Type:
          allOf:
            - $ref: '#/components/schemas/ChannelMessageType'
            - description: The type of message.
        CreatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the message summary was created.
        LastUpdatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which a message was last updated.
        LastEditedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which a message was last edited.
        Sender:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The message sender.
        Redacted:
          allOf:
            - $ref: '#/components/schemas/NonNullableBoolean'
            - description: Indicates whether a message was redacted.
        Status:
          allOf:
            - $ref: '#/components/schemas/ChannelMessageStatusStructure'
            - description: 'The message status. The status value is <code>SENT</code> for messages sent to a channel without a channel flow. For channels associated with channel flow, the value determines the processing stage.'
        MessageAttributes:
          allOf:
            - $ref: '#/components/schemas/MessageAttributeMap'
            - description: 'The attributes for the channel message. For Amazon Lex V2 bot responses, the attributes are mapped to specific fields from the bot. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
        ContentType:
          allOf:
            - $ref: '#/components/schemas/ContentType'
            - description: 'The content type of the channel message listed in the summary. For Amazon Lex V2 bot responses, the content type is <code>application/amz-chime-lex-msgs</code> for success responses and <code>application/amz-chime-lex-error</code> for failure responses. For more information, refer to <a href="https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>.'
        Target:
          allOf:
            - $ref: '#/components/schemas/TargetList'
            - description: 'The target of a message, a sender, a user, or a bot. Only the target and the sender can view targeted messages. Only users who can see targeted messages can take actions on them. However, administrators can delete targeted messages that they can’t see.'
      description: Summary of the messages in a <code>Channel</code>.
    ChannelMessageSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelMessageSummary'
    ChannelModeratedByAppInstanceUserSummary:
      type: object
      properties:
        ChannelSummary:
          allOf:
            - $ref: '#/components/schemas/ChannelSummary'
            - description: Summary of the details of a <code>Channel</code>.
      description: Summary of the details of a moderated channel.
    ChannelModeratedByAppInstanceUserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummary'
    ChannelModerator:
      type: object
      properties:
        Moderator:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The moderator's data.
        ChannelArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the moderator's channel.
        CreatedTimestamp:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The time at which the moderator was created.
        CreatedBy:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The <code>AppInstanceUser</code> who created the moderator.
      description: The details of a channel moderator.
    ChannelModeratorArns:
      type: array
      items:
        $ref: '#/components/schemas/ChimeArn'
      minItems: 1
      maxItems: 10
    ChannelModeratorSummary:
      type: object
      properties:
        Moderator:
          allOf:
            - $ref: '#/components/schemas/Identity'
            - description: The data for a moderator.
      description: Summary of the details of a <code>ChannelModerator</code>.
    ChannelModeratorSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelModeratorSummary'
    ChannelSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelSummary'
    ClientRequestToken:
      type: string
      pattern: '[-_a-zA-Z0-9]*'
      minLength: 2
      maxLength: 64
      format: password
    CreateChannelBanRequest:
      type: object
      required:
        - MemberArn
      title: CreateChannelBanRequest
      properties:
        MemberArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The <code>AppInstanceUserArn</code> of the member being banned.
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 50
    CreateChannelFlowRequest:
      type: object
      required:
        - AppInstanceArn
        - Processors
        - Name
        - ClientRequestToken
      title: CreateChannelFlowRequest
      properties:
        AppInstanceArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel flow request.
        Processors:
          allOf:
            - $ref: '#/components/schemas/ProcessorList'
            - description: Information about the processor Lambda functions.
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyResourceName'
            - description: The name of the channel flow.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the creation request.
        ClientRequestToken:
          allOf:
            - $ref: '#/components/schemas/ClientRequestToken'
            - description: The client token for the request. An Idempotency token.
    CreateChannelMembershipRequest:
      type: object
      required:
        - MemberArn
        - Type
      title: CreateChannelMembershipRequest
      properties:
        MemberArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The <code>AppInstanceUserArn</code> of the member you want to add to the channel.
        Type:
          allOf:
            - $ref: '#/components/schemas/ChannelMembershipType'
            - description: 'The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned. This is only supported by moderators.'
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only required when creating membership in a SubChannel for a moderator in an elastic channel.</p> </note>
    CreateChannelModeratorRequest:
      type: object
      required:
        - ChannelModeratorArn
      title: CreateChannelModeratorRequest
      properties:
        ChannelModeratorArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The <code>AppInstanceUserArn</code> of the moderator.
    CreateChannelRequest:
      type: object
      required:
        - AppInstanceArn
        - Name
        - ClientRequestToken
      title: CreateChannelRequest
      properties:
        AppInstanceArn:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The ARN of the channel request.
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyResourceName'
            - description: The name of the channel.
        Mode:
          allOf:
            - $ref: '#/components/schemas/ChannelMode'
            - description: 'The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels.'
        Privacy:
          allOf:
            - $ref: '#/components/schemas/ChannelPrivacy'
            - description: 'The channel''s privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren''t discoverable by users outside the channel. Public channels are discoverable by anyone in the <code>AppInstance</code>.'
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - description: The metadata of the creation request. Limited to 1KB and UTF-8.
        ClientRequestToken:
          allOf:
            - $ref: '#/components/schemas/ClientRequestToken'
            - description: The client token for the request. An <code>Idempotency</code> token.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags for the creation request.
        ChannelId:
          allOf:
            - $ref: '#/components/schemas/ChannelId'
            - description: The ID of the channel in the request.
        MemberArns:
          allOf:
            - $ref: '#/components/schemas/ChannelMemberArns'
            - description: The ARNs of the channel members in the request.
        ModeratorArns:
          allOf:
            - $ref: '#/components/schemas/ChannelModeratorArns'
            - description: The ARNs of the channel moderators in the request.
        ElasticChannelConfiguration:
          allOf:
            - $ref: '#/components/schemas/ElasticChannelConfiguration'
            - description: 'The attributes required to configure and create an elastic channel. An elastic channel can support a maximum of 1-million users, excluding moderators.'
        ExpirationSettings:
          allOf:
            - $ref: '#/components/schemas/ExpirationSettings'
            - description: Settings that control the interval after which the channel is automatically deleted.
    DeleteChannelBanRequest:
      type: object
      title: DeleteChannelBanRequest
      properties: {}
    DeleteChannelFlowRequest:
      type: object
      title: DeleteChannelFlowRequest
      properties: {}
    DeleteChannelMembershipRequest:
      type: object
      title: DeleteChannelMembershipRequest
      properties: {}
    DeleteChannelMessageRequest:
      type: object
      title: DeleteChannelMessageRequest
      properties: {}
    DeleteChannelModeratorRequest:
      type: object
      title: DeleteChannelModeratorRequest
      properties: {}
    DeleteChannelRequest:
      type: object
      title: DeleteChannelRequest
      properties: {}
    DeleteMessagingStreamingConfigurationsRequest:
      type: object
      title: DeleteMessagingStreamingConfigurationsRequest
      properties: {}
    DescribeChannelBanRequest:
      type: object
      title: DescribeChannelBanRequest
      properties: {}
    DescribeChannelFlowRequest:
      type: object
      title: DescribeChannelFlowRequest
      properties: {}
    DescribeChannelMembershipForAppInstanceUserRequest:
      type: object
      title: DescribeChannelMembershipForAppInstanceUserRequest
      properties: {}
    DescribeChannelMembershipRequest:
      type: object
      title: DescribeChannelMembershipRequest
      properties: {}
    DescribeChannelModeratedByAppInstanceUserRequest:
      type: object
      title: DescribeChannelModeratedByAppInstanceUserRequest
      properties: {}
    DescribeChannelModeratorRequest:
      type: object
      title: DescribeChannelModeratorRequest
      properties: {}
    DescribeChannelRequest:
      type: object
      title: DescribeChannelRequest
      properties: {}
    DisassociateChannelFlowRequest:
      type: object
      title: DisassociateChannelFlowRequest
      properties: {}
    FallbackAction:
      type: string
      enum:
        - CONTINUE
        - ABORT
    FilterRule:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      format: password
    GetChannelMembershipPreferencesRequest:
      type: object
      title: GetChannelMembershipPreferencesRequest
      properties: {}
    GetChannelMessageRequest:
      type: object
      title: GetChannelMessageRequest
      properties: {}
    GetChannelMessageStatusRequest:
      type: object
      title: GetChannelMessageStatusRequest
      properties: {}
    GetMessagingSessionEndpointRequest:
      type: object
      title: GetMessagingSessionEndpointRequest
      properties: {}
    MessagingSessionEndpoint:
      type: object
      properties:
        Url:
          allOf:
            - $ref: '#/components/schemas/UrlType'
            - description: The endpoint to which you establish a websocket connection.
      description: The websocket endpoint used to connect to Amazon Chime SDK messaging.
    GetMessagingStreamingConfigurationsRequest:
      type: object
      title: GetMessagingStreamingConfigurationsRequest
      properties: {}
    StreamingConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/StreamingConfiguration'
      minItems: 1
      maxItems: 2
    ResourceName:
      type: string
      pattern: '[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*'
      minLength: 0
      maxLength: 256
      format: password
    InvocationType:
      type: string
      enum:
        - ASYNC
    LambdaFunctionArn:
      type: string
      pattern: 'arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9\-_\.]+(:(\$LATEST|[a-zA-Z0-9\-_]+))?'
      minLength: 15
      maxLength: 2048
    LambdaConfiguration:
      type: object
      required:
        - ResourceArn
        - InvocationType
      properties:
        ResourceArn:
          allOf:
            - $ref: '#/components/schemas/LambdaFunctionArn'
            - description: The ARN of the Lambda message processing function.
        InvocationType:
          allOf:
            - $ref: '#/components/schemas/InvocationType'
            - description: Controls how the Lambda function is invoked.
      description: Stores metadata about a Lambda processor.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    NextToken:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 2048
      format: password
    ListChannelBansRequest:
      type: object
      title: ListChannelBansRequest
      properties: {}
    ListChannelFlowsRequest:
      type: object
      title: ListChannelFlowsRequest
      properties: {}
    ListChannelMembershipsForAppInstanceUserRequest:
      type: object
      title: ListChannelMembershipsForAppInstanceUserRequest
      properties: {}
    ListChannelMembershipsRequest:
      type: object
      title: ListChannelMembershipsRequest
      properties: {}
    SortOrder:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    ListChannelMessagesRequest:
      type: object
      title: ListChannelMessagesRequest
      properties: {}
    ListChannelModeratorsRequest:
      type: object
      title: ListChannelModeratorsRequest
      properties: {}
    ListChannelsAssociatedWithChannelFlowRequest:
      type: object
      title: ListChannelsAssociatedWithChannelFlowRequest
      properties: {}
    ListChannelsModeratedByAppInstanceUserRequest:
      type: object
      title: ListChannelsModeratedByAppInstanceUserRequest
      properties: {}
    ListChannelsRequest:
      type: object
      title: ListChannelsRequest
      properties: {}
    ListSubChannelsRequest:
      type: object
      title: ListSubChannelsRequest
      properties: {}
    SubChannelSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/SubChannelSummary'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    MembershipCount:
      type: integer
    MessageAttributeName:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      maxLength: 64
      format: password
    MessageAttributeStringValue:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      maxLength: 512
      format: password
    MessageAttributeStringValues:
      type: array
      items:
        $ref: '#/components/schemas/MessageAttributeStringValue'
    MessagingDataType:
      type: string
      enum:
        - Channel
        - ChannelMessage
    UrlType:
      type: string
      maxLength: 4096
    ProcessorConfiguration:
      type: object
      required:
        - Lambda
      properties:
        Lambda:
          allOf:
            - $ref: '#/components/schemas/LambdaConfiguration'
            - description: Indicates that the processor is of type Lambda.
      description: A processor's metadata.
    PutChannelExpirationSettingsRequest:
      type: object
      title: PutChannelExpirationSettingsRequest
      properties:
        ExpirationSettings:
          allOf:
            - $ref: '#/components/schemas/ExpirationSettings'
            - description: Settings that control the interval after which a channel is deleted.
    PutChannelMembershipPreferencesRequest:
      type: object
      required:
        - Preferences
      title: PutChannelMembershipPreferencesRequest
      properties:
        Preferences:
          allOf:
            - $ref: '#/components/schemas/ChannelMembershipPreferences'
            - description: The channel membership preferences of an <code>AppInstanceUser</code> .
    PutMessagingStreamingConfigurationsRequest:
      type: object
      required:
        - StreamingConfigurations
      title: PutMessagingStreamingConfigurationsRequest
      properties:
        StreamingConfigurations:
          allOf:
            - $ref: '#/components/schemas/StreamingConfigurationList'
            - description: The streaming configurations.
    RedactChannelMessageRequest:
      type: object
      title: RedactChannelMessageRequest
      properties:
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The ID of the SubChannel in the request.
    SearchFields:
      type: array
      items:
        $ref: '#/components/schemas/SearchField'
      minItems: 1
      maxItems: 20
    SearchChannelsRequest:
      type: object
      required:
        - Fields
      title: SearchChannelsRequest
      properties:
        Fields:
          allOf:
            - $ref: '#/components/schemas/SearchFields'
            - description: A list of the <code>Field</code> objects in the channel being searched.
    SearchFieldKey:
      type: string
      enum:
        - MEMBERS
    SearchFieldValues:
      type: array
      items:
        $ref: '#/components/schemas/SearchFieldValue'
      minItems: 1
      maxItems: 20
    SearchFieldOperator:
      type: string
      enum:
        - EQUALS
        - INCLUDES
    SearchFieldValue:
      type: string
      pattern: '[\s\S]*'
      minLength: 1
      maxLength: 512
    SendChannelMessageRequest:
      type: object
      required:
        - Content
        - Type
        - Persistence
        - ClientRequestToken
      title: SendChannelMessageRequest
      properties:
        Content:
          allOf:
            - $ref: '#/components/schemas/NonEmptyContent'
            - description: The content of the channel message.
        Type:
          allOf:
            - $ref: '#/components/schemas/ChannelMessageType'
            - description: '<p>The type of message, <code>STANDARD</code> or <code>CONTROL</code>.</p> <p> <code>STANDARD</code> messages can be up to 4KB in size and contain metadata. Metadata is arbitrary, and you can use it in a variety of ways, such as containing a link to an attachment.</p> <p> <code>CONTROL</code> messages are limited to 30 bytes and do not contain metadata.</p>'
        Persistence:
          allOf:
            - $ref: '#/components/schemas/ChannelMessagePersistenceType'
            - description: Boolean that controls whether the message is persisted on the back end. Required.
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - description: The optional metadata for each message.
        ClientRequestToken:
          allOf:
            - $ref: '#/components/schemas/ClientRequestToken'
            - description: The <code>Idempotency</code> token for each client request.
        PushNotification:
          allOf:
            - $ref: '#/components/schemas/PushNotificationConfiguration'
            - description: The push notification configuration of the message.
        MessageAttributes:
          allOf:
            - $ref: '#/components/schemas/MessageAttributeMap'
            - description: 'The attributes for the message, used for message filtering along with a <code>FilterRule</code> defined in the <code>PushNotificationPreferences</code>.'
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The ID of the SubChannel in the request.
        ContentType:
          allOf:
            - $ref: '#/components/schemas/ContentType'
            - description: The content type of the channel message.
        Target:
          allOf:
            - $ref: '#/components/schemas/TargetList'
            - description: 'The target of a message. Must be a member of the channel, such as another user, a bot, or the sender. Only the target and the sender can view targeted messages. Only users who can see targeted messages can take actions on them. However, administrators can delete targeted messages that they can’t see. '
    SubChannelSummary:
      type: object
      properties:
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: The unique ID of a SubChannel.
        MembershipCount:
          allOf:
            - $ref: '#/components/schemas/MembershipCount'
            - description: The number of members in a SubChannel.
      description: Summary of the sub-channels associated with the elastic channel.
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
      format: password
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - ResourceARN
        - Tags
      title: TagResourceRequest
      properties:
        ResourceARN:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The resource ARN.
        Tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tag key-value pairs.
    UntagResourceRequest:
      type: object
      required:
        - ResourceARN
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceARN:
          allOf:
            - $ref: '#/components/schemas/ChimeArn'
            - description: The resource ARN.
        TagKeys:
          allOf:
            - $ref: '#/components/schemas/TagKeyList'
            - description: The tag keys.
    UpdateChannelFlowRequest:
      type: object
      required:
        - Processors
        - Name
      title: UpdateChannelFlowRequest
      properties:
        Processors:
          allOf:
            - $ref: '#/components/schemas/ProcessorList'
            - description: 'Information about the processor Lambda functions '
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyResourceName'
            - description: The name of the channel flow.
    UpdateChannelMessageRequest:
      type: object
      required:
        - Content
      title: UpdateChannelMessageRequest
      properties:
        Content:
          allOf:
            - $ref: '#/components/schemas/NonEmptyContent'
            - description: 'The content of the channel message. '
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - description: The metadata of the message being updated.
        SubChannelId:
          allOf:
            - $ref: '#/components/schemas/SubChannelId'
            - description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only required when updating messages in a SubChannel that the user belongs to.</p> </note>
        ContentType:
          allOf:
            - $ref: '#/components/schemas/ContentType'
            - description: The content type of the channel message.
    UpdateChannelReadMarkerRequest:
      type: object
      title: UpdateChannelReadMarkerRequest
      properties: {}
    UpdateChannelRequest:
      type: object
      title: UpdateChannelRequest
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyResourceName'
            - description: The name of the channel.
        Mode:
          allOf:
            - $ref: '#/components/schemas/ChannelMode'
            - description: The mode of the update request.
        Metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
            - description: The metadata for the update request.
security:
  - hmac: []
