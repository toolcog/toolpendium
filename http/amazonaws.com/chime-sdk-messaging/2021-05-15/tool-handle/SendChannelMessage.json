{
  "name": "SendChannelMessage",
  "description": "<p>Sends a message to a particular channel that the member is a part of.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> <p>Also, <code>STANDARD</code> messages can be up to 4KB in size and contain metadata. Metadata is arbitrary, and you can use it in a variety of ways, such as containing a link to an attachment.</p> <p> <code>CONTROL</code> messages are limited to 30 bytes and do not contain metadata.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "channelArn": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "minLength": 5,
        "maxLength": 1600,
        "description": "The ARN of the channel."
      },
      "x-amz-chime-bearer": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "minLength": 5,
        "maxLength": 1600,
        "description": "The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Content",
          "Type",
          "Persistence",
          "ClientRequestToken"
        ],
        "properties": {
          "Content": {
            "description": "The content of the channel message.",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 1,
            "format": "password"
          },
          "Type": {
            "description": "<p>The type of message, <code>STANDARD</code> or <code>CONTROL</code>.</p> <p> <code>STANDARD</code> messages can be up to 4KB in size and contain metadata. Metadata is arbitrary, and you can use it in a variety of ways, such as containing a link to an attachment.</p> <p> <code>CONTROL</code> messages are limited to 30 bytes and do not contain metadata.</p>",
            "type": "string",
            "enum": [
              "STANDARD",
              "CONTROL"
            ]
          },
          "Persistence": {
            "description": "Boolean that controls whether the message is persisted on the back end. Required.",
            "type": "string",
            "enum": [
              "PERSISTENT",
              "NON_PERSISTENT"
            ]
          },
          "Metadata": {
            "description": "The optional metadata for each message.",
            "type": "string",
            "pattern": ".*",
            "minLength": 0,
            "maxLength": 1024,
            "format": "password"
          },
          "ClientRequestToken": {
            "description": "The <code>Idempotency</code> token for each client request.",
            "type": "string",
            "pattern": "[-_a-zA-Z0-9]*",
            "minLength": 2,
            "maxLength": 64,
            "format": "password"
          },
          "PushNotification": {
            "description": "The push notification configuration of the message.",
            "type": "object",
            "properties": {
              "Title": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PushNotificationTitle"
                  },
                  {
                    "description": "The title of the push notification."
                  }
                ]
              },
              "Body": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PushNotificationBody"
                  },
                  {
                    "description": "The body of the push notification."
                  }
                ]
              },
              "Type": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PushNotificationType"
                  },
                  {
                    "description": "Enum value that indicates the type of the push notification for a message. <code>DEFAULT</code>: Normal mobile push notification. <code>VOIP</code>: VOIP mobile push notification."
                  }
                ]
              }
            }
          },
          "MessageAttributes": {
            "description": "The attributes for the message, used for message filtering along with a <code>FilterRule</code> defined in the <code>PushNotificationPreferences</code>.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/MessageAttributeValue"
            }
          },
          "SubChannelId": {
            "description": "The ID of the SubChannel in the request.",
            "type": "string",
            "pattern": "[-_a-zA-Z0-9]*",
            "minLength": 1,
            "maxLength": 128
          },
          "ContentType": {
            "description": "The content type of the channel message.",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 0,
            "maxLength": 45,
            "format": "password"
          },
          "Target": {
            "description": "The target of a message. Must be a member of the channel, such as another user, a bot, or the sender. Only the target and the sender can view targeted messages. Only users who can see targeted messages can take actions on them. However, administrators can delete targeted messages that they can’t see. ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Target"
            },
            "minItems": 1,
            "maxItems": 1
          }
        }
      }
    },
    "required": [
      "channelArn",
      "x-amz-chime-bearer",
      "body"
    ],
    "$defs": {
      "PushNotificationTitle": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 50,
        "format": "password"
      },
      "PushNotificationBody": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "maxLength": 150,
        "format": "password"
      },
      "PushNotificationType": {
        "type": "string",
        "enum": [
          "DEFAULT",
          "VOIP"
        ]
      },
      "MessageAttributeValue": {
        "type": "object",
        "properties": {
          "StringValues": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageAttributeStringValues"
              },
              {
                "description": "The strings in a message attribute value."
              }
            ]
          }
        },
        "description": "A list of message attribute values."
      },
      "MessageAttributeStringValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MessageAttributeStringValue"
        }
      },
      "MessageAttributeStringValue": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "maxLength": 512,
        "format": "password"
      },
      "Target": {
        "type": "object",
        "properties": {
          "MemberArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ChimeArn"
              },
              {
                "description": "The ARN of the target channel member."
              }
            ]
          }
        },
        "description": "The target of a message, a sender, a user, or a bot. Only the target and the sender can view targeted messages. Only users who can see targeted messages can take actions on them. However, administrators can delete targeted messages that they can’t see."
      },
      "ChimeArn": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "minLength": 5,
        "maxLength": 1600
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://messaging-chime.us-east-1.amazonaws.com/channels/{channelArn}/messages#x-amz-chime-bearer"
    },
    "headers": {
      "x-amz-chime-bearer": {
        "$": "x-amz-chime-bearer"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ChannelArn**",
            "**MessageId**",
            "**Status**",
            "**SubChannelId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
