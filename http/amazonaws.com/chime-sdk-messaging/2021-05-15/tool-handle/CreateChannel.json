{
  "name": "CreateChannel",
  "description": "<p>Creates a channel to which you can add users and send messages.</p> <p> <b>Restriction</b>: You can't change a channel's privacy.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "x-amz-chime-bearer": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "minLength": 5,
        "maxLength": 1600,
        "description": "The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "AppInstanceArn",
          "Name",
          "ClientRequestToken"
        ],
        "properties": {
          "AppInstanceArn": {
            "description": "The ARN of the channel request.",
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "minLength": 5,
            "maxLength": 1600
          },
          "Name": {
            "description": "The name of the channel.",
            "type": "string",
            "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
            "minLength": 1,
            "maxLength": 256,
            "format": "password"
          },
          "Mode": {
            "description": "The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels.",
            "type": "string",
            "enum": [
              "UNRESTRICTED",
              "RESTRICTED"
            ]
          },
          "Privacy": {
            "description": "The channel's privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren't discoverable by users outside the channel. Public channels are discoverable by anyone in the <code>AppInstance</code>.",
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ]
          },
          "Metadata": {
            "description": "The metadata of the creation request. Limited to 1KB and UTF-8.",
            "type": "string",
            "pattern": ".*",
            "minLength": 0,
            "maxLength": 1024,
            "format": "password"
          },
          "ClientRequestToken": {
            "description": "The client token for the request. An <code>Idempotency</code> token.",
            "type": "string",
            "pattern": "[-_a-zA-Z0-9]*",
            "minLength": 2,
            "maxLength": 64,
            "format": "password"
          },
          "Tags": {
            "description": "The tags for the creation request.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 1,
            "maxItems": 50
          },
          "ChannelId": {
            "description": "The ID of the channel in the request.",
            "type": "string",
            "pattern": "[A-Za-z0-9]([A-Za-z0-9\\:\\-\\_\\.\\@]{0,62}[A-Za-z0-9])?",
            "minLength": 1,
            "maxLength": 64,
            "format": "password"
          },
          "MemberArns": {
            "description": "The ARNs of the channel members in the request.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ChimeArn"
            },
            "minItems": 1,
            "maxItems": 10
          },
          "ModeratorArns": {
            "description": "The ARNs of the channel moderators in the request.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ChimeArn"
            },
            "minItems": 1,
            "maxItems": 10
          },
          "ElasticChannelConfiguration": {
            "description": "The attributes required to configure and create an elastic channel. An elastic channel can support a maximum of 1-million members.",
            "type": "object",
            "properties": {
              "MaximumSubChannels": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MaximumSubChannels"
                  },
                  {
                    "description": "The maximum number of SubChannels that you want to allow in the elastic channel."
                  }
                ]
              },
              "TargetMembershipsPerSubChannel": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TargetMembershipsPerSubChannel"
                  },
                  {
                    "description": "The maximum number of members allowed in a SubChannel."
                  }
                ]
              },
              "MinimumMembershipPercentage": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MinimumMembershipPercentage"
                  },
                  {
                    "description": "The minimum allowed percentage of TargetMembershipsPerSubChannel users. Ceil of the calculated value is used in balancing members among SubChannels of the elastic channel."
                  }
                ]
              }
            }
          },
          "ExpirationSettings": {
            "description": "Settings that control the interval after which a channel is deleted.",
            "type": "object",
            "properties": {
              "ExpirationDays": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExpirationDays"
                  },
                  {
                    "description": "The period in days after which the system automatically deletes a channel."
                  }
                ]
              },
              "ExpirationCriterion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExpirationCriterion"
                  },
                  {
                    "description": "The conditions that must be met for a channel to expire."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "x-amz-chime-bearer",
      "body"
    ],
    "$defs": {
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key in a tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value in a tag."
              }
            ]
          }
        },
        "description": "A tag object containing a key-value pair."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "TagValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256,
        "format": "password"
      },
      "ChimeArn": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "minLength": 5,
        "maxLength": 1600
      },
      "MaximumSubChannels": {
        "type": "integer",
        "minimum": 2
      },
      "TargetMembershipsPerSubChannel": {
        "type": "integer",
        "minimum": 2
      },
      "MinimumMembershipPercentage": {
        "type": "integer",
        "minimum": 1,
        "maximum": 40
      },
      "ExpirationDays": {
        "type": "integer",
        "minimum": 1,
        "maximum": 5475
      },
      "ExpirationCriterion": {
        "type": "string",
        "enum": [
          "CREATED_TIMESTAMP",
          "LAST_MESSAGE_TIMESTAMP"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://messaging-chime.us-east-1.amazonaws.com/channels#x-amz-chime-bearer"
    },
    "headers": {
      "x-amz-chime-bearer": {
        "$": "x-amz-chime-bearer"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ChannelArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
