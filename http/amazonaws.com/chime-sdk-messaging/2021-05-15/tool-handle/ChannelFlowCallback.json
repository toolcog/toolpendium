{
  "name": "ChannelFlowCallback",
  "description": "<p>Calls back Amazon Chime SDK messaging with a processing response message. This should be invoked from the processor Lambda. This is a developer API.</p> <p>You can return one of the following processing responses:</p> <ul> <li> <p>Update message content or metadata</p> </li> <li> <p>Deny a message</p> </li> <li> <p>Make no changes to the message</p> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "channelArn": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "minLength": 5,
        "maxLength": 1600,
        "description": "The ARN of the channel."
      },
      "operation": {
        "type": "string",
        "enum": [
          "channel-flow-callback"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "CallbackId",
          "ChannelMessage"
        ],
        "properties": {
          "CallbackId": {
            "description": "The identifier passed to the processor by the service when invoked. Use the identifier to call back the service.",
            "type": "string",
            "minLength": 32,
            "maxLength": 64
          },
          "DeleteResource": {
            "description": "When a processor determines that a message needs to be <code>DENIED</code>, pass this parameter with a value of true.",
            "type": "boolean"
          },
          "ChannelMessage": {
            "description": "Stores information about a callback.",
            "type": "object",
            "properties": {
              "MessageId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MessageId"
                  },
                  {
                    "description": "The message ID."
                  }
                ]
              },
              "Content": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NonEmptyContent"
                  },
                  {
                    "description": "The message content. For Amazon Lex V2 bot responses, this field holds a list of messages originating from the bot. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>."
                  }
                ]
              },
              "Metadata": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Metadata"
                  },
                  {
                    "description": "The message metadata."
                  }
                ]
              },
              "PushNotification": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PushNotificationConfiguration"
                  },
                  {
                    "description": "The push notification configuration of the message."
                  }
                ]
              },
              "MessageAttributes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/MessageAttributeMap"
                  },
                  {
                    "description": "The attributes for the channel message. For Amazon Lex V2 bot responses, the attributes are mapped to specific fields from the bot. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>."
                  }
                ]
              },
              "SubChannelId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SubChannelId"
                  },
                  {
                    "description": "The ID of the SubChannel."
                  }
                ]
              },
              "ContentType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ContentType"
                  },
                  {
                    "description": "The content type of the call-back message. For Amazon Lex V2 bot responses, the content type is <code>application/amz-chime-lex-msgs</code> for success responses and <code>application/amz-chime-lex-error</code> for failure responses. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\">Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime SDK Messaging Developer Guide</i>."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "channelArn",
      "operation",
      "body"
    ],
    "$defs": {
      "MessageId": {
        "type": "string",
        "pattern": "[-_a-zA-Z0-9]*",
        "minLength": 1,
        "maxLength": 128
      },
      "NonEmptyContent": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "format": "password"
      },
      "Metadata": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 1024,
        "format": "password"
      },
      "PushNotificationConfiguration": {
        "type": "object",
        "properties": {
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/PushNotificationTitle"
              },
              {
                "description": "The title of the push notification."
              }
            ]
          },
          "Body": {
            "allOf": [
              {
                "$ref": "#/$defs/PushNotificationBody"
              },
              {
                "description": "The body of the push notification."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/PushNotificationType"
              },
              {
                "description": "Enum value that indicates the type of the push notification for a message. <code>DEFAULT</code>: Normal mobile push notification. <code>VOIP</code>: VOIP mobile push notification."
              }
            ]
          }
        },
        "description": "The push notification configuration of the message."
      },
      "PushNotificationTitle": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 50,
        "format": "password"
      },
      "PushNotificationBody": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "maxLength": 150,
        "format": "password"
      },
      "PushNotificationType": {
        "type": "string",
        "enum": [
          "DEFAULT",
          "VOIP"
        ]
      },
      "MessageAttributeMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/MessageAttributeValue"
        }
      },
      "MessageAttributeValue": {
        "type": "object",
        "properties": {
          "StringValues": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageAttributeStringValues"
              },
              {
                "description": "The strings in a message attribute value."
              }
            ]
          }
        },
        "description": "A list of message attribute values."
      },
      "MessageAttributeStringValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MessageAttributeStringValue"
        }
      },
      "MessageAttributeStringValue": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "maxLength": 512,
        "format": "password"
      },
      "SubChannelId": {
        "type": "string",
        "pattern": "[-_a-zA-Z0-9]*",
        "minLength": 1,
        "maxLength": 128
      },
      "ContentType": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 0,
        "maxLength": 45,
        "format": "password"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://messaging-chime.us-east-1.amazonaws.com/channels/{channelArn}#operation=channel-flow-callback{?operation}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ChannelArn**",
            "**CallbackId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
