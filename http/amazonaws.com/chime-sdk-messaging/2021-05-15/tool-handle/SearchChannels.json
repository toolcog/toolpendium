{
  "name": "SearchChannels",
  "description": "<p>Allows the <code>ChimeBearer</code> to search channels by channel members. Users or bots can search across the channels that they belong to. Users in the <code>AppInstanceAdmin</code> role can search across all channels.</p> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "x-amz-chime-bearer": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "minLength": 5,
        "maxLength": 1600,
        "description": "The <code>AppInstanceUserArn</code> of the user making the API call."
      },
      "max-results": {
        "type": "integer",
        "minimum": 1,
        "maximum": 50,
        "description": "The maximum number of channels that you want returned."
      },
      "next-token": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 2048,
        "format": "password",
        "description": "The token returned from previous API requests until the number of channels is reached."
      },
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "operation": {
        "type": "string",
        "enum": [
          "search"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Fields"
        ],
        "properties": {
          "Fields": {
            "description": "A list of the <code>Field</code> objects in the channel being searched.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/SearchField"
            },
            "minItems": 1,
            "maxItems": 20
          }
        }
      }
    },
    "required": [
      "operation",
      "body"
    ],
    "$defs": {
      "SearchField": {
        "type": "object",
        "required": [
          "Key",
          "Values",
          "Operator"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/SearchFieldKey"
              },
              {
                "description": "An <code>enum</code> value that indicates the key to search the channel on. <code>MEMBERS</code> allows you to search channels based on memberships. You can use it with the <code>EQUALS</code> operator to get channels whose memberships are equal to the specified values, and with the <code>INCLUDES</code> operator to get channels whose memberships include the specified values."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/SearchFieldValues"
              },
              {
                "description": "<p>The values that you want to search for, a list of strings. The values must be <code>AppInstanceUserArns</code> specified as a list of strings.</p> <note> <p>This operation isn't supported for <code>AppInstanceUsers</code> with large number of memberships.</p> </note>"
              }
            ]
          },
          "Operator": {
            "allOf": [
              {
                "$ref": "#/$defs/SearchFieldOperator"
              },
              {
                "description": "The operator used to compare field values, currently <code>EQUALS</code> or <code>INCLUDES</code>. Use the <code>EQUALS</code> operator to find channels whose memberships equal the specified values. Use the <code>INCLUDES</code> operator to find channels whose memberships include the specified values."
              }
            ]
          }
        },
        "description": "A <code>Field</code> of the channel that you want to search."
      },
      "SearchFieldKey": {
        "type": "string",
        "enum": [
          "MEMBERS"
        ]
      },
      "SearchFieldValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SearchFieldValue"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "SearchFieldValue": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "minLength": 1,
        "maxLength": 512
      },
      "SearchFieldOperator": {
        "type": "string",
        "enum": [
          "EQUALS",
          "INCLUDES"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://messaging-chime.us-east-1.amazonaws.com/channels#operation=search{?max-results,next-token,MaxResults,NextToken,operation}"
    },
    "headers": {
      "x-amz-chime-bearer": {
        "$": "x-amz-chime-bearer"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Channels**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
