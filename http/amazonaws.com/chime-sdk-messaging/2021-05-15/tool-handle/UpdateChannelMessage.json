{
  "name": "UpdateChannelMessage",
  "description": "<p>Updates the content of a message.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call as the value in the header.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "channelArn": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "minLength": 5,
        "maxLength": 1600,
        "description": "The ARN of the channel."
      },
      "messageId": {
        "type": "string",
        "pattern": "[-_a-zA-Z0-9]*",
        "minLength": 1,
        "maxLength": 128,
        "description": "The ID string of the message being updated."
      },
      "x-amz-chime-bearer": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
        "minLength": 5,
        "maxLength": 1600,
        "description": "The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Content"
        ],
        "properties": {
          "Content": {
            "description": "The content of the channel message. ",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 1,
            "format": "password"
          },
          "Metadata": {
            "description": "The metadata of the message being updated.",
            "type": "string",
            "pattern": ".*",
            "minLength": 0,
            "maxLength": 1024,
            "format": "password"
          },
          "SubChannelId": {
            "description": "<p>The ID of the SubChannel in the request.</p> <note> <p>Only required when updating messages in a SubChannel that the user belongs to.</p> </note>",
            "type": "string",
            "pattern": "[-_a-zA-Z0-9]*",
            "minLength": 1,
            "maxLength": 128
          },
          "ContentType": {
            "description": "The content type of the channel message.",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "minLength": 0,
            "maxLength": 45,
            "format": "password"
          }
        }
      }
    },
    "required": [
      "channelArn",
      "messageId",
      "x-amz-chime-bearer",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://messaging-chime.us-east-1.amazonaws.com/channels/{channelArn}/messages/{messageId}#x-amz-chime-bearer"
    },
    "headers": {
      "x-amz-chime-bearer": {
        "$": "x-amz-chime-bearer"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ChannelArn**",
            "**MessageId**",
            "**Status**",
            "**SubChannelId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
