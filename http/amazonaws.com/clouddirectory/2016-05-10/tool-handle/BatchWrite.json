{
  "name": "BatchWrite",
  "description": "Performs all the write operations in a batch. Either all the operations succeed or none.",
  "parameters": {
    "type": "object",
    "properties": {
      "x-amz-data-partition": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Operations"
        ],
        "properties": {
          "Operations": {
            "description": "A list of operations that are part of the batch.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/BatchWriteOperation"
            }
          }
        }
      }
    },
    "required": [
      "x-amz-data-partition",
      "body"
    ],
    "$defs": {
      "BatchWriteOperation": {
        "type": "object",
        "properties": {
          "CreateObject": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchCreateObject"
              },
              {
                "description": "Creates an object."
              }
            ]
          },
          "AttachObject": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchAttachObject"
              },
              {
                "description": "Attaches an object to a <a>Directory</a>."
              }
            ]
          },
          "DetachObject": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchDetachObject"
              },
              {
                "description": "Detaches an object from a <a>Directory</a>."
              }
            ]
          },
          "UpdateObjectAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchUpdateObjectAttributes"
              },
              {
                "description": "Updates a given object's attributes."
              }
            ]
          },
          "DeleteObject": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchDeleteObject"
              },
              {
                "description": "Deletes an object in a <a>Directory</a>."
              }
            ]
          },
          "AddFacetToObject": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchAddFacetToObject"
              },
              {
                "description": "A batch operation that adds a facet to an object."
              }
            ]
          },
          "RemoveFacetFromObject": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchRemoveFacetFromObject"
              },
              {
                "description": "A batch operation that removes a facet from an object."
              }
            ]
          },
          "AttachPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchAttachPolicy"
              },
              {
                "description": "Attaches a policy object to a regular object. An object can have a limited number of attached policies."
              }
            ]
          },
          "DetachPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchDetachPolicy"
              },
              {
                "description": "Detaches a policy from a <a>Directory</a>."
              }
            ]
          },
          "CreateIndex": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchCreateIndex"
              },
              {
                "description": "Creates an index object. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_indexing.html\">Indexing</a> for more information."
              }
            ]
          },
          "AttachToIndex": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchAttachToIndex"
              },
              {
                "description": "Attaches the specified object to the specified index."
              }
            ]
          },
          "DetachFromIndex": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchDetachFromIndex"
              },
              {
                "description": "Detaches the specified object from the specified index."
              }
            ]
          },
          "AttachTypedLink": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchAttachTypedLink"
              },
              {
                "description": "Attaches a typed link to a specified source and target object. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>."
              }
            ]
          },
          "DetachTypedLink": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchDetachTypedLink"
              },
              {
                "description": "Detaches a typed link from a specified source and target object. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>."
              }
            ]
          },
          "UpdateLinkAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchUpdateLinkAttributes"
              },
              {
                "description": "Updates a given object's attributes."
              }
            ]
          }
        },
        "description": "Represents the output of a <code>BatchWrite</code> operation. "
      },
      "BatchCreateObject": {
        "type": "object",
        "required": [
          "SchemaFacet",
          "ObjectAttributeList"
        ],
        "properties": {
          "SchemaFacet": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaFacetList"
              },
              {
                "description": "A list of <code>FacetArns</code> that will be associated with the object. For more information, see <a>arns</a>."
              }
            ]
          },
          "ObjectAttributeList": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeKeyAndValueList"
              },
              {
                "description": "An attribute map, which contains an attribute ARN as the key and attribute value as the map value."
              }
            ]
          },
          "ParentReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "If specified, the parent reference to which this object will be attached."
              }
            ]
          },
          "LinkName": {
            "allOf": [
              {
                "$ref": "#/$defs/LinkName"
              },
              {
                "description": "The name of the link."
              }
            ]
          },
          "BatchReferenceName": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchReferenceName"
              },
              {
                "description": "The batch reference name. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches\">Batches</a> for more information."
              }
            ]
          }
        },
        "description": "Represents the output of a <a>CreateObject</a> operation."
      },
      "SchemaFacetList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SchemaFacet"
        }
      },
      "SchemaFacet": {
        "type": "object",
        "properties": {
          "SchemaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/inplaceschemaupgrade.html\">In-Place Schema Upgrade</a> for a description of when to provide minor versions."
              }
            ]
          },
          "FacetName": {
            "allOf": [
              {
                "$ref": "#/$defs/FacetName"
              },
              {
                "description": "The name of the facet."
              }
            ]
          }
        },
        "description": "A facet."
      },
      "Arn": {
        "type": "string"
      },
      "FacetName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._-]*$",
        "minLength": 1,
        "maxLength": 64
      },
      "AttributeKeyAndValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttributeKeyAndValue"
        }
      },
      "AttributeKeyAndValue": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeKey"
              },
              {
                "description": "The key of the attribute."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The value of the attribute."
              }
            ]
          }
        },
        "description": "The combination of an attribute key and an attribute value."
      },
      "AttributeKey": {
        "type": "object",
        "required": [
          "SchemaArn",
          "FacetName",
          "Name"
        ],
        "properties": {
          "SchemaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the schema that contains the facet and attribute."
              }
            ]
          },
          "FacetName": {
            "allOf": [
              {
                "$ref": "#/$defs/FacetName"
              },
              {
                "description": "The name of the facet that the attribute exists within."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeName"
              },
              {
                "description": "The name of the attribute."
              }
            ]
          }
        },
        "description": "A unique identifier for an attribute."
      },
      "AttributeName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._-]*$",
        "minLength": 1,
        "maxLength": 64
      },
      "TypedAttributeValue": {
        "type": "object",
        "properties": {
          "StringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StringAttributeValue"
              },
              {
                "description": "A string data value."
              }
            ]
          },
          "BinaryValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BinaryAttributeValue"
              },
              {
                "description": "A binary data value."
              }
            ]
          },
          "BooleanValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanAttributeValue"
              },
              {
                "description": "A Boolean data value."
              }
            ]
          },
          "NumberValue": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberAttributeValue"
              },
              {
                "description": "A number data value."
              }
            ]
          },
          "DatetimeValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DatetimeAttributeValue"
              },
              {
                "description": "A date and time value."
              }
            ]
          }
        },
        "description": "Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value."
      },
      "StringAttributeValue": {
        "type": "string"
      },
      "BinaryAttributeValue": {
        "type": "string"
      },
      "BooleanAttributeValue": {
        "type": "boolean"
      },
      "NumberAttributeValue": {
        "type": "string"
      },
      "DatetimeAttributeValue": {
        "type": "string",
        "format": "date-time"
      },
      "ObjectReference": {
        "type": "object",
        "properties": {
          "Selector": {
            "allOf": [
              {
                "$ref": "#/$defs/SelectorObjectReference"
              },
              {
                "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects\">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The reference that identifies an object."
      },
      "SelectorObjectReference": {
        "type": "string"
      },
      "LinkName": {
        "type": "string",
        "pattern": "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+",
        "minLength": 1,
        "maxLength": 64
      },
      "BatchReferenceName": {
        "type": "string"
      },
      "BatchAttachObject": {
        "type": "object",
        "required": [
          "ParentReference",
          "ChildReference",
          "LinkName"
        ],
        "properties": {
          "ParentReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "The parent object reference."
              }
            ]
          },
          "ChildReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "The child object reference that is to be attached to the object."
              }
            ]
          },
          "LinkName": {
            "allOf": [
              {
                "$ref": "#/$defs/LinkName"
              },
              {
                "description": "The name of the link."
              }
            ]
          }
        },
        "description": "Represents the output of an <a>AttachObject</a> operation."
      },
      "BatchDetachObject": {
        "type": "object",
        "required": [
          "ParentReference",
          "LinkName"
        ],
        "properties": {
          "ParentReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Parent reference from which the object with the specified link name is detached."
              }
            ]
          },
          "LinkName": {
            "allOf": [
              {
                "$ref": "#/$defs/LinkName"
              },
              {
                "description": "The name of the link."
              }
            ]
          },
          "BatchReferenceName": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchReferenceName"
              },
              {
                "description": "The batch reference name. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches\">Batches</a> for more information."
              }
            ]
          }
        },
        "description": "Represents the output of a <a>DetachObject</a> operation."
      },
      "BatchUpdateObjectAttributes": {
        "type": "object",
        "required": [
          "ObjectReference",
          "AttributeUpdates"
        ],
        "properties": {
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Reference that identifies the object."
              }
            ]
          },
          "AttributeUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectAttributeUpdateList"
              },
              {
                "description": "Attributes update structure."
              }
            ]
          }
        },
        "description": "Represents the output of a <code>BatchUpdate</code> operation. "
      },
      "ObjectAttributeUpdateList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ObjectAttributeUpdate"
        }
      },
      "ObjectAttributeUpdate": {
        "type": "object",
        "properties": {
          "ObjectAttributeKey": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeKey"
              },
              {
                "description": "The key of the attribute being updated."
              }
            ]
          },
          "ObjectAttributeAction": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectAttributeAction"
              },
              {
                "description": "The action to perform as part of the attribute update."
              }
            ]
          }
        },
        "description": "Structure that contains attribute update information."
      },
      "ObjectAttributeAction": {
        "type": "object",
        "properties": {
          "ObjectAttributeActionType": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateActionType"
              },
              {
                "description": "A type that can be either <code>Update</code> or <code>Delete</code>."
              }
            ]
          },
          "ObjectAttributeUpdateValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The value that you want to update to."
              }
            ]
          }
        },
        "description": "The action to take on the object attribute."
      },
      "UpdateActionType": {
        "type": "string",
        "enum": [
          "CREATE_OR_UPDATE",
          "DELETE"
        ]
      },
      "BatchDeleteObject": {
        "type": "object",
        "required": [
          "ObjectReference"
        ],
        "properties": {
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "The reference that identifies the object."
              }
            ]
          }
        },
        "description": "Represents the output of a <a>DeleteObject</a> operation."
      },
      "BatchAddFacetToObject": {
        "type": "object",
        "required": [
          "SchemaFacet",
          "ObjectAttributeList",
          "ObjectReference"
        ],
        "properties": {
          "SchemaFacet": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaFacet"
              },
              {
                "description": "Represents the facet being added to the object."
              }
            ]
          },
          "ObjectAttributeList": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeKeyAndValueList"
              },
              {
                "description": "The attributes to set on the object."
              }
            ]
          },
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "A reference to the object being mutated."
              }
            ]
          }
        },
        "description": "Represents the output of a batch add facet to object operation."
      },
      "BatchRemoveFacetFromObject": {
        "type": "object",
        "required": [
          "SchemaFacet",
          "ObjectReference"
        ],
        "properties": {
          "SchemaFacet": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaFacet"
              },
              {
                "description": "The facet to remove from the object."
              }
            ]
          },
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "A reference to the object whose facet will be removed."
              }
            ]
          }
        },
        "description": "A batch operation to remove a facet from an object."
      },
      "BatchAttachPolicy": {
        "type": "object",
        "required": [
          "PolicyReference",
          "ObjectReference"
        ],
        "properties": {
          "PolicyReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "The reference that is associated with the policy object."
              }
            ]
          },
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "The reference that identifies the object to which the policy will be attached."
              }
            ]
          }
        },
        "description": "Attaches a policy object to a regular object inside a <a>BatchRead</a> operation. For more information, see <a>AttachPolicy</a> and <a>BatchReadRequest$Operations</a>."
      },
      "BatchDetachPolicy": {
        "type": "object",
        "required": [
          "PolicyReference",
          "ObjectReference"
        ],
        "properties": {
          "PolicyReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Reference that identifies the policy object."
              }
            ]
          },
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Reference that identifies the object whose policy object will be detached."
              }
            ]
          }
        },
        "description": "Detaches the specified policy from the specified directory inside a <a>BatchWrite</a> operation. For more information, see <a>DetachPolicy</a> and <a>BatchWriteRequest$Operations</a>."
      },
      "BatchCreateIndex": {
        "type": "object",
        "required": [
          "OrderedIndexedAttributeList",
          "IsUnique"
        ],
        "properties": {
          "OrderedIndexedAttributeList": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeKeyList"
              },
              {
                "description": "Specifies the attributes that should be indexed on. Currently only a single attribute is supported."
              }
            ]
          },
          "IsUnique": {
            "allOf": [
              {
                "$ref": "#/$defs/Bool"
              },
              {
                "description": "Indicates whether the attribute that is being indexed has unique values or not."
              }
            ]
          },
          "ParentReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "A reference to the parent object that contains the index object."
              }
            ]
          },
          "LinkName": {
            "allOf": [
              {
                "$ref": "#/$defs/LinkName"
              },
              {
                "description": "The name of the link between the parent object and the index object."
              }
            ]
          },
          "BatchReferenceName": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchReferenceName"
              },
              {
                "description": "The batch reference name. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches\">Batches</a> for more information."
              }
            ]
          }
        },
        "description": "Creates an index object inside of a <a>BatchRead</a> operation. For more information, see <a>CreateIndex</a> and <a>BatchReadRequest$Operations</a>."
      },
      "AttributeKeyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttributeKey"
        }
      },
      "Bool": {
        "type": "boolean"
      },
      "BatchAttachToIndex": {
        "type": "object",
        "required": [
          "IndexReference",
          "TargetReference"
        ],
        "properties": {
          "IndexReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "A reference to the index that you are attaching the object to."
              }
            ]
          },
          "TargetReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "A reference to the object that you are attaching to the index."
              }
            ]
          }
        },
        "description": "Attaches the specified object to the specified index inside a <a>BatchRead</a> operation. For more information, see <a>AttachToIndex</a> and <a>BatchReadRequest$Operations</a>."
      },
      "BatchDetachFromIndex": {
        "type": "object",
        "required": [
          "IndexReference",
          "TargetReference"
        ],
        "properties": {
          "IndexReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "A reference to the index object."
              }
            ]
          },
          "TargetReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "A reference to the object being detached from the index."
              }
            ]
          }
        },
        "description": "Detaches the specified object from the specified index inside a <a>BatchRead</a> operation. For more information, see <a>DetachFromIndex</a> and <a>BatchReadRequest$Operations</a>."
      },
      "BatchAttachTypedLink": {
        "type": "object",
        "required": [
          "SourceObjectReference",
          "TargetObjectReference",
          "TypedLinkFacet",
          "Attributes"
        ],
        "properties": {
          "SourceObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Identifies the source object that the typed link will attach to."
              }
            ]
          },
          "TargetObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Identifies the target object that the typed link will attach to."
              }
            ]
          },
          "TypedLinkFacet": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkSchemaAndFacetName"
              },
              {
                "description": "Identifies the typed link facet that is associated with the typed link."
              }
            ]
          },
          "Attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeNameAndValueList"
              },
              {
                "description": "A set of attributes that are associated with the typed link."
              }
            ]
          }
        },
        "description": "Attaches a typed link to a specified source and target object inside a <a>BatchRead</a> operation. For more information, see <a>AttachTypedLink</a> and <a>BatchReadRequest$Operations</a>."
      },
      "TypedLinkSchemaAndFacetName": {
        "type": "object",
        "required": [
          "SchemaArn",
          "TypedLinkName"
        ],
        "properties": {
          "SchemaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>."
              }
            ]
          },
          "TypedLinkName": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkName"
              },
              {
                "description": "The unique name of the typed link facet."
              }
            ]
          }
        },
        "description": "Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link."
      },
      "TypedLinkName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._-]*$"
      },
      "AttributeNameAndValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttributeNameAndValue"
        }
      },
      "AttributeNameAndValue": {
        "type": "object",
        "required": [
          "AttributeName",
          "Value"
        ],
        "properties": {
          "AttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeName"
              },
              {
                "description": "The attribute name of the typed link."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The value for the typed link."
              }
            ]
          }
        },
        "description": "Identifies the attribute name and value for a typed link."
      },
      "BatchDetachTypedLink": {
        "type": "object",
        "required": [
          "TypedLinkSpecifier"
        ],
        "properties": {
          "TypedLinkSpecifier": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkSpecifier"
              },
              {
                "description": "Used to accept a typed link specifier as input."
              }
            ]
          }
        },
        "description": "Detaches a typed link from a specified source and target object inside a <a>BatchRead</a> operation. For more information, see <a>DetachTypedLink</a> and <a>BatchReadRequest$Operations</a>."
      },
      "TypedLinkSpecifier": {
        "type": "object",
        "required": [
          "TypedLinkFacet",
          "SourceObjectReference",
          "TargetObjectReference",
          "IdentityAttributeValues"
        ],
        "properties": {
          "TypedLinkFacet": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkSchemaAndFacetName"
              },
              {
                "description": "Identifies the typed link facet that is associated with the typed link."
              }
            ]
          },
          "SourceObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Identifies the source object that the typed link will attach to."
              }
            ]
          },
          "TargetObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Identifies the target object that the typed link will attach to."
              }
            ]
          },
          "IdentityAttributeValues": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeNameAndValueList"
              },
              {
                "description": "Identifies the attribute value to update."
              }
            ]
          }
        },
        "description": "Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch."
      },
      "BatchUpdateLinkAttributes": {
        "type": "object",
        "required": [
          "TypedLinkSpecifier",
          "AttributeUpdates"
        ],
        "properties": {
          "TypedLinkSpecifier": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkSpecifier"
              },
              {
                "description": "Allows a typed link specifier to be accepted as input."
              }
            ]
          },
          "AttributeUpdates": {
            "allOf": [
              {
                "$ref": "#/$defs/LinkAttributeUpdateList"
              },
              {
                "description": "The attributes update structure."
              }
            ]
          }
        },
        "description": "Updates a given typed link’s attributes inside a <a>BatchRead</a> operation. Attributes to be updated must not contribute to the typed link’s identity, as defined by its <code>IdentityAttributeOrder</code>. For more information, see <a>UpdateLinkAttributes</a> and <a>BatchReadRequest$Operations</a>."
      },
      "LinkAttributeUpdateList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LinkAttributeUpdate"
        }
      },
      "LinkAttributeUpdate": {
        "type": "object",
        "properties": {
          "AttributeKey": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeKey"
              },
              {
                "description": "The key of the attribute being updated."
              }
            ]
          },
          "AttributeAction": {
            "allOf": [
              {
                "$ref": "#/$defs/LinkAttributeAction"
              },
              {
                "description": "The action to perform as part of the attribute update."
              }
            ]
          }
        },
        "description": "Structure that contains attribute update information."
      },
      "LinkAttributeAction": {
        "type": "object",
        "properties": {
          "AttributeActionType": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateActionType"
              },
              {
                "description": "A type that can be either <code>UPDATE_OR_CREATE</code> or <code>DELETE</code>."
              }
            ]
          },
          "AttributeUpdateValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The value that you want to update to."
              }
            ]
          }
        },
        "description": "The action to take on a typed link attribute value. Updates are only supported for attributes which don’t contribute to link identity."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://clouddirectory.us-east-1.amazonaws.com/amazonclouddirectory/2017-01-11/batchwrite#x-amz-data-partition"
    },
    "headers": {
      "x-amz-data-partition": {
        "$": "x-amz-data-partition"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Responses**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the <a href=\"http://status.aws.amazon.com/\">AWS Service Health Dashboard</a> site to see if there are any operational issues with the service.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "481": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates that the provided ARN value is not valid.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "482": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "483": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates that your request is malformed in some manner. See the exception message.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "484": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates that limits are exceeded. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/limits.html\">Limits</a> for more information.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "485": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Access denied. Check your permissions.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "486": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Operations are only permitted on enabled directories.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "487": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A <code>BatchWrite</code> exception has occurred.",
        "**Key properties:**",
        {
          "$ul": [
            "**Index**",
            "**Type**",
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
