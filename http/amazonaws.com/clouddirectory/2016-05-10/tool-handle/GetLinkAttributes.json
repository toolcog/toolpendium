{
  "name": "GetLinkAttributes",
  "description": "Retrieves attributes that are associated with a typed link.",
  "parameters": {
    "type": "object",
    "properties": {
      "x-amz-data-partition": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) that is associated with the Directory where the typed link resides. For more information, see <a>arns</a> or <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "TypedLinkSpecifier",
          "AttributeNames"
        ],
        "properties": {
          "TypedLinkSpecifier": {
            "description": "Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.",
            "type": "object",
            "properties": {
              "TypedLinkFacet": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TypedLinkSchemaAndFacetName"
                  },
                  {
                    "description": "Identifies the typed link facet that is associated with the typed link."
                  }
                ]
              },
              "SourceObjectReference": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ObjectReference"
                  },
                  {
                    "description": "Identifies the source object that the typed link will attach to."
                  }
                ]
              },
              "TargetObjectReference": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ObjectReference"
                  },
                  {
                    "description": "Identifies the target object that the typed link will attach to."
                  }
                ]
              },
              "IdentityAttributeValues": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AttributeNameAndValueList"
                  },
                  {
                    "description": "Identifies the attribute value to update."
                  }
                ]
              }
            }
          },
          "AttributeNames": {
            "description": "A list of attribute names whose values will be retrieved.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AttributeName"
            }
          },
          "ConsistencyLevel": {
            "description": "The consistency level at which to retrieve the attributes on a typed link.",
            "type": "string",
            "enum": [
              "SERIALIZABLE",
              "EVENTUAL"
            ]
          }
        }
      }
    },
    "required": [
      "x-amz-data-partition",
      "body"
    ],
    "$defs": {
      "TypedLinkSchemaAndFacetName": {
        "type": "object",
        "required": [
          "SchemaArn",
          "TypedLinkName"
        ],
        "properties": {
          "SchemaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>."
              }
            ]
          },
          "TypedLinkName": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkName"
              },
              {
                "description": "The unique name of the typed link facet."
              }
            ]
          }
        },
        "description": "Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link."
      },
      "Arn": {
        "type": "string"
      },
      "TypedLinkName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._-]*$"
      },
      "ObjectReference": {
        "type": "object",
        "properties": {
          "Selector": {
            "allOf": [
              {
                "$ref": "#/$defs/SelectorObjectReference"
              },
              {
                "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects\">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The reference that identifies an object."
      },
      "SelectorObjectReference": {
        "type": "string"
      },
      "AttributeNameAndValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttributeNameAndValue"
        }
      },
      "AttributeNameAndValue": {
        "type": "object",
        "required": [
          "AttributeName",
          "Value"
        ],
        "properties": {
          "AttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeName"
              },
              {
                "description": "The attribute name of the typed link."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The value for the typed link."
              }
            ]
          }
        },
        "description": "Identifies the attribute name and value for a typed link."
      },
      "AttributeName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._-]*$",
        "minLength": 1,
        "maxLength": 64
      },
      "TypedAttributeValue": {
        "type": "object",
        "properties": {
          "StringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StringAttributeValue"
              },
              {
                "description": "A string data value."
              }
            ]
          },
          "BinaryValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BinaryAttributeValue"
              },
              {
                "description": "A binary data value."
              }
            ]
          },
          "BooleanValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanAttributeValue"
              },
              {
                "description": "A Boolean data value."
              }
            ]
          },
          "NumberValue": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberAttributeValue"
              },
              {
                "description": "A number data value."
              }
            ]
          },
          "DatetimeValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DatetimeAttributeValue"
              },
              {
                "description": "A date and time value."
              }
            ]
          }
        },
        "description": "Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value."
      },
      "StringAttributeValue": {
        "type": "string"
      },
      "BinaryAttributeValue": {
        "type": "string"
      },
      "BooleanAttributeValue": {
        "type": "boolean"
      },
      "NumberAttributeValue": {
        "type": "string"
      },
      "DatetimeAttributeValue": {
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://clouddirectory.us-east-1.amazonaws.com/amazonclouddirectory/2017-01-11/typedlink/attributes/get#x-amz-data-partition"
    },
    "headers": {
      "x-amz-data-partition": {
        "$": "x-amz-data-partition"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Attributes**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the <a href=\"http://status.aws.amazon.com/\">AWS Service Health Dashboard</a> site to see if there are any operational issues with the service.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "481": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates that the provided ARN value is not valid.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "482": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "483": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates that your request is malformed in some manner. See the exception message.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "484": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates that limits are exceeded. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/limits.html\">Limits</a> for more information.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "485": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Access denied. Check your permissions.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "486": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Operations are only permitted on enabled directories.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "487": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The specified resource could not be found.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "488": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The <a>Facet</a> that you provided was not well formed or could not be validated with the schema.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
