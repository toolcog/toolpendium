{
  "name": "UpdateTypedLinkFacet",
  "description": "Updates a <a>TypedLinkFacet</a>. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.",
  "parameters": {
    "type": "object",
    "properties": {
      "x-amz-data-partition": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Name",
          "AttributeUpdates",
          "IdentityAttributeOrder"
        ],
        "properties": {
          "Name": {
            "description": "The unique name of the typed link facet.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9._-]*$"
          },
          "AttributeUpdates": {
            "description": "Attributes update structure.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/TypedLinkFacetAttributeUpdate"
            }
          },
          "IdentityAttributeOrder": {
            "description": "The order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to a typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink\">Typed link</a>.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AttributeName"
            }
          }
        }
      }
    },
    "required": [
      "x-amz-data-partition",
      "body"
    ],
    "$defs": {
      "TypedLinkFacetAttributeUpdate": {
        "type": "object",
        "required": [
          "Attribute",
          "Action"
        ],
        "properties": {
          "Attribute": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkAttributeDefinition"
              },
              {
                "description": "The attribute to update."
              }
            ]
          },
          "Action": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateActionType"
              },
              {
                "description": "The action to perform when updating the attribute."
              }
            ]
          }
        },
        "description": "A typed link facet attribute update."
      },
      "TypedLinkAttributeDefinition": {
        "type": "object",
        "required": [
          "Name",
          "Type",
          "RequiredBehavior"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeName"
              },
              {
                "description": "The unique name of the typed link attribute."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/FacetAttributeType"
              },
              {
                "description": "The type of the attribute."
              }
            ]
          },
          "DefaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The default value of the attribute (if configured)."
              }
            ]
          },
          "IsImmutable": {
            "allOf": [
              {
                "$ref": "#/$defs/Bool"
              },
              {
                "description": "Whether the attribute is mutable or not."
              }
            ]
          },
          "Rules": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleMap"
              },
              {
                "description": "Validation rules that are attached to the attribute definition."
              }
            ]
          },
          "RequiredBehavior": {
            "allOf": [
              {
                "$ref": "#/$defs/RequiredAttributeBehavior"
              },
              {
                "description": "The required behavior of the <code>TypedLinkAttributeDefinition</code>."
              }
            ]
          }
        },
        "description": "A typed link attribute definition."
      },
      "AttributeName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._-]*$",
        "minLength": 1,
        "maxLength": 64
      },
      "FacetAttributeType": {
        "type": "string",
        "enum": [
          "STRING",
          "BINARY",
          "BOOLEAN",
          "NUMBER",
          "DATETIME"
        ]
      },
      "TypedAttributeValue": {
        "type": "object",
        "properties": {
          "StringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StringAttributeValue"
              },
              {
                "description": "A string data value."
              }
            ]
          },
          "BinaryValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BinaryAttributeValue"
              },
              {
                "description": "A binary data value."
              }
            ]
          },
          "BooleanValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanAttributeValue"
              },
              {
                "description": "A Boolean data value."
              }
            ]
          },
          "NumberValue": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberAttributeValue"
              },
              {
                "description": "A number data value."
              }
            ]
          },
          "DatetimeValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DatetimeAttributeValue"
              },
              {
                "description": "A date and time value."
              }
            ]
          }
        },
        "description": "Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value."
      },
      "StringAttributeValue": {
        "type": "string"
      },
      "BinaryAttributeValue": {
        "type": "string"
      },
      "BooleanAttributeValue": {
        "type": "boolean"
      },
      "NumberAttributeValue": {
        "type": "string"
      },
      "DatetimeAttributeValue": {
        "type": "string",
        "format": "date-time"
      },
      "Bool": {
        "type": "boolean"
      },
      "RuleMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/Rule"
        }
      },
      "Rule": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleType"
              },
              {
                "description": "The type of attribute validation rule."
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleParameterMap"
              },
              {
                "description": "The minimum and maximum parameters that are associated with the rule."
              }
            ]
          }
        },
        "description": "Contains an Amazon Resource Name (ARN) and parameters that are associated with the rule."
      },
      "RuleType": {
        "type": "string",
        "enum": [
          "BINARY_LENGTH",
          "NUMBER_COMPARISON",
          "STRING_FROM_SET",
          "STRING_LENGTH"
        ]
      },
      "RuleParameterMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/RuleParameterValue"
        }
      },
      "RuleParameterValue": {
        "type": "string"
      },
      "RequiredAttributeBehavior": {
        "type": "string",
        "enum": [
          "REQUIRED_ALWAYS",
          "NOT_REQUIRED"
        ]
      },
      "UpdateActionType": {
        "type": "string",
        "enum": [
          "CREATE_OR_UPDATE",
          "DELETE"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://clouddirectory.us-east-1.amazonaws.com/amazonclouddirectory/2017-01-11/typedlink/facet#x-amz-data-partition"
    },
    "headers": {
      "x-amz-data-partition": {
        "$": "x-amz-data-partition"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the <a href=\"http://status.aws.amazon.com/\">AWS Service Health Dashboard</a> site to see if there are any operational issues with the service.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "481": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates that the provided ARN value is not valid.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "482": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "483": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates that your request is malformed in some manner. See the exception message.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "484": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Indicates that limits are exceeded. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/limits.html\">Limits</a> for more information.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "485": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Access denied. Check your permissions.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "486": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The <a>Facet</a> that you provided was not well formed or could not be validated with the schema.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "487": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An attempt to modify a <a>Facet</a> resulted in an invalid schema exception.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "488": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The specified resource could not be found.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "489": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The specified <a>Facet</a> could not be found.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "490": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Occurs when any of the rule parameter keys or values are invalid.",
        "**Key properties:**",
        {
          "$ul": [
            "**Message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
