{
  "name": "BatchRead",
  "description": "Performs all the read operations in a batch. ",
  "parameters": {
    "type": "object",
    "properties": {
      "x-amz-data-partition": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>."
      },
      "x-amz-consistency-level": {
        "type": "string",
        "enum": [
          "SERIALIZABLE",
          "EVENTUAL"
        ],
        "description": "Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Operations"
        ],
        "properties": {
          "Operations": {
            "description": "A list of operations that are part of the batch.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/BatchReadOperation"
            }
          }
        }
      }
    },
    "required": [
      "x-amz-data-partition",
      "body"
    ],
    "$defs": {
      "BatchReadOperation": {
        "type": "object",
        "properties": {
          "ListObjectAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchListObjectAttributes"
              },
              {
                "description": "Lists all attributes that are associated with an object."
              }
            ]
          },
          "ListObjectChildren": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchListObjectChildren"
              },
              {
                "description": "Returns a paginated list of child objects that are associated with a given object."
              }
            ]
          },
          "ListAttachedIndices": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchListAttachedIndices"
              },
              {
                "description": "Lists indices attached to an object."
              }
            ]
          },
          "ListObjectParentPaths": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchListObjectParentPaths"
              },
              {
                "description": "Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html\">Directory Structure</a>."
              }
            ]
          },
          "GetObjectInformation": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchGetObjectInformation"
              },
              {
                "description": "Retrieves metadata about an object."
              }
            ]
          },
          "GetObjectAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchGetObjectAttributes"
              },
              {
                "description": "Retrieves attributes within a facet that are associated with an object."
              }
            ]
          },
          "ListObjectParents": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchListObjectParents"
              },
              {
                "description": "Lists parent objects that are associated with a given object in pagination fashion."
              }
            ]
          },
          "ListObjectPolicies": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchListObjectPolicies"
              },
              {
                "description": "Returns policies attached to an object in pagination fashion."
              }
            ]
          },
          "ListPolicyAttachments": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchListPolicyAttachments"
              },
              {
                "description": "Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached."
              }
            ]
          },
          "LookupPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchLookupPolicy"
              },
              {
                "description": "Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don't have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don't lead to the root from the target object are ignored. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies\">Policies</a>."
              }
            ]
          },
          "ListIndex": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchListIndex"
              },
              {
                "description": "Lists objects attached to the specified index."
              }
            ]
          },
          "ListOutgoingTypedLinks": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchListOutgoingTypedLinks"
              },
              {
                "description": "Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
              }
            ]
          },
          "ListIncomingTypedLinks": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchListIncomingTypedLinks"
              },
              {
                "description": "Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
              }
            ]
          },
          "GetLinkAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/BatchGetLinkAttributes"
              },
              {
                "description": "Retrieves attributes that are associated with a typed link."
              }
            ]
          }
        },
        "description": "Represents the output of a <code>BatchRead</code> operation."
      },
      "BatchListObjectAttributes": {
        "type": "object",
        "required": [
          "ObjectReference"
        ],
        "properties": {
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Reference of the object whose attributes need to be listed."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The pagination token."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberResults"
              },
              {
                "description": "The maximum number of items to be retrieved in a single call. This is an approximate number."
              }
            ]
          },
          "FacetFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaFacet"
              },
              {
                "description": "Used to filter the list of object attributes that are associated with a certain facet."
              }
            ]
          }
        },
        "description": "Represents the output of a <a>ListObjectAttributes</a> operation."
      },
      "ObjectReference": {
        "type": "object",
        "properties": {
          "Selector": {
            "allOf": [
              {
                "$ref": "#/$defs/SelectorObjectReference"
              },
              {
                "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An objectâ€™s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes. </p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The reference that identifies an object."
      },
      "SelectorObjectReference": {
        "type": "string"
      },
      "NextToken": {
        "type": "string"
      },
      "NumberResults": {
        "type": "integer",
        "minimum": 1
      },
      "SchemaFacet": {
        "type": "object",
        "properties": {
          "SchemaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_inplaceschemaupgrade.html\">In-Place Schema Upgrade</a> for a description of when to provide minor versions. If this value is set, FacetName must also be set."
              }
            ]
          },
          "FacetName": {
            "allOf": [
              {
                "$ref": "#/$defs/FacetName"
              },
              {
                "description": "The name of the facet. If this value is set, SchemaArn must also be set."
              }
            ]
          }
        },
        "description": "A facet."
      },
      "Arn": {
        "type": "string"
      },
      "FacetName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._-]*$",
        "minLength": 1,
        "maxLength": 64
      },
      "BatchListObjectChildren": {
        "type": "object",
        "required": [
          "ObjectReference"
        ],
        "properties": {
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Reference of the object for which child objects are being listed."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The pagination token."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberResults"
              },
              {
                "description": "Maximum number of items to be retrieved in a single call. This is an approximate number."
              }
            ]
          }
        },
        "description": "Represents the output of a <a>ListObjectChildren</a> operation."
      },
      "BatchListAttachedIndices": {
        "type": "object",
        "required": [
          "TargetReference"
        ],
        "properties": {
          "TargetReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "A reference to the object that has indices attached."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The pagination token."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberResults"
              },
              {
                "description": "The maximum number of results to retrieve."
              }
            ]
          }
        },
        "description": "Lists indices attached to an object inside a <a>BatchRead</a> operation. For more information, see <a>ListAttachedIndices</a> and <a>BatchReadRequest$Operations</a>."
      },
      "BatchListObjectParentPaths": {
        "type": "object",
        "required": [
          "ObjectReference"
        ],
        "properties": {
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "The reference that identifies the object whose attributes will be listed."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The pagination token."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberResults"
              },
              {
                "description": "The maximum number of results to retrieve."
              }
            ]
          }
        },
        "description": "Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects inside a <a>BatchRead</a> operation. For more information, see <a>ListObjectParentPaths</a> and <a>BatchReadRequest$Operations</a>."
      },
      "BatchGetObjectInformation": {
        "type": "object",
        "required": [
          "ObjectReference"
        ],
        "properties": {
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "A reference to the object."
              }
            ]
          }
        },
        "description": "Retrieves metadata about an object inside a <a>BatchRead</a> operation. For more information, see <a>GetObjectInformation</a> and <a>BatchReadRequest$Operations</a>."
      },
      "BatchGetObjectAttributes": {
        "type": "object",
        "required": [
          "ObjectReference",
          "SchemaFacet",
          "AttributeNames"
        ],
        "properties": {
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Reference that identifies the object whose attributes will be retrieved."
              }
            ]
          },
          "SchemaFacet": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaFacet"
              },
              {
                "description": "Identifier for the facet whose attributes will be retrieved. See <a>SchemaFacet</a> for details."
              }
            ]
          },
          "AttributeNames": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeNameList"
              },
              {
                "description": "List of attribute names whose values will be retrieved."
              }
            ]
          }
        },
        "description": "Retrieves attributes within a facet that are associated with an object inside an <a>BatchRead</a> operation. For more information, see <a>GetObjectAttributes</a> and <a>BatchReadRequest$Operations</a>."
      },
      "AttributeNameList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttributeName"
        }
      },
      "AttributeName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._:-]*$",
        "minLength": 1,
        "maxLength": 230
      },
      "BatchListObjectParents": {
        "type": "object",
        "required": [
          "ObjectReference"
        ],
        "properties": {
          "ObjectReference": {
            "$ref": "#/$defs/ObjectReference"
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The pagination token."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberResults"
              },
              {
                "description": "The maximum number of items to be retrieved in a single call. This is an approximate number."
              }
            ]
          }
        },
        "description": "Lists parent objects that are associated with a given object in pagination fashion."
      },
      "BatchListObjectPolicies": {
        "type": "object",
        "required": [
          "ObjectReference"
        ],
        "properties": {
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "The reference that identifies the object whose attributes will be listed."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The pagination token."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberResults"
              },
              {
                "description": "The maximum number of results to retrieve."
              }
            ]
          }
        },
        "description": "Returns policies attached to an object in pagination fashion inside a <a>BatchRead</a> operation. For more information, see <a>ListObjectPolicies</a> and <a>BatchReadRequest$Operations</a>."
      },
      "BatchListPolicyAttachments": {
        "type": "object",
        "required": [
          "PolicyReference"
        ],
        "properties": {
          "PolicyReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "The reference that identifies the policy object."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The pagination token."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberResults"
              },
              {
                "description": "The maximum number of results to retrieve."
              }
            ]
          }
        },
        "description": "Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached inside a <a>BatchRead</a> operation. For more information, see <a>ListPolicyAttachments</a> and <a>BatchReadRequest$Operations</a>."
      },
      "BatchLookupPolicy": {
        "type": "object",
        "required": [
          "ObjectReference"
        ],
        "properties": {
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Reference that identifies the object whose policies will be looked up."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The pagination token."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberResults"
              },
              {
                "description": "The maximum number of results to retrieve."
              }
            ]
          }
        },
        "description": "Lists all policies from the root of the Directory to the object specified inside a <a>BatchRead</a> operation. For more information, see <a>LookupPolicy</a> and <a>BatchReadRequest$Operations</a>."
      },
      "BatchListIndex": {
        "type": "object",
        "required": [
          "IndexReference"
        ],
        "properties": {
          "RangesOnIndexedValues": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectAttributeRangeList"
              },
              {
                "description": "Specifies the ranges of indexed values that you want to query."
              }
            ]
          },
          "IndexReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "The reference to the index to list."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberResults"
              },
              {
                "description": "The maximum number of results to retrieve."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The pagination token."
              }
            ]
          }
        },
        "description": "Lists objects attached to the specified index inside a <a>BatchRead</a> operation. For more information, see <a>ListIndex</a> and <a>BatchReadRequest$Operations</a>."
      },
      "ObjectAttributeRangeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ObjectAttributeRange"
        }
      },
      "ObjectAttributeRange": {
        "type": "object",
        "properties": {
          "AttributeKey": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeKey"
              },
              {
                "description": "The key of the attribute that the attribute range covers."
              }
            ]
          },
          "Range": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValueRange"
              },
              {
                "description": "The range of attribute values being selected."
              }
            ]
          }
        },
        "description": "A range of attributes."
      },
      "AttributeKey": {
        "type": "object",
        "required": [
          "SchemaArn",
          "FacetName",
          "Name"
        ],
        "properties": {
          "SchemaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the schema that contains the facet and attribute."
              }
            ]
          },
          "FacetName": {
            "allOf": [
              {
                "$ref": "#/$defs/FacetName"
              },
              {
                "description": "The name of the facet that the attribute exists within."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeName"
              },
              {
                "description": "The name of the attribute."
              }
            ]
          }
        },
        "description": "A unique identifier for an attribute."
      },
      "TypedAttributeValueRange": {
        "type": "object",
        "required": [
          "StartMode",
          "EndMode"
        ],
        "properties": {
          "StartMode": {
            "allOf": [
              {
                "$ref": "#/$defs/RangeMode"
              },
              {
                "description": "The inclusive or exclusive range start."
              }
            ]
          },
          "StartValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The value to start the range at."
              }
            ]
          },
          "EndMode": {
            "allOf": [
              {
                "$ref": "#/$defs/RangeMode"
              },
              {
                "description": "The inclusive or exclusive range end."
              }
            ]
          },
          "EndValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The attribute value to terminate the range at."
              }
            ]
          }
        },
        "description": "A range of attribute values. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_range_filters.html\">Range Filters</a>."
      },
      "RangeMode": {
        "type": "string",
        "enum": [
          "FIRST",
          "LAST",
          "LAST_BEFORE_MISSING_VALUES",
          "INCLUSIVE",
          "EXCLUSIVE"
        ]
      },
      "TypedAttributeValue": {
        "type": "object",
        "properties": {
          "StringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StringAttributeValue"
              },
              {
                "description": "A string data value."
              }
            ]
          },
          "BinaryValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BinaryAttributeValue"
              },
              {
                "description": "A binary data value."
              }
            ]
          },
          "BooleanValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanAttributeValue"
              },
              {
                "description": "A Boolean data value."
              }
            ]
          },
          "NumberValue": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberAttributeValue"
              },
              {
                "description": "A number data value."
              }
            ]
          },
          "DatetimeValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DatetimeAttributeValue"
              },
              {
                "description": "A date and time value."
              }
            ]
          }
        },
        "description": "Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value."
      },
      "StringAttributeValue": {
        "type": "string"
      },
      "BinaryAttributeValue": {
        "type": "string"
      },
      "BooleanAttributeValue": {
        "type": "boolean"
      },
      "NumberAttributeValue": {
        "type": "string"
      },
      "DatetimeAttributeValue": {
        "type": "string",
        "format": "date-time"
      },
      "BatchListOutgoingTypedLinks": {
        "type": "object",
        "required": [
          "ObjectReference"
        ],
        "properties": {
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "The reference that identifies the object whose attributes will be listed."
              }
            ]
          },
          "FilterAttributeRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkAttributeRangeList"
              },
              {
                "description": "Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range."
              }
            ]
          },
          "FilterTypedLink": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkSchemaAndFacetName"
              },
              {
                "description": "Filters are interpreted in the order of the attributes defined on the typed link facet, not the order they are supplied to any API calls."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The pagination token."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberResults"
              },
              {
                "description": "The maximum number of results to retrieve."
              }
            ]
          }
        },
        "description": "Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object inside a <a>BatchRead</a> operation. For more information, see <a>ListOutgoingTypedLinks</a> and <a>BatchReadRequest$Operations</a>."
      },
      "TypedLinkAttributeRangeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TypedLinkAttributeRange"
        }
      },
      "TypedLinkAttributeRange": {
        "type": "object",
        "required": [
          "Range"
        ],
        "properties": {
          "AttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeName"
              },
              {
                "description": "The unique name of the typed link attribute."
              }
            ]
          },
          "Range": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValueRange"
              },
              {
                "description": "The range of attribute values that are being selected."
              }
            ]
          }
        },
        "description": "Identifies the range of attributes that are used by a specified filter."
      },
      "TypedLinkSchemaAndFacetName": {
        "type": "object",
        "required": [
          "SchemaArn",
          "TypedLinkName"
        ],
        "properties": {
          "SchemaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>."
              }
            ]
          },
          "TypedLinkName": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkName"
              },
              {
                "description": "The unique name of the typed link facet."
              }
            ]
          }
        },
        "description": "Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link."
      },
      "TypedLinkName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._-]*$"
      },
      "BatchListIncomingTypedLinks": {
        "type": "object",
        "required": [
          "ObjectReference"
        ],
        "properties": {
          "ObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "The reference that identifies the object whose attributes will be listed."
              }
            ]
          },
          "FilterAttributeRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkAttributeRangeList"
              },
              {
                "description": "Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range."
              }
            ]
          },
          "FilterTypedLink": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkSchemaAndFacetName"
              },
              {
                "description": "Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The pagination token."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberResults"
              },
              {
                "description": "The maximum number of results to retrieve."
              }
            ]
          }
        },
        "description": "Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object inside a <a>BatchRead</a> operation. For more information, see <a>ListIncomingTypedLinks</a> and <a>BatchReadRequest$Operations</a>."
      },
      "BatchGetLinkAttributes": {
        "type": "object",
        "required": [
          "TypedLinkSpecifier",
          "AttributeNames"
        ],
        "properties": {
          "TypedLinkSpecifier": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkSpecifier"
              },
              {
                "description": "Allows a typed link specifier to be accepted as input."
              }
            ]
          },
          "AttributeNames": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeNameList"
              },
              {
                "description": "A list of attribute names whose values will be retrieved."
              }
            ]
          }
        },
        "description": "Retrieves attributes that are associated with a typed link inside a <a>BatchRead</a> operation. For more information, see <a>GetLinkAttributes</a> and <a>BatchReadRequest$Operations</a>."
      },
      "TypedLinkSpecifier": {
        "type": "object",
        "required": [
          "TypedLinkFacet",
          "SourceObjectReference",
          "TargetObjectReference",
          "IdentityAttributeValues"
        ],
        "properties": {
          "TypedLinkFacet": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkSchemaAndFacetName"
              },
              {
                "description": "Identifies the typed link facet that is associated with the typed link."
              }
            ]
          },
          "SourceObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Identifies the source object that the typed link will attach to."
              }
            ]
          },
          "TargetObjectReference": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectReference"
              },
              {
                "description": "Identifies the target object that the typed link will attach to."
              }
            ]
          },
          "IdentityAttributeValues": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeNameAndValueList"
              },
              {
                "description": "Identifies the attribute value to update."
              }
            ]
          }
        },
        "description": "Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch."
      },
      "AttributeNameAndValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttributeNameAndValue"
        }
      },
      "AttributeNameAndValue": {
        "type": "object",
        "required": [
          "AttributeName",
          "Value"
        ],
        "properties": {
          "AttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeName"
              },
              {
                "description": "The attribute name of the typed link."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The value for the typed link."
              }
            ]
          }
        },
        "description": "Identifies the attribute name and value for a typed link."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://clouddirectory.us-east-1.amazonaws.com/amazonclouddirectory/2017-01-11/batchread#x-amz-data-partition"
    },
    "headers": {
      "x-amz-data-partition": {
        "$": "x-amz-data-partition"
      },
      "x-amz-consistency-level": {
        "$": "x-amz-consistency-level"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Responses**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
