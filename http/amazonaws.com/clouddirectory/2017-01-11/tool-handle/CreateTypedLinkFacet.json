{
  "name": "CreateTypedLinkFacet",
  "description": "Creates a <a>TypedLinkFacet</a>. For more information, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>.",
  "parameters": {
    "type": "object",
    "properties": {
      "x-amz-data-partition": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Facet"
        ],
        "properties": {
          "Facet": {
            "description": "Defines the typed links structure and its attributes. To create a typed link facet, use the <a>CreateTypedLinkFacet</a> API.",
            "type": "object",
            "properties": {
              "Name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TypedLinkName"
                  },
                  {
                    "description": "The unique name of the typed link facet."
                  }
                ]
              },
              "Attributes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TypedLinkAttributeDefinitionList"
                  },
                  {
                    "description": "A set of key-value pairs associated with the typed link. Typed link attributes are used when you have data values that are related to the link itself, and not to one of the two objects being linked. Identity attributes also serve to distinguish the link from others of the same type between the same objects."
                  }
                ]
              },
              "IdentityAttributeOrder": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AttributeNameList"
                  },
                  {
                    "description": "The set of attributes that distinguish links made from this facet from each other, in the order of significance. Listing typed links can filter on the values of these attributes. See <a>ListOutgoingTypedLinks</a> and <a>ListIncomingTypedLinks</a> for details."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "x-amz-data-partition",
      "body"
    ],
    "$defs": {
      "TypedLinkName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._-]*$"
      },
      "TypedLinkAttributeDefinitionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TypedLinkAttributeDefinition"
        }
      },
      "TypedLinkAttributeDefinition": {
        "type": "object",
        "required": [
          "Name",
          "Type",
          "RequiredBehavior"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeName"
              },
              {
                "description": "The unique name of the typed link attribute."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/FacetAttributeType"
              },
              {
                "description": "The type of the attribute."
              }
            ]
          },
          "DefaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The default value of the attribute (if configured)."
              }
            ]
          },
          "IsImmutable": {
            "allOf": [
              {
                "$ref": "#/$defs/Bool"
              },
              {
                "description": "Whether the attribute is mutable or not."
              }
            ]
          },
          "Rules": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleMap"
              },
              {
                "description": "Validation rules that are attached to the attribute definition."
              }
            ]
          },
          "RequiredBehavior": {
            "allOf": [
              {
                "$ref": "#/$defs/RequiredAttributeBehavior"
              },
              {
                "description": "The required behavior of the <code>TypedLinkAttributeDefinition</code>."
              }
            ]
          }
        },
        "description": "A typed link attribute definition."
      },
      "AttributeName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._:-]*$",
        "minLength": 1,
        "maxLength": 230
      },
      "FacetAttributeType": {
        "type": "string",
        "enum": [
          "STRING",
          "BINARY",
          "BOOLEAN",
          "NUMBER",
          "DATETIME",
          "VARIANT"
        ]
      },
      "TypedAttributeValue": {
        "type": "object",
        "properties": {
          "StringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StringAttributeValue"
              },
              {
                "description": "A string data value."
              }
            ]
          },
          "BinaryValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BinaryAttributeValue"
              },
              {
                "description": "A binary data value."
              }
            ]
          },
          "BooleanValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanAttributeValue"
              },
              {
                "description": "A Boolean data value."
              }
            ]
          },
          "NumberValue": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberAttributeValue"
              },
              {
                "description": "A number data value."
              }
            ]
          },
          "DatetimeValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DatetimeAttributeValue"
              },
              {
                "description": "A date and time value."
              }
            ]
          }
        },
        "description": "Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value."
      },
      "StringAttributeValue": {
        "type": "string"
      },
      "BinaryAttributeValue": {
        "type": "string"
      },
      "BooleanAttributeValue": {
        "type": "boolean"
      },
      "NumberAttributeValue": {
        "type": "string"
      },
      "DatetimeAttributeValue": {
        "type": "string",
        "format": "date-time"
      },
      "Bool": {
        "type": "boolean"
      },
      "RuleMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/Rule"
        }
      },
      "Rule": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleType"
              },
              {
                "description": "The type of attribute validation rule."
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/RuleParameterMap"
              },
              {
                "description": "The minimum and maximum parameters that are associated with the rule."
              }
            ]
          }
        },
        "description": "Contains an Amazon Resource Name (ARN) and parameters that are associated with the rule."
      },
      "RuleType": {
        "type": "string",
        "enum": [
          "BINARY_LENGTH",
          "NUMBER_COMPARISON",
          "STRING_FROM_SET",
          "STRING_LENGTH"
        ]
      },
      "RuleParameterMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/RuleParameterValue"
        }
      },
      "RuleParameterValue": {
        "type": "string"
      },
      "RequiredAttributeBehavior": {
        "type": "string",
        "enum": [
          "REQUIRED_ALWAYS",
          "NOT_REQUIRED"
        ]
      },
      "AttributeNameList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttributeName"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://clouddirectory.us-east-1.amazonaws.com/amazonclouddirectory/2017-01-11/typedlink/facet/create#x-amz-data-partition"
    },
    "headers": {
      "x-amz-data-partition": {
        "$": "x-amz-data-partition"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
