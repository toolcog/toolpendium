{
  "name": "UpdateLinkAttributes",
  "description": "Updates a given typed link’s attributes. Attributes to be updated must not contribute to the typed link’s identity, as defined by its <code>IdentityAttributeOrder</code>.",
  "parameters": {
    "type": "object",
    "properties": {
      "x-amz-data-partition": {
        "type": "string",
        "description": "The Amazon Resource Name (ARN) that is associated with the Directory where the updated typed link resides. For more information, see <a>arns</a> or <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink\">Typed Links</a>."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "TypedLinkSpecifier",
          "AttributeUpdates"
        ],
        "properties": {
          "TypedLinkSpecifier": {
            "description": "Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.",
            "type": "object",
            "properties": {
              "TypedLinkFacet": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TypedLinkSchemaAndFacetName"
                  },
                  {
                    "description": "Identifies the typed link facet that is associated with the typed link."
                  }
                ]
              },
              "SourceObjectReference": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ObjectReference"
                  },
                  {
                    "description": "Identifies the source object that the typed link will attach to."
                  }
                ]
              },
              "TargetObjectReference": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ObjectReference"
                  },
                  {
                    "description": "Identifies the target object that the typed link will attach to."
                  }
                ]
              },
              "IdentityAttributeValues": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AttributeNameAndValueList"
                  },
                  {
                    "description": "Identifies the attribute value to update."
                  }
                ]
              }
            }
          },
          "AttributeUpdates": {
            "description": "The attributes update structure.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/LinkAttributeUpdate"
            }
          }
        }
      }
    },
    "required": [
      "x-amz-data-partition",
      "body"
    ],
    "$defs": {
      "TypedLinkSchemaAndFacetName": {
        "type": "object",
        "required": [
          "SchemaArn",
          "TypedLinkName"
        ],
        "properties": {
          "SchemaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>."
              }
            ]
          },
          "TypedLinkName": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedLinkName"
              },
              {
                "description": "The unique name of the typed link facet."
              }
            ]
          }
        },
        "description": "Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link."
      },
      "Arn": {
        "type": "string"
      },
      "TypedLinkName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._-]*$"
      },
      "ObjectReference": {
        "type": "object",
        "properties": {
          "Selector": {
            "allOf": [
              {
                "$ref": "#/$defs/SelectorObjectReference"
              },
              {
                "description": "<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href=\"https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html\">Access Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier. To identify an object with ObjectIdentifier, the ObjectIdentifier must be wrapped in double quotes. </p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The reference that identifies an object."
      },
      "SelectorObjectReference": {
        "type": "string"
      },
      "AttributeNameAndValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttributeNameAndValue"
        }
      },
      "AttributeNameAndValue": {
        "type": "object",
        "required": [
          "AttributeName",
          "Value"
        ],
        "properties": {
          "AttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeName"
              },
              {
                "description": "The attribute name of the typed link."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The value for the typed link."
              }
            ]
          }
        },
        "description": "Identifies the attribute name and value for a typed link."
      },
      "AttributeName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._:-]*$",
        "minLength": 1,
        "maxLength": 230
      },
      "TypedAttributeValue": {
        "type": "object",
        "properties": {
          "StringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/StringAttributeValue"
              },
              {
                "description": "A string data value."
              }
            ]
          },
          "BinaryValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BinaryAttributeValue"
              },
              {
                "description": "A binary data value."
              }
            ]
          },
          "BooleanValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanAttributeValue"
              },
              {
                "description": "A Boolean data value."
              }
            ]
          },
          "NumberValue": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberAttributeValue"
              },
              {
                "description": "A number data value."
              }
            ]
          },
          "DatetimeValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DatetimeAttributeValue"
              },
              {
                "description": "A date and time value."
              }
            ]
          }
        },
        "description": "Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value."
      },
      "StringAttributeValue": {
        "type": "string"
      },
      "BinaryAttributeValue": {
        "type": "string"
      },
      "BooleanAttributeValue": {
        "type": "boolean"
      },
      "NumberAttributeValue": {
        "type": "string"
      },
      "DatetimeAttributeValue": {
        "type": "string",
        "format": "date-time"
      },
      "LinkAttributeUpdate": {
        "type": "object",
        "properties": {
          "AttributeKey": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeKey"
              },
              {
                "description": "The key of the attribute being updated."
              }
            ]
          },
          "AttributeAction": {
            "allOf": [
              {
                "$ref": "#/$defs/LinkAttributeAction"
              },
              {
                "description": "The action to perform as part of the attribute update."
              }
            ]
          }
        },
        "description": "Structure that contains attribute update information."
      },
      "AttributeKey": {
        "type": "object",
        "required": [
          "SchemaArn",
          "FacetName",
          "Name"
        ],
        "properties": {
          "SchemaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the schema that contains the facet and attribute."
              }
            ]
          },
          "FacetName": {
            "allOf": [
              {
                "$ref": "#/$defs/FacetName"
              },
              {
                "description": "The name of the facet that the attribute exists within."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeName"
              },
              {
                "description": "The name of the attribute."
              }
            ]
          }
        },
        "description": "A unique identifier for an attribute."
      },
      "FacetName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9._-]*$",
        "minLength": 1,
        "maxLength": 64
      },
      "LinkAttributeAction": {
        "type": "object",
        "properties": {
          "AttributeActionType": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateActionType"
              },
              {
                "description": "A type that can be either <code>UPDATE_OR_CREATE</code> or <code>DELETE</code>."
              }
            ]
          },
          "AttributeUpdateValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TypedAttributeValue"
              },
              {
                "description": "The value that you want to update to."
              }
            ]
          }
        },
        "description": "The action to take on a typed link attribute value. Updates are only supported for attributes which don’t contribute to link identity."
      },
      "UpdateActionType": {
        "type": "string",
        "enum": [
          "CREATE_OR_UPDATE",
          "DELETE"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://clouddirectory.us-east-1.amazonaws.com/amazonclouddirectory/2017-01-11/typedlink/attributes/update#x-amz-data-partition"
    },
    "headers": {
      "x-amz-data-partition": {
        "$": "x-amz-data-partition"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
