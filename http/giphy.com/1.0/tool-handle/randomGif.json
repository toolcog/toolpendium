{
  "name": "randomGif",
  "description": "Returns a random GIF, limited by tag. Excluding the tag parameter will return a random GIF from the GIPHY catalog.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "tag": {
        "type": "string",
        "description": "Filters results by specified tag."
      },
      "rating": {
        "type": "string",
        "description": "Filters results by specified rating."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.giphy.com/v1/gifs/random{?tag,rating}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**bitly_url**: The unique bit.ly URL for this GIF",
                  "**content_url**: Currently unused",
                  "**create_datetime**: The date this GIF was added to the GIPHY database.",
                  "**embded_url**: A URL used for embedding this GIF",
                  "**featured_tags**: An array of featured tags for this GIF (Note: Not available when using the Public Beta Key)",
                  "**id**: This GIF's unique ID",
                  [
                    "**images**: An object containing data for various available formats and sizes of this GIF.",
                    {
                      "$ul": [
                        "**downsized**",
                        "**downsized_large**",
                        "**downsized_medium**",
                        "**downsized_small**",
                        "**downsized_still**",
                        "**fixed_height**",
                        "**fixed_height_downsampled**",
                        "**fixed_height_small**",
                        "**fixed_height_small_still**",
                        "**fixed_height_still**",
                        "**fixed_width**",
                        "**fixed_width_downsampled**",
                        "**fixed_width_small**",
                        "**fixed_width_small_still**",
                        "**fixed_width_still**",
                        "**looping**",
                        "**original**",
                        "**original_still**",
                        "**preview**",
                        "**preview_gif**"
                      ]
                    }
                  ],
                  "**import_datetime**: The creation or upload date from this GIF's source.",
                  "**rating**: The MPAA-style rating for this content. Examples include Y, G, PG, PG-13 and R",
                  "**slug**: The unique slug used in this GIF's URL",
                  "**source**: The page on which this GIF was found",
                  "**source_post_url**: The URL of the webpage on which this GIF was found.",
                  "**source_tld**: The top level domain of the source URL.",
                  "**tags**: An array of tags for this GIF (Note: Not available when using the Public Beta Key)",
                  "**trending_datetime**: The date on which this gif was marked trending, if applicable.",
                  "**type**: Type of the gif. By default, this is almost always gif (default: gif)",
                  "**update_datetime**: The date on which this GIF was last updated.",
                  "**url**: The unique URL for this GIF",
                  [
                    "**user**: The User Object contains information about the user associated with a GIF and URLs to assets such as that user's avatar image, profile, and more.",
                    {
                      "$ul": [
                        "**avatar_url**: The URL for this user's avatar image.",
                        "**banner_url**: The URL for the banner image that appears atop this user's profile page.",
                        "**display_name**: The display name associated with this user (contains formatting the base username might not).",
                        "**profile_url**: The URL for this user's profile.",
                        "**twitter**: The Twitter username associated with this user, if applicable.",
                        "**username**: The username associated with this user."
                      ]
                    }
                  ],
                  "**username**: The username this GIF is attached to, if applicable"
                ]
              }
            ],
            [
              "**meta**: The Meta Object contains basic information regarding the request, whether it was successful, and the response given by the API.  Check `responses` to see a description of types of response codes the API might give you under different cirumstances.",
              {
                "$ul": [
                  "**msg**: HTTP Response Message",
                  "**response_id**: A unique ID paired with this response from the API.",
                  "**status**: HTTP Response Code"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
