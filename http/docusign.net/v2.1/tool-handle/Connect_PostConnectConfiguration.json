{
  "name": "Connect_PostConnectConfiguration",
  "description": "Creates a custom Connect configuration for the specified account.\n\nConnect is a webhook service that provides updates when certain events occur in your eSignature workflows. You can use this endpoint to create:\n* Account-level Connect configurations to listen for events related to any envelopes sent by one or more account users\n* Recipient Connect configurations that are triggered when one or more of your account users receive an envelope\n\nTo set an account-level configuration, set `configurationType` to **custom.**\nTo set a Recipient Connect configuration, set `configurationType` to **customrecipient.**\n\nIf you want to listen for events on only one envelope, use the [eventNotification](/docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition_eventnotification) object instead.\n\n**Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.\n\n## Data models\n\nThere are four possible data models for your Connect configuration. Consider:\n* Do you want the data in JSON or XML?\n* Do you want events sent individually (SIM) or in aggregate?\n\nDocuSign recommends using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/).\n\n<ds-column>\n\n<ds-step open=\"false\" hideIcon=\"true\">\n<h3>JSON SIM (Recommended)</h3>\n<div>\n\nSet `deliveryMode` to **SIM** and `eventData.version` to **restv2.1.** Use the `events` property to set the event statuses that will trigger your configuration.\n\nThe following sample request shows how to create an envelope-level configuration using JSON SIM:\n```\n{\n  \"configurationType\": \"custom\",\n  \"urlToPublishTo\": \"YOUR-WEBHOOK-URL\",\n  \"allUsers\": \"true\",\n  \"name\": \"jsonSimTest\",\n  \"deliveryMode\": \"SIM\",\n  \"allowEnvelopePublish\": \"true\",\n  \"enableLog\": \"true\",\n  \"eventData\": {\n      \"version\": \"restv2.1\"\n  },\n  \"events\": [\n      \"envelope-sent\",\n      \"envelope-delivered\",\n      \"envelope-completed\"\n  ]\n}\n```\n\nThe following sample request shows how to create a Recipient Connect configuration using JSON SIM:\n```\n{\n  \"configurationType\": \"customrecipient\",\n  \"urlToPublishTo\": \"YOUR-WEBHOOK-URL\",\n  \"allUsers\": \"true\",\n  \"name\": \"jsonSimTest\",\n  \"deliveryMode\": \"SIM\",\n  \"allowEnvelopePublish\": \"true\",\n  \"enableLog\": \"true\",\n  \"eventData\": {\n      \"version\": \"restv2.1\"\n  },\n  \"events\": [\n      \"recipient-sent\",\n      \"recipient-completed\"\n  ]\n}\n```\n\n</div></ds-step>\n\n<ds-step open=\"false\" hideIcon=\"true\">\n<h3>JSON Aggregate</h3>\n<div>\n\nSet `deliveryMode` to **aggregate** and `eventData.version` to **restv2.1.** Use the `envelopeEvents` or `recipientEvents` property to set the event statuses that will trigger your configuration.\n\n</div></ds-step>\n\n<ds-step open=\"false\" hideIcon=\"true\">\n<h3>XML Aggregate</h3>\n<div>\n\nSet `deliveryMode` to **aggregate.** Use the `envelopeEvents` or `recipientEvents` property to set the event statuses that will trigger your configuration.\n\n</div></ds-step>\n\n<ds-step open=\"false\" hideIcon=\"true\">\n<h3>XML SIM (Legacy apps only)</h3>\n<div>\n\n**Note:** This model [will be deprecated](https://www.docusign.com/blog/developers/docusign-connect-xml-sim-messaging-format-deprecated). \n\nSet `deliveryMode` to **SIM.** Use the `envelopeEvents` or `recipientEvents` property to set the event statuses that will trigger your configuration.\n\n</div></ds-step>\n</ds-column>\n\n## Troubleshooting\n\nIf your configuration is not working, check the following.\n\n* Connect must be enabled for your account to use this function.\n* If you are using `envelopeEvents` or `recipientEvents`, make sure that the event values are sentence case, not lowercase.\n* Make sure you have either set `allUsers` to **true** or set `userIds` to a non-empty array of IDs.\n* By default, this endpoint creates a disabled configuration. To enable the configuration immediately, set the body parameter `allowEnvelopePublish` to **true.** You can also enable the configuration in the UI.\n* To check if events are being emitted, set `enableLog` to **true** to view event logs in the Connect console.\n\n## Related topics\n\n* For more information about Connect, see the [DocuSign Connect guide](/platform/webhooks/connect/).\n* Use the MyAPICalls sample app to see an [example of this endpoint](https://myapicalls.sampleapps.docusign.com/scenario/6) using the JSON SIM model.",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The external account number (int) or account ID GUID."
      },
      "body": {
        "$ref": "#/$defs/connectCustomConfiguration"
      }
    },
    "required": [
      "accountId"
    ],
    "$defs": {
      "connectCustomConfiguration": {
        "description": "The `connectCustomConfiguration` object describes a Connect configuration for your account.",
        "properties": {
          "allUsers": {
            "description": "When **true,** the tracked envelope and recipient events for all users, including users that are added a later time, are sent through Connect. The default value is **false.**\n\n**Note:** If this property is **false,** make sure you set the `userIds` property to a non-empty array of user IDs.",
            "type": "string"
          },
          "allUsersExcept": {
            "description": "This flag allows you to toggle between including and excluding specified users from the configuration. When **false,** the users corresponding to the IDs in `userIds` will be included in the configuration. Conversely, when **true,** the users will be excluded from the configuration. The default value is **false.**",
            "type": "string"
          },
          "allowEnvelopePublish": {
            "description": "Set this value to **true** to enable the webhook. The default property is **false.**",
            "type": "string"
          },
          "allowSalesforcePublish": {
            "description": "When **true,** DocuSign sends data to the designated Salesforce account through Connect. The default value is **true.**",
            "type": "string"
          },
          "configurationType": {
            "description": "The type of the configuration. Valid values:\n\n* `custom`: Creates an account-level configuration\n* `customrecipient`: Creates a Recipient Connect configuration\n* `salesforce`\n* `eOriginal`\n\nThis property is required.",
            "type": "string"
          },
          "connectId": {
            "description": "The DocuSign-generated ID for the Connect configuration.\n\nThis property is read-only.",
            "type": "string"
          },
          "deliveryMode": {
            "description": "The delivery mode of the configuration. Valid values:\n\n* `SIM`\n* `Aggregate`",
            "type": "string"
          },
          "disabledBy": {
            "description": "",
            "type": "string"
          },
          "enableLog": {
            "description": "When **true,** Connect logging is turned on. DocuSign recommends that you enable this functionality to help troubleshoot any issues. \n\nYou can have a maximum of 100 active logs in your account. You can view the entries in active logs in the **Logs** tab in the Connect console.",
            "type": "string"
          },
          "envelopeEvents": {
            "description": "A list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `url` property.\n\nWhen using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), you must include either the `envelopeEvents` property or the `recipientEvents` property. If you are instead using the [JSON SIM event model](]/platform/webhooks/connect/improved-json-sim-event-model/), use the `events` property.\n\nThe [possible event statuses](/platform/webhooks/connect/event-triggers/) are:\n\n* `Sent`\n* `Delivered`\n* `Completed`\n* `Declined`\n* `Voided`\n\n**Note:** These values are case-sensitive.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "eventData": {
            "$ref": "#/$defs/connectEventData"
          },
          "events": {
            "description": "A comma-separated list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `urlToPublishTo` property.\n\nSet this property when you are using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/). If you are instead using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), set either the `envelopeEvents` property or the `recipientEvents` property.\n\nThe [possible event statuses](/platform/webhooks/connect/improved-json-sim-event-model/#eventreference) are:\n\n* `envelope-created`\n* `envelope-sent`\n* `envelope-resent`\n* `envelope-delivered`\n* `envelope-completed`\n* `envelope-declined`\n* `envelope-voided`\n* `recipient-authenticationfailed`\n* `recipient-autoresponded`\n* `recipient-declined`\n* `recipient-delivered`\n* `recipient-completed`\n* `recipient-sent`\n* `recipient-resent`\n* `template-created`\n* `template-modified`\n* `template-deleted`\n* `envelope-corrected`\n* `envelope-purge`\n* `envelope-deleted`\n* `envelope-discard`\n* `recipient-reassign`\n* `recipient-delegate`\n* `recipient-finish-later`\n* `click-agreed`\n* `click-declined`\n",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "externalFolderId": {
            "description": "The ID of an external folder.",
            "type": "string"
          },
          "externalFolderLabel": {
            "description": "The label for an external folder.",
            "type": "string"
          },
          "groupIds": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includeCertSoapHeader": {
            "description": "",
            "type": "string"
          },
          "includeCertificateOfCompletion": {
            "description": "When **true,** the Connect Service includes the Certificate of Completion with completed envelopes. ",
            "type": "string"
          },
          "includeDocumentFields": {
            "description": "When **true,** the Document Fields associated with the envelope's documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API. ",
            "type": "string"
          },
          "includeDocuments": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "includeEnvelopeVoidReason": {
            "description": "When **true,** if the envelope is voided, the Connect Service notification will include the void reason, as entered by the person that voided the envelope. ",
            "type": "string"
          },
          "includeHMAC": {
            "description": "",
            "type": "string"
          },
          "includeOAuth": {
            "description": "",
            "type": "string"
          },
          "includeSenderAccountasCustomField": {
            "description": "When **true,** Connect will include the sender account as Custom Field in the data.",
            "type": "string"
          },
          "includeTimeZoneInformation": {
            "description": "When **true,** Connect will include the envelope time zone information.",
            "type": "string"
          },
          "integratorManaged": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "The name of the Connect configuration.\n\nThis property is required.",
            "type": "string"
          },
          "password": {
            "description": "The password for the Connect configuration.\n\nThis property is not used for the `createHistoricalEnvelopePublishTransaction` endpoint.\n",
            "type": "string"
          },
          "recipientEvents": {
            "description": "An array of recipient event statuses that will trigger Connect to send notifications to your webhook listener at the URL endpoint specified in the `url` property. \n\nWhen using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), you must include either the `envelopeEvents` property or the `recipientEvents` property. If you are instead using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/), use the `events` property.\n\nThe [possible event statuses](/platform/webhooks/connect/event-triggers/) are:\n\n* `Sent`\n* `AutoResponded`\n* `Delivered`\n* `Completed`\n* `Declined`\n* `AuthenticationFailed`\n\n**Note:** These values are case-sensitive.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "requireMutualTls": {
            "description": "When **true,** [Mutual TLS](/platform/webhooks/mutual-tls/) authentication is enabled.",
            "type": "string"
          },
          "requiresAcknowledgement": {
            "description": "When **true,** event delivery acknowledgements are enabled for your Connect configuration.\n\nDocuSign Connect awaits a valid 200 response from your application acknowledging that it received a message. If you do not acknowledge receiving an event notification message within 100 seconds, DocuSign treats the message as a failure and places it into a failure queue. It is imperative that you acknowledge successful receipt of Connect events as they occur by sending a 200 event back.\n\n#### When **true** and Send Individual Messages (SIM) mode is activated\n\nIf the HTTP status response to a notification message is not in the range of 200-299,\nthen the message delivery failed, and the configuration is marked as down.\n\nThe message will be queued and retried once per day.\nWhile a Connect configuration is marked down, subsequent notifications will not be tried. Instead they will be immediately queued with the reason `Pending`.\nWhen a message succeeds, all queued messages for the configuration will be tried immediately, in order.\n\nThere is a maximum of ten retries. Alternately, you can use **Republish Connect Information** to manually republish the notification.\n\n#### When **true** and SIM mode is not activated\n\nIf the HTTP Status response to a notification message is not in the range of 200-299,  then the message delivery failed, and the message is queued.\n\nThe message will be retried after at least a day the next time a subsequent message is successfully sent to this configuration (subscription).  Subsequent notifications will be tried when they occur.\nThere is a maximum of ten retries. Alternately, you can use **Republish Connect Information** to manually republish the notification.\n\n#### When **false**\n\nWhen `requiresAcknowledgement` is set to **false** and you do not acknowledge receiving an event notification message within 100 seconds, DocuSign treats the message as a failure and determines that the server is unavailable. It does not retry to send the notification message, and you must handle the failure manually.\n\n",
            "type": "string"
          },
          "salesforceApiVersion": {
            "description": "The version of the Salesforce API that you are using.",
            "type": "string"
          },
          "salesforceAuthcode": {
            "description": "",
            "type": "string"
          },
          "salesforceCallBackUrl": {
            "description": "",
            "type": "string"
          },
          "salesforceDocumentsAsContentFiles": {
            "description": "When **true,** DocuSign can use documents in your Salesforce account for sending and signing.",
            "type": "string"
          },
          "senderOverride": {
            "description": "",
            "type": "string"
          },
          "senderSelectableItems": {
            "description": "This property sets the items that are available for selection when adding or editing Connect objects. ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sfObjects": {
            "description": "An array of Salesforce objects.",
            "items": {
              "$ref": "#/$defs/connectSalesforceObject"
            },
            "type": "array"
          },
          "signMessageWithX509Certificate": {
            "description": "When **true,** Mutual TLS will be enabled for notifications. Mutual TLS must be initiated by the listener (the customer's web server) during the TLS handshake protocol. ",
            "type": "string"
          },
          "soapNamespace": {
            "description": "The namespace of the SOAP interface.\n\n**Note:** If `useSoapInterface` is set to **true,** you must set this value.",
            "type": "string"
          },
          "urlToPublishTo": {
            "description": "The web address of the listener or retrieving service endpoint. It must be an HTTPS URL.",
            "type": "string"
          },
          "useSoapInterface": {
            "description": "When **true,** the notifications are sent to your endpoint as SOAP requests. ",
            "type": "string"
          },
          "userIds": {
            "description": "A comma-separated list of user IDs. This sets the users associated with the tracked envelope and recipient events. When a tracked event occurs for a set user, the a notification message is sent to your Connect listener.\n\nBy default, the users will be included in the configuration. If you want to exclude the users, set the `allUsersExcept` property to **true.**\n\n**Note:** If `allUsers` is set to `false`, then you must provide a list of user IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "userName": {
            "description": "The name of the user.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "connectCustomConfiguration",
        "x-ms-summary": "The `connectCustomConfiguration` object describes a Connect configuration for your account."
      },
      "connectEventData": {
        "description": "This object lets you choose the data format of your Connect response.",
        "properties": {
          "format": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "includeData": {
            "description": "A string array of the data to be included.\nThe default is the empty array `[]`.\n\n- `attachments`: Include attachments associated with the envelope.\n- `custom_fields`: Include the custom fields associated with the envelope.\n- `documents`: Include the documents associated with the envelope.\n- `extensions`: Include information about the email settings associated with the envelope.\n- `folders`: Include the folder where the envelope exists.\n- `payment_tabs`: Include the payment tabs associated with the envelope.\n- `powerform`: Include the PowerForms associated with the envelope.\n- `prefill_tabs`: Include the [pre-filled tabs](/docs/esign-rest-api/esign101/concepts/tabs/prefilled-tabs/) associated with the envelope.\n- `recipients`: Include the recipients associated with the envelope.\n- `tabs`: Include the tabs associated with the envelope.\n",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "description": "Set this property to `restv2.1` to return event data in JSON. If the property is not set, the event data will be returned in XML by default.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "connectEventData",
        "x-ms-summary": "This object lets you choose the data format of your Connect response."
      },
      "connectSalesforceObject": {
        "description": "A `connectSalesforceObject` is an object that updates envelope and document status or recipient status in your Salesforce account.\n\nWhen you install DocuSign Connect for Salesforce, the service automatically sets up two Connect objects: one that updates envelope status and documents and one that updates recipient status. You can also customize DocuSign Connect for Salesforce by associating DocuSign objects with Salesforce objects so that DocuSign Connect for Salesforce updates or inserts the information into the Salesforce object. For more information, see \n[DocuSign for Salesforce - Adding Completed Documents to the Notes and Attachments](https://support.docusign.com/articles/DocuSign-for-Salesforce-Adding-Completed-Documents-to-the-Notes-and-Attachments-New).",
        "properties": {
          "active": {
            "description": "When **true,** the `connectSalesforceObject` is active.",
            "type": "string"
          },
          "description": {
            "description": "A description of the `connectSalesforceObject`.",
            "type": "string"
          },
          "id": {
            "description": "The ID of the `connectSalesforceObject`.",
            "type": "string"
          },
          "insert": {
            "description": "",
            "type": "string"
          },
          "onCompleteOnly": {
            "description": "When **true,** Salesforce is updated only when the envelope is complete.",
            "type": "string"
          },
          "selectFields": {
            "description": "The DocuSign and Salesforce fields that you want to use to match a Salesforce object with DocuSign information. This information tells Connect when to send updates to Salesforce.",
            "items": {
              "$ref": "#/$defs/connectSalesforceField"
            },
            "type": "array"
          },
          "sfObject": {
            "description": "The Salesforce.com object type, such as `case`, `contact`, or `opportunity`.",
            "type": "string"
          },
          "sfObjectName": {
            "description": "A name for the Salesforce object.\n\n**Note:** You can enter any name for the object. It does not have to match the `sfObject` property.",
            "type": "string"
          },
          "updateFields": {
            "description": "The DocuSign and Salesforce fields that you want to update. \n\n**Note:** You can choose to update SalesForce (with information from DocuSign) only, update DocuSign only, or both.",
            "items": {
              "$ref": "#/$defs/connectSalesforceField"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "connectSalesforceObject",
        "x-ms-summary": "A `connectSalesforceObject` is an object that updates envelope and document status or recipient status in your Salesforce account.\n\nWhen you install DocuSign Connect for Salesforce, the service automatically sets up two Connect objects: one that updates envelope status and documents and one that updates recipient status. You can also customize DocuSign Connect for Salesforce by associating DocuSign objects with Salesforce objects so that DocuSign Connect for Salesforce updates or inserts the information into the Salesforce object. For more information, see \n[DocuSign for Salesforce - Adding Completed Documents to the Notes and Attachments](https://support.docusign.com/articles/DocuSign-for-Salesforce-Adding-Completed-Documents-to-the-Notes-and-Attachments-New)."
      },
      "connectSalesforceField": {
        "description": "This object is used to match a DocuSign field to a Salesforce field so that DocuSign can send information to your Salesforce account.",
        "properties": {
          "dsAttribute": {
            "description": "",
            "type": "string"
          },
          "dsLink": {
            "description": "A URL that links to the information in the DocuSign field.",
            "type": "string"
          },
          "dsNode": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "A unique ID for the Salesforce object.",
            "type": "string"
          },
          "sfField": {
            "description": "",
            "type": "string"
          },
          "sfFieldName": {
            "description": "The name of the Salesforce field.",
            "type": "string"
          },
          "sfFolder": {
            "description": "The name of the Salesforce folder.",
            "type": "string"
          },
          "sfLockedValue": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "connectSalesforceField",
        "x-ms-summary": "This object is used to match a DocuSign field to a Salesforce field so that DocuSign can send information to your Salesforce account."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://www.docusign.net/restapi/v2.1/accounts/{accountId}/connect"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The `connectCustomConfiguration` object describes a Connect configuration for your account.",
        "**Key properties:**",
        {
          "$ul": [
            "**allUsers**: When **true,** the tracked envelope and recipient events for all users, including users that are added a later time, are sent through Connect. The default value is **false.**",
            "**allUsersExcept**: This flag allows you to toggle between including and excluding specified users from the configuration. When **false,** the users corresponding to the IDs in `userIds` will be included in the configuration. Conversely, when **true,** the users will be excluded from the configuration. The default value is **false.**",
            "**allowEnvelopePublish**: Set this value to **true** to enable the webhook. The default property is **false.**",
            "**allowSalesforcePublish**: When **true,** DocuSign sends data to the designated Salesforce account through Connect. The default value is **true.**",
            "**configurationType**: The type of the configuration. Valid values:",
            "**connectId**: The DocuSign-generated ID for the Connect configuration.",
            "**deliveryMode**: The delivery mode of the configuration. Valid values:",
            "**disabledBy**: ",
            "**enableLog**: When **true,** Connect logging is turned on. DocuSign recommends that you enable this functionality to help troubleshoot any issues. ",
            "**envelopeEvents**: A list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `url` property.",
            [
              "**eventData**: This object lets you choose the data format of your Connect response.",
              {
                "$ul": [
                  "**format**: Reserved for DocuSign.",
                  "**includeData**: A string array of the data to be included.",
                  "**version**: Set this property to `restv2.1` to return event data in JSON. If the property is not set, the event data will be returned in XML by default."
                ]
              }
            ],
            "**events**: A comma-separated list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `urlToPublishTo` property.",
            "**externalFolderId**: The ID of an external folder.",
            "**externalFolderLabel**: The label for an external folder.",
            "**groupIds**: ",
            "**includeCertSoapHeader**: ",
            "**includeCertificateOfCompletion**: When **true,** the Connect Service includes the Certificate of Completion with completed envelopes. ",
            "**includeDocumentFields**: When **true,** the Document Fields associated with the envelope's documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API. ",
            "**includeDocuments**: Reserved for DocuSign.",
            "**includeEnvelopeVoidReason**: When **true,** if the envelope is voided, the Connect Service notification will include the void reason, as entered by the person that voided the envelope. ",
            "**includeHMAC**: ",
            "**includeOAuth**: ",
            "**includeSenderAccountasCustomField**: When **true,** Connect will include the sender account as Custom Field in the data.",
            "**includeTimeZoneInformation**: When **true,** Connect will include the envelope time zone information.",
            "**integratorManaged**: ",
            "**name**: The name of the Connect configuration.",
            "**password**: The password for the Connect configuration.",
            "**recipientEvents**: An array of recipient event statuses that will trigger Connect to send notifications to your webhook listener at the URL endpoint specified in the `url` property. ",
            "**requireMutualTls**: When **true,** [Mutual TLS](/platform/webhooks/mutual-tls/) authentication is enabled.",
            "**requiresAcknowledgement**: When **true,** event delivery acknowledgements are enabled for your Connect configuration.",
            "**salesforceApiVersion**: The version of the Salesforce API that you are using.",
            "**salesforceAuthcode**: ",
            "**salesforceCallBackUrl**: ",
            "**salesforceDocumentsAsContentFiles**: When **true,** DocuSign can use documents in your Salesforce account for sending and signing.",
            "**senderOverride**: ",
            "**senderSelectableItems**: This property sets the items that are available for selection when adding or editing Connect objects. ",
            "**sfObjects**: An array of Salesforce objects.",
            "**signMessageWithX509Certificate**: When **true,** Mutual TLS will be enabled for notifications. Mutual TLS must be initiated by the listener (the customer's web server) during the TLS handshake protocol. ",
            "**soapNamespace**: The namespace of the SOAP interface.",
            "**urlToPublishTo**: The web address of the listener or retrieving service endpoint. It must be an HTTPS URL.",
            "**useSoapInterface**: When **true,** the notifications are sent to your endpoint as SOAP requests. ",
            "**userIds**: A comma-separated list of user IDs. This sets the users associated with the tracked envelope and recipient events. When a tracked event occurs for a set user, the a notification message is sent to your Connect listener.",
            "**userName**: The name of the user."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The code associated with the error condition.",
            "**message**: A brief message describing the error condition."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
