{
  "name": "Documents_PutDocuments",
  "description": "Adds one or more documents to an existing envelope.\nThe tabs of the original document will be applied to the new document.\n\n\n**Note:** When adding or modifying documents for an in-process envelope,\nDocuSign recommends\n[locking the envelope](/docs/esign-rest-api/reference/envelopes/envelopelocks/create/)\nprior to making any changes.\n\nIf the file name of a document contains Unicode characters, you need to include a `Content-Disposition` header. Example:\n\n\n**Header:** `Content-Disposition`\n\n\n**Value:** `file; filename=\\\"name\\\";fileExtension=ext;documentId=1`",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The external account number (int) or account ID GUID."
      },
      "envelopeId": {
        "type": "string",
        "description": "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
      },
      "body": {
        "$ref": "#/$defs/envelopeDefinition"
      }
    },
    "required": [
      "accountId",
      "envelopeId"
    ],
    "$defs": {
      "envelopeDefinition": {
        "description": "Envelope object definition.",
        "properties": {
          "accessControlListBase64": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "accessibility": {
            "description": "Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account.\n\n**Note:** This information is currently generated from the DocuSign web console by setting the reading zones when creating a template, exporting the reading zone string information, and adding it here.",
            "type": "string"
          },
          "allowComments": {
            "description": "When **true,** comments are allowed on the envelope.",
            "type": "string"
          },
          "allowMarkup": {
            "description": "When **true,** the Document Markup feature is enabled.\n\n**Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.\n",
            "type": "string"
          },
          "allowReassign": {
            "description": "When **true,** the recipient can redirect an envelope to a more appropriate recipient.",
            "type": "string"
          },
          "allowRecipientRecursion": {
            "description": "When **true,** this enables the Recursive Recipients feature and allows a recipient to appear more than once in the routing order.",
            "type": "string"
          },
          "allowViewHistory": {
            "description": "When **true,** users can view the history of the envelope.",
            "type": "string"
          },
          "anySigner": {
            "description": "Deprecated. This feature has been replaced by signing groups.",
            "type": "string"
          },
          "asynchronous": {
            "description": "When **true,** the envelope is queued for\nprocessing and the value of the `status` property\nis set to `Processing`. Additionally, GET status\ncalls return `Processing` until completed.\n\n\n**Note:** A `transactionId` is required for this\ncall to work correctly. When the envelope is\ncreated, the status is `Processing` and an\n`envelopeId` is not returned in the response. To\nget the `envelopeId`, use a GET envelope query by\nusing the\n[transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the\nConnect notification.",
            "type": "string"
          },
          "attachments": {
            "description": "An array of attachment objects containing details about any envelope attachments.",
            "items": {
              "$ref": "#/$defs/attachment"
            },
            "type": "array"
          },
          "attachmentsUri": {
            "description": "The URI for retrieving the envelope attachments.",
            "type": "string"
          },
          "authoritativeCopy": {
            "description": "When **true,** marks all of the documents in the envelope as authoritative copies.\n\n**Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**",
            "type": "string"
          },
          "authoritativeCopyDefault": {
            "description": "The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.\nIf this property is not set, each document defaults to the envelope's `authoritativeCopy`.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When **true,** autonavigation is set for the recipient.\n",
            "type": "string"
          },
          "brandId": {
            "description": "The ID of the brand, or text and formatting, to use for the envelope. To use brands, account branding must be enabled for the account.\n\n**Note:** When creating an envelope using a branded template, include this value to ensure that the brand is applied.",
            "type": "string"
          },
          "brandLock": {
            "description": "When **true,** the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.",
            "type": "string"
          },
          "burnDefaultTabData": {
            "description": "",
            "type": "string"
          },
          "certificateUri": {
            "description": "The URI for retrieving certificate information.",
            "type": "string"
          },
          "completedDateTime": {
            "description": "The date and time that the envelope was completed.",
            "type": "string"
          },
          "compositeTemplates": {
            "description": "A complex type that can be added to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.",
            "items": {
              "$ref": "#/$defs/compositeTemplate"
            },
            "type": "array"
          },
          "copyRecipientData": {
            "description": "This value is only applicable when copying an existing envelope. Provide the ID of the envelope to clone in `envelopeId`.\n\nWhen **true,** the recipient field values of the existing envelope are included. Only values from data entry fields, like checkboxes and radio buttons, will be copied. Fields that require an action, like signatures and initials, will not be included.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "The date and time that the envelope was created.",
            "type": "string"
          },
          "customFields": {
            "$ref": "#/$defs/AccountCustomFields"
          },
          "customFieldsUri": {
            "description": "The URI for retrieving custom fields.",
            "type": "string"
          },
          "declinedDateTime": {
            "description": "The date and time that the recipient declined the envelope.",
            "type": "string"
          },
          "deletedDateTime": {
            "description": "The date and time that the envelope was deleted.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "disableResponsiveDocument": {
            "description": "When **true,** the responsive document feature is turned off for the envelope.",
            "type": "string"
          },
          "documentBase64": {
            "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
            "type": "string"
          },
          "documents": {
            "description": "A complex element that contains details about the documents associated with the envelope.",
            "items": {
              "$ref": "#/$defs/document"
            },
            "type": "array"
          },
          "documentsCombinedUri": {
            "description": "The URI for retrieving all of the documents associated with the envelope as a single PDF file.",
            "type": "string"
          },
          "documentsUri": {
            "description": "The URI for retrieving all of the documents associated with the envelope as separate files.",
            "type": "string"
          },
          "emailBlurb": {
            "description": "This optional element holds the body of the email message that is sent to all envelope recipients. \n\nMaximum Length: 10000 characters.",
            "type": "string"
          },
          "emailSettings": {
            "$ref": "#/$defs/emailSettings"
          },
          "emailSubject": {
            "description": "The subject line of the email message that is sent to all recipients.\n\nFor information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).\n\n**Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.\n",
            "type": "string"
          },
          "enableWetSign": {
            "description": "When **true,** the signer is allowed to print the document and sign it on paper.",
            "type": "string"
          },
          "enforceSignerVisibility": {
            "description": "When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.\n\n**Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**\n\n[docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/",
            "type": "string"
          },
          "envelopeAttachments": {
            "description": "An array of attachment objects that provide information about the attachments that are associated with the envelope.",
            "items": {
              "$ref": "#/$defs/attachment"
            },
            "type": "array"
          },
          "envelopeCustomMetadata": {
            "$ref": "#/$defs/envelopeCustomMetadata"
          },
          "envelopeDocuments": {
            "description": "An array containing information about the documents that are included in the envelope.",
            "items": {
              "$ref": "#/$defs/envelopeDocument"
            },
            "type": "array"
          },
          "envelopeId": {
            "description": "The envelope ID.\n\nWhen used as a request body in [Envelopes: create](/docs/esign-rest-api/reference/envelopes/envelopes/create/), this is the ID of the envelope to clone.",
            "type": "string"
          },
          "envelopeIdStamping": {
            "description": "When **true,** [Envelope ID Stamping](https://support.docusign.com/en/guides/ndse-user-guide-set-advanced-document-options) is enabled.\nAfter a document or attachment is stamped with an Envelope ID,\nthe ID is seen by all recipients\nand becomes a permanent part of the document\nand cannot be removed.",
            "type": "string"
          },
          "envelopeLocation": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "envelopeMetadata": {
            "$ref": "#/$defs/envelopeMetadata"
          },
          "envelopeUri": {
            "description": "The URI for retrieving the envelope or envelopes.",
            "type": "string"
          },
          "eventNotification": {
            "$ref": "#/$defs/eventNotification"
          },
          "expireAfter": {
            "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
            "type": "string"
          },
          "expireDateTime": {
            "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
            "type": "string"
          },
          "expireEnabled": {
            "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
            "type": "string"
          },
          "externalEnvelopeId": {
            "description": "May contain an external identifier for the envelope.",
            "type": "string"
          },
          "folders": {
            "description": "An array of folders that the envelope belongs to.",
            "items": {
              "$ref": "#/$defs/folder"
            },
            "type": "array"
          },
          "hasComments": {
            "description": "When **true,** indicates that users have added comments to the envelope.",
            "type": "string"
          },
          "hasFormDataChanged": {
            "description": "When **true,** indicates that the form data associated with the envelope has changed since it was sent. When **false,** this property does not appear in the response.",
            "type": "string"
          },
          "hasWavFile": {
            "description": "When **true,** indicates that a wave file (voice recording) is part of the envelope.",
            "type": "string"
          },
          "holder": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "initialSentDateTime": {
            "description": "The date and time that the envelope was first sent.",
            "type": "string"
          },
          "is21CFRPart11": {
            "description": "When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).",
            "type": "string"
          },
          "isDynamicEnvelope": {
            "description": "When **true,** indicates that the envelope is a dynamic envelope.",
            "type": "string"
          },
          "isSignatureProviderEnvelope": {
            "description": "When **true,** indicates that the envelope is a signature-provided envelope.",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The date and time that the item was last modified.",
            "type": "string"
          },
          "location": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockInformation": {
            "$ref": "#/$defs/EnvelopeLocks"
          },
          "messageLock": {
            "description": "When **true,** prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
            "type": "string"
          },
          "notification": {
            "$ref": "#/$defs/notification"
          },
          "notificationUri": {
            "description": "The URI for retrieving notifications.",
            "type": "string"
          },
          "password": {
            "description": "The user's encrypted password hash.",
            "type": "string"
          },
          "powerForm": {
            "$ref": "#/$defs/powerForm"
          },
          "purgeCompletedDate": {
            "description": "The date that a purge was completed.",
            "type": "string"
          },
          "purgeRequestDate": {
            "description": "The date that a purge was requested.",
            "type": "string"
          },
          "purgeState": {
            "description": "Initiates a purge request. Valid values are:\n\n- `documents_queued`: Places envelope documents in the purge queue.\n- `documents_and_metadata_queued`: Places envelope documents\n   and metadata in the purge queue.\n- `documents_and_metadata_and_redact_queued`: Places envelope documents\n   and metadata in the purge queue and redacts personal information.\n\n**Related topics**\n\n- [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)\n- [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)\n",
            "type": "string"
          },
          "recipientViewRequest": {
            "$ref": "#/$defs/recipientViewRequest"
          },
          "recipients": {
            "$ref": "#/$defs/EnvelopeRecipients"
          },
          "recipientsLock": {
            "description": "When **true,** prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
            "type": "string"
          },
          "recipientsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
            "type": "string"
          },
          "sender": {
            "$ref": "#/$defs/userInfo"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signerCanSignOnMobile": {
            "description": "When **true,** recipients can sign on a mobile device.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "signingLocation": {
            "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values when creating an envelope are: \n\n* `created`: The envelope is created as a draft. It can be modified and sent later.\n* `sent`: The envelope will be sent to the recipients after the envelope is created.\n\nYou can query these additional statuses once the recipients have interacted with the envelope.\n\n* `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.\n* `declined`: The envelope has been declined by the recipients.\n* `delivered`: The envelope has been delivered to the recipients.\n* `signed`: The envelope has been signed by the recipients.\n* `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.\n",
            "type": "string"
          },
          "statusChangedDateTime": {
            "description": "The data and time that the status changed.",
            "type": "string"
          },
          "statusDateTime": {
            "description": "The DateTime that the envelope changed status (i.e. was created or sent.)",
            "type": "string"
          },
          "templateId": {
            "description": "The ID of the template. If a value is not provided, DocuSign generates a value. ",
            "type": "string"
          },
          "templateRoles": {
            "description": "This object specifies the template recipients. Each `roleName` in the template must have a recipient assigned to it. This object is comprised of the following elements:\n\n* `email`: The recipient's email address.\n* `name`: The recipient's name.\n* `roleName`: The template roleName associated with the recipient.\n* `clientUserId`: An optional property that specifies whether the recipient is embedded or remote. If the `clientUserId` is not null, then the recipient is embedded. Note that if a `clientUserId` is used and the account settings `signerMustHaveAccount` or `signerMustLoginToSign` are **true,** an error is generated on sending.\n* `defaultRecipient`: Optional, When **true,** this recipient is the default recipient and any tabs generated by the `transformPdfFields` option are mapped to this recipient.\n* `routingOrder`: This specifies the routing order of the recipient in the envelope.\n* `accessCode`: This optional element specifies the access code a recipient has to enter to validate the identity. Maximum Length: 50 characters.\n* `inPersonSignerName`: Optional. If the template role is an in-person signer, this is the full legal name of the signer. Maximum Length: 100 characters.\n* `emailNotification`: This is an optional complex element that has a role-specific `emailSubject`, `emailBody`, and `language`. It follows the same format as the `emailNotification` property for recipients.\n* `tabs`: This property enables the tab values to be specified for matching to tabs in the template.\n",
            "items": {
              "$ref": "#/$defs/templateRole"
            },
            "type": "array"
          },
          "templatesUri": {
            "description": "The URI for retrieving any templates associated with the envelope.",
            "type": "string"
          },
          "transactionId": {
            "description": " Used to identify an envelope. The ID is a sender-generated value and is valid in the DocuSign system for 7 days. DocuSign recommends that you use a transaction ID for offline signing to ensure that an envelope is not sent multiple times. You can use the `transactionId` property to determine an envelope's status (i.e. was it created or not) in cases where the Internet connection was lost before the envelope status was returned.",
            "type": "string"
          },
          "useDisclosure": {
            "description": "When **true,** the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When **false,** the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
            "type": "string"
          },
          "voidedDateTime": {
            "description": "The date and time the envelope or template was voided.",
            "type": "string"
          },
          "voidedReason": {
            "description": "The reason the envelope or template was voided.\n\n**Note:** The string is truncated to the first 200 characters.\n",
            "type": "string"
          },
          "workflow": {
            "$ref": "#/$defs/workflow"
          }
        },
        "type": "object",
        "x-ds-definition-name": "envelopeDefinition",
        "x-ms-summary": "Envelope object definition."
      },
      "attachment": {
        "description": "Contains information about an attachment.",
        "properties": {
          "accessControl": {
            "description": "Valid values are `sender` and `senderAndAllRecipients`.",
            "type": "string"
          },
          "attachmentId": {
            "description": "The unique identifier for the attachment.",
            "type": "string"
          },
          "attachmentType": {
            "description": "Specifies the type of the attachment for the recipient.",
            "type": "string"
          },
          "data": {
            "description": "A Base64-encoded representation of the attachment that is used to upload and download the file. File attachments may be up to 50 MB in size.",
            "type": "string"
          },
          "label": {
            "description": "A label for the attachment. Potential values include: \n\n- `guidedForm`: [Guided forms](https://www.docusign.com/products/guided-forms) provide a step-by-step, mobile-ready experience to help signers easily complete long or complex forms.\n- `eventNotifications`: A list of envelope-level event statuses that trigger Connect to send updates to the endpoint specified in the `url` property. \n",
            "type": "string"
          },
          "name": {
            "description": "The name of the attachment.",
            "type": "string"
          },
          "remoteUrl": {
            "description": "The URL of a previously staged chunked upload. Using a chunked upload enables you to stage a large, chunkable temp file. You then use the `remoteUrl` property to reference the chunked upload as the content in attachment and document-related requests. The `remoteUrl` property cannot be used for downloads.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "attachment",
        "x-ms-summary": "Contains information about an attachment."
      },
      "compositeTemplate": {
        "description": "This object contains information about a [composite template][composite], which you can use to to apply multiple templates to a single envelope, combine templates with PDF forms, and combine templates with documents from cloud sources.\n\n[composite]: /docs/esign-rest-api/esign101/concepts/templates/composite/",
        "properties": {
          "compositeTemplateId": {
            "description": "The ID of this composite template. This ID is used as a reference when adding document object information. If used, the document's `content-disposition` must include the composite template ID to which the document should be added. If a composite template ID is not specified in the content-disposition, the document is applied based on the value of the `documentId` property only. If no document object is specified, the composite template inherits the first document.",
            "type": "string"
          },
          "document": {
            "$ref": "#/$defs/document"
          },
          "inlineTemplates": {
            "description": " Zero or more inline templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value.",
            "items": {
              "$ref": "#/$defs/inlineTemplate"
            },
            "type": "array"
          },
          "pdfMetaDataTemplateSequence": {
            "description": "A number representing the sequence in which to apply the template that contains the PDF metadata.\n\nExample: `4`",
            "type": "string"
          },
          "serverTemplates": {
            "description": "Zero or more server-side templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value.",
            "items": {
              "$ref": "#/$defs/serverTemplate"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "compositeTemplate",
        "x-ms-summary": "This object contains information about a [composite template][composite], which you can use to to apply multiple templates to a single envelope, combine templates with PDF forms, and combine templates with documents from cloud sources.\n\n[composite]: /docs/esign-rest-api/esign101/concepts/templates/composite/"
      },
      "document": {
        "description": "A document object.",
        "properties": {
          "applyAnchorTabs": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "assignTabsToRecipientId": {
            "description": "",
            "type": "string"
          },
          "display": {
            "description": "This string sets the display and behavior properties of\nthe document during signing. Valid values:\n\n* `modal`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a modal window.\n  This is the recommended value for supplemental documents. \n\n* `inline`<br>\n  The document is shown in the normal signing window.\n  This value is not used with supplemental documents,\n  but is the default value for all other documents.\n",
            "type": "string"
          },
          "docGenFormFields": {
            "description": "",
            "items": {
              "$ref": "#/$defs/docGenFormField"
            },
            "type": "array"
          },
          "documentBase64": {
            "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
            "type": "string"
          },
          "documentFields": {
            "description": "The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: \n\n* `name`: A string that can be a maximum of 50 characters. \n* `value`: A string that can be a maximum of 200 characters.\n\nIf you are using XML, the name/value pair is contained in a `nameValue` element. \n",
            "items": {
              "$ref": "#/$defs/nameValue"
            },
            "type": "array"
          },
          "documentId": {
            "description": "Specifies the document ID of this document. This value is used by tabs to determine which document they appear in.",
            "type": "string"
          },
          "encryptedWithKeyManager": {
            "description": "When **true,** the document has been encrypted by the sender for use with the DocuSign Key Manager Security Appliance.\n ",
            "type": "string"
          },
          "fileExtension": {
            "description": "The file extension type of the document. Non-PDF documents are converted to PDF.\n\nIf the document is not a PDF, `fileExtension` is required.\n\nIf you try to upload a non-PDF document without a `fileExtension`, you will receive an \"unable to load document\" error message.  \n ",
            "type": "string"
          },
          "fileFormatHint": {
            "description": "",
            "type": "string"
          },
          "htmlDefinition": {
            "$ref": "#/$defs/documentHtmlDefinition"
          },
          "includeInDownload": {
            "description": "When **true,**\nthe document is included in the combined document download (`documentsCombinedUri`). \nThe default value is **true.**\n",
            "type": "string"
          },
          "isDocGenDocument": {
            "description": "",
            "type": "string"
          },
          "matchBoxes": {
            "description": "Matchboxes define areas in a document for document matching when you are creating envelopes.\nThey are only used when you upload and edit a template.\n\n",
            "items": {
              "$ref": "#/$defs/matchBox"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the document.",
            "type": "string"
          },
          "order": {
            "description": "The order in which to sort the results.\n\nValid values are: \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. ",
            "type": "string"
          },
          "pages": {
            "description": "The number of pages in the document. This property is read-only.",
            "type": "string"
          },
          "password": {
            "description": "The user's encrypted password hash.",
            "type": "string"
          },
          "pdfFormFieldOption": {
            "description": "",
            "type": "string"
          },
          "remoteUrl": {
            "description": "The file ID from the cloud storage service where\nthe document is located. This information is\nreturned using\n[CloudStorage: listFolders](/docs/esign-rest-api/reference/cloudstorage/cloudstorage/listfolders/) or\n[CloudStorage: list](/docs/esign-rest-api/reference/cloudstorage/cloudstorage/list/).\n",
            "type": "string"
          },
          "signerMustAcknowledge": {
            "description": "Sets how the signer interacts with the supplemental document.\nValid values: \n\n*\t`no_interaction`<br>\n  No recipient action is required. \n\n*\t`view`<br>\n  The recipient is required to view the document. \n\n*\t`accept`<br>\n  The recipient is required to accept the document by selecting accept during signing, but is not required to view the document. \n\n*\t`view_accept`<br>\n  The recipient is required to view and accept the document.  \n\n",
            "type": "string"
          },
          "signerMustAcknowledgeUseAccountDefault": {
            "description": "When **true,** the account default setting for the required recipient option is used. If this property is set, `signerMustAcknowledge` cannot be set (and vice versa).",
            "type": "boolean"
          },
          "tabs": {
            "$ref": "#/$defs/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "transformPdfFields": {
            "description": "When **true,** PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF.\n",
            "type": "string"
          },
          "uri": {
            "description": "A URI containing the user ID.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "document",
        "x-ms-summary": "A document object."
      },
      "docGenFormField": {
        "description": "",
        "properties": {
          "label": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "type": {
            "description": "The type of this tab. Values are:\n\n- Approve\n- CheckBox\n- Company\n- Date\n- DateSigned,\tDecline\n- Email,\tEmailAddress\n- EnvelopeId\n- FirstName\n- Formula\n- FullName,\tInitialHere\n- InitialHereOptional\n- LastName\n- List\n- Note\n- Number\n- Radio\n- SignerAttachment\n- SignHere\n- SignHereOptional\n- Ssn\n- Text\n- Title\n- Zip5\n- Zip5Dash4\n",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "docGenFormField",
        "x-ms-summary": ""
      },
      "nameValue": {
        "description": "A name-value pair that describes an item and provides a value for the item.",
        "properties": {
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "name": {
            "description": "The name of the item.",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the item.",
            "type": "string"
          },
          "value": {
            "description": "The current value of the item.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "nameValue",
        "x-ms-summary": "A name-value pair that describes an item and provides a value for the item."
      },
      "errorDetails": {
        "description": "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "properties": {
          "errorCode": {
            "description": "The code associated with the error condition.",
            "type": "string"
          },
          "message": {
            "description": "A brief message describing the error condition.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "errorDetails",
        "x-ms-summary": "This object describes errors that occur. It is only valid for responses and ignored in requests."
      },
      "documentHtmlDefinition": {
        "description": "Holds the properties that define how to generate the responsive-formatted HTML for the document.\nSee [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)\nin the [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/).",
        "properties": {
          "displayAnchorPrefix": {
            "description": "Contains text that all display anchors must start with. Using at least four characters will improve anchor processing performance.",
            "type": "string"
          },
          "displayAnchors": {
            "description": "An object that defines how to handle a section of the HTML in signing. This property enables an incoming request to make a section of the HTML collapsible and expandable or hidden from view.\n\nA start anchor, end anchor, or both are required.\nIf the anchors are not found, the display anchor will be ignored.\n\nFor a list of the available types, see the\n[`display` property](/docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition_documents_htmldefinition_displayanchors_displaysettings_display)\nof the\n[`displaySettings` object.](/docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition_documents_htmldefinition_displayanchors_displaysettings)",
            "items": {
              "$ref": "#/$defs/documentHtmlDisplayAnchor"
            },
            "type": "array"
          },
          "displayOrder": {
            "description": "The position on the page where the display section appears.",
            "type": "string"
          },
          "displayPageNumber": {
            "description": "The number of the page on which the display section appears.",
            "type": "string"
          },
          "documentGuid": {
            "description": "The GUID of the document.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "headerLabel": {
            "description": "Header text or an HTML tag to place above the responsive HTML block.",
            "type": "string"
          },
          "maxScreenWidth": {
            "description": "If set, the responsive HTML version of the signing document will only display on screens with the specified pixel width or less. If the screen is larger than the value that you specify, the default PDF version of the content displays instead.\n\nThis setting can also be configured at the account level.\n",
            "type": "string"
          },
          "removeEmptyTags": {
            "description": "Holds a comma-separated list of HTML tags to remove if they have no text within their node (including child nodes).",
            "type": "string"
          },
          "showMobileOptimizedToggle": {
            "description": "When **true** (the default), the **Mobile-Friendly** toggle displays at the top of the screen on the user's mobile device. When **false,** the toggle will not be displayed.\n\nthe **Mobile-Friendly** toggle lets the user switch between the mobile-friendly and the PDF versions of a document. For example, the recipient can use this toggle to review the document using the PDF view before they finish signing.\n",
            "type": "string"
          },
          "source": {
            "description": "Specifies the type of responsive signing that will be used with the document.\n\nIf the value of this property is valid HTML,\nand the [smart sections feature][] is enabled,\nthe HTML code is used to display the signing page:\n\n```\nsource: \"<html> ... <body><p>hello world</p></body></html>\"\n```\n\nIf the value of this property is the string `document`,\nthe HTML signing page is generated from the provided document.\n\n```\nsource: \"document\"\n```\n\n**Related topics**\n\n- [How to create a signable HTML document](/docs/esign-rest-api/how-to/creating-signable-html/)\n- [How to convert a PDF file into a signable HTML document](/docs/esign-rest-api/how-to/converting-pdf/)\n- [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)\n\n\n[smart sections feature]: https://support.docusign.com/s/document-item?language=en_US&bundleId=gbo1643332197980&topicId=qlx1578456478178.html&_LANG=enus",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "documentHtmlDefinition",
        "x-ms-summary": "Holds the properties that define how to generate the responsive-formatted HTML for the document.\nSee [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)\nin the [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/)."
      },
      "documentHtmlDisplayAnchor": {
        "description": "",
        "properties": {
          "caseSensitive": {
            "description": "When **true,** the start or end anchor strings must match the strings specified by the start and end anchor settings in case as well as in content.",
            "type": "boolean"
          },
          "displaySettings": {
            "$ref": "#/$defs/documentHtmlDisplaySettings"
          },
          "endAnchor": {
            "description": "Specifies the end of the area in the HTML where the display settings will be applied. If you do not specify an end anchor, the end of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
            "type": "string"
          },
          "removeEndAnchor": {
            "description": "When **true,** removes the end anchor string for the Smart Section from the HTML, preventing it from displaying.",
            "type": "boolean"
          },
          "removeStartAnchor": {
            "description": "When **true,** removes the start anchor string for the Smart Section from the HTML, preventing it from displaying.",
            "type": "boolean"
          },
          "startAnchor": {
            "description": "Specifies the beginning of the area in the HTML where the display settings will be applied. If you do not specify a start anchor, the beginning of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "documentHtmlDisplayAnchor",
        "x-ms-summary": ""
      },
      "documentHtmlDisplaySettings": {
        "description": "This object defines how to display the HTML\nbetween the `startAnchor` and `endAnchor`.",
        "properties": {
          "cellStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on responsive table cells. Only valid in display sections of `responsive_table` or `responsive_table_single_column` types.",
            "type": "string"
          },
          "collapsibleSettings": {
            "$ref": "#/$defs/documentHtmlCollapsibleDisplaySettings"
          },
          "display": {
            "description": "Sets the display and behavior properties. Possible  values are:\n\n- `inline`:\n  Leaves the HTML where it is in the document.\n  This property lets you add a label or present on a separate page.\n\n- `collapsible`:\n  The HTML in this section may be expanded or collapsed.\n  Initially this section is expanded.\n\n- `collapsed`:\n  The HTML in this section may be expanded or collapsed.\n  Initially this section is collapsed.\n\n- `continue_button`:\n  Creates a stop point in the document to draw the reader's\n  attention before proceeding to the next section.\n\n- `responsive_table`:\n  Turns this section into a responsive table.\n  Note that this is only used on HTML tables that fall within the anchor start and end positions.\n\n- `responsive_table_single_column`:\n  Turns this section into a responsive single-column table.\n  Note this is only used on HTML tables that fall within the anchor start and end positions.\n  The table will be converted to one single column where each current column will become a row, then stacked.\n\n- `print_only`:\n  Do not show this portion of the HTML in the responsive signing view.\n\n\n",
            "type": "string"
          },
          "displayLabel": {
            "description": "The label to add to this display section in the signing page.\n",
            "type": "string"
          },
          "displayOrder": {
            "description": "The position on the page where the display section appears.",
            "format": "int32",
            "type": "integer"
          },
          "displayPageNumber": {
            "description": "The number of the page on which the display section appears.",
            "format": "int32",
            "type": "integer"
          },
          "hideLabelWhenOpened": {
            "description": "When **true,** the `displayLabel` is hidden when the display section is expanded and the display section is no longer collapsible. This property is valid only when the value of the `display` property is `collapsed`.",
            "type": "boolean"
          },
          "inlineOuterStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on inline display sections. This property is valid only when the value of the `display` property is `inline`.",
            "type": "string"
          },
          "labelWhenOpened": {
            "description": "The label for the display section when it is expanded from a collapsed state. This label displays only on the first opening and is only valid with the value of the `display` property is `collapsed`.",
            "type": "string"
          },
          "preLabel": {
            "description": "Enables you to add descriptive text that appears before a collapsed section or continue button.",
            "type": "string"
          },
          "scrollToTopWhenOpened": {
            "description": "When **true** and the section is expanded,\nthe position of the section-close control\nscrolls to the top of the screen. This property is only valid when the value of the `display` property is `collapsed`.\n",
            "type": "boolean"
          },
          "tableStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on responsive tables. This property is valid only when the value of the `display` property is `responsive_table` or `responsive_table_single_column`.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "documentHtmlDisplaySettings",
        "x-ms-summary": "This object defines how to display the HTML\nbetween the `startAnchor` and `endAnchor`."
      },
      "documentHtmlCollapsibleDisplaySettings": {
        "description": "Display settings for collapsible section.",
        "properties": {
          "arrowClosed": {
            "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the closed state.\n\nOne of the following:\n\n- `up`: In the closed state, the disclosure arrow points up.\n- `down`: In the closed state, the disclosure arrow points down.\n- `left`: In the closed state, the disclosure arrow points left.\n- `right`: In the closed state, the disclosure arrow points right.\n",
            "type": "string"
          },
          "arrowColor": {
            "description": "A CSS color value (such as `#DCF851`) that indicates the color of the arrow.\n",
            "type": "string"
          },
          "arrowLocation": {
            "description": "The location of the arrow relative to the collapsible section's label. Possible values are:\n\n- `right` (default)\n- `left`\n",
            "type": "string"
          },
          "arrowOpen": {
            "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the open state.\n\nOne of the following:\n\n- `up`: In the open state, the disclosure arrow points up.\n- `down`: In the open state, the disclosure arrow points down.\n- `left`: In the open state, the disclosure arrow points left.\n- `right`: In the open state, the disclosure arrow points right.\n",
            "type": "string"
          },
          "arrowSize": {
            "description": "Indicates the size of the collapsible arrows. Possible values are:\n\n- `small`\n- `large` (default)\n",
            "type": "string"
          },
          "arrowStyle": {
            "description": "The name of the CSS style to be used on collapsible arrow section.\n",
            "type": "string"
          },
          "containerStyle": {
            "description": "The name of the CSS style to be used for the collapsible container.\n",
            "type": "string"
          },
          "labelStyle": {
            "description": "The name of the CSS style to be used for the collapsible container's label.",
            "type": "string"
          },
          "onlyArrowIsClickable": {
            "description": "When **true,** only the arrow is clickable to expand or collapse the section.\nWhen **false** (the default), both the label and the arrow are clickable.\n\nIf no arrow is used, this setting is ignored.\n",
            "type": "boolean"
          },
          "outerLabelAndArrowStyle": {
            "description": "The name of the CSS style to be used for the collapsible container's outer label and arrow style.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "documentHtmlCollapsibleDisplaySettings",
        "x-ms-summary": "Display settings for collapsible section."
      },
      "matchBox": {
        "description": "",
        "properties": {
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "matchBox",
        "x-ms-summary": ""
      },
      "EnvelopeRecipientTabs": {
        "description": "All of the tabs associated with a recipient. Each property is a list of a type of tab.\n",
        "properties": {
          "approveTabs": {
            "description": "A list of\n[Approve tabs][approve].\n\nAn Approve tab enables\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\nThe value of an approve tab can't be set.\n\n[approve]:\t\t      /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/approve"
            },
            "type": "array"
          },
          "checkboxTabs": {
            "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nA Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.\n\n\n[checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/checkbox"
            },
            "type": "array"
          },
          "commentThreadTabs": {
            "description": "An array of tabs that represents a collection of comments in a comment thread. For example, if a recipient has questions about the content of a document, they can add a comment to the document and control who else can see the comment. This value can't be set.",
            "items": {
              "$ref": "#/$defs/commentThread"
            },
            "type": "array"
          },
          "commissionCountyTabs": {
            "description": "A list of\n[Commission County tabs][cc].\n\n\nA Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/commissionCounty"
            },
            "type": "array"
          },
          "commissionExpirationTabs": {
            "description": "A list of\n[Commission Expiration tabs][tabref].\n\n\nA Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/commissionExpiration"
            },
            "type": "array"
          },
          "commissionNumberTabs": {
            "description": "A list of\n[Commission Number tabs][tabref].\n\n\nA Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/commissionNumber"
            },
            "type": "array"
          },
          "commissionStateTabs": {
            "description": "A list of\n[Commission State tabs][cc].\n\n\nA Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/commissionState"
            },
            "type": "array"
          },
          "companyTabs": {
            "description": "A list of\n[Company tabs][company].\n\nA Company tab displays a field for the name of the recipient's company. This value can't be set.\n\n[company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company\n",
            "items": {
              "$ref": "#/$defs/company"
            },
            "type": "array"
          },
          "dateSignedTabs": {
            "description": "A list of\n[Date Signed tabs][dateSigned].\n\n\nA Date Signed tab displays the date that the recipient signed the document. This value can't be set.\n\n[dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/dateSigned"
            },
            "type": "array"
          },
          "dateTabs": {
            "description": "A list of\n[Date tabs][date].\n\nA Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.\n\n**Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.\n\n\n[date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/date"
            },
            "type": "array"
          },
          "declineTabs": {
            "description": "A list of\n[Decline tabs][decline].\n\nA Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.\n\n\n[decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/decline"
            },
            "type": "array"
          },
          "drawTabs": {
            "description": "A list of Draw Tabs.\n\nA Draw Tab allows the recipient to add a free-form drawing to the document.",
            "items": {
              "$ref": "#/$defs/draw"
            },
            "type": "array"
          },
          "emailAddressTabs": {
            "description": "A list of\n[Email Address tabs][emailAddress].\n\nAn Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.\n\n\n[emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/emailAddress"
            },
            "type": "array"
          },
          "emailTabs": {
            "description": "A list of\n[Email tabs][email].\n\nAn Email tab enables the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation. This value can be set.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/email"
            },
            "type": "array"
          },
          "envelopeIdTabs": {
            "description": "A list of\n[Envelope ID tabs][envelopeId].\n\nAn Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.\n\n\n[envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid\n",
            "items": {
              "$ref": "#/$defs/envelopeId"
            },
            "type": "array"
          },
          "firstNameTabs": {
            "description": "A list of\n[First Name tabs][firstName].\n\nA First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname\n",
            "items": {
              "$ref": "#/$defs/firstName"
            },
            "type": "array"
          },
          "formulaTabs": {
            "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.\n\nThe `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].\n\nIf a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n[formulaTab]:\t    \t/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/formulaTab"
            },
            "type": "array"
          },
          "fullNameTabs": {
            "description": "A list of\n[Full Name tabs][fullName].\n\nA Full Name tab displays the recipient's full name. This value can't be set.\n\n\n[fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/fullName"
            },
            "type": "array"
          },
          "initialHereTabs": {
            "description": "A list of\n[Initial Here tabs][initialHere].\n\nThis type of tab enables the recipient to initial the document. May be optional. This value can't be set.\n\n[initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/initialHere"
            },
            "type": "array"
          },
          "lastNameTabs": {
            "description": "A list of\n[Last Name tabs][lastName].\n\nA Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/lastName"
            },
            "type": "array"
          },
          "listTabs": {
            "description": "An array of List tabs.\n\nA List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/list"
            },
            "type": "array"
          },
          "notarizeTabs": {
            "description": "A list of  [Notarize tabs][notarize].\n\nA Notarize tab alerts notary recipients that they must take action on the page. This value can be set.\n\n**Note:** Only one notarize tab can appear on a page.\n\n[notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/notarize"
            },
            "type": "array"
          },
          "notarySealTabs": {
            "description": "A list of Notary Seal tabs.\n\nA Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/notarySeal"
            },
            "type": "array"
          },
          "noteTabs": {
            "description": "A list of\n[Note tabs][note].\n\nA Note tab displays additional information to the recipient in the form of a note. This value can be set.\n\n[note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/note"
            },
            "type": "array"
          },
          "numberTabs": {
            "description": "A list of\n[Number tabs][number].\n\nA Number tab enables the recipient to enter numbers and decimal points (.). This value can be set.\n\n\n\n[number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/number"
            },
            "type": "array"
          },
          "numericalTabs": {
            "description": "",
            "items": {
              "$ref": "#/$defs/numerical"
            },
            "type": "array"
          },
          "phoneNumberTabs": {
            "description": "A list of\n[Phone Number tabs][cc].\n\n\nA Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/phoneNumber"
            },
            "type": "array"
          },
          "polyLineOverlayTabs": {
            "description": "This type of tab enables the recipient to strike through document text. This value can't be set
            "items": {
              "$ref": "#/$defs/polyLineOverlay"
            },
            "type": "array"
          },
          "prefillTabs": {
            "$ref": "#/$defs/prefillTabs"
          },
          "radioGroupTabs": {
            "description": "A list of [Radio Group tabs][radioGroup].\n\nA Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can be selected in a group. This value can be set.\n\n\n[radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/radioGroup"
            },
            "type": "array"
          },
          "signHereTabs": {
            "description": "A list of\n[Sign Here tabs][signHere].\n\nThis type of tab enables the recipient to sign a document. May be optional. This value can't be set.\n\n[signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/signHere"
            },
            "type": "array"
          },
          "signerAttachmentTabs": {
            "description": "A list of\n[Signer Attachment tabs][signerAttachment].\n\nThis type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.\n\n\n[signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/signerAttachment"
            },
            "type": "array"
          },
          "smartSectionTabs": {
            "description": "A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.\n\nSmart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.\n\n**Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.",
            "items": {
              "$ref": "#/$defs/smartSection"
            },
            "type": "array"
          },
          "ssnTabs": {
            "description": "A list of\n[SSN tabs][ssn].\n\nAn SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without\ndashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.\n\n\n[ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/ssn"
            },
            "type": "array"
          },
          "tabGroups": {
            "description": "An array of `tabGroup` items.\n\nTo associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.\n",
            "items": {
              "$ref": "#/$defs/tabGroup"
            },
            "type": "array"
          },
          "textTabs": {
            "description": "A list of\nText tabs.\n\nA text tab enables the recipient to enter free text. This value can be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/text"
            },
            "type": "array"
          },
          "titleTabs": {
            "description": "A list of\n[Title tabs][title].\n\nA Title tab displays the recipient's title.  This value can't be set.\n\n\n[title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/title"
            },
            "type": "array"
          },
          "viewTabs": {
            "description": "A list of\n[View tabs][view].\n\nA View tab is used with an Approve tab to handle supplemental documents.  This value can be set.\n\n[view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/view"
            },
            "type": "array"
          },
          "zipTabs": {
            "description": "A list of\n[Zip tabs][zip].\n\nA Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.\n\n\n[zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/zip"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-category": "Envelopes",
        "x-ds-definition-name": "tabs",
        "x-ds-order": "50",
        "x-ms-summary": "All of the tabs associated with a recipient. Each property is a list of a type of tab.\n"
      },
      "approve": {
        "description": "A tab that allows the recipient to approve documents\nwithout placing a signature or initials on the\ndocument.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "buttonText": {
            "description": " Specifies the approval text that displays in the tab. ",
            "type": "string"
          },
          "buttonTextMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. You can only use this when adding new tabs for a recipient. When used, the new tab inherits all of the properties of the custom tab.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "**Note:** Approve tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "approve",
        "x-ms-summary": "A tab that allows the recipient to approve documents\nwithout placing a signature or initials on the\ndocument.\n"
      },
      "propertyMetadata": {
        "description": "Metadata about a property.",
        "properties": {
          "options": {
            "description": "An array of option strings supported by this setting.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "rights": {
            "description": "Indicates whether the property is editable. Valid values are:\n\n- `editable`\n- `read_only`",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "propertyMetadata",
        "x-ms-summary": "Metadata about a property."
      },
      "localePolicyTab": {
        "description": "",
        "properties": {
          "addressFormat": {
            "description": "",
            "type": "string"
          },
          "calendarType": {
            "description": "",
            "type": "string"
          },
          "cultureName": {
            "description": "",
            "type": "string"
          },
          "currencyCode": {
            "description": "The currency code for the account, based on the [ISO 4217 currency code](https://www.iso.org/iso-4217-currency-codes.html).",
            "type": "string"
          },
          "currencyNegativeFormat": {
            "description": "",
            "type": "string"
          },
          "currencyPositiveFormat": {
            "description": "",
            "type": "string"
          },
          "customDateFormat": {
            "description": "",
            "type": "string"
          },
          "customTimeFormat": {
            "description": "",
            "type": "string"
          },
          "dateFormat": {
            "description": "",
            "type": "string"
          },
          "initialFormat": {
            "description": "",
            "type": "string"
          },
          "nameFormat": {
            "description": "",
            "type": "string"
          },
          "timeFormat": {
            "description": "",
            "type": "string"
          },
          "timeZone": {
            "description": "",
            "type": "string"
          },
          "useLongCurrencyFormat": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "localePolicyTab",
        "x-ms-summary": ""
      },
      "mergeField": {
        "description": "Contains information for transferring values between Salesforce data fields and DocuSign tabs.\n",
        "properties": {
          "allowSenderToEdit": {
            "description": "When **true,** the sender can modify the value of the `mergeField` tab during the sending process.",
            "type": "string"
          },
          "allowSenderToEditMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "configurationType": {
            "description": "If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.",
            "type": "string"
          },
          "configurationTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "path": {
            "description": "Sets the object associated with the custom tab. Currently this is the Salesforce Object.",
            "type": "string"
          },
          "pathExtended": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/pathExtendedElement"
            },
            "type": "array"
          },
          "pathExtendedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pathMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "row": {
            "description": "Specifies the row number in a Salesforce table that the merge field value corresponds to.",
            "type": "string"
          },
          "rowMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "writeBack": {
            "description": "When **true,** data entered into the merge field during Signing will update the mapped Salesforce field.",
            "type": "string"
          },
          "writeBackMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "mergeField",
        "x-ms-summary": "Contains information for transferring values between Salesforce data fields and DocuSign tabs.\n"
      },
      "pathExtendedElement": {
        "description": "",
        "properties": {
          "name": {
            "description": "",
            "type": "string"
          },
          "type": {
            "description": "The type of this tab. Values are:\n\n- Approve\n- CheckBox\n- Company\n- Date\n- DateSigned,\tDecline\n- Email,\tEmailAddress\n- EnvelopeId\n- FirstName\n- Formula\n- FullName,\tInitialHere\n- InitialHereOptional\n- LastName\n- List\n- Note\n- Number\n- Radio\n- SignerAttachment\n- SignHere\n- SignHereOptional\n- Ssn\n- Text\n- Title\n- Zip5\n- Zip5Dash4\n",
            "type": "string"
          },
          "typeName": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "pathExtendedElement",
        "x-ms-summary": ""
      },
      "smartContractInformation": {
        "description": "",
        "properties": {
          "code": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "uri": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "smartContractInformation",
        "x-ms-summary": ""
      },
      "checkbox": {
        "description": "A tab that allows the recipient to select a yes/no (on/off) option.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to apply. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "This property does not apply to `checkbox` tabs.\n\nTo require users to check\nat least one, or at most some number\nof checkboxes,\nassociate the checkbox tabs\nwith a [`tabGroup`][tabGroup].\nThen set the following `tabGroup` properties:\n\n- [`maximumAllowed`][maximumAllowed]\n- [`minimumRequired`][minimumRequired]\n- [`groupRule`][groupRule] specifies how the other two properties are interpreted.\n\nYou can find an example\nat [Stack Overflow][so].\n\n[so]:               https://stackoverflow.com/questions/58209376/checkbox-validation-using-docusign-rest-api/58210277#58210277\n[tabGroup]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups\n[groupRule]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_grouprule\n[maximumAllowed]:   /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_maximumallowed\n[minimumRequired]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_minimumrequired\n",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "selected": {
            "description": "When **true,** the checkbox is selected.",
            "type": "string"
          },
          "selectedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "selectedOriginal": {
            "description": "",
            "type": "string"
          },
          "selectedOriginalMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-7, -6)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-7, -6)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "checkbox",
        "x-ms-summary": "A tab that allows the recipient to select a yes/no (on/off) option.\n"
      },
      "commentThread": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "comments": {
            "description": "An array of comment tabs that contain information about users' comments on documents.",
            "items": {
              "$ref": "#/$defs/comment"
            },
            "type": "array"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "threadId": {
            "description": "The unique identifier for the comment thread.",
            "type": "string"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "commentThread",
        "x-ms-summary": ""
      },
      "comment": {
        "description": "",
        "properties": {
          "envelopeId": {
            "description": "The Guid of the envelope the comment thread belongs to.",
            "type": "string"
          },
          "hmac": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the comment.",
            "type": "string"
          },
          "mentions": {
            "description": "An array of userIds that are mentioned directly in the body of a comment.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "read": {
            "description": "When **true,** indicates that the comment was read.",
            "type": "boolean"
          },
          "sentByEmail": {
            "description": "The email address of the user who created the comment.",
            "type": "string"
          },
          "sentByFullName": {
            "description": "The full name of the user who created the comment.",
            "type": "string"
          },
          "sentByImageId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "sentByInitials": {
            "description": "The initials of the user who created the comment.",
            "type": "string"
          },
          "sentByRecipientId": {
            "description": "The recipient ID of the user who created the comment.",
            "type": "string"
          },
          "sentByUserId": {
            "description": "The user ID of the user who created the comment.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the signing group that can view the comment or that created the comment.",
            "type": "string"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "subject": {
            "description": "The subject of the envelope.",
            "type": "string"
          },
          "tabId": {
            "description": "The unique identifier for the tab that represents the comment thread.",
            "type": "string"
          },
          "text": {
            "description": "The content of the comment, as UTF-8 text. \n\nMaximum Length: 500 characters.\n\n**Note:** The maximum size allowed for the entire message body is 32 KB. ",
            "type": "string"
          },
          "threadId": {
            "description": "The unique identifier for the comment thread.",
            "type": "string"
          },
          "threadOriginatorId": {
            "description": "The userId of the user who created the thread.",
            "type": "string"
          },
          "timeStampFormatted": {
            "description": "The time the comment was created, formatted according to the format of the user who created the comment.",
            "type": "string"
          },
          "timestamp": {
            "description": "The time the comment was created.",
            "type": "string"
          },
          "visibleTo": {
            "description": "The user IDs of the users that the comment is visible to.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "comment",
        "x-ms-summary": ""
      },
      "commissionCounty": {
        "description": "A Commission County tab displays the county of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "commissionCounty",
        "x-ms-summary": "A Commission County tab displays the county of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n"
      },
      "commissionExpiration": {
        "description": "A Commission Expiration tab displays the expiration date of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "commissionExpiration",
        "x-ms-summary": "A Commission Expiration tab displays the expiration date of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n"
      },
      "commissionNumber": {
        "description": "A Commission Number tab displays a notary's commission number. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "commissionNumber",
        "x-ms-summary": "A Commission Number tab displays a notary's commission number. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n"
      },
      "commissionState": {
        "description": "A Commission State tab displays the state in which a notary's commission was granted. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "commissionState",
        "x-ms-summary": "A Commission State tab displays the state in which a notary's commission was granted. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n"
      },
      "company": {
        "description": "A tab that displays the recipient's company name.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "company",
        "x-ms-summary": "A tab that displays the recipient's company name.\n"
      },
      "dateSigned": {
        "description": "A tab that displays the date that the recipient signed the\ndocument.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "**Note:** Date Signed tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "dateSigned",
        "x-ms-summary": "A tab that displays the date that the recipient signed the\ndocument.\n"
      },
      "date": {
        "description": "A tab that allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "date",
        "x-ms-summary": "A tab that allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n"
      },
      "decline": {
        "description": "A tab that allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "buttonText": {
            "description": " Specifies the decline text displayed in the tab.",
            "type": "string"
          },
          "buttonTextMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "declineReason": {
            "description": "The reason the recipient declined the document.",
            "type": "string"
          },
          "declineReasonMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "**Note:** Decline tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "decline",
        "x-ms-summary": "A tab that allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n"
      },
      "draw": {
        "description": "A tab that allows the recipient to add a free-form drawing to the document.",
        "properties": {
          "allowSignerUpload": {
            "description": "When **true,** the recipient can upload an image to use as the background of the drawing field. The default value is **false.**",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "useBackgroundAsCanvas": {
            "description": "",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "draw",
        "x-ms-summary": "A tab that allows the recipient to add a free-form drawing to the document."
      },
      "emailAddress": {
        "description": "A tab that displays the recipient's email as entered in the\nrecipient information.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "**Note:** Email Address tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "emailAddress",
        "x-ms-summary": "A tab that displays the recipient's email as entered in the\nrecipient information.\n"
      },
      "email": {
        "description": "A tab that allows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "email",
        "x-ms-summary": "A tab that allows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n"
      },
      "envelopeId": {
        "description": "A tab that displays the envelope ID.\n\n**Note:**  The eSignature API uses the name `envelopeId` two ways:\n\n- As a _property_ of type `string` used to identify an envelope  by its GUID.\n- As an _object_ used to represent an envelope tab that displays\n  the envelope's GUID.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "envelopeId",
        "x-ms-summary": "A tab that displays the envelope ID.\n\n**Note:**  The eSignature API uses the name `envelopeId` two ways:\n\n- As a _property_ of type `string` used to identify an envelope  by its GUID.\n- As an _object_ used to represent an envelope tab that displays\n  the envelope's GUID.\n"
      },
      "firstName": {
        "description": "A tab that displays the recipient's first name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "firstName",
        "x-ms-summary": "A tab that displays the recipient's first name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n"
      },
      "formulaTab": {
        "description": "The value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formula": {
            "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n",
            "type": "string"
          },
          "formulaMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "hidden": {
            "description": "If this is a regular formula (no `paymentDetails` property is present):\n\n* **true:** The tab is hidden.\n* **false:** The tab is shown.\n\nIf the formula is payment item (a `paymentDetails` property is present):\n\n* **true:** The tab is displayed as a payment.\n* **false:** The tab is displayed as a regular formula.\n",
            "type": "string"
          },
          "hiddenMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "isPaymentAmountMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "paymentDetails": {
            "$ref": "#/$defs/paymentDetails"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "roundDecimalPlaces": {
            "description": "The number of decimal places to round to.",
            "type": "string"
          },
          "roundDecimalPlacesMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+35, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+35, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "formulaTab",
        "x-ms-summary": "The value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n"
      },
      "paymentDetails": {
        "description": "When a formula tab\nhas a `paymentDetails` property,\nthe formula tab\nis a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n",
        "properties": {
          "allowedPaymentMethods": {
            "description": "An array of accepted payment methods:\n\n* `CreditCard`\n* `ApplePay`\n* `AndroidPay`\n* `BankAccount`\n\nFor example, if you only accept credit cards and ACH transfers, you would set this property to:\n\n`'[\"BankAccount\", \"CreditCard\"]'`\n\nDo not specify `BankAccount` (ACH) if you are also using in-person signing.\n",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "chargeId": {
            "description": "The GUID set by the payment gateway (such as Stripe) that identifies a transaction. The `chargeId` is created when authorizing a payment and must be referenced when completing a payment.",
            "type": "string"
          },
          "currencyCode": {
            "description": "Specifies the three-letter\n[ISO 4217][ISO 4217] currency code for the payment.\n\nSupported currencies are:\n\n* AUD: Australian dollar\n* CAD: Canadian dollar\n* EUR: Euro\n* GBP: Great Britain pound\n* USD: United States dollar\n\nSpecifying any other ISO 4217 code for payments is an error.\n\n[ISO 4217]:          https://en.wikipedia.org/wiki/ISO_4217\n",
            "type": "string"
          },
          "currencyCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customMetadata": {
            "description": "This is a sender-defined field that passes any extra metadata about the payment that will show up in the Authorize.net transaction under **Description** in the merchant gateway portal. The custom metadata will be recorded in downloaded Authorize.net reports. \n\nThe following example shows what the **Description** field of the transaction will look like: \n\n`<envelopeID>, <customMetadata>`",
            "type": "string"
          },
          "customMetadataRequired": {
            "description": "A sender-defined field that specifies whether custom metadata is required for the transaction. When **true,** custom metadata is required. This property only applies if you are using an Authorize.net payment gateway account.",
            "type": "boolean"
          },
          "customerId": {
            "description": "The customer ID.",
            "type": "string"
          },
          "gatewayAccountId": {
            "description": "A GUID that identifies the payment gateway\nconnected to the sender's DocuSign account.\n\nThere is no public API\nfor connecting payment gateway accounts\nYou must connect and manage payment gateway accounts\nthrough the DocuSign Admin console\nand through your chosen payment gateway.\n\nYou can get the gateway account ID\nin the Payments section\nof the DocuSign Admin console.\n\n\n[paymentgateways]:  https://support.docusign.com/en/guides/managing-payment-gateways\n",
            "type": "string"
          },
          "gatewayAccountIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "gatewayDisplayName": {
            "description": "Display name of the gateway connected to sender's DocuSign account.\n\nPossible values are: Stripe, Braintree, Authorize.Net, CyberSource, Zuora, Elavon.",
            "type": "string"
          },
          "gatewayName": {
            "description": "Name of the gateway connected to sender's DocuSign account.\n\nPossible values are:\n\n* `Stripe`\n* `Braintree`\n* `AuthorizeDotNet`\n* `CyberSource`\n* `Zuora`\n* `Elavon`",
            "type": "string"
          },
          "lineItems": {
            "description": "A payment formula can have\none or more line items\nthat provide detail about\nindividual items in a payment request.\n\nThe list of line items\nare returned as metadata\nto the payment gateway.\n",
            "items": {
              "$ref": "#/$defs/paymentLineItem"
            },
            "type": "array"
          },
          "paymentOption": {
            "description": "This property specifies how the signer's collected payment details will be used.\n\nValid values:\n\n- `authorize`: The payment details will be used to collect payment. This is the default value.\n- `save`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway.\n- `save_and_authorize`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway and will also be used to collect payment.",
            "type": "string"
          },
          "paymentSourceId": {
            "description": "The payment source ID.",
            "type": "string"
          },
          "signerValues": {
            "$ref": "#/$defs/paymentSignerValues"
          },
          "status": {
            "description": "This read-only property describes the status of a payment.\n\n* `new`<br>\n  This is a new payment request.\n  The envelope has been created,\n  but no payment authorizations have been made.\n\n* `auth_complete`<br>\n  A recipient has entered their credit card information,\n  but the envelope has not been completed.\n  The card has not been charged.\n\n* `payment_complete`<br>\n  The recipient's card has been charged.\n\n* `payment_capture_failed`<br>\n  Final charge failed.\n  This can happen when too much time\n  passes between authorizing the payment\n  and completing the document.\n\n* `future_payment_saved` <br>\nThe recipient's payment method has been saved to the sender's payment gateway.\n",
            "type": "string"
          },
          "subGatewayName": {
            "description": "",
            "type": "string"
          },
          "total": {
            "$ref": "#/$defs/money"
          }
        },
        "type": "object",
        "x-ds-definition-name": "paymentDetails",
        "x-ms-summary": "When a formula tab\nhas a `paymentDetails` property,\nthe formula tab\nis a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n"
      },
      "paymentLineItem": {
        "description": "A line item describes details\nabout an individual line item\nin a payment request.\n\n",
        "properties": {
          "amountReference": {
            "description": "This is a the `tabLabel`\nthat specifies the amount paid\nfor the line items.\n\n",
            "type": "string"
          },
          "description": {
            "description": "A sender-defined description of the line item.\n",
            "type": "string"
          },
          "itemCode": {
            "description": "This is the sender-defined\nSKU, inventory number, or other item code\nfor the line item.\n",
            "type": "string"
          },
          "name": {
            "description": "This is a sender-defined\nproduct name, service name,\nor other designation for the line item.\n",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "paymentLineItem",
        "x-ms-summary": "A line item describes details\nabout an individual line item\nin a payment request.\n\n"
      },
      "paymentSignerValues": {
        "description": "",
        "properties": {
          "paymentOption": {
            "description": "This property specifies how the signer's collected payment details will be used.\n\nValid values:\n\n- `authorize`: The payment details will be used to collect payment. This is the default value.\n- `save`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway.\n- `save_and_authorize`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway and will also be used to collect payment.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "paymentSignerValues",
        "x-ms-summary": ""
      },
      "money": {
        "description": "Describes information\nabout the `total` of a payment.\n",
        "properties": {
          "amountInBaseUnit": {
            "description": "The total payment amount\nin the currency's base unit.\nFor example, for USD\nthe base currency is one cent.\n",
            "type": "string"
          },
          "currency": {
            "description": "The three-letter\n[ISO 4217][ISO 4217] currency code for the payment.\n\nFor example:\n\n* AUD Australian dollar\n* CAD Canadian dollar\n* EUR Euro\n* GBP Great Britain pound\n* USD United States dollar\n\nThis is a read-only property.\n\n[ISO 4217]:          https://en.wikipedia.org/wiki/ISO_4217\n",
            "type": "string"
          },
          "displayAmount": {
            "description": "The payment amount as displayed\nin the `currency`.\n\nFor example, if the payment amount\nis USD 12.59,\nthe `amountInBaseUnit` is 1259 (cents),\nand the displayed amount is `$12.59 USD`.\n\nThis is a read-only property.\n",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "money",
        "x-ms-summary": "Describes information\nabout the `total` of a payment.\n"
      },
      "fullName": {
        "description": "A tab that displays the recipient's full name.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "fullName",
        "x-ms-summary": "A tab that displays the recipient's full name.\n"
      },
      "initialHere": {
        "description": "A tab that allows the recipient to initial the document. May\nbe optional.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "handDrawRequired": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "optional": {
            "description": "When **true,** the recipient does not need to complete this tab to complete the signing process.",
            "type": "string"
          },
          "optionalMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "scaleValue": {
            "description": " Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.",
            "type": "string"
          },
          "scaleValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+2, -7)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+2, -7)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "initialHere",
        "x-ms-summary": "A tab that allows the recipient to initial the document. May\nbe optional.\n"
      },
      "lastName": {
        "description": "A tab that displays the recipient's last name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "lastName",
        "x-ms-summary": "A tab that displays the recipient's last name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n"
      },
      "list": {
        "description": "This tab offers a list of options to choose from.\nThe `listItems`\nproperty contains a list of\n[`listItem`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/)\nobjects to specify the selectable options.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "listItems": {
            "description": "The list of values that can be selected by senders. The list values are separated by semi-colons. Example: [one;two;three;four]\n\nMaximum Length of listItems:  2048 characters.\nMaximum Length of items in the list: 100 characters. \n",
            "items": {
              "$ref": "#/$defs/listItem"
            },
            "type": "array"
          },
          "listSelectedValue": {
            "description": "The value in the list that is selected by default.",
            "type": "string"
          },
          "listSelectedValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "The value to use when the item is selected.",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "list",
        "x-ms-summary": "This tab offers a list of options to choose from.\nThe `listItems`\nproperty contains a list of\n[`listItem`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/)\nobjects to specify the selectable options.\n"
      },
      "listItem": {
        "description": "One of the selectable items\nin the `listItems` property\nof a [`list`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/) tab.",
        "properties": {
          "selected": {
            "description": "When **true,** indicates that this item is the default selection shown to a signer. \n\nOnly one selection can be set as the default.",
            "type": "string"
          },
          "selectedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "text": {
            "description": "Specifies the text that is shown in the dropdown list. ",
            "type": "string"
          },
          "textMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value that is used when the list item is selected.",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "listItem",
        "x-ms-summary": "One of the selectable items\nin the `listItems` property\nof a [`list`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/) tab."
      },
      "notarize": {
        "description": "A tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page.",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "notarize",
        "x-ms-summary": "A tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page."
      },
      "notarySeal": {
        "description": "A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "scaleValue": {
            "description": "Sets the size of the tab. This field accepts values from `0.5` to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.",
            "type": "string"
          },
          "scaleValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "notarySeal",
        "x-ms-summary": "A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/"
      },
      "note": {
        "description": "A tab that displays additional information, in the form of a\nnote, for the recipient.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "**Note:** Note tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "note",
        "x-ms-summary": "A tab that displays additional information, in the form of a\nnote, for the recipient.\n"
      },
      "number": {
        "description": "A tab that allows the recipient to enter numbers and decimal\n(.) points.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formula": {
            "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n",
            "type": "string"
          },
          "formulaMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "number",
        "x-ms-summary": "A tab that allows the recipient to enter numbers and decimal\n(.) points.\n"
      },
      "numerical": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This ID must refer to an existing document.\n",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxNumericalValue": {
            "description": "",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "minNumericalValue": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "numericalValue": {
            "description": "",
            "type": "string"
          },
          "originalNumericalValue": {
            "description": "",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique ID for the recipient. It indicates which recipient the tab applies to.\n",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this tab is shared.\n",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationType": {
            "description": "",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "numerical",
        "x-ms-summary": ""
      },
      "phoneNumber": {
        "description": "A Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "phoneNumber",
        "x-ms-summary": "A Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/"
      },
      "polyLineOverlay": {
        "description": "This tab enables users to strike through the text of a document. The tab is implemented as a line represented as a pair of x and y coordinates.",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "graphicsContext": {
            "$ref": "#/$defs/graphicsContext"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "overlayType": {
            "description": "The type of overlay to use. The API currently supports only the `outline` overlay type.",
            "type": "string"
          },
          "overlayTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "polyLines": {
            "description": "An array of `polyLine` objects that contain x- and y-coordinates representing the locations of the lines.",
            "items": {
              "$ref": "#/$defs/polyLine"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** indicates that the tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "polyLineOverlay",
        "x-ms-summary": "This tab enables users to strike through the text of a document. The tab is implemented as a line represented as a pair of x and y coordinates."
      },
      "graphicsContext": {
        "description": "",
        "properties": {
          "fillColor": {
            "description": "The fill color to use for the overlay. Colors are typically specified by their RGB hex values, but you can also use a [friendly CSS color name](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).",
            "type": "string"
          },
          "lineColor": {
            "description": "The line color to use for the overlay. Colors are typically specified by their RGB hex values, but you can also use a [friendly CSS color name](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).",
            "type": "string"
          },
          "lineWeight": {
            "description": "The line weight or thickness to use for the overlay.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "graphicsContext",
        "x-ms-summary": ""
      },
      "polyLine": {
        "description": "",
        "properties": {
          "x1": {
            "description": "",
            "type": "string"
          },
          "x2": {
            "description": "",
            "type": "string"
          },
          "y1": {
            "description": "",
            "type": "string"
          },
          "y2": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "polyLine",
        "x-ms-summary": ""
      },
      "prefillTabs": {
        "description": "Prefill tabs are tabs\nthat the sender can fill in\nbefore the envelope is sent.\nThey are sometimes called\nsender tags or pre-fill fields.\n\nOnly the following tab types can be\nprefill tabs:\n\n- text\n- check boxes\n- radio buttons\n\n\n\n[Pre-Fill Your Own Document Fields][app]\ndescribes how prefill tabs\nwork in the web application.\n\n\n[Customize your envelopes with pre-fill fields][catblog]\nshows how to use prefill tabs\nin your application using the eSignature\nSDKs.\n\n[app]:      https://support.docusign.com/en/guides/ndse-user-guide-prefill-fields\n[catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields",
        "properties": {
          "checkboxTabs": {
            "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nA Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.\n\n\n[checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/checkbox"
            },
            "type": "array"
          },
          "dateTabs": {
            "description": "A list of\n[Date tabs][date].\n\nA Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.\n\n**Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.\n\n\n[date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/date"
            },
            "type": "array"
          },
          "emailTabs": {
            "description": "A list of\n[Email tabs][email].\n\nAn Email tab enables the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation. This value can be set.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/email"
            },
            "type": "array"
          },
          "numberTabs": {
            "description": "A list of\n[Number tabs][number].\n\nA Number tab enables the recipient to enter numbers and decimal points (.). This value can be set.\n\n\n\n[number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/number"
            },
            "type": "array"
          },
          "radioGroupTabs": {
            "description": "A list of [Radio Group tabs][radioGroup].\n\nA Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can be selected in a group. This value can be set.\n\n\n[radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/radioGroup"
            },
            "type": "array"
          },
          "senderCompanyTabs": {
            "description": "",
            "items": {
              "$ref": "#/$defs/senderCompany"
            },
            "type": "array"
          },
          "senderNameTabs": {
            "description": "",
            "items": {
              "$ref": "#/$defs/senderName"
            },
            "type": "array"
          },
          "ssnTabs": {
            "description": "A list of\n[SSN tabs][ssn].\n\nAn SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without\ndashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.\n\n\n[ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/ssn"
            },
            "type": "array"
          },
          "tabGroups": {
            "description": "An array of `tabGroup` items.\n\nTo associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.\n",
            "items": {
              "$ref": "#/$defs/tabGroup"
            },
            "type": "array"
          },
          "textTabs": {
            "description": "A list of\nText tabs.\n\nA text tab enables the recipient to enter free text. This value can be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/text"
            },
            "type": "array"
          },
          "zipTabs": {
            "description": "A list of\n[Zip tabs][zip].\n\nA Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.\n\n\n[zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/zip"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "prefillTabs",
        "x-ms-summary": "Prefill tabs are tabs\nthat the sender can fill in\nbefore the envelope is sent.\nThey are sometimes called\nsender tags or pre-fill fields.\n\nOnly the following tab types can be\nprefill tabs:\n\n- text\n- check boxes\n- radio buttons\n\n\n\n[Pre-Fill Your Own Document Fields][app]\ndescribes how prefill tabs\nwork in the web application.\n\n\n[Customize your envelopes with pre-fill fields][catblog]\nshows how to use prefill tabs\nin your application using the eSignature\nSDKs.\n\n[app]:      https://support.docusign.com/en/guides/ndse-user-guide-prefill-fields\n[catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields"
      },
      "radioGroup": {
        "description": "This group tab is used to place radio buttons on a document.\nThe `radios` property\ncontains a list of\n[`radio`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)\nobjects  associated with the group. Only one radio button can\nbe selected in a group.\n",
        "properties": {
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "groupName": {
            "description": "The name of the group. The search_text provided in the call automatically performs a wild card search on group_name.",
            "type": "string"
          },
          "groupNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "radios": {
            "description": "Specifies the locations and status for radio buttons that are grouped together.",
            "items": {
              "$ref": "#/$defs/radio"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "tooltipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "radioGroup",
        "x-ms-summary": "This group tab is used to place radio buttons on a document.\nThe `radios` property\ncontains a list of\n[`radio`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)\nobjects  associated with the group. Only one radio button can\nbe selected in a group.\n"
      },
      "radio": {
        "description": "One of the selectable radio buttons\nin the `radios` property\nof a [`radioGroup`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) tab.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "selected": {
            "description": "When **true,** the radio button is selected.",
            "type": "string"
          },
          "selectedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "radio",
        "x-ms-summary": "One of the selectable radio buttons\nin the `radios` property\nof a [`radioGroup`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) tab.\n"
      },
      "senderCompany": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "senderCompany",
        "x-ms-summary": ""
      },
      "senderName": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "senderName",
        "x-ms-summary": ""
      },
      "ssn": {
        "description": "A one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "ssn",
        "x-ms-summary": "A one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n"
      },
      "tabGroup": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "groupLabel": {
            "description": "A unique identifier for a tab group. To assign a tab to the `tabGroup`, you assign the `TabGroupLabel` to the `tab.TabGroupLabels` array.",
            "type": "string"
          },
          "groupLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "groupRule": {
            "description": "Specifies how `maximumAllowed` and `minimumRequired`\nare interpreted when selecting tabs in a `tabGroup`.\n\nPossible values are:\n\n- `SelectAtLeast`\n- `SelectAtMost`\n- `SelectExactly`\n- `SelectARange`\n\n",
            "type": "string"
          },
          "groupRuleMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maximumAllowed": {
            "description": "The maximum number of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.",
            "type": "string"
          },
          "maximumAllowedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "minimumRequired": {
            "description": "The minimum number of of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.",
            "type": "string"
          },
          "minimumRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabScope": {
            "description": "The scope of the tab group. Possible values are:\n\n- `document`\n- `envelope` (default)",
            "type": "string"
          },
          "tabScopeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "tabGroup",
        "x-ms-summary": ""
      },
      "text": {
        "description": "A tab that allows the recipient to enter any type of text.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formula": {
            "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n",
            "type": "string"
          },
          "formulaMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "text",
        "x-ms-summary": "A tab that allows the recipient to enter any type of text.\n"
      },
      "zip": {
        "description": "A tab that allows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "useDash4": {
            "description": "When **true,** ZIP+4 format is used.",
            "type": "string"
          },
          "useDash4Metadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "zip",
        "x-ms-summary": "A tab that allows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n"
      },
      "signHere": {
        "description": "A tab that allows the recipient to sign a document. May be\noptional.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "handDrawRequired": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "height": {
            "description": "Not applicable to Sign Here tab.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "isSealSignTab": {
            "description": "When **true,**  the tab contains a visual representation for an electronic seal in a document.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.\n",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "optional": {
            "description": "When **true,** the recipient does not need to complete this tab to complete the signing process.",
            "type": "string"
          },
          "optionalMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "scaleValue": {
            "description": "Scales the size of the tab. This field accepts values from 0.5 to 2.0, where  0.5 is half the normal size, 1.0 is normal size, and 2.0 is twice the normal size.",
            "type": "string"
          },
          "scaleValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "stamp": {
            "$ref": "#/$defs/stamp"
          },
          "stampType": {
            "description": "The type of stamp. Valid values are:\n\n- `signature`: A signature image. This is the default value.\n- `stamp`: A stamp image.\n- null",
            "type": "string"
          },
          "stampTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "Not applicable to Sign Here tab.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+1, -7)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+1, -7)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "signHere",
        "x-ms-summary": "A tab that allows the recipient to sign a document. May be\noptional.\n"
      },
      "stamp": {
        "description": "",
        "properties": {
          "adoptedDateTime": {
            "description": "The UTC date and time when the user adopted the signature.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "The UTC DateTime when the item was created.",
            "type": "string"
          },
          "customField": {
            "description": "",
            "type": "string"
          },
          "dateStampProperties": {
            "$ref": "#/$defs/dateStampProperties"
          },
          "disallowUserResizeStamp": {
            "description": "When **true,** users may not resize the stamp.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "externalID": {
            "description": "Optionally specify an external identifier for the user's signature.",
            "type": "string"
          },
          "imageBase64": {
            "description": "",
            "type": "string"
          },
          "imageType": {
            "description": "Specificies the type of image. Valid values:\n\n- `stamp_image`\n- `signature_image`\n- `initials_image`",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The date and time that the item was last modified.",
            "type": "string"
          },
          "phoneticName": {
            "description": "The phonetic spelling of the `signatureName`.",
            "type": "string"
          },
          "signatureName": {
            "description": "Specifies the user's signature name.",
            "type": "string"
          },
          "stampFormat": {
            "description": "The format of a stamp. Valid values are:\n\n- `NameHanko`: The stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents the signer's name and the date. ",
            "type": "string"
          },
          "stampImageUri": {
            "description": "The URI for retrieving the image of the user's stamp.",
            "type": "string"
          },
          "stampSizeMM": {
            "description": "The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "stamp",
        "x-ms-summary": ""
      },
      "dateStampProperties": {
        "description": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle.",
        "properties": {
          "dateAreaHeight": {
            "description": "The height of the rectangle.",
            "type": "string"
          },
          "dateAreaWidth": {
            "description": "The width of the rectangle.",
            "type": "string"
          },
          "dateAreaX": {
            "description": "The X axis position of the top-left corner.",
            "type": "string"
          },
          "dateAreaY": {
            "description": "The Y axis position of the top-left corner.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "dateStampProperties",
        "x-ms-summary": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle."
      },
      "signerAttachment": {
        "description": "A tab that allows the recipient to attach supporting\ndocuments to an envelope.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "handDrawRequired": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "optional": {
            "description": "When **true,** the recipient does not need to complete this tab to complete the signing process.",
            "type": "string"
          },
          "optionalMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "scaleValue": {
            "description": "Sets the size of the tab. This field accepts values from `0.5` to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.",
            "type": "string"
          },
          "scaleValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+0, -24)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+0, -24)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "signerAttachment",
        "x-ms-summary": "A tab that allows the recipient to attach supporting\ndocuments to an envelope.\n"
      },
      "smartSection": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caseSensitive": {
            "description": "When **true,** the `startAnchor` and `endAnchor` for the Smart Section must match both the case and the content of the strings in the HTML.",
            "type": "boolean"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "displaySettings": {
            "$ref": "#/$defs/smartSectionDisplaySettings"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "endAnchor": {
            "description": "Specifies the end of the area in the HTML where the display settings will be applied. If you do not specify an end anchor, the end of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
            "type": "string"
          },
          "endPosition": {
            "$ref": "#/$defs/smartSectionAnchorPosition"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "overlayType": {
            "description": "The type of overlay to draw on the document. The following overlay types are supported:\n\n- `line`\n- `outline`\n",
            "type": "string"
          },
          "overlayTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "removeEndAnchor": {
            "description": "When **true,** removes the end anchor string for the Smart Section from the HTML, preventing it from displaying.",
            "type": "boolean"
          },
          "removeStartAnchor": {
            "description": "When **true,** removes the start anchor string for the Smart Section from the HTML, preventing it from displaying.",
            "type": "boolean"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "startAnchor": {
            "description": "Specifies the beginning of the area in the HTML where the display settings will be applied. If you do not specify a start anchor, the beginning of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
            "type": "string"
          },
          "startPosition": {
            "$ref": "#/$defs/smartSectionAnchorPosition"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "smartSection",
        "x-ms-summary": ""
      },
      "smartSectionDisplaySettings": {
        "description": "These properties define how a Smart Section displays. A Smart Section is a type of display section.",
        "properties": {
          "cellStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on responsive table cells. Only valid in display sections of `responsive_table` or `responsive_table_single_column` types.",
            "type": "string"
          },
          "collapsibleSettings": {
            "$ref": "#/$defs/smartSectionCollapsibleDisplaySettings"
          },
          "display": {
            "description": "Indicates the display type. Must be one of the following enum values:\n\n- **inline:** Leaves the HTML where it is in the document. This allows for adding a label or presenting on a separate page.\n- **collapsible:** The HTML in the section may be expanded or collapsed. By default, the section is expanded.\n- **collapsed:** The HTML in the section may be expanded or collapsed. By default, the section is collapsed.\n- **responsive_table:** Converts the section into a responsive table. Note that this style is applied only on HTML tables that fall within the `startAnchor` and `endAnchor` positions.\n- **responsive_table_single_column:** Converts the section into a responsive, single-column table. Note that this style is applied only on HTML tables that fall within the `startAnchor` and `endAnchor` positions. The table is converted to a single column in which each column becomes a row and is stacked.\n- **print_only:** Prevents this portion of the HTML from displaying in the responsive signing view.",
            "type": "string"
          },
          "displayLabel": {
            "description": "The label to add to this display section in the signing page.\n",
            "type": "string"
          },
          "displayOrder": {
            "description": "The position on the page where the display section appears.",
            "format": "int32",
            "type": "integer"
          },
          "displayPageNumber": {
            "description": "The number of the page on which the display section appears.",
            "format": "int32",
            "type": "integer"
          },
          "hideLabelWhenOpened": {
            "description": "When **true,** the `displayLabel` is hidden when the display section is expanded and the display section is no longer collapsible. This property is valid only when the value of the `display` property is `collapsed`.",
            "type": "boolean"
          },
          "inlineOuterStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on inline display sections. This property is valid only when the value of the `display` property is `inline`.",
            "type": "string"
          },
          "labelWhenOpened": {
            "description": "The label for the display section when it is expanded from a collapsed state. This label displays only on the first opening and is only valid with the value of the `display` property is `collapsed`.",
            "type": "string"
          },
          "preLabel": {
            "description": "Enables you to add descriptive text that appears before a collapsed section or continue button.",
            "type": "string"
          },
          "scrollToTopWhenOpened": {
            "description": "When **true** and the section is expanded,\nthe position of the section-close control\nscrolls to the top of the screen. This property is only valid when the value of the `display` property is `collapsed`.\n",
            "type": "boolean"
          },
          "tableStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on responsive tables. This property is valid only when the value of the `display` property is `responsive_table` or `responsive_table_single_column`.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "smartSectionDisplaySettings",
        "x-ms-summary": "These properties define how a Smart Section displays. A Smart Section is a type of display section."
      },
      "smartSectionCollapsibleDisplaySettings": {
        "description": "",
        "properties": {
          "arrowClosed": {
            "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the closed state.\n\nOne of the following:\n\n- `up`: In the closed state, the disclosure arrow points up.\n- `down`: In the closed state, the disclosure arrow points down.\n- `left`: In the closed state, the disclosure arrow points left.\n- `right`: In the closed state, the disclosure arrow points right.\n",
            "type": "string"
          },
          "arrowColor": {
            "description": "A CSS color value (such as `#DCF851`) that indicates the color of the arrow.\n",
            "type": "string"
          },
          "arrowLocation": {
            "description": "The location of the arrow relative to the collapsible section's label. Possible values are:\n\n- `right` (default)\n- `left`\n",
            "type": "string"
          },
          "arrowOpen": {
            "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the open state.\n\nOne of the following:\n\n- `up`: In the open state, the disclosure arrow points up.\n- `down`: In the open state, the disclosure arrow points down.\n- `left`: In the open state, the disclosure arrow points left.\n- `right`: In the open state, the disclosure arrow points right.\n",
            "type": "string"
          },
          "arrowSize": {
            "description": "Indicates the size of the collapsible arrows. Possible values are:\n\n- `small`\n- `large` (default)\n",
            "type": "string"
          },
          "arrowStyle": {
            "description": "The name of the CSS style to be used on collapsible arrow section.\n",
            "type": "string"
          },
          "containerStyle": {
            "description": "The name of the CSS style to be used for the collapsible container.\n",
            "type": "string"
          },
          "labelStyle": {
            "description": "The name of the CSS style to be used for the collapsible container's label.",
            "type": "string"
          },
          "onlyArrowIsClickable": {
            "description": "When **true,** only the arrow is clickable to expand or collapse the section.\nWhen **false** (the default), both the label and the arrow are clickable.\n\nIf no arrow is used, this setting is ignored.\n",
            "type": "boolean"
          },
          "outerLabelAndArrowStyle": {
            "description": "The name of the CSS style to be used for the collapsible container's outer label and arrow style.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "smartSectionCollapsibleDisplaySettings",
        "x-ms-summary": ""
      },
      "smartSectionAnchorPosition": {
        "description": "",
        "properties": {
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "format": "int32",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "format": "double",
            "type": "number"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "x-ds-definition-name": "smartSectionAnchorPosition",
        "x-ms-summary": ""
      },
      "title": {
        "description": "A tab that displays the recipient's title.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "title",
        "x-ms-summary": "A tab that displays the recipient's title.\n"
      },
      "view": {
        "description": "This tab is used with the Approve tab to handle supplemental documents.",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "buttonText": {
            "description": "The text to display on the button.",
            "type": "string"
          },
          "buttonTextMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "The unique ID for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the recipient must click the **View** button for the supporting document prior to completing the signing process.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requiredRead": {
            "description": "When **true,** the recipient must read through the document.",
            "type": "string"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "view",
        "x-ms-summary": "This tab is used with the Approve tab to handle supplemental documents."
      },
      "inlineTemplate": {
        "description": "",
        "properties": {
          "customFields": {
            "$ref": "#/$defs/AccountCustomFields"
          },
          "documents": {
            "description": "A complex element that contains details about the documents associated with the envelope.",
            "items": {
              "$ref": "#/$defs/document"
            },
            "type": "array"
          },
          "envelope": {
            "$ref": "#/$defs/envelope"
          },
          "recipients": {
            "$ref": "#/$defs/EnvelopeRecipients"
          },
          "sequence": {
            "description": "Specifies the order in which templates are overlaid.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "inlineTemplate",
        "x-ms-summary": ""
      },
      "AccountCustomFields": {
        "description": "An `accountCustomField` is an envelope custom field that you set at the account level.\nApplying custom fields enables account administrators to group and manage envelopes.\n",
        "properties": {
          "listCustomFields": {
            "description": "An array of list custom fields.",
            "items": {
              "$ref": "#/$defs/listCustomField"
            },
            "type": "array"
          },
          "textCustomFields": {
            "description": "An array of text custom fields.",
            "items": {
              "$ref": "#/$defs/textCustomField"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-category": "Accounts",
        "x-ds-definition-name": "customFields",
        "x-ds-order": "30",
        "x-ms-summary": "An `accountCustomField` is an envelope custom field that you set at the account level.\nApplying custom fields enables account administrators to group and manage envelopes.\n"
      },
      "listCustomField": {
        "description": "This object represents a list custom field from which envelope creators and senders can select custom data.",
        "properties": {
          "configurationType": {
            "description": "If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "fieldId": {
            "description": "The ID of the custom field.",
            "type": "string"
          },
          "listItems": {
            "description": "An array of strings that represents the options in a list.\n\nMaximum length: 2048 characters, but each individual option string can only be a maximum of 100 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the custom field.",
            "type": "string"
          },
          "required": {
            "description": "When **true,** senders are required to select an option from the list before they can send the envelope.",
            "type": "string"
          },
          "show": {
            "description": "When **true,** the field displays in the **Envelope Custom Fields** section when a user creates or sends an envelope.",
            "type": "string"
          },
          "value": {
            "description": "The value of the custom field. This is the value that the user who creates or sends the envelope selects from the list.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "listCustomField",
        "x-ms-summary": "This object represents a list custom field from which envelope creators and senders can select custom data."
      },
      "textCustomField": {
        "description": "This object represents a free text custom field where envelope creators and senders can enter custom data.",
        "properties": {
          "configurationType": {
            "description": "If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "fieldId": {
            "description": "The ID of the custom field.",
            "type": "string"
          },
          "name": {
            "description": "The name of the custom field.",
            "type": "string"
          },
          "required": {
            "description": "When **true,** senders are required to enter or select information for the field before they can send the envelope.",
            "type": "string"
          },
          "show": {
            "description": "When **true,** the field displays in the **Envelope Custom Fields** section when a user creates or sends an envelope.",
            "type": "string"
          },
          "value": {
            "description": "The value of the custom field. The user who creates or sends the envelope provides this value. Maximum length: 100 characters.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "textCustomField",
        "x-ms-summary": "This object represents a free text custom field where envelope creators and senders can enter custom data."
      },
      "envelope": {
        "description": "",
        "properties": {
          "accessControlListBase64": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "allowComments": {
            "description": "When **true,** users can add comments to the documents in the envelope. For example, if a signer has a question about the text in the document, they can add a comment to the document.",
            "type": "string"
          },
          "allowMarkup": {
            "description": "When **true,** the Document Markup feature is enabled.\n\n**Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.\n",
            "type": "string"
          },
          "allowReassign": {
            "description": "When **true,** the recipient can redirect an envelope to a more appropriate recipient.",
            "type": "string"
          },
          "allowViewHistory": {
            "description": "When **true,** recipients can view the history of the envelope.",
            "type": "string"
          },
          "anySigner": {
            "description": "Deprecated. This feature has been replaced by signing groups.",
            "type": "string"
          },
          "asynchronous": {
            "description": "When **true,** the envelope is queued for\nprocessing and the value of the `status` property\nis set to `Processing`. Additionally, GET status\ncalls return `Processing` until completed.\n\n\n**Note:** A `transactionId` is required for this\ncall to work correctly. When the envelope is\ncreated, the status is `Processing` and an\n`envelopeId` is not returned in the response. To\nget the `envelopeId`, use a GET envelope query by\nusing the\n[transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the\nConnect notification.",
            "type": "string"
          },
          "attachmentsUri": {
            "description": "Contains a URL for retrieving the attachments that are associated with the envelope.",
            "type": "string"
          },
          "authoritativeCopy": {
            "description": "When **true,** marks all of the documents in the envelope as authoritative copies.\n\n**Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**",
            "type": "string"
          },
          "authoritativeCopyDefault": {
            "description": "The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.\nIf this property is not set, each document defaults to the envelope's `authoritativeCopy`.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When **true,** autonavigation is set for the recipient.\n",
            "type": "string"
          },
          "brandId": {
            "description": "The ID of the brand.",
            "type": "string"
          },
          "brandLock": {
            "description": "When **true,** the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.",
            "type": "string"
          },
          "burnDefaultTabData": {
            "description": "",
            "type": "string"
          },
          "certificateUri": {
            "description": "The URI for retrieving certificate information.",
            "type": "string"
          },
          "completedDateTime": {
            "description": "Specifies the date and time this item was completed.",
            "type": "string"
          },
          "copyRecipientData": {
            "description": "",
            "type": "string"
          },
          "createdDateTime": {
            "description": "The UTC DateTime when the item was created.",
            "type": "string"
          },
          "customFields": {
            "$ref": "#/$defs/AccountCustomFields"
          },
          "customFieldsUri": {
            "description": "The URI for retrieving custom fields.",
            "type": "string"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "deletedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "disableResponsiveDocument": {
            "description": "When **true,** responsive documents are disabled for the envelope.",
            "type": "string"
          },
          "documentBase64": {
            "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
            "type": "string"
          },
          "documentsCombinedUri": {
            "description": "The URI for retrieving all of the documents associated with the envelope as a single PDF file.",
            "type": "string"
          },
          "documentsUri": {
            "description": "The URI for retrieving all of the documents associated with the envelope as separate files.",
            "type": "string"
          },
          "emailBlurb": {
            "description": "This is the same as the email body. If specified it is included in email body for all envelope recipients.",
            "type": "string"
          },
          "emailSettings": {
            "$ref": "#/$defs/emailSettings"
          },
          "emailSubject": {
            "description": "The subject line of the email message that is sent to all recipients.\n\nFor information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).\n\n**Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.\n",
            "type": "string"
          },
          "enableWetSign": {
            "description": "When **true,** the signer is allowed to print the document and sign it on paper.",
            "type": "string"
          },
          "enforceSignerVisibility": {
            "description": "When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.\n\n**Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**\n\n[docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/",
            "type": "string"
          },
          "envelopeAttachments": {
            "description": "An array of attachment objects that provide information about the attachments that are associated with the envelope.",
            "items": {
              "$ref": "#/$defs/attachment"
            },
            "type": "array"
          },
          "envelopeCustomMetadata": {
            "$ref": "#/$defs/envelopeCustomMetadata"
          },
          "envelopeDocuments": {
            "description": "An array containing information about the documents that are included in the envelope.",
            "items": {
              "$ref": "#/$defs/envelopeDocument"
            },
            "type": "array"
          },
          "envelopeId": {
            "description": "The envelope ID of the envelope status that failed to post.",
            "type": "string"
          },
          "envelopeIdStamping": {
            "description": "When **true,** [Envelope ID Stamping](https://support.docusign.com/en/guides/ndse-user-guide-set-advanced-document-options) is enabled.\nAfter a document or attachment is stamped with an Envelope ID,\nthe ID is seen by all recipients\nand becomes a permanent part of the document\nand cannot be removed.",
            "type": "string"
          },
          "envelopeLocation": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "envelopeMetadata": {
            "$ref": "#/$defs/envelopeMetadata"
          },
          "envelopeUri": {
            "description": "The URI for retrieving the envelope or envelopes.",
            "type": "string"
          },
          "expireAfter": {
            "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
            "type": "string"
          },
          "expireDateTime": {
            "description": "The date and time that the envelope is set to expire. This value is determined by the `InitialSentDateTime` of the envelope and the `expireAfter` property of the `notification` object. (Note that the `expireAfter` property of the envelope itself is not used.)\n",
            "type": "string"
          },
          "expireEnabled": {
            "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
            "type": "string"
          },
          "externalEnvelopeId": {
            "description": "May contain an external identifier for the envelope.",
            "type": "string"
          },
          "folders": {
            "description": "A list of folder objects.",
            "items": {
              "$ref": "#/$defs/folder"
            },
            "type": "array"
          },
          "hasComments": {
            "description": "When **true,** indicates that users have added comments to the envelope.",
            "type": "string"
          },
          "hasFormDataChanged": {
            "description": "When **true,** indicates that the data collected through form fields on a document has changed.",
            "type": "string"
          },
          "hasWavFile": {
            "description": "When **true,** indicates that a .wav file used for voice authentication is included in the envelope. ",
            "type": "string"
          },
          "holder": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "initialSentDateTime": {
            "description": "The date and time the envelope was initially sent.",
            "type": "string"
          },
          "is21CFRPart11": {
            "description": "When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).",
            "type": "string"
          },
          "isDynamicEnvelope": {
            "description": "When **true,** indicates that the envelope is a dynamic envelope.",
            "type": "string"
          },
          "isSignatureProviderEnvelope": {
            "description": "When **true,** indicates that the envelope is a signature-provided envelope.",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The date and time that the item was last modified.",
            "type": "string"
          },
          "location": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockInformation": {
            "$ref": "#/$defs/EnvelopeLocks"
          },
          "messageLock": {
            "description": "When **true,** prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
            "type": "string"
          },
          "notification": {
            "$ref": "#/$defs/notification"
          },
          "notificationUri": {
            "description": "The URI for retrieving notifications.",
            "type": "string"
          },
          "powerForm": {
            "$ref": "#/$defs/powerForm"
          },
          "purgeCompletedDate": {
            "description": "The date that a purge was completed.",
            "type": "string"
          },
          "purgeRequestDate": {
            "description": "The date that a purge was requested.",
            "type": "string"
          },
          "purgeState": {
            "description": "Shows the current purge state for the envelope. Valid values:\n\n- `unpurged`: There has been no successful request to purge documents.\n- `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.\n- `documents_dequeued`: The envelope documents have been taken out of the purge queue.\n- `documents_purged`: The envelope documents have been successfully purged.\n- `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.\n- `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.\n- `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.\n- `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.\n\n**Related topics**\n\n- [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)\n- [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)\n\n",
            "type": "string"
          },
          "recipients": {
            "$ref": "#/$defs/EnvelopeRecipients"
          },
          "recipientsLock": {
            "description": "When **true,** prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
            "type": "string"
          },
          "recipientsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
            "type": "string"
          },
          "sender": {
            "$ref": "#/$defs/userInfo"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signerCanSignOnMobile": {
            "description": "When **true,** recipients can sign on a mobile device.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "signingLocation": {
            "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.\n* `created`: The envelope is created as a draft. It can be modified and sent later.\n* `declined`: The envelope has been declined by the recipients.\n* `delivered`: The envelope has been delivered to the recipients.\n* `sent`: The envelope will be sent to the recipients after the envelope is created.\n* `signed`: The envelope has been signed by the recipients.\n* `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.\n",
            "type": "string"
          },
          "statusChangedDateTime": {
            "description": "The data and time that the status changed.",
            "type": "string"
          },
          "statusDateTime": {
            "description": "The DateTime that the envelope changed status (i.e. was created or sent.)",
            "type": "string"
          },
          "templatesUri": {
            "description": "The URI for retrieving the templates.",
            "type": "string"
          },
          "transactionId": {
            "description": " Used to identify an envelope.\n\n The ID is a sender-generated value and is valid in the DocuSign system for 7 days.\n It is recommended that a transaction ID is used for offline\n signing to ensure that an envelope is not sent multiple times.\n The `transactionId` property can be used determine an envelope's\n status (i.e. was it created or not) in cases where the internet c\n onnection was lost before the envelope status was returned.",
            "type": "string"
          },
          "useDisclosure": {
            "description": "When **true,** the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When **false,** the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
            "type": "string"
          },
          "voidedDateTime": {
            "description": "The date and time the envelope or template was voided.",
            "type": "string"
          },
          "voidedReason": {
            "description": "The reason the envelope or template was voided.\n\n**Note:** The string is truncated to the first 200 characters.\n",
            "type": "string"
          },
          "workflow": {
            "$ref": "#/$defs/workflow"
          }
        },
        "type": "object",
        "x-ds-definition-name": "envelope",
        "x-ms-summary": ""
      },
      "emailSettings": {
        "description": "A complex element that allows  the sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope and to override the BCC email addresses to which an envelope is sent. \n\nWhen the emailSettings information is used for an envelope, it only applies to that envelope. \n\n**IMPORTANT:** The emailSettings information is not returned in the GET for envelope status. Use GET /email_settings to return information about the emailSettings. \n\nEmailSettings consists of: \n\n* replyEmailAddressOverride - The Reply To email used for the envelope. DocuSign will verify that a correct email format is used, but does not verify that the email is active. Maximum Length: 100 characters.\n* replyEmailNameOverride - The name associated with the Reply To email address. Maximum Length: 100 characters.\n* bccEmailAddresses - An array of up to five email addresses to which the envelope is sent to as a BCC email. Only users with canManageAccount setting set to true can use this option. \nDocuSign verifies that the email format is correct, but does not verify that the email is active. Using this overrides the BCC for Email Archive information setting for this envelope. Maximum Length: 100 characters.\n*Example*: if your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.",
        "properties": {
          "bccEmailAddresses": {
            "description": "An array containing the email address that should receive a copy of all email communications related to an envelope for archiving purposes. Maximum Length: 100 characters.\n\nWhile this property is an array, note that it takes only a single email address.\n\n**Note:** Only users with the `canManageAccount` setting set to **true** can use this option. \n\nDocuSign verifies that the email format is correct, but does not verify that the email address is active. You can use this for archiving purposes. However, using this property overrides the BCC for Email Archive information setting for this envelope. \n\n**Example:** if your account has BCC for Email Archive set up for the email address archive@mycompany.com and you send an envelope using the BCC Email Override to send a BCC email to salesarchive@mycompany.com, then a copy of the envelope is only sent to the salesarchive@mycompany.com email address.",
            "items": {
              "$ref": "#/$defs/bccEmailAddress"
            },
            "type": "array"
          },
          "replyEmailAddressOverride": {
            "description": "The Reply To email address to use for email replies, instead of the one that is configured at the account level. DocuSign verifies that the email address is in a correct format, but does not verify that it is active. Maximum Length: 100 characters.",
            "type": "string"
          },
          "replyEmailNameOverride": {
            "description": "The name to associate with the Reply To email address, instead of the name that is configured at the account level. Maximum Length: 100 characters.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "emailSettings",
        "x-ms-summary": "A complex element that allows  the sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope and to override the BCC email addresses to which an envelope is sent. \n\nWhen the emailSettings information is used for an envelope, it only applies to that envelope. \n\n**IMPORTANT:** The emailSettings information is not returned in the GET for envelope status. Use GET /email_settings to return information about the emailSettings. \n\nEmailSettings consists of: \n\n* replyEmailAddressOverride - The Reply To email used for the envelope. DocuSign will verify that a correct email format is used, but does not verify that the email is active. Maximum Length: 100 characters.\n* replyEmailNameOverride - The name associated with the Reply To email address. Maximum Length: 100 characters.\n* bccEmailAddresses - An array of up to five email addresses to which the envelope is sent to as a BCC email. Only users with canManageAccount setting set to true can use this option. \nDocuSign verifies that the email format is correct, but does not verify that the email is active. Using this overrides the BCC for Email Archive information setting for this envelope. Maximum Length: 100 characters.\n*Example*: if your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address."
      },
      "bccEmailAddress": {
        "description": "Contains information about the BCC email address.",
        "properties": {
          "bccEmailAddressId": {
            "description": "Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email. \n \nExample: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.",
            "type": "string"
          },
          "email": {
            "description": "Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.\n\nMaximum of length: 100 characters. ",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "bccEmailAddress",
        "x-ms-summary": "Contains information about the BCC email address."
      },
      "envelopeCustomMetadata": {
        "description": "",
        "properties": {
          "envelopeCustomMetadataDetails": {
            "description": "",
            "items": {
              "$ref": "#/$defs/nameValue"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "envelopeCustomMetadata",
        "x-ms-summary": ""
      },
      "envelopeDocument": {
        "description": "This object contains details about the envelope document.",
        "properties": {
          "addedRecipientIds": {
            "description": "If recipients were added by converting form fields into tabs, their IDs appear here. This property is read-only.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "attachmentTabId": {
            "description": "If this document is an attachment to another document in the envelope, this is the ID of the attachment tab it is associated with on the other document.",
            "type": "string"
          },
          "authoritativeCopy": {
            "description": "When **true,** marks all of the documents in the envelope as authoritative copies.\n\n**Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**",
            "type": "string"
          },
          "authoritativeCopyMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "availableDocumentTypes": {
            "description": "",
            "items": {
              "$ref": "#/$defs/signatureType"
            },
            "type": "array"
          },
          "containsPdfFormFields": {
            "description": "When **true,** the document has editable form fields that are made available through a PDF format.",
            "type": "string"
          },
          "display": {
            "description": "This string sets the display and behavior properties of\nthe document during signing. Valid values:\n\n* `modal`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a modal window.\n  This is the recommended value for supplemental documents. \n\n* `inline`<br>\n  The document is shown in the normal signing window.\n  This value is not used with supplemental documents,\n  but is the default value for all other documents.\n",
            "type": "string"
          },
          "displayMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "docGenDocumentStatus": {
            "description": "",
            "type": "string"
          },
          "docGenErrors": {
            "description": "",
            "items": {
              "$ref": "#/$defs/docGenSyntaxError"
            },
            "type": "array"
          },
          "docGenFormFields": {
            "description": "",
            "items": {
              "$ref": "#/$defs/docGenFormField"
            },
            "type": "array"
          },
          "documentBase64": {
            "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
            "type": "string"
          },
          "documentFields": {
            "description": "An object containing information about the custom fields on the document.",
            "items": {
              "$ref": "#/$defs/nameValue"
            },
            "type": "array"
          },
          "documentId": {
            "description": "The ID of the document that the tab is placed on. This value must refer to the ID of an existing document.",
            "type": "string"
          },
          "documentIdGuid": {
            "description": "The GUID of the document.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "includeInDownload": {
            "description": "When **true,**\nthe document is included in the combined document download (`documentsCombinedUri`). \nThe default value is **true.**\n",
            "type": "string"
          },
          "includeInDownloadMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "isDocGenDocument": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "The document's file name. \n\nExample: `Q1-Report.docx`",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "order": {
            "description": "The order in which to sort the results.\n\nValid values are: \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. ",
            "type": "string"
          },
          "pages": {
            "description": "An array of page objects that contain information about the pages in the document.",
            "items": {
              "$ref": "#/$defs/page"
            },
            "type": "array"
          },
          "signerMustAcknowledge": {
            "description": "Sets how the signer interacts with the supplemental document.\nValid values: \n\n*\t`no_interaction`<br>\n  No recipient action is required. \n\n*\t`view`<br>\n  The recipient is required to view the document. \n\n*\t`accept`<br>\n  The recipient is required to accept the document by selecting accept during signing, but is not required to view the document. \n\n*\t`view_accept`<br>\n  The recipient is required to view and accept the document.  \n\n",
            "type": "string"
          },
          "signerMustAcknowledgeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sizeBytes": {
            "description": "",
            "type": "string"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "type": {
            "description": "The type of this tab. Values are:\n\n- Approve\n- CheckBox\n- Company\n- Date\n- DateSigned,\tDecline\n- Email,\tEmailAddress\n- EnvelopeId\n- FirstName\n- Formula\n- FullName,\tInitialHere\n- InitialHereOptional\n- LastName\n- List\n- Note\n- Number\n- Radio\n- SignerAttachment\n- SignHere\n- SignHereOptional\n- Ssn\n- Text\n- Title\n- Zip5\n- Zip5Dash4\n",
            "type": "string"
          },
          "uri": {
            "description": "The URI for retrieving the document.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "envelopeDocument",
        "x-ms-summary": "This object contains details about the envelope document."
      },
      "signatureType": {
        "description": "This object contains information about the type of signature.",
        "properties": {
          "isDefault": {
            "description": "When **true,** the signature type is the default type.",
            "type": "string"
          },
          "type": {
            "description": "The type of signature. Valid values are:\n\n- `electronic`: Indicates an **electronic** signature that is used by common law countries such as the United States, United Kingdom, and Australia. This is the default signature type that DocuSign uses.\n- `universal`: Indicates a **digital** signature that is accepted by both common law and civil law countries. To use digital signatures, you must use the [DocuSign Signature Appliance](/docs/dsa-api/).\n\nFor more information, see [Standards Based Signatures](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/).",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "signatureType",
        "x-ms-summary": "This object contains information about the type of signature."
      },
      "docGenSyntaxError": {
        "description": "",
        "properties": {
          "errorCode": {
            "description": "A code associated with the error condition.",
            "type": "string"
          },
          "message": {
            "description": "",
            "type": "string"
          },
          "tagIdentifier": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "docGenSyntaxError",
        "x-ms-summary": ""
      },
      "page": {
        "description": "Description of a page of a document.",
        "properties": {
          "dpi": {
            "description": "The number of dots per inch used for the page image.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "height": {
            "description": "The height of the page in pixels.",
            "type": "string"
          },
          "imageBytes": {
            "description": "The number of image bytes.",
            "type": "string"
          },
          "mimeType": {
            "description": "The MIME type.",
            "type": "string"
          },
          "pageId": {
            "description": "The ID of the page.",
            "type": "string"
          },
          "sequence": {
            "description": "The sequence of the page in the document, or page number.",
            "type": "string"
          },
          "width": {
            "description": "The width of the page in pixels.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "page",
        "x-ms-summary": "Description of a page of a document."
      },
      "envelopeMetadata": {
        "description": "",
        "properties": {
          "allowAdvancedCorrect": {
            "description": "Specifies if the Advanced Correct feature is enabled for the envelope. This feature enables you to correct the details of in process envelopes that you sent or are shared with you. It offers more functionality than the Correct feature.",
            "type": "string"
          },
          "allowCorrect": {
            "description": "Specifies if the Correct feature is enabled for the envelope. This feature enables you to correct the details of in process envelopes that you sent or are shared with you, including the recipient, envelope, and document information.",
            "type": "string"
          },
          "enableSignWithNotary": {
            "description": "Specifies if DocuSign eNotary service is enabled for the envelope.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "envelopeMetadata",
        "x-ms-summary": ""
      },
      "folder": {
        "description": "This object contains details about a folder.",
        "properties": {
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "filter": {
            "$ref": "#/$defs/filter"
          },
          "folderId": {
            "description": "The ID of the folder.",
            "type": "string"
          },
          "folderItems": {
            "description": "A list of envelopes and templates that the folder contains.",
            "items": {
              "$ref": "#/$defs/folderItem_v2"
            },
            "type": "array"
          },
          "folders": {
            "description": "A collection of folder objects returned in a response.",
            "items": {
              "$ref": "#/$defs/folder"
            },
            "type": "array"
          },
          "hasAccess": {
            "description": "When **true,** the current user has access to the folder.",
            "type": "string"
          },
          "hasSubFolders": {
            "description": "When **true,** the folder has subfolders.",
            "type": "string"
          },
          "itemCount": {
            "description": "The number of items in the folder.",
            "type": "string"
          },
          "name": {
            "description": "The name of the folder.",
            "type": "string"
          },
          "owner": {
            "$ref": "#/$defs/userInfo"
          },
          "parentFolderId": {
            "description": "The ID of the parent folder, or the special value `root` for the root folder.",
            "type": "string"
          },
          "parentFolderUri": {
            "description": "The URI of the parent folder.",
            "type": "string"
          },
          "subFolderCount": {
            "description": "The number of subfolders.",
            "type": "string"
          },
          "type": {
            "description": "The type of folder. Possible values include:\n\n- `draft`\n- `inbox`\n- `normal` (a system-generated folder)\n- `recyclebin`\n- `sentitems`\n- `custom` (a custom folder created by a user)",
            "type": "string"
          },
          "uri": {
            "description": "The URI for the folder.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "folder",
        "x-ms-summary": "This object contains details about a folder."
      },
      "filter": {
        "description": "Use this object to create a filtered view of the items in a folder.",
        "properties": {
          "actionRequired": {
            "description": "When **true,** the current user needs to take action on the item.",
            "type": "string"
          },
          "expires": {
            "description": "The number of days a sent envelope remains active before it expires.",
            "type": "string"
          },
          "folderIds": {
            "description": "Filters for any combination of folder IDs and folder types. The possible folder types are:\n\n- `awaiting_my_signature`\n- `completed`\n- `draft`\n- `drafts`\n- `expiring_soon`\n- `inbox`\n- `out_for_signature`\n- `recyclebin`\n- `sentitems`\n- `waiting_for_others`",
            "type": "string"
          },
          "fromDateTime": {
            "description": "The UTC DateTime of the beginning of a date range. If no value is provided, the default search is the previous 30 days.",
            "type": "string"
          },
          "isTemplate": {
            "description": "When **true,** the item is a template.",
            "type": "string"
          },
          "order": {
            "description": "The order in which to sort the results.\n\nValid values are: \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. ",
            "type": "string"
          },
          "orderBy": {
            "description": "The field used to sort the results.\n\nExample: `Created`",
            "type": "string"
          },
          "searchTarget": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "searchText": {
            "description": "A free text search field for searching across the items in a folder. The search looks for the text that you enter in the recipient names and emails, envelope custom fields, sender name, and subject.",
            "type": "string"
          },
          "status": {
            "description": "The status of the envelope. By default, all statuses are returned.\n\nFor details, see [Envelope Status Code Descriptions](/docs/esign-rest-api/esign101/rules-and-limits/responses/).",
            "type": "string"
          },
          "toDateTime": {
            "description": "The UTC DateTime of the end of a date range. If no value is provided, the default search is to the current date.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "filter",
        "x-ms-summary": "Use this object to create a filtered view of the items in a folder."
      },
      "folderItem_v2": {
        "description": "Information about folder item results.",
        "properties": {
          "completedDateTime": {
            "description": "If the item is an envelope, this is the UTC DateTime when the envelope was completed.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "The UTC DateTime when the item was created.",
            "type": "string"
          },
          "envelopeId": {
            "description": "If the item is an envelope, this is the ID of the envelope.",
            "type": "string"
          },
          "envelopeUri": {
            "description": "If the item is an envelope, this is the URI for retrieving it.",
            "type": "string"
          },
          "expireDateTime": {
            "description": "The date and time the envelope is set to expire.",
            "type": "string"
          },
          "folderId": {
            "description": "The ID of the folder.",
            "type": "string"
          },
          "folderUri": {
            "description": "If the item is a subfolder, this is the URI for retrieving it.",
            "type": "string"
          },
          "is21CFRPart11": {
            "description": "When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The date and time that the item was last modified.",
            "type": "string"
          },
          "ownerName": {
            "description": "The name of the user who owns the folder.",
            "type": "string"
          },
          "recipients": {
            "$ref": "#/$defs/EnvelopeRecipients"
          },
          "recipientsUri": {
            "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
            "type": "string"
          },
          "senderCompany": {
            "description": "The name of the sender's company.",
            "type": "string"
          },
          "senderEmail": {
            "description": "The sender's email address.",
            "type": "string"
          },
          "senderName": {
            "description": "The sender's name.",
            "type": "string"
          },
          "senderUserId": {
            "description": "The sender's id.",
            "type": "string"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "subject": {
            "description": "The subject of the envelope.",
            "type": "string"
          },
          "templateId": {
            "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
            "type": "string"
          },
          "templateUri": {
            "description": "The URI for retrieving the template.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "folderItem_v2",
        "x-ms-summary": "Information about folder item results."
      },
      "EnvelopeRecipients": {
        "description": "Envelope recipients",
        "properties": {
          "agents": {
            "description": "A list of agent recipients assigned to the documents.",
            "items": {
              "$ref": "#/$defs/agent"
            },
            "type": "array"
          },
          "carbonCopies": {
            "description": "A list of carbon copy recipients assigned to the documents.",
            "items": {
              "$ref": "#/$defs/carbonCopy"
            },
            "type": "array"
          },
          "certifiedDeliveries": {
            "description": "A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.",
            "items": {
              "$ref": "#/$defs/certifiedDelivery"
            },
            "type": "array"
          },
          "currentRoutingOrder": {
            "description": "The routing order of the current recipient. If this value equals a particular signer's routing order, it indicates that the envelope has been sent to that recipient, but he or she has not completed the required actions.",
            "type": "string"
          },
          "editors": {
            "description": "A list of users who can edit the envelope.",
            "items": {
              "$ref": "#/$defs/editor"
            },
            "type": "array"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "inPersonSigners": {
            "description": "Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.",
            "items": {
              "$ref": "#/$defs/inPersonSigner"
            },
            "type": "array"
          },
          "intermediaries": {
            "description": "Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).",
            "items": {
              "$ref": "#/$defs/intermediary"
            },
            "type": "array"
          },
          "notaries": {
            "description": "A list of notary recipients on the envelope.",
            "items": {
              "$ref": "#/$defs/notaryRecipient"
            },
            "type": "array"
          },
          "participants": {
            "description": "",
            "items": {
              "$ref": "#/$defs/participant"
            },
            "type": "array"
          },
          "recipientCount": {
            "description": "The number of recipients in the envelope.",
            "type": "string"
          },
          "seals": {
            "description": "A list of electronic seals to apply to documents.",
            "items": {
              "$ref": "#/$defs/sealSign"
            },
            "type": "array"
          },
          "signers": {
            "description": "A list of signers on the envelope.",
            "items": {
              "$ref": "#/$defs/signer"
            },
            "type": "array"
          },
          "witnesses": {
            "description": "A list of signers who act as witnesses on the envelope.",
            "items": {
              "$ref": "#/$defs/witness"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-category": "Envelopes",
        "x-ds-definition-name": "recipients",
        "x-ds-order": "20",
        "x-ms-summary": "Envelope recipients"
      },
      "agent": {
        "description": "Contains information about an agent recipient. An agent is a recipient who can add name and email information for recipients that appear after the agent in routing order.",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
            "type": "string"
          },
          "additionalNotifications": {
            "description": "An array of additional notification objects.",
            "items": {
              "$ref": "#/$defs/recipientAdditionalNotification"
            },
            "type": "array"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
            "type": "string"
          },
          "completedCount": {
            "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
            "type": "string"
          },
          "consentDetailsList": {
            "description": "",
            "items": {
              "$ref": "#/$defs/consentDetails"
            },
            "type": "array"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "email": {
            "description": "The email ID of the agent. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "emailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "firstName": {
            "description": "The recipient's first name. Maximum Length: 50 characters.",
            "type": "string"
          },
          "firstNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "fullNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "lastNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "phoneNumber": {
            "$ref": "#/$defs/recipientPhoneNumber"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          },
          "signingGroupIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
            "type": "string"
          },
          "statusCode": {
            "description": "The code associated with the recipient's status. This property is read-only.",
            "type": "string"
          },
          "suppressEmails": {
            "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. This property is read-only.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "agent",
        "x-ms-summary": "Contains information about an agent recipient. An agent is a recipient who can add name and email information for recipients that appear after the agent in routing order."
      },
      "recipientAdditionalNotification": {
        "description": "Describes an additional notification method.",
        "properties": {
          "phoneNumber": {
            "$ref": "#/$defs/recipientPhoneNumber"
          },
          "secondaryDeliveryMethod": {
            "description": "The secondary delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `offline`\n",
            "type": "string"
          },
          "secondaryDeliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "secondaryDeliveryStatus": {
            "description": "The status of the delivery. This property is read-only.\n\nOne of:\n\n- `autoresponded`\n- `optedout`\n- `limitreached`\n",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientAdditionalNotification",
        "x-ms-summary": "Describes an additional notification method."
      },
      "recipientPhoneNumber": {
        "description": "Describes the recipient phone number.",
        "properties": {
          "countryCode": {
            "description": "The numeric country calling code for `number`. For example, the country calling code for the US and Canada is `1`, for the UK: `44`,\n\nDo not include the `+` symbol.",
            "type": "string"
          },
          "countryCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "number": {
            "description": "The telephone number. Use only the digits `0`-`9`. Remove any non-numeric characters.\n\nDo not include the `countryCode`. For US, Canada, and other\n[North American Numbering Plan](https://en.wikipedia.org/wiki/North_American_Numbering_Plan) countries, do not include a leading `1` or `0`.",
            "type": "string"
          },
          "numberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientPhoneNumber",
        "x-ms-summary": "Describes the recipient phone number."
      },
      "consentDetails": {
        "description": "",
        "properties": {
          "consentKey": {
            "description": "",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signerConsentStatus": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "consentDetails",
        "x-ms-summary": ""
      },
      "documentVisibility": {
        "description": "This object configures a recipient's read/write access to a document.",
        "properties": {
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "rights": {
            "description": "Indicates whether the document is editable:\n\n- `editable`\n- `read_only`",
            "type": "string"
          },
          "visible": {
            "description": "When **true,** the document is visible to the recipient.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "documentVisibility",
        "x-ms-summary": "This object configures a recipient's read/write access to a document."
      },
      "recipientEmailNotification": {
        "description": "Sets custom email subject and email body for individual\nrecipients. **Note:** You must explicitly set `supportedLanguage`\nif you use this feature.\n",
        "properties": {
          "emailBody": {
            "description": "The body of the email message.",
            "type": "string"
          },
          "emailBodyMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailSubject": {
            "description": "The subject line for the email notification.",
            "type": "string"
          },
          "emailSubjectMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "supportedLanguage": {
            "description": "The language to use for the standard email format and signing view for a recipient.\n\nFor example, this setting determines the language of the recipient's email notification message. It also determines the language used for buttons and tabs in both the email notification and the signing experience.\n\n**Note:** This setting affects only DocuSign standard text. Any custom text that you enter for the `emailBody` and `emailSubject` of the notification is not translated, and appears exactly as you enter it.\n\nTo retrieve the possible values, use the [Accounts::listSupportedLanguages][ListLang] method.\n\n[ListLang]: /docs/esign-rest-api/reference/accounts/accounts/listsupportedlanguages/\n",
            "type": "string"
          },
          "supportedLanguageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientEmailNotification",
        "x-ms-summary": "Sets custom email subject and email body for individual\nrecipients. **Note:** You must explicitly set `supportedLanguage`\nif you use this feature.\n"
      },
      "idCheckInformationInput": {
        "description": "A complex element that contains input information related to a recipient ID check.",
        "properties": {
          "addressInformationInput": {
            "$ref": "#/$defs/addressInformationInput"
          },
          "dobInformationInput": {
            "$ref": "#/$defs/dobInformationInput"
          },
          "ssn4InformationInput": {
            "$ref": "#/$defs/ssn4InformationInput"
          },
          "ssn9InformationInput": {
            "$ref": "#/$defs/ssn9InformationInput"
          }
        },
        "type": "object",
        "x-ds-definition-name": "idCheckInformationInput",
        "x-ms-summary": "A complex element that contains input information related to a recipient ID check."
      },
      "addressInformationInput": {
        "description": "Contains address input information.",
        "properties": {
          "addressInformation": {
            "$ref": "#/$defs/addressInformation"
          },
          "displayLevelCode": {
            "description": "Specifies the display level for the recipient. Valid values are:\n* `ReadOnly`\n* `Editable`\n* `DoNotDisplay`",
            "type": "string"
          },
          "receiveInResponse": {
            "description": "A Boolean value that specifies whether the information must be returned in the response.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "addressInformationInput",
        "x-ms-summary": "Contains address input information."
      },
      "addressInformation": {
        "description": "Contains address information.",
        "properties": {
          "address1": {
            "description": "The first line of the user's address.\nMaximum length: 100 characters.",
            "type": "string"
          },
          "address2": {
            "description": "The second line of the user's address.\nMaximum length: 100 characters.",
            "type": "string"
          },
          "city": {
            "description": "The user's city. Maximum length: 40 characters.",
            "type": "string"
          },
          "country": {
            "description": "The user's country. Maximum length: 50 characters.",
            "type": "string"
          },
          "fax": {
            "description": "A fax number associated with the address, if one is available.",
            "type": "string"
          },
          "phone": {
            "description": "A phone number associated with the address.",
            "type": "string"
          },
          "postalCode": {
            "description": "The user's postal code. Maximum length: 20 characters.",
            "type": "string"
          },
          "stateOrProvince": {
            "description": "The user's state or province. Maximum length: 40 characters.",
            "type": "string"
          },
          "zipPlus4": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "addressInformation",
        "x-ms-summary": "Contains address information."
      },
      "dobInformationInput": {
        "description": "Complex type containing:\n\n* dateOfBirth\n* displayLevelCode\n* receiveInResponse",
        "properties": {
          "dateOfBirth": {
            "description": "Specifies the recipient's date, month, and year of birth.",
            "type": "string"
          },
          "displayLevelCode": {
            "description": "Specifies the display level for the recipient. Valid values are:\n* `ReadOnly`\n* `Editable`\n* `DoNotDisplay`",
            "type": "string"
          },
          "receiveInResponse": {
            "description": "A Boolean value that specifies whether the information must be returned in the response.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "dobInformationInput",
        "x-ms-summary": "Complex type containing:\n\n* dateOfBirth\n* displayLevelCode\n* receiveInResponse"
      },
      "ssn4InformationInput": {
        "description": "",
        "properties": {
          "displayLevelCode": {
            "description": "Specifies the display level for the recipient. Valid values are:\n* `ReadOnly`\n* `Editable`\n* `DoNotDisplay`",
            "type": "string"
          },
          "receiveInResponse": {
            "description": "A Boolean value that specifies whether the information must be returned in the response.",
            "type": "string"
          },
          "ssn4": {
            "description": "The last four digits of the recipient's Social Security Number (SSN).",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "ssn4InformationInput",
        "x-ms-summary": ""
      },
      "ssn9InformationInput": {
        "description": "",
        "properties": {
          "displayLevelCode": {
            "description": "Specifies the display level for the recipient. Valid values are:\n* `ReadOnly`\n* `Editable`\n* `DoNotDisplay`",
            "type": "string"
          },
          "ssn9": {
            "description": "The recipient's full Social Security Number (SSN).",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "ssn9InformationInput",
        "x-ms-summary": ""
      },
      "recipientIdentityVerification": {
        "description": "Specifies ID Verification applied on an envelope by workflow ID.\nSee the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)\nmethod in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource\nfor more information on how to retrieve workflow IDs available for an account.\nThis can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods.",
        "properties": {
          "inputOptions": {
            "description": "",
            "items": {
              "$ref": "#/$defs/recipientIdentityInputOption"
            },
            "type": "array"
          },
          "workflowId": {
            "description": "ID of the Identity Verification worklow used to verify recipients' identity.\n\nThis ID must match one of the [workflowId](/docs/esign-rest-api/reference/accounts/identityverifications/list/) available to your account.",
            "type": "string"
          },
          "workflowIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "workflowLabel": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientIdentityVerification",
        "x-ms-summary": "Specifies ID Verification applied on an envelope by workflow ID.\nSee the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)\nmethod in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource\nfor more information on how to retrieve workflow IDs available for an account.\nThis can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods."
      },
      "recipientIdentityInputOption": {
        "description": "",
        "properties": {
          "name": {
            "description": "",
            "type": "string"
          },
          "phoneNumberList": {
            "description": "",
            "items": {
              "$ref": "#/$defs/recipientIdentityPhoneNumber"
            },
            "type": "array"
          },
          "valueType": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientIdentityInputOption",
        "x-ms-summary": ""
      },
      "recipientIdentityPhoneNumber": {
        "description": "",
        "properties": {
          "countryCode": {
            "description": "The numeric country calling code for the phone number. For example, the country calling code for the US and Canada is 1. For the UK, the country calling code is 44.\n\nDo not include the + symbol.",
            "type": "string"
          },
          "countryCodeLock": {
            "description": "",
            "type": "string"
          },
          "countryCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "extension": {
            "description": "The telephone extension, if any.",
            "type": "string"
          },
          "extensionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "number": {
            "description": "The telephone number. Use only the digits `0`-`9`. Remove any non-numeric characters.\n\nDo not include the `countryCode`. For US, Canada, and other\n[North American Numbering Plan](https://en.wikipedia.org/wiki/North_American_Numbering_Plan) countries, do not include a leading `1` or `0`.",
            "type": "string"
          },
          "numberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientIdentityPhoneNumber",
        "x-ms-summary": ""
      },
      "recipientPhoneAuthentication": {
        "description": "A complex type that contains the elements:\n\n* `recipMayProvideNumber`: A Boolean value that specifies whether the recipient can use the phone number of their choice.\n* `senderProvidedNumbers`: A list of phone numbers that the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.",
        "properties": {
          "recipMayProvideNumber": {
            "description": "Boolean. When **true,** the recipient can supply a phone number their choice.",
            "type": "string"
          },
          "recipMayProvideNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recordVoicePrint": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "recordVoicePrintMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderProvidedNumbers": {
            "description": "An array containing a list of phone numbers that the recipient can use for SMS text authentication. ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "senderProvidedNumbersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validateRecipProvidedNumber": {
            "description": " Reserved for DocuSign.",
            "type": "string"
          },
          "validateRecipProvidedNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientPhoneAuthentication",
        "x-ms-summary": "A complex type that contains the elements:\n\n* `recipMayProvideNumber`: A Boolean value that specifies whether the recipient can use the phone number of their choice.\n* `senderProvidedNumbers`: A list of phone numbers that the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign."
      },
      "recipientAttachment": {
        "description": "",
        "properties": {
          "attachmentId": {
            "description": "The unique identifier for the attachment.",
            "type": "string"
          },
          "attachmentType": {
            "description": "Specifies the type of the attachment for the recipient. Possible values are:\n\n- `.htm`\n- `.xml`",
            "type": "string"
          },
          "data": {
            "description": "A Base64-encoded representation of the attachment that is used to upload and download the file. File attachments may be up to 50 MB in size.",
            "type": "string"
          },
          "label": {
            "description": "An optional label for the attachment.",
            "type": "string"
          },
          "name": {
            "description": "The name of the attachment.",
            "type": "string"
          },
          "remoteUrl": {
            "description": "The URL of a previously staged chunked upload. Using a chunked upload enables you to stage a large, chunkable temp file. You then use the `remoteUrl` property to reference the chunked upload as the content in attachment and document-related requests. The `remoteUrl` property cannot be used for downloads.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientAttachment",
        "x-ms-summary": ""
      },
      "authenticationStatus": {
        "description": "A complex element that contains information about a user's authentication status.",
        "properties": {
          "accessCodeResult": {
            "$ref": "#/$defs/eventResult"
          },
          "ageVerifyResult": {
            "$ref": "#/$defs/eventResult"
          },
          "anySocialIDResult": {
            "$ref": "#/$defs/eventResult"
          },
          "facebookResult": {
            "$ref": "#/$defs/eventResult"
          },
          "googleResult": {
            "$ref": "#/$defs/eventResult"
          },
          "idLookupResult": {
            "$ref": "#/$defs/eventResult"
          },
          "idQuestionsResult": {
            "$ref": "#/$defs/eventResult"
          },
          "identityVerificationResult": {
            "$ref": "#/$defs/eventResult"
          },
          "linkedinResult": {
            "$ref": "#/$defs/eventResult"
          },
          "liveIDResult": {
            "$ref": "#/$defs/eventResult"
          },
          "ofacResult": {
            "$ref": "#/$defs/eventResult"
          },
          "openIDResult": {
            "$ref": "#/$defs/eventResult"
          },
          "phoneAuthResult": {
            "$ref": "#/$defs/eventResult"
          },
          "sTANPinResult": {
            "$ref": "#/$defs/eventResult"
          },
          "salesforceResult": {
            "$ref": "#/$defs/eventResult"
          },
          "signatureProviderResult": {
            "$ref": "#/$defs/eventResult"
          },
          "smsAuthResult": {
            "$ref": "#/$defs/eventResult"
          },
          "twitterResult": {
            "$ref": "#/$defs/eventResult"
          },
          "yahooResult": {
            "$ref": "#/$defs/eventResult"
          }
        },
        "type": "object",
        "x-ds-definition-name": "authenticationStatus",
        "x-ms-summary": "A complex element that contains information about a user's authentication status."
      },
      "eventResult": {
        "description": "Information about the result of an event.",
        "properties": {
          "eventTimestamp": {
            "description": "Date/time of the event.",
            "type": "string"
          },
          "failureDescription": {
            "description": "Reason for failure, if the event failed.",
            "type": "string"
          },
          "status": {
            "description": "Event status.",
            "type": "string"
          },
          "vendorFailureStatusCode": {
            "description": "Failure status code, if the event failed.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "eventResult",
        "x-ms-summary": "Information about the result of an event."
      },
      "featureAvailableMetadata": {
        "description": "",
        "properties": {
          "availabilty": {
            "description": "",
            "type": "string"
          },
          "featureName": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "featureAvailableMetadata",
        "x-ms-summary": ""
      },
      "userInfo": {
        "description": "",
        "properties": {
          "accountId": {
            "description": "The account ID associated with the envelope.",
            "type": "string"
          },
          "accountName": {
            "description": "The name on the account.",
            "type": "string"
          },
          "activationAccessCode": {
            "description": "Access code provided to the user to activate the account.",
            "type": "string"
          },
          "email": {
            "description": "The user's email address.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "ipAddress": {
            "description": "",
            "type": "string"
          },
          "loginStatus": {
            "description": "When **true,** indicates that the user is logged in. This is a read-only property.",
            "type": "string"
          },
          "membershipId": {
            "description": "The user's membership ID.",
            "type": "string"
          },
          "sendActivationEmail": {
            "description": "This field is no longer supported for most accounts. To create an eSignature user without sending an activation email, use the Admin API by following [these steps](/docs/admin-api/how-to/create-active-user/).",
            "type": "string"
          },
          "uri": {
            "description": "A URI containing the user ID.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.",
            "type": "string"
          },
          "userName": {
            "description": "The name of the user.",
            "type": "string"
          },
          "userStatus": {
            "description": "Status of the user's account. One of:\n\n- `ActivationRequired`\n- `ActivationSent`\n- `Active`\n- `Closed`\n- `Disabled`\n",
            "type": "string"
          },
          "userType": {
            "description": "The type of user, for example `CompanyUser`.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "userInfo",
        "x-ms-summary": ""
      },
      "recipientSMSAuthentication": {
        "description": "Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication.",
        "properties": {
          "senderProvidedNumbers": {
            "description": "An array containing a list of phone numbers that the recipient can use for SMS text authentication. ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "senderProvidedNumbersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientSMSAuthentication",
        "x-ms-summary": "Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication."
      },
      "socialAuthentication": {
        "description": "",
        "properties": {
          "authentication": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "socialAuthentication",
        "x-ms-summary": ""
      },
      "carbonCopy": {
        "description": "Contains information about a carbon copy recipient. Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents. ",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
            "type": "string"
          },
          "additionalNotifications": {
            "description": "An array of additional notification objects.",
            "items": {
              "$ref": "#/$defs/recipientAdditionalNotification"
            },
            "type": "array"
          },
          "agentCanEditEmail": {
            "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.",
            "type": "string"
          },
          "agentCanEditName": {
            "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.",
            "type": "string"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "clientUserId": {
            "description": "Not applicable for Carbon Copy recipients.",
            "type": "string"
          },
          "completedCount": {
            "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
            "type": "string"
          },
          "consentDetailsList": {
            "description": "",
            "items": {
              "$ref": "#/$defs/consentDetails"
            },
            "type": "array"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "email": {
            "description": "The recipient's email address. Notification of the document to sign is sent to this email address. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "emailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "firstName": {
            "description": "The recipient's first name. Maximum Length: 50 characters.",
            "type": "string"
          },
          "firstNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "fullNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "lastNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "linkedAccountConfigurationId": {
            "description": "",
            "type": "string"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "phoneNumber": {
            "$ref": "#/$defs/recipientPhoneNumber"
          },
          "proofFile": {
            "$ref": "#/$defs/recipientProofFile"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          },
          "signingGroupIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
            "type": "string"
          },
          "statusCode": {
            "description": "The code associated with the recipient's status. This property is read-only.",
            "type": "string"
          },
          "suppressEmails": {
            "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/$defs/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. This property is read-only.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "carbonCopy",
        "x-ms-summary": "Contains information about a carbon copy recipient. Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents. "
      },
      "recipientProofFile": {
        "description": "The proof file of the recipient. [ID Evidence](/docs/idevidence-api/) uses proof files to store the identification data that recipients submit when verifying their ID with [ID Verification](/docs/esign-rest-api/esign101/concepts/documents/)",
        "properties": {
          "hasIdentityAttempts": {
            "description": "",
            "type": "string"
          },
          "isInProofFile": {
            "description": "Indicates whether a proof file is available for this recipient.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientProofFile",
        "x-ms-summary": "The proof file of the recipient. [ID Evidence](/docs/idevidence-api/) uses proof files to store the identification data that recipients submit when verifying their ID with [ID Verification](/docs/esign-rest-api/esign101/concepts/documents/)"
      },
      "certifiedDelivery": {
        "description": "Contains information about a certified delivery recipient. Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents.",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
            "type": "string"
          },
          "additionalNotifications": {
            "description": "An array of additional notification objects.",
            "items": {
              "$ref": "#/$defs/recipientAdditionalNotification"
            },
            "type": "array"
          },
          "agentCanEditEmail": {
            "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.",
            "type": "string"
          },
          "agentCanEditName": {
            "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.",
            "type": "string"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
            "type": "string"
          },
          "completedCount": {
            "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
            "type": "string"
          },
          "consentDetailsList": {
            "description": "",
            "items": {
              "$ref": "#/$defs/consentDetails"
            },
            "type": "array"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "email": {
            "description": "The recipient's email address.",
            "type": "string"
          },
          "emailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "firstName": {
            "description": "The recipient's first name. Maximum Length: 50 characters.",
            "type": "string"
          },
          "firstNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "fullNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "lastNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "phoneNumber": {
            "$ref": "#/$defs/recipientPhoneNumber"
          },
          "proofFile": {
            "$ref": "#/$defs/recipientProofFile"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          },
          "signingGroupIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "The status of the recipient. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
            "type": "string"
          },
          "statusCode": {
            "description": "The code associated with the recipient's status. This property is read-only.",
            "type": "string"
          },
          "suppressEmails": {
            "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. This property is read-only.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "certifiedDelivery",
        "x-ms-summary": "Contains information about a certified delivery recipient. Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents."
      },
      "editor": {
        "description": "A complex type defining the management and access rights of a recipient assigned as an editor on the envelope. Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and text tabs for the remaining recipients.",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
            "type": "string"
          },
          "additionalNotifications": {
            "description": "An array of additional notification objects.",
            "items": {
              "$ref": "#/$defs/recipientAdditionalNotification"
            },
            "type": "array"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
            "type": "string"
          },
          "completedCount": {
            "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
            "type": "string"
          },
          "consentDetailsList": {
            "description": "",
            "items": {
              "$ref": "#/$defs/consentDetails"
            },
            "type": "array"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "email": {
            "description": "The recipient's email address. Notification of the document to sign is sent to this email address. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "emailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "firstName": {
            "description": "The recipient's first name. \n\nMaximum Length: 50 characters.",
            "type": "string"
          },
          "firstNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "fullNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "lastNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "phoneNumber": {
            "$ref": "#/$defs/recipientPhoneNumber"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          },
          "signingGroupIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.\n",
            "type": "string"
          },
          "statusCode": {
            "description": "The code associated with the recipient's status. This property is read-only.",
            "type": "string"
          },
          "suppressEmails": {
            "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. This property is read-only.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "editor",
        "x-ms-summary": "A complex type defining the management and access rights of a recipient assigned as an editor on the envelope. Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and text tabs for the remaining recipients."
      },
      "inPersonSigner": {
        "description": "Contains information about an in-person recipient. This is a DocuSign user,\nacting as a Signing Host,\nwho is in the same physical location as the signer.\nTo learn about the fields used\nfor the eNotary feature,\nsee the [EnvelopeRecipients resource][resource].\n\n[resource]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#in-person-signer-recipient\n",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
            "type": "string"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When **true,** autonavigation is set for the recipient.\n",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "canSignOffline": {
            "description": "When **true,** specifies that the signer can perform the signing ceremony offline.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
            "type": "string"
          },
          "completedCount": {
            "description": "Indicates the number of times that the recipient has been through a signing completion. \n\nIf this number is greater than `0` for a signing group, only the user who previously completed may sign again.",
            "type": "string"
          },
          "creationReason": {
            "description": "The reason why the recipient was created (for example, `sender`). This property is read-only.",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "defaultRecipient": {
            "description": "When **true,**\nthis is the default recipient for the envelope.\nThis option is used when creating an envelope from a template.\n",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "email": {
            "description": "The signer's email address in an eNotary flow.\n\nUse only when `inPersonSigningType` is `notary`.\nFor regular in-person-signer flow, use `signerEmail` instead.\n",
            "type": "string"
          },
          "emailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "hostEmail": {
            "description": "The email address of the signing host.\nThis is the DocuSign user that is hosting the in-person signing session.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `email` instead.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          },
          "hostEmailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "hostName": {
            "description": "The name of the signing host.\nThis is the DocuSign user that is hosting the in-person signing session.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `name` instead.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          },
          "hostNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inPersonSigningType": {
            "description": "Specifies whether the envelope uses the eNotary feature.\nValid values:\n\n* `inPersonSigner`: The envelope uses the normal in-person signing flow.\n* `notary`: The envelope uses the eNotary in-person signing flow.\n",
            "type": "string"
          },
          "inPersonSigningTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The signer's full legal name in an eNotary flow.\n\nRequired when `inPersonSigningType` is `notary`.\nFor a regular in-person-signer flow, use `signerName` instead.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "notaryHost": {
            "$ref": "#/$defs/notaryHost"
          },
          "notaryId": {
            "description": "",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the in-person signer in the signing email.\nThis note is visible only to this recipient.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "offlineAttributes": {
            "$ref": "#/$defs/offlineAttributes"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientSignatureProviders": {
            "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
            "items": {
              "$ref": "#/$defs/recipientSignatureProvider"
            },
            "type": "array"
          },
          "recipientSuppliesTabs": {
            "description": "When **true,** specifies that the recipient creates the tabs.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireSignOnPaper": {
            "description": "When **true,** the signer must print, sign, and upload or fax the signed documents to DocuSign.",
            "type": "string"
          },
          "requireSignerCertificate": {
            "description": "By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\n\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.",
            "type": "string"
          },
          "requireUploadSignature": {
            "description": "When **true,** the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signInEachLocation": {
            "description": "When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).",
            "type": "string"
          },
          "signInEachLocationMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signatureInfo": {
            "$ref": "#/$defs/recipientSignatureInformation"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signerEmail": {
            "description": "The in-person signer's email address.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `email` instead.\n\nMaximum Length: 100 characters.\n\n",
            "type": "string"
          },
          "signerEmailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signerFirstName": {
            "description": "The signer's first name.",
            "type": "string"
          },
          "signerFirstNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signerLastName": {
            "description": "The signer's last name.",
            "type": "string"
          },
          "signerLastNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signerName": {
            "description": "Required. The full legal name of a signer for the envelope. \n\nMaximum Length: 100 characters.\n\n\n",
            "type": "string"
          },
          "signerNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupId": {
            "description": "Not applicable. You cannot use a signing group for an in-person signer.",
            "type": "string"
          },
          "signingGroupIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupName": {
            "description": "Not applicable.",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "Not applicable.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
            "type": "string"
          },
          "statusCode": {
            "description": "The code associated with the recipient's status. This property is read-only.",
            "type": "string"
          },
          "suppressEmails": {
            "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/$defs/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. This property is read-only.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "inPersonSigner",
        "x-ms-summary": "Contains information about an in-person recipient. This is a DocuSign user,\nacting as a Signing Host,\nwho is in the same physical location as the signer.\nTo learn about the fields used\nfor the eNotary feature,\nsee the [EnvelopeRecipients resource][resource].\n\n[resource]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#in-person-signer-recipient\n"
      },
      "notaryHost": {
        "description": "This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.\n\nIt describes information about the notary host.\nThe following information is required\nwhen using the eNotary in-person signing flow:\n\n* `name`: Specifies the notary's full legal name.\n* `email`: Specifies the notary's email address.\n* `recipientId`: A unique ID number for the notary signing host.\n",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
            "type": "string"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
            "type": "string"
          },
          "completedCount": {
            "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "email": {
            "description": "The notary's email address.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          },
          "emailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "hostRecipientId": {
            "description": "",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The notary's full legal name.\n\nMaximum Length: 100 characters.\n",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "note": {
            "description": "A note sent to the notary in the signing email.\nThis note is visible only to this notary.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          },
          "signingGroupIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
            "type": "string"
          },
          "statusCode": {
            "description": "The code associated with the recipient's status. This property is read-only. ",
            "type": "string"
          },
          "suppressEmails": {
            "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/$defs/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. This property is read-only.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "notaryHost",
        "x-ms-summary": "This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.\n\nIt describes information about the notary host.\nThe following information is required\nwhen using the eNotary in-person signing flow:\n\n* `name`: Specifies the notary's full legal name.\n* `email`: Specifies the notary's email address.\n* `recipientId`: A unique ID number for the notary signing host.\n"
      },
      "offlineAttributes": {
        "description": "Reserved for DocuSign.",
        "properties": {
          "accountEsignId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deviceModel": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deviceName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "gpsLatitude": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "gpsLongitude": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "offlineSigningHash": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "offlineAttributes",
        "x-ms-summary": "Reserved for DocuSign."
      },
      "recipientSignatureProvider": {
        "description": "An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/).\n",
        "properties": {
          "sealDocumentsWithTabsOnly": {
            "description": "By default, electronic seals apply on all documents in an envelope. If any of the documents has a `signHere` tab, then a visual representation of the electronic seal will show up in the final document. If not, the electronic seal will be visible in the metadata but not in the content of the document.\n\nTo apply electronic seals on specific documents only, you must enable the  `sealDocumentsWithTabsOnly` parameter. In this case, Electronic Seal applies only on documents that have `signHere` tabs set for the Electronic Seal recipient. Other documents won't be sealed. ",
            "type": "string"
          },
          "sealName": {
            "description": "Indicates the name of the electronic seal to apply on documents.\n",
            "type": "string"
          },
          "signatureProviderName": {
            "description": "The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. For details, see [the current provider list](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/). You can also retrieve the list by using the [AccountSignatureProviders: List](/docs/esign-rest-api/reference/accounts/accountsignatureproviders/list/) method.\n\nExample: `universalsignaturepen_default`\n\n",
            "type": "string"
          },
          "signatureProviderNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signatureProviderOptions": {
            "$ref": "#/$defs/recipientSignatureProviderOptions"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientSignatureProvider",
        "x-ms-summary": "An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/).\n"
      },
      "recipientSignatureProviderOptions": {
        "description": "Option settings for the signature provider. Different providers require or use different options. [The current provider list and the options they require.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
        "properties": {
          "cpfNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "cpfNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "oneTimePassword": {
            "description": "A pre-shared secret that the signer must enter to complete the signing process. Eg last six digits of the signer's government ID or Social Security number. Or a newly created pre-shared secret for the transaction. Note: some signature providers may require an exact (case-sensitive) match if alphabetic characters are included in the field.",
            "type": "string"
          },
          "oneTimePasswordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signerRole": {
            "description": "The role or capacity of the signing recipient. Examples: Manager, Approver, etc.",
            "type": "string"
          },
          "signerRoleMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sms": {
            "description": "The mobile phone number used to send the recipient an access code for the signing ceremony. Format: a string starting with +, then the country code followed by the full mobile phone number without any spaces or special characters. Omit leading zeroes before a city code. Examples: +14155551234, +97235551234, +33505551234.",
            "type": "string"
          },
          "smsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientSignatureProviderOptions",
        "x-ms-summary": "Option settings for the signature provider. Different providers require or use different options. [The current provider list and the options they require.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)"
      },
      "recipientSignatureInformation": {
        "description": "Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\n\nUsed only with recipient types In Person Signers and Signers.",
        "properties": {
          "fontStyle": {
            "description": "The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.\n\n- `\"1_DocuSign\"`\n- `\"2_DocuSign\"`\n- `\"3_DocuSign\"`\n- `\"4_DocuSign\"`\n- `\"5_DocuSign\"`\n- `\"6_DocuSign\"`\n- `\"7_DocuSign\"`\n- `\"8_DocuSign\"`\n- `\"Mistral\"`\n- `\"Rage Italic\"`\n",
            "type": "string"
          },
          "signatureInitials": {
            "description": "Specifies the user's signature in initials format.",
            "type": "string"
          },
          "signatureName": {
            "description": "Specifies the user's signature name.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientSignatureInformation",
        "x-ms-summary": "Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\n\nUsed only with recipient types In Person Signers and Signers."
      },
      "intermediary": {
        "description": "Contains information about an intermediary recipient. An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added.",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
            "type": "string"
          },
          "additionalNotifications": {
            "description": "An array of additional notification objects.",
            "items": {
              "$ref": "#/$defs/recipientAdditionalNotification"
            },
            "type": "array"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
            "type": "string"
          },
          "completedCount": {
            "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
            "type": "string"
          },
          "consentDetailsList": {
            "description": "",
            "items": {
              "$ref": "#/$defs/consentDetails"
            },
            "type": "array"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "email": {
            "description": "The recipient's email address. Notification of the document to sign is sent to this email address. \n\nMaximum length: 100 characters. ",
            "type": "string"
          },
          "emailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "firstName": {
            "description": "The recipient's first name. Maximum Length: 50 characters.",
            "type": "string"
          },
          "firstNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "fullNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "lastNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "phoneNumber": {
            "$ref": "#/$defs/recipientPhoneNumber"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          },
          "signingGroupIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipientÃ¢ÂÂs email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.\n",
            "type": "string"
          },
          "statusCode": {
            "description": "The code associated with the recipient's status. This property is read-only.",
            "type": "string"
          },
          "suppressEmails": {
            "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. This property is read-only.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "intermediary",
        "x-ms-summary": "Contains information about an intermediary recipient. An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added."
      },
      "notaryRecipient": {
        "description": "",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
            "type": "string"
          },
          "additionalNotifications": {
            "description": "An array of additional notification objects.",
            "items": {
              "$ref": "#/$defs/recipientAdditionalNotification"
            },
            "type": "array"
          },
          "agentCanEditEmail": {
            "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.",
            "type": "string"
          },
          "agentCanEditName": {
            "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.",
            "type": "string"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When **true,** autonavigation is set for the recipient.\n",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkRecipientsUri": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "canSignOffline": {
            "description": "When **true,** specifies that the signer can perform the signing ceremony offline.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
            "type": "string"
          },
          "completedCount": {
            "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
            "type": "string"
          },
          "consentDetailsList": {
            "description": "",
            "items": {
              "$ref": "#/$defs/consentDetails"
            },
            "type": "array"
          },
          "creationReason": {
            "description": "The reason why the item was created.",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "defaultRecipient": {
            "description": "When **true,** this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.",
            "type": "string"
          },
          "delegatedBy": {
            "$ref": "#/$defs/delegationInfo"
          },
          "delegatedTo": {
            "description": "",
            "items": {
              "$ref": "#/$defs/delegationInfo"
            },
            "type": "array"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "email": {
            "description": "The recipient's email address. Notification of the document to sign is sent to this email address.\n\nMaximum length: 100 characters.",
            "type": "string"
          },
          "emailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "firstNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "fullNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "isBulkRecipient": {
            "description": "Reserved for DocuSign.\n",
            "type": "string"
          },
          "isBulkRecipientMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "lastName": {
            "description": "The user's last name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "lastNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "liveOakStartURL": {
            "description": "URL that directs the recipient to LiveOak to complete the remote online notarization process. This property is read-only.",
            "type": "string"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The full legal name of the recipient. Maximum length: 100 characters.\n\nNote: You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "notaryId": {
            "description": "Not applicable to Notary tab.",
            "type": "string"
          },
          "notarySignerEmailSent": {
            "description": "",
            "type": "string"
          },
          "notarySigners": {
            "description": "An array of strings that correspond to the `recipientId` of each signer in the notary group. This property is read-only.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notarySourceType": {
            "description": "",
            "type": "string"
          },
          "notaryType": {
            "description": "The notary type. This property is read-only. Valid values:\n\n- `inperson`\n- `remote`",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "offlineAttributes": {
            "$ref": "#/$defs/offlineAttributes"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "phoneNumber": {
            "$ref": "#/$defs/recipientPhoneNumber"
          },
          "proofFile": {
            "$ref": "#/$defs/recipientProofFile"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientSignatureProviders": {
            "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
            "items": {
              "$ref": "#/$defs/recipientSignatureProvider"
            },
            "type": "array"
          },
          "recipientSuppliesTabs": {
            "description": "When **true,** specifies that the recipient creates the tabs.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireSignOnPaper": {
            "description": "When **true,** the signer must print, sign, and upload or fax the signed documents to DocuSign.",
            "type": "string"
          },
          "requireSignerCertificate": {
            "description": "By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\n\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.",
            "type": "string"
          },
          "requireUploadSignature": {
            "description": "When **true,** the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signInEachLocation": {
            "description": "When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).",
            "type": "string"
          },
          "signInEachLocationMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signatureInfo": {
            "$ref": "#/$defs/recipientSignatureInformation"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          },
          "signingGroupIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusCode": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "suppressEmails": {
            "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/$defs/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. This property is read-only.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "notaryRecipient",
        "x-ms-summary": ""
      },
      "delegationInfo": {
        "description": "",
        "properties": {
          "Email": {
            "description": "",
            "type": "string"
          },
          "Name": {
            "description": "",
            "type": "string"
          },
          "UserAuthorizationId": {
            "description": "",
            "type": "string"
          },
          "UserId": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "delegationInfo",
        "x-ms-summary": ""
      },
      "participant": {
        "description": "",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
            "type": "string"
          },
          "additionalNotifications": {
            "description": "An array of additional notification objects.",
            "items": {
              "$ref": "#/$defs/recipientAdditionalNotification"
            },
            "type": "array"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
            "type": "string"
          },
          "completedCount": {
            "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
            "type": "string"
          },
          "consentDetailsList": {
            "description": "",
            "items": {
              "$ref": "#/$defs/consentDetails"
            },
            "type": "array"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each string can be a maximum of 100 characters.\n",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "emailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "firstNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "fullNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "lastName": {
            "description": "The user's last name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "lastNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "participateFor": {
            "description": "",
            "type": "string"
          },
          "participateForGuid": {
            "description": "",
            "type": "string"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "phoneNumber": {
            "$ref": "#/$defs/recipientPhoneNumber"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique ID for the recipient. It is used by the tab element to indicate which recipient is to sign the document.\n",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          },
          "signingGroupIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusCode": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "suppressEmails": {
            "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
            "type": "string"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. This property is read-only.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "participant",
        "x-ms-summary": ""
      },
      "sealSign": {
        "description": "Specifies one or more electronic seals to apply on documents. An electronic seal recipient is a legal entity rather than an actual person. Electronic Seals can be used by organizations and governments to show evidence of origin and integrity of documents. Even though electronic seals can be represented by a tab in a document, they do not require user interaction and apply automatically in the order specified by the sender. The sender is therefore the person authorizing usage of the electronic seal in the flow.\n\nExample: \n\n```json\n\"recipients\": {\n      \"seals\": [\n        {\n          \"recipientId\": \"1\",\n          \"routingOrder\" : 1,\n          \"recipientSignatureProviders\": [\n            {\n              \"sealName\": \"52e9d968-xxxx-xxxx-xxxx-4682bc45c106\"\n            }\n      \t]\n    \t}\n  \t]\n\t},\n    .\n    .\n    .\n```\nFor more information about Electronic Seals, see [Apply Electronic Seals to Your Documents](https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals).\n",
        "properties": {
          "accessCode": {
            "description": "Not applicable.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Not applicable.",
            "type": "string"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "clientUserId": {
            "description": "Not applicable.",
            "type": "string"
          },
          "completedCount": {
            "description": "Not applicable.",
            "type": "string"
          },
          "customFields": {
            "description": "Not applicable.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "Not applicable.",
            "type": "string"
          },
          "declinedReason": {
            "description": "Not applicable.",
            "type": "string"
          },
          "deliveredDateTime": {
            "description": "Not applicable.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "Not applicable.",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "embeddedRecipientStartURL": {
            "description": "Not applicable.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckConfigurationName": {
            "description": "Not applicable.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "Not applicable.",
            "type": "string"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "Not applicable.",
            "type": "string"
          },
          "note": {
            "description": "Not applicable.",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "recipientAttachments": {
            "description": "Not applicable.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "(Required) The `recipientId` used when the envelope or template was created. \n\nThis is a local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientSignatureProviders": {
            "description": "(Required) Indicates which electronic seal to apply on documents when creating an envelope.",
            "items": {
              "$ref": "#/$defs/recipientSignatureProvider"
            },
            "type": "array"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "Not applicable.",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "(Optional, default: 1) \nSpecifies the routing order of the electronic seal in the envelope.\nThe routing order assigned to your electronic seal cannot be shared with another recipient.\nIt is recommended that you set a routing order for your electronic seals.\n",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "Not applicable.",
            "type": "string"
          },
          "signedDateTime": {
            "description": "Not applicable.",
            "type": "string"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
            "type": "string"
          },
          "statusCode": {
            "description": "The code associated with the recipient's status. This property is read-only.",
            "type": "string"
          },
          "suppressEmails": {
            "description": "Not applicable.",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/$defs/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "Not applicable.",
            "type": "string"
          },
          "userId": {
            "description": "Not applicable.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "sealSign",
        "x-ms-summary": "Specifies one or more electronic seals to apply on documents. An electronic seal recipient is a legal entity rather than an actual person. Electronic Seals can be used by organizations and governments to show evidence of origin and integrity of documents. Even though electronic seals can be represented by a tab in a document, they do not require user interaction and apply automatically in the order specified by the sender. The sender is therefore the person authorizing usage of the electronic seal in the flow.\n\nExample: \n\n```json\n\"recipients\": {\n      \"seals\": [\n        {\n          \"recipientId\": \"1\",\n          \"routingOrder\" : 1,\n          \"recipientSignatureProviders\": [\n            {\n              \"sealName\": \"52e9d968-xxxx-xxxx-xxxx-4682bc45c106\"\n            }\n      \t]\n    \t}\n  \t]\n\t},\n    .\n    .\n    .\n```\nFor more information about Electronic Seals, see [Apply Electronic Seals to Your Documents](https://support.docusign.com/en/guides/ndse-user-guide-apply-electronic-seals).\n"
      },
      "signer": {
        "description": "A complex type containing information about a signer recipient. A signer is a recipient who must take action on a document, such as sign, initial, date, or add data to form fields on a document.",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
            "type": "string"
          },
          "additionalNotifications": {
            "description": "An array of additional notification objects.",
            "items": {
              "$ref": "#/$defs/recipientAdditionalNotification"
            },
            "type": "array"
          },
          "agentCanEditEmail": {
            "description": "Optional element. When **true,** the agent recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.",
            "type": "string"
          },
          "agentCanEditName": {
            "description": "Optional. When **true,** the agent recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.",
            "type": "string"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When **true,** autonavigation is set for the recipient.\n",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkRecipientsUri": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "canSignOffline": {
            "description": "When **true,** specifies that the signer can perform the signing ceremony offline.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
            "type": "string"
          },
          "completedCount": {
            "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
            "type": "string"
          },
          "consentDetailsList": {
            "description": "",
            "items": {
              "$ref": "#/$defs/consentDetails"
            },
            "type": "array"
          },
          "creationReason": {
            "description": "The reason why the item was created.",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "defaultRecipient": {
            "description": "When **true,** this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.",
            "type": "string"
          },
          "delegatedBy": {
            "$ref": "#/$defs/delegationInfo"
          },
          "delegatedTo": {
            "description": "",
            "items": {
              "$ref": "#/$defs/delegationInfo"
            },
            "type": "array"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "email": {
            "description": "The recipient's email address. The system sends notifications about the documents to sign to this address. Maximum length: 100 characters. ",
            "type": "string"
          },
          "emailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "firstName": {
            "description": "The recipient's first name. Maximum Length: 50 characters.",
            "type": "string"
          },
          "firstNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "fullNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "isBulkRecipient": {
            "description": "When **true,** this signer is a bulk recipient and the recipient information is contained in a bulk recipient file. \n\nNote that when this is true the email and name for the recipient becomes bulk@recipient.com and \"Bulk Recipient\". These fields can not be changed for the bulk recipient. \n",
            "type": "string"
          },
          "isBulkRecipientMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "lastNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "notaryId": {
            "description": "The `recipientId` of the notary for this signer.",
            "type": "string"
          },
          "notarySignerEmailSent": {
            "description": "",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "offlineAttributes": {
            "$ref": "#/$defs/offlineAttributes"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "phoneNumber": {
            "$ref": "#/$defs/recipientPhoneNumber"
          },
          "proofFile": {
            "$ref": "#/$defs/recipientProofFile"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientSignatureProviders": {
            "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
            "items": {
              "$ref": "#/$defs/recipientSignatureProvider"
            },
            "type": "array"
          },
          "recipientSuppliesTabs": {
            "description": "When **true,** specifies that the recipient creates the tabs.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireSignOnPaper": {
            "description": "When **true,** the signer must print, sign, and upload or fax the signed documents to DocuSign.",
            "type": "string"
          },
          "requireSignerCertificate": {
            "description": "Sets the type of signer certificate required for signing. If left blank, no certificate is required. Only one type of certificate can be set for a signer. Valid values:\n\n* `docusign_express`: Requires a DocuSign Express certificate.\n* `safe`: Requires a SAFE-BioPharma certificate.\n* `open_trust`: Requires an OpenTrust certificate. \n\n**Important:** There are certain rules and restrictions that must be followed when requiring OpenTrust digital signatures. See [ML:OpenTrust Rules and Restrictions] for more information. \n ",
            "type": "string"
          },
          "requireUploadSignature": {
            "description": "When **true,** the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signInEachLocation": {
            "description": "When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).",
            "type": "string"
          },
          "signInEachLocationMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signatureInfo": {
            "$ref": "#/$defs/recipientSignatureInformation"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          },
          "signingGroupIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "Specifies the status of the recipient at the time of the request. This property is read-only. Possible values are:\n\n- `created`: The recipient is in a draft state. This is only associated with draft envelopes (envelopes with a created status).\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing web site. This is not an email delivery of the documents in an envelope.\n- `signed`; The recipient has completed (performed all required interactions, such as signing or entering data) all required tags in an envelope. This is a temporary state during processing, after which the recipient is automatically moved to completed.\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `faxpending`: The recipient has finished signing and the system is waiting a fax attachment by the recipient before completing their signing step.\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used by the DocuSign webapp (also known as the DocuSign console) to inform senders about the auto-responded email.\n",
            "type": "string"
          },
          "statusCode": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "suppressEmails": {
            "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/$defs/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. This property is read-only.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "signer",
        "x-ms-summary": "A complex type containing information about a signer recipient. A signer is a recipient who must take action on a document, such as sign, initial, date, or add data to form fields on a document."
      },
      "witness": {
        "description": "A complex type containing information about a witness recipient. Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "addAccessCodeToEmail": {
            "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
            "type": "string"
          },
          "additionalNotifications": {
            "description": "An array of additional notification objects.",
            "items": {
              "$ref": "#/$defs/recipientAdditionalNotification"
            },
            "type": "array"
          },
          "agentCanEditEmail": {
            "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.",
            "type": "string"
          },
          "agentCanEditName": {
            "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.",
            "type": "string"
          },
          "allowSystemOverrideForLockedRecipient": {
            "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
            "type": "string"
          },
          "autoNavigation": {
            "description": "When **true,** autonavigation is set for the recipient.\n",
            "type": "string"
          },
          "autoRespondedReason": {
            "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
            "type": "string"
          },
          "bulkRecipientsUri": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "bulkSendV2Recipient": {
            "description": "",
            "type": "string"
          },
          "canSignOffline": {
            "description": "When **true,** specifies that the signer can perform the signing ceremony offline.",
            "type": "string"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
            "type": "string"
          },
          "completedCount": {
            "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
            "type": "string"
          },
          "consentDetailsList": {
            "description": "",
            "items": {
              "$ref": "#/$defs/consentDetails"
            },
            "type": "array"
          },
          "creationReason": {
            "description": "The reason why the recipient was created (for example, `sender`). This property is read-only.",
            "type": "string"
          },
          "customFields": {
            "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declinedDateTime": {
            "description": "The date and time the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "declinedReason": {
            "description": "The reason the recipient declined the document. This property is read-only.",
            "type": "string"
          },
          "defaultRecipient": {
            "description": "When **true,** this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.",
            "type": "string"
          },
          "delegatedBy": {
            "$ref": "#/$defs/delegationInfo"
          },
          "delegatedTo": {
            "description": "",
            "items": {
              "$ref": "#/$defs/delegationInfo"
            },
            "type": "array"
          },
          "deliveredDateTime": {
            "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "deliveryMethodMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "designatorId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "designatorIdGuid": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
            "items": {
              "$ref": "#/$defs/documentVisibility"
            },
            "type": "array"
          },
          "email": {
            "description": "The recipient's email address.",
            "type": "string"
          },
          "emailMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "emailRecipientPostSigningURL": {
            "description": "",
            "type": "string"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "excludedDocuments": {
            "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "faxNumber": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "faxNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "firstName": {
            "description": "The recipient's first name. Maximum Length: 50 characters.",
            "type": "string"
          },
          "firstNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fullName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "fullNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckConfigurationNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "idCheckInformationInput": {
            "$ref": "#/$defs/idCheckInformationInput"
          },
          "identityVerification": {
            "$ref": "#/$defs/recipientIdentityVerification"
          },
          "inheritEmailNotificationConfiguration": {
            "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
            "type": "string"
          },
          "isBulkRecipient": {
            "description": "Reserved for DocuSign.\n",
            "type": "string"
          },
          "isBulkRecipientMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "lastName": {
            "description": "The recipient's last name.",
            "type": "string"
          },
          "lastNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "lockedRecipientPhoneAuthEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "lockedRecipientSmsEditable": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "notaryId": {
            "description": "",
            "type": "string"
          },
          "notarySignerEmailSent": {
            "description": "",
            "type": "string"
          },
          "note": {
            "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
            "type": "string"
          },
          "noteMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "offlineAttributes": {
            "$ref": "#/$defs/offlineAttributes"
          },
          "phoneAuthentication": {
            "$ref": "#/$defs/recipientPhoneAuthentication"
          },
          "phoneNumber": {
            "$ref": "#/$defs/recipientPhoneNumber"
          },
          "proofFile": {
            "$ref": "#/$defs/recipientProofFile"
          },
          "recipientAttachments": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/recipientAttachment"
            },
            "type": "array"
          },
          "recipientAuthenticationStatus": {
            "$ref": "#/$defs/authenticationStatus"
          },
          "recipientFeatureMetadata": {
            "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
            "items": {
              "$ref": "#/$defs/featureAvailableMetadata"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientSignatureProviders": {
            "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
            "items": {
              "$ref": "#/$defs/recipientSignatureProvider"
            },
            "type": "array"
          },
          "recipientSuppliesTabs": {
            "description": "When **true,** specifies that the recipient creates the tabs.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "recipientTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireIdLookup": {
            "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
            "type": "string"
          },
          "requireIdLookupMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireSignOnPaper": {
            "description": "When **true,** the signer must print, sign, and upload or fax the signed documents to DocuSign.",
            "type": "string"
          },
          "requireSignerCertificate": {
            "description": "By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\n\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.",
            "type": "string"
          },
          "requireUploadSignature": {
            "description": "When **true,** the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.",
            "type": "string"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "routingOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "sentDateTime": {
            "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
            "type": "string"
          },
          "signInEachLocation": {
            "description": "When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).",
            "type": "string"
          },
          "signInEachLocationMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signatureInfo": {
            "$ref": "#/$defs/recipientSignatureInformation"
          },
          "signedDateTime": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          },
          "signingGroupIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "signingGroupUsers": {
            "description": "A complex type that contains information about users in the signing group.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "smsAuthentication": {
            "$ref": "#/$defs/recipientSMSAuthentication"
          },
          "socialAuthentications": {
            "description": "Deprecated.",
            "items": {
              "$ref": "#/$defs/socialAuthentication"
            },
            "type": "array"
          },
          "status": {
            "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
            "type": "string"
          },
          "statusCode": {
            "description": "The code associated with the recipient's status. This property is read-only.",
            "type": "string"
          },
          "suppressEmails": {
            "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/$defs/EnvelopeRecipientTabs"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "totalTabCount": {
            "description": "The total number of tabs in the documents. This property is read-only.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          },
          "witnessFor": {
            "description": "The `recipientId` of the person or party for whom the recipient is a witness.",
            "type": "string"
          },
          "witnessForGuid": {
            "description": "Not used. Use the `witnessFor` property instead.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "witness",
        "x-ms-summary": "A complex type containing information about a witness recipient. Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope."
      },
      "EnvelopeLocks": {
        "description": "Envelope locks let you lock an envelope to prevent any changes while you are updating an envelope.\n",
        "properties": {
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "lockDurationInSeconds": {
            "description": "\nThe number of seconds until the lock expires when there is no activity on the envelope.\n\nThe default value is 300 seconds. The maximum value is 1,800 seconds.\n\nThe lock duration can be extended.\n",
            "type": "string"
          },
          "lockToken": {
            "description": "A unique identifier provided to the owner of the lock. You must use this token with subsequent calls to prove ownership of the lock.",
            "type": "string"
          },
          "lockType": {
            "description": "The type of lock.  Currently `edit` is the only supported type.",
            "type": "string"
          },
          "lockedByApp": {
            "description": "The human-readable name of the application that is locking the envelope or template. This value displays to the user in error messages when lock conflicts occur.",
            "type": "string"
          },
          "lockedByUser": {
            "$ref": "#/$defs/userInfo"
          },
          "lockedUntilDateTime": {
            "description": "The date and time that the lock expires.",
            "type": "string"
          },
          "useScratchPad": {
            "description": "When **true,** a scratchpad is used to edit information.\n ",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-category": "Envelopes",
        "x-ds-definition-name": "lockInformation",
        "x-ds-order": "80",
        "x-ms-summary": "Envelope locks let you lock an envelope to prevent any changes while you are updating an envelope.\n"
      },
      "notification": {
        "description": "A complex element that specifies the notification settings for the envelope.",
        "properties": {
          "expirations": {
            "$ref": "#/$defs/expirations"
          },
          "reminders": {
            "$ref": "#/$defs/reminders"
          },
          "useAccountDefaults": {
            "description": "When **true,** the account default notification settings are used for the envelope, overriding the reminders and expirations settings. When **false,** the reminders and expirations settings specified in this request are used. The default value is **false.**",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "notification",
        "x-ms-summary": "A complex element that specifies the notification settings for the envelope."
      },
      "expirations": {
        "description": "A complex element that specifies the expiration settings for the envelope. When an envelope expires, it is voided and no longer available for signing. **Note:** there is a short delay between when the envelope expires and when it is voided.\n",
        "properties": {
          "expireAfter": {
            "description": "An integer that sets the number of days the envelope is active. For this value to be used, `expireEnabled` must be explicitly set to **true.**",
            "type": "string"
          },
          "expireEnabled": {
            "description": "When **true,** the envelope expires in the number of days set by `expireAfter`. When **false** or not set, the envelope expires in the number of days specified by the [default expiration account setting](https://support.docusign.com/en/guides/ndse-admin-guide-reminders-and-expirations).",
            "type": "string"
          },
          "expireWarn": {
            "description": "An integer that specifying the number of days before the envelope expires that an expiration warning email is sent to the recipient. When 0 (zero), no warning email is sent.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "expirations",
        "x-ms-summary": "A complex element that specifies the expiration settings for the envelope. When an envelope expires, it is voided and no longer available for signing. **Note:** there is a short delay between when the envelope expires and when it is voided.\n"
      },
      "reminders": {
        "description": "A complex element that specifies reminder settings for the envelope.",
        "properties": {
          "reminderDelay": {
            "description": "An integer specifying the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. The default value is 0.",
            "type": "string"
          },
          "reminderEnabled": {
            "description": "When **true,** reminders are enabled. The default value is **false.**",
            "type": "string"
          },
          "reminderFrequency": {
            "description": "An integer specifying the interval in days between reminder emails. The default value is 0.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "reminders",
        "x-ms-summary": "A complex element that specifies reminder settings for the envelope."
      },
      "powerForm": {
        "description": "Contains details about a PowerForm.",
        "properties": {
          "createdBy": {
            "description": "The ID of the user who created the PowerForm.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "The UTC DateTime when the item was created.",
            "type": "string"
          },
          "emailBody": {
            "description": "The body of the email message sent to the recipients. \n\nMaximum length: 10000 characters.",
            "type": "string"
          },
          "emailSubject": {
            "description": "The subject line of the email message that is sent to all recipients.\n\nFor information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).\n\n**Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.\n",
            "type": "string"
          },
          "envelopes": {
            "description": "",
            "items": {
              "$ref": "#/$defs/envelope"
            },
            "type": "array"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "instructions": {
            "description": "The instructions that display on the landing page for the first recipient. These instructions are important if the recipient accesses the PowerForm by a method other than email. If instructions are entered, they display as an introduction after the recipient accesses the PowerForm.  Limit: 2000 characters.",
            "type": "string"
          },
          "isActive": {
            "description": "When **true,** indicates that the PowerForm is active and can be sent to recipients. This is the default value.\n\nWhen **false,** the PowerForm cannot be emailed or accessed by a recipient, even if they arrive at the PowerForm URL. \n\nIf a recipient attempts to sign an inactive PowerForm, an error message informs the recipient that the document is not active and suggests that they contact the sender.\n",
            "type": "string"
          },
          "lastUsed": {
            "description": "The UTC DateTime when the PowerForm was last used.",
            "type": "string"
          },
          "limitUseInterval": {
            "description": "The length of time before the same recipient can sign the same PowerForm. This property is used in combination with the `limitUseIntervalUnits` property.",
            "type": "string"
          },
          "limitUseIntervalEnabled": {
            "description": "When **true,** the `limitUseInterval` is enabled.",
            "type": "string"
          },
          "limitUseIntervalUnits": {
            "description": "The units associated with the `limitUseInterval`. Valid values are:\n\n- `minutes`\n- `hours\n- `days`\n- `weeks`\n- `months`\n\nFor example, to limit a recipient to signing once per year, set the `limitUseInterval` to 365 and the `limitUseIntervalUnits` to `days`.\n",
            "type": "string"
          },
          "maxUseEnabled": {
            "description": "When **true,** you can set a maximum number of uses for the PowerForm.",
            "type": "string"
          },
          "name": {
            "description": "The name of the PowerForm.",
            "type": "string"
          },
          "powerFormId": {
            "description": "The ID of the PowerForm.",
            "type": "string"
          },
          "powerFormUrl": {
            "description": "The URL for the PowerForm.",
            "type": "string"
          },
          "recipients": {
            "description": "An array of recipient objects that provides details about the recipients of the envelope.",
            "items": {
              "$ref": "#/$defs/powerFormRecipient"
            },
            "type": "array"
          },
          "senderName": {
            "description": "The sender's name.",
            "type": "string"
          },
          "senderUserId": {
            "description": "The ID of the sender.",
            "type": "string"
          },
          "signingMode": {
            "description": "The signing mode to use. Valid values are:\n \n- `email`: Verifies the recipient's identity using email authentication before the recipient can sign a document. The recipient enters their email address and then clicks **Begin Signing** to begin the signing process. The system then sends an email message with a validation code for the PowerForm to the recipient. If the recipient does not provide a valid email address, they cannot open and sign the document.  \n- `direct`: Does not require any verification. After a recipient enters their email address and clicks **Begin Signing,** a new browser tab opens and the recipient can immediately begin the signing process. Because the recipient's identity is not verified by using email authentication, we strongly recommend that you only use the `direct` signing mode when the PowerForm is accessible behind a secure portal where the recipient's identity is already authenticated, or where another form of authentication is specified for the recipient in the DocuSign template (for example, an access code, phone authentication, or ID check).  \n\n**Note:** In the account settings, `enablePowerFormDirect` must be **true** to use `direct` as the `signingMode`.",
            "type": "string"
          },
          "templateId": {
            "description": "The ID of the template used to create the PowerForm.",
            "type": "string"
          },
          "templateName": {
            "description": "The name of the template used to create the PowerForm.",
            "type": "string"
          },
          "timesUsed": {
            "description": "The number of times the PowerForm has been used. ",
            "type": "string"
          },
          "uri": {
            "description": "The URI for the PowerForm.",
            "type": "string"
          },
          "usesRemaining": {
            "description": "The number of times the PowerForm can still be used.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "powerForm",
        "x-ms-summary": "Contains details about a PowerForm."
      },
      "powerFormRecipient": {
        "description": "**Note:** For a self-service PowerForm on a website, you can specify the intended recipients generically (for example, use `Member` as the `Name`), and omit personal details such as `email`.",
        "properties": {
          "accessCode": {
            "description": "(Optional) The access code that the recipient must enter to access the PowerForm.\n\nMaximum Length: 50 characters. The code must also conform to the account's access code format setting.\n\nIf blank but the signer accessCode property is set in the envelope, then that value is used.\n\nIf blank and the signer accessCode property is not set, then the access code is not required.",
            "type": "string"
          },
          "accessCodeLocked": {
            "description": "When **true,** the `accessCode` property is locked and cannot be edited.",
            "type": "string"
          },
          "accessCodeRequired": {
            "description": "When **true,** the recipient must enter the `accessCode` to access the PowerForm.",
            "type": "string"
          },
          "email": {
            "description": "The email address of the recipient.\n\n**Note:** For self-service documents where you do not know who the recipients are in advance, you can leave this property blank.",
            "type": "string"
          },
          "emailLocked": {
            "description": "When **true,** the recipient's email address is locked and cannot be edited.",
            "type": "string"
          },
          "idCheckConfigurationName": {
            "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
            "type": "string"
          },
          "idCheckRequired": {
            "description": "Indicates if authentication is configured for the account. Valid values are:\n\n- `always`: Authentication checks are performed on every envelope. \n- `never`: Authentication checks are not performed on any envelopes. \n- `optional:` Authentication is configurable per envelope.",
            "type": "string"
          },
          "name": {
            "description": "The name of the PowerForm recipient.\n\n**Note:** For self-service documents where you do not know who the recipients are in advance, you can leave this property blank.",
            "type": "string"
          },
          "recipientType": {
            "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
            "type": "string"
          },
          "roleName": {
            "description": "The role associated with the recipient (for example, `Member`).\n\nThis property is required when you are working with template recipients and PowerForm recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "templateRequiresIdLookup": {
            "description": "When **true,** the template used to create the PowerForm requires ID lookup for the recipient.",
            "type": "string"
          },
          "userNameLocked": {
            "description": "When **true,** the `userName` property for the recipient is locked and cannot be edited.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "powerFormRecipient",
        "x-ms-summary": "**Note:** For a self-service PowerForm on a website, you can specify the intended recipients generically (for example, use `Member` as the `Name`), and omit personal details such as `email`."
      },
      "workflow": {
        "description": "Describes the workflow for an envelope.",
        "properties": {
          "currentWorkflowStepId": {
            "description": "The `workflowStepId` of the current step.\nThis is not an index into the `workflowSteps` array in this object.\nSee the `workflowStep` object.",
            "type": "string"
          },
          "resumeDate": {
            "description": "The ISO 8601 timestamp of when the envelope is scheduled to be sent, if applicable. Its value is the maximum of the `resumeDate` property on `scheduledSending` and the `resumeDate` property on the current `workflowStep`.\n\nThis property is read-only.",
            "type": "string"
          },
          "scheduledSending": {
            "$ref": "#/$defs/scheduledSending"
          },
          "workflowStatus": {
            "description": "The status of the workflow:\n\n- `paused` if the workflow is paused\n- `in_progress` if the workflow is in progress",
            "type": "string"
          },
          "workflowSteps": {
            "description": "An array of workflow steps.",
            "items": {
              "$ref": "#/$defs/workflowStep"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "workflow",
        "x-ms-summary": "Describes the workflow for an envelope."
      },
      "scheduledSending": {
        "description": "A complex element that specifies the scheduled sending settings for the envelope.",
        "properties": {
          "bulkListId": {
            "description": "The ID of the bulk list. Set this optional value to use scheduled sending with a bulk send operation.",
            "type": "string"
          },
          "resumeDate": {
            "description": "The timestamp of when the envelope is scheduled to be sent in ISO 8601 format.\n\nThis property is read-only.\n",
            "type": "string"
          },
          "rules": {
            "description": "User-specified rules indicating how and when the envelope should be scheduled for sending. Only one rule may be specified.",
            "items": {
              "$ref": "#/$defs/envelopeDelayRule"
            },
            "type": "array"
          },
          "status": {
            "description": "Status of the scheduled sending job. Valid values:\n\n* `pending`: The envelope has not yet been sent and the scheduled sending delay has not been initiated.\n* `started`: The sender has initiated the sending process. The delay has not elapsed, so the envelope has not yet been sent to the first recipient.\n* `completed`: The delay has elapsed and the envelope has been sent to the first recipient.\n\nThis property is read-only.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "scheduledSending",
        "x-ms-summary": "A complex element that specifies the scheduled sending settings for the envelope."
      },
      "envelopeDelayRule": {
        "description": "A user-specified object that describes the envelope delay.\n\nTo indicate a relative delay, use `delay`. To indicate the exact datetime the envelope should be sent, use `resumeDate`. Only one of the two properties can be used.",
        "properties": {
          "delay": {
            "description": "A string timespan representing the duration of the sending delay. The timespan is in the format `d.hh:mm:ss` where `d` is the number of days, `hh` is the number of hours (measured on a 24-hour clock), `mm` is minutes, and `ss` is seconds. The maximum delay is 30 days.",
            "type": "string"
          },
          "resumeDate": {
            "description": "An ISO 8601 formatted datetime string indicating the date and time that the envelope will be sent. The specified datetime must occur in the future. It must not exceed 30 days from the time that the request is made.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "envelopeDelayRule",
        "x-ms-summary": "A user-specified object that describes the envelope delay.\n\nTo indicate a relative delay, use `delay`. To indicate the exact datetime the envelope should be sent, use `resumeDate`. Only one of the two properties can be used."
      },
      "workflowStep": {
        "description": "Describes a single step in a workflow.",
        "properties": {
          "action": {
            "description": "Indicates the action to perform. Valid values:\n\n- `pause_before`: The workflow should pause before the trigger described by `triggerOnItem` is reached.\n",
            "type": "string"
          },
          "completedDate": {
            "description": "The timestamp of when the workflow step transitioned to `completed` status.\n\nThis property is read-only.",
            "type": "string"
          },
          "delayedRouting": {
            "$ref": "#/$defs/delayedRouting"
          },
          "itemId": {
            "description": "The unique ID of the item being triggered.",
            "type": "string"
          },
          "recipientRouting": {
            "$ref": "#/$defs/recipientRouting"
          },
          "status": {
            "description": "The status of the step. Valid values:\n\n- `inactive`\n- `in_progress`\n- `paused`\n- `pending`\n- `completed`\n\nThis property is read-only.",
            "type": "string"
          },
          "triggerOnItem": {
            "description": "The type of item that triggers this workflow step. Valid values:\n\n* `routing_order`",
            "type": "string"
          },
          "triggeredDate": {
            "description": "The timestamp of when the workflow step transitioned to `in_progress` status.\n\nThis property is read-only.",
            "type": "string"
          },
          "workflowStepId": {
            "description": "A unique identifier for this workflow step.\n\nThis property is read-only.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "workflowStep",
        "x-ms-summary": "Describes a single step in a workflow."
      },
      "delayedRouting": {
        "description": "A complex element that specifies the delayed routing settings for the workflow step.",
        "properties": {
          "resumeDate": {
            "description": "The ISO 8601 timestamp of when the envelope is scheduled to be sent to the recipients associated with the workflow step. This property is `null` if the workflow step has not been initiated.\n\nThis property is read-only.\n",
            "type": "string"
          },
          "rules": {
            "description": "User-specified rules indicating how and when the envelope should sent for the workflow step and its associated recipients. Only one rule may be specified.",
            "items": {
              "$ref": "#/$defs/envelopeDelayRule"
            },
            "type": "array"
          },
          "status": {
            "description": "Status of the delayed routing step. Valid values:\n\n* `pending`: The workflow step has not been reached and the delay has not been initiated.\n* `started`: The workflow step has begun and the delay is in progress. The envelope has not yet been sent to the workflow step's recipients.\n* `completed`: The delay has elapsed and the envelope has been sent to the workflow step's recipients.\n\nThis property is read-only.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "delayedRouting",
        "x-ms-summary": "A complex element that specifies the delayed routing settings for the workflow step."
      },
      "recipientRouting": {
        "description": "Describes the recipient routing rules.",
        "properties": {
          "rules": {
            "$ref": "#/$defs/recipientRules"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientRouting",
        "x-ms-summary": "Describes the recipient routing rules."
      },
      "recipientRules": {
        "description": "",
        "properties": {
          "conditionalRecipients": {
            "description": "",
            "items": {
              "$ref": "#/$defs/conditionalRecipientRule"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientRules",
        "x-ms-summary": ""
      },
      "conditionalRecipientRule": {
        "description": "A rule that defines a set of recipients and the conditions under which they will be used for the envelope.",
        "properties": {
          "conditions": {
            "description": "An array of conditions that define when the recipients will be used.",
            "items": {
              "$ref": "#/$defs/conditionalRecipientRuleCondition"
            },
            "type": "array"
          },
          "order": {
            "description": "An integer that specifies the order in which rules are processed.\nLower values are processed before higher values.",
            "type": "string"
          },
          "recipientGroup": {
            "$ref": "#/$defs/recipientGroup"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "conditionalRecipientRule",
        "x-ms-summary": "A rule that defines a set of recipients and the conditions under which they will be used for the envelope."
      },
      "conditionalRecipientRuleCondition": {
        "description": "",
        "properties": {
          "filters": {
            "description": "",
            "items": {
              "$ref": "#/$defs/conditionalRecipientRuleFilter"
            },
            "type": "array"
          },
          "order": {
            "description": "An integer that specifies the order in which rules are processed.\nLower values are processed before higher values.",
            "type": "string"
          },
          "recipientLabel": {
            "description": "An identifier for the recipient. After assigning this value in a `recipient` object, you can reference it in the `conditions` object to set the recipient as a conditional recipient. For an example, see [How to use conditional recipients](/docs/esign-rest-api/how-to/use-conditional-recipients/).\n",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "conditionalRecipientRuleCondition",
        "x-ms-summary": ""
      },
      "conditionalRecipientRuleFilter": {
        "description": "",
        "properties": {
          "operator": {
            "description": "How the tab value is compared to the `value` property. Valid values:\n\n* `equals`\n* `greaterThan`\n* `greaterThanEquals`\n* `lessThan`\n* `lessThanEquals`\n* `filled`\n* `selected`",
            "type": "string"
          },
          "recipientId": {
            "description": "The ID of the recipient (as specified in the `recipients` object).",
            "type": "string"
          },
          "scope": {
            "description": "The scope under which the condition is evaluated. Valid values:\n\n* `tabs`",
            "type": "string"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "value": {
            "description": "A set value to which the tab's actual value is compared.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "conditionalRecipientRuleFilter",
        "x-ms-summary": ""
      },
      "recipientGroup": {
        "description": "Describes a group of recipients.",
        "properties": {
          "groupMessage": {
            "description": "The group message, typically a description of the group.",
            "type": "string"
          },
          "groupName": {
            "description": "The name of the group.",
            "type": "string"
          },
          "recipients": {
            "description": "An array of recipient objects that provides details about the recipients of the envelope.",
            "items": {
              "$ref": "#/$defs/recipientOption"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientGroup",
        "x-ms-summary": "Describes a group of recipients."
      },
      "recipientOption": {
        "description": "Describes a recipient who is a member of a conditional group.",
        "properties": {
          "email": {
            "description": "The email ID of the agent. This property is required. Maximum length: 100 characters.",
            "type": "string"
          },
          "name": {
            "description": "The full legal name of the recipient. Maximum length: 100 characters.",
            "type": "string"
          },
          "recipientLabel": {
            "description": "An identifier for the recipient. After assigning this value in a `recipient` object, you can reference it in the `conditions` object to set the recipient as a conditional recipient. For an example, see [How to use conditional recipients](/docs/esign-rest-api/how-to/use-conditional-recipients/).\n",
            "type": "string"
          },
          "roleName": {
            "description": "Specifies the signing group role of the recipient. This property is required.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientOption",
        "x-ms-summary": "Describes a recipient who is a member of a conditional group."
      },
      "serverTemplate": {
        "description": "",
        "properties": {
          "sequence": {
            "description": "Specifies the order in which templates are overlaid.",
            "type": "string"
          },
          "templateId": {
            "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "serverTemplate",
        "x-ms-summary": ""
      },
      "eventNotification": {
        "description": "Use this object to configure a [DocuSign Connect webhook](/platform/webhooks/connect/).",
        "properties": {
          "deliveryMode": {
            "description": "",
            "type": "string"
          },
          "envelopeEvents": {
            "description": "A list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `url` property. \n\nTo receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.",
            "items": {
              "$ref": "#/$defs/envelopeEvent"
            },
            "type": "array"
          },
          "eventData": {
            "$ref": "#/$defs/connectEventData"
          },
          "events": {
            "description": "A comma-separated list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `urlToPublishTo` property.\n\nSet this property when you are using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/). If you are instead using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), set either the `envelopeEvents` property or the `recipientEvents` property.\n\nThe [possible event statuses](/platform/webhooks/connect/improved-json-sim-event-model/#eventreference) are:\n\n* `envelope-created`\n* `envelope-sent`\n* `envelope-resent`\n* `envelope-delivered`\n* `envelope-completed`\n* `envelope-declined`\n* `envelope-voided`\n* `recipient-authenticationfailed`\n* `recipient-autoresponded`\n* `recipient-declined`\n* `recipient-delivered`\n* `recipient-completed`\n* `recipient-sent`\n* `recipient-resent`\n* `template-created`\n* `template-modified`\n* `template-deleted`\n* `envelope-corrected`\n* `envelope-purge`\n* `envelope-deleted`\n* `envelope-discard`\n* `recipient-reassign`\n* `recipient-delegate`\n* `recipient-finish-later`\n* `click-agreed`\n* `click-declined`\n",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includeCertificateOfCompletion": {
            "description": "When **true,** the Connect Service includes the Certificate of Completion with completed envelopes. ",
            "type": "string"
          },
          "includeCertificateWithSoap": {
            "description": "When **true,**\nthe Connect service will digitally sign\nthe data.\nThe signature will be included in the message.",
            "type": "string"
          },
          "includeDocumentFields": {
            "description": "When **true,** the Document Fields associated with the envelope's documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API. ",
            "type": "string"
          },
          "includeDocuments": {
            "description": "When **true,**\nthe Connect webhook messages\nwill include the envelope's PDF documents.\nIncluding the PDF documents\ngreatly increases the size of the notification messages.\nEnsure that your listener can handle\nincoming messages that are 25MB or larger.",
            "type": "string"
          },
          "includeEnvelopeVoidReason": {
            "description": "When **true,** this tells the Connect Service to include the void reason, as entered by the person that voided the envelope, in the message. ",
            "type": "string"
          },
          "includeHMAC": {
            "description": "When **true,** HMAC headers will be included with the webhook notifications.\n\n**Note:** [HMAC must enabled](/platform/webhooks/connect/hmac/) at the account level with [one or more HMAC secrets](/platform/webhooks/connect/setting-up-hmac/).",
            "type": "string"
          },
          "includeOAuth": {
            "description": "",
            "type": "string"
          },
          "includeSenderAccountAsCustomField": {
            "description": "When **true,** Connect will include the sender account as Custom Field in the data.",
            "type": "string"
          },
          "includeTimeZone": {
            "description": "When **true,** the envelope's time zone information is included in the webhook messages. ",
            "type": "string"
          },
          "integratorManaged": {
            "description": "",
            "type": "string"
          },
          "loggingEnabled": {
            "description": "When **true,** the webhook messages are logged. They can be viewed on the DocuSign Administration Web Tool in the Connect section. Logged messages can also be downloaded via the [ConnectEvents resource](/docs/esign-rest-api/reference/connect/connectevents/).",
            "type": "string"
          },
          "recipientEvents": {
            "description": "A list of recipient event statuses that will trigger Connect to send updates to   the endpoint specified in the URL property.\n\nTo receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.",
            "items": {
              "$ref": "#/$defs/recipientEvent"
            },
            "type": "array"
          },
          "requireAcknowledgment": {
            "description": "When **true,** the DocuSign Connect service checks that the message was received and retries on failures. ",
            "type": "string"
          },
          "signMessageWithX509Cert": {
            "description": "When **true,** Mutual TLS will be enabled for notifications. Mutual TLS must be initiated by the listener (the customer's web server) during the TLS handshake protocol. ",
            "type": "string"
          },
          "soapNameSpace": {
            "description": "The namespace of the SOAP interface.\n\nThe namespace value must be set if useSoapInterface is set to true.",
            "type": "string"
          },
          "url": {
            "description": "The endpoint to which Connect should send webhook notification messages via an HTTPS POST request. The URL must start with `https`. The customer's web server must use an SSL/TLS certificate whose CA is in the Microsoft list of trusted CAs. Self-signed certificates are not acceptable, but you can use free certificates from Let's Encrypt.\n\nThe maximum length of this property is 4096 bytes.\n",
            "type": "string"
          },
          "useSoapInterface": {
            "description": "When **true,** this tells the Connect service that the user's endpoint has implemented a SOAP interface. ",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "eventNotification",
        "x-ms-summary": "Use this object to configure a [DocuSign Connect webhook](/platform/webhooks/connect/)."
      },
      "envelopeEvent": {
        "description": "For which envelope events should your webhook be called?",
        "properties": {
          "envelopeEventStatusCode": {
            "description": "An envelope status for which your webhook should be called. Values: Draft, Sent, Delivered, Completed, Declined, or Voided.",
            "type": "string"
          },
          "includeDocuments": {
            "description": "When **true,**\nthe Connect webhook messages\nwill include the envelope's PDF documents.\nIncluding the PDF documents\ngreatly increases the size of the notification messages.\nEnsure that your listener can handle\nincoming messages that are 25MB or larger.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "envelopeEvent",
        "x-ms-summary": "For which envelope events should your webhook be called?"
      },
      "connectEventData": {
        "description": "This object lets you choose the data format of your Connect response.",
        "properties": {
          "format": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "includeData": {
            "description": "A string array of the data to be included.\nThe default is the empty array `[]`.\n\n- `attachments`: Include attachments associated with the envelope.\n- `custom_fields`: Include the custom fields associated with the envelope.\n- `documents`: Include the documents associated with the envelope.\n- `extensions`: Include information about the email settings associated with the envelope.\n- `folders`: Include the folder where the envelope exists.\n- `payment_tabs`: Include the payment tabs associated with the envelope.\n- `powerform`: Include the PowerForms associated with the envelope.\n- `prefill_tabs`: Include the [pre-filled tabs](/docs/esign-rest-api/esign101/concepts/tabs/prefilled-tabs/) associated with the envelope.\n- `recipients`: Include the recipients associated with the envelope.\n- `tabs`: Include the tabs associated with the envelope.\n",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "description": "Set this property to `restv2.1` to return event data in JSON. If the property is not set, the event data will be returned in XML by default.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "connectEventData",
        "x-ms-summary": "This object lets you choose the data format of your Connect response."
      },
      "recipientEvent": {
        "description": "",
        "properties": {
          "includeDocuments": {
            "description": "When **true,**\nthe Connect webhook messages\nwill include the envelope's PDF documents.\nIncluding the PDF documents\ngreatly increases the size of the notification messages.\nEnsure that your listener can handle\nincoming messages that are 25MB or larger.",
            "type": "string"
          },
          "recipientEventStatusCode": {
            "description": "Send a webhook notification for the following recipient statuses: Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientEvent",
        "x-ms-summary": ""
      },
      "recipientViewRequest": {
        "description": "The request body for the [EnvelopeViews: createRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/)\nand\n[EnvelopeViews: createSharedRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/) methods.",
        "properties": {
          "assertionId": {
            "description": "A unique identifier of the authentication event executed by the client application.",
            "type": "string"
          },
          "authenticationInstant": {
            "description": "A sender-generated value that indicates the date and time that the signer was authenticated.",
            "type": "string"
          },
          "authenticationMethod": {
            "description": "Required. Choose a value that most closely matches the technique your application used to authenticate the recipient / signer. \n\nChoose a value from this list: \n* Biometric \n* Email\n* HTTPBasicAuth\n* Kerberos\n* KnowledgeBasedAuth\n* None\n* PaperDocuments\n* Password\n* RSASecureID\n* SingleSignOn_CASiteminder\n* SingleSignOn_InfoCard\n* SingleSignOn_MicrosoftActiveDirectory\n* SingleSignOn_Other\n* SingleSignOn_Passport\n* SingleSignOn_SAML\n* Smartcard\n* SSLMutualAuth\n* X509Certificate\n\nThis information is included in the Certificate of Completion.",
            "type": "string"
          },
          "clientURLs": {
            "$ref": "#/$defs/recipientTokenClientURLs"
          },
          "clientUserId": {
            "description": "A sender-created value. If provided, the recipient is treated as an embedded (captive) recipient or signer.\n\nUse your application's client ID (user ID) for the recipient. Doing so enables the details of your application's authentication of the recipient to be connected to the recipient's signature if the signature is disputed or repudiated.\n\nMaximum length: 100 characters.",
            "type": "string"
          },
          "email": {
            "description": "(Required) Specifies the email of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.",
            "type": "string"
          },
          "frameAncestors": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "messageOrigins": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "pingFrequency": {
            "description": "Only used if `pingUrl` is specified. This is the interval, in seconds, between pings on the `pingUrl`.  The default is `300` seconds. Valid values are 60-1200 seconds.",
            "type": "string"
          },
          "pingUrl": {
            "description": "The client URL that the DocuSign Signing experience should ping to indicate to the client that Signing is active. An HTTP GET call is executed against the client. The response from the client is ignored. The intent is for the client to reset its session timer when the request is received.",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "returnUrl": {
            "description": "(Required) The URL to which the user should be redirected\nafter the signing session has ended.\n\nMaximum Length: 470 characters. If the `returnUrl` exceeds this\nlimit, the user is redirected to a truncated URL\nBe sure to include `https://` in the URL\nor redirecting might fail on some browsers.\n\n\nWhen DocuSign redirects to\nthis URL, it will include an `event` query parameter that your app can use:\n\n* `access_code_failed`: Recipient used incorrect access code.\n* `cancel`: Recipient canceled the signing operation,\n  possibly by using the **Finish Later** option.\n* `decline`: Recipient declined to sign.\n* `exception`: A system error occurred during the signing process.\n* `fax_pending`: Recipient has a fax pending.\n* `id_check_failed`: Recipient failed an ID check.\n* `session_timeout`: The session timed out. An account can control this timeout by using the **Signer Session Timeout** option.\n* `signing_complete`: The recipient completed the signing ceremony.\n* `ttl_expired`: The Time To Live token for the envelope has expired.\n  After being successfully invoked, these tokens expire\n  after five minutes.\n* `viewing_complete`: The recipient completed viewing an envelope\n  that is in a read-only/terminal state,\n  such as completed, declined, or voided.\n\n",
            "type": "string"
          },
          "securityDomain": {
            "description": "The domain in which the user authenticated.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the recipient. You can use either the user ID or email and user name to identify the recipient. \n\nIf `userId` is used and a `clientUserId` is provided, the value in the `userId` property must match a `recipientId` (which you can retrieve with a GET recipients call) for the envelope. \n\nIf a `userId` is used and a `clientUserId` is not provided, the `userId` must match the user ID of the authenticating user.",
            "type": "string"
          },
          "userName": {
            "description": "The username of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.",
            "type": "string"
          },
          "xFrameOptions": {
            "description": "Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.\n\nValid values are:\n\n- `deny`: The page cannot be displayed in a frame.\n- `same_origin`: The page can only be displayed in a frame on the same origin as the page itself.\n- `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.",
            "type": "string"
          },
          "xFrameOptionsAllowFromUrl": {
            "description": "When the value of `xFrameOptions` is `allow_from`, this property specifies the origin on which the page is allowed to display in a frame. If the value of `xFrameOptions` is `allow_from`, you must include a value for this property.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientViewRequest",
        "x-ms-summary": "The request body for the [EnvelopeViews: createRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/)\nand\n[EnvelopeViews: createSharedRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/) methods."
      },
      "recipientTokenClientURLs": {
        "description": "",
        "properties": {
          "onAccessCodeFailed": {
            "description": "",
            "type": "string"
          },
          "onCancel": {
            "description": "",
            "type": "string"
          },
          "onDecline": {
            "description": "",
            "type": "string"
          },
          "onException": {
            "description": "",
            "type": "string"
          },
          "onFaxPending": {
            "description": "",
            "type": "string"
          },
          "onIdCheckFailed": {
            "description": "",
            "type": "string"
          },
          "onSessionTimeout": {
            "description": "",
            "type": "string"
          },
          "onSigningComplete": {
            "description": "",
            "type": "string"
          },
          "onTTLExpired": {
            "description": "",
            "type": "string"
          },
          "onViewingComplete": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientTokenClientURLs",
        "x-ms-summary": ""
      },
      "templateRole": {
        "description": "Information about a specific role.",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "additionalNotifications": {
            "description": "An array of additional notification objects.",
            "items": {
              "$ref": "#/$defs/recipientAdditionalNotification"
            },
            "type": "array"
          },
          "clientUserId": {
            "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
            "type": "string"
          },
          "defaultRecipient": {
            "description": "When **true,** this recipient is the default recipient and any tabs generated by the `transformPdfFields` option are mapped to this recipient.",
            "type": "string"
          },
          "deliveryMethod": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "email": {
            "description": "The email address of the person associated with a role name. It is the email address of the person specified in the `name` property.\n\nFor an in-person signer, this is the email address of the host.",
            "type": "string"
          },
          "emailNotification": {
            "$ref": "#/$defs/recipientEmailNotification"
          },
          "embeddedRecipientStartURL": {
            "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
            "type": "string"
          },
          "inPersonSignerName": {
            "description": "The full legal name of the in-person signer.\n\nMaximum Length: 100 characters.",
            "type": "string"
          },
          "name": {
            "description": "Specifies the recipient's name.\n\nFor an in-person signer, this is the name of the host.",
            "type": "string"
          },
          "phoneNumber": {
            "$ref": "#/$defs/recipientPhoneNumber"
          },
          "recipientSignatureProviders": {
            "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
            "items": {
              "$ref": "#/$defs/recipientSignatureProvider"
            },
            "type": "array"
          },
          "roleName": {
            "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
            "type": "string"
          },
          "routingOrder": {
            "description": "Specifies the routing order of the recipient in the envelope. ",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).\n",
            "type": "string"
          },
          "tabs": {
            "$ref": "#/$defs/EnvelopeRecipientTabs"
          }
        },
        "type": "object",
        "x-ds-definition-name": "templateRole",
        "x-ms-summary": "Information about a specific role."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://www.docusign.net/restapi/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            "**envelopeDocuments**: An array containing information about the documents that are included in the envelope.",
            "**envelopeId**: The envelope ID."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The code associated with the error condition.",
            "**message**: A brief message describing the error condition."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
