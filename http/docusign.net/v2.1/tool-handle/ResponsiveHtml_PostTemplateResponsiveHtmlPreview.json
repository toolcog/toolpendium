{
  "name": "ResponsiveHtml_PostTemplateResponsiveHtmlPreview",
  "description": "Creates a preview of the\n[responsive](/docs/esign-rest-api/esign101/concepts/responsive/),\nHTML versions of all of the documents associated\nwith a template. This method enables you to\npreview the PDF document conversions to responsive\nHTML across device types prior to sending.\n\nThe request body is a `documentHtmlDefinition`\nobject, which holds the responsive signing\nparameters that define how to generate the HTML\nversion of the documents.",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The external account number (int) or account ID GUID."
      },
      "templateId": {
        "type": "string",
        "description": "The ID of the template."
      },
      "body": {
        "$ref": "#/$defs/documentHtmlDefinition"
      }
    },
    "required": [
      "accountId",
      "templateId"
    ],
    "$defs": {
      "documentHtmlDefinition": {
        "description": "Holds the properties that define how to generate the responsive-formatted HTML for the document.\nSee [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)\nin the [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/).",
        "properties": {
          "displayAnchorPrefix": {
            "description": "Contains text that all display anchors must start with. Using at least four characters will improve anchor processing performance.",
            "type": "string"
          },
          "displayAnchors": {
            "description": "An object that defines how to handle a section of the HTML in signing. This property enables an incoming request to make a section of the HTML collapsible and expandable or hidden from view.\n\nA start anchor, end anchor, or both are required.\nIf the anchors are not found, the display anchor will be ignored.\n\nFor a list of the available types, see the\n[`display` property](/docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition_documents_htmldefinition_displayanchors_displaysettings_display)\nof the\n[`displaySettings` object.](/docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition_documents_htmldefinition_displayanchors_displaysettings)",
            "items": {
              "$ref": "#/$defs/documentHtmlDisplayAnchor"
            },
            "type": "array"
          },
          "displayOrder": {
            "description": "The position on the page where the display section appears.",
            "type": "string"
          },
          "displayPageNumber": {
            "description": "The number of the page on which the display section appears.",
            "type": "string"
          },
          "documentGuid": {
            "description": "The GUID of the document.",
            "type": "string"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "headerLabel": {
            "description": "Header text or an HTML tag to place above the responsive HTML block.",
            "type": "string"
          },
          "maxScreenWidth": {
            "description": "If set, the responsive HTML version of the signing document will only display on screens with the specified pixel width or less. If the screen is larger than the value that you specify, the default PDF version of the content displays instead.\n\nThis setting can also be configured at the account level.\n",
            "type": "string"
          },
          "removeEmptyTags": {
            "description": "Holds a comma-separated list of HTML tags to remove if they have no text within their node (including child nodes).",
            "type": "string"
          },
          "showMobileOptimizedToggle": {
            "description": "When **true** (the default), the **Mobile-Friendly** toggle displays at the top of the screen on the user's mobile device. When **false,** the toggle will not be displayed.\n\nthe **Mobile-Friendly** toggle lets the user switch between the mobile-friendly and the PDF versions of a document. For example, the recipient can use this toggle to review the document using the PDF view before they finish signing.\n",
            "type": "string"
          },
          "source": {
            "description": "Specifies the type of responsive signing that will be used with the document.\n\nIf the value of this property is valid HTML,\nand the [smart sections feature][] is enabled,\nthe HTML code is used to display the signing page:\n\n```\nsource: \"<html> ... <body><p>hello world</p></body></html>\"\n```\n\nIf the value of this property is the string `document`,\nthe HTML signing page is generated from the provided document.\n\n```\nsource: \"document\"\n```\n\n**Related topics**\n\n- [How to create a signable HTML document](/docs/esign-rest-api/how-to/creating-signable-html/)\n- [How to convert a PDF file into a signable HTML document](/docs/esign-rest-api/how-to/converting-pdf/)\n- [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)\n\n\n[smart sections feature]: https://support.docusign.com/s/document-item?language=en_US&bundleId=gbo1643332197980&topicId=qlx1578456478178.html&_LANG=enus",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "documentHtmlDefinition",
        "x-ms-summary": "Holds the properties that define how to generate the responsive-formatted HTML for the document.\nSee [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)\nin the [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/)."
      },
      "documentHtmlDisplayAnchor": {
        "description": "",
        "properties": {
          "caseSensitive": {
            "description": "When **true,** the start or end anchor strings must match the strings specified by the start and end anchor settings in case as well as in content.",
            "type": "boolean"
          },
          "displaySettings": {
            "$ref": "#/$defs/documentHtmlDisplaySettings"
          },
          "endAnchor": {
            "description": "Specifies the end of the area in the HTML where the display settings will be applied. If you do not specify an end anchor, the end of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
            "type": "string"
          },
          "removeEndAnchor": {
            "description": "When **true,** removes the end anchor string for the Smart Section from the HTML, preventing it from displaying.",
            "type": "boolean"
          },
          "removeStartAnchor": {
            "description": "When **true,** removes the start anchor string for the Smart Section from the HTML, preventing it from displaying.",
            "type": "boolean"
          },
          "startAnchor": {
            "description": "Specifies the beginning of the area in the HTML where the display settings will be applied. If you do not specify a start anchor, the beginning of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "documentHtmlDisplayAnchor",
        "x-ms-summary": ""
      },
      "documentHtmlDisplaySettings": {
        "description": "This object defines how to display the HTML\nbetween the `startAnchor` and `endAnchor`.",
        "properties": {
          "cellStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on responsive table cells. Only valid in display sections of `responsive_table` or `responsive_table_single_column` types.",
            "type": "string"
          },
          "collapsibleSettings": {
            "$ref": "#/$defs/documentHtmlCollapsibleDisplaySettings"
          },
          "display": {
            "description": "Sets the display and behavior properties. Possible  values are:\n\n- `inline`:\n  Leaves the HTML where it is in the document.\n  This property lets you add a label or present on a separate page.\n\n- `collapsible`:\n  The HTML in this section may be expanded or collapsed.\n  Initially this section is expanded.\n\n- `collapsed`:\n  The HTML in this section may be expanded or collapsed.\n  Initially this section is collapsed.\n\n- `continue_button`:\n  Creates a stop point in the document to draw the reader's\n  attention before proceeding to the next section.\n\n- `responsive_table`:\n  Turns this section into a responsive table.\n  Note that this is only used on HTML tables that fall within the anchor start and end positions.\n\n- `responsive_table_single_column`:\n  Turns this section into a responsive single-column table.\n  Note this is only used on HTML tables that fall within the anchor start and end positions.\n  The table will be converted to one single column where each current column will become a row, then stacked.\n\n- `print_only`:\n  Do not show this portion of the HTML in the responsive signing view.\n\n\n",
            "type": "string"
          },
          "displayLabel": {
            "description": "The label to add to this display section in the signing page.\n",
            "type": "string"
          },
          "displayOrder": {
            "description": "The position on the page where the display section appears.",
            "format": "int32",
            "type": "integer"
          },
          "displayPageNumber": {
            "description": "The number of the page on which the display section appears.",
            "format": "int32",
            "type": "integer"
          },
          "hideLabelWhenOpened": {
            "description": "When **true,** the `displayLabel` is hidden when the display section is expanded and the display section is no longer collapsible. This property is valid only when the value of the `display` property is `collapsed`.",
            "type": "boolean"
          },
          "inlineOuterStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on inline display sections. This property is valid only when the value of the `display` property is `inline`.",
            "type": "string"
          },
          "labelWhenOpened": {
            "description": "The label for the display section when it is expanded from a collapsed state. This label displays only on the first opening and is only valid with the value of the `display` property is `collapsed`.",
            "type": "string"
          },
          "preLabel": {
            "description": "Enables you to add descriptive text that appears before a collapsed section or continue button.",
            "type": "string"
          },
          "scrollToTopWhenOpened": {
            "description": "When **true** and the section is expanded,\nthe position of the section-close control\nscrolls to the top of the screen. This property is only valid when the value of the `display` property is `collapsed`.\n",
            "type": "boolean"
          },
          "tableStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on responsive tables. This property is valid only when the value of the `display` property is `responsive_table` or `responsive_table_single_column`.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "documentHtmlDisplaySettings",
        "x-ms-summary": "This object defines how to display the HTML\nbetween the `startAnchor` and `endAnchor`."
      },
      "documentHtmlCollapsibleDisplaySettings": {
        "description": "Display settings for collapsible section.",
        "properties": {
          "arrowClosed": {
            "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the closed state.\n\nOne of the following:\n\n- `up`: In the closed state, the disclosure arrow points up.\n- `down`: In the closed state, the disclosure arrow points down.\n- `left`: In the closed state, the disclosure arrow points left.\n- `right`: In the closed state, the disclosure arrow points right.\n",
            "type": "string"
          },
          "arrowColor": {
            "description": "A CSS color value (such as `#DCF851`) that indicates the color of the arrow.\n",
            "type": "string"
          },
          "arrowLocation": {
            "description": "The location of the arrow relative to the collapsible section's label. Possible values are:\n\n- `right` (default)\n- `left`\n",
            "type": "string"
          },
          "arrowOpen": {
            "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the open state.\n\nOne of the following:\n\n- `up`: In the open state, the disclosure arrow points up.\n- `down`: In the open state, the disclosure arrow points down.\n- `left`: In the open state, the disclosure arrow points left.\n- `right`: In the open state, the disclosure arrow points right.\n",
            "type": "string"
          },
          "arrowSize": {
            "description": "Indicates the size of the collapsible arrows. Possible values are:\n\n- `small`\n- `large` (default)\n",
            "type": "string"
          },
          "arrowStyle": {
            "description": "The name of the CSS style to be used on collapsible arrow section.\n",
            "type": "string"
          },
          "containerStyle": {
            "description": "The name of the CSS style to be used for the collapsible container.\n",
            "type": "string"
          },
          "labelStyle": {
            "description": "The name of the CSS style to be used for the collapsible container's label.",
            "type": "string"
          },
          "onlyArrowIsClickable": {
            "description": "When **true,** only the arrow is clickable to expand or collapse the section.\nWhen **false** (the default), both the label and the arrow are clickable.\n\nIf no arrow is used, this setting is ignored.\n",
            "type": "boolean"
          },
          "outerLabelAndArrowStyle": {
            "description": "The name of the CSS style to be used for the collapsible container's outer label and arrow style.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "documentHtmlCollapsibleDisplaySettings",
        "x-ms-summary": "Display settings for collapsible section."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://www.docusign.net/restapi/v2.1/accounts/{accountId}/templates/{templateId}/responsive_html_preview"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            "**htmlDefinitions**: Holds the properties that define how to generate the responsive-formatted HTML for the document."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The code associated with the error condition.",
            "**message**: A brief message describing the error condition."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
