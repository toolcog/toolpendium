{
  "name": "Accounts_PostAccounts",
  "description": "Creates new DocuSign accounts.\nYou can use this method to create\na single account\nor up to 100 accounts at a time.\n\n**Note:**  This method is restricted to partner integrations.\nYou must work with DocuSign Professional Services\nor DocuSign Business Development,\nwho will provide you with the Distributor Code\nand Distributor Password\nthat you need to include in the request body.\n\n\nWhen creating a single account,\nthe body of the request is a\n[`newAccountRequest`][newAccountRequest]\nobject.\n\nExample:\n\n```\n{\n  \"newAccountRequest\": [\n    {\n      \"accountName\":\"Test Account\",\n      \"distributorCode\":\"MY_DIST_CODE\",\n      \"distributorPassword\":\"MY_DIST_PWD\",\n      \"initialUser\":{\n        \"email\":\"user@emaildomain.com\",\n        \"firstName\":\"John\",\n        \"middleName\": \"Harry\",\n        \"lastName\":\"Doe\",\n        \"suffixName\": \"\",\n        \"userName\": \"John Doe\",\n        \"jobTitle\": \"Engineer\",\n        \"company\": \"Test Company\"\n      },\n      \"addressInformation\":{\n        \"address1\": \"1234 Main Street\",\n        \"address2\": \"Suite 100\",\n        \"city\": \"Seattle\",\n        \"state\": \"WA\",\n        \"postalCode\": \"98101\",\n        \"country\": \"US\",\n        \"phone\": \"1234567890\",\n        \"fax\": \"1234567891\"\n      },\n      \"planInformation\":{\n        \"planId\":\"37085696-xxxx-xxxx-xxxx-7ea067752959\"\n      },\n      \"referralInformation\":{\n        \"includedSeats\": \"1\",\n        \"referralCode\": \"code\",\n        \"referrerName\": \"name\"\n      }\n    }\n  ]\n}\n\n```\nIf the request succeeds,\nit returns a\n201 (Created) HTTP response code.\nThe response returns the new account ID, password, and the default user\ninformation for each newly created account.\n\n\nWhen creating multiple accounts,\nthe body of the request is a\n`newAccountRequests`\nobject,\nwhich contains one or more\n[`newAccountDefinition`][newAccountDefinition]\nobjects.\nYou can create up to 100 new accounts\nat a time this way.\n\nThe body for a multi-account\ncreation request\nlooks like this in JSON:\n\n```\n{\n  \"newAccountRequests\": [\n    {\n      \"accountName\": \"accountone\",\n      . . .\n    },\n    {\n      \"accountName\": \"accounttwo\",\n      . . .\n    }\n  ]\n}\n```\n\nA multi-account request\nlooks like this in XML:\n\n```\n<newAccountsDefinition xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.docusign.com/restapi\">\n  <newAccountRequests>\n    <newAccountDefinition>\n      . . .\n    </newAccountDefinition>\n    <newAccountDefinition>\n      . . .\n    </newAccountDefinition>\n  </newAccountRequests>\n</newAccountsDefinition>\n```\n\nA multi-account creation request\nmay succeed (report a 201 code)\neven if some accounts could not be created.\nIn this case, the `errorDetails` property\nin the response contains specific information\nabout the failure.\n\n\n\n[newAccountDefinition]: #/definitions/newAccountDefinition\n[nameValue]: #/definitions/nameValue\n[newAccountRequest]: #/definitions/newAccountRequest\n",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/newAccountDefinition"
      }
    },
    "$defs": {
      "newAccountDefinition": {
        "description": "",
        "properties": {
          "accountName": {
            "description": "The account name for the new account.",
            "type": "string"
          },
          "accountSettings": {
            "$ref": "#/$defs/accountSettingsInformation"
          },
          "addressInformation": {
            "$ref": "#/$defs/accountAddress"
          },
          "creditCardInformation": {
            "$ref": "#/$defs/creditCardInformation"
          },
          "directDebitProcessorInformation": {
            "$ref": "#/$defs/directDebitProcessorInformation"
          },
          "distributorCode": {
            "description": "The Distributor Code that you received from DocuSign.",
            "type": "string"
          },
          "distributorPassword": {
            "description": "The password for the `distributorCode`.",
            "type": "string"
          },
          "enablePreAuth": {
            "description": "",
            "type": "string"
          },
          "envelopePartitionId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "initialUser": {
            "$ref": "#/$defs/userInformation"
          },
          "paymentMethod": {
            "description": "The payment method used for the billing plan. Valid values are:\n\n- `NotSupported`\n- `CreditCard`\n- `PurchaseOrder`\n- `Premium`\n- `Freemium`\n- `FreeTrial`\n- `AppStore`\n- `DigitalExternal`\n- `DirectDebit`",
            "type": "string"
          },
          "paymentProcessor": {
            "description": "",
            "type": "string"
          },
          "paymentProcessorInformation": {
            "$ref": "#/$defs/paymentProcessorInformation"
          },
          "planInformation": {
            "$ref": "#/$defs/planInformation"
          },
          "processPayment": {
            "description": "",
            "type": "string"
          },
          "referralInformation": {
            "$ref": "#/$defs/referralInformation"
          },
          "socialAccountInformation": {
            "$ref": "#/$defs/socialAccountInformation"
          },
          "taxExemptId": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "newAccountDefinition",
        "x-ms-summary": ""
      },
      "accountSettingsInformation": {
        "description": "Contains account settings information. Used in requests to set property values. Used in responses to report property values.",
        "properties": {
          "EnvelopeLimitsTotalDocumentSizeAllowedInMB": {
            "description": "",
            "type": "string"
          },
          "EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled": {
            "description": "",
            "type": "string"
          },
          "EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "accessCodeFormat": {
            "$ref": "#/$defs/accessCodeFormat"
          },
          "accountDateTimeFormat": {
            "description": "UTC date/time format for the account.",
            "type": "string"
          },
          "accountDateTimeFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "accountDefaultLanguage": {
            "description": "",
            "type": "string"
          },
          "accountDefaultLanguageMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "accountName": {
            "description": "The name on the account.",
            "type": "string"
          },
          "accountNameMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "accountNotification": {
            "$ref": "#/$defs/accountNotification"
          },
          "accountUISettings": {
            "$ref": "#/$defs/accountUISettings"
          },
          "adoptSigConfig": {
            "description": "When **true,** [Signature Adoption Configuration](https://support.docusign.com/en/guides/ndse-admin-guide-signature-adopt-config) is enabled. \n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "adoptSigConfigMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "advancedCorrect": {
            "description": "When **true,** the Advanced Correction feature is enabled for this account.",
            "type": "string"
          },
          "advancedCorrectMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowAccessCodeFormat": {
            "description": "When **true,** the configured [Access Code Format](/docs/esign-rest-api/reference/accounts/accounts/get/#accessCodeFormat) page is enabled for account administrators.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowAccessCodeFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowAccountManagementGranular": {
            "description": "When **true,** the account can be managed on a per-user basis.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowAccountManagementGranularMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowAccountMemberNameChange": {
            "description": "Boolean that specifies whether member names can be changed in the account.",
            "type": "string"
          },
          "allowAccountMemberNameChangeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowAdvancedRecipientRoutingConditional": {
            "description": "When **true,** [Conditional Routing](https://support.docusign.com/en/guides/ndse-user-guide-conditional-recipients) is enabled for the account as part of DocuSign's Advanced Recipient Routing feature.",
            "type": "string"
          },
          "allowAdvancedRecipientRoutingConditionalMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowAgentNameEmailEdit": {
            "description": "  When **true,** an agent recipient can change the email addresses of recipients later in the signing order.\n",
            "type": "string"
          },
          "allowAgentNameEmailEditMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowAgreementActions": {
            "description": "",
            "type": "string"
          },
          "allowAgreementActionsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowAgreementOrchestrationWorkflows": {
            "description": "",
            "type": "string"
          },
          "allowAgreementOrchestrationWorkflowsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowAutoNavSettings": {
            "description": "  When **true,** auto-navigation can be enabled for this account.\n",
            "type": "string"
          },
          "allowAutoNavSettingsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowAutoTagging": {
            "description": " When **true,** auto-tagging is enabled for the account.",
            "type": "string"
          },
          "allowAutoTaggingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowBulkSend": {
            "description": "When **true,** bulk send functionality is enabled for the account.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowBulkSendMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowCDWithdraw": {
            "description": "When **true,** indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is **false.**\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowCDWithdrawMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowConnectHttpListenerConfigs": {
            "description": "Boolean that specifies whether a Connect configuration can use HTTP listeners.",
            "type": "string"
          },
          "allowConnectOAuthUI": {
            "description": "",
            "type": "string"
          },
          "allowConnectSendFinishLater": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "allowConnectSendFinishLaterMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowConnectUnifiedPayloadUI": {
            "description": "",
            "type": "string"
          },
          "allowConsumerDisclosureOverride": {
            "description": "When **true,**\nthe account has the ability to change the\n[Consumer Disclosure](https://support.docusign.com/en/guides/ndse-admin-guide-legal-disclosure)\nsetting.\n",
            "type": "string"
          },
          "allowConsumerDisclosureOverrideMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowDataDownload": {
            "description": "When **true,** senders can download form data from the envelopes that they send.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "allowDataDownloadMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowDelayedRouting": {
            "description": "\"true\" if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, \"false\" otherwise.",
            "type": "string"
          },
          "allowDelayedRoutingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowDelegatedSigning": {
            "description": "",
            "type": "string"
          },
          "allowDelegatedSigningMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowDocGenDocuments": {
            "description": "",
            "type": "string"
          },
          "allowDocGenDocumentsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowDocumentDisclosures": {
            "description": "Boolean that specifies whether disclosure documents can be included in envelopes.",
            "type": "string"
          },
          "allowDocumentDisclosuresMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowDocumentVisibility": {
            "description": "When **true,** the [Document Visibility](https://support.docusign.com/guides/ndse-user-guide-document-visibility) feature is enabled for the account.\n",
            "type": "string"
          },
          "allowDocumentVisibilityMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowDocumentsOnSignedEnvelopes": {
            "description": "Boolean that specifies whether notifications can include the envelope's signed document.",
            "type": "string"
          },
          "allowDocumentsOnSignedEnvelopesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowEHankoStamps": {
            "description": "When **true,**\n[eHanko stamps](https://support.docusign.com/en/guides/ndse-user-guide-manage-your-stamps)\nare enabled.\n",
            "type": "string"
          },
          "allowEHankoStampsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowENoteEOriginal": {
            "description": "Specifies whether eNote eOriginal integration is enabled.\n",
            "type": "string"
          },
          "allowENoteEOriginalMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowEditingEnvelopesOnBehalfOfOthers": {
            "description": "",
            "type": "string"
          },
          "allowEditingEnvelopesOnBehalfOfOthersMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowEnvelopeCorrect": {
            "description": "When **true,** the envelope correction feature is enabled.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "allowEnvelopeCorrectMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowEnvelopeCustodyTransfer": {
            "description": "Specifies whether the account is able to\nmanage rules that [transfer ownership](https://support.docusign.com/en/guides/ndse-admin-guide-custody-transfer)\nof envelopes within the same account.\n\n\n\n",
            "type": "string"
          },
          "allowEnvelopeCustodyTransferMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowEnvelopeCustomFields": {
            "description": "Specifies whether\n[envelope custom fields](https://support.docusign.com/en/guides/ndse-user-guide-manage-custom-fields)\nare enabled.\n",
            "type": "string"
          },
          "allowEnvelopeCustomFieldsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowEnvelopePublishReporting": {
            "description": "When **true,** envelope publishing reporting is enabled.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "allowEnvelopePublishReportingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowEnvelopeReporting": {
            "description": "Specifies whether the account has access to reports.\n",
            "type": "string"
          },
          "allowEnvelopeReportingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowExpressSignerCertificate": {
            "description": "When **true,** signers are required to use Express Digital Signatures.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "allowExpressSignerCertificateMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowExpression": {
            "description": "If the account plan does not include calculated fields, this setting allows an account to use them.\n\n",
            "type": "string"
          },
          "allowExpressionMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowExtendedSendingResourceFile": {
            "description": "Boolean that specifies whether resource files can be used for extended sending.",
            "type": "string"
          },
          "allowExtendedSendingResourceFileMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowExternalLinkedAccounts": {
            "description": "",
            "type": "string"
          },
          "allowExternalLinkedAccountsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowExternalSignaturePad": {
            "description": "When **true,** the account can\nconfigure and use signature pads for their recipients.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "allowExternalSignaturePadMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowIDVForEUQualifiedSignatures": {
            "description": "",
            "type": "string"
          },
          "allowIDVForEUQualifiedSignaturesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowIDVLevel1": {
            "description": "When **true,** IDV Level 1 is allowed. The default value is **false.**",
            "type": "string"
          },
          "allowIDVLevel1Metadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowIDVLevel2": {
            "description": "",
            "type": "string"
          },
          "allowIDVLevel2Metadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowIDVLevel3": {
            "description": "",
            "type": "string"
          },
          "allowIDVLevel3Metadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowIDVPlatform": {
            "description": "",
            "type": "string"
          },
          "allowIDVPlatformMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowInPerson": {
            "description": "When **true,** the account administrator can enable in-person signing.\n\n**Note:** Only SysAdmin users can change this setting.\n\n",
            "type": "string"
          },
          "allowInPersonElectronicNotary": {
            "description": "Account-level flag that determines the ability to perform In-Person Electronic Notary (IPEN) actions.\n",
            "type": "string"
          },
          "allowInPersonElectronicNotaryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowInPersonMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowManagedStamps": {
            "description": "When **true,** [Managed Stamps](https://support.docusign.com/en/guides/ndse-admin-guide-managed-stamps) are enabled.",
            "type": "string"
          },
          "allowManagedStampsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowManagingEnvelopesOnBehalfOfOthers": {
            "description": "",
            "type": "string"
          },
          "allowManagingEnvelopesOnBehalfOfOthersMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowMarkup": {
            "description": "When **true,** the Document Markup feature is enabled.\n\n**Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.\n",
            "type": "string"
          },
          "allowMarkupMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowMemberTimeZone": {
            "description": "When **true,** account users can set their own\n[time zone settings](https://support.docusign.com/en/articles/How-do-I-modify-time-zone-settings-for-my-account).\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "allowMemberTimeZoneMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowMergeFields": {
            "description": "When **true,** the account can use\n[merge fields](https://support.docusign.com/en/guides/dfs-user-guide-merge-fields-user)\nwith DocuSign for Salesforce.\n",
            "type": "string"
          },
          "allowMergeFieldsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowMultipleBrandProfiles": {
            "description": "Specifies whether the account supports multiple brands.\n",
            "type": "string"
          },
          "allowMultipleBrandProfilesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowMultipleSignerAttachments": {
            "description": "When **true,** recipients can\nupload multiple signer attachments with a single attachment.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowMultipleSignerAttachmentsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowNonUSPhoneAuth": {
            "description": "Specifies whether users can use\ninternational numbers\nfor phone authentication.\n",
            "type": "string"
          },
          "allowNonUSPhoneAuthMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowOcrOfEnvelopeDocuments": {
            "description": "",
            "type": "string"
          },
          "allowOcrOfEnvelopeDocumentsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowOfflineSigning": {
            "description": "When **true,**\n[offline signing](https://support.docusign.com/articles/Offline-access-with-the-DocuSign-Mobile-App-for-iOS-iPad-iPhone-iPod-Touch)\nis enabled for the account.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowOfflineSigningMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowOpenTrustSignerCertificate": {
            "description": "When **true,** senders can use OpenTrust signer certificates.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowOpenTrustSignerCertificateMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowOrganizationDocusignMonitor": {
            "description": "",
            "type": "string"
          },
          "allowOrganizationDocusignMonitorMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowOrganizationDomainUserManagement": {
            "description": "",
            "type": "string"
          },
          "allowOrganizationDomainUserManagementMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowOrganizationSsoManagement": {
            "description": "",
            "type": "string"
          },
          "allowOrganizationSsoManagementMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowOrganizationToUseInPersonElectronicNotary": {
            "description": "Organization-level flag that determines the ability to perform In-Person Electronic Notary (IPEN) actions.\n",
            "type": "string"
          },
          "allowOrganizationToUseInPersonElectronicNotaryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowOrganizationToUseRemoteNotary": {
            "description": "",
            "type": "string"
          },
          "allowOrganizationToUseRemoteNotaryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowOrganizationToUseThirdPartyElectronicNotary": {
            "description": "Org level flag that determines the availability to perform Third Party Notary (3PN) actions.",
            "type": "string"
          },
          "allowOrganizationToUseThirdPartyElectronicNotaryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowOrganizations": {
            "description": "Boolean that specifies whether [DocuSign Admin](/docs/admin-api/) is enabled for the account.",
            "type": "string"
          },
          "allowOrganizationsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowParticipantRecipientType": {
            "description": "",
            "type": "string"
          },
          "allowParticipantRecipientTypeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowPaymentProcessing": {
            "description": "When **true,** payment processing is enabled for the account.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowPaymentProcessingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowPerformanceAnalytics": {
            "description": "",
            "type": "string"
          },
          "allowPerformanceAnalyticsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowPhoneAuthOverride": {
            "description": "Boolean that specifies whether users can override phone authentication.",
            "type": "string"
          },
          "allowPhoneAuthOverrideMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowPhoneAuthentication": {
            "description": "Boolean that specifies whether phone authentication is enabled for the account.",
            "type": "string"
          },
          "allowPhoneAuthenticationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowPrivateSigningGroups": {
            "description": "Reserved for DocuSign. This property returns the value **false** when listing account settings. This property is read-only.",
            "type": "string"
          },
          "allowPrivateSigningGroupsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowRecipientConnect": {
            "description": "",
            "type": "string"
          },
          "allowRecipientConnectMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowReminders": {
            "description": "When **true,**\nan account administrator can to turn on reminders\nand expiration defaults for the account.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "allowRemindersMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowRemoteNotary": {
            "description": "",
            "type": "string"
          },
          "allowRemoteNotaryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowResourceFileBranding": {
            "description": "When **true,**\nresource files can be uploaded in branding.\n",
            "type": "string"
          },
          "allowResourceFileBrandingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSMSDelivery": {
            "description": "",
            "type": "string"
          },
          "allowSMSDeliveryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSafeBioPharmaSignerCertificate": {
            "description": "When **true,**\naccount administrators can\nspecify that signers are\nrequired to use SAFE-BioPharma digital signatures.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "allowSafeBioPharmaSignerCertificateMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowScheduledSending": {
            "description": "\"true\" if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, \"false\" otherwise.",
            "type": "string"
          },
          "allowScheduledSendingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSecurityAppliance": {
            "description": "Boolean that specifies whether a DocuSign Signature Appliance can be used with the account.",
            "type": "string"
          },
          "allowSecurityApplianceMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSendToCertifiedDelivery": {
            "description": "When **true,**\nthe account admin can enable the\nSend to Certified Delivery\nfeature on the account.\n",
            "type": "string"
          },
          "allowSendToCertifiedDeliveryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSendToIntermediary": {
            "description": "When **true,**\nthe account admin can enable the Send to Intermediary\nfeature on the account.\n",
            "type": "string"
          },
          "allowSendToIntermediaryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSendingEnvelopesOnBehalfOfOthers": {
            "description": "",
            "type": "string"
          },
          "allowSendingEnvelopesOnBehalfOfOthersMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowServerTemplates": {
            "description": "When **true,**\nthe account can use templates.\n",
            "type": "string"
          },
          "allowServerTemplatesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSetEmbeddedRecipientStartURL": {
            "description": "",
            "type": "string"
          },
          "allowSetEmbeddedRecipientStartURLMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSharedTabs": {
            "description": "When **true,**\nshared tabs are enabled for the account.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "allowSharedTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSignDocumentFromHomePage": {
            "description": "When **true,** recipients can sign documents from the home page.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowSignDocumentFromHomePageMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSignNow": {
            "description": "When **true,**\nthe account administrator can enable\nthe Sign Now feature.\n",
            "type": "string"
          },
          "allowSignNowMetadata": {
            "description": "Metadata that indicates whether the `allowSignNow` property is editable.\n",
            "type": "string"
          },
          "allowSignatureStamps": {
            "description": "When **true,** Signature Stamps are enabled.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowSignatureStampsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSignerReassign": {
            "description": "When **true,** the recipient of an envelope sent from this account can reassign it to another person.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "allowSignerReassignMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSignerReassignOverride": {
            "description": "When **true,** an account administrator can override the ability of an envelope recipient to reassign it to another person.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowSignerReassignOverrideMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSigningExtensions": {
            "description": "Boolean that specifies whether Signing and App Extensions are allowed.",
            "type": "string"
          },
          "allowSigningExtensionsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSigningGroups": {
            "description": "When **true,** the account allows signing groups. This setting is only shown in responses that list account settings. This property is read-only.",
            "type": "string"
          },
          "allowSigningGroupsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSigningInsights": {
            "description": "",
            "type": "string"
          },
          "allowSigningInsightsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSigningRadioDeselect": {
            "description": "Boolean that specifies whether the account supports radio buttons on tabs [Radio CustomTabType](/docs/esign-soap-api/reference/sending-group/tab/).",
            "type": "string"
          },
          "allowSigningRadioDeselectMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSocialIdLogin": {
            "description": "Deprecated.",
            "type": "string"
          },
          "allowSocialIdLoginMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSupplementalDocuments": {
            "description": "When **true,** this user can include supplemental documents.",
            "type": "string"
          },
          "allowSupplementalDocumentsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowThirdPartyElectronicNotary": {
            "description": "Account level flag that determines the availability to perform Third Party Notary (3PN) actions.",
            "type": "string"
          },
          "allowThirdPartyElectronicNotaryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowTransactionsWorkspace": {
            "description": "",
            "type": "string"
          },
          "allowTransactionsWorkspaceMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowUsersToAccessDirectory": {
            "description": "",
            "type": "string"
          },
          "allowUsersToAccessDirectoryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowValueInsights": {
            "description": "",
            "type": "string"
          },
          "allowValueInsightsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowWebForms": {
            "description": "",
            "type": "string"
          },
          "allowWebFormsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowWhatsAppDelivery": {
            "description": "",
            "type": "string"
          },
          "allowWhatsAppDeliveryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "anchorPopulationScope": {
            "description": "This property determines how template anchor tabs are applied.\n\nValid values are:\n\n- `document`: Anchor tabs are applied only to the document that you specify. \n- `envelope`: Anchor tabs are applied to all of the documents in the envelope associated with the template.\n\n**Note:** When you are using the `anchorPopulationScope` property with a Composite Template, the value `document` is supported only with a single server template and a single inline template.\n\n",
            "type": "string"
          },
          "anchorPopulationScopeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "anchorTagVersionedPlacementEnabled": {
            "description": "Reserved for DocuSign.\n",
            "type": "string"
          },
          "anchorTagVersionedPlacementMetadataEnabled": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "attachCompletedEnvelope": {
            "description": "When **true,** envelope documents are included as a PDF file attachment to \"signing completed\" emails.\n\n**Note:** Only SysAdmin users can change this setting.",
            "type": "string"
          },
          "attachCompletedEnvelopeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "authenticationCheck": {
            "description": "Sets when authentication checks are applied for recipient envelope access. This setting only applies to the following ID checks: \n\n- Phone Authentication\n- SMS Authentication\n- Knowledge-Based ID\n\nThis setting takes one of the following options: \n\n- `initial_access`: The authentication check always applies the first time a recipient accesses the documents. Recipients are not asked to authenticate again when they access the documents from the same browser on the same device. If the recipient attempts to access the documents from a different browser or a different device, the recipient must pass authentication again. Once authenticated, that recipient is not challenged again on the new device or browser. The ability for a recipient to skip authentication for documents is limited to documents sent from the same sending account.\n- `each_access`: Authentication checks apply every time a recipient attempts to access the envelope. However, you can configure the Authentication Expiration setting to allow recipients to skip authentication when they have recently passed authentication by setting a variable time frame.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "authenticationCheckMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "autoNavRule": {
            "description": "Specifies how auto-navigation works.\nValid values are:\n\n- `off`\n- `required_fields`\n- `required_and_blank_fields`\n- `all_fields`\n- `page_then_required_fields`\n- `page_then_required_and_blank_fields`\n- `page_then_all_fields`\n",
            "type": "string"
          },
          "autoNavRuleMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "autoProvisionSignerAccount": {
            "description": "Boolean that specifies whether to automatically provision a user membership in the account for accountless recipients. (Also known as Just-in-Time provisioning.)",
            "type": "string"
          },
          "autoProvisionSignerAccountMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "bccEmailArchive": {
            "description": "Boolean that specifies whether BCC for Email Archive is enabled for the account. BCC for Email Archive allows you to set up an archive email address so that a BCC copy of an envelope is sent only to that address.",
            "type": "string"
          },
          "bccEmailArchiveMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "betaSwitchConfiguration": {
            "description": "Reserved for DocuSign.\n",
            "type": "string"
          },
          "betaSwitchConfigurationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "billingAddress": {
            "$ref": "#/$defs/addressInformation"
          },
          "billingAddressMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "bulkSend": {
            "description": "When **true,** this user can use the bulk send feature for the account.",
            "type": "string"
          },
          "bulkSendActionResendLimit": {
            "description": "",
            "type": "string"
          },
          "bulkSendMaxCopiesInBatch": {
            "description": "",
            "type": "string"
          },
          "bulkSendMaxUnprocessedEnvelopesCount": {
            "description": "",
            "type": "string"
          },
          "bulkSendMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canSelfBrandSend": {
            "description": "When **true,** account administrators can self-brand their sending console through the DocuSign console.",
            "type": "string"
          },
          "canSelfBrandSendMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canSelfBrandSign": {
            "description": "When **true,** account administrators can self-brand their signing console through the DocuSign console.",
            "type": "string"
          },
          "canSelfBrandSignMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canUseSalesforceOAuth": {
            "description": "",
            "type": "string"
          },
          "canUseSalesforceOAuthMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "captureVoiceRecording": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "captureVoiceRecordingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "cfr21SimplifiedSigningEnabled": {
            "description": "",
            "type": "string"
          },
          "cfr21SimplifiedSigningEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "cfrUseWideImage": {
            "description": "Boolean that specifies whether to use a shorter/wider format when generating the CFR Part 11 signature image.",
            "type": "string"
          },
          "cfrUseWideImageMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "checkForMultipleAdminsOnAccount": {
            "description": "",
            "type": "string"
          },
          "checkForMultipleAdminsOnAccountMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "chromeSignatureEnabled": {
            "description": "Boolean that specifies whether the signers of the envelopes from this account use a signature with a DocuSign chrome around it or not.",
            "type": "string"
          },
          "chromeSignatureEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "commentEmailShowMessageText": {
            "description": "When **true,** the text of comments is included in email notifications when a comment is posted.\n\n**Note:**  If the envelope requires additional recipient authentication, comment text is not included.",
            "type": "string"
          },
          "commentEmailShowMessageTextMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "commentsAllowEnvelopeOverride": {
            "description": "When **true** and comments are enabled for the account, senders can disable comments for an envelope through the **Advanced Options** menu that appears during the sending process.",
            "type": "string"
          },
          "commentsAllowEnvelopeOverrideMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "conditionalFieldsEnabled": {
            "description": "When **true,** conditional fields can be used in documents.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "conditionalFieldsEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "consumerDisclosureFrequency": {
            "description": "Speficies how often to display the consumer disclosure.\n\nValid values are:\n\n- `once`: Per account, the supplemental document is displayed once only per `userId`. \n- `always`: Per envelope, the supplemental document is displayed once only per `userId`. \n- `each_access`: Per envelope, the supplemental document is displayed once only per `recipientId`.\n",
            "type": "string"
          },
          "consumerDisclosureFrequencyMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "convertPdfFields": {
            "description": "Boolean that specifies whether to enable PDF form fields to get converted to DocuSign secure fields when the document is added or uploaded to an envelope.",
            "type": "string"
          },
          "convertPdfFieldsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "dataPopulationScope": {
            "description": "Specifies how data is shared for tabs with the same tabLabel. Valid values are:\n\n- `document`: Tabs in a document with the same label populate with the same data.\n- `envelope`: Tabs in all documents in the envelope with the same label populate with the same data.\n\nThis setting applies to the following tab types: \n\n- Check box \n- Company\n- Data field\n- Drop-down list\n- Full name \n- Formula\n- Note\n- Title\n\n**Note:** Only Admin users can change this setting. Changing this setting affects envelopes that have been sent but not completed.                                                                                                                                                                                                                 ",
            "type": "string"
          },
          "dataPopulationScopeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableAutoTemplateMatching": {
            "description": "",
            "type": "string"
          },
          "disableAutoTemplateMatchingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableMobileApp": {
            "description": "When **true,** the mobile app distributor key is prevented from connecting for account users.",
            "type": "string"
          },
          "disableMobileAppMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableMobilePushNotifications": {
            "description": "When **true,** push notifications are disabled for the account.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "disableMobilePushNotificationsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableMobileSending": {
            "description": "When **true,** sending from a mobile application is disabled.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "disableMobileSendingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableMultipleSessions": {
            "description": "When **true,** account users cannot be logged into multiple sessions at the same time.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "disableMultipleSessionsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disablePurgeNotificationsForSenderMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableSignerCertView": {
            "description": "When **true,** signers cannot view certificates of completion.",
            "type": "string"
          },
          "disableSignerCertViewMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableSignerHistoryView": {
            "description": "When **true,** signers cannot view envelope history.",
            "type": "string"
          },
          "disableSignerHistoryViewMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableStyleSignature": {
            "description": "When **true,** the **Select Style** option is hidden from signers and they must draw their signature instead. ",
            "type": "string"
          },
          "disableStyleSignatureMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableUploadSignature": {
            "description": "When **true,** signers cannot upload custom image files of their signature and initials.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "disableUploadSignatureMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableUserSharing": {
            "description": "When **true,** the User Sharing feature is disabled for the account.",
            "type": "string"
          },
          "disableUserSharingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "displayBetaSwitch": {
            "description": "Boolean that specifies whether to display a Beta switch for your app.",
            "type": "string"
          },
          "displayBetaSwitchMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "documentConversionRestrictions": {
            "description": "Sets the account document upload restriction for non-account administrators. Valid values are:\n\n- `no_restrictions`: There are no restrictions on the type of documents that can be uploaded.\n- `allow_pdf_only`: Non-administrators can only upload PDF files.\n- `no_upload`: Non-administrators cannot upload files.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "documentConversionRestrictionsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "documentRetention": {
            "description": "Sets a document retention period, which controls the number of days that DocuSign retains documents after they have reached a completed,declined, or voided state. When document retention is enabled for the account, the default value is `356` days.",
            "type": "string"
          },
          "documentRetentionMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "documentRetentionPurgeTabs": {
            "description": "When **true** and `documentRetention` is set, document fields and metadata are also purged after the document retention period ends. The default value is **false.**\n\n**Note:** Only Admins can change this setting.",
            "type": "string"
          },
          "documentVisibility": {
            "description": "Configures the Document Visibility feature for the account. Valid values are:\n\n- `Off`: Document Visibility is not active for the account.\n- `MustSignToViewUnlessSenderAccount`: Document Visibility is enabled for all envelopes sent from the account. Any member of the sending account can view all of the documents in an envelope.\n- `MustSignToViewUnlessSender`: Document Visibility is enabled for all envelopes sent from the account. Only the sender can view all of the documents in an envelope.\n- `SenderCanSetMustSignToViewUnlessSenderAccount`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents within it are still visible to any member of the sending account.\nVd- `SenderCanSetMustSignToViewUnlessSender`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents in the envelope are visible only to the sender.\n\n**Note:** For this configuration to take effect, `allowDocumentVisibility` must be set to **true.**",
            "type": "string"
          },
          "documentVisibilityMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "dss_EnableProvisioningPenConfiguration_RadminOption": {
            "description": "",
            "type": "string"
          },
          "dss_SIGN_28411_EnableLeavePagePrompt_RadminOption": {
            "description": "",
            "type": "string"
          },
          "dss_SIGN_29182_SlideUpBar_RadminOption": {
            "description": "",
            "type": "string"
          },
          "emailTemplateVersion": {
            "description": "Specifies the version of the email templates used in an account. If new signing is selected in a member's Admin page, the user is updated to the newest version (1.1), the minimum version of email supported for the account.",
            "type": "string"
          },
          "emailTemplateVersionMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableAccessCodeGenerator": {
            "description": "When **true,** enables Access Code Generator on the account.",
            "type": "string"
          },
          "enableAccessCodeGeneratorMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableAdmHealthcare": {
            "description": "",
            "type": "string"
          },
          "enableAdmHealthcareMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableAdvancedPayments": {
            "description": "When **true,** enables Advanced Payments for the account.",
            "type": "string"
          },
          "enableAdvancedPaymentsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableAdvancedPowerForms": {
            "description": "When **true,** enables advanced PowerForms for the account.",
            "type": "string"
          },
          "enableAdvancedPowerFormsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableAgreementActionsForCLM": {
            "description": "",
            "type": "string"
          },
          "enableAgreementActionsForCLMMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableAgreementActionsForESign": {
            "description": "",
            "type": "string"
          },
          "enableAgreementActionsForESignMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableAutoNav": {
            "description": "When **true,** enables the account to set the AutoNav rule setting, which enables a sender to override the auto-navigation setting per envelope.\n\n**Note:** To change this setting, you must be a SysAdmin user or `EnableAutoNavByDSAdmin must be set.",
            "type": "string"
          },
          "enableAutoNavMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableBccDummyLink": {
            "description": "",
            "type": "string"
          },
          "enableBccDummyLinkMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableCalculatedFields": {
            "description": "When **true,** calculated fields are enabled for the account. \n\n**Note:** This setting can be changed only by Admin users, and only if the account-level setting `allowExpression` is set to **true.**",
            "type": "string"
          },
          "enableCalculatedFieldsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableClickPlus": {
            "description": "",
            "type": "string"
          },
          "enableClickPlusConditionalContent": {
            "description": "",
            "type": "string"
          },
          "enableClickPlusConditionalContentMetaData": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableClickPlusCustomFields": {
            "description": "",
            "type": "string"
          },
          "enableClickPlusCustomFieldsMetaData": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableClickPlusCustomStyle": {
            "description": "",
            "type": "string"
          },
          "enableClickPlusCustomStyleMetaData": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableClickPlusDynamicContent": {
            "description": "",
            "type": "string"
          },
          "enableClickPlusDynamicContentMetaData": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableClickPlusMetaData": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableClickwraps": {
            "description": "Boolean that specifies whether clickwraps are enabled in your app. A [clickwrap](/docs/click-api/click101/) is an iframe that you embed in your own website or app.",
            "type": "string"
          },
          "enableClickwrapsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableCombinedPDFDownloadForSBS": {
            "description": "",
            "type": "string"
          },
          "enableCommentsHistoryDownloadInSigning": {
            "description": "",
            "type": "string"
          },
          "enableCommentsHistoryDownloadInSigningMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableContactSuggestions": {
            "description": "",
            "type": "string"
          },
          "enableContactSuggestionsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableCustomerSatisfactionMetricTracking": {
            "description": "When **true,** enables customer satisfaction metric tracking for the account.",
            "type": "string"
          },
          "enableCustomerSatisfactionMetricTrackingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableDSPro": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "enableDSProMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableESignAPIHourlyLimitManagement": {
            "description": "",
            "type": "string"
          },
          "enableESignAPIHourlyLimitManagementMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableEnforceTlsEmailsSettingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableEnvelopeStampingByAccountAdmin": {
            "description": "When **true,** enables the account administrator\nto control envelope stamping for an account\n(stamping the `envelopeId` in the document margins).\n\n**Note:** This setting can be changed only\nby Admin users, and only if the account-level\nsetting `enableEnvelopeStampingByDSAdmin` is set to **true.**",
            "type": "string"
          },
          "enableEnvelopeStampingByAccountAdminMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableEnvelopeStampingByDSAdmin": {
            "description": "When **true,** enables the DocuSign administrator to control envelope stamping for an account (placement of the `envelopeId`).",
            "type": "string"
          },
          "enableEnvelopeStampingByDSAdminMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableEsignCommunities": {
            "description": "",
            "type": "string"
          },
          "enableEsignCommunitiesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableIDFxAccountlessSMSAuthForPart11": {
            "description": "",
            "type": "string"
          },
          "enableIDFxAccountlessSMSAuthForPart11Metadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableIDFxIntuitKBA": {
            "description": "",
            "type": "string"
          },
          "enableIDFxIntuitKBAMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableIDFxPhoneAuthentication": {
            "description": "",
            "type": "string"
          },
          "enableIDFxPhoneAuthenticationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableIdfxPhoneAuthSignatureAuthStatus": {
            "description": "",
            "type": "string"
          },
          "enableIdfxPhoneAuthSignatureAuthStatusMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableInBrowserEditor": {
            "description": "",
            "type": "string"
          },
          "enableInBrowserEditorMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableKeyTermsSuggestionsByDocumentType": {
            "description": "",
            "type": "string"
          },
          "enableKeyTermsSuggestionsByDocumentTypeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enablePDFAConversion": {
            "description": "",
            "type": "string"
          },
          "enablePDFAConversionMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableParticipantRecipientSettingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enablePaymentProcessing": {
            "description": "When **true,** payment processing is enabled for this account.\n\n**Note:** This setting can be changed only by Admin users, and only if the account-level setting `allowPaymentProcessing` is set.",
            "type": "string"
          },
          "enablePaymentProcessingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enablePowerForm": {
            "description": "When **true,** enables PowerForms for the account.\n\n**Note:** Only SysAdmin users can change this setting.",
            "type": "string"
          },
          "enablePowerFormDirect": {
            "description": "When **true,** enables direct PowerForms for an account. Direct PowerForms are in-session PowerForms.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "enablePowerFormDirectMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enablePowerFormMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableRecipientDomainValidation": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "enableRecipientDomainValidationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableRecipientMayProvidePhoneNumber": {
            "description": "",
            "type": "string"
          },
          "enableRecipientMayProvidePhoneNumberMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableReportLinks": {
            "description": "Enables direct links to envelopes in reports for administrators in the following scopes:\n- `NoEnvelopes`\n- `AllEnvelopes`\n- `OnlyOwnEnvelopes`",
            "type": "string"
          },
          "enableReportLinksMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableRequireSignOnPaper": {
            "description": "When **true,** the account can use the `requireSignOnPaper` option.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "enableRequireSignOnPaperMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableReservedDomain": {
            "description": "When **true,** account administrators can reserve a web domain and users. Domains are organization-specific reserved internet domains, such as `@exampledomain.com`. You can define policy settings for users of each reserved domain within your organization, export lists of domain users for audit purposes, and manage domain users.\n\n- Domains may be claimed by an organization.\n- When a domain is claimed by an organization, all users within that domain are added to the organization, even if they have trial or free accounts.\n- You can set domain controls for all users of the domain.\n- You can export information about your organization’s users that are associated with your reserved domains.\n\n**Note:** Only SysAdmin users can change this setting.",
            "type": "string"
          },
          "enableReservedDomainMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableResponsiveSigning": {
            "description": "When **true,** enables responsive signing.",
            "type": "string"
          },
          "enableResponsiveSigningMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSMSAuthentication": {
            "description": "When **true,** the account can use SMS authentication.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "enableSMSAuthenticationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSMSDeliveryAdditionalNotification": {
            "description": "",
            "type": "string"
          },
          "enableSMSDeliveryAdditionalNotificationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSMSDeliveryPrimary": {
            "description": "",
            "type": "string"
          },
          "enableScheduledRelease": {
            "description": "When **true,** scheduled releases are enabled. The default value is **false.**",
            "type": "string"
          },
          "enableScheduledReleaseMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSearch": {
            "description": "",
            "type": "string"
          },
          "enableSearchMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSearchSiteSpecificApi": {
            "description": "",
            "type": "string"
          },
          "enableSearchSiteSpecificApiMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSearchUI": {
            "description": "",
            "type": "string"
          },
          "enableSearchUIMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSendToAgent": {
            "description": "When **true,** this account can use the Agent recipient type.\n\n**Note:** Only SysAdmin users can change this setting.\n",
            "type": "string"
          },
          "enableSendToAgentMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSendToIntermediary": {
            "description": "When **true,** this account can use the Intermediary recipient type.\n\n**Note:** Only Admin users can change this setting, and only if `allowSendToIntermediary` is set.\n",
            "type": "string"
          },
          "enableSendToIntermediaryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSendToManage": {
            "description": "When **true,** this account can use the Editor recipient type.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "enableSendToManageMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSendingTagsFontSettings": {
            "description": "When **true,** enables fonts to be set on tags for the account.",
            "type": "string"
          },
          "enableSendingTagsFontSettingsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSequentialSigningAPI": {
            "description": "When **true,** the account can define the routing\norder of recipients for envelopes sent by using the eSignature API.\n\n**Note:** Only SysAdmin users can change this setting.",
            "type": "string"
          },
          "enableSequentialSigningAPIMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSequentialSigningUI": {
            "description": "When **true,** the account can define the routing order\nof recipients for envelopes sent by using the DocuSign application.\n\n**Note:** Only SysAdmin users can change this setting.\n",
            "type": "string"
          },
          "enableSequentialSigningUIMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSignOnPaper": {
            "description": "When **true,** a sender can allow signers to use the sign on paper option.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "enableSignOnPaperMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSignOnPaperOverride": {
            "description": "When **true,** a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "enableSignOnPaperOverrideMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSignWithNotary": {
            "description": "When **true,** Sign with Notary functionality is enabled for the account.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "enableSignWithNotaryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSignerAttachments": {
            "description": "When **true,** users can use the signing attachments feature to request attachments from signers.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "enableSignerAttachmentsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSigningExtensionComments": {
            "description": "When **true,** enables comments for the account so that signers and recipients can make and respond to comments in documents belonging to the envelopes that they are sent.",
            "type": "string"
          },
          "enableSigningExtensionCommentsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSigningExtensionConversations": {
            "description": "When **true,** enables conversation functionality.",
            "type": "string"
          },
          "enableSigningExtensionConversationsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSigningOrderSettingsForAccount": {
            "description": "When **true,** switches Signing Order to On by default for new envelopes.",
            "type": "string"
          },
          "enableSigningOrderSettingsForAccountMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSmartContracts": {
            "description": "When **true,** blockchain-based [Smart Contracts](https://www.docusign.com/products/blockchain) are enabled. The default value is **false.**",
            "type": "string"
          },
          "enableSmartContractsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSocialIdLogin": {
            "description": "Deprecated.",
            "type": "string"
          },
          "enableSocialIdLoginMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableStrikeThrough": {
            "description": "When **true,** enables strikethrough formatting in documents.",
            "type": "string"
          },
          "enableStrikeThroughMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableTransactionPoint": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "enableTransactionPointMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableVaulting": {
            "description": "When **true,** Vaulting is enabled for the account.",
            "type": "string"
          },
          "enableVaultingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableWitnessing": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "enableWitnessingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enforceTemplateNameUniqueness": {
            "description": "When **true,** the template name must be unique.",
            "type": "string"
          },
          "enforceTemplateNameUniquenessMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enforceTlsEmails": {
            "description": "",
            "type": "string"
          },
          "enforceTlsEmailsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "envelopeIntegrationAllowed": {
            "description": "Shows the envelope integration rule for the account, which indicates whether custom admins can enable Connect for their accounts. Enumeration values are: \n\n- `not_allowed`\n- `full` \n\n**Note:** Only SysAdmin users can change this setting.                                                                                 ",
            "type": "string"
          },
          "envelopeIntegrationAllowedMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "envelopeIntegrationEnabled": {
            "description": "When **true,** enables Connect for an account. Note that Connect integration requires additional configuration that must be set up for it to take effect; this switch is only the on/off control for the account.\n\n**Note:** Only Admin users can change this setting, and only when `envelopeIntegrationAllowed` is set.",
            "type": "string"
          },
          "envelopeIntegrationEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "envelopeSearchMode": {
            "description": "",
            "type": "string"
          },
          "envelopeSearchModeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "envelopeStampingDefaultValue": {
            "description": "When **true,** envelopes sent by this account automatically have the envelope ID stamped in the document margins, unless the sender selects not to have the documents stamped.",
            "type": "string"
          },
          "envelopeStampingDefaultValueMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "exitPrompt": {
            "description": "",
            "type": "string"
          },
          "exitPromptMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "expressSend": {
            "description": "Boolean that specifies whether a member of an account can express send (without tags) or must send with tags on documents.",
            "type": "string"
          },
          "expressSendAllowTabs": {
            "description": "Boolean that specifies whether a member of an account can send templates without the tags being stripped out, even when the account is configured to let its users express send only (they cannot use the tagger).",
            "type": "string"
          },
          "expressSendAllowTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "expressSendMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "externalDocumentSources": {
            "$ref": "#/$defs/externalDocumentSources"
          },
          "externalSignaturePadType": {
            "description": "Specifies the signature pad type.\nValid values are:\n\n- `none`\n- `topaz`\n- `e_padv9`\n- `e_pad_integrisign`\n- `topaz_sigplusextlite`\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "externalSignaturePadTypeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "faxOutEnabled": {
            "description": "When **true,** fax delivery to recipients is allowed for the account.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "faxOutEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "finishReminder": {
            "description": "",
            "type": "string"
          },
          "finishReminderMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "guidedFormsHtmlAllowed": {
            "description": "When **true,** HTML used to implement [Guided Forms](https://www.docusign.com/products/guided-forms) is enabled for the account.",
            "type": "string"
          },
          "guidedFormsHtmlAllowedMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "guidedFormsHtmlConversionPolicy": {
            "description": "",
            "type": "string"
          },
          "guidedFormsHtmlConversionPolicyMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "hasRecipientConnectClaimedDomain": {
            "description": "",
            "type": "string"
          },
          "hideAccountAddressInCoC": {
            "description": "Boolean that specifies whether to hide the account address in the Certificate of Completion.",
            "type": "string"
          },
          "hideAccountAddressInCoCMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "hidePricing": {
            "description": "Boolean that specifies whether to hide the pricing functionality for an account.",
            "type": "string"
          },
          "hidePricingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "idCheckConfigurations": {
            "description": "A list of ID check configuration objects.",
            "items": {
              "$ref": "#/$defs/idCheckConfiguration"
            },
            "type": "array"
          },
          "idCheckExpire": {
            "description": "Determines when a user's authentication with the account expires. Valid values are:\n\n- `always`: Users are required to authenticate each time.\n- `variable`: If the authentication for a user is valid and falls within the value for the `idCheckExpireDays` property, the user is not required to authenticate again.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "idCheckExpireDays": {
            "description": "The number of days before user authentication credentials expire. A value of `0` specifies that users must re-authenticate for each new session.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "idCheckExpireDaysMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "idCheckExpireMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "idCheckExpireMinutes": {
            "description": "The number of minutes before user authentication credentials expire.",
            "type": "string"
          },
          "idCheckExpireMinutesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "idCheckRequired": {
            "description": "Indicates if authentication is configured for the account. Valid values are:\n\n- `always`: Authentication checks are performed on every envelope.\n- `never`: Authentication checks are not performed on any envelopes.\n- `optional`: Authentication is configurable per envelope.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "idCheckRequiredMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "identityVerification": {
            "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/en/guides/ndse-user-guide-recipient-authentication) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address).",
            "items": {
              "$ref": "#/$defs/accountIdentityVerificationWorkflow"
            },
            "type": "array"
          },
          "identityVerificationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "idfxKBAAuthenticationOverride": {
            "description": "",
            "type": "string"
          },
          "idfxKBAAuthenticationOverrideMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "idfxPhoneAuthenticationOverride": {
            "description": "",
            "type": "string"
          },
          "idfxPhoneAuthenticationOverrideMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "ignoreErrorIfAnchorTabNotFound": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "ignoreErrorIfAnchorTabNotFoundMetadataEnabled": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "inPersonIDCheckQuestion": {
            "description": "A text field containing the question that an in-person signing host uses to collect personal information from the recipient. The recipient's response to this question is saved and can be viewed in the certificate associated with the envelope.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "inPersonIDCheckQuestionMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "inPersonSigningEnabled": {
            "description": "When **true,** in-person signing is enabled for the account.",
            "type": "string"
          },
          "inPersonSigningEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "inSessionEnabled": {
            "description": "When **true,** the account can send in-session (embedded) envelopes.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "inSessionEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "inSessionSuppressEmails": {
            "description": "When **true,** emails are not sent to the in-session (embedded) recipients on an envelope.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "inSessionSuppressEmailsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "isConnectDocumentFieldsEnabled": {
            "description": "",
            "type": "string"
          },
          "linkedExternalPrimaryAccounts": {
            "description": "",
            "items": {
              "$ref": "#/$defs/linkedExternalPrimaryAccount"
            },
            "type": "array"
          },
          "maxNumberOfCustomStamps": {
            "description": "The maximum number of custom stamps.",
            "type": "string"
          },
          "maximumSigningGroups": {
            "description": "The maximum number of signing groups allowed on the account. The default value is `50`. This setting is only shown in responses that list account settings.\n\n**Note:** Only SysAdmin users can change this setting.",
            "type": "string"
          },
          "maximumSigningGroupsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "maximumUsersPerSigningGroup": {
            "description": "The maximum number of users per signing group. The default value is `50`. This setting is only shown in responses that list account settings.\n\n**Note:** Only SysAdmin users can change this setting.",
            "type": "string"
          },
          "maximumUsersPerSigningGroupMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "mergeMixedModeResults": {
            "description": "",
            "type": "string"
          },
          "mergeMixedModeResultsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "mobileSessionTimeout": {
            "description": "The number of minutes of inactivity before a mobile user is automatically logged out of the system. Valid values are `1` to `120` minutes. The default value is `20` minutes.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "mobileSessionTimeoutMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "numberOfActiveCustomStamps": {
            "description": "The number of active custom stamps associated with the account. DocuSign calculates this number automatically. This property is only visible to the DocuSign account manager.",
            "type": "string"
          },
          "optInMobileSigningV02": {
            "description": "Boolean that specifies whether to opt in for Signing v02 on Mobile Devices functionality.",
            "type": "string"
          },
          "optInMobileSigningV02Metadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "optInUniversalSignatures": {
            "description": "",
            "type": "string"
          },
          "optOutAutoNavTextAndTabColorUpdates": {
            "description": "Boolean that allows envelope senders to opt out of the recipient signing auto-navigation feature and opt out of updating tab font color.",
            "type": "string"
          },
          "optOutAutoNavTextAndTabColorUpdatesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "optOutNewPlatformSeal": {
            "description": "Boolean that specifies whether to allow envelope senders to opt out of using the new platform seal.",
            "type": "string"
          },
          "optOutNewPlatformSealPlatformMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "pdfMaxChunkedUploadPartSize": {
            "description": "",
            "type": "string"
          },
          "pdfMaxChunkedUploadPartSizeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "pdfMaxChunkedUploadTotalSize": {
            "description": "",
            "type": "string"
          },
          "pdfMaxChunkedUploadTotalSizeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "pdfMaxIndividualUploadSize": {
            "description": "",
            "type": "string"
          },
          "pdfMaxIndividualUploadSizeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "phoneAuthRecipientMayProvidePhoneNumber": {
            "description": "When **true,** senders can allow recipients to provide a phone number for the Phone Authentication process.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "phoneAuthRecipientMayProvidePhoneNumberMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "pkiSignDownloadedPDFDocs": {
            "description": "The policy for adding a digital certificate to downloaded, printed, and emailed documents. \n\nPossible values are: \n\n- `no_sign`\n- `no_sign_allow_user_override`\n- `yes_sign` (Specifies that PDF files downloaded from the platform are signed.)\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "pkiSignDownloadedPDFDocsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "readOnlyMode": {
            "description": "",
            "type": "string"
          },
          "readOnlyModeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "recipientSigningAutoNavigationControl": {
            "description": "When **true,** recipients receiving envelopes from this account can override auto-navigation functionality.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "recipientSigningAutoNavigationControlMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "recipientsCanSignOffline": {
            "description": "When **true,**\nrecipients receiving envelopes from this account\ncan sign offline.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "recipientsCanSignOfflineMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "require21CFRpt11Compliance": {
            "description": "When **true,**\nrecipients are required\nto use a 21 CFR part 11-compliant signing experience.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "require21CFRpt11ComplianceMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "requireDeclineReason": {
            "description": "When **true,** signers who decline to sign an envelope sent from this account\nare required to provide a reason for declining.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "requireDeclineReasonMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "requireExternalUserManagement": {
            "description": "When **true,** the account requires external management of users.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "requireExternalUserManagementMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "requireSignerCertificateType": {
            "description": "Sets the Digital Signature certificate requirements for sending envelopes.\nValid values are:\n\n- `none`: A Digital Signature certificate is not required.\n- `docusign_express`: Signers must use a DocuSign Express certificate.\n- `docusign_personal`: Signers must use a DocuSign personal certificate.\n- `safe`\n- `open_trust`: Signers must use an OpenTrust certificate.\n",
            "type": "string"
          },
          "requireSignerCertificateTypeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "rsaVeridAccountName": {
            "description": "The RSA account name.\n\n**Note:**\nOnly Admin users can change this setting. Modifying this value may disrupt\nyour ID Check capability.\nEnsure you have the correct value before changing it.\n",
            "type": "string"
          },
          "rsaVeridPassword": {
            "description": "The password for the RSA account.\n\n\n**Note:**\nOnly Admin users can change this setting. Modifying this value may disrupt\nyour ID Check capability.\nEnsure you have the correct value before changing it.\n",
            "type": "string"
          },
          "rsaVeridRuleset": {
            "description": "The RSA rule set used with the account.\n\n**Note:**\nOnly Admin users can change this setting. Modifying this value may disrupt\nyour ID Check capability.\nEnsure you have the correct value before changing it.\n",
            "type": "string"
          },
          "rsaVeridUserId": {
            "description": "The user ID for the RSA account.\n\n**Note:**\nOnly Admin users can change this setting. Modifying this value may disrupt\nyour ID Check capability.\nEnsure you have the correct value before changing it.\n",
            "type": "string"
          },
          "sbsTransactionLevel": {
            "description": "",
            "type": "string"
          },
          "selfSignedRecipientEmailDocument": {
            "description": "Sets how self-signed documents are presented to the email recipients.\nValid values are:\n\n- `include_pdf`: A PDF of the completed document is attached to the email.\n- `include_link`: A secure link to the self-signed documents is included\n   in the email.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "selfSignedRecipientEmailDocumentMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "selfSignedRecipientEmailDocumentUserOverride": {
            "description": "When **true,** the `selfSignedRecipientEmailDocument` user setting\ncan be set for an individual user.\nThe user setting overrides the account setting.\n\n**Note:** Only Admin users can change this account setting.\n",
            "type": "string"
          },
          "selfSignedRecipientEmailDocumentUserOverrideMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "sendLockoutRecipientNotification": {
            "description": "",
            "type": "string"
          },
          "sendLockoutRecipientNotificationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "sendToCertifiedDeliveryEnabled": {
            "description": "When true,\nthe account can use the\ncertified deliveries recipient type.\n",
            "type": "string"
          },
          "sendToCertifiedDeliveryEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "senderCanSignInEachLocation": {
            "description": "When **true,** a signer can draw their signature in each\nlocation where a sign or initial tab exists. This functionality\nis typically used for mobile signing.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "senderCanSignInEachLocationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "senderMustAuthenticateSigning": {
            "description": "When **true,** a sender who is also a recipient of an envelope\nmust follow the authentication requirements for the envelope.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "senderMustAuthenticateSigningMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "sendingTagsFontColor": {
            "description": "The account-wide default font color to use for the content of the tab.\n\nValid values are:\n\n- `Black`\n- `BrightBlue`\n- `BrightRed`\n- `DarkGreen`\n- `DarkRed`\n- `Gold`\n- `Green`\n- `NavyBlue`\n- `Purple`\n- `White`\n",
            "type": "string"
          },
          "sendingTagsFontColorMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "sendingTagsFontName": {
            "description": "The account-wide default font to be used for the tab value. Supported fonts include:\n\n- `Default`\n- `Arial`\n- `ArialNarrow`\n- `Calibri`\n- `CourierNew`\n- `Garamond`\n- `Georgia`\n- `Helvetica`\n- `LucidaConsole`\n- `MSGothic`\n- `MSMincho`\n- `OCR-A`\n- `Tahoma`\n- `TimesNewRoman`\n- `Trebuchet`\n- `Verdana`",
            "type": "string"
          },
          "sendingTagsFontNameMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "sendingTagsFontSize": {
            "description": "The account-wide default font size used for the information in the tab:\n\n- `Size7`\n- `Size8`\n- `Size9`\n- `Size10`\n- `Size11`\n- `Size12`\n- `Size14`\n- `Size16`\n- `Size18`\n- `Size20`\n- `Size22`\n- `Size24`\n- `Size26`\n- `Size28`\n- `Size36`\n- `Size48`\n- `Size72`",
            "type": "string"
          },
          "sendingTagsFontSizeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "sessionTimeout": {
            "description": "The amount of idle activity time, in minutes, before a user is automatically logged out of the system. The minimum setting is 20 minutes and the maximum setting is 120 minutes.\n",
            "type": "string"
          },
          "sessionTimeoutMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "setRecipEmailLang": {
            "description": "When **true,** senders can set the email language to use for\neach recipient.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "setRecipEmailLangMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "setRecipSignLang": {
            "description": "When **true,**\nsetting a unique language for a recipient\nnot only affects the email language, but also the signing\nlanguage they are presented with. When **false,** only the email will\nbe affected when the sender specifies a unique language for a\nrecipient.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "setRecipSignLangMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "sharedTemplateFolders": {
            "description": "Boolean that specifies whether an account can use Shared Template Folders.",
            "type": "string"
          },
          "sharedTemplateFoldersMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "showCompleteDialogInEmbeddedSession": {
            "description": "Boolean that specifies whether complete dialogs are displayed directly within an application in embedded signing sessions.",
            "type": "string"
          },
          "showCompleteDialogInEmbeddedSessionMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "showConditionalRoutingOnSend": {
            "description": "When **true,** Conditional Routing options display to senders during the sending experience.",
            "type": "string"
          },
          "showConditionalRoutingOnSendMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "showInitialConditionalFields": {
            "description": "Boolean that specifies whether conditional field options are initially displayed (before a user makes entries).",
            "type": "string"
          },
          "showInitialConditionalFieldsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "showLocalizedWatermarks": {
            "description": "Boolean that specifies whether localized watermarks are displayed.",
            "type": "string"
          },
          "showLocalizedWatermarksMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "showMaskedFieldsWhenDownloadingDocumentAsSender": {
            "description": "",
            "type": "string"
          },
          "showMaskedFieldsWhenDownloadingDocumentAsSenderMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "showTutorials": {
            "description": "When **true,**\nshow tutorials.\n",
            "type": "string"
          },
          "showTutorialsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signDateFormat": {
            "description": "The format for the signature date. Valid values are:\n\n- `d/M/yyyy`\n- `dd-MM-yy`\n- `dd-MMM-yy`\n- `dd-MM-yyyy`\n- `dd.MM.yyyy`\n- `dd-MMM-yyyy`\n- `dd MMMM yyyy`\n- `M/d/yyyy`\n- `MM-dd-yyyy`\n- `MM/dd/yyyy`\n- `MM/dd/yy`\n- `MMM-dd-yyyy`\n- `MMM d, yyyy`\n- `MMMM d, yyyy`\n- `yyyy-MM-dd`\n- `yyyy-MMM-dd`\n- `yyyy/MM/dd`\n- `yyyy MMMM d`\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "signDateFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signDateTimeAccountLanguageOverride": {
            "description": "",
            "type": "string"
          },
          "signDateTimeAccountLanguageOverrideMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signDateTimeAccountTimezoneOverride": {
            "description": "",
            "type": "string"
          },
          "signDateTimeAccountTimezoneOverrideMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signTimeFormat": {
            "description": "The format for the signature time. Valid values are:\n\n- `none`\n- `HH:mm`\n- `h:mm`\n- `HH:mm:ss`\n- `h:mm:ss`\n",
            "type": "string"
          },
          "signTimeFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signTimeShowAmPm": {
            "description": "When **true,**\nthe time shows the AM or PM indicator.\n",
            "type": "string"
          },
          "signTimeShowAmPmMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signatureProviders": {
            "description": "Names of electronic or digital signature providers that can be used.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "signatureProvidersMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signerAttachCertificateToEnvelopePDF": {
            "description": "When **true,**\nthe Certificate of Completion is included in the PDF of the envelope documents\nwhen it is downloaded.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "signerAttachCertificateToEnvelopePDFMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signerAttachConcat": {
            "description": "When **true,** signer attachments are added to the parent document\nthat contains the attachment.\nThe default behavior creates\na new document in the envelope for every signer attachment.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "signerAttachConcatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signerCanCreateAccount": {
            "description": "When **true,**\na signer can create a DocuSign account\nafter signing.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "signerCanCreateAccountMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signerCanSignOnMobile": {
            "description": "When **true,** recipients can sign on a mobile device.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "signerCanSignOnMobileMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signerInSessionUseEnvelopeCompleteEmail": {
            "description": "When **true,** an \"envelope complete\" email is sent to an in-session\n(embedded) or offline signer after DocuSign processes the envelope\nif in-session emails are not suppressed.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "signerInSessionUseEnvelopeCompleteEmailMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signerLoginRequirements": {
            "description": "Sets the login requirements for signers. Valid values are:\n\n- `login_not_required`: Signers are not required to log in.\n- `login_required_if_account_holder`: If the signer has a DocuSign account,\n  they must log in to sign the document.\n- `login_required_per_session`: The sender cannot send an envelope to anyone\n  who does not have a DocuSign account.\n- `login_required_per_envelope`: The sender cannot send an envelope to anyone\n  who does not have a DocuSign account, and the signer must also log in for\n  each envelope they will sign.\n\n\n**Note:** Only Admin users can change this setting. If you use Direct PowerForms\nor captive (embedded signers), the \"Account required\" settings are bypassed for\nthose signers. If your workflow requires that the signer have an account,\nyou should not use those methods.\n",
            "type": "string"
          },
          "signerLoginRequirementsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signerMustHaveAccount": {
            "description": "When **true,** senders can only send an envelope to a recipient\nthat has a DocuSign account.\n\n**Note:** Only Account Administrators can change this setting.\n",
            "type": "string"
          },
          "signerMustHaveAccountMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signerMustLoginToSign": {
            "description": "When **true,**\nsigners must log in to the DocuSign platform to sign an envelope.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "signerMustLoginToSignMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signerShowSecureFieldInitialValues": {
            "description": "When **true,** the initial values of all SecureFields are written\nto the document when it is sent.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "signerShowSecureFieldInitialValuesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signingSessionTimeout": {
            "description": "The number of minutes\nthat a signing session stays\nalive without any activity.\n",
            "type": "string"
          },
          "signingSessionTimeoutMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signingUiVersion": {
            "description": "Reserved for DocuSign.\n",
            "type": "string"
          },
          "signingUiVersionMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "simplifiedSendingEnabled": {
            "description": "When **true,** simplified sending is enabled for the account. The default value is **false.**",
            "type": "string"
          },
          "simplifiedSendingEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "singleSignOnEnabled": {
            "description": "When **true,**\nsingle sign-on (SSO) is enabled.\n",
            "type": "string"
          },
          "singleSignOnEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "skipAuthCompletedEnvelopes": {
            "description": "When **true,**\ndo not require authentication prompt for viewing completed envelopes\n",
            "type": "string"
          },
          "skipAuthCompletedEnvelopesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "socialIdRecipAuth": {
            "description": "When **true,**\nrecipients can use\n[social ids](https://support.docusign.com/guides/signer-authentication)\nwhen signing\n",
            "type": "string"
          },
          "socialIdRecipAuthMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "specifyDocumentVisibility": {
            "description": "When **true,** senders can specify the visibility of the documents in an envelope at the recipient level.\n",
            "type": "string"
          },
          "specifyDocumentVisibilityMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "startInAdvancedCorrect": {
            "description": "When **true,**\nwhen initiating correction of an in-flight envelope\nthe sender starts in advanced correct mode.\n",
            "type": "string"
          },
          "startInAdvancedCorrectMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "supplementalDocumentsMustAccept": {
            "description": "When **true,** account users must accept supplemental documents when signing.",
            "type": "string"
          },
          "supplementalDocumentsMustAcceptMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "supplementalDocumentsMustRead": {
            "description": "When **true,** account users must both view and accept supplemental documents when signing.",
            "type": "string"
          },
          "supplementalDocumentsMustReadMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "supplementalDocumentsMustView": {
            "description": "When **true,** account users must view supplemental documents when signing.",
            "type": "string"
          },
          "supplementalDocumentsMustViewMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "suppressCertificateEnforcement": {
            "description": "Boolean that specifies whether or not API calls require a x509 cert in the header of the call.",
            "type": "string"
          },
          "suppressCertificateEnforcementMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "tabAccountSettings": {
            "$ref": "#/$defs/tabAccountSettings"
          },
          "timezoneOffsetAPI": {
            "description": "Specifies the time zone\nto use with the API.\n\nValid values are:\n\n- `TZ_01_AfghanistanStandardTime`\n- `TZ_02_AlaskanStandardTime`\n- `TZ_03_ArabStandardTime`\n- `TZ_04_ArabianStandardTime`\n- `TZ_05_ArabicStandardTime`\n- `TZ_06_ArgentinaStandardTime`\n- `TZ_07_AtlanticStandardTime`\n- `TZ_08_AUS_CentralStandardTime`\n- `TZ_09_AUS_EasternStandardTime`\n- `TZ_10_AzerbaijanStandardTime`\n- `TZ_11_AzoresStandardTime`\n- `TZ_12_BangladeshStandardTime`\n- `TZ_13_CanadaCentralStandardTime`\n- `TZ_14_CapeVerdeStandardTime`\n- `TZ_15_CaucasusStandardTime`\n- `TZ_16_CentralAustraliaStandardTime`\n- `TZ_17_CentralAmericaStandardTime`\n- `TZ_18_CentralAsiaStandardTime`\n- `TZ_19_CentralBrazilianStandardTime`\n- `TZ_20_CentralEuropeStandardTime`\n- `TZ_21_CentralEuropeanStandardTime`\n- `TZ_22_CentralPacificStandardTime`\n- `TZ_23_CentralStandardTime`\n- `TZ_24_CentralStandardTimeMexico`\n- `TZ_25_ChinaStandardTime`\n- `TZ_26_DatelineStandardTime`\n- `TZ_27_E_AfricaStandardTime`\n- `TZ_28_E_AustraliaStandardTime`\n- `TZ_29_E_EuropeStandardTime`\n- `TZ_30_E_SouthAmericaStandardTime`\n- `TZ_31_EasternStandardTime`\n- `TZ_32_EgyptStandardTime`\n- `TZ_33_EkaterinburgStandardTime`\n- `TZ_34_FijiStandardTime`\n- `TZ_35_FLE_StandardTime`\n- `TZ_36_GeorgianStandardTime`\n- `TZ_37_GMT_StandardTime`\n- `TZ_38_GreenlandStandardTime`\n- `TZ_39_GreenwichStandardTime`\n- `TZ_40_GTB_StandardTime`\n- `TZ_41_HawaiianStandardTime`\n- `TZ_42_IndiaStandardTime`\n- `TZ_43_IranStandardTime`\n- `TZ_44_IsraelStandardTime`\n- `TZ_45_JordanStandardTime`\n- `TZ_46_KaliningradStandardTime`\n- `TZ_47_KamchatkaStandardTime`\n- `TZ_48_KoreaStandardTime`\n- `TZ_49_MagadanStandardTime`\n- `TZ_50_MauritiusStandardTime`\n- `TZ_51_MidAtlanticStandardTime`\n- `TZ_52_MiddleEastStandardTime`\n- `TZ_53_MontevideoStandardTime`\n- `TZ_54_MoroccoStandardTime`\n- `TZ_55_MountainStandardTime`\n- `TZ_56_MountainStandardTimeMMexico`\n- `TZ_57_MyanmarStandardTime`\n- `TZ_58_N_CentralAsiaStandardTime`\n- `TZ_59_NamibiaStandardTime`\n- `TZ_60_NepalStandardTime`\n- `TZ_61_NewZealandStandardTime`\n- `TZ_62_NewfoundlandStandardTime`\n- `TZ_63_NorthAsiaEastStandardTime`\n- `TZ_64_NorthAsiaStandardTime`\n- `TZ_65_PacificSAStandardTime`\n- `TZ_66_PacificStandardTime`\n- `TZ_67_PacificStandardTimeMexico`\n- `TZ_68_PakistanStandardTime`\n- `TZ_69_ParaguayStandardTime`\n- `TZ_70_RomanceStandardTime`\n- `TZ_71_RussianStandardTime`\n- `TZ_72_SAEasternStandardTime`\n- `TZ_73_SAPacificStandardTime`\n- `TZ_74_SAWesternStandardTime`\n- `TZ_75_SamoaStandardTime`\n- `TZ_76_SE_AsiaStandardTime`\n- `TZ_77_SingaporeStandardTime`\n- `TZ_78_SouthAfricaStandardTime`\n- `TZ_79_SriLankaStandardTime`\n- `TZ_80_SyriaStandardTime`\n- `TZ_81_TaipeiStandardTime`\n- `TZ_82_TasmaniaStandardTime`\n- `TZ_83_TokyoStandardTime`\n- `TZ_84_TongaStandardTime`\n- `TZ_85_TurkeyStandardTime`\n- `TZ_86_UlaanbaatarStandardTime`\n- `TZ_87_US_EasternStandardTime`\n- `TZ_88_USMountainStandardTime`\n- `TZ_89_VenezuelaStandardTime`\n- `TZ_90_VladivostokStandardTime`\n- `TZ_91_W_AustraliaStandardTime`\n- `TZ_92_W_CentralAfricaStandardTime`\n- `TZ_93_W_EuropeStandardTime`\n- `TZ_94_WestAsiaStandardTime`\n- `TZ_95_WestPacificStandardTime`\n- `TZ_96_YakutskStandardTime`\n",
            "type": "string"
          },
          "timezoneOffsetAPIMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "timezoneOffsetUI": {
            "description": "Specifies the time zone\nto use in the UI.\n\nValid values are:\n\n- `TZ_01_AfghanistanStandardTime`\n- `TZ_02_AlaskanStandardTime`\n- `TZ_03_ArabStandardTime`\n- `TZ_04_ArabianStandardTime`\n- `TZ_05_ArabicStandardTime`\n- `TZ_06_ArgentinaStandardTime`\n- `TZ_07_AtlanticStandardTime`\n- `TZ_08_AUS_CentralStandardTime`\n- `TZ_09_AUS_EasternStandardTime`\n- `TZ_10_AzerbaijanStandardTime`\n- `TZ_11_AzoresStandardTime`\n- `TZ_12_BangladeshStandardTime`\n- `TZ_13_CanadaCentralStandardTime`\n- `TZ_14_CapeVerdeStandardTime`\n- `TZ_15_CaucasusStandardTime`\n- `TZ_16_CentralAustraliaStandardTime`\n- `TZ_17_CentralAmericaStandardTime`\n- `TZ_18_CentralAsiaStandardTime`\n- `TZ_19_CentralBrazilianStandardTime`\n- `TZ_20_CentralEuropeStandardTime`\n- `TZ_21_CentralEuropeanStandardTime`\n- `TZ_22_CentralPacificStandardTime`\n- `TZ_23_CentralStandardTime`\n- `TZ_24_CentralStandardTimeMexico`\n- `TZ_25_ChinaStandardTime`\n- `TZ_26_DatelineStandardTime`\n- `TZ_27_E_AfricaStandardTime`\n- `TZ_28_E_AustraliaStandardTime`\n- `TZ_29_E_EuropeStandardTime`\n- `TZ_30_E_SouthAmericaStandardTime`\n- `TZ_31_EasternStandardTime`\n- `TZ_32_EgyptStandardTime`\n- `TZ_33_EkaterinburgStandardTime`\n- `TZ_34_FijiStandardTime`\n- `TZ_35_FLE_StandardTime`\n- `TZ_36_GeorgianStandardTime`\n- `TZ_37_GMT_StandardTime`\n- `TZ_38_GreenlandStandardTime`\n- `TZ_39_GreenwichStandardTime`\n- `TZ_40_GTB_StandardTime`\n- `TZ_41_HawaiianStandardTime`\n- `TZ_42_IndiaStandardTime`\n- `TZ_43_IranStandardTime`\n- `TZ_44_IsraelStandardTime`\n- `TZ_45_JordanStandardTime`\n- `TZ_46_KaliningradStandardTime`\n- `TZ_47_KamchatkaStandardTime`\n- `TZ_48_KoreaStandardTime`\n- `TZ_49_MagadanStandardTime`\n- `TZ_50_MauritiusStandardTime`\n- `TZ_51_MidAtlanticStandardTime`\n- `TZ_52_MiddleEastStandardTime`\n- `TZ_53_MontevideoStandardTime`\n- `TZ_54_MoroccoStandardTime`\n- `TZ_55_MountainStandardTime`\n- `TZ_56_MountainStandardTimeMMexico`\n- `TZ_57_MyanmarStandardTime`\n- `TZ_58_N_CentralAsiaStandardTime`\n- `TZ_59_NamibiaStandardTime`\n- `TZ_60_NepalStandardTime`\n- `TZ_61_NewZealandStandardTime`\n- `TZ_62_NewfoundlandStandardTime`\n- `TZ_63_NorthAsiaEastStandardTime`\n- `TZ_64_NorthAsiaStandardTime`\n- `TZ_65_PacificSAStandardTime`\n- `TZ_66_PacificStandardTime`\n- `TZ_67_PacificStandardTimeMexico`\n- `TZ_68_PakistanStandardTime`\n- `TZ_69_ParaguayStandardTime`\n- `TZ_70_RomanceStandardTime`\n- `TZ_71_RussianStandardTime`\n- `TZ_72_SAEasternStandardTime`\n- `TZ_73_SAPacificStandardTime`\n- `TZ_74_SAWesternStandardTime`\n- `TZ_75_SamoaStandardTime`\n- `TZ_76_SE_AsiaStandardTime`\n- `TZ_77_SingaporeStandardTime`\n- `TZ_78_SouthAfricaStandardTime`\n- `TZ_79_SriLankaStandardTime`\n- `TZ_80_SyriaStandardTime`\n- `TZ_81_TaipeiStandardTime`\n- `TZ_82_TasmaniaStandardTime`\n- `TZ_83_TokyoStandardTime`\n- `TZ_84_TongaStandardTime`\n- `TZ_85_TurkeyStandardTime`\n- `TZ_86_UlaanbaatarStandardTime`\n- `TZ_87_US_EasternStandardTime`\n- `TZ_88_USMountainStandardTime`\n- `TZ_89_VenezuelaStandardTime`\n- `TZ_90_VladivostokStandardTime`\n- `TZ_91_W_AustraliaStandardTime`\n- `TZ_92_W_CentralAfricaStandardTime`\n- `TZ_93_W_EuropeStandardTime`\n- `TZ_94_WestAsiaStandardTime`\n- `TZ_95_WestPacificStandardTime`\n- `TZ_96_YakutskStandardTime`\n",
            "type": "string"
          },
          "timezoneOffsetUIMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "universalSignatureOptIn": {
            "description": "Reserved for DocuSign.\n",
            "type": "string"
          },
          "useAccountLevelEmail": {
            "description": "Reserved for DocuSign.\n",
            "type": "string"
          },
          "useAccountLevelEmailMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "useConsumerDisclosure": {
            "description": "When **true,** the account uses an Electronic Record and\nSignature Disclosure Statement.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "useConsumerDisclosureMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "useConsumerDisclosureWithinAccount": {
            "description": "When **true,** specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.",
            "type": "string"
          },
          "useConsumerDisclosureWithinAccountMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "useDerivedKeys": {
            "description": "Reserved for DocuSign.\n",
            "type": "string"
          },
          "useDerivedKeysMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "useDocuSignExpressSignerCertificate": {
            "description": "When **true,**\nsigners\nare required to use Express Digital Signatures.\n",
            "type": "string"
          },
          "useDocuSignExpressSignerCertificateMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "useEnvelopeSearchMixedMode": {
            "description": "",
            "type": "string"
          },
          "useEnvelopeSearchMixedModeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "useMultiAppGroupsData": {
            "description": "",
            "type": "string"
          },
          "useMultiAppGroupsDataMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "useNewBlobForPdf": {
            "description": "Reserved for DocuSign.\n",
            "type": "string"
          },
          "useNewBlobForPdfMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "useNewEnvelopeSearch": {
            "description": "",
            "type": "string"
          },
          "useNewEnvelopeSearchMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "useSAFESignerCertificates": {
            "description": "When **true,**\nsigners are\nrequired to use SAFE digital signatures.\n",
            "type": "string"
          },
          "useSAFESignerCertificatesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "useSignatureProviderPlatform": {
            "description": "Boolean that specifies whether the account uses the digital signature provider platform to eSign.",
            "type": "string"
          },
          "useSignatureProviderPlatformMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "useSmartContractsV1": {
            "description": "",
            "type": "string"
          },
          "usesAPI": {
            "description": "When **true,**\nthe account can use the API.\n\n**Note:** Only SysAdmin users can change this setting.\n",
            "type": "string"
          },
          "usesAPIMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "validationsAllowed": {
            "description": "Boolean that specifies whether validations on recipient email domains are allowed.",
            "type": "string"
          },
          "validationsAllowedMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "validationsBrand": {
            "description": "Valid values are:\n\n- `docusign`\n- `account`\n",
            "type": "string"
          },
          "validationsBrandMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "validationsCadence": {
            "description": "Valid values are:\n\n- `none`\n- `monthly`\n",
            "type": "string"
          },
          "validationsCadenceMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "validationsEnabled": {
            "description": "When **true,**\nenables validations.\n",
            "type": "string"
          },
          "validationsEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "validationsReport": {
            "description": "Valid values are:\n\n- `none`\n- `life_sciences_part11`\n",
            "type": "string"
          },
          "validationsReportMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "waterMarkEnabled": {
            "description": "When **true,**\nthe\n[watermark feature](https://support.docusign.com/en/articles/How-do-I-manage-the-watermark-for-In-Process-envelopes-sent-from-my-account)\nis enabled for the account.\n",
            "type": "string"
          },
          "waterMarkEnabledMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "writeReminderToEnvelopeHistory": {
            "description": "When **true,**\nsent reminders are included in the envelope history.",
            "type": "string"
          },
          "writeReminderToEnvelopeHistoryMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "wurflMinAllowableScreenSize": {
            "description": "The smallest screen allowed.",
            "type": "string"
          },
          "wurflMinAllowableScreenSizeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "accountSettingsInformation",
        "x-ms-summary": "Contains account settings information. Used in requests to set property values. Used in responses to report property values."
      },
      "settingsMetadata": {
        "description": "Metadata that indicates whether a property is editable and describes setting-specific options.",
        "properties": {
          "is21CFRPart11": {
            "description": "When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).",
            "type": "string"
          },
          "options": {
            "description": "An array of option strings supported by this setting.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "rights": {
            "description": "Indicates whether the property is editable. Valid values are:\n\n- `editable`\n- `read_only`",
            "type": "string"
          },
          "uiHint": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "uiOrder": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "uiType": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "settingsMetadata",
        "x-ms-summary": "Metadata that indicates whether a property is editable and describes setting-specific options."
      },
      "accessCodeFormat": {
        "description": "Object specifying the format of the string provided to a recipient in order to access an envelope.",
        "properties": {
          "formatRequired": {
            "description": "Boolean specifying whether this format configuration is required.",
            "type": "string"
          },
          "formatRequiredMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "letterRequired": {
            "description": "Boolean specifying whether alphabetical characters are required in the access code string.",
            "type": "string"
          },
          "letterRequiredMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "minimumLength": {
            "description": "Minimum length of the access code string.",
            "type": "string"
          },
          "minimumLengthMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "numberRequired": {
            "description": "Boolean specifying whether numerical characters (0-9) are required in the access code string.",
            "type": "string"
          },
          "numberRequiredMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "specialCharacterRequired": {
            "description": "Boolean specifying whether special characters are required in the access code string. The string cannot contain the special characters '<', '>', '&', or '#'.",
            "type": "string"
          },
          "specialCharacterRequiredMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "accessCodeFormat",
        "x-ms-summary": "Object specifying the format of the string provided to a recipient in order to access an envelope."
      },
      "accountNotification": {
        "description": "A complex element that specifies notifications (expirations and reminders) for the envelope.",
        "properties": {
          "expirations": {
            "$ref": "#/$defs/expirations"
          },
          "reminders": {
            "$ref": "#/$defs/reminders"
          },
          "userOverrideEnabled": {
            "description": "When **true,** the user can override envelope expirations.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "accountNotification",
        "x-ms-summary": "A complex element that specifies notifications (expirations and reminders) for the envelope."
      },
      "expirations": {
        "description": "A complex element that specifies the expiration settings for the envelope. When an envelope expires, it is voided and no longer available for signing. **Note:** there is a short delay between when the envelope expires and when it is voided.\n",
        "properties": {
          "expireAfter": {
            "description": "An integer that sets the number of days the envelope is active. For this value to be used, `expireEnabled` must be explicitly set to **true.**",
            "type": "string"
          },
          "expireEnabled": {
            "description": "When **true,** the envelope expires in the number of days set by `expireAfter`. When **false** or not set, the envelope expires in the number of days specified by the [default expiration account setting](https://support.docusign.com/en/guides/ndse-admin-guide-reminders-and-expirations).",
            "type": "string"
          },
          "expireWarn": {
            "description": "An integer that specifying the number of days before the envelope expires that an expiration warning email is sent to the recipient. When 0 (zero), no warning email is sent.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "expirations",
        "x-ms-summary": "A complex element that specifies the expiration settings for the envelope. When an envelope expires, it is voided and no longer available for signing. **Note:** there is a short delay between when the envelope expires and when it is voided.\n"
      },
      "reminders": {
        "description": "A complex element that specifies reminder settings for the envelope.",
        "properties": {
          "reminderDelay": {
            "description": "An integer specifying the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. The default value is 0.",
            "type": "string"
          },
          "reminderEnabled": {
            "description": "When **true,** reminders are enabled. The default value is **false.**",
            "type": "string"
          },
          "reminderFrequency": {
            "description": "An integer specifying the interval in days between reminder emails. The default value is 0.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "reminders",
        "x-ms-summary": "A complex element that specifies reminder settings for the envelope."
      },
      "accountUISettings": {
        "description": "An object that defines the options that are available to non-administrators in the UI.",
        "properties": {
          "adminMessage": {
            "$ref": "#/$defs/adminMessage"
          },
          "askAnAdmin": {
            "$ref": "#/$defs/askAnAdmin"
          },
          "clickwrapSchemaVersion": {
            "description": "",
            "type": "string"
          },
          "clickwrapSchemaVersionMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableAdminMessage": {
            "description": "",
            "type": "string"
          },
          "enableAdminMessageMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableEasySignCanUseMultiTemplateApply": {
            "description": "",
            "type": "string"
          },
          "enableEasySignCanUseMultiTemplateApplyMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableEasySignTemplateUpload": {
            "description": "",
            "type": "string"
          },
          "enableEasySignTemplateUploadMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableEnvelopeCopyWithData": {
            "description": "",
            "type": "string"
          },
          "enableEnvelopeCopyWithDataMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableLegacySendflowLink": {
            "description": "",
            "type": "string"
          },
          "enableLegacySendflowLinkMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "hasExternalLinkedAccounts": {
            "description": "",
            "type": "string"
          },
          "hasExternalLinkedAccountsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "hideSendAnEnvelope": {
            "description": "",
            "type": "string"
          },
          "hideSendAnEnvelopeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "hideUseATemplate": {
            "description": "When **true,** the **Templates** menu is hidden from account users who are not Admins. The default value is **false.**",
            "type": "string"
          },
          "hideUseATemplateInPrepare": {
            "description": "",
            "type": "string"
          },
          "hideUseATemplateInPrepareMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "hideUseATemplateMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "orderBasedRecipientIdGeneration": {
            "description": "",
            "type": "string"
          },
          "orderBasedRecipientIdGenerationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "removeEnvelopeForwarding": {
            "description": "",
            "type": "string"
          },
          "removeEnvelopeForwardingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "shouldRedactAccessCode": {
            "description": "",
            "type": "string"
          },
          "shouldRedactAccessCodeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "uploadNewImageToSignOrInitial": {
            "description": "",
            "type": "string"
          },
          "uploadNewImageToSignOrInitialMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "accountUISettings",
        "x-ms-summary": "An object that defines the options that are available to non-administrators in the UI."
      },
      "adminMessage": {
        "description": "",
        "properties": {
          "baseMessage": {
            "description": "",
            "type": "string"
          },
          "moreInformation": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "adminMessage",
        "x-ms-summary": ""
      },
      "askAnAdmin": {
        "description": "",
        "properties": {
          "email": {
            "description": "",
            "type": "string"
          },
          "message": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "phone": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "askAnAdmin",
        "x-ms-summary": ""
      },
      "addressInformation": {
        "description": "Contains address information.",
        "properties": {
          "address1": {
            "description": "The first line of the user's address.\nMaximum length: 100 characters.",
            "type": "string"
          },
          "address2": {
            "description": "The second line of the user's address.\nMaximum length: 100 characters.",
            "type": "string"
          },
          "city": {
            "description": "The user's city. Maximum length: 40 characters.",
            "type": "string"
          },
          "country": {
            "description": "The user's country. Maximum length: 50 characters.",
            "type": "string"
          },
          "fax": {
            "description": "A fax number associated with the address, if one is available.",
            "type": "string"
          },
          "phone": {
            "description": "A phone number associated with the address.",
            "type": "string"
          },
          "postalCode": {
            "description": "The user's postal code. Maximum length: 20 characters.",
            "type": "string"
          },
          "stateOrProvince": {
            "description": "The user's state or province. Maximum length: 40 characters.",
            "type": "string"
          },
          "zipPlus4": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "addressInformation",
        "x-ms-summary": "Contains address information."
      },
      "externalDocumentSources": {
        "description": "A complex object specifying the external document sources.",
        "properties": {
          "boxnetEnabled": {
            "description": "The account is enabled to allow external documents to be attached from BoxNet.",
            "type": "string"
          },
          "boxnetMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "dropboxEnabled": {
            "description": "The account is enabled to allow external documents to be attached from DropBox.",
            "type": "string"
          },
          "dropboxMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "googleDriveEnabled": {
            "description": "The account is enabled to allow external documents to be attached from Google Drive.",
            "type": "string"
          },
          "googleDriveMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "oneDriveEnabled": {
            "description": "The account is enabled to allow external documents to be attached from OneDrive.",
            "type": "string"
          },
          "oneDriveMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "salesforceEnabled": {
            "description": "The account is enabled to allow external documents to be attached from Salesforce.",
            "type": "string"
          },
          "salesforceMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "externalDocumentSources",
        "x-ms-summary": "A complex object specifying the external document sources."
      },
      "idCheckConfiguration": {
        "description": "A complex object specifying ID check configuration.",
        "properties": {
          "authSteps": {
            "description": "A list of ID check security steps, each specifying an authorization type.",
            "items": {
              "$ref": "#/$defs/idCheckSecurityStep"
            },
            "type": "array"
          },
          "isDefault": {
            "description": "Boolean that specifies whether the signature is the default signature for the user.",
            "type": "string"
          },
          "name": {
            "description": "The name of the signature.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "idCheckConfiguration",
        "x-ms-summary": "A complex object specifying ID check configuration."
      },
      "idCheckSecurityStep": {
        "description": "",
        "properties": {
          "authType": {
            "description": "Type of authorization used for the security check.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "idCheckSecurityStep",
        "x-ms-summary": ""
      },
      "accountIdentityVerificationWorkflow": {
        "description": "Specifies an Identity Verification workflow.",
        "properties": {
          "defaultDescription": {
            "description": "Text describing the purpose of the Identity Verification workflow.",
            "type": "string"
          },
          "defaultName": {
            "description": "The name of the Identity Verification workflow.",
            "type": "string"
          },
          "inputOptions": {
            "description": "",
            "items": {
              "$ref": "#/$defs/accountIdentityInputOption"
            },
            "type": "array"
          },
          "signatureProvider": {
            "$ref": "#/$defs/accountSignatureProvider"
          },
          "workflowId": {
            "description": "Workflow unique ID</br>This is the ID you must specify when setting ID Verification in an envelope using the `identityVerification`\n[core recipient parameter](/docs/esign-rest-api/reference/envelopes/enveloperecipients/#core-recipient-parameters)",
            "type": "string"
          },
          "workflowLabel": {
            "description": "",
            "type": "string"
          },
          "workflowResourceKey": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "accountIdentityVerificationWorkflow",
        "x-ms-summary": "Specifies an Identity Verification workflow."
      },
      "accountIdentityInputOption": {
        "description": "",
        "properties": {
          "isRequired": {
            "description": "",
            "type": "boolean"
          },
          "optionName": {
            "description": "",
            "type": "string"
          },
          "valueType": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "accountIdentityInputOption",
        "x-ms-summary": ""
      },
      "accountSignatureProvider": {
        "description": "Contains information about the signature provider associated with the Identity Verification workflow.\nIf empty, then this specific workflow is not intended for signers.\n",
        "properties": {
          "isRequired": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "priority": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signatureProviderDisplayName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signatureProviderId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signatureProviderName": {
            "description": "The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. For details, see [the current provider list](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/). You can also retrieve the list by using the [AccountSignatureProviders: List](/docs/esign-rest-api/reference/accounts/accountsignatureproviders/list/) method.\n\nExample: `universalsignaturepen_default`\n\n",
            "type": "string"
          },
          "signatureProviderOptionsMetadata": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/accountSignatureProviderOption"
            },
            "type": "array"
          },
          "signatureProviderRequiredOptions": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/signatureProviderRequiredOption"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "accountSignatureProvider",
        "x-ms-summary": "Contains information about the signature provider associated with the Identity Verification workflow.\nIf empty, then this specific workflow is not intended for signers.\n"
      },
      "accountSignatureProviderOption": {
        "description": "Reserved for DocuSign.",
        "properties": {
          "signatureProviderOptionDisplayName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signatureProviderOptionId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "signatureProviderOptionName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "accountSignatureProviderOption",
        "x-ms-summary": "Reserved for DocuSign."
      },
      "signatureProviderRequiredOption": {
        "description": "Contains additional information that a specific signature provider requires.",
        "properties": {
          "requiredSignatureProviderOptionIds": {
            "description": "Reserved for DocuSign.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "signerType": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "signatureProviderRequiredOption",
        "x-ms-summary": "Contains additional information that a specific signature provider requires."
      },
      "linkedExternalPrimaryAccount": {
        "description": "",
        "properties": {
          "accountName": {
            "description": "The name on the account.",
            "type": "string"
          },
          "configurationId": {
            "description": "",
            "type": "string"
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "linkId": {
            "description": "",
            "type": "string"
          },
          "pdfFieldHandlingOption": {
            "description": "",
            "type": "string"
          },
          "recipientAuthRequirements": {
            "$ref": "#/$defs/externalPrimaryAccountRecipientAuthRequirements"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* `sent` - The envelope is sent to the recipients. \n* `created` - The envelope is saved as a draft and can be modified to be sent later.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "linkedExternalPrimaryAccount",
        "x-ms-summary": ""
      },
      "externalPrimaryAccountRecipientAuthRequirements": {
        "description": "",
        "properties": {
          "accessCode": {
            "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
            "type": "string"
          },
          "idVerification": {
            "description": "",
            "type": "string"
          },
          "kba": {
            "description": "",
            "type": "string"
          },
          "phone": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "externalPrimaryAccountRecipientAuthRequirements",
        "x-ms-summary": ""
      },
      "tabAccountSettings": {
        "description": "",
        "properties": {
          "allowTabOrder": {
            "description": "When **true,** account users can set a tab order for the signing process.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "allowTabOrderMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "approveDeclineTabsEnabled": {
            "description": "When **true,** approve and decline tabs are enabled.",
            "type": "string"
          },
          "approveDeclineTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "calculatedFieldsEnabled": {
            "description": "When **true,** [calculated fields](https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields) are enabled for tabs.",
            "type": "string"
          },
          "calculatedFieldsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "checkBoxTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "checkboxTabsEnabled": {
            "description": "When **true,** checkbox tabs are enabled.",
            "type": "string"
          },
          "dataFieldRegexEnabled": {
            "description": "When **true,** regular expressions are enabled for tabs that contain data fields.",
            "type": "string"
          },
          "dataFieldRegexMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "dataFieldSizeEnabled": {
            "description": "When **true,** setting character limits for input fields is enabled.",
            "type": "string"
          },
          "dataFieldSizeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "drawTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "drawTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "firstLastEmailTabsEnabled": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "firstLastEmailTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "listTabsEnabled": {
            "description": "When **true,** list tabs are enabled.",
            "type": "string"
          },
          "listTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "noteTabsEnabled": {
            "description": "When **true,** note tabs are enabled.",
            "type": "string"
          },
          "noteTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "numericalTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "numericalTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "prefillTabsEnabled": {
            "description": "",
            "type": "string"
          },
          "prefillTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "radioTabsEnabled": {
            "description": "When **true,** radio button tabs are enabled.",
            "type": "string"
          },
          "radioTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "savingCustomTabsEnabled": {
            "description": "When **true,** saving custom tabs is enabled.",
            "type": "string"
          },
          "savingCustomTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "senderToChangeTabAssignmentsEnabled": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "senderToChangeTabAssignmentsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "sharedCustomTabsEnabled": {
            "description": "When **true,** shared custom tabs are enabled.",
            "type": "string"
          },
          "sharedCustomTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "tabDataLabelEnabled": {
            "description": "When **true,** [data\nlabels](https://support.docusign.com/en/videos/Data-Labels) are enabled.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "tabDataLabelMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "tabLocationEnabled": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "tabLocationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "tabLockingEnabled": {
            "description": "When **true,** tab locking is enabled.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "tabLockingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "tabScaleEnabled": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "tabScaleMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "tabTextFormattingEnabled": {
            "description": "When **true,** text formatting (such as font type, font size,\nfont color, bold, italic, and underline) is enabled for tabs that\nsupport formatting.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "tabTextFormattingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "textTabsEnabled": {
            "description": "When **true,** text tabs are enabled.",
            "type": "string"
          },
          "textTabsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "tabAccountSettings",
        "x-ms-summary": ""
      },
      "accountAddress": {
        "description": "Contains information about the address associated with the account.",
        "properties": {
          "address1": {
            "description": "The first line of the address. Maximum length: 100 characters.",
            "type": "string"
          },
          "address2": {
            "description": "The second line of the address. Maximum length: 100 characters.",
            "type": "string"
          },
          "city": {
            "description": "The city associated with the address. Maximum length: 40 characters.",
            "type": "string"
          },
          "country": {
            "description": "The country associated with the address. Maximum length: 50 characters.",
            "type": "string"
          },
          "email": {
            "description": "The email address associated with the account.",
            "type": "string"
          },
          "fax": {
            "description": "The fax number associated with the account.",
            "type": "string"
          },
          "firstName": {
            "description": "The first name of the user associated with the account. Maximum Length: 50 characters.",
            "type": "string"
          },
          "lastName": {
            "description": "The last name of the user associated with the account.",
            "type": "string"
          },
          "phone": {
            "description": "The phone number associated with the account.",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code associated with the address. Maximum length: 20 characters.",
            "type": "string"
          },
          "state": {
            "description": "The state or province associated with the address. Maximum length: 40 characters.",
            "type": "string"
          },
          "supportedCountries": {
            "description": "An array of supported countries associated with the account.",
            "items": {
              "$ref": "#/$defs/country"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "accountAddress",
        "x-ms-summary": "Contains information about the address associated with the account."
      },
      "country": {
        "description": "",
        "properties": {
          "isoCode": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "provinceValidated": {
            "description": "",
            "type": "string"
          },
          "provinces": {
            "description": "",
            "items": {
              "$ref": "#/$defs/province"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "country",
        "x-ms-summary": ""
      },
      "province": {
        "description": "",
        "properties": {
          "isoCode": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "province",
        "x-ms-summary": ""
      },
      "creditCardInformation": {
        "description": "This object contains information about a credit card that is associated with an account.",
        "properties": {
          "address": {
            "$ref": "#/$defs/addressInformation"
          },
          "cardLastDigits": {
            "description": "",
            "type": "string"
          },
          "cardNumber": {
            "description": "The credit card number.",
            "type": "string"
          },
          "cardType": {
            "description": "The type of credit card. Valid values are: \n\n- `visa` \n- `mastercard` \n- `amex`",
            "type": "string"
          },
          "cvNumber": {
            "description": "The 3 or 4-digit card verification value (CVV) number associated with the credit card. CVV numbers are also referred to as card security codes (CSCs).",
            "type": "string"
          },
          "expirationMonth": {
            "description": "The month that the credit card expires, expressed as a number from 1 to 12.",
            "type": "string"
          },
          "expirationYear": {
            "description": "The year in which the credit card expires, in 4-digit format.",
            "type": "string"
          },
          "nameOnCard": {
            "description": "The exact name as it appears on the credit card.",
            "type": "string"
          },
          "tokenizedCard": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "creditCardInformation",
        "x-ms-summary": "This object contains information about a credit card that is associated with an account."
      },
      "directDebitProcessorInformation": {
        "description": "Contains information about a bank that processes a customer's direct debit payments.",
        "properties": {
          "bankBranchCode": {
            "description": "The branch code of the bank used for direct debit.\n\nMaximum Length: 10 characters.",
            "type": "string"
          },
          "bankCheckDigit": {
            "description": "The check digit or digits in the international bank account number. These digits are used to confirm the validity of the account.\n\nMaximum Length: 4 characters.",
            "type": "string"
          },
          "bankCode": {
            "description": "The code or number that identifies the bank. This is also known as the sort code.\n\nExample: `200000`\n\nMaximum Length: 18 characters.",
            "type": "string"
          },
          "bankName": {
            "description": "The name of the direct debit bank.\n\nMaximum Length: 80 characters.",
            "type": "string"
          },
          "bankTransferAccountName": {
            "description": "The name on the direct debit bank account. This field is required for POST and PUT requests.\n\nMaximum Length: 60 characters.",
            "type": "string"
          },
          "bankTransferAccountNumber": {
            "description": "The customer's bank account number. This value will be obfuscated. This field is required for POST and PUT requests.\n\nMaximum Length: 30 characters.",
            "type": "string"
          },
          "bankTransferType": {
            "description": "Specifies the type of direct debit transfer. The value of this field is dependent on the user's country. This field is required for POST and PUT requests. Possible values are:\n\n- `DirectDebitUK`\n- `DirectEntryAU`\n- `SEPA`",
            "type": "string"
          },
          "country": {
            "description": "The user's country. The system populates this value automatically.\n\n",
            "type": "string"
          },
          "email": {
            "description": "The email address of the user who is associated with the payment method. This field is required for POST and PUT requests.\n\nMaximum Length: 80 characters.",
            "type": "string"
          },
          "firstName": {
            "description": "The user's first name. This field is required for POST and PUT requests.\n\nMaximum Length: 30 characters.",
            "type": "string"
          },
          "iBAN": {
            "description": "The International Bank Account Number (IBAN). \n\nExample: `DE89370400440532013000`\n\nFor more information, see [PeopleSoft's guide to Setting Up Banks](https://docs.oracle.com/cd/E16365_01/fscm91pbr0/eng/psbooks/fsbk/chapter.htm?File=fsbk/htm/fsbk03.htm).\n\n**Note:** This number will be obfuscated.",
            "type": "string"
          },
          "lastName": {
            "description": "The user's last name. This field is required for POST and PUT requests.\n\nMaximum Length: 70 characters.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "directDebitProcessorInformation",
        "x-ms-summary": "Contains information about a bank that processes a customer's direct debit payments."
      },
      "userInformation": {
        "description": "User information.",
        "properties": {
          "activationAccessCode": {
            "description": "Access code provided to the user to activate the account.",
            "type": "string"
          },
          "company": {
            "description": "The name of the user's company.",
            "type": "string"
          },
          "connectConfigurations": {
            "description": "Object representing the user's custom Connect configuration.",
            "items": {
              "$ref": "#/$defs/connectUserObject"
            },
            "type": "array"
          },
          "countryCode": {
            "description": "The three-letter code for the user's country.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "The UTC DateTime when the item was created.",
            "type": "string"
          },
          "customSettings": {
            "description": "The name/value pair information for the user custom setting.",
            "items": {
              "$ref": "#/$defs/nameValue"
            },
            "type": "array"
          },
          "defaultAccountId": {
            "description": "The default account ID associated with the user.",
            "type": "string"
          },
          "email": {
            "description": "The user's email address.",
            "type": "string"
          },
          "enableConnectForUser": {
            "description": "Boolean value that specifies whether the user is enabled for updates from DocuSign Connect.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "firstName": {
            "description": "The user's first name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "forgottenPasswordInfo": {
            "$ref": "#/$defs/forgottenPasswordInformation"
          },
          "groupList": {
            "description": "A list of the group information for groups to add the user to.\nUse [UserGroups: listGroups](/docs/esign-rest-api/reference/usergroups/groups/list/) to get information about groups.\n\nWhen setting a user's group, only the `groupId` is required.\n",
            "items": {
              "$ref": "#/$defs/group"
            },
            "type": "array"
          },
          "hasRemoteNotary": {
            "description": "",
            "type": "boolean"
          },
          "homeAddress": {
            "$ref": "#/$defs/addressInformation"
          },
          "initialsImageUri": {
            "description": "The URI for retrieving the image of the user's initials.",
            "type": "string"
          },
          "isAdmin": {
            "description": "Determines if the feature set is actively set as part of the plan.",
            "type": "string"
          },
          "isAlternateAdmin": {
            "description": "",
            "type": "string"
          },
          "isNAREnabled": {
            "description": "When **true,** National Association of Realtors (NAR) signature logos are enabled for the user.",
            "type": "string"
          },
          "jobTitle": {
            "description": "The user's job title.",
            "type": "string"
          },
          "lastLogin": {
            "description": "The date and time when the user last logged in to the system.",
            "type": "string"
          },
          "lastName": {
            "description": "The user's last name. \nMaximum Length: 50 characters.",
            "type": "string"
          },
          "loginStatus": {
            "description": "Boolean value that indicates whether the user is currently logged in or not.",
            "type": "string"
          },
          "middleName": {
            "description": "The user's middle name. \nLimit: 50 characters.",
            "type": "string"
          },
          "password": {
            "description": "The user's encrypted password hash.",
            "type": "string"
          },
          "passwordExpiration": {
            "description": "If password expiration is enabled, the date-time when the user's password expires.",
            "type": "string"
          },
          "permissionProfileId": {
            "description": "The ID of the permission profile.\n\nUse [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)\nto get a list of permission profiles and their IDs.\n\nYou can also download a CSV file of all permission profiles\nand their IDs from the **Settings > Permission Profiles** page\nof your eSignature account page.\n",
            "type": "string"
          },
          "permissionProfileName": {
            "description": "The name of the account permission profile. \n\nExample: `Account Administrator`",
            "type": "string"
          },
          "profileImageUri": {
            "description": "The URL for retrieving the user's profile image.",
            "type": "string"
          },
          "sendActivationEmail": {
            "description": "This field is no longer supported for most accounts. To create an eSignature user without sending an activation email, use the Admin API by following [these steps](/docs/admin-api/how-to/create-active-user/).",
            "type": "string"
          },
          "sendActivationOnInvalidLogin": {
            "description": "When **true,** specifies that an additional activation email be sent if user's log on fails before the account is activated.",
            "type": "string"
          },
          "signatureImageUri": {
            "description": "An endpoint URI that you can use to retrieve the user's signature image.",
            "type": "string"
          },
          "subscribe": {
            "description": "",
            "type": "string"
          },
          "suffixName": {
            "description": "The suffix for the user's name, such as Jr, IV, PhD, etc.\n\nLimit: 50 characters. ",
            "type": "string"
          },
          "title": {
            "description": "The title of the user.",
            "type": "string"
          },
          "uri": {
            "description": "A URI containing the user ID.",
            "type": "string"
          },
          "userAddedToAccountDateTime": {
            "description": "The date and time that the user was added to the account.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
            "type": "string"
          },
          "userName": {
            "description": "The name of the user.",
            "type": "string"
          },
          "userProfileLastModifiedDate": {
            "description": "The date and time that the user's profile was last modified.",
            "type": "string"
          },
          "userSettings": {
            "$ref": "#/$defs/userSettingsInformation"
          },
          "userStatus": {
            "description": "Status of the user's account. One of:\n\n- `ActivationRequired`\n- `ActivationSent`\n- `Active`\n- `Closed`\n- `Disabled`\n",
            "type": "string"
          },
          "userType": {
            "description": "The type of user, for example `CompanyUser`.",
            "type": "string"
          },
          "workAddress": {
            "$ref": "#/$defs/addressInformation"
          }
        },
        "type": "object",
        "x-ds-definition-name": "userInformation",
        "x-ms-summary": "User information."
      },
      "connectUserObject": {
        "description": "",
        "properties": {
          "configurationtype": {
            "description": "The type of custom Connect configuration being accessed.",
            "type": "string"
          },
          "connectId": {
            "description": "The ID of the custom Connect configuration being accessed.",
            "type": "string"
          },
          "enabled": {
            "description": "Boolean value that indicates whether the custom Connect configuration is enabled or not.",
            "type": "string"
          },
          "hasAccess": {
            "description": "",
            "type": "string"
          },
          "senderSearchableItems": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "connectUserObject",
        "x-ms-summary": ""
      },
      "nameValue": {
        "description": "A name-value pair that describes an item and provides a value for the item.",
        "properties": {
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "name": {
            "description": "The name of the item.",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the item.",
            "type": "string"
          },
          "value": {
            "description": "The current value of the item.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "nameValue",
        "x-ms-summary": "A name-value pair that describes an item and provides a value for the item."
      },
      "errorDetails": {
        "description": "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "properties": {
          "errorCode": {
            "description": "The code associated with the error condition.",
            "type": "string"
          },
          "message": {
            "description": "A brief message describing the error condition.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "errorDetails",
        "x-ms-summary": "This object describes errors that occur. It is only valid for responses and ignored in requests."
      },
      "forgottenPasswordInformation": {
        "description": "A complex element that has up to four Question/Answer pairs for forgotten password information.",
        "properties": {
          "forgottenPasswordAnswer1": {
            "description": "The answer to the first forgotten password challenge question.",
            "type": "string"
          },
          "forgottenPasswordAnswer2": {
            "description": "The answer to the second forgotten password challenge question.",
            "type": "string"
          },
          "forgottenPasswordAnswer3": {
            "description": "The answer to the third forgotten password challenge question.",
            "type": "string"
          },
          "forgottenPasswordAnswer4": {
            "description": "The answer to the fourth forgotten password challenge question.",
            "type": "string"
          },
          "forgottenPasswordQuestion1": {
            "description": "The first challenge question presented to a user who has forgotten their password.",
            "type": "string"
          },
          "forgottenPasswordQuestion2": {
            "description": "The second challenge question presented to a user who has forgotten their password.",
            "type": "string"
          },
          "forgottenPasswordQuestion3": {
            "description": "The third challenge question presented to a user who has forgotten their password.",
            "type": "string"
          },
          "forgottenPasswordQuestion4": {
            "description": "The fourth challenge question presented to a user who has forgotten their password.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "forgottenPasswordInformation",
        "x-ms-summary": "A complex element that has up to four Question/Answer pairs for forgotten password information."
      },
      "group": {
        "description": "This object contains information about a group.",
        "properties": {
          "dsGroupId": {
            "description": "",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "groupId": {
            "description": "The DocuSign group ID for the group.",
            "type": "string"
          },
          "groupName": {
            "description": "The name of the group.",
            "type": "string"
          },
          "groupType": {
            "description": "The group type.",
            "type": "string"
          },
          "permissionProfileId": {
            "description": "The ID of the permission profile associated with the group. Possible values include:\n\n- `2301416` (for the `DocuSign Viewer` profile)\n- `2301415` (for the `DocuSign Sender` profile)\n- `2301414` (for the `Account Administrator` profile)",
            "type": "string"
          },
          "users": {
            "description": "A list of the users in the group.",
            "items": {
              "$ref": "#/$defs/userInfo"
            },
            "type": "array"
          },
          "usersCount": {
            "description": "The total number of users in the group.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "group",
        "x-ms-summary": "This object contains information about a group."
      },
      "userInfo": {
        "description": "",
        "properties": {
          "accountId": {
            "description": "The account ID associated with the envelope.",
            "type": "string"
          },
          "accountName": {
            "description": "The name on the account.",
            "type": "string"
          },
          "activationAccessCode": {
            "description": "Access code provided to the user to activate the account.",
            "type": "string"
          },
          "email": {
            "description": "The user's email address.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "ipAddress": {
            "description": "",
            "type": "string"
          },
          "loginStatus": {
            "description": "When **true,** indicates that the user is logged in. This is a read-only property.",
            "type": "string"
          },
          "membershipId": {
            "description": "The user's membership ID.",
            "type": "string"
          },
          "sendActivationEmail": {
            "description": "This field is no longer supported for most accounts. To create an eSignature user without sending an activation email, use the Admin API by following [these steps](/docs/admin-api/how-to/create-active-user/).",
            "type": "string"
          },
          "uri": {
            "description": "A URI containing the user ID.",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user to access.",
            "type": "string"
          },
          "userName": {
            "description": "The name of the user.",
            "type": "string"
          },
          "userStatus": {
            "description": "Status of the user's account. One of:\n\n- `ActivationRequired`\n- `ActivationSent`\n- `Active`\n- `Closed`\n- `Disabled`\n",
            "type": "string"
          },
          "userType": {
            "description": "The type of user, for example `CompanyUser`.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "userInfo",
        "x-ms-summary": ""
      },
      "userSettingsInformation": {
        "description": "Properties that configure the settings for a user. Some elements of this object have a `metadata` property, which includes the following:\n- `rights`: The calling users permissions to edit this setting (can be `editable` or `read_only`)\n- `uiHint`: Internally used to build UIs (can be `available` or `hidden`)\n- `options`: The values supported for this setting (not all settings have this element)",
        "properties": {
          "accountManagementGranular": {
            "$ref": "#/$defs/userAccountManagementGranularInformation"
          },
          "adminOnly": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "adminOnlyMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowAutoTagging": {
            "description": "When **true,** the API returns suggested tabs for documents for this user.",
            "type": "string"
          },
          "allowEnvelopeTransferTo": {
            "description": "When **true,** this user can participate in envelope transfers on the account.",
            "type": "string"
          },
          "allowEnvelopeTransferToMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowEsealRecipients": {
            "description": "When **true,** this user can create [electronic seal recipients][eseal].\n\n[eseal]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#seal-recipient",
            "type": "string"
          },
          "allowEsealRecipientsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowPowerFormsAdminToAccessAllPowerFormEnvelope": {
            "description": "When **true** and this user is an administrator, they can view all of the envelopes generated from PowerForms. The default value is **false.**",
            "type": "string"
          },
          "allowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowRecipientLanguageSelection": {
            "description": "When **true,** this user can set the language used in the standard email format for a recipient when creating an envelope.",
            "type": "string"
          },
          "allowRecipientLanguageSelectionMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSendOnBehalfOf": {
            "description": "When **true,** this user can send envelopes \"on behalf of\" other users through the API.",
            "type": "string"
          },
          "allowSendOnBehalfOfMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowSupplementalDocuments": {
            "description": "When **true,** this user can include supplemental documents.",
            "type": "string"
          },
          "allowSupplementalDocumentsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "anchorTagVersionedPlacementEnabled": {
            "description": "Reserved for DocuSign.\n",
            "type": "string"
          },
          "apiAccountWideAccess": {
            "description": "When **true,** indicates that this user can send envelope-specific API requests on the account.",
            "type": "string"
          },
          "apiAccountWideAccessMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "apiCanExportAC": {
            "description": "When **true,** this user can export authoritative copy for the account.",
            "type": "string"
          },
          "apiCanExportACMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "bulkSend": {
            "description": "When **true,** this user can use the bulk send feature for the account.",
            "type": "string"
          },
          "bulkSendMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canChargeAccount": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "canChargeAccountMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canEditSharedAddressbook": {
            "description": "When true, this user can edit the shared address book for the account.",
            "type": "string"
          },
          "canEditSharedAddressbookMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canLockEnvelopes": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "canLockEnvelopesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageAccount": {
            "description": "When **true,** this user is an administrator for the account.",
            "type": "string"
          },
          "canManageAccountMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageDistributor": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "canManageDistributorMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageTemplates": {
            "description": "When **true,** this user can manage templates for the account.",
            "type": "string"
          },
          "canManageTemplatesMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canSendAPIRequests": {
            "description": "When **true,** this user can send API requests on the account.",
            "type": "string"
          },
          "canSendAPIRequestsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canSendEnvelope": {
            "description": "When **true,** this user can send envelopes on the account.",
            "type": "string"
          },
          "canSendEnvelopeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canSendEnvelopesViaSMS": {
            "description": "",
            "type": "string"
          },
          "canSendEnvelopesViaSMSMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canSignEnvelope": {
            "description": "When **true,** this user can sign envelopes.",
            "type": "string"
          },
          "canSignEnvelopeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canUseScratchpad": {
            "description": "When **true,** this user can use a scratchpad to edit information.",
            "type": "string"
          },
          "canUseScratchpadMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canUseSmartContracts": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "canUseSmartContractsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableDocumentUpload": {
            "description": "When **true,** this user is prohibited from uploading documents during sending.",
            "type": "string"
          },
          "disableDocumentUploadMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "disableOtherActions": {
            "description": "When **true,** this user can access the **Other Actions** menu.",
            "type": "string"
          },
          "disableOtherActionsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableDSPro": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "enableDSProMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableKeyTermsSuggestionsByDocumentType": {
            "description": "",
            "type": "string"
          },
          "enableKeyTermsSuggestionsByDocumentTypeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSequentialSigningAPI": {
            "description": "When **true,** the account can define the routing\norder of recipients for envelopes sent by using the eSignature API.\n\n**Note:** Only SysAdmin users can change this setting.",
            "type": "string"
          },
          "enableSequentialSigningAPIMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSequentialSigningUI": {
            "description": "When **true,** the account can define the routing order\nof recipients for envelopes sent by using the DocuSign application.\n\n**Note:** Only SysAdmin users can change this setting.\n",
            "type": "string"
          },
          "enableSequentialSigningUIMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSignOnPaperOverride": {
            "description": "When **true,** a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.\n\n**Note:** Only Admin users can change this setting.",
            "type": "string"
          },
          "enableSignOnPaperOverrideMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableSignerAttachments": {
            "description": "When **true,** this user can use the signing attachments feature.",
            "type": "string"
          },
          "enableSignerAttachmentsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableTransactionPoint": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "enableTransactionPointMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "enableVaulting": {
            "description": "When **true,** Vaulting is enabled for the account.",
            "type": "string"
          },
          "enableVaultingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "expressSendOnly": {
            "description": "When **false,** this user can apply tabs to documents during the sending experience.",
            "type": "string"
          },
          "locale": {
            "description": "The user's locale code. Valid values are:\n- `zh_CN`\n- `zh_TW`\n- `nl`\n- `en`\n- `fr`\n- `de`\n- `it`\n- `ja`\n- `ko`\n- `pt`\n- `pt_BR`\n- `ru`\n- `es`",
            "type": "string"
          },
          "localeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicy"
          },
          "manageClickwrapsMode": {
            "description": "When **true,** this user can create and manage [Clickwraps](/docs/click-api/).",
            "type": "string"
          },
          "manageClickwrapsModeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "modifiedBy": {
            "description": "The user ID (GUID) of the user who last modified this user record. This property is read-only.",
            "type": "string"
          },
          "modifiedByMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "modifiedDate": {
            "description": "The date on which this user record was last modified.",
            "type": "string"
          },
          "modifiedDateMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "modifiedPage": {
            "description": "Note referencing the page that modified this user record.",
            "type": "string"
          },
          "modifiedPageMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "newSendUI": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "newSendUIMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "powerFormMode": {
            "description": "Indicates the Power Form mode setting for the user:\n- `none`\n- `admin`\n- `user`",
            "type": "string"
          },
          "powerFormModeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "recipientViewedNotification": {
            "description": "When **true,** this user receives notifications when envelopes are viewed.",
            "type": "string"
          },
          "recipientViewedNotificationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "sealIdentifiers": {
            "description": "Information about the seals associated with this user.",
            "items": {
              "$ref": "#/$defs/sealIdentifier"
            },
            "type": "array"
          },
          "selfSignedRecipientEmailDocument": {
            "description": "Sets how self-signed documents are presented to the email recipients.\nValid values are:\n\n- `include_pdf`: A PDF of the completed document is attached to the email.\n- `include_link`: A secure link to the self-signed documents is included\n   in the email.\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "selfSignedRecipientEmailDocumentMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "senderEmailNotifications": {
            "$ref": "#/$defs/senderEmailNotifications"
          },
          "signerEmailNotifications": {
            "$ref": "#/$defs/signerEmailNotifications"
          },
          "supplementalDocumentIncludeInDownload": {
            "description": "When **true,** this user gets supplemental documents when downloading documents.",
            "type": "string"
          },
          "supplementalDocumentsMustAccept": {
            "description": "When **true,** this user must accept supplemental documents.",
            "type": "string"
          },
          "supplementalDocumentsMustAcceptMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "supplementalDocumentsMustRead": {
            "description": "When **true,** this user must both view and accept supplemental documents.",
            "type": "string"
          },
          "supplementalDocumentsMustReadMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "supplementalDocumentsMustView": {
            "description": "When **true,** this user must view supplemental documents.",
            "type": "string"
          },
          "supplementalDocumentsMustViewMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "templateActiveCreation": {
            "description": "When **true,** a new template is created each time the user sends an envelope.",
            "type": "string"
          },
          "templateActiveCreationMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "templateApplyNotify": {
            "description": "When **true,** the system notifies this user before applying a matching template.",
            "type": "string"
          },
          "templateApplyNotifyMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "templateAutoMatching": {
            "description": "When **true,** the system automatically applies a matching template to a document if only one template matches. If there are multiple matches, it displays a list of matches to select from.",
            "type": "string"
          },
          "templateAutoMatchingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "templateMatchingSensitivity": {
            "description": "Percentage used when matching templates.",
            "type": "string"
          },
          "templateMatchingSensitivityMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "templatePageLevelMatching": {
            "description": "When **true,** users see template matching functionality.",
            "type": "string"
          },
          "templatePageLevelMatchingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "timezoneDST": {
            "description": "When true, daylight savings time is in effect for this user's time zone.",
            "type": "string"
          },
          "timezoneDSTMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "timezoneMask": {
            "description": "The custom DateTime format setting for this user.",
            "type": "string"
          },
          "timezoneMaskMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "timezoneOffset": {
            "description": "The timezone offset for the user. Valid values:\n- `tz_01_afghanistan`\n- `tz_02_alaskan`\n- `tz_03_arab`\n- `tz_04_arabian`\n- `tz_05_arabic`\n- `tz_06_argentina`\n- `tz_07_atlantic`\n- `tz_08_aus_central`\n- `tz_09_aus_eastern`\n- `tz_10_azerbaijan`\n- `tz_11_azores`\n- `tz_12_bangladesh`\n- `tz_13_canada_central`\n- `tz_14_cape_verde`\n- `tz_15_caucasus`\n- `tz_16_central_australia`\n- `tz_17_central_america`\n- `tz_18_central_asia`\n- `tz_19_central_brazilian`\n- `tz_20_central_europe`\n- `tz_21_central_european`\n- `tz_22_central_pacific`\n- `tz_23_central`\n- `tz_24_central_mexico`\n- `tz_25_china`\n- `tz_26_dateline`\n- `tz_27_east_africa`\n- `tz_28_east_australia`\n- `tz_29_east_europe`\n- `tz_30_east_south_america`\n- `tz_31_eastern`\n- `tz_32_egypt`\n- `tz_33_ekaterinburg`\n- `tz_34_fiji`\n- `tz_35_fli`\n- `tz_36_georgian`\n- `tz_37_gmt`\n- `tz_38_greenland`\n- `tz_39_greenwich`\n- `tz_40_gtb`\n- `tz_41_hawaiian`\n- `tz_42_india`\n- `tz_43_iran`\n- `tz_44_israel`\n- `tz_45_jordan`\n- `tz_46_kaliningrad`\n- `tz_47_kamchatka`\n- `tz_48_korea`\n- `tz_49_magadan`\n- `tz_50_mauritius`\n- `tz_51_mid_atlantic`\n- `tz_52_middle_east`\n- `tz_53_montevideo`\n- `tz_54_morocco`\n- `tz_55_mountain`\n- `tz_56_mountain_mexico`\n- `tz_57_myanmar`\n- `tz_58_north_central_asia`\n- `tz_59_namibia`\n- `tz_60_nepal`\n- `tz_61_new_zealand`\n- `tz_62_new_foundland`\n- `tz_63_north_asia_east`\n- `tz_64_north_asia`\n- `tz_65_pacific_sa`\n- `tz_66_pacific`\n- `tz_67_pacific_mexico`\n- `tz_68_pakistan`\n- `tz_69_paraguay`\n- `tz_70_romance`\n- `tz_71_russian`\n- `tz_72_sa_eastern`\n- `tz_73_sa_pacific`\n- `tz_74_sa_western`\n- `tz_75_samoa`\n- `tz_76_se_asia`\n- `tz_77_singapore`\n- `tz_78_south_africa`\n- `tz_79_sriLanka`\n- `tz_80_syria`\n- `tz_81_taipei`\n- `tz_82_tasmania`\n- `tz_83_tokyo`\n- `tz_84_tonga`\n- `tz_85_turkey`\n- `tz_86_ulaanbaatar`\n- `tz_87_us_eastern`\n- `tz_88_us_mountain`\n- `tz_89_venezuela`\n- `tz_90_vladivostok`\n- `tz_91_west_australia`\n- `tz_92_west_central_africa`\n- `tz_93_west_europe`\n- `tz_94_west_asia`\n- `tz_95_west_pacific`\n- `tz_96_yakutsk`",
            "type": "string"
          },
          "timezoneOffsetMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "timezoneSendingPref": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "timezoneSendingPrefMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "timezoneSigningPref": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "timezoneSigningPrefMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "transactionPointSiteNameURL": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "transactionPointSiteNameURLMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "transactionPointUserName": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "transactionPointUserNameMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "vaultingMode": {
            "description": "Indicates the specified Vaulting mode:\n- `none`\n- `estored`\n- `electronic_original`",
            "type": "string"
          },
          "vaultingModeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "webForms": {
            "description": "",
            "type": "string"
          },
          "webFormsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "userSettingsInformation",
        "x-ms-summary": "Properties that configure the settings for a user. Some elements of this object have a `metadata` property, which includes the following:\n- `rights`: The calling users permissions to edit this setting (can be `editable` or `read_only`)\n- `uiHint`: Internally used to build UIs (can be `available` or `hidden`)\n- `options`: The values supported for this setting (not all settings have this element)"
      },
      "userAccountManagementGranularInformation": {
        "description": "Describes which account management capabilities a user has.",
        "properties": {
          "canManageAccountSecuritySettings": {
            "description": "**True** if the user can manage account security settings.",
            "type": "string"
          },
          "canManageAccountSecuritySettingsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageAccountSettings": {
            "description": "**True** if the user can manage account settings.",
            "type": "string"
          },
          "canManageAccountSettingsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageAdmins": {
            "description": "**True** if the user can manage administrators.",
            "type": "string"
          },
          "canManageAdminsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageConnect": {
            "description": "",
            "type": "string"
          },
          "canManageConnectMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageDocumentRetention": {
            "description": "",
            "type": "string"
          },
          "canManageDocumentRetentionMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageEnvelopeTransfer": {
            "description": "",
            "type": "string"
          },
          "canManageEnvelopeTransferMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageGroupsButNotUsers": {
            "description": "",
            "type": "string"
          },
          "canManageGroupsButNotUsersMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageJointAgreements": {
            "description": "",
            "type": "string"
          },
          "canManageJointAgreementsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageReporting": {
            "description": "**True** if the user can manage reporting.",
            "type": "string"
          },
          "canManageReportingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageSharing": {
            "description": "**True** if the user can manage sharing.",
            "type": "string"
          },
          "canManageSharingMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageSigningGroups": {
            "description": "**True** if the user can manage signing groups.",
            "type": "string"
          },
          "canManageSigningGroupsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageStamps": {
            "description": "",
            "type": "string"
          },
          "canManageStampsMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canManageUsers": {
            "description": "**True** if the user can manage users.",
            "type": "string"
          },
          "canManageUsersMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "canViewUsers": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "userAccountManagementGranularInformation",
        "x-ms-summary": "Describes which account management capabilities a user has."
      },
      "localePolicy": {
        "description": "",
        "properties": {
          "addressFormat": {
            "description": "",
            "type": "string"
          },
          "addressFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "allowRegion": {
            "description": "",
            "type": "string"
          },
          "calendarType": {
            "description": "",
            "type": "string"
          },
          "calendarTypeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "cultureName": {
            "description": "",
            "type": "string"
          },
          "cultureNameMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "currencyCode": {
            "description": "The currency code for the account, based on the [ISO 4217 currency code](https://www.iso.org/iso-4217-currency-codes.html).",
            "type": "string"
          },
          "currencyCodeMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "currencyNegativeFormat": {
            "description": "",
            "type": "string"
          },
          "currencyNegativeFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "currencyPositiveFormat": {
            "description": "",
            "type": "string"
          },
          "currencyPositiveFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "customDateFormat": {
            "description": "",
            "type": "string"
          },
          "customSignDateFormat": {
            "description": "",
            "type": "string"
          },
          "customSignTimeFormat": {
            "description": "",
            "type": "string"
          },
          "customTimeFormat": {
            "description": "",
            "type": "string"
          },
          "dateFormat": {
            "description": "",
            "type": "string"
          },
          "dateFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "effectiveAddressFormat": {
            "description": "",
            "type": "string"
          },
          "effectiveCalendarType": {
            "description": "",
            "type": "string"
          },
          "effectiveCurrencyCode": {
            "description": "",
            "type": "string"
          },
          "effectiveCurrencyNegativeFormat": {
            "description": "",
            "type": "string"
          },
          "effectiveCurrencyPositiveFormat": {
            "description": "",
            "type": "string"
          },
          "effectiveCustomDateFormat": {
            "description": "",
            "type": "string"
          },
          "effectiveCustomTimeFormat": {
            "description": "",
            "type": "string"
          },
          "effectiveDateFormat": {
            "description": "",
            "type": "string"
          },
          "effectiveInitialFormat": {
            "description": "",
            "type": "string"
          },
          "effectiveNameFormat": {
            "description": "",
            "type": "string"
          },
          "effectiveTimeFormat": {
            "description": "",
            "type": "string"
          },
          "effectiveTimeZone": {
            "description": "",
            "type": "string"
          },
          "initialFormat": {
            "description": "",
            "type": "string"
          },
          "initialFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "nameFormat": {
            "description": "",
            "type": "string"
          },
          "nameFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signDateFormat": {
            "description": "The format for the signature date. Valid values are:\n\n- `d/M/yyyy`\n- `dd-MM-yy`\n- `dd-MMM-yy`\n- `dd-MM-yyyy`\n- `dd.MM.yyyy`\n- `dd-MMM-yyyy`\n- `dd MMMM yyyy`\n- `M/d/yyyy`\n- `MM-dd-yyyy`\n- `MM/dd/yyyy`\n- `MM/dd/yy`\n- `MMM-dd-yyyy`\n- `MMM d, yyyy`\n- `MMMM d, yyyy`\n- `yyyy-MM-dd`\n- `yyyy-MMM-dd`\n- `yyyy/MM/dd`\n- `yyyy MMMM d`\n\n**Note:** Only Admin users can change this setting.\n",
            "type": "string"
          },
          "signDateFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "signTimeFormat": {
            "description": "The format for the signature time. Valid values are:\n\n- `none`\n- `HH:mm`\n- `h:mm`\n- `HH:mm:ss`\n- `h:mm:ss`\n",
            "type": "string"
          },
          "signTimeFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "timeFormat": {
            "description": "",
            "type": "string"
          },
          "timeFormatMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          },
          "timeZone": {
            "description": "",
            "type": "string"
          },
          "timeZoneMetadata": {
            "$ref": "#/$defs/settingsMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "localePolicy",
        "x-ms-summary": ""
      },
      "sealIdentifier": {
        "description": "",
        "properties": {
          "sealDisplayName": {
            "description": "The user-friendly display name for a seal.",
            "type": "string"
          },
          "sealName": {
            "description": "The name of a seal.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "sealIdentifier",
        "x-ms-summary": ""
      },
      "senderEmailNotifications": {
        "description": "Contains the settings for the email notifications that senders receive about the envelopes that they send.",
        "properties": {
          "changedSigner": {
            "description": "When **true,** the sender receives an email notification if the signer changes.",
            "type": "string"
          },
          "clickwrapResponsesLimitNotificationEmail": {
            "description": "",
            "type": "string"
          },
          "commentsOnlyPrivateAndMention": {
            "description": "When **true,** the user receives only comments that mention their own user name.",
            "type": "string"
          },
          "commentsReceiveAll": {
            "description": "When **true,** the user receives all comments.",
            "type": "string"
          },
          "deliveryFailed": {
            "description": "When **true,** the sender receives an email notification if envelope delivery fails.",
            "type": "string"
          },
          "envelopeComplete": {
            "description": "When **true,** the user receives an email notification when the envelope has been completed.",
            "type": "string"
          },
          "offlineSigningFailed": {
            "description": "When **true,** the user receives an email notification if offline signing failed.",
            "type": "string"
          },
          "powerformResponsesLimitNotificationEmail": {
            "description": "",
            "type": "string"
          },
          "purgeDocuments": {
            "description": "When **true,** the user receives an email notification when a document purge occurs.",
            "type": "string"
          },
          "recipientViewed": {
            "description": "When **true,** the sender receives notification that a recipient viewed the envelope.",
            "type": "string"
          },
          "senderEnvelopeDeclined": {
            "description": "When **true,** the sender receives notification that the envelope was declined.",
            "type": "string"
          },
          "withdrawnConsent": {
            "description": "When **true,** the user receives an email notification if consent is withdrawn.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "senderEmailNotifications",
        "x-ms-summary": "Contains the settings for the email notifications that senders receive about the envelopes that they send."
      },
      "signerEmailNotifications": {
        "description": "An array of email notifications that specifies the email the user receives when they are a recipient. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account email notification settings when the user is created.\n",
        "properties": {
          "agentNotification": {
            "description": "When **true,** the user receives agent notification emails.",
            "type": "string"
          },
          "carbonCopyNotification": {
            "description": "When **true,** the user receives notifications of carbon copy deliveries.",
            "type": "string"
          },
          "certifiedDeliveryNotification": {
            "description": "When **true,** the user receives notifications of certified deliveries.",
            "type": "string"
          },
          "commentsOnlyPrivateAndMention": {
            "description": "When **true,** the user receives only comments that mention their own user name.",
            "type": "string"
          },
          "commentsReceiveAll": {
            "description": "When **true,** the user receives all comments.",
            "type": "string"
          },
          "documentMarkupActivation": {
            "description": "When **true,** the user receives notification that document markup has been activated.",
            "type": "string"
          },
          "envelopeActivation": {
            "description": "When **true,** the user receives notification that the envelope has been activated.",
            "type": "string"
          },
          "envelopeComplete": {
            "description": "When **true,** the user receives an email notification when the envelope has been completed.",
            "type": "string"
          },
          "envelopeCorrected": {
            "description": "When **true,** the user receives notification that the envelope has been corrected.",
            "type": "string"
          },
          "envelopeDeclined": {
            "description": "When **true,** the user receives notification that the envelope has been declined.",
            "type": "string"
          },
          "envelopeVoided": {
            "description": "When **true,** the user receives notification that the envelope has been voided.",
            "type": "string"
          },
          "faxReceived": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "offlineSigningFailed": {
            "description": "When **true,** the user receives an email notification if offline signing failed.",
            "type": "string"
          },
          "purgeDocuments": {
            "description": "When **true,** the user receives an email notification when a document purge occurs.",
            "type": "string"
          },
          "reassignedSigner": {
            "description": "When **true,** the user receives notification that the envelope has been reassigned.",
            "type": "string"
          },
          "whenSigningGroupMember": {
            "description": "When **true,** the user receives notification that he or she is a member of the signing group.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "signerEmailNotifications",
        "x-ms-summary": "An array of email notifications that specifies the email the user receives when they are a recipient. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account email notification settings when the user is created.\n"
      },
      "paymentProcessorInformation": {
        "description": "",
        "properties": {
          "address": {
            "$ref": "#/$defs/addressInformation"
          },
          "billingAgreementId": {
            "description": "The ID of the billing agreement.",
            "type": "string"
          },
          "email": {
            "description": "The email address associated with the payment processor.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "paymentProcessorInformation",
        "x-ms-summary": ""
      },
      "planInformation": {
        "description": "An object used to identify the features and attributes of the account being created.",
        "properties": {
          "addOns": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/addOn"
            },
            "type": "array"
          },
          "currencyCode": {
            "description": "Specifies the ISO currency code for the account.",
            "type": "string"
          },
          "freeTrialDaysOverride": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "planFeatureSets": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/featureSet"
            },
            "type": "array"
          },
          "planId": {
            "description": "DocuSign's ID for the account plan.",
            "type": "string"
          },
          "recipientDomains": {
            "description": "",
            "items": {
              "$ref": "#/$defs/recipientDomain"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "planInformation",
        "x-ms-summary": "An object used to identify the features and attributes of the account being created."
      },
      "addOn": {
        "description": "Contains information about add ons.",
        "properties": {
          "active": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "addOnId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "id": {
            "description": "A unique ID for the Salesforce object.",
            "type": "string"
          },
          "name": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "addOn",
        "x-ms-summary": "Contains information about add ons."
      },
      "featureSet": {
        "description": "This object provides details about a feature set, or add-on product that is associated with an account. It is reserved for DocuSign internal use only.",
        "properties": {
          "currencyFeatureSetPrices": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/currencyFeatureSetPrice"
            },
            "type": "array"
          },
          "envelopeFee": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "featureSetId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "fixedFee": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "is21CFRPart11": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "isActive": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "isEnabled": {
            "description": "When **true,** the feature set is actively enabled as part of the plan.",
            "type": "string"
          },
          "name": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "seatFee": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "featureSet",
        "x-ms-summary": "This object provides details about a feature set, or add-on product that is associated with an account. It is reserved for DocuSign internal use only."
      },
      "currencyFeatureSetPrice": {
        "description": "Information about the price and currency associated with the feature set. Reserved for internal DocuSign use only.",
        "properties": {
          "currencyCode": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "currencySymbol": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "envelopeFee": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "fixedFee": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "seatFee": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "currencyFeatureSetPrice",
        "x-ms-summary": "Information about the price and currency associated with the feature set. Reserved for internal DocuSign use only."
      },
      "recipientDomain": {
        "description": "",
        "properties": {
          "active": {
            "description": "",
            "type": "string"
          },
          "domainCode": {
            "description": "",
            "type": "string"
          },
          "domainName": {
            "description": "",
            "type": "string"
          },
          "recipientDomainId": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientDomain",
        "x-ms-summary": ""
      },
      "referralInformation": {
        "description": "A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry\n\n**Note:** saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DocuSign use only.",
        "properties": {
          "advertisementId": {
            "description": "A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry.\n\n**Note:** saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DocuSign use only.\n",
            "type": "string"
          },
          "enableSupport": {
            "description": "When **true,** customer support is provided as part of the account plan.",
            "type": "string"
          },
          "externalOrgId": {
            "description": "An optional external ID for the referral.",
            "type": "string"
          },
          "groupMemberId": {
            "description": "",
            "type": "string"
          },
          "idType": {
            "description": "",
            "type": "string"
          },
          "includedSeats": {
            "description": "The number of seats (users) included in the plan.",
            "type": "string"
          },
          "industry": {
            "description": "The name of the industry associated with the referral. \n\nExample: `Accounting`",
            "type": "string"
          },
          "planStartMonth": {
            "description": "",
            "type": "string"
          },
          "promoCode": {
            "description": "",
            "type": "string"
          },
          "publisherId": {
            "description": "",
            "type": "string"
          },
          "referralCode": {
            "description": "",
            "type": "string"
          },
          "referrerName": {
            "description": "The name of the referrer.",
            "type": "string"
          },
          "saleDiscountAmount": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "saleDiscountFixedAmount": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "saleDiscountPercent": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "saleDiscountPeriods": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "saleDiscountSeatPriceOverride": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shopperId": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "referralInformation",
        "x-ms-summary": "A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry\n\n**Note:** saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DocuSign use only."
      },
      "socialAccountInformation": {
        "description": "",
        "properties": {
          "email": {
            "description": "The users email address.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "provider": {
            "description": "The social account provider (Facebook, Yahoo, etc.)",
            "type": "string"
          },
          "socialId": {
            "description": "The ID provided by the Socal Account.",
            "type": "string"
          },
          "userName": {
            "description": "The full user name for the account.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "socialAccountInformation",
        "x-ms-summary": ""
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://www.docusign.net/restapi/v2.1/accounts"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            "**accountId**: The account ID associated with the envelope.",
            "**accountIdGuid**: The GUID associated with the account ID.",
            "**accountName**: The account name for the new account.",
            "**apiPassword**: Contains a token that can be used for authentication in API calls instead of using the user name and password.",
            "**baseUrl**: The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.",
            [
              "**billingPlanPreview**: Information used to provide a preview of a billing plan.",
              {
                "$ul": [
                  "**currencyCode**: Specifies the ISO currency code for the account.",
                  [
                    "**invoice**: Contains information about a billing invoice.",
                    {
                      "$ul": [
                        "**amount**: The total amount of the purchase.",
                        "**balance**: Reserved: TBD",
                        "**dueDate**: Reserved: TBD",
                        "**invoiceId**: Reserved: TBD",
                        "**invoiceItems**: Reserved: TBD",
                        "**invoiceNumber**: Reserved: TBD",
                        "**invoiceUri**: Contains a URI for an endpoint that you can use to retrieve invoice information.",
                        "**nonTaxableAmount**: ",
                        "**pdfAvailable**: ",
                        "**taxableAmount**: "
                      ]
                    }
                  ],
                  "**isProrated**: When **true,** the billing plan is prorated.",
                  "**subtotalAmount**: ",
                  "**taxAmount**: ",
                  "**totalAmount**: "
                ]
              }
            ],
            "**userId**: Specifies the user ID of the new user."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The code associated with the error condition.",
            "**message**: A brief message describing the error condition."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
