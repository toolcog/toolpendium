{
  "name": "UserSignatures_PutUserSignatureById",
  "description": "Creates, or updates, the signature font and initials for the specified user. When creating a signature, you use this resource to create the signature name and then add the signature and initials images into the signature.\n\n**Note:** This will also create a default signature for the user when one does not exist.\n\nThe userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\n\nThe `signatureId` parameter accepts a signature ID. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint.\n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\".",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The external account number (int) or account ID GUID."
      },
      "signatureId": {
        "type": "string",
        "description": "The ID of the account stamp."
      },
      "userId": {
        "type": "string",
        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings."
      },
      "close_existing_signature": {
        "type": "string",
        "description": "When **true,** closes the current signature."
      },
      "body": {
        "$ref": "#/$defs/userSignatureDefinition"
      }
    },
    "required": [
      "accountId",
      "signatureId",
      "userId"
    ],
    "$defs": {
      "userSignatureDefinition": {
        "description": "",
        "properties": {
          "dateStampProperties": {
            "$ref": "#/$defs/dateStampProperties"
          },
          "disallowUserResizeStamp": {
            "description": "When **true,** users may not resize the stamp.",
            "type": "string"
          },
          "externalID": {
            "description": "Optionally specify an external identifier for the user's signature.",
            "type": "string"
          },
          "imageType": {
            "description": "Specificies the type of image. Valid values:\n\n- `stamp_image`\n- `signature_image`\n- `initials_image`",
            "type": "string"
          },
          "isDefault": {
            "description": "Boolean that specifies whether the signature is the default signature for the user.",
            "type": "string"
          },
          "nrdsId": {
            "description": "The National Association of Realtors (NAR) membership ID for a user who is a realtor.",
            "type": "string"
          },
          "nrdsLastName": {
            "description": "The realtor's last name.",
            "type": "string"
          },
          "phoneticName": {
            "description": "The phonetic spelling of the `signatureName`.",
            "type": "string"
          },
          "signatureFont": {
            "description": "The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.\n\n- `\"1_DocuSign\"`\n- `\"2_DocuSign\"`\n- `\"3_DocuSign\"`\n- `\"4_DocuSign\"`\n- `\"5_DocuSign\"`\n- `\"6_DocuSign\"`\n- `\"7_DocuSign\"`\n- `\"8_DocuSign\"`\n- `\"Mistral\"`\n- `\"Rage Italic\"`\n",
            "type": "string"
          },
          "signatureId": {
            "description": "Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
            "type": "string"
          },
          "signatureInitials": {
            "description": "Specifies the user's signature in initials format.",
            "type": "string"
          },
          "signatureName": {
            "description": "Specifies the user's signature name.",
            "type": "string"
          },
          "signatureType": {
            "description": "Specifies the type of signature.",
            "type": "string"
          },
          "stampFormat": {
            "description": "The format of a stamp. Valid values are:\n\n- `NameHanko`: The stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents the signer's name and the date. ",
            "type": "string"
          },
          "stampSizeMM": {
            "description": "The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "userSignatureDefinition",
        "x-ms-summary": ""
      },
      "dateStampProperties": {
        "description": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle.",
        "properties": {
          "dateAreaHeight": {
            "description": "The height of the rectangle.",
            "type": "string"
          },
          "dateAreaWidth": {
            "description": "The width of the rectangle.",
            "type": "string"
          },
          "dateAreaX": {
            "description": "The X axis position of the top-left corner.",
            "type": "string"
          },
          "dateAreaY": {
            "description": "The Y axis position of the top-left corner.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "dateStampProperties",
        "x-ms-summary": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://www.docusign.net/restapi/v2.1/accounts/{accountId}/users/{userId}/signatures/{signatureId}{?close_existing_signature}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            "**adoptedDateTime**: The date and time the user adopted their signature.",
            "**createdDateTime**: The UTC DateTime when the item was created.",
            "**customField**: ",
            [
              "**dateStampProperties**: Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.",
              {
                "$ul": [
                  "**dateAreaHeight**: The height of the rectangle.",
                  "**dateAreaWidth**: The width of the rectangle.",
                  "**dateAreaX**: The X axis position of the top-left corner.",
                  "**dateAreaY**: The Y axis position of the top-left corner."
                ]
              }
            ],
            "**disallowUserResizeStamp**: When **true,** users may not resize the stamp.",
            [
              "**errorDetails**: This object describes errors that occur. It is only valid for responses and ignored in requests.",
              {
                "$ul": [
                  "**errorCode**: The code associated with the error condition.",
                  "**message**: A brief message describing the error condition."
                ]
              }
            ],
            "**externalID**: Optionally specify an external identifier for the user's signature.",
            "**imageBase64**: A Base64-encoded representation of the signature image.",
            "**imageType**: Specificies the type of image. Valid values:",
            "**initials150ImageId**: The ID of the user's initials image.",
            "**initialsImageUri**: The URI for retrieving the image of the user's initials.",
            "**isDefault**: Boolean that specifies whether the signature is the default signature for the user.",
            "**lastModifiedDateTime**: The date and time that the item was last modified.",
            "**nrdsId**: The National Association of Realtors (NAR) membership ID for a user who is a realtor.",
            "**nrdsLastName**: The realtor's last name.",
            "**nrdsStatus**: The realtor's NAR membership status. The value `active` verifies that the user is a current NAR member. Valid values are:",
            "**phoneticName**: The phonetic spelling of the `signatureName`.",
            "**signature150ImageId**: The ID of the user's signature image.",
            "**signatureFont**: The font type for the signature, if the signature is not drawn. The supported font types are:",
            "**signatureId**: Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
            "**signatureImageUri**: An endpoint URI that you can use to retrieve the user's signature image.",
            "**signatureInitials**:  The initials associated with the signature.",
            "**signatureName**: Specifies the user's signature name.",
            "**signatureRights**: The rights that the user has to the signature. Valid values are:",
            "**signatureType**: Specifies the type of signature.",
            "**stampFormat**: The format of a stamp. Valid values are:",
            "**stampImageUri**: The URI for retrieving the image of the user's stamp.",
            "**stampSizeMM**: The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.",
            "**stampType**: The type of stamp. Valid values are:",
            "**status**: Indicates the envelope status. Valid values are:"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The code associated with the error condition.",
            "**message**: A brief message describing the error condition."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
