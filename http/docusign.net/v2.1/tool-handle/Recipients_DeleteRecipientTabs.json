{
  "name": "Recipients_DeleteRecipientTabs",
  "description": "Deletes one or more tabs associated with a recipient in a draft envelope.",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The external account number (int) or account ID GUID."
      },
      "envelopeId": {
        "type": "string",
        "description": "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
      },
      "recipientId": {
        "type": "string",
        "description": "A local reference that senders use to map recipients to other objects, such as specific document tabs. Within an envelope, each `recipientId` must be unique, but there is no uniqueness requirement across envelopes. For example, many envelopes assign the first recipient a `recipientId` of `1`."
      },
      "body": {
        "$ref": "#/$defs/EnvelopeRecipientTabs"
      }
    },
    "required": [
      "accountId",
      "envelopeId",
      "recipientId"
    ],
    "$defs": {
      "EnvelopeRecipientTabs": {
        "description": "All of the tabs associated with a recipient. Each property is a list of a type of tab.\n",
        "properties": {
          "approveTabs": {
            "description": "A list of\n[Approve tabs][approve].\n\nAn Approve tab enables\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\nThe value of an approve tab can't be set.\n\n[approve]:\t\t      /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/approve"
            },
            "type": "array"
          },
          "checkboxTabs": {
            "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nA Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.\n\n\n[checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/checkbox"
            },
            "type": "array"
          },
          "commentThreadTabs": {
            "description": "An array of tabs that represents a collection of comments in a comment thread. For example, if a recipient has questions about the content of a document, they can add a comment to the document and control who else can see the comment. This value can't be set.",
            "items": {
              "$ref": "#/$defs/commentThread"
            },
            "type": "array"
          },
          "commissionCountyTabs": {
            "description": "A list of\n[Commission County tabs][cc].\n\n\nA Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/commissionCounty"
            },
            "type": "array"
          },
          "commissionExpirationTabs": {
            "description": "A list of\n[Commission Expiration tabs][tabref].\n\n\nA Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/commissionExpiration"
            },
            "type": "array"
          },
          "commissionNumberTabs": {
            "description": "A list of\n[Commission Number tabs][tabref].\n\n\nA Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/commissionNumber"
            },
            "type": "array"
          },
          "commissionStateTabs": {
            "description": "A list of\n[Commission State tabs][cc].\n\n\nA Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/commissionState"
            },
            "type": "array"
          },
          "companyTabs": {
            "description": "A list of\n[Company tabs][company].\n\nA Company tab displays a field for the name of the recipient's company. This value can't be set.\n\n[company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company\n",
            "items": {
              "$ref": "#/$defs/company"
            },
            "type": "array"
          },
          "dateSignedTabs": {
            "description": "A list of\n[Date Signed tabs][dateSigned].\n\n\nA Date Signed tab displays the date that the recipient signed the document. This value can't be set.\n\n[dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/dateSigned"
            },
            "type": "array"
          },
          "dateTabs": {
            "description": "A list of\n[Date tabs][date].\n\nA Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.\n\n**Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.\n\n\n[date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/date"
            },
            "type": "array"
          },
          "declineTabs": {
            "description": "A list of\n[Decline tabs][decline].\n\nA Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.\n\n\n[decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/decline"
            },
            "type": "array"
          },
          "drawTabs": {
            "description": "A list of Draw Tabs.\n\nA Draw Tab allows the recipient to add a free-form drawing to the document.",
            "items": {
              "$ref": "#/$defs/draw"
            },
            "type": "array"
          },
          "emailAddressTabs": {
            "description": "A list of\n[Email Address tabs][emailAddress].\n\nAn Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.\n\n\n[emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/emailAddress"
            },
            "type": "array"
          },
          "emailTabs": {
            "description": "A list of\n[Email tabs][email].\n\nAn Email tab enables the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation. This value can be set.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/email"
            },
            "type": "array"
          },
          "envelopeIdTabs": {
            "description": "A list of\n[Envelope ID tabs][envelopeId].\n\nAn Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.\n\n\n[envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid\n",
            "items": {
              "$ref": "#/$defs/envelopeId"
            },
            "type": "array"
          },
          "firstNameTabs": {
            "description": "A list of\n[First Name tabs][firstName].\n\nA First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname\n",
            "items": {
              "$ref": "#/$defs/firstName"
            },
            "type": "array"
          },
          "formulaTabs": {
            "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.\n\nThe `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].\n\nIf a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n[formulaTab]:\t    \t/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/formulaTab"
            },
            "type": "array"
          },
          "fullNameTabs": {
            "description": "A list of\n[Full Name tabs][fullName].\n\nA Full Name tab displays the recipient's full name. This value can't be set.\n\n\n[fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/fullName"
            },
            "type": "array"
          },
          "initialHereTabs": {
            "description": "A list of\n[Initial Here tabs][initialHere].\n\nThis type of tab enables the recipient to initial the document. May be optional. This value can't be set.\n\n[initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/initialHere"
            },
            "type": "array"
          },
          "lastNameTabs": {
            "description": "A list of\n[Last Name tabs][lastName].\n\nA Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/lastName"
            },
            "type": "array"
          },
          "listTabs": {
            "description": "An array of List tabs.\n\nA List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/list"
            },
            "type": "array"
          },
          "notarizeTabs": {
            "description": "A list of  [Notarize tabs][notarize].\n\nA Notarize tab alerts notary recipients that they must take action on the page. This value can be set.\n\n**Note:** Only one notarize tab can appear on a page.\n\n[notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/notarize"
            },
            "type": "array"
          },
          "notarySealTabs": {
            "description": "A list of Notary Seal tabs.\n\nA Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/notarySeal"
            },
            "type": "array"
          },
          "noteTabs": {
            "description": "A list of\n[Note tabs][note].\n\nA Note tab displays additional information to the recipient in the form of a note. This value can be set.\n\n[note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/note"
            },
            "type": "array"
          },
          "numberTabs": {
            "description": "A list of\n[Number tabs][number].\n\nA Number tab enables the recipient to enter numbers and decimal points (.). This value can be set.\n\n\n\n[number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/number"
            },
            "type": "array"
          },
          "numericalTabs": {
            "description": "",
            "items": {
              "$ref": "#/$defs/numerical"
            },
            "type": "array"
          },
          "phoneNumberTabs": {
            "description": "A list of\n[Phone Number tabs][cc].\n\n\nA Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
            "items": {
              "$ref": "#/$defs/phoneNumber"
            },
            "type": "array"
          },
          "polyLineOverlayTabs": {
            "description": "This type of tab enables the recipient to strike through document text. This value can't be set
            "items": {
              "$ref": "#/$defs/polyLineOverlay"
            },
            "type": "array"
          },
          "prefillTabs": {
            "$ref": "#/$defs/prefillTabs"
          },
          "radioGroupTabs": {
            "description": "A list of [Radio Group tabs][radioGroup].\n\nA Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can be selected in a group. This value can be set.\n\n\n[radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/radioGroup"
            },
            "type": "array"
          },
          "signHereTabs": {
            "description": "A list of\n[Sign Here tabs][signHere].\n\nThis type of tab enables the recipient to sign a document. May be optional. This value can't be set.\n\n[signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/signHere"
            },
            "type": "array"
          },
          "signerAttachmentTabs": {
            "description": "A list of\n[Signer Attachment tabs][signerAttachment].\n\nThis type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.\n\n\n[signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/signerAttachment"
            },
            "type": "array"
          },
          "smartSectionTabs": {
            "description": "A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.\n\nSmart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.\n\n**Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.",
            "items": {
              "$ref": "#/$defs/smartSection"
            },
            "type": "array"
          },
          "ssnTabs": {
            "description": "A list of\n[SSN tabs][ssn].\n\nAn SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without\ndashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.\n\n\n[ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/ssn"
            },
            "type": "array"
          },
          "tabGroups": {
            "description": "An array of `tabGroup` items.\n\nTo associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.\n",
            "items": {
              "$ref": "#/$defs/tabGroup"
            },
            "type": "array"
          },
          "textTabs": {
            "description": "A list of\nText tabs.\n\nA text tab enables the recipient to enter free text. This value can be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/text"
            },
            "type": "array"
          },
          "titleTabs": {
            "description": "A list of\n[Title tabs][title].\n\nA Title tab displays the recipient's title.  This value can't be set.\n\n\n[title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/title"
            },
            "type": "array"
          },
          "viewTabs": {
            "description": "A list of\n[View tabs][view].\n\nA View tab is used with an Approve tab to handle supplemental documents.  This value can be set.\n\n[view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/view"
            },
            "type": "array"
          },
          "zipTabs": {
            "description": "A list of\n[Zip tabs][zip].\n\nA Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.\n\n\n[zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/zip"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-category": "Envelopes",
        "x-ds-definition-name": "tabs",
        "x-ds-order": "50",
        "x-ms-summary": "All of the tabs associated with a recipient. Each property is a list of a type of tab.\n"
      },
      "approve": {
        "description": "A tab that allows the recipient to approve documents\nwithout placing a signature or initials on the\ndocument.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "buttonText": {
            "description": " Specifies the approval text that displays in the tab. ",
            "type": "string"
          },
          "buttonTextMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. You can only use this when adding new tabs for a recipient. When used, the new tab inherits all of the properties of the custom tab.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "**Note:** Approve tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "approve",
        "x-ms-summary": "A tab that allows the recipient to approve documents\nwithout placing a signature or initials on the\ndocument.\n"
      },
      "propertyMetadata": {
        "description": "Metadata about a property.",
        "properties": {
          "options": {
            "description": "An array of option strings supported by this setting.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "rights": {
            "description": "Indicates whether the property is editable. Valid values are:\n\n- `editable`\n- `read_only`",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "propertyMetadata",
        "x-ms-summary": "Metadata about a property."
      },
      "errorDetails": {
        "description": "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "properties": {
          "errorCode": {
            "description": "The code associated with the error condition.",
            "type": "string"
          },
          "message": {
            "description": "A brief message describing the error condition.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "errorDetails",
        "x-ms-summary": "This object describes errors that occur. It is only valid for responses and ignored in requests."
      },
      "localePolicyTab": {
        "description": "",
        "properties": {
          "addressFormat": {
            "description": "",
            "type": "string"
          },
          "calendarType": {
            "description": "",
            "type": "string"
          },
          "cultureName": {
            "description": "",
            "type": "string"
          },
          "currencyCode": {
            "description": "The currency code for the account, based on the [ISO 4217 currency code](https://www.iso.org/iso-4217-currency-codes.html).",
            "type": "string"
          },
          "currencyNegativeFormat": {
            "description": "",
            "type": "string"
          },
          "currencyPositiveFormat": {
            "description": "",
            "type": "string"
          },
          "customDateFormat": {
            "description": "",
            "type": "string"
          },
          "customTimeFormat": {
            "description": "",
            "type": "string"
          },
          "dateFormat": {
            "description": "",
            "type": "string"
          },
          "initialFormat": {
            "description": "",
            "type": "string"
          },
          "nameFormat": {
            "description": "",
            "type": "string"
          },
          "timeFormat": {
            "description": "",
            "type": "string"
          },
          "timeZone": {
            "description": "",
            "type": "string"
          },
          "useLongCurrencyFormat": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "localePolicyTab",
        "x-ms-summary": ""
      },
      "mergeField": {
        "description": "Contains information for transferring values between Salesforce data fields and DocuSign tabs.\n",
        "properties": {
          "allowSenderToEdit": {
            "description": "When **true,** the sender can modify the value of the `mergeField` tab during the sending process.",
            "type": "string"
          },
          "allowSenderToEditMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "configurationType": {
            "description": "If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.",
            "type": "string"
          },
          "configurationTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "path": {
            "description": "Sets the object associated with the custom tab. Currently this is the Salesforce Object.",
            "type": "string"
          },
          "pathExtended": {
            "description": "Reserved for DocuSign.",
            "items": {
              "$ref": "#/$defs/pathExtendedElement"
            },
            "type": "array"
          },
          "pathExtendedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pathMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "row": {
            "description": "Specifies the row number in a Salesforce table that the merge field value corresponds to.",
            "type": "string"
          },
          "rowMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "writeBack": {
            "description": "When **true,** data entered into the merge field during Signing will update the mapped Salesforce field.",
            "type": "string"
          },
          "writeBackMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "mergeField",
        "x-ms-summary": "Contains information for transferring values between Salesforce data fields and DocuSign tabs.\n"
      },
      "pathExtendedElement": {
        "description": "",
        "properties": {
          "name": {
            "description": "",
            "type": "string"
          },
          "type": {
            "description": "The type of this tab. Values are:\n\n- Approve\n- CheckBox\n- Company\n- Date\n- DateSigned,\tDecline\n- Email,\tEmailAddress\n- EnvelopeId\n- FirstName\n- Formula\n- FullName,\tInitialHere\n- InitialHereOptional\n- LastName\n- List\n- Note\n- Number\n- Radio\n- SignerAttachment\n- SignHere\n- SignHereOptional\n- Ssn\n- Text\n- Title\n- Zip5\n- Zip5Dash4\n",
            "type": "string"
          },
          "typeName": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "pathExtendedElement",
        "x-ms-summary": ""
      },
      "smartContractInformation": {
        "description": "",
        "properties": {
          "code": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "uri": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "smartContractInformation",
        "x-ms-summary": ""
      },
      "checkbox": {
        "description": "A tab that allows the recipient to select a yes/no (on/off) option.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to apply. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "This property does not apply to `checkbox` tabs.\n\nTo require users to check\nat least one, or at most some number\nof checkboxes,\nassociate the checkbox tabs\nwith a [`tabGroup`][tabGroup].\nThen set the following `tabGroup` properties:\n\n- [`maximumAllowed`][maximumAllowed]\n- [`minimumRequired`][minimumRequired]\n- [`groupRule`][groupRule] specifies how the other two properties are interpreted.\n\nYou can find an example\nat [Stack Overflow][so].\n\n[so]:               https://stackoverflow.com/questions/58209376/checkbox-validation-using-docusign-rest-api/58210277#58210277\n[tabGroup]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups\n[groupRule]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_grouprule\n[maximumAllowed]:   /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_maximumallowed\n[minimumRequired]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_minimumrequired\n",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "selected": {
            "description": "When **true,** the checkbox is selected.",
            "type": "string"
          },
          "selectedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "selectedOriginal": {
            "description": "",
            "type": "string"
          },
          "selectedOriginalMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-7, -6)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-7, -6)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "checkbox",
        "x-ms-summary": "A tab that allows the recipient to select a yes/no (on/off) option.\n"
      },
      "commentThread": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "comments": {
            "description": "An array of comment tabs that contain information about users' comments on documents.",
            "items": {
              "$ref": "#/$defs/comment"
            },
            "type": "array"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "threadId": {
            "description": "The unique identifier for the comment thread.",
            "type": "string"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "commentThread",
        "x-ms-summary": ""
      },
      "comment": {
        "description": "",
        "properties": {
          "envelopeId": {
            "description": "The Guid of the envelope the comment thread belongs to.",
            "type": "string"
          },
          "hmac": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the comment.",
            "type": "string"
          },
          "mentions": {
            "description": "An array of userIds that are mentioned directly in the body of a comment.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "read": {
            "description": "When **true,** indicates that the comment was read.",
            "type": "boolean"
          },
          "sentByEmail": {
            "description": "The email address of the user who created the comment.",
            "type": "string"
          },
          "sentByFullName": {
            "description": "The full name of the user who created the comment.",
            "type": "string"
          },
          "sentByImageId": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "sentByInitials": {
            "description": "The initials of the user who created the comment.",
            "type": "string"
          },
          "sentByRecipientId": {
            "description": "The recipient ID of the user who created the comment.",
            "type": "string"
          },
          "sentByUserId": {
            "description": "The user ID of the user who created the comment.",
            "type": "string"
          },
          "signingGroupId": {
            "description": "The ID of the signing group that can view the comment or that created the comment.",
            "type": "string"
          },
          "signingGroupName": {
            "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
            "type": "string"
          },
          "subject": {
            "description": "The subject of the envelope.",
            "type": "string"
          },
          "tabId": {
            "description": "The unique identifier for the tab that represents the comment thread.",
            "type": "string"
          },
          "text": {
            "description": "The content of the comment, as UTF-8 text. \n\nMaximum Length: 500 characters.\n\n**Note:** The maximum size allowed for the entire message body is 32 KB. ",
            "type": "string"
          },
          "threadId": {
            "description": "The unique identifier for the comment thread.",
            "type": "string"
          },
          "threadOriginatorId": {
            "description": "The userId of the user who created the thread.",
            "type": "string"
          },
          "timeStampFormatted": {
            "description": "The time the comment was created, formatted according to the format of the user who created the comment.",
            "type": "string"
          },
          "timestamp": {
            "description": "The time the comment was created.",
            "type": "string"
          },
          "visibleTo": {
            "description": "The user IDs of the users that the comment is visible to.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "comment",
        "x-ms-summary": ""
      },
      "commissionCounty": {
        "description": "A Commission County tab displays the county of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "commissionCounty",
        "x-ms-summary": "A Commission County tab displays the county of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n"
      },
      "commissionExpiration": {
        "description": "A Commission Expiration tab displays the expiration date of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "commissionExpiration",
        "x-ms-summary": "A Commission Expiration tab displays the expiration date of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n"
      },
      "commissionNumber": {
        "description": "A Commission Number tab displays a notary's commission number. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "commissionNumber",
        "x-ms-summary": "A Commission Number tab displays a notary's commission number. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n"
      },
      "commissionState": {
        "description": "A Commission State tab displays the state in which a notary's commission was granted. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "commissionState",
        "x-ms-summary": "A Commission State tab displays the state in which a notary's commission was granted. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n"
      },
      "company": {
        "description": "A tab that displays the recipient's company name.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "company",
        "x-ms-summary": "A tab that displays the recipient's company name.\n"
      },
      "dateSigned": {
        "description": "A tab that displays the date that the recipient signed the\ndocument.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "**Note:** Date Signed tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "dateSigned",
        "x-ms-summary": "A tab that displays the date that the recipient signed the\ndocument.\n"
      },
      "date": {
        "description": "A tab that allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "date",
        "x-ms-summary": "A tab that allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n"
      },
      "decline": {
        "description": "A tab that allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "buttonText": {
            "description": " Specifies the decline text displayed in the tab.",
            "type": "string"
          },
          "buttonTextMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "declineReason": {
            "description": "The reason the recipient declined the document.",
            "type": "string"
          },
          "declineReasonMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "**Note:** Decline tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "decline",
        "x-ms-summary": "A tab that allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n"
      },
      "draw": {
        "description": "A tab that allows the recipient to add a free-form drawing to the document.",
        "properties": {
          "allowSignerUpload": {
            "description": "When **true,** the recipient can upload an image to use as the background of the drawing field. The default value is **false.**",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "useBackgroundAsCanvas": {
            "description": "",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "draw",
        "x-ms-summary": "A tab that allows the recipient to add a free-form drawing to the document."
      },
      "emailAddress": {
        "description": "A tab that displays the recipient's email as entered in the\nrecipient information.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "**Note:** Email Address tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "emailAddress",
        "x-ms-summary": "A tab that displays the recipient's email as entered in the\nrecipient information.\n"
      },
      "email": {
        "description": "A tab that allows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "email",
        "x-ms-summary": "A tab that allows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n"
      },
      "envelopeId": {
        "description": "A tab that displays the envelope ID.\n\n**Note:**  The eSignature API uses the name `envelopeId` two ways:\n\n- As a _property_ of type `string` used to identify an envelope  by its GUID.\n- As an _object_ used to represent an envelope tab that displays\n  the envelope's GUID.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "envelopeId",
        "x-ms-summary": "A tab that displays the envelope ID.\n\n**Note:**  The eSignature API uses the name `envelopeId` two ways:\n\n- As a _property_ of type `string` used to identify an envelope  by its GUID.\n- As an _object_ used to represent an envelope tab that displays\n  the envelope's GUID.\n"
      },
      "firstName": {
        "description": "A tab that displays the recipient's first name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "firstName",
        "x-ms-summary": "A tab that displays the recipient's first name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n"
      },
      "formulaTab": {
        "description": "The value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formula": {
            "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n",
            "type": "string"
          },
          "formulaMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "hidden": {
            "description": "If this is a regular formula (no `paymentDetails` property is present):\n\n* **true:** The tab is hidden.\n* **false:** The tab is shown.\n\nIf the formula is payment item (a `paymentDetails` property is present):\n\n* **true:** The tab is displayed as a payment.\n* **false:** The tab is displayed as a regular formula.\n",
            "type": "string"
          },
          "hiddenMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "isPaymentAmountMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "paymentDetails": {
            "$ref": "#/$defs/paymentDetails"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "roundDecimalPlaces": {
            "description": "The number of decimal places to round to.",
            "type": "string"
          },
          "roundDecimalPlacesMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+35, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+35, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "formulaTab",
        "x-ms-summary": "The value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n"
      },
      "paymentDetails": {
        "description": "When a formula tab\nhas a `paymentDetails` property,\nthe formula tab\nis a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n",
        "properties": {
          "allowedPaymentMethods": {
            "description": "An array of accepted payment methods:\n\n* `CreditCard`\n* `ApplePay`\n* `AndroidPay`\n* `BankAccount`\n\nFor example, if you only accept credit cards and ACH transfers, you would set this property to:\n\n`'[\"BankAccount\", \"CreditCard\"]'`\n\nDo not specify `BankAccount` (ACH) if you are also using in-person signing.\n",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "chargeId": {
            "description": "The GUID set by the payment gateway (such as Stripe) that identifies a transaction. The `chargeId` is created when authorizing a payment and must be referenced when completing a payment.",
            "type": "string"
          },
          "currencyCode": {
            "description": "Specifies the three-letter\n[ISO 4217][ISO 4217] currency code for the payment.\n\nSupported currencies are:\n\n* AUD: Australian dollar\n* CAD: Canadian dollar\n* EUR: Euro\n* GBP: Great Britain pound\n* USD: United States dollar\n\nSpecifying any other ISO 4217 code for payments is an error.\n\n[ISO 4217]:          https://en.wikipedia.org/wiki/ISO_4217\n",
            "type": "string"
          },
          "currencyCodeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customMetadata": {
            "description": "This is a sender-defined field that passes any extra metadata about the payment that will show up in the Authorize.net transaction under **Description** in the merchant gateway portal. The custom metadata will be recorded in downloaded Authorize.net reports. \n\nThe following example shows what the **Description** field of the transaction will look like: \n\n`<envelopeID>, <customMetadata>`",
            "type": "string"
          },
          "customMetadataRequired": {
            "description": "A sender-defined field that specifies whether custom metadata is required for the transaction. When **true,** custom metadata is required. This property only applies if you are using an Authorize.net payment gateway account.",
            "type": "boolean"
          },
          "customerId": {
            "description": "The customer ID.",
            "type": "string"
          },
          "gatewayAccountId": {
            "description": "A GUID that identifies the payment gateway\nconnected to the sender's DocuSign account.\n\nThere is no public API\nfor connecting payment gateway accounts\nYou must connect and manage payment gateway accounts\nthrough the DocuSign Admin console\nand through your chosen payment gateway.\n\nYou can get the gateway account ID\nin the Payments section\nof the DocuSign Admin console.\n\n\n[paymentgateways]:  https://support.docusign.com/en/guides/managing-payment-gateways\n",
            "type": "string"
          },
          "gatewayAccountIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "gatewayDisplayName": {
            "description": "Display name of the gateway connected to sender's DocuSign account.\n\nPossible values are: Stripe, Braintree, Authorize.Net, CyberSource, Zuora, Elavon.",
            "type": "string"
          },
          "gatewayName": {
            "description": "Name of the gateway connected to sender's DocuSign account.\n\nPossible values are:\n\n* `Stripe`\n* `Braintree`\n* `AuthorizeDotNet`\n* `CyberSource`\n* `Zuora`\n* `Elavon`",
            "type": "string"
          },
          "lineItems": {
            "description": "A payment formula can have\none or more line items\nthat provide detail about\nindividual items in a payment request.\n\nThe list of line items\nare returned as metadata\nto the payment gateway.\n",
            "items": {
              "$ref": "#/$defs/paymentLineItem"
            },
            "type": "array"
          },
          "paymentOption": {
            "description": "This property specifies how the signer's collected payment details will be used.\n\nValid values:\n\n- `authorize`: The payment details will be used to collect payment. This is the default value.\n- `save`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway.\n- `save_and_authorize`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway and will also be used to collect payment.",
            "type": "string"
          },
          "paymentSourceId": {
            "description": "The payment source ID.",
            "type": "string"
          },
          "signerValues": {
            "$ref": "#/$defs/paymentSignerValues"
          },
          "status": {
            "description": "This read-only property describes the status of a payment.\n\n* `new`<br>\n  This is a new payment request.\n  The envelope has been created,\n  but no payment authorizations have been made.\n\n* `auth_complete`<br>\n  A recipient has entered their credit card information,\n  but the envelope has not been completed.\n  The card has not been charged.\n\n* `payment_complete`<br>\n  The recipient's card has been charged.\n\n* `payment_capture_failed`<br>\n  Final charge failed.\n  This can happen when too much time\n  passes between authorizing the payment\n  and completing the document.\n\n* `future_payment_saved` <br>\nThe recipient's payment method has been saved to the sender's payment gateway.\n",
            "type": "string"
          },
          "subGatewayName": {
            "description": "",
            "type": "string"
          },
          "total": {
            "$ref": "#/$defs/money"
          }
        },
        "type": "object",
        "x-ds-definition-name": "paymentDetails",
        "x-ms-summary": "When a formula tab\nhas a `paymentDetails` property,\nthe formula tab\nis a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\n"
      },
      "paymentLineItem": {
        "description": "A line item describes details\nabout an individual line item\nin a payment request.\n\n",
        "properties": {
          "amountReference": {
            "description": "This is a the `tabLabel`\nthat specifies the amount paid\nfor the line items.\n\n",
            "type": "string"
          },
          "description": {
            "description": "A sender-defined description of the line item.\n",
            "type": "string"
          },
          "itemCode": {
            "description": "This is the sender-defined\nSKU, inventory number, or other item code\nfor the line item.\n",
            "type": "string"
          },
          "name": {
            "description": "This is a sender-defined\nproduct name, service name,\nor other designation for the line item.\n",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "paymentLineItem",
        "x-ms-summary": "A line item describes details\nabout an individual line item\nin a payment request.\n\n"
      },
      "paymentSignerValues": {
        "description": "",
        "properties": {
          "paymentOption": {
            "description": "This property specifies how the signer's collected payment details will be used.\n\nValid values:\n\n- `authorize`: The payment details will be used to collect payment. This is the default value.\n- `save`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway.\n- `save_and_authorize`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway and will also be used to collect payment.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "paymentSignerValues",
        "x-ms-summary": ""
      },
      "money": {
        "description": "Describes information\nabout the `total` of a payment.\n",
        "properties": {
          "amountInBaseUnit": {
            "description": "The total payment amount\nin the currency's base unit.\nFor example, for USD\nthe base currency is one cent.\n",
            "type": "string"
          },
          "currency": {
            "description": "The three-letter\n[ISO 4217][ISO 4217] currency code for the payment.\n\nFor example:\n\n* AUD Australian dollar\n* CAD Canadian dollar\n* EUR Euro\n* GBP Great Britain pound\n* USD United States dollar\n\nThis is a read-only property.\n\n[ISO 4217]:          https://en.wikipedia.org/wiki/ISO_4217\n",
            "type": "string"
          },
          "displayAmount": {
            "description": "The payment amount as displayed\nin the `currency`.\n\nFor example, if the payment amount\nis USD 12.59,\nthe `amountInBaseUnit` is 1259 (cents),\nand the displayed amount is `$12.59 USD`.\n\nThis is a read-only property.\n",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "money",
        "x-ms-summary": "Describes information\nabout the `total` of a payment.\n"
      },
      "fullName": {
        "description": "A tab that displays the recipient's full name.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "fullName",
        "x-ms-summary": "A tab that displays the recipient's full name.\n"
      },
      "initialHere": {
        "description": "A tab that allows the recipient to initial the document. May\nbe optional.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "handDrawRequired": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "optional": {
            "description": "When **true,** the recipient does not need to complete this tab to complete the signing process.",
            "type": "string"
          },
          "optionalMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "scaleValue": {
            "description": " Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.",
            "type": "string"
          },
          "scaleValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+2, -7)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+2, -7)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "initialHere",
        "x-ms-summary": "A tab that allows the recipient to initial the document. May\nbe optional.\n"
      },
      "lastName": {
        "description": "A tab that displays the recipient's last name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "lastName",
        "x-ms-summary": "A tab that displays the recipient's last name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n"
      },
      "list": {
        "description": "This tab offers a list of options to choose from.\nThe `listItems`\nproperty contains a list of\n[`listItem`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/)\nobjects to specify the selectable options.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "listItems": {
            "description": "The list of values that can be selected by senders. The list values are separated by semi-colons. Example: [one;two;three;four]\n\nMaximum Length of listItems:  2048 characters.\nMaximum Length of items in the list: 100 characters. \n",
            "items": {
              "$ref": "#/$defs/listItem"
            },
            "type": "array"
          },
          "listSelectedValue": {
            "description": "The value in the list that is selected by default.",
            "type": "string"
          },
          "listSelectedValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "The value to use when the item is selected.",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "list",
        "x-ms-summary": "This tab offers a list of options to choose from.\nThe `listItems`\nproperty contains a list of\n[`listItem`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/)\nobjects to specify the selectable options.\n"
      },
      "listItem": {
        "description": "One of the selectable items\nin the `listItems` property\nof a [`list`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/) tab.",
        "properties": {
          "selected": {
            "description": "When **true,** indicates that this item is the default selection shown to a signer. \n\nOnly one selection can be set as the default.",
            "type": "string"
          },
          "selectedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "text": {
            "description": "Specifies the text that is shown in the dropdown list. ",
            "type": "string"
          },
          "textMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value that is used when the list item is selected.",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "listItem",
        "x-ms-summary": "One of the selectable items\nin the `listItems` property\nof a [`list`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/) tab."
      },
      "notarize": {
        "description": "A tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page.",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "notarize",
        "x-ms-summary": "A tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page."
      },
      "notarySeal": {
        "description": "A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "scaleValue": {
            "description": "Sets the size of the tab. This field accepts values from `0.5` to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.",
            "type": "string"
          },
          "scaleValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "notarySeal",
        "x-ms-summary": "A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/"
      },
      "note": {
        "description": "A tab that displays additional information, in the form of a\nnote, for the recipient.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "**Note:** Note tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "note",
        "x-ms-summary": "A tab that displays additional information, in the form of a\nnote, for the recipient.\n"
      },
      "number": {
        "description": "A tab that allows the recipient to enter numbers and decimal\n(.) points.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formula": {
            "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n",
            "type": "string"
          },
          "formulaMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "number",
        "x-ms-summary": "A tab that allows the recipient to enter numbers and decimal\n(.) points.\n"
      },
      "numerical": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This ID must refer to an existing document.\n",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxNumericalValue": {
            "description": "",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "minNumericalValue": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "numericalValue": {
            "description": "",
            "type": "string"
          },
          "originalNumericalValue": {
            "description": "",
            "type": "string"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique ID for the recipient. It indicates which recipient the tab applies to.\n",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this tab is shared.\n",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationType": {
            "description": "",
            "type": "string"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "numerical",
        "x-ms-summary": ""
      },
      "phoneNumber": {
        "description": "A Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "phoneNumber",
        "x-ms-summary": "A Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/"
      },
      "polyLineOverlay": {
        "description": "This tab enables users to strike through the text of a document. The tab is implemented as a line represented as a pair of x and y coordinates.",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "graphicsContext": {
            "$ref": "#/$defs/graphicsContext"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "overlayType": {
            "description": "The type of overlay to use. The API currently supports only the `outline` overlay type.",
            "type": "string"
          },
          "overlayTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "polyLines": {
            "description": "An array of `polyLine` objects that contain x- and y-coordinates representing the locations of the lines.",
            "items": {
              "$ref": "#/$defs/polyLine"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** indicates that the tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "polyLineOverlay",
        "x-ms-summary": "This tab enables users to strike through the text of a document. The tab is implemented as a line represented as a pair of x and y coordinates."
      },
      "graphicsContext": {
        "description": "",
        "properties": {
          "fillColor": {
            "description": "The fill color to use for the overlay. Colors are typically specified by their RGB hex values, but you can also use a [friendly CSS color name](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).",
            "type": "string"
          },
          "lineColor": {
            "description": "The line color to use for the overlay. Colors are typically specified by their RGB hex values, but you can also use a [friendly CSS color name](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).",
            "type": "string"
          },
          "lineWeight": {
            "description": "The line weight or thickness to use for the overlay.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "graphicsContext",
        "x-ms-summary": ""
      },
      "polyLine": {
        "description": "",
        "properties": {
          "x1": {
            "description": "",
            "type": "string"
          },
          "x2": {
            "description": "",
            "type": "string"
          },
          "y1": {
            "description": "",
            "type": "string"
          },
          "y2": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "polyLine",
        "x-ms-summary": ""
      },
      "prefillTabs": {
        "description": "Prefill tabs are tabs\nthat the sender can fill in\nbefore the envelope is sent.\nThey are sometimes called\nsender tags or pre-fill fields.\n\nOnly the following tab types can be\nprefill tabs:\n\n- text\n- check boxes\n- radio buttons\n\n\n\n[Pre-Fill Your Own Document Fields][app]\ndescribes how prefill tabs\nwork in the web application.\n\n\n[Customize your envelopes with pre-fill fields][catblog]\nshows how to use prefill tabs\nin your application using the eSignature\nSDKs.\n\n[app]:      https://support.docusign.com/en/guides/ndse-user-guide-prefill-fields\n[catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields",
        "properties": {
          "checkboxTabs": {
            "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nA Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.\n\n\n[checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/checkbox"
            },
            "type": "array"
          },
          "dateTabs": {
            "description": "A list of\n[Date tabs][date].\n\nA Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.\n\n**Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.\n\n\n[date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/date"
            },
            "type": "array"
          },
          "emailTabs": {
            "description": "A list of\n[Email tabs][email].\n\nAn Email tab enables the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation. This value can be set.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/email"
            },
            "type": "array"
          },
          "numberTabs": {
            "description": "A list of\n[Number tabs][number].\n\nA Number tab enables the recipient to enter numbers and decimal points (.). This value can be set.\n\n\n\n[number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/number"
            },
            "type": "array"
          },
          "radioGroupTabs": {
            "description": "A list of [Radio Group tabs][radioGroup].\n\nA Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can be selected in a group. This value can be set.\n\n\n[radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/radioGroup"
            },
            "type": "array"
          },
          "senderCompanyTabs": {
            "description": "",
            "items": {
              "$ref": "#/$defs/senderCompany"
            },
            "type": "array"
          },
          "senderNameTabs": {
            "description": "",
            "items": {
              "$ref": "#/$defs/senderName"
            },
            "type": "array"
          },
          "ssnTabs": {
            "description": "A list of\n[SSN tabs][ssn].\n\nAn SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without\ndashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.\n\n\n[ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/ssn"
            },
            "type": "array"
          },
          "tabGroups": {
            "description": "An array of `tabGroup` items.\n\nTo associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.\n",
            "items": {
              "$ref": "#/$defs/tabGroup"
            },
            "type": "array"
          },
          "textTabs": {
            "description": "A list of\nText tabs.\n\nA text tab enables the recipient to enter free text. This value can be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/text"
            },
            "type": "array"
          },
          "zipTabs": {
            "description": "A list of\n[Zip tabs][zip].\n\nA Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.\n\n\n[zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
            "items": {
              "$ref": "#/$defs/zip"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "prefillTabs",
        "x-ms-summary": "Prefill tabs are tabs\nthat the sender can fill in\nbefore the envelope is sent.\nThey are sometimes called\nsender tags or pre-fill fields.\n\nOnly the following tab types can be\nprefill tabs:\n\n- text\n- check boxes\n- radio buttons\n\n\n\n[Pre-Fill Your Own Document Fields][app]\ndescribes how prefill tabs\nwork in the web application.\n\n\n[Customize your envelopes with pre-fill fields][catblog]\nshows how to use prefill tabs\nin your application using the eSignature\nSDKs.\n\n[app]:      https://support.docusign.com/en/guides/ndse-user-guide-prefill-fields\n[catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields"
      },
      "radioGroup": {
        "description": "This group tab is used to place radio buttons on a document.\nThe `radios` property\ncontains a list of\n[`radio`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)\nobjects  associated with the group. Only one radio button can\nbe selected in a group.\n",
        "properties": {
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "groupName": {
            "description": "The name of the group. The search_text provided in the call automatically performs a wild card search on group_name.",
            "type": "string"
          },
          "groupNameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "radios": {
            "description": "Specifies the locations and status for radio buttons that are grouped together.",
            "items": {
              "$ref": "#/$defs/radio"
            },
            "type": "array"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "tooltipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "radioGroup",
        "x-ms-summary": "This group tab is used to place radio buttons on a document.\nThe `radios` property\ncontains a list of\n[`radio`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)\nobjects  associated with the group. Only one radio button can\nbe selected in a group.\n"
      },
      "radio": {
        "description": "One of the selectable radio buttons\nin the `radios` property\nof a [`radioGroup`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) tab.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "selected": {
            "description": "When **true,** the radio button is selected.",
            "type": "string"
          },
          "selectedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "radio",
        "x-ms-summary": "One of the selectable radio buttons\nin the `radios` property\nof a [`radioGroup`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) tab.\n"
      },
      "senderCompany": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "senderCompany",
        "x-ms-summary": ""
      },
      "senderName": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "senderName",
        "x-ms-summary": ""
      },
      "ssn": {
        "description": "A one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "ssn",
        "x-ms-summary": "A one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n"
      },
      "tabGroup": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "groupLabel": {
            "description": "A unique identifier for a tab group. To assign a tab to the `tabGroup`, you assign the `TabGroupLabel` to the `tab.TabGroupLabels` array.",
            "type": "string"
          },
          "groupLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "groupRule": {
            "description": "Specifies how `maximumAllowed` and `minimumRequired`\nare interpreted when selecting tabs in a `tabGroup`.\n\nPossible values are:\n\n- `SelectAtLeast`\n- `SelectAtMost`\n- `SelectExactly`\n- `SelectARange`\n\n",
            "type": "string"
          },
          "groupRuleMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maximumAllowed": {
            "description": "The maximum number of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.",
            "type": "string"
          },
          "maximumAllowedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "minimumRequired": {
            "description": "The minimum number of of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.",
            "type": "string"
          },
          "minimumRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabScope": {
            "description": "The scope of the tab group. Possible values are:\n\n- `document`\n- `envelope` (default)",
            "type": "string"
          },
          "tabScopeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "tabGroup",
        "x-ms-summary": ""
      },
      "text": {
        "description": "A tab that allows the recipient to enter any type of text.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formula": {
            "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\n",
            "type": "string"
          },
          "formulaMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "text",
        "x-ms-summary": "A tab that allows the recipient to enter any type of text.\n"
      },
      "zip": {
        "description": "A tab that allows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireAll": {
            "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
            "type": "string"
          },
          "requireAllMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requireInitialOnSharedChange": {
            "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
            "type": "string"
          },
          "requireInitialOnSharedChangeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "senderRequired": {
            "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
            "type": "string"
          },
          "senderRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shareToRecipients": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "shareToRecipientsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "useDash4": {
            "description": "When **true,** ZIP+4 format is used.",
            "type": "string"
          },
          "useDash4Metadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationMessage": {
            "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
            "type": "string"
          },
          "validationMessageMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "validationPattern": {
            "description": "A regular expression used to validate input for the tab.",
            "type": "string"
          },
          "validationPatternMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "zip",
        "x-ms-summary": "A tab that allows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n"
      },
      "signHere": {
        "description": "A tab that allows the recipient to sign a document. May be\noptional.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "handDrawRequired": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "height": {
            "description": "Not applicable to Sign Here tab.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "isSealSignTab": {
            "description": "When **true,**  the tab contains a visual representation for an electronic seal in a document.",
            "type": "string"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.\n",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "optional": {
            "description": "When **true,** the recipient does not need to complete this tab to complete the signing process.",
            "type": "string"
          },
          "optionalMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "scaleValue": {
            "description": "Scales the size of the tab. This field accepts values from 0.5 to 2.0, where  0.5 is half the normal size, 1.0 is normal size, and 2.0 is twice the normal size.",
            "type": "string"
          },
          "scaleValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "stamp": {
            "$ref": "#/$defs/stamp"
          },
          "stampType": {
            "description": "The type of stamp. Valid values are:\n\n- `signature`: A signature image. This is the default value.\n- `stamp`: A stamp image.\n- null",
            "type": "string"
          },
          "stampTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "Not applicable to Sign Here tab.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+1, -7)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+1, -7)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "signHere",
        "x-ms-summary": "A tab that allows the recipient to sign a document. May be\noptional.\n"
      },
      "stamp": {
        "description": "",
        "properties": {
          "adoptedDateTime": {
            "description": "The UTC date and time when the user adopted the signature.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "The UTC DateTime when the item was created.",
            "type": "string"
          },
          "customField": {
            "description": "",
            "type": "string"
          },
          "dateStampProperties": {
            "$ref": "#/$defs/dateStampProperties"
          },
          "disallowUserResizeStamp": {
            "description": "When **true,** users may not resize the stamp.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "externalID": {
            "description": "Optionally specify an external identifier for the user's signature.",
            "type": "string"
          },
          "imageBase64": {
            "description": "",
            "type": "string"
          },
          "imageType": {
            "description": "Specificies the type of image. Valid values:\n\n- `stamp_image`\n- `signature_image`\n- `initials_image`",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The date and time that the item was last modified.",
            "type": "string"
          },
          "phoneticName": {
            "description": "The phonetic spelling of the `signatureName`.",
            "type": "string"
          },
          "signatureName": {
            "description": "Specifies the user's signature name.",
            "type": "string"
          },
          "stampFormat": {
            "description": "The format of a stamp. Valid values are:\n\n- `NameHanko`: The stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents the signer's name and the date. ",
            "type": "string"
          },
          "stampImageUri": {
            "description": "The URI for retrieving the image of the user's stamp.",
            "type": "string"
          },
          "stampSizeMM": {
            "description": "The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "stamp",
        "x-ms-summary": ""
      },
      "dateStampProperties": {
        "description": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle.",
        "properties": {
          "dateAreaHeight": {
            "description": "The height of the rectangle.",
            "type": "string"
          },
          "dateAreaWidth": {
            "description": "The width of the rectangle.",
            "type": "string"
          },
          "dateAreaX": {
            "description": "The X axis position of the top-left corner.",
            "type": "string"
          },
          "dateAreaY": {
            "description": "The Y axis position of the top-left corner.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "dateStampProperties",
        "x-ms-summary": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle."
      },
      "signerAttachment": {
        "description": "A tab that allows the recipient to attach supporting\ndocuments to an envelope.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "handDrawRequired": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "optional": {
            "description": "When **true,** the recipient does not need to complete this tab to complete the signing process.",
            "type": "string"
          },
          "optionalMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "scaleValue": {
            "description": "Sets the size of the tab. This field accepts values from `0.5` to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.",
            "type": "string"
          },
          "scaleValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+0, -24)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+0, -24)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "signerAttachment",
        "x-ms-summary": "A tab that allows the recipient to attach supporting\ndocuments to an envelope.\n"
      },
      "smartSection": {
        "description": "",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caseSensitive": {
            "description": "When **true,** the `startAnchor` and `endAnchor` for the Smart Section must match both the case and the content of the strings in the HTML.",
            "type": "boolean"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "displaySettings": {
            "$ref": "#/$defs/smartSectionDisplaySettings"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "endAnchor": {
            "description": "Specifies the end of the area in the HTML where the display settings will be applied. If you do not specify an end anchor, the end of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
            "type": "string"
          },
          "endPosition": {
            "$ref": "#/$defs/smartSectionAnchorPosition"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "overlayType": {
            "description": "The type of overlay to draw on the document. The following overlay types are supported:\n\n- `line`\n- `outline`\n",
            "type": "string"
          },
          "overlayTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "removeEndAnchor": {
            "description": "When **true,** removes the end anchor string for the Smart Section from the HTML, preventing it from displaying.",
            "type": "boolean"
          },
          "removeStartAnchor": {
            "description": "When **true,** removes the start anchor string for the Smart Section from the HTML, preventing it from displaying.",
            "type": "boolean"
          },
          "shared": {
            "description": "When **true,** this custom tab is shared.",
            "type": "string"
          },
          "sharedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "startAnchor": {
            "description": "Specifies the beginning of the area in the HTML where the display settings will be applied. If you do not specify a start anchor, the beginning of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
            "type": "string"
          },
          "startPosition": {
            "$ref": "#/$defs/smartSectionAnchorPosition"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "smartSection",
        "x-ms-summary": ""
      },
      "smartSectionDisplaySettings": {
        "description": "These properties define how a Smart Section displays. A Smart Section is a type of display section.",
        "properties": {
          "cellStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on responsive table cells. Only valid in display sections of `responsive_table` or `responsive_table_single_column` types.",
            "type": "string"
          },
          "collapsibleSettings": {
            "$ref": "#/$defs/smartSectionCollapsibleDisplaySettings"
          },
          "display": {
            "description": "Indicates the display type. Must be one of the following enum values:\n\n- **inline:** Leaves the HTML where it is in the document. This allows for adding a label or presenting on a separate page.\n- **collapsible:** The HTML in the section may be expanded or collapsed. By default, the section is expanded.\n- **collapsed:** The HTML in the section may be expanded or collapsed. By default, the section is collapsed.\n- **responsive_table:** Converts the section into a responsive table. Note that this style is applied only on HTML tables that fall within the `startAnchor` and `endAnchor` positions.\n- **responsive_table_single_column:** Converts the section into a responsive, single-column table. Note that this style is applied only on HTML tables that fall within the `startAnchor` and `endAnchor` positions. The table is converted to a single column in which each column becomes a row and is stacked.\n- **print_only:** Prevents this portion of the HTML from displaying in the responsive signing view.",
            "type": "string"
          },
          "displayLabel": {
            "description": "The label to add to this display section in the signing page.\n",
            "type": "string"
          },
          "displayOrder": {
            "description": "The position on the page where the display section appears.",
            "format": "int32",
            "type": "integer"
          },
          "displayPageNumber": {
            "description": "The number of the page on which the display section appears.",
            "format": "int32",
            "type": "integer"
          },
          "hideLabelWhenOpened": {
            "description": "When **true,** the `displayLabel` is hidden when the display section is expanded and the display section is no longer collapsible. This property is valid only when the value of the `display` property is `collapsed`.",
            "type": "boolean"
          },
          "inlineOuterStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on inline display sections. This property is valid only when the value of the `display` property is `inline`.",
            "type": "string"
          },
          "labelWhenOpened": {
            "description": "The label for the display section when it is expanded from a collapsed state. This label displays only on the first opening and is only valid with the value of the `display` property is `collapsed`.",
            "type": "string"
          },
          "preLabel": {
            "description": "Enables you to add descriptive text that appears before a collapsed section or continue button.",
            "type": "string"
          },
          "scrollToTopWhenOpened": {
            "description": "When **true** and the section is expanded,\nthe position of the section-close control\nscrolls to the top of the screen. This property is only valid when the value of the `display` property is `collapsed`.\n",
            "type": "boolean"
          },
          "tableStyle": {
            "description": "Specifies the valid CSS-formatted styles to use on responsive tables. This property is valid only when the value of the `display` property is `responsive_table` or `responsive_table_single_column`.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "smartSectionDisplaySettings",
        "x-ms-summary": "These properties define how a Smart Section displays. A Smart Section is a type of display section."
      },
      "smartSectionCollapsibleDisplaySettings": {
        "description": "",
        "properties": {
          "arrowClosed": {
            "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the closed state.\n\nOne of the following:\n\n- `up`: In the closed state, the disclosure arrow points up.\n- `down`: In the closed state, the disclosure arrow points down.\n- `left`: In the closed state, the disclosure arrow points left.\n- `right`: In the closed state, the disclosure arrow points right.\n",
            "type": "string"
          },
          "arrowColor": {
            "description": "A CSS color value (such as `#DCF851`) that indicates the color of the arrow.\n",
            "type": "string"
          },
          "arrowLocation": {
            "description": "The location of the arrow relative to the collapsible section's label. Possible values are:\n\n- `right` (default)\n- `left`\n",
            "type": "string"
          },
          "arrowOpen": {
            "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the open state.\n\nOne of the following:\n\n- `up`: In the open state, the disclosure arrow points up.\n- `down`: In the open state, the disclosure arrow points down.\n- `left`: In the open state, the disclosure arrow points left.\n- `right`: In the open state, the disclosure arrow points right.\n",
            "type": "string"
          },
          "arrowSize": {
            "description": "Indicates the size of the collapsible arrows. Possible values are:\n\n- `small`\n- `large` (default)\n",
            "type": "string"
          },
          "arrowStyle": {
            "description": "The name of the CSS style to be used on collapsible arrow section.\n",
            "type": "string"
          },
          "containerStyle": {
            "description": "The name of the CSS style to be used for the collapsible container.\n",
            "type": "string"
          },
          "labelStyle": {
            "description": "The name of the CSS style to be used for the collapsible container's label.",
            "type": "string"
          },
          "onlyArrowIsClickable": {
            "description": "When **true,** only the arrow is clickable to expand or collapse the section.\nWhen **false** (the default), both the label and the arrow are clickable.\n\nIf no arrow is used, this setting is ignored.\n",
            "type": "boolean"
          },
          "outerLabelAndArrowStyle": {
            "description": "The name of the CSS style to be used for the collapsible container's outer label and arrow style.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "smartSectionCollapsibleDisplaySettings",
        "x-ms-summary": ""
      },
      "smartSectionAnchorPosition": {
        "description": "",
        "properties": {
          "pageNumber": {
            "description": "Specifies the page number on which the tab is located.",
            "format": "int32",
            "type": "integer"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "format": "double",
            "type": "number"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object",
        "x-ds-definition-name": "smartSectionAnchorPosition",
        "x-ms-summary": ""
      },
      "title": {
        "description": "A tab that displays the recipient's title.\n",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "concealValueOnDocument": {
            "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
            "type": "string"
          },
          "concealValueOnDocumentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "disableAutoSize": {
            "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
            "type": "string"
          },
          "disableAutoSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "locked": {
            "description": "When **true,** the signer cannot change the data of the custom tab.",
            "type": "string"
          },
          "lockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "maxLength": {
            "description": "An optional value that describes the maximum length of the property when the property is a string.",
            "type": "string"
          },
          "maxLengthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
            "type": "string"
          },
          "nameMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "originalValue": {
            "description": "The initial value of the tab when it was sent to the recipient. ",
            "type": "string"
          },
          "originalValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the signer is required to fill out this tab.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "value": {
            "description": "Specifies the value of the tab. ",
            "type": "string"
          },
          "valueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "title",
        "x-ms-summary": "A tab that displays the recipient's title.\n"
      },
      "view": {
        "description": "This tab is used with the Approve tab to handle supplemental documents.",
        "properties": {
          "anchorAllowWhiteSpaceInCharacters": {
            "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
            "type": "string"
          },
          "anchorAllowWhiteSpaceInCharactersMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorCaseSensitive": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
            "type": "string"
          },
          "anchorCaseSensitiveMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorHorizontalAlignment": {
            "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorHorizontalAlignmentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorIgnoreIfNotPresent": {
            "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
            "type": "string"
          },
          "anchorIgnoreIfNotPresentMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorMatchWholeWord": {
            "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
            "type": "string"
          },
          "anchorMatchWholeWordMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorString": {
            "description": "Specifies the string to find in the document and use as the basis for tab placement.",
            "type": "string"
          },
          "anchorStringMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorTabProcessorVersion": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "anchorTabProcessorVersionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorUnits": {
            "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
            "type": "string"
          },
          "anchorUnitsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorXOffset": {
            "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorXOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "anchorYOffset": {
            "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
            "type": "string"
          },
          "anchorYOffsetMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "bold": {
            "description": "When **true,** the information in the tab is bold.",
            "type": "string"
          },
          "boldMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "buttonText": {
            "description": "The text to display on the button.",
            "type": "string"
          },
          "buttonTextMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "caption": {
            "description": "",
            "type": "string"
          },
          "captionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentLabel": {
            "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
            "type": "string"
          },
          "conditionalParentLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "conditionalParentValue": {
            "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
            "type": "string"
          },
          "conditionalParentValueMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "customTabId": {
            "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
            "type": "string"
          },
          "customTabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "documentId": {
            "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
            "type": "string"
          },
          "documentIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "font": {
            "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
            "type": "string"
          },
          "fontColor": {
            "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
            "type": "string"
          },
          "fontColorMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "fontSize": {
            "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
            "type": "string"
          },
          "fontSizeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formOrder": {
            "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
            "type": "string"
          },
          "formOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageLabel": {
            "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
            "type": "string"
          },
          "formPageLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "formPageNumber": {
            "description": "An integer specifying the order in which to present the guided form pages.",
            "type": "string"
          },
          "formPageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "height": {
            "description": "The height of the tab in pixels.",
            "type": "string"
          },
          "heightMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "italic": {
            "description": "When **true,** the information in the tab is italic.",
            "type": "string"
          },
          "italicMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "localePolicy": {
            "$ref": "#/$defs/localePolicyTab"
          },
          "mergeField": {
            "$ref": "#/$defs/mergeField"
          },
          "mergeFieldXml": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "pageNumber": {
            "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
            "type": "string"
          },
          "pageNumberMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientId": {
            "description": "The unique ID for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "recipientIdGuid": {
            "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
            "type": "string"
          },
          "recipientIdGuidMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "recipientIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "required": {
            "description": "When **true,** the recipient must click the **View** button for the supporting document prior to completing the signing process.",
            "type": "string"
          },
          "requiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "requiredRead": {
            "description": "When **true,** the recipient must read through the document.",
            "type": "string"
          },
          "smartContractInformation": {
            "$ref": "#/$defs/smartContractInformation"
          },
          "source": {
            "description": "Reserved for DocuSign.",
            "type": "string"
          },
          "status": {
            "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
            "type": "string"
          },
          "statusMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabGroupLabels": {
            "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tabGroupLabelsMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabId": {
            "description": "The unique identifier for the tab.",
            "type": "string"
          },
          "tabIdMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabLabel": {
            "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
            "type": "string"
          },
          "tabLabelMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabOrder": {
            "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
            "type": "string"
          },
          "tabOrderMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tabType": {
            "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
            "type": "string"
          },
          "tabTypeMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateLocked": {
            "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
            "type": "string"
          },
          "templateLockedMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "templateRequired": {
            "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
            "type": "string"
          },
          "templateRequiredMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "toolTipMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "tooltip": {
            "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
            "type": "string"
          },
          "underline": {
            "description": "When **true,** the information in the tab is underlined.",
            "type": "string"
          },
          "underlineMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "width": {
            "description": "The width of the tab in pixels.",
            "type": "string"
          },
          "widthMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "xPosition": {
            "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          },
          "xPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          },
          "yPosition": {
            "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. May be zero.\n\n",
            "type": "string"
          },
          "yPositionMetadata": {
            "$ref": "#/$defs/propertyMetadata"
          }
        },
        "type": "object",
        "x-ds-definition-name": "view",
        "x-ms-summary": "This tab is used with the Approve tab to handle supplemental documents."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "DELETE",
    "url": {
      "$uri": "https://www.docusign.net/restapi/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/tabs"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "All of the tabs associated with a recipient. Each property is a list of a type of tab.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**approveTabs**: A list of",
            "**checkboxTabs**: A list of",
            "**commentThreadTabs**: An array of tabs that represents a collection of comments in a comment thread. For example, if a recipient has questions about the content of a document, they can add a comment to the document and control who else can see the comment. This value can't be set.",
            "**commissionCountyTabs**: A list of",
            "**commissionExpirationTabs**: A list of",
            "**commissionNumberTabs**: A list of",
            "**commissionStateTabs**: A list of",
            "**companyTabs**: A list of",
            "**dateSignedTabs**: A list of",
            "**dateTabs**: A list of",
            "**declineTabs**: A list of",
            "**drawTabs**: A list of Draw Tabs.",
            "**emailAddressTabs**: A list of",
            "**emailTabs**: A list of",
            "**envelopeIdTabs**: A list of",
            "**firstNameTabs**: A list of",
            "**formulaTabs**: A list of [Formula tabs][formulaTab].",
            "**fullNameTabs**: A list of",
            "**initialHereTabs**: A list of",
            "**lastNameTabs**: A list of",
            "**listTabs**: An array of List tabs.",
            "**notarizeTabs**: A list of  [Notarize tabs][notarize].",
            "**notarySealTabs**: A list of Notary Seal tabs.",
            "**noteTabs**: A list of",
            "**numberTabs**: A list of",
            "**numericalTabs**: ",
            "**phoneNumberTabs**: A list of",
            "**polyLineOverlayTabs**: This type of tab enables the recipient to strike through document text. This value can't be set
            [
              "**prefillTabs**: Prefill tabs are tabs",
              {
                "$ul": [
                  "**checkboxTabs**: A list of",
                  "**dateTabs**: A list of",
                  "**emailTabs**: A list of",
                  "**numberTabs**: A list of",
                  "**radioGroupTabs**: A list of [Radio Group tabs][radioGroup].",
                  "**senderCompanyTabs**: ",
                  "**senderNameTabs**: ",
                  "**ssnTabs**: A list of",
                  "**tabGroups**: An array of `tabGroup` items.",
                  "**textTabs**: A list of",
                  "**zipTabs**: A list of"
                ]
              }
            ],
            "**radioGroupTabs**: A list of [Radio Group tabs][radioGroup].",
            "**signHereTabs**: A list of",
            "**signerAttachmentTabs**: A list of",
            "**smartSectionTabs**: A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.",
            "**ssnTabs**: A list of",
            "**tabGroups**: An array of `tabGroup` items.",
            "**textTabs**: A list of",
            "**titleTabs**: A list of",
            "**viewTabs**: A list of",
            "**zipTabs**: A list of"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The code associated with the error condition.",
            "**message**: A brief message describing the error condition."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
