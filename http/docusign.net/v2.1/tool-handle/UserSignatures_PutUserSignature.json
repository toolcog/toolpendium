{
  "name": "UserSignatures_PutUserSignature",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The external account number (int) or account ID GUID."
      },
      "userId": {
        "type": "string",
        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings."
      },
      "body": {
        "$ref": "#/$defs/userSignaturesInformation"
      }
    },
    "required": [
      "accountId",
      "userId"
    ],
    "$defs": {
      "userSignaturesInformation": {
        "description": "",
        "properties": {
          "userSignatures": {
            "description": "An array of  `userSignature` objects.",
            "items": {
              "$ref": "#/$defs/userSignature"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ds-definition-name": "userSignaturesInformation",
        "x-ms-summary": ""
      },
      "userSignature": {
        "description": "",
        "properties": {
          "adoptedDateTime": {
            "description": "The date and time the user adopted their signature.",
            "type": "string"
          },
          "createdDateTime": {
            "description": "The UTC DateTime when the item was created.",
            "type": "string"
          },
          "customField": {
            "description": "",
            "type": "string"
          },
          "dateStampProperties": {
            "$ref": "#/$defs/dateStampProperties"
          },
          "disallowUserResizeStamp": {
            "description": "When **true,** users may not resize the stamp.",
            "type": "string"
          },
          "errorDetails": {
            "$ref": "#/$defs/errorDetails"
          },
          "externalID": {
            "description": "Optionally specify an external identifier for the user's signature.",
            "type": "string"
          },
          "imageBase64": {
            "description": "A Base64-encoded representation of the signature image.",
            "type": "string"
          },
          "imageType": {
            "description": "Specificies the type of image. Valid values:\n\n- `stamp_image`\n- `signature_image`\n- `initials_image`",
            "type": "string"
          },
          "initials150ImageId": {
            "description": "The ID of the user's initials image.",
            "type": "string"
          },
          "initialsImageUri": {
            "description": "The URI for retrieving the image of the user's initials.",
            "type": "string"
          },
          "isDefault": {
            "description": "Boolean that specifies whether the signature is the default signature for the user.",
            "type": "string"
          },
          "lastModifiedDateTime": {
            "description": "The date and time that the item was last modified.",
            "type": "string"
          },
          "nrdsId": {
            "description": "The National Association of Realtors (NAR) membership ID for a user who is a realtor.",
            "type": "string"
          },
          "nrdsLastName": {
            "description": "The realtor's last name.",
            "type": "string"
          },
          "nrdsStatus": {
            "description": "The realtor's NAR membership status. The value `active` verifies that the user is a current NAR member. Valid values are:\n\n- `Active`\n- `Inactive`\n- `Terminate`\n- `Provisional`\n- `Deceased`\n- `Suspend`\n- `Unknown`",
            "type": "string"
          },
          "phoneticName": {
            "description": "The phonetic spelling of the `signatureName`.",
            "type": "string"
          },
          "signature150ImageId": {
            "description": "The ID of the user's signature image.",
            "type": "string"
          },
          "signatureFont": {
            "description": "The font type for the signature, if the signature is not drawn. The supported font types are:\n\n\"7_DocuSign\", \"1_DocuSign\", \"6_DocuSign\", \"8_DocuSign\", \"3_DocuSign\", \"Mistral\", \"4_DocuSign\", \"2_DocuSign\", \"5_DocuSign\", \"Rage Italic\"\n",
            "type": "string"
          },
          "signatureId": {
            "description": "Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
            "type": "string"
          },
          "signatureImageUri": {
            "description": "An endpoint URI that you can use to retrieve the user's signature image.",
            "type": "string"
          },
          "signatureInitials": {
            "description": " The initials associated with the signature.",
            "type": "string"
          },
          "signatureName": {
            "description": "Specifies the user's signature name.",
            "type": "string"
          },
          "signatureRights": {
            "description": "The rights that the user has to the signature. Valid values are:\n\n- `none`\n- `read`\n- `admin`",
            "type": "string"
          },
          "signatureType": {
            "description": "Specifies the type of signature.",
            "type": "string"
          },
          "stampFormat": {
            "description": "The format of a stamp. Valid values are:\n\n- `NameHanko`: The stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents the signer's name and the date. ",
            "type": "string"
          },
          "stampImageUri": {
            "description": "The URI for retrieving the image of the user's stamp.",
            "type": "string"
          },
          "stampSizeMM": {
            "description": "The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.",
            "type": "string"
          },
          "stampType": {
            "description": "The type of stamp. Valid values are:\n\n- `signature`: A signature image. This is the default value.\n- `stamp`: A stamp image.\n- null",
            "type": "string"
          },
          "status": {
            "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "userSignature",
        "x-ms-summary": ""
      },
      "dateStampProperties": {
        "description": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle.",
        "properties": {
          "dateAreaHeight": {
            "description": "The height of the rectangle.",
            "type": "string"
          },
          "dateAreaWidth": {
            "description": "The width of the rectangle.",
            "type": "string"
          },
          "dateAreaX": {
            "description": "The X axis position of the top-left corner.",
            "type": "string"
          },
          "dateAreaY": {
            "description": "The Y axis position of the top-left corner.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "dateStampProperties",
        "x-ms-summary": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle."
      },
      "errorDetails": {
        "description": "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "properties": {
          "errorCode": {
            "description": "The code associated with the error condition.",
            "type": "string"
          },
          "message": {
            "description": "A brief message describing the error condition.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "errorDetails",
        "x-ms-summary": "This object describes errors that occur. It is only valid for responses and ignored in requests."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://www.docusign.net/restapi/v2.1/accounts/{accountId}/users/{userId}/signatures"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            "**userSignatures**: An array of  `userSignature` objects."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The code associated with the error condition.",
            "**message**: A brief message describing the error condition."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
