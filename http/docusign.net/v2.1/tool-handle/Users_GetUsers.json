{
  "name": "Users_GetUsers",
  "description": "Retrieves the list of users for the specified account.\n\nThe response returns the list of users for the account, with information about the result set. If the `additional_info` query is added to the endpoint and set to **true,** full user information is returned for each user.",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "(Required) The external account number (int) or account ID GUID."
      },
      "additional_info": {
        "type": "string",
        "description": "When **true,** the custom settings information is returned for each user in the account. If this parameter is omitted, the default behavior is **false.**"
      },
      "alternate_admins_only": {
        "type": "string",
        "description": ""
      },
      "count": {
        "type": "string",
        "description": "The maximum number of results to return.\n\nUse `start_position` to specify the number of results to skip.\n\nValid values: `1` to `100`\n"
      },
      "domain_users_only": {
        "type": "string",
        "description": ""
      },
      "email": {
        "type": "string",
        "description": "Filters results based on the email address associated with the user that you want to return.\n\n**Note:** You can use either this parameter or the `email_substring` parameter, but not both. For older accounts, this parameter might return multiple users who are associated with a single email address. "
      },
      "email_substring": {
        "type": "string",
        "description": "Filters results based on a fragment of an email address. For example, you could enter `gmail` to return all users who have Gmail addresses.\n\n**Note:** You do not use a wildcard character with this parameter. You can use either this parameter or the `email` parameter, but not both. "
      },
      "group_id": {
        "type": "string",
        "description": "Filters results based on one or more group IDs."
      },
      "include_usersettings_for_csv": {
        "type": "string",
        "description": "When **true,** the response includes the `userSettings` object data in CSV format."
      },
      "login_status": {
        "type": "string",
        "description": "When **true,** the response includes the login status of each user."
      },
      "not_group_id": {
        "type": "string",
        "description": "Return user records excluding the specified group IDs."
      },
      "start_position": {
        "type": "string",
        "description": "The zero-based index of the\nresult from which to start returning results.\n\nUse with `count` to limit the number\nof results.\n\nThe default value is `0`.\n"
      },
      "status": {
        "type": "string",
        "description": "Filters results by user account status.\nA comma-separated list of any of the following:\n\n* `ActivationRequired`\n* `ActivationSent`\n* `Active`\n* `Closed`\n* `Disabled`\n"
      },
      "user_name_substring": {
        "type": "string",
        "description": "Filters the user records returned by the user name or a sub-string of user name."
      }
    },
    "required": [
      "accountId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://www.docusign.net/restapi/v2.1/accounts/{accountId}/users{?additional_info,alternate_admins_only,count,domain_users_only,email,email_substring,group_id,include_usersettings_for_csv,login_status,not_group_id,start_position,status,user_name_substring}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains a list of account users.",
        "**Key properties:**",
        {
          "$ul": [
            "**endPosition**: The last index position in the result set. ",
            "**nextUri**: The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "**previousUri**: The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "**resultSetSize**: The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
            "**startPosition**: The starting index position of the current result set.",
            "**totalSetSize**: The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
            "**users**: User management information."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The code associated with the error condition.",
            "**message**: A brief message describing the error condition."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
