{
  "name": "Groups_GetGroups",
  "description": "Retrieves information about groups associated with the account.\n\n**Note:** To retrieve a group's users, use this endpoint to get the group ID and then call the [listGroupUsers](/docs/esign-rest-api/reference/usergroups/groupusers/list/) endpoint.\n\n ### Related topics\n\n- [How to set a permission profile](/docs/esign-rest-api/how-to/permission-profile-setting/)",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The external account number (int) or account ID GUID."
      },
      "count": {
        "type": "string",
        "description": "The maximum number of results to return.\n\nUse `start_position` to specify the number of results to skip.\n\nValid values: `1` to `100`"
      },
      "group_type": {
        "type": "string",
        "description": "The type of group to return. Valid values:\n\n* `AdminGroup`\n* `CustomGroup`\n* `EveryoneGroup`"
      },
      "include_usercount": {
        "type": "string",
        "description": "When **true,** every group returned in the response includes a `userCount` property that contains the total number of users in the group. The default is **true.**"
      },
      "search_text": {
        "type": "string",
        "description": "Filters the results of a GET request based on the text that you specify."
      },
      "start_position": {
        "type": "string",
        "description": "The zero-based index of the\nresult from which to start returning results.\n\nUse with `count` to limit the number\nof results.\n\nThe default value is `0`.\n"
      }
    },
    "required": [
      "accountId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://www.docusign.net/restapi/v2.1/accounts/{accountId}/groups{?count,group_type,include_usercount,search_text,start_position}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            "**endPosition**: The last index position in the result set. ",
            "**groups**: A collection group objects containing information about the groups.",
            "**nextUri**: The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
            "**previousUri**: The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
            "**resultSetSize**: The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
            "**startPosition**: The starting index position of the current result set.",
            "**totalSetSize**: The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The code associated with the error condition.",
            "**message**: A brief message describing the error condition."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
