{
  "name": "Views_PostEnvelopeRecipientSharedView",
  "description": "Returns a URL that enables you to embed the DocuSign UI recipient view of a [shared envelope](https://support.docusign.com/en/guides/ndse-admin-guide-share-envelopes) in your applications. This is the view that a user sees of an envelope that a recipient on the same account has shared with them.\n\nDue to screen space issues,\ndo not use an `<iframe>` for embedded operations on mobile devices.\nFor iOS devices, DocuSign recommends using a WebView.\n\n### Revoking the URL\n\nYou can revoke this URL by making\na DELETE HTTP request to the URL\nwith no request body.\n\n### Related topics\n\n- [Embedded signing and sending](/docs/esign-rest-api/esign101/concepts/embedding/)\n- [How to send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)\n- [How to embed the DocuSign UI in your app](/docs/esign-rest-api/how-to/embed-ui/)\n",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The external account number (int) or account ID GUID."
      },
      "envelopeId": {
        "type": "string",
        "description": "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
      },
      "body": {
        "$ref": "#/$defs/recipientViewRequest"
      }
    },
    "required": [
      "accountId",
      "envelopeId"
    ],
    "$defs": {
      "recipientViewRequest": {
        "description": "The request body for the [EnvelopeViews: createRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/)\nand\n[EnvelopeViews: createSharedRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/) methods.",
        "properties": {
          "assertionId": {
            "description": "A unique identifier of the authentication event executed by the client application.",
            "type": "string"
          },
          "authenticationInstant": {
            "description": "A sender-generated value that indicates the date and time that the signer was authenticated.",
            "type": "string"
          },
          "authenticationMethod": {
            "description": "Required. Choose a value that most closely matches the technique your application used to authenticate the recipient / signer. \n\nChoose a value from this list: \n* Biometric \n* Email\n* HTTPBasicAuth\n* Kerberos\n* KnowledgeBasedAuth\n* None\n* PaperDocuments\n* Password\n* RSASecureID\n* SingleSignOn_CASiteminder\n* SingleSignOn_InfoCard\n* SingleSignOn_MicrosoftActiveDirectory\n* SingleSignOn_Other\n* SingleSignOn_Passport\n* SingleSignOn_SAML\n* Smartcard\n* SSLMutualAuth\n* X509Certificate\n\nThis information is included in the Certificate of Completion.",
            "type": "string"
          },
          "clientURLs": {
            "$ref": "#/$defs/recipientTokenClientURLs"
          },
          "clientUserId": {
            "description": "A sender-created value. If provided, the recipient is treated as an embedded (captive) recipient or signer.\n\nUse your application's client ID (user ID) for the recipient. Doing so enables the details of your application's authentication of the recipient to be connected to the recipient's signature if the signature is disputed or repudiated.\n\nMaximum length: 100 characters.",
            "type": "string"
          },
          "email": {
            "description": "(Required) Specifies the email of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.",
            "type": "string"
          },
          "frameAncestors": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "messageOrigins": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "pingFrequency": {
            "description": "Only used if `pingUrl` is specified. This is the interval, in seconds, between pings on the `pingUrl`.  The default is `300` seconds. Valid values are 60-1200 seconds.",
            "type": "string"
          },
          "pingUrl": {
            "description": "The client URL that the DocuSign Signing experience should ping to indicate to the client that Signing is active. An HTTP GET call is executed against the client. The response from the client is ignored. The intent is for the client to reset its session timer when the request is received.",
            "type": "string"
          },
          "recipientId": {
            "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
            "type": "string"
          },
          "returnUrl": {
            "description": "(Required) The URL to which the user should be redirected\nafter the signing session has ended.\n\nMaximum Length: 470 characters. If the `returnUrl` exceeds this\nlimit, the user is redirected to a truncated URL\nBe sure to include `https://` in the URL\nor redirecting might fail on some browsers.\n\n\nWhen DocuSign redirects to\nthis URL, it will include an `event` query parameter that your app can use:\n\n* `access_code_failed`: Recipient used incorrect access code.\n* `cancel`: Recipient canceled the signing operation,\n  possibly by using the **Finish Later** option.\n* `decline`: Recipient declined to sign.\n* `exception`: A system error occurred during the signing process.\n* `fax_pending`: Recipient has a fax pending.\n* `id_check_failed`: Recipient failed an ID check.\n* `session_timeout`: The session timed out. An account can control this timeout by using the **Signer Session Timeout** option.\n* `signing_complete`: The recipient completed the signing ceremony.\n* `ttl_expired`: The Time To Live token for the envelope has expired.\n  After being successfully invoked, these tokens expire\n  after five minutes.\n* `viewing_complete`: The recipient completed viewing an envelope\n  that is in a read-only/terminal state,\n  such as completed, declined, or voided.\n\n",
            "type": "string"
          },
          "securityDomain": {
            "description": "The domain in which the user authenticated.",
            "type": "string"
          },
          "userId": {
            "description": "The user ID of the recipient. You can use either the user ID or email and user name to identify the recipient. \n\nIf `userId` is used and a `clientUserId` is provided, the value in the `userId` property must match a `recipientId` (which you can retrieve with a GET recipients call) for the envelope. \n\nIf a `userId` is used and a `clientUserId` is not provided, the `userId` must match the user ID of the authenticating user.",
            "type": "string"
          },
          "userName": {
            "description": "The username of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.",
            "type": "string"
          },
          "xFrameOptions": {
            "description": "Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.\n\nValid values are:\n\n- `deny`: The page cannot be displayed in a frame.\n- `same_origin`: The page can only be displayed in a frame on the same origin as the page itself.\n- `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.",
            "type": "string"
          },
          "xFrameOptionsAllowFromUrl": {
            "description": "When the value of `xFrameOptions` is `allow_from`, this property specifies the origin on which the page is allowed to display in a frame. If the value of `xFrameOptions` is `allow_from`, you must include a value for this property.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientViewRequest",
        "x-ms-summary": "The request body for the [EnvelopeViews: createRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/)\nand\n[EnvelopeViews: createSharedRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/) methods."
      },
      "recipientTokenClientURLs": {
        "description": "",
        "properties": {
          "onAccessCodeFailed": {
            "description": "",
            "type": "string"
          },
          "onCancel": {
            "description": "",
            "type": "string"
          },
          "onDecline": {
            "description": "",
            "type": "string"
          },
          "onException": {
            "description": "",
            "type": "string"
          },
          "onFaxPending": {
            "description": "",
            "type": "string"
          },
          "onIdCheckFailed": {
            "description": "",
            "type": "string"
          },
          "onSessionTimeout": {
            "description": "",
            "type": "string"
          },
          "onSigningComplete": {
            "description": "",
            "type": "string"
          },
          "onTTLExpired": {
            "description": "",
            "type": "string"
          },
          "onViewingComplete": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object",
        "x-ds-definition-name": "recipientTokenClientURLs",
        "x-ms-summary": ""
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://www.docusign.net/restapi/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/shared"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            "**url**: URL to the Review ID page."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This object describes errors that occur. It is only valid for responses and ignored in requests.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The code associated with the error condition.",
            "**message**: A brief message describing the error condition."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
