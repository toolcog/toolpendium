{
  "name": "product_offerings_list",
  "description": "List all (filtered) products-offerings available on the platform",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "example": "id1,id2,id3",
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Filter by id"
      },
      "type": {
        "enum": [
          "exchange_lan",
          "p2p_vc",
          "mp2mp_vc",
          "p2mp_vc",
          "cloud_vc"
        ],
        "type": "string",
        "description": "Filter by type"
      },
      "name": {
        "type": "string",
        "description": "Filter by name"
      },
      "handover_metro_area": {
        "type": "string",
        "description": "Filter by handover_metro_area"
      },
      "handover_metro_area_network": {
        "type": "string",
        "description": "Filter by handover_metro_area_network"
      },
      "service_metro_area": {
        "type": "string",
        "description": "Filter by service_metro_area"
      },
      "service_metro_area_network": {
        "type": "string",
        "description": "Filter by service_metro_area_network"
      },
      "service_provider": {
        "type": "string",
        "description": "Filter by service_provider"
      },
      "downgrade_allowed": {
        "enum": [
          "true",
          "true"
        ],
        "type": "string",
        "description": "Filter by downgrade_allowed"
      },
      "upgrade_allowed": {
        "enum": [
          "true",
          "false"
        ],
        "type": "string",
        "description": "Filter by upgrade_allowed"
      },
      "bandwidth": {
        "type": "integer",
        "description": "Find product offerings where bandwidth is\nwithin the range of `bandwidth_min` and `bandwidth_max`."
      },
      "physical_port_speed": {
        "type": "integer",
        "description": "Filter by physical_port_speed"
      },
      "service_provider_region": {
        "type": "string",
        "description": "Filter by service_provider_region"
      },
      "service_provider_pop": {
        "type": "string",
        "description": "Filter by service_provider_pop"
      },
      "delivery_method": {
        "enum": [
          "dedicated",
          "shared"
        ],
        "type": "string",
        "description": "Filter by delivery_method"
      },
      "cloud_key": {
        "type": "string",
        "description": "For product offerings of type `cloud_vc`, if the\n`service_provider_workflow` is `provider_first` the\n`cloud_key` will be used for filtering the relevant\nofferings."
      },
      "fields": {
        "type": "string",
        "description": "Returned objects only have properties which are\npresent in the list of fields.\nThe required `type` property is *implicitly* included.\nThe results are *deduplicated*.\n"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/v2/product-offerings{?id,type,name,handover_metro_area,handover_metro_area_network,service_metro_area,service_metro_area_network,service_provider,downgrade_allowed,upgrade_allowed,bandwidth,physical_port_speed,service_provider_region,service_provider_pop,delivery_method,cloud_key,fields}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ProductOffering (partial) list"
        },
        "Polymorphic Product Offering",
        {
          "$each": "$.body.*",
          "$as": "item",
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.item"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "401": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "403": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
