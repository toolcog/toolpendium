{
  "name": "listHotels",
  "description": "Returns a list of all hotels worldwide that can be booked through Impala.\n\nYou can **filter** the results:\n\n* Adding `longitude`, `latitude` and a `radius` (in meters) query parameters will filter the results to hotels around this location.\n* Adding `start` and `end` dates (in ISO 8601 notation, e.g. `2021-12-31`) for the expected arrival and departure dates of your guests will limit the results to hotels that have at least one room bookable for this timeframe.\n* Adding `starRating`, `name` or `country` allows you to filter to hotels based on these values (e.g. `?starRating[gte]=4&name[like]=palace` for hotels with a rating of 4 or up with a name containing \"palace\")\n* Adding `hotelIds` allows you to limit the results to include only hotels with the ids listed. Its value should be a comma-separated list of hotel ids (e.g. `?hotelIds[]=hotelIdA,hotelIdB`)\n\n* Adding `contractable` allows you to filter to hotels that you can directly negotiate with through our [deals feature](https://docs.impala.travel/docs/booking-api/ZG9jOjcyNjgzMTA-contracting-with-hotels). (e.g `?contractable=true` or `?contractable=false`)\n\nYou can specify the **sorting order** in which hotels are returned:\n* This is done by using the `sortBy` query parameter.\n* Results can be sorted by `name` alphabetically, star `rating` and `distance_m` (in meters from the specified latitude/longitude location).\n* The parameter allows for a comma-separated list of arguments with optional `:asc` (ascending, the default if the modifier is omitted) and `:desc` (descending) modifiers.\n\nIf no hotels match your filter criteria, an empty array will be returned.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "object",
        "description": "Allows for filtering based on the property name. Available modifiers include equal to (`eq`) or case insensitive search (`like`). Usage example: `?name[like]=palace`"
      },
      "starRating": {
        "type": "object",
        "description": "Allows for filtering based on the starRating of a property. Available modifiers include less than (`lt`), greater than (`gt`), less than or equal to (`lte`), greater than or equal to (`gte`) and equal to (`eq`). Usage example: `?starRating[gt]=3&starRating[lt]=5`"
      },
      "country": {
        "type": "object",
        "description": "Allows for filtering based on the country of a property. The only available modifier for this parameter is equal to (`eq`). Usage example: `?country[eq]=GBR`"
      },
      "start": {
        "example": "2021-05-20",
        "type": "string",
        "description": "The arrival day of the desired stay range in ISO 8601 format (`YYYY-MM-DD`)."
      },
      "end": {
        "example": "2021-05-22",
        "type": "string",
        "description": "The departure day of the desired stay range in ISO 8601 format (`YYYY-MM-DD`)."
      },
      "latitude": {
        "example": 58.386186,
        "format": "double",
        "maximum": 90,
        "minimum": -90,
        "type": "number",
        "description": "The WGS 84 latitude of the location to search around (e.g. `58.386186`)."
      },
      "longitude": {
        "example": -9.952549,
        "format": "double",
        "maximum": 180,
        "minimum": -180,
        "type": "number",
        "description": "The WGS 84 longitude of the location to search around (e.g. `-9.952549`)."
      },
      "radius": {
        "example": 25000,
        "format": "int32",
        "minimum": 0,
        "type": "integer",
        "description": "The distance (in meters) to search around the specified location (e.g. `10000` for 10 km)."
      },
      "hotelIds": {
        "example": [
          "0e25533a-2db2-4894-9db1-4c1ff92d798c,77c272b6-18e6-4036-b9c3-7fc5454e3f6a"
        ],
        "items": {
          "example": "8a39290a-bcd0-461e-92c6-38e71a06d2f7",
          "type": "string"
        },
        "type": "array",
        "description": "A comma-separated list of hotel ids you wish to filter by (e.g. `60a06628-2c71-44bf-9685-efbd2df4179e,60a06628-2c71-44bf-9685-efbd2df4179e`)."
      },
      "created": {
        "type": "object",
        "description": "Allows for filtering based on the date and time when this hotel was first added to the Impala platform, in ISO 8601 format (e.g. `2020-11-04T17:37:37Z`) and UTC timezone. Available modifiers include less than (`lt`), greater than (`gt`), lower than or equal to (`lte`), greater than or equal to (`gte`) and equal to (`eq`). Usage example: `?created[lte]=2020-11-04T19:37:37Z&created[gte]=2020-11-04T15:56:37.000Z`"
      },
      "updated": {
        "type": "object",
        "description": "Allows for filtering based on the date and time the content of this hotel was last updated, in ISO 8601 format (e.g. `2020-11-04T17:37:37Z`) and UTC timezone. Available modifiers include less than (`lt`), greater than (`gt`), lower than or equal to (`lte`), greater than or equal to (`gte`) and equal to (`eq`). Usage example: `?updated[lte]=2020-11-04T19:37:37Z&updated[gte]=2020-11-04T15:56:37.000Z`"
      },
      "size": {
        "default": 25,
        "example": 40,
        "format": "int32",
        "maximum": 300,
        "minimum": 1,
        "type": "number",
        "description": "Number of hotels returned on a given page (pagination)."
      },
      "offset": {
        "default": 0,
        "example": 25,
        "format": "int32",
        "type": "number",
        "description": "Offset from the first hotel in the result (for pagination)."
      },
      "sortBy": {
        "default": "createdAt:desc",
        "example": "name:asc,distance_m:desc",
        "type": "string",
        "description": "Order in which the results should be sorted. Currently allows you to sort by `name` (alphabetical), star `rating`, and `distance_m` in meters from the specified latitude/longitude. Allows for a comma-separated list of of arguments with modifiers for `:asc` (ascending) and `:desc` (descending) ordering."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://sandbox.impala.travel/v1/hotels{?name,starRating,country,start,end,latitude,longitude,radius,hotelIds,created,updated,size,offset,sortBy}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            [
              "**pagination**: Information that helps paginate through lists of resources.",
              {
                "$ul": [
                  "**count**: The number of items returned on this page.",
                  "**next**: The absolute URL pointing to the next page. Will be null if there are no next pages.",
                  "**prev**: The absolute URL pointing to the previous page. Will be null if there are no previous pages.",
                  "**total**: The total number of items that exist for your query across all pages."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Error response"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code for you to use programatically, for error logging and debugging.",
            "**message**: Error message intended to aid developers in debugging issues. We strongly advise against displaying this information publicly to your guests as it **might contain sensitive implementation details**.",
            "**validations**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Error response"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code for you to use programatically, for error logging and debugging.",
            "**message**: Error message intended to aid developers in debugging issues. We strongly advise against displaying this information publicly to your guests as it **might contain sensitive implementation details**."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Error response"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code for you to use programatically, for error logging and debugging.",
            "**message**: Error message intended to aid developers in debugging issues. We strongly advise against displaying this information publicly to your guests as it **might contain sensitive implementation details**."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
