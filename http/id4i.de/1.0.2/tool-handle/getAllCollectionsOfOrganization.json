{
  "name": "getAllCollectionsOfOrganization",
  "description": "Retrieving all collections of an organization in a paginated manner. You may filter the results by specifying id4n properties with filter operations (eq, in, ne) in the query parameters. e.g. `com.yourcompany.orderId.eq=1234`  ",
  "parameters": {
    "type": "object",
    "properties": {
      "offset": {
        "format": "int32",
        "type": "integer",
        "description": "Start with the n-th element"
      },
      "limit": {
        "format": "int32",
        "type": "integer",
        "description": "The maximum count of returned elements"
      },
      "organizationId": {
        "type": "string",
        "description": "The namespace of the organization"
      },
      "type": {
        "enum": [
          "ROUTING_COLLECTION",
          "LOGISTIC_COLLECTION",
          "LABELLED_COLLECTION"
        ],
        "type": "string",
        "description": "Filter by this type"
      },
      "label": {
        "type": "string",
        "description": "Filter by this label"
      },
      "labelPrefix": {
        "maximum": 2147483647,
        "minimum": 1,
        "type": "string",
        "description": "Filter by this label prefix"
      },
      "property": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "List of i4dn property filter. e.g. \"com.myorga.state:IN:waiting|processing\" or \"com.myorga.orderId:EQ:SAP001\""
      }
    },
    "required": [
      "organizationId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//backend.id4i.de/api/v1/organizations/{organizationId}/collections{?offset,limit,type,label,labelPrefix,property}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "PaginatedResponseOfGuidCollection"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**elements**",
            "**limit**: The number of returned elements",
            "**offset**: Starting with the n-th element",
            "**total**: The total number of elements"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ApiError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            "**errorId**",
            "**errorList**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ApiError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            "**errorId**",
            "**errorList**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ApiError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            "**errorId**",
            "**errorList**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "405": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ApiError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            "**errorId**",
            "**errorList**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "406": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ApiError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            "**errorId**",
            "**errorList**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "415": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ApiError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            "**errorId**",
            "**errorList**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ApiError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            "**errorId**",
            "**errorList**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
