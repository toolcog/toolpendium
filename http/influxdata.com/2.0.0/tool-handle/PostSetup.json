{
  "name": "PostSetup",
  "description": "Post an onboarding request to set up initial user, org and bucket.",
  "parameters": {
    "type": "object",
    "properties": {
      "Zap-Trace-Span": {
        "type": "string",
        "description": "OpenTracing span context"
      },
      "body": {
        "$ref": "#/components/schemas/OnboardingRequest",
        "description": "Source to create"
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "/api/v2/setup"
    },
    "headers": {
      "Zap-Trace-Span": {
        "$": "Zap-Trace-Span"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**auth**",
              {
                "$ul": [
                  "**description**: A description of the token.",
                  "**status**: If inactive the token is inactive and requests using the token will be rejected. (default: active)",
                  "**createdAt**",
                  "**id**",
                  [
                    "**links**",
                    {
                      "$ul": [
                        "**self**: URI of resource.",
                        "**user**: URI of resource."
                      ]
                    }
                  ],
                  "**org**: Name of the org token is scoped to.",
                  "**orgID**: ID of org that authorization is scoped to.",
                  "**permissions**: List of permissions for an auth.  An auth must have at least one Permission.",
                  "**token**: Passed via the Authorization Header and Token Authentication type.",
                  "**updatedAt**",
                  "**user**: Name of user that created and owns the token.",
                  "**userID**: ID of user that created and owns the token."
                ]
              }
            ],
            [
              "**bucket**",
              {
                "$ul": [
                  "**createdAt**",
                  "**description**",
                  "**id**",
                  "**labels**",
                  [
                    "**links**",
                    {
                      "$ul": [
                        "**labels**: URI of resource.",
                        "**members**: URI of resource.",
                        "**org**: URI of resource.",
                        "**owners**: URI of resource.",
                        "**self**: URI of resource.",
                        "**write**: URI of resource."
                      ]
                    }
                  ],
                  "**name**",
                  "**orgID**",
                  "**retentionRules**: Rules to expire or retain data.  No rules means data never expires.",
                  "**rp**",
                  "**schemaType**",
                  "**type** (default: user)",
                  "**updatedAt**"
                ]
              }
            ],
            [
              "**org**",
              {
                "$ul": [
                  "**createdAt**",
                  "**description**",
                  "**id**",
                  [
                    "**links**",
                    {
                      "$ul": [
                        "**buckets**: URI of resource.",
                        "**dashboards**: URI of resource.",
                        "**labels**: URI of resource.",
                        "**members**: URI of resource.",
                        "**owners**: URI of resource.",
                        "**secrets**: URI of resource.",
                        "**self**: URI of resource.",
                        "**tasks**: URI of resource."
                      ]
                    }
                  ],
                  "**name**",
                  "**status**: If inactive the organization is inactive. (default: active)",
                  "**updatedAt**"
                ]
              }
            ],
            [
              "**user**",
              {
                "$ul": [
                  "**id**",
                  [
                    "**links**",
                    {
                      "$ul": [
                        "**self**"
                      ]
                    }
                  ],
                  "**name**",
                  "**oauthID**",
                  "**status**: If inactive the user is inactive. (default: active)"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: code is the machine-readable error code.",
            "**err**: err is a stack of errors that occurred during processing of the request. Useful for debugging.",
            "**message**: message is a human-readable message.",
            "**op**: op describes the logical code operation during error. Useful for debugging."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
