{
  "name": "PostWrite",
  "description": "Write time series data into InfluxDB",
  "parameters": {
    "type": "object",
    "properties": {
      "Zap-Trace-Span": {
        "type": "string",
        "description": "OpenTracing span context"
      },
      "Content-Encoding": {
        "default": "identity",
        "description": "When present, its value indicates to the database that compression is applied to the line-protocol body.",
        "enum": [
          "gzip",
          "identity"
        ],
        "type": "string"
      },
      "Content-Type": {
        "default": "text/plain; charset=utf-8",
        "description": "Content-Type is used to indicate the format of the data sent to the server.",
        "enum": [
          "text/plain",
          "text/plain; charset=utf-8",
          "application/vnd.influx.arrow"
        ],
        "type": "string"
      },
      "Content-Length": {
        "description": "Content-Length is an entity header is indicating the size of the entity-body, in bytes, sent to the database. If the length is greater than the database max body configuration option, a 413 response is sent.",
        "type": "integer"
      },
      "Accept": {
        "default": "application/json",
        "description": "Specifies the return content format.",
        "enum": [
          "application/json"
        ],
        "type": "string"
      },
      "org": {
        "description": "Specifies the destination organization for writes. Takes either the ID or Name interchangeably. If both `orgID` and `org` are specified, `org` takes precedence.",
        "type": "string"
      },
      "orgID": {
        "type": "string",
        "description": "Specifies the ID of the destination organization for writes. If both `orgID` and `org` are specified, `org` takes precedence."
      },
      "bucket": {
        "description": "The destination bucket for writes.",
        "type": "string"
      },
      "precision": {
        "$ref": "#/components/schemas/WritePrecision",
        "description": "The precision for the unix timestamps within the body line-protocol."
      }
    },
    "required": [
      "org",
      "bucket"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "/api/v2/write{?org,orgID,bucket,precision}"
    },
    "headers": {
      "Zap-Trace-Span": {
        "$": "Zap-Trace-Span"
      },
      "Content-Encoding": {
        "$": "Content-Encoding"
      },
      "Content-Type": {
        "$": "Content-Type"
      },
      "Content-Length": {
        "$": "Content-Length"
      },
      "Accept": {
        "$": "Accept"
      }
    }
  },
  "responses": {
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Code is the machine-readable error code.",
            "**err**: Err is a stack of errors that occurred during processing of the request. Useful for debugging.",
            "**line**: First line within sent body containing malformed data",
            "**message**: Message is a human-readable message.",
            "**op**: Op describes the logical code operation during error. Useful for debugging."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: code is the machine-readable error code.",
            "**err**: err is a stack of errors that occurred during processing of the request. Useful for debugging.",
            "**message**: message is a human-readable message.",
            "**op**: op describes the logical code operation during error. Useful for debugging."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: code is the machine-readable error code.",
            "**err**: err is a stack of errors that occurred during processing of the request. Useful for debugging.",
            "**message**: message is a human-readable message.",
            "**op**: op describes the logical code operation during error. Useful for debugging."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "413": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Code is the machine-readable error code.",
            "**maxLength**: Max length in bytes for a body of line-protocol.",
            "**message**: Message is a human-readable message."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: code is the machine-readable error code.",
            "**err**: err is a stack of errors that occurred during processing of the request. Useful for debugging.",
            "**message**: message is a human-readable message.",
            "**op**: op describes the logical code operation during error. Useful for debugging."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
