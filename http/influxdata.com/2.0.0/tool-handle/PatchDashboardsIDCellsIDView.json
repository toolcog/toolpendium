{
  "name": "PatchDashboardsIDCellsIDView",
  "description": "Update the view for a cell",
  "parameters": {
    "type": "object",
    "properties": {
      "Zap-Trace-Span": {
        "type": "string",
        "description": "OpenTracing span context"
      },
      "dashboardID": {
        "type": "string",
        "description": "The ID of the dashboard to update."
      },
      "cellID": {
        "type": "string",
        "description": "The ID of the cell to update."
      },
      "body": {
        "$ref": "#/$defs/View"
      }
    },
    "required": [
      "dashboardID",
      "cellID",
      "body"
    ],
    "$defs": {
      "View": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "properties": {
              "self": {
                "type": "string"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/$defs/ViewProperties"
          }
        },
        "required": [
          "name",
          "properties"
        ]
      },
      "ViewProperties": {
        "oneOf": [
          {
            "$ref": "#/$defs/LinePlusSingleStatProperties"
          },
          {
            "$ref": "#/$defs/XYViewProperties"
          },
          {
            "$ref": "#/$defs/SingleStatViewProperties"
          },
          {
            "$ref": "#/$defs/HistogramViewProperties"
          },
          {
            "$ref": "#/$defs/GaugeViewProperties"
          },
          {
            "$ref": "#/$defs/TableViewProperties"
          },
          {
            "$ref": "#/$defs/MarkdownViewProperties"
          },
          {
            "$ref": "#/$defs/CheckViewProperties"
          },
          {
            "$ref": "#/$defs/ScatterViewProperties"
          },
          {
            "$ref": "#/$defs/HeatmapViewProperties"
          },
          {
            "$ref": "#/$defs/MosaicViewProperties"
          },
          {
            "$ref": "#/$defs/BandViewProperties"
          },
          {
            "$ref": "#/$defs/GeoViewProperties"
          }
        ]
      },
      "LinePlusSingleStatProperties": {
        "properties": {
          "axes": {
            "$ref": "#/$defs/Axes"
          },
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "$ref": "#/$defs/DashboardColor"
            },
            "type": "array"
          },
          "decimalPlaces": {
            "$ref": "#/$defs/DecimalPlaces"
          },
          "generateXAxisTicks": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "generateYAxisTicks": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "hoverDimension": {
            "enum": [
              "auto",
              "x",
              "y",
              "xy"
            ],
            "type": "string"
          },
          "legendColorizeRows": {
            "type": "boolean"
          },
          "legendHide": {
            "type": "boolean"
          },
          "legendOpacity": {
            "format": "float",
            "type": "number"
          },
          "legendOrientationThreshold": {
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "position": {
            "enum": [
              "overlaid",
              "stacked"
            ],
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shadeBelow": {
            "type": "boolean"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "showNoteWhenEmpty": {
            "description": "If true, will display note when empty",
            "type": "boolean"
          },
          "staticLegend": {
            "$ref": "#/$defs/StaticLegend"
          },
          "suffix": {
            "type": "string"
          },
          "timeFormat": {
            "type": "string"
          },
          "type": {
            "enum": [
              "line-plus-single-stat"
            ],
            "type": "string"
          },
          "xColumn": {
            "type": "string"
          },
          "xTickStart": {
            "format": "float",
            "type": "number"
          },
          "xTickStep": {
            "format": "float",
            "type": "number"
          },
          "xTotalTicks": {
            "type": "integer"
          },
          "yColumn": {
            "type": "string"
          },
          "yTickStart": {
            "format": "float",
            "type": "number"
          },
          "yTickStep": {
            "format": "float",
            "type": "number"
          },
          "yTotalTicks": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "queries",
          "shape",
          "axes",
          "colors",
          "note",
          "showNoteWhenEmpty",
          "prefix",
          "suffix",
          "decimalPlaces",
          "position"
        ],
        "type": "object"
      },
      "Axes": {
        "description": "The viewport for a View's visualizations",
        "properties": {
          "x": {
            "$ref": "#/$defs/Axis"
          },
          "y": {
            "$ref": "#/$defs/Axis"
          }
        },
        "required": [
          "x",
          "y"
        ],
        "type": "object"
      },
      "Axis": {
        "description": "The description of a particular axis for a visualization.",
        "properties": {
          "base": {
            "description": "Base represents the radix for formatting axis values.",
            "enum": [
              "",
              "2",
              "10"
            ],
            "type": "string"
          },
          "bounds": {
            "description": "The extents of an axis in the form [lower, upper]. Clients determine whether bounds are to be inclusive or exclusive of their limits",
            "items": {
              "type": "string"
            },
            "maxItems": 2,
            "minItems": 0,
            "type": "array"
          },
          "label": {
            "description": "Label is a description of this Axis",
            "type": "string"
          },
          "prefix": {
            "description": "Prefix represents a label prefix for formatting axis values.",
            "type": "string"
          },
          "scale": {
            "$ref": "#/$defs/AxisScale"
          },
          "suffix": {
            "description": "Suffix represents a label suffix for formatting axis values.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AxisScale": {
        "description": "Scale is the axis formatting scale. Supported: \"log\", \"linear\"",
        "enum": [
          "log",
          "linear"
        ],
        "type": "string"
      },
      "DashboardColor": {
        "description": "Defines an encoding of data value into color space.",
        "properties": {
          "hex": {
            "description": "The hex number of the color",
            "maxLength": 7,
            "minLength": 7,
            "type": "string"
          },
          "id": {
            "description": "The unique ID of the view color.",
            "type": "string"
          },
          "name": {
            "description": "The user-facing name of the hex color.",
            "type": "string"
          },
          "type": {
            "description": "Type is how the color is used.",
            "enum": [
              "min",
              "max",
              "threshold",
              "scale",
              "text",
              "background"
            ],
            "type": "string"
          },
          "value": {
            "description": "The data value mapped to this color.",
            "format": "float",
            "type": "number"
          }
        },
        "required": [
          "id",
          "type",
          "hex",
          "name",
          "value"
        ],
        "type": "object"
      },
      "DecimalPlaces": {
        "description": "Indicates whether decimal places should be enforced, and how many digits it should show.",
        "properties": {
          "digits": {
            "description": "The number of digits after decimal to display",
            "format": "int32",
            "type": "integer"
          },
          "isEnforced": {
            "description": "Indicates whether decimal point setting should be enforced",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DashboardQuery": {
        "properties": {
          "builderConfig": {
            "$ref": "#/$defs/BuilderConfig"
          },
          "editMode": {
            "$ref": "#/$defs/QueryEditMode"
          },
          "name": {
            "type": "string"
          },
          "text": {
            "description": "The text of the Flux query.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuilderConfig": {
        "properties": {
          "aggregateWindow": {
            "properties": {
              "fillValues": {
                "type": "boolean"
              },
              "period": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "buckets": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "functions": {
            "items": {
              "$ref": "#/$defs/BuilderFunctionsType"
            },
            "type": "array"
          },
          "tags": {
            "items": {
              "$ref": "#/$defs/BuilderTagsType"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BuilderFunctionsType": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuilderTagsType": {
        "properties": {
          "aggregateFunctionType": {
            "$ref": "#/$defs/BuilderAggregateFunctionType"
          },
          "key": {
            "type": "string"
          },
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BuilderAggregateFunctionType": {
        "enum": [
          "filter",
          "group"
        ],
        "type": "string"
      },
      "QueryEditMode": {
        "enum": [
          "builder",
          "advanced"
        ],
        "type": "string"
      },
      "StaticLegend": {
        "description": "StaticLegend represents the options specific to the static legend",
        "properties": {
          "colorizeRows": {
            "type": "boolean"
          },
          "heightRatio": {
            "format": "float",
            "type": "number"
          },
          "hide": {
            "type": "boolean"
          },
          "opacity": {
            "format": "float",
            "type": "number"
          },
          "orientationThreshold": {
            "type": "integer"
          },
          "valueAxis": {
            "type": "string"
          },
          "widthRatio": {
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "XYViewProperties": {
        "properties": {
          "axes": {
            "$ref": "#/$defs/Axes"
          },
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "$ref": "#/$defs/DashboardColor"
            },
            "type": "array"
          },
          "generateXAxisTicks": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "generateYAxisTicks": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "geom": {
            "$ref": "#/$defs/XYGeom"
          },
          "hoverDimension": {
            "enum": [
              "auto",
              "x",
              "y",
              "xy"
            ],
            "type": "string"
          },
          "legendColorizeRows": {
            "type": "boolean"
          },
          "legendHide": {
            "type": "boolean"
          },
          "legendOpacity": {
            "format": "float",
            "type": "number"
          },
          "legendOrientationThreshold": {
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "position": {
            "enum": [
              "overlaid",
              "stacked"
            ],
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shadeBelow": {
            "type": "boolean"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "showNoteWhenEmpty": {
            "description": "If true, will display note when empty",
            "type": "boolean"
          },
          "staticLegend": {
            "$ref": "#/$defs/StaticLegend"
          },
          "timeFormat": {
            "type": "string"
          },
          "type": {
            "enum": [
              "xy"
            ],
            "type": "string"
          },
          "xColumn": {
            "type": "string"
          },
          "xTickStart": {
            "format": "float",
            "type": "number"
          },
          "xTickStep": {
            "format": "float",
            "type": "number"
          },
          "xTotalTicks": {
            "type": "integer"
          },
          "yColumn": {
            "type": "string"
          },
          "yTickStart": {
            "format": "float",
            "type": "number"
          },
          "yTickStep": {
            "format": "float",
            "type": "number"
          },
          "yTotalTicks": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "geom",
          "queries",
          "shape",
          "axes",
          "colors",
          "note",
          "showNoteWhenEmpty",
          "position"
        ],
        "type": "object"
      },
      "XYGeom": {
        "enum": [
          "line",
          "step",
          "stacked",
          "bar",
          "monotoneX"
        ],
        "type": "string"
      },
      "SingleStatViewProperties": {
        "properties": {
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "$ref": "#/$defs/DashboardColor"
            },
            "type": "array"
          },
          "decimalPlaces": {
            "$ref": "#/$defs/DecimalPlaces"
          },
          "note": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "showNoteWhenEmpty": {
            "description": "If true, will display note when empty",
            "type": "boolean"
          },
          "staticLegend": {
            "$ref": "#/$defs/StaticLegend"
          },
          "suffix": {
            "type": "string"
          },
          "tickPrefix": {
            "type": "string"
          },
          "tickSuffix": {
            "type": "string"
          },
          "type": {
            "enum": [
              "single-stat"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "queries",
          "colors",
          "shape",
          "note",
          "showNoteWhenEmpty",
          "prefix",
          "tickPrefix",
          "suffix",
          "tickSuffix",
          "decimalPlaces"
        ],
        "type": "object"
      },
      "HistogramViewProperties": {
        "properties": {
          "binCount": {
            "type": "integer"
          },
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "$ref": "#/$defs/DashboardColor"
            },
            "type": "array"
          },
          "fillColumns": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "legendColorizeRows": {
            "type": "boolean"
          },
          "legendHide": {
            "type": "boolean"
          },
          "legendOpacity": {
            "format": "float",
            "type": "number"
          },
          "legendOrientationThreshold": {
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "position": {
            "enum": [
              "overlaid",
              "stacked"
            ],
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "showNoteWhenEmpty": {
            "description": "If true, will display note when empty",
            "type": "boolean"
          },
          "type": {
            "enum": [
              "histogram"
            ],
            "type": "string"
          },
          "xAxisLabel": {
            "type": "string"
          },
          "xColumn": {
            "type": "string"
          },
          "xDomain": {
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          }
        },
        "required": [
          "type",
          "queries",
          "colors",
          "shape",
          "note",
          "showNoteWhenEmpty",
          "xColumn",
          "fillColumns",
          "xDomain",
          "xAxisLabel",
          "position",
          "binCount"
        ],
        "type": "object"
      },
      "GaugeViewProperties": {
        "properties": {
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "$ref": "#/$defs/DashboardColor"
            },
            "type": "array"
          },
          "decimalPlaces": {
            "$ref": "#/$defs/DecimalPlaces"
          },
          "note": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "showNoteWhenEmpty": {
            "description": "If true, will display note when empty",
            "type": "boolean"
          },
          "suffix": {
            "type": "string"
          },
          "tickPrefix": {
            "type": "string"
          },
          "tickSuffix": {
            "type": "string"
          },
          "type": {
            "enum": [
              "gauge"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "queries",
          "colors",
          "shape",
          "note",
          "showNoteWhenEmpty",
          "prefix",
          "tickPrefix",
          "suffix",
          "tickSuffix",
          "decimalPlaces"
        ],
        "type": "object"
      },
      "TableViewProperties": {
        "properties": {
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "$ref": "#/$defs/DashboardColor"
            },
            "type": "array"
          },
          "decimalPlaces": {
            "$ref": "#/$defs/DecimalPlaces"
          },
          "fieldOptions": {
            "description": "fieldOptions represent the fields retrieved by the query with customization options",
            "items": {
              "$ref": "#/$defs/RenamableField"
            },
            "type": "array"
          },
          "note": {
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "showNoteWhenEmpty": {
            "description": "If true, will display note when empty",
            "type": "boolean"
          },
          "tableOptions": {
            "properties": {
              "fixFirstColumn": {
                "description": "fixFirstColumn indicates whether the first column of the table should be locked",
                "type": "boolean"
              },
              "sortBy": {
                "$ref": "#/$defs/RenamableField"
              },
              "verticalTimeAxis": {
                "description": "verticalTimeAxis describes the orientation of the table by indicating whether the time axis will be displayed vertically",
                "type": "boolean"
              },
              "wrapping": {
                "description": "Wrapping describes the text wrapping style to be used in table views",
                "enum": [
                  "truncate",
                  "wrap",
                  "single-line"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "timeFormat": {
            "description": "timeFormat describes the display format for time values according to moment.js date formatting",
            "type": "string"
          },
          "type": {
            "enum": [
              "table"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "queries",
          "colors",
          "shape",
          "note",
          "showNoteWhenEmpty",
          "tableOptions",
          "fieldOptions",
          "timeFormat",
          "decimalPlaces"
        ],
        "type": "object"
      },
      "RenamableField": {
        "description": "Describes a field that can be renamed and made visible or invisible.",
        "properties": {
          "displayName": {
            "description": "The name that a field is renamed to by the user.",
            "type": "string"
          },
          "internalName": {
            "description": "The calculated name of a field.",
            "readOnly": true,
            "type": "string"
          },
          "visible": {
            "description": "Indicates whether this field should be visible on the table.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "MarkdownViewProperties": {
        "properties": {
          "note": {
            "type": "string"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "markdown"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "shape",
          "note"
        ],
        "type": "object"
      },
      "CheckViewProperties": {
        "properties": {
          "check": {
            "$ref": "#/$defs/Check"
          },
          "checkID": {
            "type": "string"
          },
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "$ref": "#/$defs/DashboardColor"
            },
            "type": "array"
          },
          "legendColorizeRows": {
            "type": "boolean"
          },
          "legendHide": {
            "type": "boolean"
          },
          "legendOpacity": {
            "format": "float",
            "type": "number"
          },
          "legendOrientationThreshold": {
            "type": "integer"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "check"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "shape",
          "checkID",
          "queries",
          "colors"
        ],
        "type": "object"
      },
      "Check": {
        "allOf": [
          {
            "$ref": "#/$defs/CheckDiscriminator"
          }
        ]
      },
      "CheckDiscriminator": {
        "discriminator": {
          "mapping": {
            "custom": "#/components/schemas/CustomCheck",
            "deadman": "#/components/schemas/DeadmanCheck",
            "threshold": "#/components/schemas/ThresholdCheck"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/$defs/DeadmanCheck"
          },
          {
            "$ref": "#/$defs/ThresholdCheck"
          },
          {
            "$ref": "#/$defs/CustomCheck"
          }
        ]
      },
      "DeadmanCheck": {
        "allOf": [
          {
            "$ref": "#/$defs/CheckBase"
          },
          {
            "properties": {
              "every": {
                "description": "Check repetition interval.",
                "type": "string"
              },
              "level": {
                "$ref": "#/$defs/CheckStatusLevel"
              },
              "offset": {
                "description": "Duration to delay after the schedule, before executing check.",
                "type": "string"
              },
              "reportZero": {
                "description": "If only zero values reported since time, trigger an alert",
                "type": "boolean"
              },
              "staleTime": {
                "description": "String duration for time that a series is considered stale and should not trigger deadman.",
                "type": "string"
              },
              "statusMessageTemplate": {
                "description": "The template used to generate and write a status message.",
                "type": "string"
              },
              "tags": {
                "description": "List of tags to write to each status.",
                "items": {
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "timeSince": {
                "description": "String duration before deadman triggers.",
                "type": "string"
              },
              "type": {
                "enum": [
                  "deadman"
                ],
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        ]
      },
      "CheckBase": {
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "An optional description of the check.",
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "$ref": "#/$defs/Labels"
          },
          "lastRunError": {
            "readOnly": true,
            "type": "string"
          },
          "lastRunStatus": {
            "enum": [
              "failed",
              "success",
              "canceled"
            ],
            "readOnly": true,
            "type": "string"
          },
          "latestCompleted": {
            "description": "Timestamp of latest scheduled, completed run, RFC3339.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "example": {
              "labels": "/api/v2/checks/1/labels",
              "members": "/api/v2/checks/1/members",
              "owners": "/api/v2/checks/1/owners",
              "query": "/api/v2/checks/1/query",
              "self": "/api/v2/checks/1"
            },
            "properties": {
              "labels": {
                "$ref": "#/$defs/Link"
              },
              "members": {
                "$ref": "#/$defs/Link"
              },
              "owners": {
                "$ref": "#/$defs/Link"
              },
              "query": {
                "$ref": "#/$defs/Link"
              },
              "self": {
                "$ref": "#/$defs/Link"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "orgID": {
            "description": "The ID of the organization that owns this check.",
            "type": "string"
          },
          "ownerID": {
            "description": "The ID of creator used to create this check.",
            "readOnly": true,
            "type": "string"
          },
          "query": {
            "$ref": "#/$defs/DashboardQuery"
          },
          "status": {
            "$ref": "#/$defs/TaskStatusType"
          },
          "taskID": {
            "description": "The ID of the task associated with this check.",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "orgID",
          "query"
        ]
      },
      "Labels": {
        "items": {
          "$ref": "#/$defs/Label"
        },
        "type": "array"
      },
      "Label": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orgID": {
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value.",
            "example": {
              "color": "ffb3b3",
              "description": "this is a description"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Link": {
        "description": "URI of resource.",
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "TaskStatusType": {
        "enum": [
          "active",
          "inactive"
        ],
        "type": "string"
      },
      "CheckStatusLevel": {
        "description": "The state to record if check matches a criteria.",
        "enum": [
          "UNKNOWN",
          "OK",
          "INFO",
          "CRIT",
          "WARN"
        ],
        "type": "string"
      },
      "ThresholdCheck": {
        "allOf": [
          {
            "$ref": "#/$defs/CheckBase"
          },
          {
            "properties": {
              "every": {
                "description": "Check repetition interval.",
                "type": "string"
              },
              "offset": {
                "description": "Duration to delay after the schedule, before executing check.",
                "type": "string"
              },
              "statusMessageTemplate": {
                "description": "The template used to generate and write a status message.",
                "type": "string"
              },
              "tags": {
                "description": "List of tags to write to each status.",
                "items": {
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "thresholds": {
                "items": {
                  "$ref": "#/$defs/Threshold"
                },
                "type": "array"
              },
              "type": {
                "enum": [
                  "threshold"
                ],
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        ]
      },
      "Threshold": {
        "discriminator": {
          "mapping": {
            "greater": "#/components/schemas/GreaterThreshold",
            "lesser": "#/components/schemas/LesserThreshold",
            "range": "#/components/schemas/RangeThreshold"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/$defs/GreaterThreshold"
          },
          {
            "$ref": "#/$defs/LesserThreshold"
          },
          {
            "$ref": "#/$defs/RangeThreshold"
          }
        ]
      },
      "GreaterThreshold": {
        "allOf": [
          {
            "$ref": "#/$defs/ThresholdBase"
          },
          {
            "properties": {
              "type": {
                "enum": [
                  "greater"
                ],
                "type": "string"
              },
              "value": {
                "format": "float",
                "type": "number"
              }
            },
            "required": [
              "type",
              "value"
            ],
            "type": "object"
          }
        ]
      },
      "ThresholdBase": {
        "properties": {
          "allValues": {
            "description": "If true, only alert if all values meet threshold.",
            "type": "boolean"
          },
          "level": {
            "$ref": "#/$defs/CheckStatusLevel"
          }
        }
      },
      "LesserThreshold": {
        "allOf": [
          {
            "$ref": "#/$defs/ThresholdBase"
          },
          {
            "properties": {
              "type": {
                "enum": [
                  "lesser"
                ],
                "type": "string"
              },
              "value": {
                "format": "float",
                "type": "number"
              }
            },
            "required": [
              "type",
              "value"
            ],
            "type": "object"
          }
        ]
      },
      "RangeThreshold": {
        "allOf": [
          {
            "$ref": "#/$defs/ThresholdBase"
          },
          {
            "properties": {
              "max": {
                "format": "float",
                "type": "number"
              },
              "min": {
                "format": "float",
                "type": "number"
              },
              "type": {
                "enum": [
                  "range"
                ],
                "type": "string"
              },
              "within": {
                "type": "boolean"
              }
            },
            "required": [
              "type",
              "min",
              "max",
              "within"
            ],
            "type": "object"
          }
        ]
      },
      "CustomCheck": {
        "allOf": [
          {
            "$ref": "#/$defs/CheckBase"
          },
          {
            "properties": {
              "type": {
                "enum": [
                  "custom"
                ],
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        ]
      },
      "ScatterViewProperties": {
        "properties": {
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fillColumns": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "generateXAxisTicks": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "generateYAxisTicks": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "legendColorizeRows": {
            "type": "boolean"
          },
          "legendHide": {
            "type": "boolean"
          },
          "legendOpacity": {
            "format": "float",
            "type": "number"
          },
          "legendOrientationThreshold": {
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "showNoteWhenEmpty": {
            "description": "If true, will display note when empty",
            "type": "boolean"
          },
          "symbolColumns": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "timeFormat": {
            "type": "string"
          },
          "type": {
            "enum": [
              "scatter"
            ],
            "type": "string"
          },
          "xAxisLabel": {
            "type": "string"
          },
          "xColumn": {
            "type": "string"
          },
          "xDomain": {
            "items": {
              "type": "number"
            },
            "maxItems": 2,
            "type": "array"
          },
          "xPrefix": {
            "type": "string"
          },
          "xSuffix": {
            "type": "string"
          },
          "xTickStart": {
            "format": "float",
            "type": "number"
          },
          "xTickStep": {
            "format": "float",
            "type": "number"
          },
          "xTotalTicks": {
            "type": "integer"
          },
          "yAxisLabel": {
            "type": "string"
          },
          "yColumn": {
            "type": "string"
          },
          "yDomain": {
            "items": {
              "type": "number"
            },
            "maxItems": 2,
            "type": "array"
          },
          "yPrefix": {
            "type": "string"
          },
          "ySuffix": {
            "type": "string"
          },
          "yTickStart": {
            "format": "float",
            "type": "number"
          },
          "yTickStep": {
            "format": "float",
            "type": "number"
          },
          "yTotalTicks": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "queries",
          "colors",
          "shape",
          "note",
          "showNoteWhenEmpty",
          "xColumn",
          "yColumn",
          "fillColumns",
          "symbolColumns",
          "xDomain",
          "yDomain",
          "xAxisLabel",
          "yAxisLabel",
          "xPrefix",
          "yPrefix",
          "xSuffix",
          "ySuffix"
        ],
        "type": "object"
      },
      "HeatmapViewProperties": {
        "properties": {
          "binSize": {
            "type": "number"
          },
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "generateXAxisTicks": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "generateYAxisTicks": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "legendColorizeRows": {
            "type": "boolean"
          },
          "legendHide": {
            "type": "boolean"
          },
          "legendOpacity": {
            "format": "float",
            "type": "number"
          },
          "legendOrientationThreshold": {
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "showNoteWhenEmpty": {
            "description": "If true, will display note when empty",
            "type": "boolean"
          },
          "timeFormat": {
            "type": "string"
          },
          "type": {
            "enum": [
              "heatmap"
            ],
            "type": "string"
          },
          "xAxisLabel": {
            "type": "string"
          },
          "xColumn": {
            "type": "string"
          },
          "xDomain": {
            "items": {
              "type": "number"
            },
            "maxItems": 2,
            "type": "array"
          },
          "xPrefix": {
            "type": "string"
          },
          "xSuffix": {
            "type": "string"
          },
          "xTickStart": {
            "format": "float",
            "type": "number"
          },
          "xTickStep": {
            "format": "float",
            "type": "number"
          },
          "xTotalTicks": {
            "type": "integer"
          },
          "yAxisLabel": {
            "type": "string"
          },
          "yColumn": {
            "type": "string"
          },
          "yDomain": {
            "items": {
              "type": "number"
            },
            "maxItems": 2,
            "type": "array"
          },
          "yPrefix": {
            "type": "string"
          },
          "ySuffix": {
            "type": "string"
          },
          "yTickStart": {
            "format": "float",
            "type": "number"
          },
          "yTickStep": {
            "format": "float",
            "type": "number"
          },
          "yTotalTicks": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "queries",
          "colors",
          "shape",
          "note",
          "showNoteWhenEmpty",
          "xColumn",
          "yColumn",
          "xDomain",
          "yDomain",
          "xAxisLabel",
          "yAxisLabel",
          "xPrefix",
          "yPrefix",
          "xSuffix",
          "ySuffix",
          "binSize"
        ],
        "type": "object"
      },
      "MosaicViewProperties": {
        "properties": {
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fillColumns": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "generateXAxisTicks": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "hoverDimension": {
            "enum": [
              "auto",
              "x",
              "y",
              "xy"
            ],
            "type": "string"
          },
          "legendColorizeRows": {
            "type": "boolean"
          },
          "legendHide": {
            "type": "boolean"
          },
          "legendOpacity": {
            "format": "float",
            "type": "number"
          },
          "legendOrientationThreshold": {
            "type": "integer"
          },
          "note": {
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "showNoteWhenEmpty": {
            "description": "If true, will display note when empty",
            "type": "boolean"
          },
          "timeFormat": {
            "type": "string"
          },
          "type": {
            "enum": [
              "mosaic"
            ],
            "type": "string"
          },
          "xAxisLabel": {
            "type": "string"
          },
          "xColumn": {
            "type": "string"
          },
          "xDomain": {
            "items": {
              "type": "number"
            },
            "maxItems": 2,
            "type": "array"
          },
          "xPrefix": {
            "type": "string"
          },
          "xSuffix": {
            "type": "string"
          },
          "xTickStart": {
            "format": "float",
            "type": "number"
          },
          "xTickStep": {
            "format": "float",
            "type": "number"
          },
          "xTotalTicks": {
            "type": "integer"
          },
          "yAxisLabel": {
            "type": "string"
          },
          "yDomain": {
            "items": {
              "type": "number"
            },
            "maxItems": 2,
            "type": "array"
          },
          "yLabelColumnSeparator": {
            "type": "string"
          },
          "yLabelColumns": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "yPrefix": {
            "type": "string"
          },
          "ySeriesColumns": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ySuffix": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "queries",
          "colors",
          "shape",
          "note",
          "showNoteWhenEmpty",
          "xColumn",
          "ySeriesColumns",
          "fillColumns",
          "xDomain",
          "yDomain",
          "xAxisLabel",
          "yAxisLabel",
          "xPrefix",
          "yPrefix",
          "xSuffix",
          "ySuffix"
        ],
        "type": "object"
      },
      "BandViewProperties": {
        "properties": {
          "axes": {
            "$ref": "#/$defs/Axes"
          },
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "$ref": "#/$defs/DashboardColor"
            },
            "type": "array"
          },
          "generateXAxisTicks": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "generateYAxisTicks": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "geom": {
            "$ref": "#/$defs/XYGeom"
          },
          "hoverDimension": {
            "enum": [
              "auto",
              "x",
              "y",
              "xy"
            ],
            "type": "string"
          },
          "legendColorizeRows": {
            "type": "boolean"
          },
          "legendHide": {
            "type": "boolean"
          },
          "legendOpacity": {
            "format": "float",
            "type": "number"
          },
          "legendOrientationThreshold": {
            "type": "integer"
          },
          "lowerColumn": {
            "type": "string"
          },
          "mainColumn": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "showNoteWhenEmpty": {
            "description": "If true, will display note when empty",
            "type": "boolean"
          },
          "staticLegend": {
            "$ref": "#/$defs/StaticLegend"
          },
          "timeFormat": {
            "type": "string"
          },
          "type": {
            "enum": [
              "band"
            ],
            "type": "string"
          },
          "upperColumn": {
            "type": "string"
          },
          "xColumn": {
            "type": "string"
          },
          "xTickStart": {
            "format": "float",
            "type": "number"
          },
          "xTickStep": {
            "format": "float",
            "type": "number"
          },
          "xTotalTicks": {
            "type": "integer"
          },
          "yColumn": {
            "type": "string"
          },
          "yTickStart": {
            "format": "float",
            "type": "number"
          },
          "yTickStep": {
            "format": "float",
            "type": "number"
          },
          "yTotalTicks": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "geom",
          "queries",
          "shape",
          "axes",
          "colors",
          "note",
          "showNoteWhenEmpty"
        ],
        "type": "object"
      },
      "GeoViewProperties": {
        "properties": {
          "allowPanAndZoom": {
            "default": true,
            "description": "If true, map zoom and pan controls are enabled on the dashboard view",
            "type": "boolean"
          },
          "center": {
            "description": "Coordinates of the center of the map",
            "properties": {
              "lat": {
                "description": "Latitude of the center of the map",
                "format": "double",
                "type": "number"
              },
              "lon": {
                "description": "Longitude of the center of the map",
                "format": "double",
                "type": "number"
              }
            },
            "required": [
              "lat",
              "lon"
            ],
            "type": "object"
          },
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "$ref": "#/$defs/DashboardColor"
            },
            "type": "array"
          },
          "detectCoordinateFields": {
            "default": true,
            "description": "If true, search results get automatically regroupped so that lon,lat and value are treated as columns",
            "type": "boolean"
          },
          "layers": {
            "description": "List of individual layers shown in the map",
            "items": {
              "$ref": "#/$defs/GeoViewLayer"
            },
            "type": "array"
          },
          "mapStyle": {
            "description": "Define map type - regular, satellite etc.",
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/DashboardQuery"
            },
            "type": "array"
          },
          "shape": {
            "enum": [
              "chronograf-v2"
            ],
            "type": "string"
          },
          "showNoteWhenEmpty": {
            "description": "If true, will display note when empty",
            "type": "boolean"
          },
          "type": {
            "enum": [
              "geo"
            ],
            "type": "string"
          },
          "zoom": {
            "description": "Zoom level used for initial display of the map",
            "format": "double",
            "maximum": 28,
            "minimum": 1,
            "type": "number"
          }
        },
        "required": [
          "type",
          "shape",
          "queries",
          "note",
          "showNoteWhenEmpty",
          "center",
          "zoom",
          "allowPanAndZoom",
          "detectCoordinateFields",
          "layers"
        ],
        "type": "object"
      },
      "GeoViewLayer": {
        "oneOf": [
          {
            "$ref": "#/$defs/GeoCircleViewLayer"
          },
          {
            "$ref": "#/$defs/GeoHeatMapViewLayer"
          },
          {
            "$ref": "#/$defs/GeoPointMapViewLayer"
          },
          {
            "$ref": "#/$defs/GeoTrackMapViewLayer"
          }
        ],
        "type": "object"
      },
      "GeoCircleViewLayer": {
        "allOf": [
          {
            "$ref": "#/$defs/GeoViewLayerProperties"
          },
          {
            "properties": {
              "colorDimension": {
                "$ref": "#/$defs/Axis"
              },
              "colorField": {
                "description": "Circle color field",
                "type": "string"
              },
              "colors": {
                "description": "Colors define color encoding of data into a visualization",
                "items": {
                  "$ref": "#/$defs/DashboardColor"
                },
                "type": "array"
              },
              "interpolateColors": {
                "description": "Interpolate circle color based on displayed value",
                "type": "boolean"
              },
              "radius": {
                "description": "Maximum radius size in pixels",
                "type": "integer"
              },
              "radiusDimension": {
                "$ref": "#/$defs/Axis"
              },
              "radiusField": {
                "description": "Radius field",
                "type": "string"
              }
            },
            "required": [
              "radiusField",
              "radiusDimension",
              "colorField",
              "colorDimension",
              "colors"
            ],
            "type": "object"
          }
        ]
      },
      "GeoViewLayerProperties": {
        "properties": {
          "type": {
            "enum": [
              "heatmap",
              "circleMap",
              "pointMap",
              "trackMap"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "GeoHeatMapViewLayer": {
        "allOf": [
          {
            "$ref": "#/$defs/GeoViewLayerProperties"
          },
          {
            "properties": {
              "blur": {
                "description": "Blur for heatmap points",
                "type": "integer"
              },
              "colors": {
                "description": "Colors define color encoding of data into a visualization",
                "items": {
                  "$ref": "#/$defs/DashboardColor"
                },
                "type": "array"
              },
              "intensityDimension": {
                "$ref": "#/$defs/Axis"
              },
              "intensityField": {
                "description": "Intensity field",
                "type": "string"
              },
              "radius": {
                "description": "Radius size in pixels",
                "type": "integer"
              }
            },
            "required": [
              "intensityField",
              "intensityDimension",
              "radius",
              "blur",
              "colors"
            ],
            "type": "object"
          }
        ]
      },
      "GeoPointMapViewLayer": {
        "allOf": [
          {
            "$ref": "#/$defs/GeoViewLayerProperties"
          },
          {
            "properties": {
              "colorDimension": {
                "$ref": "#/$defs/Axis"
              },
              "colorField": {
                "description": "Marker color field",
                "type": "string"
              },
              "colors": {
                "description": "Colors define color encoding of data into a visualization",
                "items": {
                  "$ref": "#/$defs/DashboardColor"
                },
                "type": "array"
              },
              "isClustered": {
                "description": "Cluster close markers together",
                "type": "boolean"
              }
            },
            "required": [
              "colorField",
              "colorDimension",
              "colors"
            ],
            "type": "object"
          }
        ]
      },
      "GeoTrackMapViewLayer": {
        "allOf": [
          {
            "$ref": "#/$defs/GeoViewLayerProperties"
          },
          {
            "required": [
              "trackWidth",
              "speed",
              "randomColors",
              "trackPointVisualization"
            ],
            "type": "object"
          }
        ],
        "properties": {
          "colors": {
            "description": "Colors define color encoding of data into a visualization",
            "items": {
              "$ref": "#/$defs/DashboardColor"
            },
            "type": "array"
          },
          "randomColors": {
            "description": "Assign different colors to different tracks",
            "type": "boolean"
          },
          "speed": {
            "description": "Speed of the track animation",
            "type": "integer"
          },
          "trackWidth": {
            "description": "Width of the track",
            "type": "integer"
          }
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "/api/v2/dashboards/{dashboardID}/cells/{cellID}/view"
    },
    "headers": {
      "Zap-Trace-Span": {
        "$": "Zap-Trace-Span"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**",
            [
              "**links**",
              {
                "$ul": [
                  "**self**"
                ]
              }
            ],
            "**name**",
            "**properties**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: code is the machine-readable error code.",
            "**err**: err is a stack of errors that occurred during processing of the request. Useful for debugging.",
            "**message**: message is a human-readable message.",
            "**op**: op describes the logical code operation during error. Useful for debugging."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: code is the machine-readable error code.",
            "**err**: err is a stack of errors that occurred during processing of the request. Useful for debugging.",
            "**message**: message is a human-readable message.",
            "**op**: op describes the logical code operation during error. Useful for debugging."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
