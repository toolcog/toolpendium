{
  "name": "createMember",
  "description": "Create a member",
  "parameters": {
    "type": "object",
    "properties": {
      "conversation_id": {
        "type": "string",
        "description": "Conversation ID"
      },
      "body": {
        "description": "Create a Member in invite state ",
        "properties": {
          "action": {
            "$ref": "#/$defs/member_action"
          },
          "channel": {
            "$ref": "#/$defs/channel"
          },
          "knocking_id": {
            "$ref": "#/$defs/knocker_id"
          },
          "media": {
            "$ref": "#/$defs/media"
          },
          "member_id": {
            "$ref": "#/$defs/member_id"
          },
          "member_id_inviting": {
            "$ref": "#/$defs/member_id_inviting"
          },
          "user_id": {
            "$ref": "#/$defs/user_id"
          }
        },
        "required": [
          "user_id",
          "channel"
        ],
        "type": "object"
      }
    },
    "required": [
      "conversation_id"
    ],
    "$defs": {
      "0": {
        "description": "Connect to an App User",
        "properties": {
          "type": {
            "description": "The type of connection. Must be `app`",
            "example": "app",
            "type": "string"
          },
          "user": {
            "description": "The username to connect to",
            "example": "jamie",
            "type": "string"
          }
        },
        "required": [
          "type",
          "user"
        ],
        "type": "object"
      },
      "2": {
        "description": "Connect to a SIP Endpoint",
        "properties": {
          "type": {
            "description": "The type of connection. Must be `sip`",
            "example": "sip",
            "type": "string"
          },
          "uri": {
            "description": "The SIP URI to connect to",
            "example": "sip:rebekka@sip.example.com",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "3": {
        "description": "Connect to a Websocket",
        "properties": {
          "content-type": {
            "enum": [
              "audio/l16;rate=8000",
              "audio/l16;rate=16000"
            ],
            "example": "audio/l16;rate=16000",
            "type": "string"
          },
          "headers": {
            "description": "Details of the Websocket you want to connect to",
            "properties": {
              "customer_id": {
                "description": "This is an example header. You can provide any headers you may need",
                "example": "ABC123",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "The type of connection. Must be `websocket`",
            "example": "websocket",
            "type": "string"
          },
          "uri": {
            "example": "wss://example.com/socket",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "type",
          "content-type"
        ],
        "type": "object"
      },
      "4": {
        "description": "Connect to a VBC extension",
        "properties": {
          "extension": {
            "example": "1234",
            "type": "string"
          },
          "type": {
            "description": "The type of connection. Must be `vbc`",
            "example": "vbc",
            "type": "string"
          }
        },
        "required": [
          "type",
          "extension"
        ],
        "type": "object"
      },
      "member_action": {
        "description": "Invite or join a member to a conversation",
        "enum": [
          "invite",
          "join"
        ],
        "example": "join",
        "type": "string"
      },
      "channel": {
        "description": "A user who joins a conversation as a member can have one channel per membership type. Channels can be `app`, `phone`, `sip`, `websocket`, or `vbc`",
        "properties": {
          "from": {
            "oneOf": [
              {
                "description": "Connect to an App User",
                "properties": {
                  "type": {
                    "description": "The type of connection. Must be `app`",
                    "example": "app",
                    "type": "string"
                  },
                  "user": {
                    "description": "The username to connect to",
                    "example": "jamie",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "user"
                ],
                "type": "object"
              },
              {
                "description": "Connect to a Phone (PSTN) number",
                "properties": {
                  "number": {
                    "description": "The phone number to connect to",
                    "example": "14155550100",
                    "maxLength": 15,
                    "minLength": 7,
                    "pattern": "\\d{7,15}",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of connection. Must be `phone`",
                    "example": "phone",
                    "type": "string"
                  }
                },
                "required": [
                  "number",
                  "type"
                ],
                "type": "object"
              },
              {
                "description": "Connect to a SIP Endpoint",
                "properties": {
                  "type": {
                    "description": "The type of connection. Must be `sip`",
                    "example": "sip",
                    "type": "string"
                  },
                  "uri": {
                    "description": "The SIP URI to connect to",
                    "example": "sip:rebekka@sip.example.com",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "type": "object"
              },
              {
                "description": "Connect to a Websocket",
                "properties": {
                  "content-type": {
                    "enum": [
                      "audio/l16;rate=8000",
                      "audio/l16;rate=16000"
                    ],
                    "example": "audio/l16;rate=16000",
                    "type": "string"
                  },
                  "headers": {
                    "description": "Details of the Websocket you want to connect to",
                    "properties": {
                      "customer_id": {
                        "description": "This is an example header. You can provide any headers you may need",
                        "example": "ABC123",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "description": "The type of connection. Must be `websocket`",
                    "example": "websocket",
                    "type": "string"
                  },
                  "uri": {
                    "example": "wss://example.com/socket",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "content-type"
                ],
                "type": "object"
              },
              {
                "description": "Connect to a VBC extension",
                "properties": {
                  "extension": {
                    "example": "1234",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of connection. Must be `vbc`",
                    "example": "vbc",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "extension"
                ],
                "type": "object"
              }
            ]
          },
          "leg_id": {
            "$ref": "#/$defs/leg_id"
          },
          "leg_ids": {
            "description": "Leg ids associated with this Channel. The first item in the array represents the main active Leg. The second item, if exists, represents a screen-share Leg.",
            "items": {
              "properties": {
                "leg_id": {
                  "$ref": "#/$defs/leg_id"
                }
              }
            },
            "type": "array"
          },
          "to": {
            "oneOf": [
              {
                "$ref": "#/$defs/0"
              },
              {
                "description": "Connect to a Phone (PSTN) number",
                "properties": {
                  "dtmfAnswer": {
                    "description": "Provide [DTMF digits](https://developer.nexmo.com/voice/voice-api/guides/dtmf) to send when the call is answered",
                    "example": "p*123#",
                    "type": "string"
                  },
                  "number": {
                    "$ref": "#/$defs/number"
                  },
                  "type": {
                    "description": "The type of connection. Must be `phone`",
                    "example": "phone",
                    "type": "string"
                  }
                },
                "required": [
                  "number",
                  "type"
                ],
                "type": "object"
              },
              {
                "$ref": "#/$defs/2"
              },
              {
                "$ref": "#/$defs/3"
              },
              {
                "$ref": "#/$defs/4"
              }
            ]
          },
          "type": {
            "$ref": "#/$defs/channel_type"
          }
        },
        "type": "object"
      },
      "leg_id": {
        "description": "The id of the leg. rtc_id and call_id are leg id",
        "example": "a595959595959595995",
        "type": "string"
      },
      "number": {
        "description": "The phone number to connect to",
        "example": "14155550100",
        "maxLength": 15,
        "minLength": 7,
        "pattern": "\\d{7,15}",
        "type": "string"
      },
      "channel_type": {
        "description": "Channel type",
        "enum": [
          "app",
          "phone",
          "sip",
          "websocket",
          "vbc"
        ],
        "example": "phone",
        "type": "string"
      },
      "knocker_id": {
        "description": "Knocker ID. A knocker is a pre-member of a conversation who does not exist yet",
        "example": "a972836a-450f-35fa-156c-52a2ab5b7d25",
        "type": "string"
      },
      "media": {
        "description": "Media Object",
        "example": {
          "audio_settings": {
            "earmuffed": false,
            "enabled": false,
            "muted": false
          }
        },
        "properties": {},
        "type": "object"
      },
      "member_id": {
        "description": "Member ID",
        "example": "MEM-63f61863-4a51-4f6b-86e1-46edebio0391",
        "type": "string"
      },
      "member_id_inviting": {
        "description": "Member ID of the member that sends the invitation",
        "example": "MEM-63f61863-4a51-4f6b-86e1-46edebio0391",
        "type": "string"
      },
      "user_id": {
        "description": "User ID",
        "example": "USR-63f61863-4a51-4f6b-86e1-46edebio0391",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.nexmo.com/v0.1/conversations/{conversation_id}/members"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**channel**: A user who joins a conversation as a member can have one channel per membership type. Channels can be `app`, `phone`, `sip`, `websocket`, or `vbc`",
              {
                "$ul": [
                  "**from**",
                  "**leg_id**: The id of the leg. rtc_id and call_id are leg id",
                  "**leg_ids**: Leg ids associated with this Channel. The first item in the array represents the main active Leg. The second item, if exists, represents a screen-share Leg.",
                  "**to**",
                  "**type**: Channel type"
                ]
              }
            ],
            "**href**: A link towards a member included in Conversation API",
            "**id**: Member ID",
            [
              "**initiator**",
              {
                "$ul": [
                  [
                    "**joined**",
                    {
                      "$ul": [
                        "**isSystem**: `true` if the user was invited by an admin JWT. `user_id` and `member_id` will not exist if `true`",
                        "**member_id**: Member ID",
                        "**user_id**: User ID"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**state**: The state that the member is in. Possible values are `invited`, `joined`, `left`, or `unknown`",
            [
              "**timestamp**",
              {
                "$ul": [
                  "**invited**: Timestamp",
                  "**joined**: Timestamp",
                  "**left**: Timestamp"
                ]
              }
            ],
            "**user_id**: User ID"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
