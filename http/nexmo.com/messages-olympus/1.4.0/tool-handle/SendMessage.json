{
  "name": "SendMessage",
  "description": "Send a Message",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "oneOf": [
          {
            "oneOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Text"
                  },
                  {
                    "properties": {
                      "text": {
                        "description": "The text of message to send; limited to 1000 characters. The Messages API automatically detects unicode characters when sending SMS and sends the message as a unicode SMS. For more information on how concatenation and encoding please visit: [developer.nexmo.com/messaging/sms/guides/concatenation-and-encoding](https://developer.nexmo.com/messaging/sms/guides/concatenation-and-encoding).\n"
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsSms"
                  }
                ]
              }
            ],
            "title": "SMS",
            "x-tab-id": "SMS"
          },
          {
            "oneOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Image"
                  },
                  {
                    "properties": {
                      "image": {
                        "properties": {
                          "caption": {
                            "description": "Additional text to accompany the image.",
                            "example": "Additional text to accompany the image.",
                            "maxLength": 2000,
                            "minLength": 1,
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL of the image attachment.\n\nSupports `.jpg`, `.jpeg`, `.png` and `.gif`.\n",
                            "example": "https://example.com/image.jpg",
                            "type": "string"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsMms"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/vCard"
                  },
                  {
                    "properties": {
                      "vcard": {
                        "properties": {
                          "url": {
                            "description": "The URL of the vCard attachment.\n\nSupports `.vcf` only.\n",
                            "example": "https://example.com/contact.vcf",
                            "type": "string"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsMms"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Audio"
                  },
                  {
                    "properties": {
                      "audio": {
                        "properties": {
                          "caption": {
                            "description": "Additional text to accompany the audio file.",
                            "example": "Additional text to accompany the audio file.",
                            "maxLength": 2000,
                            "minLength": 1,
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL of the audio attachment.\n",
                            "example": "https://example.com/audio.mp3",
                            "type": "string"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "message_type": {
                        "description": "The type of message to send. You must provide `audio` in this field.\n\nFor best device and network support .mp3 is recommended. Not supported for US short codes.\n",
                        "enum": [
                          "audio"
                        ],
                        "example": "audio",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsMms"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Video"
                  },
                  {
                    "properties": {
                      "message_type": {
                        "description": "The type of message to send. You must provide `video` in this field.\n\nFor best device and network support .mp4 is recommended. Not supported for US short codes.\n",
                        "enum": [
                          "video"
                        ],
                        "example": "video",
                        "type": "string"
                      },
                      "video": {
                        "properties": {
                          "caption": {
                            "description": "Additional text to accompany the video file.",
                            "example": "Additional text to accompany the video file.",
                            "maxLength": 2000,
                            "minLength": 1,
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL of the video attachment.\n",
                            "example": "https://example.com/video.mp4",
                            "type": "string"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsMms"
                  }
                ]
              }
            ],
            "title": "MMS",
            "x-tab-id": "MMS"
          },
          {
            "oneOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Text"
                  },
                  {
                    "properties": {
                      "text": {
                        "description": "The text of message to send; limited to 4096 characters, including unicode.\n"
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsWhatsapp"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Location"
                  },
                  {
                    "properties": {
                      "text": {
                        "description": "The location to be sent in the message.\n"
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsWhatsapp"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Image"
                  },
                  {
                    "properties": {
                      "image": {
                        "properties": {
                          "caption": {
                            "description": "Additional text to accompany the image.",
                            "example": "Additional text to accompany the image.",
                            "maxLength": 3000,
                            "minLength": 1,
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL of the image attachment.\n\nSupports `.jpg`, `.jpeg`, and `.png`.\n",
                            "example": "https://example.com/image.jpg",
                            "type": "string"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsWhatsapp"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Audio"
                  },
                  {
                    "properties": {
                      "audio": {
                        "properties": {
                          "url": {
                            "description": "The URL of the audio attachment.\n\nSupports `.aac`, `.m4a`, `.amr`, `.mp3` and `.opus`.\n",
                            "maxLength": 2000,
                            "minLength": 10
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsWhatsapp"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Video"
                  },
                  {
                    "properties": {
                      "video": {
                        "properties": {
                          "caption": {
                            "description": "Additional text to accompany the file.",
                            "example": "Additional text.",
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL of the video attachment.\n\nSupports `.mp4` and `.3gpp`. Note, only `H.264` video codec and `AAC` audio codec is supported.\n"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsWhatsapp"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/File"
                  },
                  {
                    "properties": {
                      "file": {
                        "properties": {
                          "caption": {
                            "description": "Additional text to accompany the file.",
                            "example": "Additional text.",
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL of the file attachment.\n\nSupports supports a wide range of attachments including `.zip`, `.csv` and `.pdf`.\n"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsWhatsapp"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "required": [
                      "message_type",
                      "whatsapp"
                    ]
                  },
                  {
                    "$ref": "#/$defs/Template"
                  },
                  {
                    "$ref": "#/$defs/channelOptionsWhatsapp"
                  },
                  {
                    "properties": {
                      "whatsapp": {
                        "properties": {
                          "locale": {
                            "description": "The [BCP 47](https://en.wikipedia.org/wiki/IETF_language_tag) language of the template. See [the WhatsApp documentation](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#supported-languages-) for supported languages.",
                            "example": "en_US",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policy for resolving what language template to use. As of right now the only valid choice is `deterministic`.",
                            "enum": [
                              "deterministic"
                            ],
                            "example": "deterministic",
                            "type": "string"
                          }
                        },
                        "required": [
                          "locale"
                        ],
                        "type": "object"
                      }
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "required": [
                      "message_type"
                    ]
                  },
                  {
                    "$ref": "#/$defs/Custom"
                  },
                  {
                    "$ref": "#/$defs/channelOptionsWhatsapp"
                  }
                ]
              }
            ],
            "title": "WhatsApp",
            "x-tab-id": "WhatsApp"
          },
          {
            "oneOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Text"
                  },
                  {
                    "properties": {
                      "text": {
                        "description": "The text of message to send; limited to 640 characters, including unicode.\n"
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsMessenger"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Image"
                  },
                  {
                    "properties": {
                      "image": {
                        "properties": {
                          "url": {
                            "description": "The URL of the image attachment.\n\nSupports `.jpg`, `.jpeg`, `.png` and `.gif`.\n",
                            "example": "https://example.com/image.jpg",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsMessenger"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Audio"
                  },
                  {
                    "properties": {
                      "audio": {
                        "properties": {
                          "url": {
                            "description": "The URL of the audio attachment.\n\nOnly supports `.mp3` files\n",
                            "maxLength": 2000,
                            "minLength": 10
                          }
                        }
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsMessenger"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Video"
                  },
                  {
                    "properties": {
                      "video": {
                        "properties": {
                          "url": {
                            "description": "The URL of the video attachment.\n\nSupports `.mp4` files. Note, only `H.264` video codec and `AAC` audio codec is supported.\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsMessenger"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/File"
                  },
                  {
                    "properties": {
                      "file": {
                        "properties": {
                          "url": {
                            "description": "The URL of the file attachment.\n\nSupports a wide range of attachments including `.zip`, `.csv` and `.pdf`.\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsMessenger"
                  }
                ]
              }
            ],
            "title": "Messenger",
            "x-tab-id": "Messenger"
          },
          {
            "oneOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Text"
                  },
                  {
                    "properties": {
                      "text": {
                        "description": "The text of message to send; limited to 1000 characters, including unicode.\n"
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsViberWithButton"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Image"
                  },
                  {
                    "properties": {
                      "image": {
                        "properties": {
                          "caption": {
                            "description": "A caption to accompany the image. Required if the message includes an action button.",
                            "example": "Check out this new promotion",
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL of the image attachment.\n\nSupports `.jpg`, `.jpeg`, and `.png`.\n",
                            "example": "https://example.com/image.jpg",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsViberWithButton"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/Video"
                  },
                  {
                    "properties": {
                      "video": {
                        "properties": {
                          "caption": {
                            "description": "Text caption to accompany message.",
                            "example": "Check out this new video",
                            "type": "string"
                          },
                          "thumb_url": {
                            "description": "URL to an image file for a thumbnail preview of the video.",
                            "example": "https://example.com/file1.jpg",
                            "maxLength": 1000,
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL of the video attachment.",
                            "example": "https://example.com/image.jpg",
                            "type": "string"
                          }
                        },
                        "required": [
                          "url",
                          "duration",
                          "file_size",
                          "thumb_url"
                        ]
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsViberVideo"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "$ref": "#/$defs/File"
                  },
                  {
                    "properties": {
                      "file": {
                        "description": "An object containing details of the file to be sent. Note: allowed file types are `.doc,` `.docx`, `.rtf`, `.dot`, `.dotx`, `.odt`, `.odf`, `.fodt`, `.txt`, `.info`, `.pdf`, `.xps`, `.pdax`, `.eps`, `.xls`, `.xlsx`, `.ods`, `.fods`, `.csv`, `.xlsm`, `.xltx`. Maximum file size is 200MB",
                        "properties": {
                          "name": {
                            "description": "The name and extension of the file.",
                            "example": "example.pdf",
                            "maxLength": 25,
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL for the file attachment *or* the path for the location of the file attachement. If `name` is included, can just be the path. If  `name` is not included, must include the filename and extension.",
                            "example": "https://example.com/files/",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  {
                    "$ref": "#/$defs/channelOptionsViber"
                  }
                ]
              }
            ],
            "title": "Viber",
            "x-tab-id": "Viber"
          }
        ],
        "description": "Send a Message."
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Text": {
        "allOf": [
          {
            "$ref": "#/$defs/baseMessageType"
          },
          {
            "description": "The text of message to send.",
            "properties": {
              "message_type": {
                "description": "The type of message to send. You must provide `text` in this field",
                "enum": [
                  "text"
                ],
                "example": "text",
                "type": "string"
              },
              "text": {
                "example": "Nexmo Verification code: 12345.<br />Valid for 10 minutes.",
                "type": "string"
              }
            },
            "required": [
              "text"
            ],
            "title": "Text",
            "x-tab-id": "Text"
          }
        ]
      },
      "baseMessageType": {
        "properties": {
          "client_ref": {
            "description": "Client reference of up to 100 characters. The reference will be present in every message status.",
            "type": "string"
          }
        },
        "required": [
          "to",
          "from",
          "message",
          "message_type",
          "channel"
        ],
        "type": "object"
      },
      "channelOptionsSms": {
        "properties": {
          "channel": {
            "description": "The channel to send to. You must provide `sms` in this field",
            "enum": [
              "sms"
            ],
            "example": "sms",
            "type": "string"
          },
          "from": {
            "$ref": "#/$defs/FromNumber"
          },
          "to": {
            "$ref": "#/$defs/ToNumber"
          }
        },
        "type": "object"
      },
      "FromNumber": {
        "description": "The phone number of the message **sender** in the [E.164](https://en.wikipedia.org/wiki/E.164) format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000. For SMS in certain localities alpha-numeric sender id's will work as well, see [Global Messaging](https://developer.nexmo.com/messaging/sms/guides/country-specific-features#country-specific-features) for more details\n",
        "example": "447700900001",
        "type": "string"
      },
      "ToNumber": {
        "description": "The phone number of the message **recipient** in the [E.164](https://en.wikipedia.org/wiki/E.164) format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000.\n",
        "example": "447700900000",
        "maxLength": 15,
        "minLength": 7,
        "type": "string"
      },
      "Image": {
        "allOf": [
          {
            "$ref": "#/$defs/baseMessageType"
          },
          {
            "properties": {
              "image": {
                "properties": {
                  "url": {
                    "description": "The publicly accessible URL of the image attachment. The image file is available for 48 hours after it is created. Supported types are .jpg, .jpeg, and .png",
                    "example": "https://example.com/image.jpg",
                    "format": "url",
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "type": "object"
              },
              "message_type": {
                "description": "The type of message to send. You must provide `image` in this field",
                "enum": [
                  "image"
                ],
                "example": "image",
                "type": "string"
              }
            },
            "required": [
              "image"
            ],
            "title": "Image",
            "type": "object",
            "x-tab-id": "Image"
          }
        ]
      },
      "channelOptionsMms": {
        "properties": {
          "channel": {
            "description": "The channel to send to. You must provide `mms` in this field",
            "enum": [
              "mms"
            ],
            "example": "mms",
            "type": "string"
          },
          "from": {
            "$ref": "#/$defs/FromNumber"
          },
          "to": {
            "$ref": "#/$defs/ToNumber"
          }
        },
        "type": "object"
      },
      "vCard": {
        "allOf": [
          {
            "$ref": "#/$defs/baseMessageType"
          },
          {
            "properties": {
              "message_type": {
                "description": "The type of message to send. You must provide `vcard` in this field",
                "enum": [
                  "vcard"
                ],
                "example": "vcard",
                "type": "string"
              },
              "vcard": {
                "properties": {
                  "url": {
                    "description": "The publicly accessible URL of the vCard attachment. Supported types are .vcf only",
                    "example": "https://example.com/conatact.vcf",
                    "format": "url",
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "type": "object"
              }
            },
            "required": [
              "vcard"
            ],
            "title": "vCard",
            "type": "object",
            "x-tab-id": "vCard"
          }
        ]
      },
      "Audio": {
        "allOf": [
          {
            "$ref": "#/$defs/baseMessageType"
          },
          {
            "properties": {
              "audio": {
                "properties": {
                  "url": {
                    "example": "https://example.com/audio.mp3",
                    "format": "url",
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "type": "object"
              },
              "message_type": {
                "description": "The type of message to send. You must provide `audio` in this field",
                "enum": [
                  "audio"
                ],
                "example": "audio",
                "type": "string"
              }
            },
            "required": [
              "audio"
            ],
            "title": "Audio",
            "type": "object",
            "x-tab-id": "Audio"
          }
        ]
      },
      "Video": {
        "allOf": [
          {
            "$ref": "#/$defs/baseMessageType"
          },
          {
            "properties": {
              "message_type": {
                "description": "The type of message to send. You must provide `video` in this field",
                "enum": [
                  "video"
                ],
                "example": "video",
                "type": "string"
              },
              "video": {
                "properties": {
                  "url": {
                    "description": "Publicly accessible URL of the video attachment. Supports file types .mp4 and .3gpp\n> Note: Only supports video codec H.264 and audio codec AAC\n",
                    "example": "https://example.com/video.mp4",
                    "format": "url",
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "type": "object"
              }
            },
            "required": [
              "video"
            ],
            "title": "Video",
            "type": "object",
            "x-tab-id": "Video"
          }
        ]
      },
      "channelOptionsWhatsapp": {
        "properties": {
          "channel": {
            "description": "The channel to send to. You must provide `whatsapp` in this field",
            "enum": [
              "whatsapp"
            ],
            "example": "whatsapp",
            "type": "string"
          },
          "from": {
            "$ref": "#/$defs/FromNumber"
          },
          "to": {
            "$ref": "#/$defs/ToNumber"
          }
        },
        "type": "object"
      },
      "Location": {
        "allOf": [
          {
            "$ref": "#/$defs/baseMessageType"
          },
          {
            "properties": {
              "location": {
                "properties": {
                  "address": {
                    "description": "Address of the location. Only displayed if `name` is present.",
                    "example": "23 Main St, Holmdel, NJ 07733, USA",
                    "type": "string"
                  },
                  "lat": {
                    "description": "Latitude of the location.",
                    "example": 40.34772,
                    "type": "number"
                  },
                  "long": {
                    "description": "Longitude of the location.",
                    "example": -74.18847,
                    "type": "number"
                  },
                  "name": {
                    "description": "Name of the location.",
                    "example": "Vonage",
                    "type": "string"
                  }
                },
                "required": [
                  "lat",
                  "long"
                ],
                "type": "object"
              },
              "message_type": {
                "description": "The type of message to send. You must provide `location` in this field",
                "enum": [
                  "location"
                ],
                "example": "location",
                "type": "string"
              }
            },
            "required": [
              "location"
            ],
            "title": "Location",
            "type": "object",
            "x-tab-id": "Location"
          }
        ]
      },
      "File": {
        "allOf": [
          {
            "$ref": "#/$defs/baseMessageType"
          },
          {
            "properties": {
              "file": {
                "properties": {
                  "url": {
                    "example": "https://example.com/file.pdf",
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "type": "object"
              },
              "message_type": {
                "description": "The type of message to send. You must provide `file` in this field",
                "enum": [
                  "file"
                ],
                "example": "file",
                "type": "string"
              }
            },
            "required": [
              "file"
            ],
            "title": "File",
            "type": "object",
            "x-tab-id": "File"
          }
        ]
      },
      "Template": {
        "allOf": [
          {
            "$ref": "#/$defs/baseMessageType"
          },
          {
            "properties": {
              "message_type": {
                "description": "The type of message to send. You must provide `template` in this field",
                "enum": [
                  "template"
                ],
                "example": "template",
                "type": "string"
              },
              "template": {
                "properties": {
                  "name": {
                    "description": "The name of the template. For WhatsApp use your WhatsApp namespace (available via Facebook Business Manager), followed by a colon : and the name of the template to use.",
                    "example": "9b6b4fcb_da19_4a26_8fe8_78074a91b584:verify",
                    "type": "string"
                  },
                  "parameters": {
                    "$ref": "#/$defs/TemplateParameters"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            },
            "required": [
              "template"
            ],
            "title": "Template",
            "type": "object",
            "x-tab-id": "Template"
          }
        ]
      },
      "TemplateParameters": {
        "description": "The parameters are an array of strings, with the first string being used for {{1}} in the template, with the second being {{2}} etc. Only required if the template specified by `name` contains parameters.",
        "example": [
          "Verification",
          "2526",
          "5"
        ],
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "Custom": {
        "allOf": [
          {
            "$ref": "#/$defs/baseMessageType"
          },
          {
            "properties": {
              "custom": {
                "additionalProperties": true,
                "description": "A custom payload, which is passed directly to WhatsApp for certain features such as templates and interactive messages. The schema of a custom object can vary widely. [Read more about Custom Objects](https://developer.vonage.com/messages/concepts/custom-objects).",
                "type": "object"
              },
              "message_type": {
                "description": "The type of message to send. You must provide `custom` in this field",
                "enum": [
                  "custom"
                ],
                "example": "custom",
                "type": "string"
              }
            },
            "title": "Custom",
            "type": "object",
            "x-tab-id": "Custom"
          }
        ]
      },
      "channelOptionsMessenger": {
        "properties": {
          "channel": {
            "description": "The channel to send to. You must provide `messenger` in this field",
            "enum": [
              "messenger"
            ],
            "example": "messenger",
            "type": "string"
          },
          "from": {
            "$ref": "#/$defs/FromId"
          },
          "messenger": {
            "properties": {
              "category": {
                "description": "The use of different category tags enables the business to send messages for different use cases. For Facebook Messenger they need to comply with their [Messaging Types policy](https://developers.facebook.com/docs/messenger-platform/send-messages#messaging_types). Vonage maps our `category` to their `messaging_type`. If `message_tag` is used, then an additional `tag` for that type is mandatory. By default Vonage sends the `response` category to Facebook Messenger.",
                "enum": [
                  "response",
                  "update",
                  "message_tag"
                ],
                "example": "response",
                "type": "string"
              },
              "tag": {
                "description": "A tag describing the type and relevance of the 1:1 communication between your app and the end user. A full list of available tags is available [here](https://developers.facebook.com/docs/messenger-platform/send-messages/message-tags)",
                "example": "CONFIRMED_EVENT_UPDATE",
                "type": "string"
              }
            },
            "type": "object"
          },
          "to": {
            "$ref": "#/$defs/ToId"
          }
        },
        "type": "object"
      },
      "FromId": {
        "description": "The ID of the message sender\n",
        "example": "9876543210",
        "maxLength": 50,
        "minLength": 1,
        "type": "string"
      },
      "ToId": {
        "description": "The ID of the message recipient\n",
        "example": "0123456789",
        "maxLength": 50,
        "minLength": 1,
        "type": "string"
      },
      "channelOptionsViberWithButton": {
        "properties": {
          "channel": {
            "description": "The channel to send to. You must provide `viber_service` in this field",
            "enum": [
              "viber_service"
            ],
            "example": "viber_service",
            "type": "string"
          },
          "from": {
            "$ref": "#/$defs/FromId"
          },
          "to": {
            "$ref": "#/$defs/ToNumber"
          },
          "viber_service": {
            "properties": {
              "action": {
                "description": "Node for Viber action buttons.",
                "properties": {
                  "text": {
                    "description": "Text which is rendered on the action button.",
                    "example": "Find out more",
                    "maxLength": 30,
                    "type": "string"
                  },
                  "url": {
                    "description": "A URL which is requested when the action button is clicked.",
                    "example": "https://example.com/page1.html",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "category": {
                "description": "The use of different category tags enables the business to send messages for different use cases. For Viber Business Messages the first message sent from a business to a user must be personal, informative & a targeted message - not promotional. By default Vonage sends the `transaction` category to Viber Business Messages.",
                "enum": [
                  "transaction",
                  "promotion"
                ],
                "type": "string"
              },
              "ttl": {
                "description": "Set the time-to-live of message to be delivered in seconds. i.e. if the message is not delivered in 600 seconds then delete the message.",
                "example": 600,
                "maximum": 259200,
                "minimum": 30,
                "type": "integer"
              },
              "type": {
                "description": "Viber-specific type definition. To use \"template\", please contact your Vonage Account Manager to setup your templates. To find out more please visit the [product page](https://www.vonage.com/communications-apis/messages/)",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "channelOptionsViberVideo": {
        "properties": {
          "channel": {
            "description": "The channel to send to. You must provide `viber_service` in this field",
            "enum": [
              "viber_service"
            ],
            "example": "viber_service",
            "type": "string"
          },
          "from": {
            "$ref": "#/$defs/FromId"
          },
          "to": {
            "$ref": "#/$defs/ToNumber"
          },
          "viber_service": {
            "properties": {
              "category": {
                "description": "The use of different category tags enables the business to send messages for different use cases. For Viber Business Messages the first message sent from a business to a user must be personal, informative & a targeted message - not promotional. By default Vonage sends the `transaction` category to Viber Business Messages.",
                "enum": [
                  "transaction",
                  "promotion"
                ],
                "type": "string"
              },
              "duration": {
                "description": "The duration of the video in seconds.",
                "example": "123",
                "maximum": 600,
                "minimum": 1,
                "type": "string"
              },
              "file_size": {
                "description": "The file size of the video in MB.",
                "example": "1",
                "maximum": 200,
                "minimum": 1,
                "type": "string"
              },
              "ttl": {
                "description": "Set the time-to-live of message to be delivered in seconds. i.e. if the message is not delivered in 600 seconds then delete the message.",
                "example": 600,
                "maximum": 259200,
                "minimum": 30,
                "type": "integer"
              },
              "type": {
                "description": "Viber-specific type definition. To use \"template\", please contact your Vonage Account Manager to setup your templates. To find out more please visit the [product page](https://www.vonage.com/communications-apis/messages/)",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "channelOptionsViber": {
        "properties": {
          "channel": {
            "description": "The channel to send to. You must provide `viber_service` in this field",
            "enum": [
              "viber_service"
            ],
            "example": "viber_service",
            "type": "string"
          },
          "from": {
            "$ref": "#/$defs/FromId"
          },
          "to": {
            "$ref": "#/$defs/ToNumber"
          },
          "viber_service": {
            "properties": {
              "category": {
                "description": "The use of different category tags enables the business to send messages for different use cases. For Viber Business Messages the first message sent from a business to a user must be personal, informative & a targeted message - not promotional. By default Vonage sends the `transaction` category to Viber Business Messages.",
                "enum": [
                  "transaction",
                  "promotion"
                ],
                "type": "string"
              },
              "ttl": {
                "description": "Set the time-to-live of message to be delivered in seconds. i.e. if the message is not delivered in 600 seconds then delete the message.",
                "example": 600,
                "maximum": 259200,
                "minimum": 30,
                "type": "integer"
              },
              "type": {
                "description": "Viber-specific type definition. To use \"template\", please contact your Vonage Account Manager to setup your templates. To find out more please visit the [product page](https://www.vonage.com/communications-apis/messages/)",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.nexmo.com/v1/messages/"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Additional information about the error",
            "**instance**: Internal Trace ID",
            "**title**: Generic error message",
            "**type**: Link to error / remediation options"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Additional information about the error",
            "**instance**: Internal Trace ID",
            "**title**: Generic error message",
            "**type**: Link to error / remediation options"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Additional information about the error",
            "**instance**: Internal Trace ID",
            "**title**: Generic error message",
            "**type**: Link to error / remediation options"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
