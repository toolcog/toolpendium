{
  "name": "get_tournaments_tournamentIdOrSlug",
  "description": "Get a single tournament by ID or by slug",
  "parameters": {
    "type": "object",
    "properties": {
      "tournament_id_or_slug": {
        "$ref": "#/components/schemas/TournamentIDOrSlug",
        "description": "A tournament ID or slug"
      }
    },
    "required": [
      "tournament_id_or_slug"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.pandascore.co//tournaments/{tournament_id_or_slug}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**begin_at**",
            "**end_at**",
            "**expected_roster**",
            "**id**",
            [
              "**league**",
              {
                "$ul": [
                  "**id**",
                  "**image_url**",
                  "**modified_at**",
                  "**name**",
                  "**slug**",
                  "**url**"
                ]
              }
            ],
            "**league_id**",
            "**live_supported**: Whether live is supported",
            "**matches**",
            "**modified_at**",
            "**name**",
            "**prizepool**",
            [
              "**serie**",
              {
                "$ul": [
                  "**begin_at**",
                  "**description**",
                  "**end_at**",
                  "**full_name**",
                  "**id**",
                  "**league_id**",
                  "**modified_at**",
                  "**name**",
                  "**season**",
                  "**slug**",
                  "**tier**",
                  "**winner_id**",
                  "**winner_type**",
                  "**year**"
                ]
              }
            ],
            "**serie_id**",
            "**slug**",
            "**teams**",
            "**videogame**",
            "**winner_id**",
            "**winner_type**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
