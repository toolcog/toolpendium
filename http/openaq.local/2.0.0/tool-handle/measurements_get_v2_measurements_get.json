{
  "name": "measurements_get_v2_measurements_get",
  "description": "Measurements Get",
  "parameters": {
    "type": "object",
    "properties": {
      "format": {
        "title": "Format",
        "type": "string"
      },
      "date_from": {
        "anyOf": [
          {
            "format": "date-time",
            "type": "string"
          },
          {
            "format": "date",
            "type": "string"
          }
        ],
        "default": "2000-01-01T00:00:00+00:00",
        "title": "Date From"
      },
      "date_to": {
        "anyOf": [
          {
            "format": "date-time",
            "type": "string"
          },
          {
            "format": "date",
            "type": "string"
          }
        ],
        "default": "2021-08-23T09:48:00+00:00",
        "title": "Date To"
      },
      "limit": {
        "default": 100,
        "description": "Change the number of results returned.",
        "exclusiveMinimum": true,
        "maximum": 100000,
        "minimum": 0,
        "title": "Limit",
        "type": "integer"
      },
      "page": {
        "default": 1,
        "description": "Paginate through results.",
        "exclusiveMinimum": true,
        "maximum": 6000,
        "minimum": 0,
        "title": "Page",
        "type": "integer"
      },
      "offset": {
        "default": 0,
        "maximum": 10000,
        "minimum": 0,
        "title": "Offset",
        "type": "integer"
      },
      "sort": {
        "allOf": [
          {
            "$ref": "#/$defs/Sort"
          }
        ],
        "default": "desc"
      },
      "has_geo": {
        "title": "Has Geo",
        "type": "boolean"
      },
      "parameter_id": {
        "title": "Parameter Id",
        "type": "integer"
      },
      "parameter": {
        "items": {
          "anyOf": [
            {
              "exclusiveMinimum": true,
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "string"
            }
          ]
        },
        "title": "Parameter",
        "type": "array"
      },
      "unit": {
        "items": {
          "type": "string"
        },
        "title": "Unit",
        "type": "array"
      },
      "coordinates": {
        "pattern": "^-?\\d{1,2}\\.?\\d{0,8},-?1?\\d{1,2}\\.?\\d{0,8}$",
        "title": "Coordinates",
        "type": "string"
      },
      "radius": {
        "default": 1000,
        "exclusiveMinimum": true,
        "maximum": 100000,
        "minimum": 0,
        "title": "Radius",
        "type": "integer"
      },
      "country_id": {
        "description": "\n        Limit results by a certain country using two letter country code.\n        (ex. /US)\n        ",
        "maxLength": 2,
        "minLength": 2,
        "pattern": "[a-zA-Z][a-zA-Z]",
        "title": "Country Id",
        "type": "string"
      },
      "country": {
        "description": "\n        Limit results by a certain country using two letter country code.\n        (ex. ?country=US or ?country=US&country=MX)\n        ",
        "items": {
          "maxLength": 2,
          "minLength": 2,
          "pattern": "[a-zA-Z][a-zA-Z]",
          "type": "string"
        },
        "title": "Country",
        "type": "array"
      },
      "city": {
        "description": "\n        Limit results by a certain city or cities.\n        (ex. ?city=Chicago or ?city=Chicago&city=Boston)\n        ",
        "items": {
          "type": "string"
        },
        "title": "City",
        "type": "array"
      },
      "location_id": {
        "title": "Location Id",
        "type": "integer"
      },
      "location": {
        "items": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ]
        },
        "title": "Location",
        "type": "array"
      },
      "order_by": {
        "allOf": [
          {
            "$ref": "#/$defs/MeasOrder"
          }
        ],
        "default": "datetime"
      },
      "isMobile": {
        "title": "Ismobile",
        "type": "boolean"
      },
      "isAnalysis": {
        "title": "Isanalysis",
        "type": "boolean"
      },
      "project": {
        "title": "Project",
        "type": "integer"
      },
      "entity": {
        "$ref": "#/$defs/EntityTypes"
      },
      "sensorType": {
        "$ref": "#/$defs/SensorTypes"
      },
      "value_from": {
        "title": "Value From",
        "type": "number"
      },
      "value_to": {
        "title": "Value To",
        "type": "number"
      },
      "include_fields": {
        "title": "Include Fields",
        "type": "string"
      }
    },
    "$defs": {
      "Sort": {
        "description": "An enumeration.",
        "enum": [
          "asc",
          "desc"
        ],
        "title": "Sort",
        "type": "string"
      },
      "MeasOrder": {
        "description": "An enumeration.",
        "enum": [
          "city",
          "country",
          "location",
          "datetime"
        ],
        "title": "MeasOrder",
        "type": "string"
      },
      "EntityTypes": {
        "description": "An enumeration.",
        "enum": [
          "government",
          "community",
          "research"
        ],
        "title": "EntityTypes",
        "type": "string"
      },
      "SensorTypes": {
        "description": "An enumeration.",
        "enum": [
          "reference grade",
          "low-cost sensor"
        ],
        "title": "SensorTypes",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://openaq.local/v2/measurements{?format,date_from,date_to,limit,page,offset,sort,has_geo,parameter_id,parameter,unit,coordinates,radius,country_id,country,city,location_id,location,order_by,isMobile,isAnalysis,project,entity,sensorType,value_from,value_to,include_fields}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "HTTPValidationError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
