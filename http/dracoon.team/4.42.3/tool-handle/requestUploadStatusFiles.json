{
  "name": "requestUploadStatusFiles",
  "description": "<h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since v4.15.0</h3>\n\n### Description:\nRequest status of a S3 file upload.\n\n### Precondition:\nAn upload channel has been created and user has to be the creator of the upload channel.\n\n### Postcondition:\nStatus of S3 multipart upload request is returned.\n\n### Further Information:\nNone.\n\n### Possible errors:\n<details style=\"padding: 10px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px;\">\n<summary style=\"cursor: pointer; outline: none\"><strong>Expand</strong></summary>\n\n| Http Status | Error Code | Description |\n| :--- | :--- | :--- |\n| `400 Bad Request` | `-80000` | Mandatory fields cannot be empty |\n| `400 Bad Request` | `-80001` | Invalid positive number |\n| `400 Bad Request` | `-80002` | Invalid number |\n| `400 Bad Request` | `-40001` | (Target) room is not encrypted |\n| `400 Bad Request` | `-40755` | Bad file name |\n| `400 Bad Request` | `-40763` | File key must be set for an upload into encrypted room |\n| `400 Bad Request` | `-50506` | Exceeds the number of files for this Upload Share |\n| `403 Forbidden` |  | Access denied |\n| `404 Not Found` | `-20501` | Upload not found |\n| `404 Not Found` | `-40000` | Container not found |\n| `404 Not Found` | `-41000` | Node not found |\n| `404 Not Found` | `-70501` | User not found |\n| `409 Conflict` | `-40010` | Container cannot be overwritten |\n| `409 Conflict` |  | File cannot be overwritten |\n| `500 Internal Server Error` |  | System Error |\n| `502 Bad Gateway` |  | S3 Error |\n| `502 Insufficient Storage` | `-50504` | Exceeds the quota for this Upload Share |\n| `502 Insufficient Storage` | `-40200` | Exceeds the free node quota in room |\n| `502 Insufficient Storage` | `-90200` | Exceeds the free customer quota |\n| `502 Insufficient Storage` | `-90201` | Exceeds the free customer physical disk space |\n\n</details>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Sds-Date-Format": {
        "enum": [
          "UTC",
          "LOCAL",
          "OFFSET",
          "EPOCH",
          "LEET"
        ],
        "type": "string",
        "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
      },
      "upload_id": {
        "type": "string",
        "description": "Upload channel ID"
      },
      "X-Sds-Auth-Token": {
        "type": "string",
        "description": "Authentication token"
      }
    },
    "required": [
      "upload_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/v4/nodes/files/uploads/{upload_id}"
    },
    "headers": {
      "X-Sds-Date-Format": {
        "$": "X-Sds-Date-Format"
      },
      "X-Sds-Auth-Token": {
        "$": "X-Sds-Auth-Token"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "S3 file upload status information",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**errorDetails**: Error information",
              {
                "$ul": [
                  "**code**: HTTP status code",
                  "**debugInfo**: Debug information",
                  "**errorCode**: Internal error code",
                  "**message**: HTTP status code description"
                ]
              }
            ],
            [
              "**node**: Node information (Node can be a room, folder or file)",
              {
                "$ul": [
                  "**authParentId**: &#128640; Since v4.15.0",
                  "**branchVersion**: Version of last change in this node or a node further down the tree.",
                  "**children**: &#128679; Deprecated since v4.10.0",
                  "**classification**: Classification ID:",
                  "**cntChildren**: &#128679; Deprecated since v4.11.0",
                  "**cntComments**: Returns the number of comments of this node.",
                  "**cntDeletedVersions**: Number of deleted versions of this file / folder",
                  "**cntDownloadShares**: Returns the number of Download Shares of this node.",
                  "**cntFiles**: &#128640; Since v4.11.0",
                  "**cntFolders**: &#128640; Since v4.11.0",
                  "**cntRooms**: &#128640; Since v4.11.0",
                  "**cntUploadShares**: Returns the number of Upload Shares of this node.",
                  "**createdAt**: Creation date",
                  [
                    "**createdBy**: User information",
                    {
                      "$ul": [
                        "**avatarUuid**: &#128640; Since v4.11.0",
                        "**displayName**: &#128679; Deprecated since v4.11.0",
                        "**email**: &#128640; Since v4.11.0",
                        "**firstName**: &#128640; Since v4.11.0",
                        "**id**: Unique identifier for the user",
                        "**lastName**: &#128640; Since v4.11.0",
                        "**title**: &#128679; Deprecated since v4.18.0",
                        "**userName**: &#128640; Since v4.13.0",
                        "**userType**: &#128640; Since v4.11.0"
                      ]
                    }
                  ],
                  [
                    "**encryptionInfo**: Encryption states",
                    {
                      "$ul": [
                        "**dataSpaceKeyState**: DRACOON key state",
                        "**roomKeyState**: Room key state",
                        "**userKeyState**: User key state"
                      ]
                    }
                  ],
                  "**expireAt**: Expiration date",
                  "**fileType**: File type / extension (for files only)",
                  "**hasActivitiesLog**: Is activities log active (for rooms only) (default: true)",
                  "**hash**: MD5 hash of file",
                  "**id**: Node ID",
                  "**inheritPermissions**: Inherit permissions from parent room",
                  "**isBrowsable**: &#128640; Since v4.11.0",
                  "**isEncrypted**: Encryption state",
                  "**isFavorite**: Node is marked as favorite (for rooms / folders only)",
                  "**mediaToken**: Media server media token",
                  "**mediaType**: File media type (for files only)",
                  "**name**: Name",
                  "**notes**: User notes",
                  "**parentId**: Parent node ID (room or folder)",
                  "**parentPath**: Parent node path",
                  [
                    "**permissions**: Node permissions",
                    {
                      "$ul": [
                        "**change**: User / Group may update metadata of nodes: rename files and folders, change classification, etc.",
                        "**create**: User / Group may upload files, create folders and copy / move files to this room, overwriting is not possible.",
                        "**delete**: User / Group may overwrite and remove files / folders, move files from this room.",
                        "**deleteRecycleBin**: User / Group may permanently remove files / folders from the recycle bin.",
                        "**manage**: User / Group may grant all of the above permissions to other users and groups independently,",
                        "**manageDownloadShare**: User / Group may create Download Shares for files and containers view all previously created Download Shares in this room.",
                        "**manageUploadShare**: User / Group may create Upload Shares for containers, view all previously created Upload Shares in this room.",
                        "**read**: User / Group may see all rooms, files and folders in the room and download everything, copy files from this room.",
                        "**readRecycleBin**: User / Group may look up files / folders in the recycle bin.",
                        "**restoreRecycleBin**: User / Group may restore files / folders from recycle bin - room permissions required."
                      ]
                    }
                  ],
                  "**quota**: Quota in byte",
                  "**recycleBinRetentionPeriod**: Retention period for deleted nodes in days",
                  "**referenceId**: &#128640; Since v4.37.0",
                  "**size**: Node size in byte",
                  "**timestampCreation**: &#128640; Since v4.22.0",
                  "**timestampModification**: &#128640; Since v4.22.0",
                  "**type**: Node type",
                  "**updatedAt**: Modification date",
                  [
                    "**updatedBy**: User information",
                    {
                      "$ul": [
                        "**avatarUuid**: &#128640; Since v4.11.0",
                        "**displayName**: &#128679; Deprecated since v4.11.0",
                        "**email**: &#128640; Since v4.11.0",
                        "**firstName**: &#128640; Since v4.11.0",
                        "**id**: Unique identifier for the user",
                        "**lastName**: &#128640; Since v4.11.0",
                        "**title**: &#128679; Deprecated since v4.18.0",
                        "**userName**: &#128640; Since v4.13.0",
                        "**userType**: &#128640; Since v4.11.0"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: S3 file upload status:"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "406": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "412": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
