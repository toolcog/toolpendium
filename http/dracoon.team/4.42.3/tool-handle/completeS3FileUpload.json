{
  "name": "completeS3FileUpload",
  "description": "<h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since v4.15.0</h3>\n\n### Description:\nFinishes a S3 file upload and closes the corresponding upload channel.\n\n### Precondition:\nAn upload channel has been created, data has been transmitted and user has to be the creator of the upload channel\n\n### Postcondition:\nUpload channel is closed. S3 multipart upload request is completed.\n\n### Further Information:\nDownload share id (if exists) gets changed if:\n- node with the same name exists in the target container\n- `resolutionStrategy` is `overwrite`\n- `keepShareLinks` is `true`",
  "parameters": {
    "type": "object",
    "properties": {
      "upload_id": {
        "type": "string",
        "description": "Upload channel ID"
      },
      "X-Sds-Auth-Token": {
        "type": "string",
        "description": "Authentication token"
      },
      "body": {
        "$ref": "#/$defs/CompleteS3FileUploadRequest"
      }
    },
    "required": [
      "upload_id",
      "body"
    ],
    "$defs": {
      "CompleteS3FileUploadRequest": {
        "description": "Request model for completing a S3 file upload",
        "properties": {
          "fileKey": {
            "$ref": "#/$defs/FileKey"
          },
          "fileName": {
            "description": "New file name to store with",
            "type": "string"
          },
          "keepShareLinks": {
            "default": false,
            "description": "Preserve Download Share Links and point them to the new node.",
            "type": "boolean"
          },
          "parts": {
            "description": "List of S3 file upload parts",
            "items": {
              "$ref": "#/$defs/S3FileUploadPart"
            },
            "type": "array"
          },
          "resolutionStrategy": {
            "default": "autorename",
            "description": "Node conflict resolution strategy:\n\n* `autorename`\n\n* `overwrite`\n\n* `fail`",
            "enum": [
              "autorename",
              "overwrite",
              "fail"
            ],
            "type": "string"
          }
        },
        "required": [
          "parts"
        ],
        "type": "object"
      },
      "FileKey": {
        "description": "File key information",
        "properties": {
          "iv": {
            "description": "Initial vector",
            "type": "string"
          },
          "key": {
            "description": "Encryption key",
            "type": "string"
          },
          "tag": {
            "description": "Authentication tag\n\n(needed with authenticated encryption)",
            "type": "string"
          },
          "version": {
            "description": "Version",
            "type": "string"
          }
        },
        "required": [
          "iv",
          "key",
          "tag",
          "version"
        ],
        "type": "object"
      },
      "S3FileUploadPart": {
        "description": "S3 file upload part information",
        "properties": {
          "partEtag": {
            "description": "Corresponding part ETag",
            "type": "string"
          },
          "partNumber": {
            "description": "Corresponding part number",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "partEtag",
          "partNumber"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "/api/v4/nodes/files/uploads/{upload_id}/s3"
    },
    "headers": {
      "X-Sds-Auth-Token": {
        "$": "X-Sds-Auth-Token"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "406": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "412": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "504": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
