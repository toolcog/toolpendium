{
  "name": "createOpenIdIdpConfig",
  "description": "### Description:\nCreate new OpenID Connect IDP configuration.\n\n### Precondition:\nRight <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; change global config</span> and\nrole <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100; Config Manager</span> of the Provider Customer required.\n\n### Postcondition:\nNew OpenID Connect IDP configuration is created.\n\n### Further Information:\nNone.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Sds-Auth-Token": {
        "type": "string",
        "description": "Authentication token"
      },
      "body": {
        "$ref": "#/$defs/CreateOpenIdIdpConfigRequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "CreateOpenIdIdpConfigRequest": {
        "description": "Request model for creating an OpenID Connect IDP configuration",
        "properties": {
          "authorizationEndPointUrl": {
            "description": "URL of the authorization endpoint",
            "type": "string"
          },
          "clientId": {
            "description": "ID of the OpenID client",
            "type": "string"
          },
          "clientSecret": {
            "description": "Secret, which client uses at authentication.",
            "type": "string"
          },
          "fallbackMappingClaim": {
            "description": "Name of the claim which is used for the user mapping fallback.",
            "type": "string"
          },
          "flow": {
            "description": "&#128640; Since v4.11.0\n\nFlow, which is used at authentication",
            "enum": [
              "authorization_code",
              "hybrid"
            ],
            "type": "string"
          },
          "issuer": {
            "description": "Issuer identifier of the IDP\n\nThe value is a case sensitive URL.",
            "type": "string"
          },
          "jwksEndPointUrl": {
            "description": "URL of the JWKS endpoint",
            "type": "string"
          },
          "mappingClaim": {
            "description": "Name of the claim which is used for the user mapping.",
            "type": "string"
          },
          "name": {
            "description": "Name of the IDP",
            "type": "string"
          },
          "pkceChallengeMethod": {
            "default": "plain",
            "description": "PKCE code challenge method.\n\ncf. [RFC 7636](https://tools.ietf.org/html/rfc7636)",
            "type": "string"
          },
          "pkceEnabled": {
            "default": false,
            "description": "Determines whether PKCE is enabled.\n\ncf. [RFC 7636](https://tools.ietf.org/html/rfc7636)",
            "type": "boolean"
          },
          "redirectUris": {
            "description": "URIs, to which a user is redirected after authorization.",
            "items": {
              "description": "URIs, to which a user is redirected after authorization.",
              "type": "string"
            },
            "type": "array"
          },
          "scopes": {
            "description": "List of requested scopes",
            "items": {
              "description": "List of requested scopes",
              "type": "string"
            },
            "type": "array"
          },
          "tokenEndPointUrl": {
            "description": "URL of the token endpoint",
            "type": "string"
          },
          "userImportEnabled": {
            "default": false,
            "description": "Determines if a DRACOON account is automatically created for a new user\n\nwho successfully logs on with his / her AD / IDP account.",
            "type": "boolean"
          },
          "userImportGroup": {
            "description": "User group that is assigned to users who are created by automatic import.\n\nReset with `0`",
            "format": "int64",
            "type": "integer"
          },
          "userInfoEndPointUrl": {
            "description": "URL of the user info endpoint",
            "type": "string"
          },
          "userInfoSource": {
            "description": "&#128640; Since v4.23.0\n\nSource, which is used to get user information at the import or update of a user.",
            "enum": [
              "user_info_endpoint",
              "id_token"
            ],
            "type": "string"
          },
          "userManagementUrl": {
            "description": "URL of the user management UI.\n\nUse empty string to remove.",
            "type": "string"
          },
          "userUpdateEnabled": {
            "default": false,
            "description": "Determines if the DRACOON account is updated with data from AD / IDP.\n\nFor OpenID Connect, the scopes `email` and `profile` are needed.",
            "type": "boolean"
          }
        },
        "required": [
          "authorizationEndPointUrl",
          "clientId",
          "clientSecret",
          "issuer",
          "jwksEndPointUrl",
          "mappingClaim",
          "name",
          "redirectUris",
          "scopes",
          "tokenEndPointUrl",
          "userInfoEndPointUrl"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "/api/v4/system/config/auth/openid/idps"
    },
    "headers": {
      "X-Sds-Auth-Token": {
        "$": "X-Sds-Auth-Token"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "OpenID Connect IDP configuration",
        "**Key properties:**",
        {
          "$ul": [
            "**authorizationEndPointUrl**: URL of the authorization endpoint",
            "**clientId**: ID of the OpenID client",
            "**clientSecret**: Secret, which client uses at authentication.",
            "**fallbackMappingClaim**: Name of the claim which is used for the user mapping fallback.",
            "**flow**: &#128640; Since v4.11.0",
            "**id**: ID",
            "**issuer**: Issuer identifier of the IDP",
            "**jwksEndPointUrl**: URL of the JWKS endpoint",
            "**mappingClaim**: Name of the claim which is used for the user mapping.",
            "**name**: Name of the IDP",
            "**pkceChallengeMethod**: PKCE code challenge method.",
            "**pkceEnabled**: Determines whether PKCE is enabled. (default: false)",
            "**redirectUris**: URIs, to which a user is redirected after authorization.",
            "**scopes**: List of requested scopes",
            "**tokenEndPointUrl**: URL of the token endpoint",
            "**userImportEnabled**: Determines if a DRACOON account is automatically created for a new user (default: false)",
            "**userImportGroup**: User group that is assigned to users who are created by automatic import.",
            "**userInfoEndPointUrl**: URL of the user info endpoint",
            "**userInfoSource**: &#128640; Since v4.23.0",
            "**userManagementUrl**: URL of the user management UI.",
            "**userUpdateEnabled**: Determines if the DRACOON account is updated with data from AD / IDP. (default: false)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "406": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "412": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
