{
  "name": "createOAuthClient",
  "description": "### Description:\nCreate a new OAuth client.\n\n### Precondition:\nRight <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275; change global config</span> and\nrole <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100; Config Manager</span> of the Provider Customer required.\n\n### Postcondition:\nNew OAuth client created.\n\n### Further Information:  \nClient secret **MUST** have:  \n* at least 12 characters, at most 32 characters  \n* only lower case characters, upper case characters and digits  \n* at least 1 lower case character, 1 upper case character and 1 digit  \n\nThe client secret is optional and will be generated if it is left empty.  \n\nValid grant types are:  \n* `authorization_code`  \n* `implicit`  \n* `password`  \n* `client_credentials`  \n* `refresh_token`  \n\nGrant type `client_credentials` is currently **NOT** permitted!\n\nAllowed characters for client ID are: `[a-zA-Z0-9_-]`\n\nIf grant types `authorization_code` or `implicit` are used, a\nredirect URI **MUST** be provided!\n\nDefault access token validity: **8 hours**  \nDefault refresh token validity: **30 days**\nDefault approval validity: **Â½ year**",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Sds-Auth-Token": {
        "type": "string",
        "description": "Authentication token"
      },
      "body": {
        "$ref": "#/$defs/CreateOAuthClientRequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "CreateOAuthClientRequest": {
        "description": "Request model for creating an OAuth client",
        "properties": {
          "accessTokenValidity": {
            "description": "Validity of the access token in seconds.",
            "format": "int32",
            "type": "integer"
          },
          "approvalValidity": {
            "description": "&#128640; Since v4.22.0\n\nValidity of the approval interval in seconds.",
            "format": "int32",
            "type": "integer"
          },
          "clientId": {
            "description": "ID of the OAuth client",
            "type": "string"
          },
          "clientName": {
            "description": "Name, which is shown at the client configuration and authorization.",
            "type": "string"
          },
          "clientSecret": {
            "description": "Secret, which client uses at authentication.",
            "type": "string"
          },
          "clientType": {
            "description": "Determines whether client is a confidential or public client.",
            "enum": [
              "confidential",
              "public"
            ],
            "type": "string"
          },
          "grantTypes": {
            "description": "Authorized grant types\n\n* `authorization_code`\n\n* `implicit`\n\n* `password`\n\n* `client_credentials`\n\n* `refresh_token`\n\n\n\ncf. [RFC 6749](https://tools.ietf.org/html/rfc6749)",
            "enum": [
              "authorization_code",
              "client_credentials",
              "implicit",
              "password",
              "refresh_token"
            ],
            "items": {
              "description": "Authorized grant types\n\n* `authorization_code`\n\n* `implicit`\n\n* `password`\n\n* `client_credentials`\n\n* `refresh_token`\n\n\n\ncf. [RFC 6749](https://tools.ietf.org/html/rfc6749)",
              "enum": [
                "authorization_code",
                "client_credentials",
                "implicit",
                "password",
                "refresh_token"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "redirectUris": {
            "description": "URIs, to which a user is redirected after authorization.",
            "items": {
              "description": "URIs, to which a user is redirected after authorization.",
              "type": "string"
            },
            "type": "array"
          },
          "refreshTokenValidity": {
            "description": "Validity of the refresh token in seconds.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "clientName",
          "grantTypes",
          "redirectUris"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "/api/v4/system/config/oauth/clients"
    },
    "headers": {
      "X-Sds-Auth-Token": {
        "$": "X-Sds-Auth-Token"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "OAuth client information",
        "**Key properties:**",
        {
          "$ul": [
            "**accessTokenValidity**: Validity of the access token in seconds.",
            "**approvalValidity**: &#128640; Since v4.22.0",
            "**clientId**: ID of the OAuth client",
            "**clientName**: Name, which is shown at the client configuration and authorization.",
            "**clientSecret**: Secret, which client uses at authentication.",
            "**clientType**: Determines whether client is a confidential or public client.",
            "**grantTypes**: Authorized grant types",
            "**isEnabled**: Determines whether client is enabled.",
            "**isExternal**: Determines whether client is an external client.",
            "**isStandard**: Determines whether client is a standard client.",
            "**redirectUris**: URIs, to which a user is redirected after authorization.",
            "**refreshTokenValidity**: Validity of the refresh token in seconds."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "406": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "412": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error information",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: HTTP status code",
            "**debugInfo**: Debug information",
            "**errorCode**: Internal error code",
            "**message**: HTTP status code description"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
