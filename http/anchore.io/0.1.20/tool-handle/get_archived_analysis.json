{
  "name": "get_archived_analysis",
  "description": "Returns the archive metadata record identifying the image and tags for the analysis in the archive.",
  "parameters": {
    "type": "object",
    "properties": {
      "imageDigest": {
        "type": "string",
        "description": "The image digest to identify the image analysis"
      }
    },
    "required": [
      "imageDigest"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//archives/images/{imageDigest}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**analyzed_at**",
            "**annotations**: User provided annotations as key-value pairs",
            "**archive_size_bytes**: The size, in bytes, of the analysis archive file",
            "**created_at**",
            "**imageDigest**: The image digest (digest of the manifest describing the image, per docker spec)",
            "**image_detail**: List of tags associated with the image digest",
            "**last_updated**",
            "**parentDigest**: The digest of a parent manifest (for manifest-list images)",
            "**status**: The archival status"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Generic HTTP API error response",
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            "**detail**: Details structure for additional information about the error if available. Content and structure will be error specific.",
            "**error_type**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
