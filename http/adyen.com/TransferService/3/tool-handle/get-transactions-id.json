{
  "name": "get-transactions-id",
  "description": ">Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the latest version.\n\nReturns a transaction.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "The unique identifier of the transaction."
      }
    },
    "required": [
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://balanceplatform-api-test.adyen.com/btl/v3/transactions/{id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**accountHolderId**: Unique identifier of the account holder.",
            [
              "**amount**",
              {
                "$ul": [
                  "**currency**: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
                  "**value**: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes)."
                ]
              }
            ],
            "**balanceAccountId**: Unique identifier of the balance account.",
            "**balancePlatform**: The unique identifier of the balance platform.",
            "**bookingDate**: The date the transaction was booked into the balance account.",
            "**category**: The category of the transaction indicating the type of activity.",
            [
              "**counterparty**",
              {
                "$ul": [
                  "**balanceAccountId**: Unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id).",
                  [
                    "**bankAccount**",
                    {
                      "$ul": [
                        [
                          "**accountHolder**",
                          {
                            "$ul": [
                              [
                                "**address**",
                                {
                                  "$ul": [
                                    "**city**: The name of the city.",
                                    "**country**: The two-character ISO 3166-1 alpha-2 country code. For example, **US**, **NL**, or **GB**.",
                                    "**line1**: First line of the street address.",
                                    "**line2**: Second line of the street address.",
                                    "**postalCode**: The postal code.",
                                    "**stateOrProvince**: The two-letter ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada."
                                  ]
                                }
                              ],
                              "**dateOfBirth**: The date of birth of the individual in [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format. For example, **YYYY-MM-DD**. Should not be before January 1, 1900.",
                              "**firstName**: First name of the individual.",
                              "**fullName**: The name of the entity.",
                              "**lastName**: Last name of the individual.",
                              "**reference**: A unique reference to identify the party or counterparty involved in transfers. This identifier ensures consistency and uniqueness throughout all transactions initiated to and from the same party. For example, your client's unique wallet or payee ID.",
                              "**type**: The type of entity that owns the bank account. (default: unknown)"
                            ]
                          }
                        ],
                        "**accountIdentification**: Contains the bank account details. The fields required in this object depend on the country of the bank account and the currency of the transfer."
                      ]
                    }
                  ],
                  [
                    "**merchant**",
                    {
                      "$ul": [
                        "**acquirerId**: The unique identifier of the merchant's acquirer.",
                        "**mcc**: The merchant category code.",
                        "**merchantId**: The merchant identifier.",
                        [
                          "**nameLocation**",
                          {
                            "$ul": [
                              "**city**: The city where the merchant is located.",
                              "**country**: The country where the merchant is located in [three-letter country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) format.",
                              "**countryOfOrigin**: The home country in [three-digit country code](https://en.wikipedia.org/wiki/ISO_3166-1_numeric) format, used for government-controlled merchants such as embassies.",
                              "**name**: The name of the merchant's shop or service.",
                              "**rawData**: The raw data.",
                              "**state**: The state where the merchant is located."
                            ]
                          }
                        ],
                        "**postalCode**: The merchant postal code."
                      ]
                    }
                  ],
                  "**transferInstrumentId**: Unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id)."
                ]
              }
            ],
            "**createdAt**: The date the transaction was created.",
            "**creationDate**: The date and time when the event was triggered, in ISO 8601 extended format. For example, **2020-12-18T10:15:30+01:00**.",
            "**description**: The `description` from the `/transfers` request.",
            "**eventId**: The PSP reference of the transaction in the journal.",
            "**id**: The unique identifier of the transaction.",
            [
              "**instructedAmount**",
              {
                "$ul": [
                  "**currency**: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
                  "**value**: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes)."
                ]
              }
            ],
            "**paymentInstrumentId**: The unique identifier of the payment instrument that was used for the transaction.",
            "**reference**: The [`reference`](https://docs.adyen.com/api-explorer/#/transfers/latest/post/transfers__reqParam_reference) from the `/transfers` request. If you haven't provided any, Adyen generates a unique reference.",
            "**referenceForBeneficiary**: The reference sent to or received from the counterparty.",
            "**status**: The status of the transaction.",
            "**transferId**: Unique identifier of the related transfer.",
            "**type**: The type of the transaction.",
            "**valueDate**: The date the transfer amount becomes available in the balance account."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
