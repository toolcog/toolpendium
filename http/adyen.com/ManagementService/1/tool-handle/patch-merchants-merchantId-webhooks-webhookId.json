{
  "name": "patch-merchants-merchantId-webhooks-webhookId",
  "description": "Make changes to the configuration of the webhook identified in the path. The request contains the new values you want to have in the webhook configuration. The response contains the full configuration for the webhook, which includes the new values from the request.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management APIâ€”Webhooks read and write",
  "parameters": {
    "type": "object",
    "properties": {
      "merchantId": {
        "type": "string",
        "description": "The unique identifier of the merchant account."
      },
      "webhookId": {
        "type": "string",
        "description": "Unique identifier of the webhook configuration."
      },
      "body": {
        "$ref": "#/$defs/UpdateMerchantWebhookRequest"
      }
    },
    "required": [
      "merchantId",
      "webhookId"
    ],
    "$defs": {
      "UpdateMerchantWebhookRequest": {
        "properties": {
          "acceptsExpiredCertificate": {
            "description": "Indicates if expired SSL certificates are accepted. Default value: **false**.",
            "type": "boolean"
          },
          "acceptsSelfSignedCertificate": {
            "description": "Indicates if self-signed SSL certificates are accepted. Default value: **false**.",
            "type": "boolean"
          },
          "acceptsUntrustedRootCertificate": {
            "description": "Indicates if untrusted SSL certificates are accepted. Default value: **false**.",
            "type": "boolean"
          },
          "active": {
            "description": "Indicates if the webhook configuration is active. The field must be **true** for us to send webhooks about events related an account.",
            "type": "boolean"
          },
          "additionalSettings": {
            "$ref": "#/$defs/AdditionalSettings"
          },
          "communicationFormat": {
            "description": "Format or protocol for receiving webhooks. Possible values:\n* **soap**\n* **http**\n* **json** ",
            "enum": [
              "http",
              "json",
              "soap"
            ],
            "examples": [
              "soap"
            ],
            "type": "string"
          },
          "description": {
            "description": "Your description for this webhook configuration.",
            "type": "string"
          },
          "networkType": {
            "description": "Network type for Terminal API notification webhooks. Possible values:\n* **public**\n* **local**\n\nDefault Value: **public**.",
            "enum": [
              "local",
              "public"
            ],
            "type": "string"
          },
          "password": {
            "description": "Password to access the webhook URL.",
            "type": "string"
          },
          "populateSoapActionHeader": {
            "description": "Indicates if the SOAP action header needs to be populated. Default value: **false**.\n\nOnly applies if `communicationFormat`: **soap**.",
            "type": "boolean"
          },
          "sslVersion": {
            "description": "SSL version to access the public webhook URL specified in the `url` field. Possible values:\n* **TLSv1.3**\n* **TLSv1.2**\n* **HTTP** - Only allowed on Test environment.\n\nIf not specified, the webhook will use `sslVersion`: **TLSv1.2**.",
            "enum": [
              "HTTP",
              "TLSv1.2",
              "TLSv1.3"
            ],
            "examples": [
              "TLSv1.2"
            ],
            "type": "string"
          },
          "url": {
            "description": "Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.",
            "examples": [
              "http://www.adyen.com"
            ],
            "type": "string"
          },
          "username": {
            "description": "Username to access the webhook URL.",
            "maxLength": 255,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalSettings": {
        "properties": {
          "includeEventCodes": {
            "description": "Object containing list of event codes for which the notifcation will be sent. ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "properties": {
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "Object containing boolean key-value pairs. The key can be any [standard webhook additional setting](https://docs.adyen.com/development-resources/webhooks/additional-settings), and the value indicates if the setting is enabled.\nFor example, `captureDelayHours`: **true** means the standard notifications you get will contain the number of hours remaining until the payment will be captured.",
            "type": "object"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://management-test.adyen.com/v1/merchants/{merchantId}/webhooks/{webhookId}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**_links**",
              {
                "$ul": [
                  [
                    "**company**",
                    {
                      "$ul": [
                        "**href**"
                      ]
                    }
                  ],
                  [
                    "**generateHmac**",
                    {
                      "$ul": [
                        "**href**"
                      ]
                    }
                  ],
                  [
                    "**merchant**",
                    {
                      "$ul": [
                        "**href**"
                      ]
                    }
                  ],
                  [
                    "**self**",
                    {
                      "$ul": [
                        "**href**"
                      ]
                    }
                  ],
                  [
                    "**testWebhook**",
                    {
                      "$ul": [
                        "**href**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**acceptsExpiredCertificate**: Indicates if expired SSL certificates are accepted. Default value: **false**.",
            "**acceptsSelfSignedCertificate**: Indicates if self-signed SSL certificates are accepted. Default value: **false**.",
            "**acceptsUntrustedRootCertificate**: Indicates if untrusted SSL certificates are accepted. Default value: **false**.",
            "**accountReference**: Reference to the account the webook is set on.",
            "**active**: Indicates if the webhook configuration is active. The field must be **true** for you to receive webhooks about events related an account.",
            [
              "**additionalSettings**",
              {
                "$ul": [
                  "**excludeEventCodes**: Object containing list of event codes for which the notifcation will not be sent. ",
                  "**includeEventCodes**: Object containing list of event codes for which the notifcation will be sent. ",
                  "**properties**: Object containing boolean key-value pairs. The key can be any [standard webhook additional setting](https://docs.adyen.com/development-resources/webhooks/additional-settings), and the value indicates if the setting is enabled."
                ]
              }
            ],
            "**certificateAlias**: The alias of our SSL certificate. When you receive a notification from us, the alias from the HMAC signature will match this alias.",
            "**communicationFormat**: Format or protocol for receiving webhooks. Possible values:",
            "**description**: Your description for this webhook configuration.",
            "**filterMerchantAccountType**: Shows how merchant accounts are included in company-level webhooks. Possible values:",
            "**filterMerchantAccounts**: A list of merchant account names that are included or excluded from receiving the webhook. Inclusion or exclusion is based on the value defined for `filterMerchantAccountType`.",
            "**hasError**: Indicates if the webhook configuration has errors that need troubleshooting. If the value is **true**, troubleshoot the configuration using the [testing endpoint](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookid}/test).",
            "**hasPassword**: Indicates if the webhook is password protected.",
            "**hmacKeyCheckValue**: The [checksum](https://en.wikipedia.org/wiki/Key_checksum_value) of the HMAC key generated for this webhook. You can use this value to uniquely identify the HMAC key configured for this webhook.",
            "**id**: Unique identifier for this webhook.",
            "**networkType**: Network type for Terminal API details webhooks.",
            "**populateSoapActionHeader**: Indicates if the SOAP action header needs to be populated. Default value: **false**.",
            "**sslVersion**: SSL version to access the public webhook URL specified in the `url` field. Possible values:",
            "**type**: The type of webhook. Possible values are:",
            "**url**: Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.",
            "**username**: Username to access the webhook URL."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
