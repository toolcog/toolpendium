{
  "name": "patch-terminals-terminalId-terminalSettings",
  "description": "Updates the settings that are configured for the payment terminal identified in the path.\n\n* To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object.\n* To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter.\n* Objects that are not included in the request are not updated.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read and write\n\nFor [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:\n* Management API—Terminal settings Advanced read and write",
  "parameters": {
    "type": "object",
    "properties": {
      "terminalId": {
        "type": "string",
        "description": "The unique identifier of the payment terminal."
      },
      "body": {
        "$ref": "#/$defs/TerminalSettings"
      }
    },
    "required": [
      "terminalId"
    ],
    "$defs": {
      "TerminalSettings": {
        "properties": {
          "cardholderReceipt": {
            "$ref": "#/$defs/CardholderReceipt"
          },
          "connectivity": {
            "$ref": "#/$defs/Connectivity"
          },
          "gratuities": {
            "description": "Settings for tipping with or without predefined options to choose from. The maximum number of predefined options is four, or three plus the option to enter a custom tip.",
            "items": {
              "$ref": "#/$defs/Gratuity"
            },
            "type": "array"
          },
          "hardware": {
            "$ref": "#/$defs/Hardware"
          },
          "localization": {
            "$ref": "#/$defs/Localization"
          },
          "nexo": {
            "$ref": "#/$defs/Nexo"
          },
          "offlineProcessing": {
            "$ref": "#/$defs/OfflineProcessing"
          },
          "opi": {
            "$ref": "#/$defs/Opi"
          },
          "passcodes": {
            "$ref": "#/$defs/Passcodes"
          },
          "payAtTable": {
            "$ref": "#/$defs/PayAtTable"
          },
          "payment": {
            "$ref": "#/$defs/Payment"
          },
          "receiptOptions": {
            "$ref": "#/$defs/ReceiptOptions"
          },
          "receiptPrinting": {
            "$ref": "#/$defs/ReceiptPrinting"
          },
          "refunds": {
            "$ref": "#/$defs/Refunds"
          },
          "signature": {
            "$ref": "#/$defs/Signature"
          },
          "standalone": {
            "$ref": "#/$defs/Standalone"
          },
          "surcharge": {
            "$ref": "#/$defs/Surcharge"
          },
          "tapToPay": {
            "$ref": "#/$defs/TapToPay"
          },
          "terminalInstructions": {
            "$ref": "#/$defs/TerminalInstructions"
          },
          "timeouts": {
            "$ref": "#/$defs/Timeouts"
          },
          "wifiProfiles": {
            "$ref": "#/$defs/WifiProfiles"
          }
        },
        "type": "object"
      },
      "CardholderReceipt": {
        "properties": {
          "headerForAuthorizedReceipt": {
            "description": "A custom header to show on the shopper receipt for an authorised transaction. Allows one or two comma-separated header lines, and blank lines. For example, `header,header,filler`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Connectivity": {
        "properties": {
          "simcardStatus": {
            "description": "Indicates the status of the SIM card in the payment terminal. Can be updated and received only at terminal level, and only for models that support cellular connectivity.\n\nPossible values:\n* **ACTIVATED**: the SIM card is activated. Cellular connectivity may still need to be enabled on the terminal itself, in the **Network** settings.\n* **INVENTORY**: the SIM card is not activated. The terminal can't use cellular connectivity.",
            "enum": [
              "ACTIVATED",
              "INVENTORY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Gratuity": {
        "properties": {
          "allowCustomAmount": {
            "description": "Indicates whether one of the predefined tipping options is to let the shopper enter a custom tip. If **true**, only three of the other options defined in `predefinedTipEntries` are shown.",
            "type": "boolean"
          },
          "currency": {
            "description": "The currency that the tipping settings apply to.",
            "type": "string"
          },
          "predefinedTipEntries": {
            "description": "Tipping options the shopper can choose from if `usePredefinedTipEntries` is **true**. The maximum number of predefined options is four, or three plus the option to enter a custom tip.\nThe options can be a mix of:\n\n- A percentage of the transaction amount. Example: **5%**\n- A tip amount in [minor units](https://docs.adyen.com/development-resources/currency-codes). Example: **500** for a EUR 5 tip.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "usePredefinedTipEntries": {
            "description": "Indicates whether the terminal shows a prompt to enter a tip (**false**), or predefined tipping options to choose from (**true**).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Hardware": {
        "properties": {
          "displayMaximumBackLight": {
            "description": "The brightness of the display when the terminal is being used, expressed as a percentage.",
            "format": "int32",
            "type": "integer"
          },
          "resetTotalsHour": {
            "description": "The hour of the day when the terminal is set to reset the Totals report. By default, the reset hour is at 6:00 AM in the timezone of the terminal. Minimum value: 0, maximum value: 23.",
            "format": "int32",
            "type": "integer"
          },
          "restartHour": {
            "description": "The hour of the day when the terminal is set to reboot to apply the configuration and software updates. By default, the restart hour is at 6:00 AM in the timezone of the terminal. Minimum value: 0, maximum value: 23.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Localization": {
        "properties": {
          "language": {
            "description": "Language of the terminal.",
            "type": "string"
          },
          "secondaryLanguage": {
            "description": "Secondary language of the terminal.",
            "type": "string"
          },
          "timezone": {
            "description": "The time zone of the terminal.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Nexo": {
        "properties": {
          "displayUrls": {
            "$ref": "#/$defs/NotificationUrl"
          },
          "encryptionKey": {
            "$ref": "#/$defs/Key"
          },
          "eventUrls": {
            "$ref": "#/$defs/EventUrl"
          },
          "nexoEventUrls": {
            "deprecated": true,
            "description": "One or more URLs to send event messages to when using Terminal API.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-deprecatedInVersion": "1",
            "x-deprecatedMessage": "Use `eventUrls` instead."
          },
          "notification": {
            "$ref": "#/$defs/Notification"
          }
        },
        "type": "object"
      },
      "NotificationUrl": {
        "properties": {
          "localUrls": {
            "description": "One or more local URLs to send notifications to when using Terminal API.",
            "items": {
              "$ref": "#/$defs/Url"
            },
            "type": "array"
          },
          "publicUrls": {
            "description": "One or more public URLs to send notifications to when using Terminal API.",
            "items": {
              "$ref": "#/$defs/Url"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Url": {
        "properties": {
          "encrypted": {
            "description": "Indicates if the message sent to this URL should be encrypted.",
            "type": "boolean"
          },
          "password": {
            "description": "The password for authentication of the notifications.",
            "type": "string"
          },
          "url": {
            "description": "The URL in the format: http(s)://domain.com.",
            "type": "string"
          },
          "username": {
            "description": "The username for authentication of the notifications.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Key": {
        "properties": {
          "identifier": {
            "description": "The unique identifier of the shared key.",
            "type": "string"
          },
          "passphrase": {
            "description": "The secure passphrase to protect the shared key.",
            "type": "string"
          },
          "version": {
            "description": "The version number of the shared key.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EventUrl": {
        "properties": {
          "eventLocalUrls": {
            "description": "One or more local URLs to send event notifications to when using Terminal API.",
            "items": {
              "$ref": "#/$defs/Url"
            },
            "type": "array"
          },
          "eventPublicUrls": {
            "description": "One or more public URLs to send event notifications to when using Terminal API.",
            "items": {
              "$ref": "#/$defs/Url"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Notification": {
        "properties": {
          "category": {
            "description": "The type of event notification sent when you select the notification button.",
            "enum": [
              "SaleWakeUp",
              "KeyPressed",
              ""
            ],
            "type": "string"
          },
          "details": {
            "description": "The text shown in the prompt which opens when you select the notification button. For example, the description of the input box for pay-at-table.",
            "type": "string"
          },
          "enabled": {
            "description": "Enables sending event notifications either by pressing the Confirm key on terminals with a keypad or by tapping the event notification button on the terminal screen.",
            "type": "boolean"
          },
          "showButton": {
            "description": "Shows or hides the event notification button on the screen of terminal models that have a keypad.",
            "type": "boolean"
          },
          "title": {
            "description": "The name of the notification button on the terminal screen.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OfflineProcessing": {
        "properties": {
          "chipFloorLimit": {
            "description": "The maximum offline transaction amount for chip cards, in the processing currency and specified in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "format": "int32",
            "type": "integer"
          },
          "offlineSwipeLimits": {
            "description": "The maximum offline transaction amount for swiped cards, in the specified currency.",
            "items": {
              "$ref": "#/$defs/MinorUnitsMonetaryValue"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MinorUnitsMonetaryValue": {
        "properties": {
          "amount": {
            "description": "The transaction amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "format": "int32",
            "type": "integer"
          },
          "currencyCode": {
            "description": "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Opi": {
        "properties": {
          "enablePayAtTable": {
            "description": "Indicates if Pay at table is enabled.",
            "type": "boolean"
          },
          "payAtTableStoreNumber": {
            "description": "The store number to use for Pay at Table.",
            "type": "string"
          },
          "payAtTableURL": {
            "description": "The URL and port number used for Pay at Table communication.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Passcodes": {
        "properties": {
          "adminMenuPin": {
            "description": "The passcode for the Admin menu and the Settings menu.",
            "maxLength": 6,
            "type": "string"
          },
          "refundPin": {
            "description": "The passcode for referenced and unreferenced refunds on standalone terminals.",
            "maxLength": 6,
            "type": "string"
          },
          "screenLockPin": {
            "description": "The passcode to unlock the terminal screen after a timeout.",
            "maxLength": 6,
            "minLength": 4,
            "type": "string"
          },
          "txMenuPin": {
            "description": "The passcode for the Transactions menu.",
            "maxLength": 6,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PayAtTable": {
        "properties": {
          "authenticationMethod": {
            "description": "Allowed authentication methods: Magswipe, Manual Entry.",
            "enum": [
              "MAGSWIPE",
              "MKE"
            ],
            "type": "string"
          },
          "enablePayAtTable": {
            "description": "Enable Pay at table.",
            "type": "boolean"
          },
          "paymentInstrument": {
            "description": "Sets the allowed payment instrument for Pay at table transactions.  Can be: **cash** or **card**. If not set, the terminal presents both options.",
            "enum": [
              "Cash",
              "Card"
            ],
            "type": [
              "string",
              "null"
            ]
          }
        },
        "type": "object"
      },
      "Payment": {
        "properties": {
          "contactlessCurrency": {
            "description": "The default currency for contactless payments on the payment terminal, as the three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "hideMinorUnitsInCurrencies": {
            "description": "Hides the minor units for the listed [ISO currency codes](https://en.wikipedia.org/wiki/ISO_4217).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReceiptOptions": {
        "properties": {
          "logo": {
            "description": "The receipt logo converted to a Base64-encoded string. The image must be a .bmp file of < 256 KB, dimensions 240 (H) x 384 (W) px.",
            "maxLength": 350000,
            "type": "string"
          },
          "promptBeforePrinting": {
            "description": "Indicates whether a screen appears asking if you want to print the shopper receipt.",
            "type": "boolean"
          },
          "qrCodeData": {
            "description": "Data to print on the receipt as a QR code. This can include static text and the following variables:\n\n- `${merchantreference}`: the merchant reference of the transaction.\n- `${pspreference}`: the PSP reference of the transaction.\n\n For example, **http://www.example.com/order/${pspreference}/${merchantreference}**.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReceiptPrinting": {
        "properties": {
          "merchantApproved": {
            "description": "Print a merchant receipt when the payment is approved.",
            "type": "boolean"
          },
          "merchantCancelled": {
            "description": "Print a merchant receipt when the transaction is cancelled.",
            "type": "boolean"
          },
          "merchantCaptureApproved": {
            "description": "Print a merchant receipt when capturing the payment is approved.",
            "type": "boolean"
          },
          "merchantCaptureRefused": {
            "description": "Print a merchant receipt when capturing the payment is refused.",
            "type": "boolean"
          },
          "merchantRefundApproved": {
            "description": "Print a merchant receipt when the refund is approved.",
            "type": "boolean"
          },
          "merchantRefundRefused": {
            "description": "Print a merchant receipt when the refund is refused.",
            "type": "boolean"
          },
          "merchantRefused": {
            "description": "Print a merchant receipt when the payment is refused.",
            "type": "boolean"
          },
          "merchantVoid": {
            "description": "Print a merchant receipt when a previous transaction is voided.",
            "type": "boolean"
          },
          "shopperApproved": {
            "description": "Print a shopper receipt when the payment is approved.",
            "type": "boolean"
          },
          "shopperCancelled": {
            "description": "Print a shopper receipt when the transaction is cancelled.",
            "type": "boolean"
          },
          "shopperCaptureApproved": {
            "description": "Print a shopper receipt when capturing the payment is approved.",
            "type": "boolean"
          },
          "shopperCaptureRefused": {
            "description": "Print a shopper receipt when capturing the payment is refused.",
            "type": "boolean"
          },
          "shopperRefundApproved": {
            "description": "Print a shopper receipt when the refund is approved.",
            "type": "boolean"
          },
          "shopperRefundRefused": {
            "description": "Print a shopper receipt when the refund is refused.",
            "type": "boolean"
          },
          "shopperRefused": {
            "description": "Print a shopper receipt when the payment is refused.",
            "type": "boolean"
          },
          "shopperVoid": {
            "description": "Print a shopper receipt when a previous transaction is voided.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Refunds": {
        "properties": {
          "referenced": {
            "$ref": "#/$defs/Referenced"
          }
        },
        "type": "object"
      },
      "Referenced": {
        "properties": {
          "enableStandaloneRefunds": {
            "description": "Indicates whether referenced refunds are enabled on the standalone terminal.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Signature": {
        "properties": {
          "askSignatureOnScreen": {
            "description": "If `skipSignature` is false, indicates whether the shopper should provide a signature on the display (**true**) or on the merchant receipt (**false**).",
            "type": "boolean"
          },
          "deviceName": {
            "description": "Name that identifies the terminal.",
            "type": "string"
          },
          "deviceSlogan": {
            "description": "Slogan shown on the start screen of the device.",
            "maxLength": 50,
            "type": "string"
          },
          "skipSignature": {
            "description": "Skip asking for a signature. This is possible because all global card schemes (American Express, Diners, Discover, JCB, MasterCard, VISA, and UnionPay) regard a signature as optional.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Standalone": {
        "properties": {
          "currencyCode": {
            "description": "The default currency of the standalone payment terminal as an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "enableStandalone": {
            "description": "Enable standalone mode.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Surcharge": {
        "properties": {
          "askConfirmation": {
            "description": "Show the surcharge details on the terminal, so the shopper can confirm.",
            "type": "boolean"
          },
          "configurations": {
            "description": "Surcharge fees or percentages for specific payment methods, funding sources (credit or debit), and currencies.",
            "items": {
              "$ref": "#/$defs/Configuration"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Configuration": {
        "properties": {
          "brand": {
            "description": "Payment method, like **eftpos_australia** or **mc**. See the [possible values](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api). ",
            "type": "string"
          },
          "country": {
            "description": "Countries, to filter different surcharge amounts for domestic or international cards.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "currencies": {
            "description": "Currency, and surcharge percentage or amount.",
            "items": {
              "$ref": "#/$defs/Currency"
            },
            "type": "array"
          },
          "sources": {
            "description": "Funding source. Possible values:\n* **Credit**\n* **Debit**",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "brand",
          "currencies"
        ],
        "type": "object"
      },
      "Currency": {
        "properties": {
          "amount": {
            "description": "Surcharge amount per transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "format": "int32",
            "type": "integer"
          },
          "currencyCode": {
            "description": "Three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). For example, **AUD**.",
            "type": "string"
          },
          "percentage": {
            "description": "Surcharge percentage per transaction. The maximum number of decimal places is two. For example, **1%** or **2.27%**.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "currencyCode"
        ],
        "type": "object"
      },
      "TapToPay": {
        "properties": {
          "merchantDisplayName": {
            "description": "The text shown on the screen during the Tap to Pay transaction.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TerminalInstructions": {
        "properties": {
          "adyenAppRestart": {
            "description": "Indicates whether the Adyen app on the payment terminal restarts automatically when the configuration is updated.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Timeouts": {
        "properties": {
          "fromActiveToSleep": {
            "description": "Indicates the number of seconds of inactivity after which the terminal display goes into sleep mode.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WifiProfiles": {
        "properties": {
          "profiles": {
            "description": "List of remote Wi-Fi profiles.",
            "items": {
              "$ref": "#/$defs/Profile"
            },
            "type": "array"
          },
          "settings": {
            "$ref": "#/$defs/Settings"
          }
        },
        "type": "object"
      },
      "Profile": {
        "properties": {
          "authType": {
            "description": "The type of Wi-Fi network. Possible values: **wpa-psk**, **wpa2-psk**, **wpa-eap**, **wpa2-eap**.",
            "type": "string"
          },
          "autoWifi": {
            "description": "Indicates whether to automatically select the best authentication method available. Does not work on older terminal models.",
            "type": "boolean"
          },
          "bssType": {
            "description": "Use **infra** for infrastructure-based networks. This applies to most networks. Use **adhoc** only if the communication is p2p-based between base stations.",
            "type": "string"
          },
          "channel": {
            "description": "The channel number of the Wi-Fi network. The recommended setting is **0** for automatic channel selection.",
            "format": "int32",
            "type": "integer"
          },
          "defaultProfile": {
            "description": "Indicates whether this is your preferred wireless network. If **true**, the terminal will try connecting to this network first.",
            "type": "boolean"
          },
          "eap": {
            "description": "For `authType` **wpa-eap** or **wpa2-eap**. Possible values: **tls**, **peap**, **leap**, **fast**",
            "type": "string"
          },
          "eapCaCert": {
            "$ref": "#/$defs/File"
          },
          "eapClientCert": {
            "$ref": "#/$defs/File"
          },
          "eapClientKey": {
            "$ref": "#/$defs/File"
          },
          "eapClientPwd": {
            "description": "For `eap` **tls**. The password of the RSA key file, if that file is password-protected.",
            "type": "string"
          },
          "eapIdentity": {
            "description": "For `authType` **wpa-eap** or **wpa2-eap**. The EAP-PEAP username from your MS-CHAP account. Must match the configuration of your RADIUS server.",
            "type": "string"
          },
          "eapIntermediateCert": {
            "$ref": "#/$defs/File"
          },
          "eapPwd": {
            "description": "For `eap` **peap**. The EAP-PEAP password from your MS-CHAP account. Must match the configuration of your RADIUS server.",
            "type": "string"
          },
          "hiddenSsid": {
            "description": "Indicates if the network doesn't broadcast its SSID. Mandatory for Android terminals, because these terminals rely on this setting to be able to connect to any network.",
            "type": "boolean"
          },
          "name": {
            "description": "Your name for the Wi-Fi profile.",
            "type": "string"
          },
          "psk": {
            "description": "For `authType` **wpa-psk or **wpa2-psk**. The password to the wireless network.",
            "type": "string"
          },
          "ssid": {
            "description": "The name of the wireless network.",
            "type": "string"
          },
          "wsec": {
            "description": "The type of encryption. Possible values: **auto**, **ccmp** (recommended), **tkip**",
            "type": "string"
          }
        },
        "required": [
          "ssid",
          "bssType",
          "authType",
          "wsec"
        ],
        "type": "object"
      },
      "File": {
        "properties": {
          "data": {
            "description": "The certificate content converted to a Base64-encoded string.",
            "type": "string"
          },
          "name": {
            "description": "The name of the certificate. Must be unique across Wi-Fi profiles.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "data"
        ],
        "type": "object"
      },
      "Settings": {
        "properties": {
          "band": {
            "description": "The preferred Wi-Fi band, for use if the terminals support multiple bands. Possible values: All, 2.4GHz, 5GHz.",
            "type": "string"
          },
          "roaming": {
            "description": "Indicates whether roaming is enabled on the terminals.",
            "type": "boolean"
          },
          "timeout": {
            "description": "The connection time-out in seconds. Minimum value: 0.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://management-test.adyen.com/v1/terminals/{terminalId}/terminalSettings"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**cardholderReceipt**",
              {
                "$ul": [
                  "**headerForAuthorizedReceipt**: A custom header to show on the shopper receipt for an authorised transaction. Allows one or two comma-separated header lines, and blank lines. For example, `header,header,filler`"
                ]
              }
            ],
            [
              "**connectivity**",
              {
                "$ul": [
                  "**simcardStatus**: Indicates the status of the SIM card in the payment terminal. Can be updated and received only at terminal level, and only for models that support cellular connectivity."
                ]
              }
            ],
            "**gratuities**: Settings for tipping with or without predefined options to choose from. The maximum number of predefined options is four, or three plus the option to enter a custom tip.",
            [
              "**hardware**",
              {
                "$ul": [
                  "**displayMaximumBackLight**: The brightness of the display when the terminal is being used, expressed as a percentage.",
                  "**resetTotalsHour**: The hour of the day when the terminal is set to reset the Totals report. By default, the reset hour is at 6:00 AM in the timezone of the terminal. Minimum value: 0, maximum value: 23.",
                  "**restartHour**: The hour of the day when the terminal is set to reboot to apply the configuration and software updates. By default, the restart hour is at 6:00 AM in the timezone of the terminal. Minimum value: 0, maximum value: 23."
                ]
              }
            ],
            [
              "**localization**",
              {
                "$ul": [
                  "**language**: Language of the terminal.",
                  "**secondaryLanguage**: Secondary language of the terminal.",
                  "**timezone**: The time zone of the terminal."
                ]
              }
            ],
            [
              "**nexo**",
              {
                "$ul": [
                  [
                    "**displayUrls**",
                    {
                      "$ul": [
                        "**localUrls**: One or more local URLs to send notifications to when using Terminal API.",
                        "**publicUrls**: One or more public URLs to send notifications to when using Terminal API."
                      ]
                    }
                  ],
                  [
                    "**encryptionKey**",
                    {
                      "$ul": [
                        "**identifier**: The unique identifier of the shared key.",
                        "**passphrase**: The secure passphrase to protect the shared key.",
                        "**version**: The version number of the shared key."
                      ]
                    }
                  ],
                  [
                    "**eventUrls**",
                    {
                      "$ul": [
                        "**eventLocalUrls**: One or more local URLs to send event notifications to when using Terminal API.",
                        "**eventPublicUrls**: One or more public URLs to send event notifications to when using Terminal API."
                      ]
                    }
                  ],
                  "**nexoEventUrls**: One or more URLs to send event messages to when using Terminal API.",
                  [
                    "**notification**",
                    {
                      "$ul": [
                        "**category**: The type of event notification sent when you select the notification button.",
                        "**details**: The text shown in the prompt which opens when you select the notification button. For example, the description of the input box for pay-at-table.",
                        "**enabled**: Enables sending event notifications either by pressing the Confirm key on terminals with a keypad or by tapping the event notification button on the terminal screen.",
                        "**showButton**: Shows or hides the event notification button on the screen of terminal models that have a keypad.",
                        "**title**: The name of the notification button on the terminal screen."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**offlineProcessing**",
              {
                "$ul": [
                  "**chipFloorLimit**: The maximum offline transaction amount for chip cards, in the processing currency and specified in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
                  "**offlineSwipeLimits**: The maximum offline transaction amount for swiped cards, in the specified currency."
                ]
              }
            ],
            [
              "**opi**",
              {
                "$ul": [
                  "**enablePayAtTable**: Indicates if Pay at table is enabled.",
                  "**payAtTableStoreNumber**: The store number to use for Pay at Table.",
                  "**payAtTableURL**: The URL and port number used for Pay at Table communication."
                ]
              }
            ],
            [
              "**passcodes**",
              {
                "$ul": [
                  "**adminMenuPin**: The passcode for the Admin menu and the Settings menu.",
                  "**refundPin**: The passcode for referenced and unreferenced refunds on standalone terminals.",
                  "**screenLockPin**: The passcode to unlock the terminal screen after a timeout.",
                  "**txMenuPin**: The passcode for the Transactions menu."
                ]
              }
            ],
            [
              "**payAtTable**",
              {
                "$ul": [
                  "**authenticationMethod**: Allowed authentication methods: Magswipe, Manual Entry.",
                  "**enablePayAtTable**: Enable Pay at table.",
                  "**paymentInstrument**: Sets the allowed payment instrument for Pay at table transactions.  Can be: **cash** or **card**. If not set, the terminal presents both options."
                ]
              }
            ],
            [
              "**payment**",
              {
                "$ul": [
                  "**contactlessCurrency**: The default currency for contactless payments on the payment terminal, as the three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.",
                  "**hideMinorUnitsInCurrencies**: Hides the minor units for the listed [ISO currency codes](https://en.wikipedia.org/wiki/ISO_4217)."
                ]
              }
            ],
            [
              "**receiptOptions**",
              {
                "$ul": [
                  "**logo**: The receipt logo converted to a Base64-encoded string. The image must be a .bmp file of < 256 KB, dimensions 240 (H) x 384 (W) px.",
                  "**promptBeforePrinting**: Indicates whether a screen appears asking if you want to print the shopper receipt.",
                  "**qrCodeData**: Data to print on the receipt as a QR code. This can include static text and the following variables:"
                ]
              }
            ],
            [
              "**receiptPrinting**",
              {
                "$ul": [
                  "**merchantApproved**: Print a merchant receipt when the payment is approved.",
                  "**merchantCancelled**: Print a merchant receipt when the transaction is cancelled.",
                  "**merchantCaptureApproved**: Print a merchant receipt when capturing the payment is approved.",
                  "**merchantCaptureRefused**: Print a merchant receipt when capturing the payment is refused.",
                  "**merchantRefundApproved**: Print a merchant receipt when the refund is approved.",
                  "**merchantRefundRefused**: Print a merchant receipt when the refund is refused.",
                  "**merchantRefused**: Print a merchant receipt when the payment is refused.",
                  "**merchantVoid**: Print a merchant receipt when a previous transaction is voided.",
                  "**shopperApproved**: Print a shopper receipt when the payment is approved.",
                  "**shopperCancelled**: Print a shopper receipt when the transaction is cancelled.",
                  "**shopperCaptureApproved**: Print a shopper receipt when capturing the payment is approved.",
                  "**shopperCaptureRefused**: Print a shopper receipt when capturing the payment is refused.",
                  "**shopperRefundApproved**: Print a shopper receipt when the refund is approved.",
                  "**shopperRefundRefused**: Print a shopper receipt when the refund is refused.",
                  "**shopperRefused**: Print a shopper receipt when the payment is refused.",
                  "**shopperVoid**: Print a shopper receipt when a previous transaction is voided."
                ]
              }
            ],
            [
              "**refunds**",
              {
                "$ul": [
                  [
                    "**referenced**",
                    {
                      "$ul": [
                        "**enableStandaloneRefunds**: Indicates whether referenced refunds are enabled on the standalone terminal."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**signature**",
              {
                "$ul": [
                  "**askSignatureOnScreen**: If `skipSignature` is false, indicates whether the shopper should provide a signature on the display (**true**) or on the merchant receipt (**false**).",
                  "**deviceName**: Name that identifies the terminal.",
                  "**deviceSlogan**: Slogan shown on the start screen of the device.",
                  "**skipSignature**: Skip asking for a signature. This is possible because all global card schemes (American Express, Diners, Discover, JCB, MasterCard, VISA, and UnionPay) regard a signature as optional."
                ]
              }
            ],
            [
              "**standalone**",
              {
                "$ul": [
                  "**currencyCode**: The default currency of the standalone payment terminal as an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.",
                  "**enableStandalone**: Enable standalone mode."
                ]
              }
            ],
            [
              "**surcharge**",
              {
                "$ul": [
                  "**askConfirmation**: Show the surcharge details on the terminal, so the shopper can confirm.",
                  "**configurations**: Surcharge fees or percentages for specific payment methods, funding sources (credit or debit), and currencies."
                ]
              }
            ],
            [
              "**tapToPay**",
              {
                "$ul": [
                  "**merchantDisplayName**: The text shown on the screen during the Tap to Pay transaction."
                ]
              }
            ],
            [
              "**terminalInstructions**",
              {
                "$ul": [
                  "**adyenAppRestart**: Indicates whether the Adyen app on the payment terminal restarts automatically when the configuration is updated."
                ]
              }
            ],
            [
              "**timeouts**",
              {
                "$ul": [
                  "**fromActiveToSleep**: Indicates the number of seconds of inactivity after which the terminal display goes into sleep mode."
                ]
              }
            ],
            [
              "**wifiProfiles**",
              {
                "$ul": [
                  "**profiles**: List of remote Wi-Fi profiles.",
                  [
                    "**settings**",
                    {
                      "$ul": [
                        "**band**: The preferred Wi-Fi band, for use if the terminals support multiple bands. Possible values: All, 2.4GHz, 5GHz.",
                        "**roaming**: Indicates whether roaming is enabled on the terminals.",
                        "**timeout**: The connection time-out in seconds. Minimum value: 0."
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
