{
  "name": "post-payments",
  "description": "Sends payment parameters (like amount, country, and currency) together with other required input details collected from the shopper. To know more about required parameters for specific payment methods, refer to our [payment method guides](https://docs.adyen.com/payment-methods). \nThe response depends on the [payment flow](https://docs.adyen.com/payment-methods#payment-flow):\n* For a direct flow, the response includes a `pspReference` and a `resultCode` with the payment result, for example **Authorised** or **Refused**. \n* For a redirect or additional action, the response contains an `action` object. ",
  "parameters": {
    "type": "object",
    "properties": {
      "Idempotency-Key": {
        "type": "string",
        "description": "A unique identifier for the message with a maximum of 64 characters (we recommend a UUID)."
      },
      "body": {
        "$ref": "#/$defs/PaymentRequest"
      }
    },
    "$defs": {
      "PaymentRequest": {
        "properties": {
          "accountInfo": {
            "$ref": "#/$defs/AccountInfo"
          },
          "additionalAmount": {
            "$ref": "#/$defs/Amount"
          },
          "additionalData": {
            "additionalProperties": {
              "type": "string"
            },
            "anyOf": [
              {
                "$ref": "#/$defs/AdditionalData3DSecure"
              },
              {
                "$ref": "#/$defs/AdditionalDataAirline"
              },
              {
                "$ref": "#/$defs/AdditionalDataCarRental"
              },
              {
                "$ref": "#/$defs/AdditionalDataCommon"
              },
              {
                "$ref": "#/$defs/AdditionalDataLevel23"
              },
              {
                "$ref": "#/$defs/AdditionalDataLodging"
              },
              {
                "$ref": "#/$defs/AdditionalDataOpenInvoice"
              },
              {
                "$ref": "#/$defs/AdditionalDataOpi"
              },
              {
                "$ref": "#/$defs/AdditionalDataRatepay"
              },
              {
                "$ref": "#/$defs/AdditionalDataRetry"
              },
              {
                "$ref": "#/$defs/AdditionalDataRisk"
              },
              {
                "$ref": "#/$defs/AdditionalDataRiskStandalone"
              },
              {
                "$ref": "#/$defs/AdditionalDataSubMerchant"
              },
              {
                "$ref": "#/$defs/AdditionalDataTemporaryServices"
              },
              {
                "$ref": "#/$defs/AdditionalDataWallets"
              }
            ],
            "description": "This field contains additional data, which may be required for a particular payment request.\n\nThe `additionalData` object consists of entries, each of which includes the key and value.",
            "type": "object"
          },
          "amount": {
            "$ref": "#/$defs/Amount"
          },
          "applicationInfo": {
            "$ref": "#/$defs/ApplicationInfo"
          },
          "authenticationData": {
            "$ref": "#/$defs/AuthenticationData"
          },
          "billingAddress": {
            "$ref": "#/$defs/BillingAddress"
          },
          "browserInfo": {
            "$ref": "#/$defs/BrowserInfo"
          },
          "captureDelayHours": {
            "description": "The delay between the authorisation and scheduled auto-capture, specified in hours.",
            "format": "int32",
            "type": "integer"
          },
          "channel": {
            "description": "The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.\n\nPossible values:\n* iOS\n* Android\n* Web",
            "enum": [
              "iOS",
              "Android",
              "Web"
            ],
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "Checkout attempt ID that corresponds to the Id generated by the client SDK for tracking user payment journey.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "company": {
            "$ref": "#/$defs/Company"
          },
          "conversionId": {
            "deprecated": true,
            "description": "Conversion ID that corresponds to the Id generated by the client SDK for tracking user payment journey.",
            "type": "string",
            "x-addedInVersion": "49",
            "x-deprecatedInVersion": "68",
            "x-deprecatedMessage": "Use `checkoutAttemptId` instead"
          },
          "countryCode": {
            "description": "The shopper country.\n\nFormat: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\nExample: NL or DE",
            "type": "string"
          },
          "dateOfBirth": {
            "description": "The shopper's date of birth.\n\nFormat [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD",
            "format": "date-time",
            "type": "string"
          },
          "dccQuote": {
            "$ref": "#/$defs/ForexQuote"
          },
          "deliveryAddress": {
            "$ref": "#/$defs/DeliveryAddress"
          },
          "deliveryDate": {
            "description": "The date and time the purchased goods should be delivered.\n\nFormat [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD\n\nExample: 2017-07-17T13:42:40.428+01:00",
            "format": "date-time",
            "type": "string"
          },
          "deviceFingerprint": {
            "description": "A string containing the shopper's device fingerprint. For more information, refer to [Device fingerprinting](https://docs.adyen.com/risk-management/device-fingerprinting).",
            "maxLength": 5000,
            "type": "string"
          },
          "enableOneClick": {
            "description": "When true and `shopperReference` is provided, the shopper will be asked if the payment details should be stored for future one-click payments.",
            "type": "boolean",
            "x-addedInVersion": "32"
          },
          "enablePayOut": {
            "description": "When true and `shopperReference` is provided, the payment details will be tokenized for payouts.",
            "type": "boolean",
            "x-addedInVersion": "32"
          },
          "enableRecurring": {
            "description": "When true and `shopperReference` is provided, the payment details will be tokenized for recurring payments.",
            "type": "boolean",
            "x-addedInVersion": "32"
          },
          "entityType": {
            "description": "The type of the entity the payment is processed for.",
            "enum": [
              "NaturalPerson",
              "CompanyName"
            ],
            "type": "string"
          },
          "fraudOffset": {
            "description": "An integer value that is added to the normal fraud score. The value can be either positive or negative.",
            "format": "int32",
            "type": "integer"
          },
          "fundOrigin": {
            "$ref": "#/$defs/FundOrigin"
          },
          "fundRecipient": {
            "$ref": "#/$defs/FundRecipient"
          },
          "installments": {
            "$ref": "#/$defs/Installments"
          },
          "lineItems": {
            "description": "Price and product information about the purchased items, to be included on the invoice sent to the shopper.\n> This field is required for 3x 4x Oney, Affirm, Afterpay, Clearpay, Klarna, Ratepay, and Zip.",
            "items": {
              "$ref": "#/$defs/LineItem"
            },
            "type": "array",
            "x-addedInVersion": "32"
          },
          "localizedShopperStatement": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The `localizedShopperStatement` field lets you use dynamic values for your shopper statement in a local character set.\nIf not supplied, left empty, or for cross-border transactions, **shopperStatement** is used.\n\nAdyen currently supports the ja-Kana character set for Visa and Mastercard payments in Japan using Japanese cards. This character set supports:\n\n* UTF-8 based Katakana, capital letters, numbers and special characters. \n* Half-width or full-width characters.",
            "type": "object",
            "x-addedInVersion": "68"
          },
          "mandate": {
            "$ref": "#/$defs/Mandate"
          },
          "mcc": {
            "description": "The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code) (MCC) is a four-digit number, which relates to a particular market segment. This code reflects the predominant activity that is conducted by the merchant.",
            "type": "string"
          },
          "merchantAccount": {
            "description": "The merchant account identifier, with which you want to process the transaction.",
            "type": "string"
          },
          "merchantOrderReference": {
            "description": "This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.\nThe same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.\n> We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.",
            "type": "string"
          },
          "merchantRiskIndicator": {
            "$ref": "#/$defs/MerchantRiskIndicator"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata consists of entries, each of which includes a key and a value.\nLimits:\n* Maximum 20 key-value pairs per request. When exceeding, the \"177\" error occurs: \"Metadata size exceeds limit\".\n* Maximum 20 characters per key.\n* Maximum 80 characters per value. ",
            "type": "object"
          },
          "mpiData": {
            "$ref": "#/$defs/ThreeDSecureData"
          },
          "order": {
            "$ref": "#/$defs/EncryptedOrderData"
          },
          "orderReference": {
            "description": "When you are doing multiple partial (gift card) payments, this is the `pspReference` of the first payment. We use this to link the multiple payments to each other. As your own reference for linking multiple payments, use the `merchantOrderReference`instead.",
            "type": "string"
          },
          "origin": {
            "description": "Required for the 3D Secure 2 `channel` **Web** integration.\n\nSet this parameter to the origin URL of the page that you are loading the 3D Secure Component from.",
            "maxLength": 80,
            "type": "string",
            "x-addedInVersion": "40"
          },
          "paymentMethod": {
            "description": "The type and required details of a payment method to use.",
            "oneOf": [
              {
                "$ref": "#/$defs/AchDetails"
              },
              {
                "$ref": "#/$defs/AfterpayDetails"
              },
              {
                "$ref": "#/$defs/AmazonPayDetails"
              },
              {
                "$ref": "#/$defs/AndroidPayDetails"
              },
              {
                "$ref": "#/$defs/ApplePayDetails"
              },
              {
                "$ref": "#/$defs/BacsDirectDebitDetails"
              },
              {
                "$ref": "#/$defs/BillDeskDetails"
              },
              {
                "$ref": "#/$defs/BlikDetails"
              },
              {
                "$ref": "#/$defs/CardDetails"
              },
              {
                "$ref": "#/$defs/CellulantDetails"
              },
              {
                "$ref": "#/$defs/DokuDetails"
              },
              {
                "$ref": "#/$defs/DotpayDetails"
              },
              {
                "$ref": "#/$defs/DragonpayDetails"
              },
              {
                "$ref": "#/$defs/EcontextVoucherDetails"
              },
              {
                "$ref": "#/$defs/GenericIssuerPaymentMethodDetails"
              },
              {
                "$ref": "#/$defs/GiropayDetails"
              },
              {
                "$ref": "#/$defs/GooglePayDetails"
              },
              {
                "$ref": "#/$defs/IdealDetails"
              },
              {
                "$ref": "#/$defs/KlarnaDetails"
              },
              {
                "$ref": "#/$defs/MasterpassDetails"
              },
              {
                "$ref": "#/$defs/MbwayDetails"
              },
              {
                "$ref": "#/$defs/MobilePayDetails"
              },
              {
                "$ref": "#/$defs/MolPayDetails"
              },
              {
                "$ref": "#/$defs/OpenInvoiceDetails"
              },
              {
                "$ref": "#/$defs/PayPalDetails"
              },
              {
                "$ref": "#/$defs/PayUUpiDetails"
              },
              {
                "$ref": "#/$defs/PayWithGoogleDetails"
              },
              {
                "$ref": "#/$defs/PaymentDetails"
              },
              {
                "$ref": "#/$defs/RatepayDetails"
              },
              {
                "$ref": "#/$defs/SamsungPayDetails"
              },
              {
                "$ref": "#/$defs/SepaDirectDebitDetails"
              },
              {
                "$ref": "#/$defs/StoredPaymentMethodDetails"
              },
              {
                "$ref": "#/$defs/UpiCollectDetails"
              },
              {
                "$ref": "#/$defs/UpiIntentDetails"
              },
              {
                "$ref": "#/$defs/VippsDetails"
              },
              {
                "$ref": "#/$defs/VisaCheckoutDetails"
              },
              {
                "$ref": "#/$defs/WeChatPayDetails"
              },
              {
                "$ref": "#/$defs/WeChatPayMiniProgramDetails"
              },
              {
                "$ref": "#/$defs/ZipDetails"
              }
            ]
          },
          "platformChargebackLogic": {
            "$ref": "#/$defs/PlatformChargebackLogic"
          },
          "recurringExpiry": {
            "description": "Date after which no further authorisations shall be performed. Only for 3D Secure 2.",
            "type": "string"
          },
          "recurringFrequency": {
            "description": "Minimum number of days between authorisations. Only for 3D Secure 2.",
            "type": "string"
          },
          "recurringProcessingModel": {
            "description": "Defines a recurring payment type. Required when creating a token to store payment details or using stored payment details.\nAllowed values:\n* `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.\n* `CardOnFile` – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.\n* `UnscheduledCardOnFile` – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or have variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.\n",
            "enum": [
              "CardOnFile",
              "Subscription",
              "UnscheduledCardOnFile"
            ],
            "type": "string",
            "x-addedInVersion": "30"
          },
          "redirectFromIssuerMethod": {
            "description": "Specifies the redirect method (GET or POST) when redirecting back from the issuer.",
            "type": "string",
            "x-addedInVersion": "32"
          },
          "redirectToIssuerMethod": {
            "description": "Specifies the redirect method (GET or POST) when redirecting to the issuer.",
            "type": "string",
            "x-addedInVersion": "32"
          },
          "reference": {
            "description": "The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.\nIf you need to provide multiple references for a transaction, separate them with hyphens (\"-\").\nMaximum length: 80 characters.",
            "type": "string"
          },
          "returnUrl": {
            "description": "The URL to return to in case of a redirection.\nThe format depends on the channel. \n* For web, include the protocol `http://` or `https://`. You can also include your own additional query parameters, for example, shopper ID or order reference number.\nExample: `https://your-company.com/checkout?shopperOrder=12xy`\n* For iOS, use the custom URL for your app. To know more about setting custom URL schemes, refer to the [Apple Developer documentation](https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/defining_a_custom_url_scheme_for_your_app).\nExample: `my-app://`\n* For Android, use a custom URL handled by an Activity on your app. You can configure it with an [intent filter](https://developer.android.com/guide/components/intents-filters).\nExample: `my-app://your.package.name`",
            "type": "string"
          },
          "riskData": {
            "$ref": "#/$defs/RiskData"
          },
          "sessionValidity": {
            "description": "The date and time until when the session remains valid, in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format.\n\nFor example: 2020-07-18T15:42:40.428+01:00",
            "type": "string"
          },
          "shopperEmail": {
            "description": "The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.\n> For 3D Secure 2 transactions, schemes require `shopperEmail` for all browser-based and mobile implementations.",
            "type": "string"
          },
          "shopperIP": {
            "description": "The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).\n> For 3D Secure 2 transactions, schemes require `shopperIP` for all browser-based implementations.\nThis field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).",
            "type": "string"
          },
          "shopperInteraction": {
            "description": "Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.\nFor the web service API, Adyen assumes Ecommerce shopper interaction by default.\n\nThis field has the following possible values:\n* `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.\n* `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).\n* `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.\n* `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.",
            "enum": [
              "Ecommerce",
              "ContAuth",
              "Moto",
              "POS"
            ],
            "type": "string"
          },
          "shopperLocale": {
            "description": "The combination of a language code and a country code to specify the language to be used in the payment.",
            "type": "string"
          },
          "shopperName": {
            "$ref": "#/$defs/Name"
          },
          "shopperReference": {
            "description": "Required for recurring payments. \nYour reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.\n> Your reference must not include personally identifiable information (PII), for example name or email address.",
            "maxLength": 256,
            "minLength": 3,
            "type": "string"
          },
          "shopperStatement": {
            "description": "The text to be shown on the shopper's bank statement.\n We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.\n Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.",
            "type": "string"
          },
          "socialSecurityNumber": {
            "description": "The shopper's social security number.",
            "type": "string"
          },
          "splits": {
            "description": "An array of objects specifying how to split a payment when using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information), [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information), or [Issuing](https://docs.adyen.com/issuing/manage-funds#split).",
            "items": {
              "$ref": "#/$defs/Split"
            },
            "type": "array",
            "x-addedInVersion": "37"
          },
          "store": {
            "description": "Required for Adyen for Platforms integrations if you have a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference) (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments)) or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference) (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store)) for the ecommerce or point-of-sale store that is processing the payment.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "storePaymentMethod": {
            "description": "When true and `shopperReference` is provided, the payment details will be stored.",
            "type": "boolean",
            "x-addedInVersion": "49"
          },
          "telephoneNumber": {
            "description": "The shopper's telephone number.",
            "type": "string"
          },
          "threeDS2RequestData": {
            "$ref": "#/$defs/ThreeDS2RequestFields"
          },
          "threeDSAuthenticationOnly": {
            "default": false,
            "deprecated": true,
            "description": "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only), and not the payment authorisation.",
            "type": "boolean",
            "x-addedInVersion": "50",
            "x-deprecatedInVersion": "69",
            "x-deprecatedMessage": "Use `authenticationData.authenticationOnly` instead."
          },
          "trustedShopper": {
            "description": "Set to true if the payment should be routed to a trusted MID.",
            "type": "boolean",
            "x-addedInVersion": "37"
          }
        },
        "required": [
          "merchantAccount",
          "reference",
          "amount",
          "paymentMethod",
          "returnUrl"
        ],
        "type": "object"
      },
      "AccountInfo": {
        "properties": {
          "accountAgeIndicator": {
            "description": "Indicator for the length of time since this shopper account was created in the merchant's environment.\nAllowed values:\n* notApplicable\n* thisTransaction\n* lessThan30Days\n* from30To60Days\n* moreThan60Days",
            "enum": [
              "notApplicable",
              "thisTransaction",
              "lessThan30Days",
              "from30To60Days",
              "moreThan60Days"
            ],
            "type": "string"
          },
          "accountChangeDate": {
            "description": "Date when the shopper's account was last changed.",
            "format": "date-time",
            "type": "string"
          },
          "accountChangeIndicator": {
            "description": "Indicator for the length of time since the shopper's account was last updated.\nAllowed values:\n* thisTransaction\n* lessThan30Days\n* from30To60Days\n* moreThan60Days",
            "enum": [
              "thisTransaction",
              "lessThan30Days",
              "from30To60Days",
              "moreThan60Days"
            ],
            "type": "string"
          },
          "accountCreationDate": {
            "description": "Date when the shopper's account was created.",
            "format": "date-time",
            "type": "string"
          },
          "accountType": {
            "description": "Indicates the type of account. For example, for a multi-account card product.\nAllowed values:\n* notApplicable\n* credit\n* debit",
            "enum": [
              "notApplicable",
              "credit",
              "debit"
            ],
            "type": "string",
            "x-addedInVersion": "50"
          },
          "addCardAttemptsDay": {
            "description": "Number of attempts the shopper tried to add a card to their account in the last day.",
            "format": "int32",
            "type": "integer"
          },
          "deliveryAddressUsageDate": {
            "description": "Date the selected delivery address was first used.",
            "format": "date-time",
            "type": "string"
          },
          "deliveryAddressUsageIndicator": {
            "description": "Indicator for the length of time since this delivery address was first used.\nAllowed values:\n* thisTransaction\n* lessThan30Days\n* from30To60Days\n* moreThan60Days",
            "enum": [
              "thisTransaction",
              "lessThan30Days",
              "from30To60Days",
              "moreThan60Days"
            ],
            "type": "string"
          },
          "homePhone": {
            "deprecated": true,
            "description": "Shopper's home phone number (including the country code).",
            "type": "string",
            "x-deprecatedInVersion": "68",
            "x-deprecatedMessage": "Use `ThreeDS2RequestData.homePhone` instead."
          },
          "mobilePhone": {
            "deprecated": true,
            "description": "Shopper's mobile phone number (including the country code).",
            "type": "string",
            "x-deprecatedInVersion": "68",
            "x-deprecatedMessage": "Use `ThreeDS2RequestData.mobilePhone` instead."
          },
          "passwordChangeDate": {
            "description": "Date when the shopper last changed their password.",
            "format": "date-time",
            "type": "string"
          },
          "passwordChangeIndicator": {
            "description": "Indicator when the shopper has changed their password.\nAllowed values:\n* notApplicable\n* thisTransaction\n* lessThan30Days\n* from30To60Days\n* moreThan60Days",
            "enum": [
              "notApplicable",
              "thisTransaction",
              "lessThan30Days",
              "from30To60Days",
              "moreThan60Days"
            ],
            "type": "string"
          },
          "pastTransactionsDay": {
            "description": "Number of all transactions (successful and abandoned) from this shopper in the past 24 hours.",
            "format": "int32",
            "type": "integer"
          },
          "pastTransactionsYear": {
            "description": "Number of all transactions (successful and abandoned) from this shopper in the past year.",
            "format": "int32",
            "type": "integer"
          },
          "paymentAccountAge": {
            "description": "Date this payment method was added to the shopper's account.",
            "format": "date-time",
            "type": "string"
          },
          "paymentAccountIndicator": {
            "description": "Indicator for the length of time since this payment method was added to this shopper's account.\nAllowed values:\n* notApplicable\n* thisTransaction\n* lessThan30Days\n* from30To60Days\n* moreThan60Days",
            "enum": [
              "notApplicable",
              "thisTransaction",
              "lessThan30Days",
              "from30To60Days",
              "moreThan60Days"
            ],
            "type": "string"
          },
          "purchasesLast6Months": {
            "description": "Number of successful purchases in the last six months.",
            "format": "int32",
            "type": "integer"
          },
          "suspiciousActivity": {
            "description": "Whether suspicious activity was recorded on this account.",
            "type": "boolean"
          },
          "workPhone": {
            "deprecated": true,
            "description": "Shopper's work phone number (including the country code).",
            "type": "string",
            "x-deprecatedInVersion": "68",
            "x-deprecatedMessage": "Use `ThreeDS2RequestData.workPhone` instead."
          }
        },
        "type": "object"
      },
      "Amount": {
        "properties": {
          "currency": {
            "description": "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "value": {
            "description": "The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "value",
          "currency"
        ],
        "type": "object"
      },
      "AdditionalData3DSecure": {
        "properties": {
          "allow3DS2": {
            "deprecated": true,
            "description": "Indicates if you are able to process 3D Secure 2 transactions natively on your payment page. Send this parameter when you are using `/payments` endpoint with any of our [native 3D Secure 2 solutions](https://docs.adyen.com/online-payments/3d-secure/native-3ds2).\n\n > This parameter only indicates readiness to support native 3D Secure 2 authentication. To specify if you _want_ to perform 3D Secure, use [Dynamic 3D Secure](/risk-management/dynamic-3d-secure) or send the `executeThreeD` parameter.\n\nPossible values:\n* **true** - Ready to support native 3D Secure 2 authentication. Setting this to true does not mean always applying 3D Secure 2. Adyen still selects the version of 3D Secure based on configuration to optimize authorisation rates and improve the shopper's experience.\n* **false** – Not ready to support native 3D Secure 2 authentication. Adyen will not offer 3D Secure 2 to your shopper regardless of your configuration.\n",
            "type": "string",
            "x-deprecatedInVersion": "69",
            "x-deprecatedMessage": "Use `authenticationData.threeDSRequestData.nativeThreeDS` instead."
          },
          "challengeWindowSize": {
            "description": "Dimensions of the 3DS2 challenge window to be displayed to the cardholder.\n\nPossible values:\n\n* **01** - size of 250x400 \n* **02** - size of 390x400\n* **03** - size of 500x600\n* **04** - size of 600x400\n* **05** - Fullscreen",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05"
            ],
            "type": "string"
          },
          "executeThreeD": {
            "deprecated": true,
            "description": "Indicates if you want to perform 3D Secure authentication on a transaction.\n\n > Alternatively, you can use [Dynamic 3D Secure](/risk-management/dynamic-3d-secure) to configure rules for applying 3D Secure.\n\nPossible values:\n* **true** – Perform 3D Secure authentication.\n* **false** – Don't perform 3D Secure authentication. Note that this setting results in refusals if the issuer mandates 3D Secure because of the PSD2 directive  or other, national regulations. \n",
            "type": "string",
            "x-deprecatedInVersion": "69",
            "x-deprecatedMessage": "Use [`authenticationData.attemptAuthentication`](https://docs.adyen.com/api-explorer/Checkout/latest/post/payments?target=_blank#request-authenticationData-attemptAuthentication) instead"
          },
          "mpiImplementationType": {
            "description": "In case of Secure+, this field must be set to **CUPSecurePlus**.",
            "type": "string"
          },
          "scaExemption": {
            "description": "Indicates the [exemption type](https://docs.adyen.com/payments-fundamentals/psd2-sca-compliance-and-implementation-guide#specifypreferenceinyourapirequest) that you want to request for the transaction.\n\n Possible values:\n* **lowValue** \n* **secureCorporate** \n* **trustedBeneficiary** \n* **transactionRiskAnalysis** ",
            "type": "string"
          },
          "threeDSVersion": {
            "description": "Indicates your preference for the 3D Secure version. \n> If you use this parameter, you override the checks from Adyen's Authentication Engine. We recommend to use this field only if you have an extensive knowledge of 3D Secure.\n\nPossible values:\n* **1.0.2**: Apply 3D Secure version 1.0.2. \n* **2.1.0**: Apply 3D Secure version 2.1.0. \n* **2.2.0**: Apply 3D Secure version 2.2.0. If the issuer does not support version 2.2.0, we will fall back to 2.1.0.\n\nThe following rules apply:\n* If you prefer 2.1.0 or 2.2.0 but we receive a negative `transStatus` in the `ARes`, we will apply the fallback policy configured in your account. For example, if the configuration is to fall back to 3D Secure 1, we will apply version 1.0.2.\n* If you prefer 2.1.0 or 2.2.0 but the BIN is not enrolled, you will receive an error.\n\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataAirline": {
        "properties": {
          "airline.agency_invoice_number": {
            "description": "The reference number for the invoice, issued by the agency.\n* Encoding: ASCII\n* minLength: 1 character\n* maxLength: 6 characters",
            "type": "string"
          },
          "airline.agency_plan_name": {
            "description": "The two-letter agency plan identifier.\n* Encoding: ASCII\n* minLength: 2 characters\n* maxLength: 2 characters",
            "type": "string"
          },
          "airline.airline_code": {
            "description": "The [IATA](https://www.iata.org/services/pages/codes.aspx) 3-digit accounting code (PAX) that identifies the carrier.\n* Format: IATA 3-digit accounting code (PAX)\n* Example: KLM = 074\n* minLength: 3 characters\n* maxLength: 3 characters\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "airline.airline_designator_code": {
            "description": "The [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX) that identifies the carrier.\n* Encoding: ASCII\n* Example: KLM = KL\n* minLength: 2 characters\n* maxLength: 2 characters\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "airline.boarding_fee": {
            "description": "The amount charged for boarding the plane, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* Encoding: Numeric\n* minLength: 1 character\n* maxLength: 18 characters",
            "type": "string"
          },
          "airline.computerized_reservation_system": {
            "description": "The [CRS](https://en.wikipedia.org/wiki/Computer_reservation_system) used to make the reservation and purchase the ticket.\n* Encoding: ASCII\n* minLength: 4 characters\n* maxLength: 4 characters",
            "type": "string"
          },
          "airline.customer_reference_number": {
            "description": "The alphanumeric customer reference number.\n* Encoding: ASCII\n* maxLength: 20 characters\n* If you send more than 20 characters, the customer reference number is truncated\n* Must not be all spaces",
            "type": "string"
          },
          "airline.document_type": {
            "description": "A code that identifies the type of item bought. The description of the code can appear on credit card statements.\n* Encoding: ASCII\n* Example: Passenger ticket = 01\n* minLength: 2 characters\n* maxLength: 2 characters",
            "type": "string"
          },
          "airline.flight_date": {
            "description": "The flight departure date. Local time `(HH:mm)` is optional.\n* Date format: `yyyy-MM-dd`\n* Date and time format: `yyyy-MM-dd HH:mm`\n* minLength: 10 characters\n* maxLength: 16 characters",
            "type": "string"
          },
          "airline.leg.carrier_code": {
            "description": "The [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX) that identifies the carrier.\nThis field is required if the airline data includes leg details.\n* Example: KLM = KL\n* minLength: 2 characters\n* maxLength: 2 characters\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "airline.leg.class_of_travel": {
            "description": "A one-letter travel class identifier.\n The following are common:\n * F: first class\n* J: business class\n* Y: economy class\n* W: premium economy\n\n* Encoding: ASCII\n* minLength: 1 character\n* maxLength: 1 character\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "airline.leg.date_of_travel": {
            "description": "\t\nDate and time of travel in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format `yyyy-MM-dd HH:mm`.\n* Encoding: ASCII\n* minLength: 16 characters\n* maxLength: 16 characters",
            "type": "string"
          },
          "airline.leg.depart_airport": {
            "description": "The [IATA](https://www.iata.org/services/pages/codes.aspx) three-letter airport code of the departure airport.\nThis field is required if the airline data includes leg details.\n\n* Encoding: ASCII\n* Example: Amsterdam = AMS\n* minLength: 3 characters\n* maxLength: 3 characters\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "airline.leg.depart_tax": {
            "description": "The amount of [departure tax](https://en.wikipedia.org/wiki/Departure_tax) charged, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* Encoding: Numeric\n* minLength: 1\n* maxLength: 12\n*Must not be all zeros.",
            "type": "string"
          },
          "airline.leg.destination_code": {
            "description": "The [IATA](https://www.iata.org/services/pages/codes.aspx) 3-letter airport code of the destination airport.\nThis field is required if the airline data includes leg details.\n* Example: Amsterdam = AMS\n* Encoding: ASCII\n* minLength: 3 characters\n* maxLength: 3 characters\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "airline.leg.fare_base_code": {
            "description": "The [fare basis code](https://en.wikipedia.org/wiki/Fare_basis_code), alphanumeric.\n* minLength: 1 character\n* maxLength: 6 characters\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "airline.leg.flight_number": {
            "description": "The flight identifier.\n* minLength: 1 character\n* maxLength: 5 characters\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "airline.leg.stop_over_code": {
            "description": "A one-letter code that indicates whether the passenger is entitled to make a stopover. Can be a space, O if the passenger is entitled to make a stopover, or X if they are not.\n* Encoding: ASCII\n* minLength: 1 character\n* maxLength: 1 character",
            "type": "string"
          },
          "airline.passenger.date_of_birth": {
            "description": "The passenger's date of birth.\n\nDate format: `yyyy-MM-dd`\n* minLength: 10\n* maxLength: 10",
            "type": "string"
          },
          "airline.passenger.first_name": {
            "description": "The passenger's first name.\n> This field is required if the airline data includes passenger details or leg details.\n* Encoding: ASCII",
            "type": "string"
          },
          "airline.passenger.last_name": {
            "description": "The passenger's last name.\n> This field is required if the airline data includes passenger details or leg details.\n* Encoding: ASCII",
            "type": "string"
          },
          "airline.passenger.telephone_number": {
            "description": "The passenger's telephone number, including country code. This is an alphanumeric field that can include the '+' and '-' signs.\n* Encoding: ASCII\n* minLength: 3 characters\n* maxLength: 30 characters",
            "type": "string"
          },
          "airline.passenger.traveller_type": {
            "description": "The IATA passenger type code (PTC).\n* Encoding: ASCII\n* minLength: 3 characters\n* maxLength: 6 characters",
            "type": "string"
          },
          "airline.passenger_name": {
            "description": "The passenger's name, initials, and title.\n* Format: last name + first name or initials + title\n* Example: *FLYER / MARY MS*\n* minLength: 1 character\n* maxLength: 20 characters\n* If you send more than 20 characters, the name is truncated\n* Must not be all spaces \n*Must not be all zeros.",
            "type": "string"
          },
          "airline.ticket_issue_address": {
            "description": "The address of the organization that issued the ticket.\n* minLength: 0 characters\n* maxLength: 16 characters",
            "type": "string"
          },
          "airline.ticket_number": {
            "description": "The ticket's unique identifier.\n* minLength: 1 character\n* maxLength: 15 characters\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "airline.travel_agency_code": {
            "description": "The unique identifier from IATA or ARC for the travel agency that issues the ticket.\n* Encoding: ASCII\n* minLength: 1 character\n* maxLength: 8 characters\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "airline.travel_agency_name": {
            "description": "The name of the travel agency.\n\n* Encoding: ASCII\n* minLength: 1 character\n* maxLength: 25 characters\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          }
        },
        "required": [
          "airline.passenger_name"
        ],
        "type": "object"
      },
      "AdditionalDataCarRental": {
        "properties": {
          "carRental.checkOutDate": {
            "description": "The pick-up date.\n* Date format: `yyyyMMdd`",
            "type": "string"
          },
          "carRental.customerServiceTollFreeNumber": {
            "description": "The customer service phone number of the car rental company.\n* Format: Alphanumeric\n* maxLength: 17\n* For US and CA numbers must be 10 characters in length\n* Must not start with a space\n* Must not contain any special characters such as + or -\n*Must not be all zeros.",
            "type": "string"
          },
          "carRental.daysRented": {
            "description": "Number of days for which the car is being rented.\n* Format: Numeric\n* maxLength: 4\n* Must not be all spaces",
            "type": "string"
          },
          "carRental.fuelCharges": {
            "description": "Any fuel charges associated with the rental, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* Format: Numeric\n* maxLength: 12",
            "type": "string"
          },
          "carRental.insuranceCharges": {
            "description": "Any insurance charges associated with the rental, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* Format: Numeric\n* maxLength: 12\n* Must not be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "carRental.locationCity": {
            "description": "The city where the car is rented.\n* Format: Alphanumeric\n* maxLength: 18\n* Must not start with a space or be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "carRental.locationCountry": {
            "description": "The country where the car is rented, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\n* Format: Alphanumeric\n* maxLength: 2",
            "type": "string"
          },
          "carRental.locationStateProvince": {
            "description": "The state or province where the car is rented.\n* Format: Alphanumeric\n* maxLength: 2\n* Must not start with a space or be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "carRental.noShowIndicator": {
            "description": "Indicates if the customer didn't pick up their rental car.\n* Y - Customer did not pick up their car\n* N - Not applicable",
            "type": "string"
          },
          "carRental.oneWayDropOffCharges": {
            "description": "The charge for not returning a car to the original rental location, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* maxLength: 12",
            "type": "string"
          },
          "carRental.rate": {
            "description": "The daily rental rate, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* Format: Alphanumeric\n* maxLength: 12",
            "type": "string"
          },
          "carRental.rateIndicator": {
            "description": "Specifies whether the given rate is applied daily or weekly.\n* D - Daily rate\n* W - Weekly rate",
            "type": "string"
          },
          "carRental.rentalAgreementNumber": {
            "description": "The rental agreement number for the car rental.\n* Format: Alphanumeric\n* maxLength: 9\n* Must not start with a space or be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "carRental.rentalClassId": {
            "description": "The classification of the rental car.\n* Format: Alphanumeric\n* maxLength: 4\n* Must not start with a space or be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "carRental.renterName": {
            "description": "The name of the person renting the car.\n* Format: Alphanumeric\n* maxLength: 26\n* If you send more than 26 characters, the name is truncated\n* Must not start with a space or be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "carRental.returnCity": {
            "description": "The city where the car must be returned.\n* Format: Alphanumeric\n* maxLength: 18\n* Must not start with a space or be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "carRental.returnCountry": {
            "description": "The country where the car must be returned, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\n* Format: Alphanumeric\n* maxLength: 2",
            "type": "string"
          },
          "carRental.returnDate": {
            "description": "The last date to return the car by.\n* Date format: `yyyyMMdd`\n* maxLength: 8",
            "type": "string"
          },
          "carRental.returnLocationId": {
            "description": "The agency code, phone number, or address abbreviation\n* Format: Alphanumeric\n* maxLength: 10\n* Must not start with a space or be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "carRental.returnStateProvince": {
            "description": "The state or province where the car must be returned.\n* Format: Alphanumeric\n* maxLength: 3\n* Must not start with a space or be all spaces\n*Must not be all zeros.",
            "type": "string"
          },
          "carRental.taxExemptIndicator": {
            "description": "Indicates if the goods or services were tax-exempt, or if tax was not paid on them.\n\nValues:\n* Y - Goods or services were tax exempt\n* N - Tax was not collected",
            "type": "string"
          },
          "travelEntertainmentAuthData.duration": {
            "description": "Number of days the car is rented for. This should be included in the auth message.\n* Format: Numeric\n* maxLength: 4",
            "type": "string"
          },
          "travelEntertainmentAuthData.market": {
            "description": "Indicates what market-specific dataset will be submitted or is being submitted. Value should be 'A' for car rental. This should be included in the auth message.\n* Format: Alphanumeric\n* maxLength: 1",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataCommon": {
        "properties": {
          "RequestedTestErrorResponseCode": {
            "description": "Triggers test scenarios that allow to replicate certain communication errors.\n\nAllowed values:\n* **NO_CONNECTION_AVAILABLE** – There wasn't a connection available to service the outgoing communication.\nThis is a transient, retriable error since no messaging could be initiated to an issuing system (or third-party acquiring system). Therefore, the header Transient-Error: true is returned in the response. A subsequent request using the same idempotency key will be processed as if it was the first request.\n* **IOEXCEPTION_RECEIVED** – Something went wrong during transmission of the message or receiving the response.\nThis is a classified as non-transient because the message could have been received by the issuing party and been acted upon. No transient error header is returned. If using idempotency, the (error) response is stored as the final result for the idempotency key. Subsequent messages with the same idempotency key not be processed beyond returning the stored response.",
            "type": "string"
          },
          "allowPartialAuth": {
            "description": "Set to true to authorise a part of the requested amount in case the cardholder does not have enough funds on their account. \nIf a payment was partially authorised, the response includes resultCode: PartiallyAuthorised and the authorised amount in additionalData.authorisedAmountValue.\nTo enable this functionality, contact our Support Team.",
            "type": "string"
          },
          "authorisationType": {
            "description": "Flags a card payment request for either pre-authorisation or final authorisation. For more information, refer to [Authorisation types](https://docs.adyen.com/online-payments/adjust-authorisation#authorisation-types).\n\nAllowed values:\n* **PreAuth** – flags the payment request to be handled as a pre-authorisation.\n* **FinalAuth** – flags the payment request to be handled as a final authorisation.",
            "type": "string"
          },
          "customRoutingFlag": {
            "description": "Allows you to determine or override the acquirer account that should be used for the transaction.\n\nIf you need to process a payment with an acquirer different from a default one, you can set up a corresponding configuration on the Adyen payments platform. Then you can pass a custom routing flag in a payment request's additional data to target a specific acquirer.\n\nTo enable this functionality, contact [Support](https://www.adyen.help/hc/en-us/requests/new).",
            "type": "string"
          },
          "industryUsage": {
            "description": "In case of [asynchronous authorisation adjustment](https://docs.adyen.com/online-payments/adjust-authorisation#adjust-authorisation), this field denotes why the additional payment is made.\n\nPossible values:\n\n * **NoShow**: An incremental charge is carried out because of a no-show for a guaranteed reservation.\n\n * **DelayedCharge**: An incremental charge is carried out to process an additional payment after the original services have been rendered and the respective payment has been processed.",
            "enum": [
              "NoShow",
              "DelayedCharge"
            ],
            "type": "string"
          },
          "manualCapture": {
            "description": "Set to **true** to require [manual capture](https://docs.adyen.com/online-payments/capture) for the transaction.",
            "type": "string"
          },
          "networkTxReference": {
            "description": "Allows you to link the transaction to the original or previous one in a subscription/card-on-file chain. This field is required for token-based transactions where Adyen does not tokenize the card.\n\nTransaction identifier from card schemes, for example, Mastercard Trace ID or the Visa Transaction ID.\n\nSubmit the original transaction ID of the contract in your payment request if you are not tokenizing card details with Adyen and are making a merchant-initiated transaction (MIT) for subsequent charges.\n\nMake sure you are sending `shopperInteraction` **ContAuth** and `recurringProcessingModel` **Subscription** or **UnscheduledCardOnFile** to ensure that the transaction is classified as MIT.",
            "type": "string"
          },
          "overwriteBrand": {
            "description": "Boolean indicator that can be optionally used for performing debit transactions on combo cards (for example, combo cards in Brazil). This is not mandatory but we recommend that you set this to true if you want to use the `selectedBrand` value to specify how to process the transaction.",
            "type": "string"
          },
          "subMerchantCity": {
            "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the city of the actual merchant's address.\n* Format: alpha-numeric.\n* Maximum length: 13 characters.",
            "type": "string"
          },
          "subMerchantCountry": {
            "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the three-letter country code of the actual merchant's address.\n* Format: alpha-numeric.\n* Fixed length: 3 characters.",
            "type": "string"
          },
          "subMerchantID": {
            "description": "This field contains an identifier of the actual merchant when a transaction is submitted via a payment facilitator. The payment facilitator must send in this unique ID.\n\nA unique identifier per submerchant that is required if the transaction is performed by a registered payment facilitator.\n* Format: alpha-numeric.\n* Fixed length: 15 characters.",
            "type": "string"
          },
          "subMerchantName": {
            "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the name of the actual merchant.\n* Format: alpha-numeric.\n* Maximum length: 22 characters.",
            "type": "string"
          },
          "subMerchantPostalCode": {
            "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the postal code of the actual merchant's address.\n* Format: alpha-numeric.\n* Maximum length: 10 characters.",
            "type": "string"
          },
          "subMerchantState": {
            "description": "This field is required if the transaction is performed by a registered payment facilitator, and if applicable to the country. This field must contain the state code of the actual merchant's address.\n* Format: alpha-numeric.\n* Maximum length: 3 characters.",
            "type": "string"
          },
          "subMerchantStreet": {
            "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the street of the actual merchant's address.\n* Format: alpha-numeric.\n* Maximum length: 60 characters.",
            "type": "string"
          },
          "subMerchantTaxId": {
            "description": "This field is required if the transaction is performed by a registered payment facilitator. This field must contain the tax ID of the actual merchant.\n* Format: alpha-numeric.\n* Fixed length: 11 or 14 characters.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataLevel23": {
        "properties": {
          "enhancedSchemeData.customerReference": {
            "description": "The customer code.\n* Encoding: ASCII\n* Max length: 25 characters\n* Must not start with a space or be all spaces\n* Must not be all zeros.",
            "type": "string"
          },
          "enhancedSchemeData.destinationCountryCode": {
            "description": "The three-letter [ISO 3166-1 alpha-3 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) for the destination address.\n* Encoding: ASCII\n* Fixed length: 3 characters",
            "type": "string"
          },
          "enhancedSchemeData.destinationPostalCode": {
            "description": "The postal code of the destination address.\n* Encoding: ASCII\n* Max length: 10 characters\n* Must not start with a space",
            "type": "string"
          },
          "enhancedSchemeData.destinationStateProvinceCode": {
            "description": "Destination state or province code.\n* Encoding: ASCII\n* Max length: 3 characters\n* Must not start with a space",
            "type": "string"
          },
          "enhancedSchemeData.dutyAmount": {
            "description": "The duty amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* For example, 2000 means USD 20.00.\n* Encoding: Numeric\n* Max length: 12 characters",
            "type": "string"
          },
          "enhancedSchemeData.freightAmount": {
            "description": "The shipping amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* For example, 2000 means USD 20.00.\n* Encoding: Numeric\n*Max length: 12 characters",
            "type": "string"
          },
          "enhancedSchemeData.itemDetailLine[itemNr].commodityCode": {
            "description": "The [UNSPC commodity code](https://www.unspsc.org/) of the item.\n* Encoding: ASCII\n* Max length: 12 characters\n* Must not start with a space or be all spaces\n* Must not be all zeros.",
            "type": "string"
          },
          "enhancedSchemeData.itemDetailLine[itemNr].description": {
            "description": "A description of the item.\n* Encoding: ASCII\n* Max length: 26 characters\n* Must not start with a space or be all spaces\n* Must not be all zeros.",
            "type": "string"
          },
          "enhancedSchemeData.itemDetailLine[itemNr].discountAmount": {
            "description": "The discount amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* For example, 2000 means USD 20.00.\n* Encoding: Numeric\n* Max length: 12 characters",
            "type": "string"
          },
          "enhancedSchemeData.itemDetailLine[itemNr].productCode": {
            "description": "The product code.\n* Encoding: ASCII.\n* Max length: 12 characters\n* Must not start with a space or be all spaces\n* Must not be all zeros.",
            "type": "string"
          },
          "enhancedSchemeData.itemDetailLine[itemNr].quantity": {
            "description": "The number of items. Must be an integer greater than zero.\n* Encoding: Numeric\n* Max length: 12 characters\n* Must not start with a space or be all spaces\n\n",
            "type": "string"
          },
          "enhancedSchemeData.itemDetailLine[itemNr].totalAmount": {
            "description": "The total amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* For example, 2000 means USD 20.00.\n* Max length: 12 characters\n* Must not start with a space or be all spaces\n* Must not be all zeros.",
            "type": "string"
          },
          "enhancedSchemeData.itemDetailLine[itemNr].unitOfMeasure": {
            "description": "The unit of measurement for an item.\n* Encoding: ASCII\n\nMax length: 3 characters\n* Must not start with a space or be all spaces\n* Must not be all zeros.",
            "type": "string"
          },
          "enhancedSchemeData.itemDetailLine[itemNr].unitPrice": {
            "description": "The unit price in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* For example, 2000 means USD 20.00.\n* Encoding: Numeric\n* Max length: 12 characters\n* Must not be all zeros.",
            "type": "string"
          },
          "enhancedSchemeData.orderDate": {
            "description": "The order date.\n* Format: `ddMMyy`\n* Encoding: ASCII\n* Max length: 6 characters",
            "type": "string"
          },
          "enhancedSchemeData.shipFromPostalCode": {
            "description": "The postal code of the address the item is shipped from.\n* Encoding: ASCII\n* Max length: 10 characters\n* Must not start with a space or be all spaces\n* Must not be all zeros.",
            "type": "string"
          },
          "enhancedSchemeData.totalTaxAmount": {
            "description": "The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* For example, 2000 means USD 20.00.\n*Encoding: Numeric\n*Max length: 12 characters\n* Must not be all zeros.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataLodging": {
        "properties": {
          "lodging.checkInDate": {
            "description": "The arrival date.\n* Date format: **yyyyMmDd**. For example, for 2023 April 22, **20230422**.",
            "type": "string"
          },
          "lodging.checkOutDate": {
            "description": "The departure date.\n* Date format: **yyyyMmDd**. For example, for 2023 April 22, **20230422**.",
            "type": "string"
          },
          "lodging.customerServiceTollFreeNumber": {
            "description": "The toll-free phone number for the lodging.\n* Format: numeric\n* Max length: 17 characters.\n* For US and CA numbers must be 10 characters in length\n* Must not start with a space\n* Must not contain any special characters such as + or -\n*Must not be all zeros.",
            "type": "string"
          },
          "lodging.fireSafetyActIndicator": {
            "description": "Identifies that the facility complies with the Hotel and Motel Fire Safety Act of 1990. Must be 'Y' or 'N'.\n* Format: alphabetic\n* Max length: 1 character",
            "type": "string"
          },
          "lodging.folioCashAdvances": {
            "description": "The folio cash advances, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* Format: numeric\n* Max length: 12 characters",
            "type": "string"
          },
          "lodging.folioNumber": {
            "description": "The card acceptor’s internal invoice or billing ID reference number.\n* Max length: 25 characters.\n* Must not start with a space\n*Must not be all zeros.",
            "type": "string"
          },
          "lodging.foodBeverageCharges": {
            "description": "Any charges for food and beverages associated with the booking, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* Format: numeric\n* Max length: 12 characters",
            "type": "string"
          },
          "lodging.noShowIndicator": {
            "description": "Indicates if the customer didn't check in for their booking.\n Possible values: \n* **Y**: the customer didn't check in \n* **N**: the customer checked in",
            "type": "string"
          },
          "lodging.prepaidExpenses": {
            "description": "The prepaid expenses for the booking.\n* Format: numeric\n* Max length: 12 characters",
            "type": "string"
          },
          "lodging.propertyPhoneNumber": {
            "description": "The lodging property location's phone number.\n* Format: numeric.\n* Min length: 10 characters\n* Max length: 17 characters\n* For US and CA numbers must be 10 characters in length\n* Must not start with a space\n* Must not contain any special characters such as + or -\n*Must not be all zeros.",
            "type": "string"
          },
          "lodging.room1.numberOfNights": {
            "description": "The total number of nights the room is booked for.\n* Format: numeric\n* Must be a number between 0 and 99\n* Max length: 4 characters",
            "type": "string"
          },
          "lodging.room1.rate": {
            "description": "The rate for the room, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* Format: numeric\n* Max length: 12 characters\n* Must not be a negative number",
            "type": "string"
          },
          "lodging.totalRoomTax": {
            "description": "The total room tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* Format: numeric\n* Max length: 12 characters\n* Must not be a negative number",
            "type": "string"
          },
          "lodging.totalTax": {
            "description": "The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* Format: numeric\n* Max length: 12 characters\n* Must not be a negative number",
            "type": "string"
          },
          "travelEntertainmentAuthData.duration": {
            "description": "The number of nights. This should be included in the auth message.\n* Format: numeric\n* Max length: 4 characters",
            "type": "string"
          },
          "travelEntertainmentAuthData.market": {
            "description": "Indicates what market-specific dataset will be submitted. Must be 'H' for Hotel. This should be included in the auth message.\n\n* Format: alphanumeric\n* Max length: 1 character",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataOpenInvoice": {
        "properties": {
          "openinvoicedata.merchantData": {
            "description": "Holds different merchant data points like product, purchase, customer, and so on. It takes data in a Base64 encoded string.\n\nThe `merchantData` parameter needs to be added to the `openinvoicedata` signature at the end.\n\nSince the field is optional, if it's not included it does not impact computing the merchant signature.\n\nApplies only to Klarna.\n\nYou can contact Klarna for the format and structure of the string.",
            "type": "string"
          },
          "openinvoicedata.numberOfLines": {
            "description": "The number of invoice lines included in `openinvoicedata`.\n\nThere needs to be at least one line, so `numberOfLines` needs to be at least 1.",
            "type": "string"
          },
          "openinvoicedata.recipientFirstName": {
            "description": "First name of the recipient. If the delivery address and the billing address are different, specify the `recipientFirstName` and `recipientLastName` to share the delivery address with Klarna. Otherwise, only the billing address is shared with Klarna.",
            "type": "string"
          },
          "openinvoicedata.recipientLastName": {
            "description": "Last name of the recipient. If the delivery address and the billing address are different, specify the `recipientFirstName` and `recipientLastName` to share the delivery address with Klarna. Otherwise, only the billing address is shared with Klarna.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].currencyCode": {
            "description": "The three-character ISO currency code.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].description": {
            "description": "A text description of the product the invoice line refers to.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].itemAmount": {
            "description": "The price for one item in the invoice line, represented in minor units.\n\nThe due amount for the item, VAT excluded.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].itemId": {
            "description": "A unique id for this item. Required for RatePay if the description of each item is not unique.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].itemVatAmount": {
            "description": "The VAT due for one item in the invoice line, represented in minor units.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].itemVatPercentage": {
            "description": "The VAT percentage for one item in the invoice line, represented in minor units.\n\nFor example, 19% VAT is specified as 1900.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].numberOfItems": {
            "description": "The number of units purchased of a specific product.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].returnShippingCompany": {
            "description": "Name of the shipping company handling the the return shipment.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].returnTrackingNumber": {
            "description": "The tracking number for the return of the shipment.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].returnTrackingUri": {
            "description": "URI where the customer can track the return of their shipment.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].shippingCompany": {
            "description": "Name of the shipping company handling the delivery.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].shippingMethod": {
            "description": "Shipping method.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].trackingNumber": {
            "description": "The tracking number for the shipment.",
            "type": "string"
          },
          "openinvoicedataLine[itemNr].trackingUri": {
            "description": "URI where the customer can track their shipment.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataOpi": {
        "properties": {
          "opi.includeTransToken": {
            "description": "Optional boolean indicator. Set to **true** if you want an ecommerce transaction to return an `opi.transToken` as additional data in the response.\n\nYou can store this Oracle Payment Interface token in your Oracle Opera database. For more information and required settings, see [Oracle Opera](https://docs.adyen.com/plugins/oracle-opera#opi-token-ecommerce).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataRatepay": {
        "properties": {
          "ratepay.installmentAmount": {
            "description": "Amount the customer has to pay each month.",
            "type": "string"
          },
          "ratepay.interestRate": {
            "description": "Interest rate of this installment.",
            "type": "string"
          },
          "ratepay.lastInstallmentAmount": {
            "description": "Amount of the last installment.",
            "type": "string"
          },
          "ratepay.paymentFirstday": {
            "description": "Calendar day of the first payment.",
            "type": "string"
          },
          "ratepaydata.deliveryDate": {
            "description": "Date the merchant delivered the goods to the customer.",
            "type": "string"
          },
          "ratepaydata.dueDate": {
            "description": "Date by which the customer must settle the payment.",
            "type": "string"
          },
          "ratepaydata.invoiceDate": {
            "description": "Invoice date, defined by the merchant. If not included, the invoice date is set to the delivery date.",
            "type": "string"
          },
          "ratepaydata.invoiceId": {
            "description": "Identification name or number for the invoice, defined by the merchant.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataRetry": {
        "properties": {
          "retry.chainAttemptNumber": {
            "description": "The number of times the transaction (not order) has been retried between different payment service providers. For instance, the `chainAttemptNumber` set to 2 means that this transaction has been recently tried on another provider before being sent to Adyen.\n\n> If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.",
            "type": "string"
          },
          "retry.orderAttemptNumber": {
            "description": "The index of the attempt to bill a particular order, which is identified by the `merchantOrderReference` field. For example, if a recurring transaction fails and is retried one day later, then the order number for these attempts would be 1 and 2, respectively.\n\n> If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.",
            "type": "string"
          },
          "retry.skipRetry": {
            "description": "The Boolean value indicating whether Adyen should skip or retry this transaction, if possible.\n\n> If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataRisk": {
        "properties": {
          "riskdata.[customFieldName]": {
            "description": "The data for your custom risk field. For more information, refer to [Create custom risk fields](https://docs.adyen.com/risk-management/configure-custom-risk-rules#step-1-create-custom-risk-fields).",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].amountPerItem": {
            "description": "The price of item in the basket, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].brand": {
            "description": "Brand of the item.",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].category": {
            "description": "Category of the item.",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].color": {
            "description": "Color of the item.",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].currency": {
            "description": "The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].itemID": {
            "description": "ID of the item.",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].manufacturer": {
            "description": "Manufacturer of the item.",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].productTitle": {
            "description": "A text description of the product the invoice line refers to.",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].quantity": {
            "description": "Quantity of the item purchased.",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].receiverEmail": {
            "description": "Email associated with the given product in the basket (usually in electronic gift cards).",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].size": {
            "description": "Size of the item.",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].sku": {
            "description": "[Stock keeping unit](https://en.wikipedia.org/wiki/Stock_keeping_unit).",
            "type": "string"
          },
          "riskdata.basket.item[itemNr].upc": {
            "description": "[Universal Product Code](https://en.wikipedia.org/wiki/Universal_Product_Code).",
            "type": "string"
          },
          "riskdata.promotions.promotion[itemNr].promotionCode": {
            "description": "Code of the promotion.",
            "type": "string"
          },
          "riskdata.promotions.promotion[itemNr].promotionDiscountAmount": {
            "description": "The discount amount of the promotion, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "type": "string"
          },
          "riskdata.promotions.promotion[itemNr].promotionDiscountCurrency": {
            "description": "The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).",
            "type": "string"
          },
          "riskdata.promotions.promotion[itemNr].promotionDiscountPercentage": {
            "description": "Promotion's percentage discount. It is represented in percentage value and there is no need to include the '%' sign.\n\ne.g. for a promotion discount of 30%, the value of the field should be 30.",
            "type": "string"
          },
          "riskdata.promotions.promotion[itemNr].promotionName": {
            "description": "Name of the promotion.",
            "type": "string"
          },
          "riskdata.riskProfileReference": {
            "description": "Reference number of the risk profile that you want to apply to the payment. If not provided or left blank, the merchant-level account's default risk profile will be applied to the payment. For more information, see [dynamically assign a risk profile to a payment](https://docs.adyen.com/risk-management/create-and-use-risk-profiles#dynamically-assign-a-risk-profile-to-a-payment).",
            "type": "string"
          },
          "riskdata.skipRisk": {
            "description": "If this parameter is provided with the value **true**, risk checks for the payment request are skipped and the transaction will not get a risk score.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataRiskStandalone": {
        "properties": {
          "PayPal.CountryCode": {
            "description": "Shopper's country of residence in the form of ISO standard 3166 2-character country codes.",
            "type": "string"
          },
          "PayPal.EmailId": {
            "description": "Shopper's email.",
            "type": "string"
          },
          "PayPal.FirstName": {
            "description": "Shopper's first name.",
            "type": "string"
          },
          "PayPal.LastName": {
            "description": "Shopper's last name.",
            "type": "string"
          },
          "PayPal.PayerId": {
            "description": "Unique PayPal Customer Account identification number. Character length and limitations: 13 single-byte alphanumeric characters.",
            "type": "string"
          },
          "PayPal.Phone": {
            "description": "Shopper's phone number.",
            "type": "string"
          },
          "PayPal.ProtectionEligibility": {
            "description": "Allowed values:\n* **Eligible** — Merchant is protected by PayPal's Seller Protection Policy for Unauthorized Payments and Item Not Received.\n\n* **PartiallyEligible** — Merchant is protected by PayPal's Seller Protection Policy for Item Not Received.\n\n* **Ineligible** — Merchant is not protected under the Seller Protection Policy.",
            "type": "string"
          },
          "PayPal.TransactionId": {
            "description": "Unique transaction ID of the payment.",
            "type": "string"
          },
          "avsResultRaw": {
            "description": "Raw AVS result received from the acquirer, where available. Example: D",
            "type": "string"
          },
          "bin": {
            "description": "The Bank Identification Number of a credit card, which is the first six digits of a card number. Required for [tokenized card request](https://docs.adyen.com/risk-management/standalone-risk#tokenised-pan-request).",
            "type": "string"
          },
          "cvcResultRaw": {
            "description": "Raw CVC result received from the acquirer, where available. Example: 1",
            "type": "string"
          },
          "riskToken": {
            "description": "Unique identifier or token for the shopper's card details.",
            "type": "string"
          },
          "threeDAuthenticated": {
            "description": "A Boolean value indicating whether 3DS authentication was completed on this payment. Example: true",
            "type": "string"
          },
          "threeDOffered": {
            "description": "A Boolean value indicating whether 3DS was offered for this payment. Example: true",
            "type": "string"
          },
          "tokenDataType": {
            "description": "Required for PayPal payments only. The only supported value is: **paypal**.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataSubMerchant": {
        "properties": {
          "subMerchant.numberOfSubSellers": {
            "description": "Required for transactions performed by registered payment facilitators. Indicates the number of sub-merchants contained in the request. For example, **3**.",
            "type": "string"
          },
          "subMerchant.subSeller[subSellerNr].city": {
            "description": "Required for transactions performed by registered payment facilitators. The city of the sub-merchant's address.\n* Format: Alphanumeric\n* Maximum length: 13 characters",
            "type": "string"
          },
          "subMerchant.subSeller[subSellerNr].country": {
            "description": "Required for transactions performed by registered payment facilitators. The three-letter country code of the sub-merchant's address. For example, **BRA** for Brazil. \n* Format: [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)\n* Fixed length: 3 characters",
            "type": "string"
          },
          "subMerchant.subSeller[subSellerNr].id": {
            "description": "Required for transactions performed by registered payment facilitators. A unique identifier that you create for the sub-merchant, used by schemes to identify the sub-merchant. \n* Format: Alphanumeric\n* Maximum length: 15 characters",
            "type": "string"
          },
          "subMerchant.subSeller[subSellerNr].mcc": {
            "description": "Required for transactions performed by registered payment facilitators. The sub-merchant's 4-digit Merchant Category Code (MCC). \n* Format: Numeric\n* Fixed length: 4 digits",
            "type": "string"
          },
          "subMerchant.subSeller[subSellerNr].name": {
            "description": "Required for transactions performed by registered payment facilitators. The name of the sub-merchant. Based on scheme specifications, this value will overwrite the shopper statement  that will appear in the card statement.\n* Format: Alphanumeric\n* Maximum length: 22 characters",
            "type": "string"
          },
          "subMerchant.subSeller[subSellerNr].postalCode": {
            "description": "Required for transactions performed by registered payment facilitators. The postal code of the sub-merchant's address, without dashes.\n* Format: Numeric\n* Fixed length: 8 digits",
            "type": "string"
          },
          "subMerchant.subSeller[subSellerNr].state": {
            "description": "Required for transactions performed by registered payment facilitators. The state code of the sub-merchant's address, if applicable to the country.\n* Format: Alphanumeric\n* Maximum length: 2 characters",
            "type": "string"
          },
          "subMerchant.subSeller[subSellerNr].street": {
            "description": "Required for transactions performed by registered payment facilitators. The street name and house number of the sub-merchant's address.\n* Format: Alphanumeric\n* Maximum length: 60 characters",
            "type": "string"
          },
          "subMerchant.subSeller[subSellerNr].taxId": {
            "description": "Required for transactions performed by registered payment facilitators. The tax ID of the sub-merchant.\n* Format: Numeric\n* Fixed length: 11 digits for the CPF or 14 digits for the CNPJ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataTemporaryServices": {
        "properties": {
          "enhancedSchemeData.customerReference": {
            "description": "The customer code, if supplied by a customer.\n* Encoding: ASCII\n* maxLength: 25",
            "type": "string"
          },
          "enhancedSchemeData.employeeName": {
            "description": "The name or ID of the person working in a temporary capacity.\n* maxLength: 40.  \n* Must not be all spaces. \n*Must not be all zeros.",
            "type": "string"
          },
          "enhancedSchemeData.jobDescription": {
            "description": "The job description of the person working in a temporary capacity.\n* maxLength: 40 \n* Must not be all spaces. \n*Must not be all zeros.",
            "type": "string"
          },
          "enhancedSchemeData.regularHoursRate": {
            "description": "The amount paid for regular hours worked, [minor units](https://docs.adyen.com/development-resources/currency-codes).\n* maxLength: 7\n* Must not be empty\n* Can be all zeros",
            "type": "string"
          },
          "enhancedSchemeData.regularHoursWorked": {
            "description": "The hours worked.\n* maxLength: 7\n* Must not be empty\n* Can be all zeros",
            "type": "string"
          },
          "enhancedSchemeData.requestName": {
            "description": "The name of the person requesting temporary services.\n* maxLength: 40\n* Must not be all zeros\n* Must not be all spaces",
            "type": "string"
          },
          "enhancedSchemeData.tempStartDate": {
            "description": "The billing period start date.\n* Format: ddMMyy\n* maxLength: 6",
            "type": "string"
          },
          "enhancedSchemeData.tempWeekEnding": {
            "description": "The billing period end date.\n* Format: ddMMyy\n* maxLength: 6",
            "type": "string"
          },
          "enhancedSchemeData.totalTaxAmount": {
            "description": "The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes). For example, 2000 means USD 20.00\n* maxLength: 12",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdditionalDataWallets": {
        "properties": {
          "androidpay.token": {
            "description": "The Android Pay token retrieved from the SDK.",
            "type": "string"
          },
          "masterpass.transactionId": {
            "description": "The Mastercard Masterpass Transaction ID retrieved from the SDK.",
            "type": "string"
          },
          "payment.token": {
            "description": "The Apple Pay token retrieved from the SDK.",
            "type": "string"
          },
          "paywithgoogle.token": {
            "description": "The Google Pay token retrieved from the SDK.",
            "type": "string"
          },
          "samsungpay.token": {
            "description": "The Samsung Pay token retrieved from the SDK.",
            "type": "string"
          },
          "visacheckout.callId": {
            "description": "The Visa Checkout Call ID retrieved from the SDK.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApplicationInfo": {
        "properties": {
          "adyenLibrary": {
            "$ref": "#/$defs/CommonField"
          },
          "adyenPaymentSource": {
            "$ref": "#/$defs/CommonField"
          },
          "externalPlatform": {
            "$ref": "#/$defs/ExternalPlatform"
          },
          "merchantApplication": {
            "$ref": "#/$defs/CommonField"
          },
          "merchantDevice": {
            "$ref": "#/$defs/MerchantDevice"
          },
          "shopperInteractionDevice": {
            "$ref": "#/$defs/ShopperInteractionDevice"
          }
        },
        "type": "object"
      },
      "CommonField": {
        "properties": {
          "name": {
            "description": "Name of the field. For example, Name of External Platform.",
            "type": "string"
          },
          "version": {
            "description": "Version of the field. For example, Version of External Platform.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExternalPlatform": {
        "properties": {
          "integrator": {
            "description": "External platform integrator.",
            "type": "string"
          },
          "name": {
            "description": "Name of the field. For example, Name of External Platform.",
            "type": "string"
          },
          "version": {
            "description": "Version of the field. For example, Version of External Platform.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MerchantDevice": {
        "properties": {
          "os": {
            "description": "Operating system running on the merchant device.",
            "type": "string"
          },
          "osVersion": {
            "description": "Version of the operating system on the merchant device.",
            "type": "string"
          },
          "reference": {
            "description": "Merchant device reference.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ShopperInteractionDevice": {
        "properties": {
          "locale": {
            "description": "Locale on the shopper interaction device.",
            "type": "string"
          },
          "os": {
            "description": "Operating system running on the shopper interaction device.",
            "type": "string"
          },
          "osVersion": {
            "description": "Version of the operating system on the shopper interaction device.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuthenticationData": {
        "properties": {
          "attemptAuthentication": {
            "description": "Indicates when 3D Secure authentication should be attempted. This overrides all other rules, including [Dynamic 3D Secure settings](https://docs.adyen.com/risk-management/dynamic-3d-secure).\n\nPossible values:\n\n* **always**: Perform 3D Secure authentication.\n* **never**: Don't perform 3D Secure authentication. If PSD2 SCA or other national regulations require authentication, the transaction gets declined.",
            "enum": [
              "always",
              "never"
            ],
            "type": "string",
            "x-addedInVersion": "69"
          },
          "authenticationOnly": {
            "default": false,
            "description": "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only), and not the payment authorisation.\nDefault: **false**.",
            "type": "boolean",
            "x-addedInVersion": "69"
          },
          "threeDSRequestData": {
            "$ref": "#/$defs/ThreeDSRequestData"
          }
        },
        "type": "object"
      },
      "ThreeDSRequestData": {
        "properties": {
          "challengeWindowSize": {
            "description": "Dimensions of the 3DS2 challenge window to be displayed to the cardholder.\n\nPossible values:\n\n* **01** - size of 250x400 \n* **02** - size of 390x400\n* **03** - size of 500x600\n* **04** - size of 600x400\n* **05** - Fullscreen",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05"
            ],
            "type": "string",
            "x-addedInVersion": "69"
          },
          "dataOnly": {
            "description": "Flag for data only flow.",
            "enum": [
              "false",
              "true"
            ],
            "type": "string",
            "x-addedInVersion": "69"
          },
          "nativeThreeDS": {
            "description": "Indicates if [native 3D Secure authentication](https://docs.adyen.com/online-payments/3d-secure/native-3ds2) should be used when available.\n\nPossible values:\n* **preferred**: Use native 3D Secure authentication when available.",
            "enum": [
              "preferred"
            ],
            "type": "string",
            "x-addedInVersion": "69"
          },
          "threeDSVersion": {
            "description": "The version of 3D Secure to use.\n\nPossible values:\n\n* **2.1.0**\n* **2.2.0**",
            "enum": [
              "2.1.0",
              "2.2.0"
            ],
            "type": "string",
            "x-addedInVersion": "69"
          }
        },
        "type": "object"
      },
      "BillingAddress": {
        "properties": {
          "city": {
            "description": "The name of the city. Maximum length: 3000 characters.",
            "maxLength": 3000,
            "type": "string"
          },
          "country": {
            "description": "The two-character ISO-3166-1 alpha-2 country code. For example, **US**.\n> If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.",
            "type": "string"
          },
          "houseNumberOrName": {
            "description": "The number or name of the house. Maximum length: 3000 characters.",
            "maxLength": 3000,
            "type": "string"
          },
          "postalCode": {
            "description": "A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.",
            "type": "string"
          },
          "stateOrProvince": {
            "description": "The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.\n> Required for the US and Canada.",
            "type": "string"
          },
          "street": {
            "description": "The name of the street. Maximum length: 3000 characters.\n> The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.",
            "maxLength": 3000,
            "type": "string"
          }
        },
        "required": [
          "street",
          "houseNumberOrName",
          "city",
          "postalCode",
          "country"
        ],
        "type": "object"
      },
      "BrowserInfo": {
        "properties": {
          "acceptHeader": {
            "description": "The accept header value of the shopper's browser.",
            "type": "string"
          },
          "colorDepth": {
            "description": "The color depth of the shopper's browser in bits per pixel. This should be obtained by using the browser's `screen.colorDepth` property. Accepted values: 1, 4, 8, 15, 16, 24, 30, 32 or 48 bit color depth.",
            "format": "int32",
            "type": "integer",
            "x-addedInVersion": "40"
          },
          "javaEnabled": {
            "description": "Boolean value indicating if the shopper's browser is able to execute Java.",
            "type": "boolean",
            "x-addedInVersion": "40"
          },
          "javaScriptEnabled": {
            "default": true,
            "description": "Boolean value indicating if the shopper's browser is able to execute JavaScript. A default 'true' value is assumed if the field is not present.",
            "type": "boolean",
            "x-addedInVersion": "40"
          },
          "language": {
            "description": "The `navigator.language` value of the shopper's browser (as defined in IETF BCP 47).",
            "type": "string",
            "x-addedInVersion": "40"
          },
          "screenHeight": {
            "description": "The total height of the shopper's device screen in pixels.",
            "format": "int32",
            "type": "integer",
            "x-addedInVersion": "40"
          },
          "screenWidth": {
            "description": "The total width of the shopper's device screen in pixels.",
            "format": "int32",
            "type": "integer",
            "x-addedInVersion": "40"
          },
          "timeZoneOffset": {
            "description": "Time difference between UTC time and the shopper's browser local time, in minutes.",
            "format": "int32",
            "type": "integer",
            "x-addedInVersion": "40"
          },
          "userAgent": {
            "description": "The user agent value of the shopper's browser.",
            "type": "string"
          }
        },
        "required": [
          "userAgent",
          "acceptHeader",
          "javaEnabled",
          "colorDepth",
          "screenHeight",
          "screenWidth",
          "timeZoneOffset",
          "language"
        ],
        "type": "object"
      },
      "Company": {
        "properties": {
          "homepage": {
            "description": "The company website's home page.",
            "type": "string"
          },
          "name": {
            "description": "The company name.",
            "type": "string"
          },
          "registrationNumber": {
            "description": "Registration number of the company.",
            "type": "string"
          },
          "registryLocation": {
            "description": "Registry location of the company.",
            "type": "string"
          },
          "taxId": {
            "description": "Tax ID of the company.",
            "type": "string"
          },
          "type": {
            "description": "The company type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ForexQuote": {
        "properties": {
          "account": {
            "description": "The account name.",
            "type": "string"
          },
          "accountType": {
            "description": "The account type.",
            "type": "string"
          },
          "baseAmount": {
            "$ref": "#/$defs/Amount"
          },
          "basePoints": {
            "description": "The base points.",
            "format": "int32",
            "type": "integer"
          },
          "buy": {
            "$ref": "#/$defs/Amount"
          },
          "interbank": {
            "$ref": "#/$defs/Amount"
          },
          "reference": {
            "description": "The reference assigned to the forex quote request.",
            "type": "string"
          },
          "sell": {
            "$ref": "#/$defs/Amount"
          },
          "signature": {
            "description": "The signature to validate the integrity.",
            "type": "string"
          },
          "source": {
            "description": "The source of the forex quote.",
            "type": "string"
          },
          "type": {
            "description": "The type of forex.",
            "type": "string"
          },
          "validTill": {
            "description": "The date until which the forex quote is valid.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "validTill",
          "basePoints"
        ],
        "type": "object"
      },
      "DeliveryAddress": {
        "properties": {
          "city": {
            "description": "The name of the city. Maximum length: 3000 characters.",
            "maxLength": 3000,
            "type": "string"
          },
          "country": {
            "description": "The two-character ISO-3166-1 alpha-2 country code. For example, **US**.\n> If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.",
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "houseNumberOrName": {
            "description": "The number or name of the house. Maximum length: 3000 characters.",
            "maxLength": 3000,
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "postalCode": {
            "description": "A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.",
            "type": "string"
          },
          "stateOrProvince": {
            "description": "The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.\n> Required for the US and Canada.",
            "type": "string"
          },
          "street": {
            "description": "The name of the street. Maximum length: 3000 characters.\n> The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.",
            "maxLength": 3000,
            "type": "string"
          }
        },
        "required": [
          "street",
          "houseNumberOrName",
          "city",
          "postalCode",
          "country"
        ],
        "type": "object"
      },
      "FundOrigin": {
        "properties": {
          "billingAddress": {
            "$ref": "#/$defs/Address"
          },
          "shopperEmail": {
            "description": "Email address of the person.",
            "type": "string"
          },
          "shopperName": {
            "$ref": "#/$defs/Name"
          },
          "telephoneNumber": {
            "description": "Phone number of the person",
            "type": "string"
          },
          "walletIdentifier": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Address": {
        "properties": {
          "city": {
            "description": "The name of the city. Maximum length: 3000 characters.",
            "maxLength": 3000,
            "type": "string"
          },
          "country": {
            "description": "The two-character ISO-3166-1 alpha-2 country code. For example, **US**.\n> If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.",
            "type": "string"
          },
          "houseNumberOrName": {
            "description": "The number or name of the house. Maximum length: 3000 characters.",
            "maxLength": 3000,
            "type": "string"
          },
          "postalCode": {
            "description": "A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.",
            "type": "string"
          },
          "stateOrProvince": {
            "description": "The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.\n> Required for the US and Canada.",
            "type": "string"
          },
          "street": {
            "description": "The name of the street. Maximum length: 3000 characters.\n> The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.",
            "maxLength": 3000,
            "type": "string"
          }
        },
        "required": [
          "street",
          "houseNumberOrName",
          "city",
          "postalCode",
          "country"
        ],
        "type": "object"
      },
      "Name": {
        "properties": {
          "firstName": {
            "description": "The first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The last name.",
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object"
      },
      "FundRecipient": {
        "properties": {
          "billingAddress": {
            "$ref": "#/$defs/Address"
          },
          "paymentMethod": {
            "$ref": "#/$defs/CardDetails"
          },
          "shopperEmail": {
            "description": "the email address of the person",
            "type": "string"
          },
          "shopperName": {
            "$ref": "#/$defs/Name"
          },
          "shopperReference": {
            "description": "Required for recurring payments. \nYour reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.\n> Your reference must not include personally identifiable information (PII), for example name or email address.",
            "maxLength": 256,
            "minLength": 3,
            "type": "string"
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string"
          },
          "subMerchant": {
            "$ref": "#/$defs/SubMerchant"
          },
          "telephoneNumber": {
            "description": "the telephone number of the person",
            "type": "string"
          },
          "walletIdentifier": {
            "description": "indicates where the money is going",
            "type": "string"
          },
          "walletOwnerTaxId": {
            "description": "indicates the tax identifier of the fund recepient",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CardDetails": {
        "additionalProperties": false,
        "properties": {
          "brand": {
            "description": "Secondary brand of the card. For example: **plastix**, **hmclub**.",
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "cupsecureplus.smscode": {
            "deprecated": true,
            "type": "string"
          },
          "cvc": {
            "description": "The card verification code. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).",
            "type": "string"
          },
          "encryptedCardNumber": {
            "description": "The encrypted card number.",
            "maxLength": 15000,
            "type": "string"
          },
          "encryptedExpiryMonth": {
            "description": "The encrypted card expiry month.",
            "maxLength": 15000,
            "type": "string"
          },
          "encryptedExpiryYear": {
            "description": "The encrypted card expiry year.",
            "maxLength": 15000,
            "type": "string"
          },
          "encryptedSecurityCode": {
            "description": "The encrypted card verification code.",
            "maxLength": 15000,
            "type": "string"
          },
          "expiryMonth": {
            "description": "The card expiry month. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).",
            "type": "string"
          },
          "expiryYear": {
            "description": "The card expiry year. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).",
            "type": "string"
          },
          "fundingSource": {
            "description": "The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.",
            "enum": [
              "credit",
              "debit"
            ],
            "type": "string"
          },
          "holderName": {
            "description": "The name of the card holder.",
            "type": "string"
          },
          "networkPaymentReference": {
            "description": "The network token reference. This is the [`networkTxReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_additionalData-ResponseAdditionalDataCommon-networkTxReference) from the response to the first payment.",
            "type": "string"
          },
          "number": {
            "description": "The card number. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "shopperNotificationReference": {
            "description": "The `shopperNotificationReference` returned in the response when you requested to notify the shopper. Used only for recurring payments in India.",
            "type": "string"
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "threeDS2SdkVersion": {
            "description": "Required for mobile integrations. Version of the 3D Secure 2 mobile SDK.",
            "maxLength": 12,
            "type": "string"
          },
          "type": {
            "default": "scheme",
            "description": "Default payment method details. Common for scheme payment methods, and for simple payment method details.",
            "enum": [
              "bcmc",
              "scheme",
              "networkToken",
              "giftcard",
              "card"
            ],
            "type": "string"
          }
        },
        "title": "Card",
        "type": "object"
      },
      "SubMerchant": {
        "properties": {
          "city": {
            "description": "The city of the sub-merchant's address.\n* Format: Alphanumeric\n* Maximum length: 13 characters",
            "type": "string"
          },
          "country": {
            "description": "The three-letter country code of the sub-merchant's address. For example, **BRA** for Brazil. \n* Format: [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)\n* Fixed length: 3 characters",
            "type": "string"
          },
          "mcc": {
            "description": "The sub-merchant's 4-digit Merchant Category Code (MCC). \n* Format: Numeric\n* Fixed length: 4 digits",
            "type": "string"
          },
          "name": {
            "description": "The name of the sub-merchant. Based on scheme specifications, this value will overwrite the shopper statement  that will appear in the card statement.\n* Format: Alphanumeric\n* Maximum length: 22 characters",
            "type": "string"
          },
          "taxId": {
            "description": "The tax ID of the sub-merchant.\n* Format: Numeric\n* Fixed length: 11 digits for the CPF or 14 digits for the CNPJ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Installments": {
        "properties": {
          "plan": {
            "description": "The installment plan, used for [card installments in Japan](https://docs.adyen.com/payment-methods/cards/credit-card-installments#make-a-payment-japan). By default, this is set to **regular**. Possible values:\n* **regular**\n* **revolving**\n",
            "enum": [
              "regular",
              "revolving"
            ],
            "type": "string",
            "x-addedInVersion": "64"
          },
          "value": {
            "description": "Defines the number of installments. Its value needs to be greater than zero.\n\nUsually, the maximum allowed number of installments is capped. For example, it may not be possible to split a payment in more than 24 installments. The acquirer sets this upper limit, so its value may vary.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "LineItem": {
        "properties": {
          "amountExcludingTax": {
            "description": "Item amount excluding the tax, in minor units.",
            "format": "int64",
            "type": "integer"
          },
          "amountIncludingTax": {
            "description": "Item amount including the tax, in minor units.",
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "description": "Description of the line item.",
            "type": "string"
          },
          "id": {
            "description": "ID of the line item.",
            "type": "string"
          },
          "imageUrl": {
            "description": "Link to the picture of the purchased item.",
            "type": "string"
          },
          "itemCategory": {
            "description": "Item category, used by the payment methods PayPal and Ratepay.",
            "type": "string"
          },
          "productUrl": {
            "description": "Link to the purchased item.",
            "type": "string"
          },
          "quantity": {
            "description": "Number of items.",
            "format": "int64",
            "type": "integer"
          },
          "taxAmount": {
            "description": "Tax amount, in minor units.",
            "format": "int64",
            "type": "integer"
          },
          "taxPercentage": {
            "description": "Tax percentage, in minor units.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Mandate": {
        "properties": {
          "amount": {
            "description": "The billing amount (in minor units) of the recurring transactions.",
            "type": "string"
          },
          "amountRule": {
            "description": "The limitation rule of the billing amount.\n\nPossible values:\n * **max**: The transaction amount can not exceed the `amount`.\n\n * **exact**: The transaction amount should be the same as the `amount`.\n\n",
            "enum": [
              "max",
              "exact"
            ],
            "type": "string"
          },
          "billingAttemptsRule": {
            "description": "The rule to specify the period, within which the recurring debit can happen, relative to the mandate recurring date.\n\nPossible values:\n\n * **on**: On a specific date.\n\n * **before**:  Before and on a specific date.\n\n * **after**: On and after a specific date.\n\n",
            "enum": [
              "on",
              "before",
              "after"
            ],
            "type": "string"
          },
          "billingDay": {
            "description": "The number of the day, on which the recurring debit can happen. Should be within the same calendar month as the mandate recurring date.\n\nPossible values: 1-31 based on the `frequency`.",
            "type": "string"
          },
          "endsAt": {
            "description": "End date of the billing plan, in YYYY-MM-DD format.",
            "type": "string"
          },
          "frequency": {
            "description": "The frequency with which a shopper should be charged.\n\nPossible values: **daily**, **weekly**, **biWeekly**, **monthly**, **quarterly**, **halfYearly**, **yearly**.",
            "enum": [
              "adhoc",
              "daily",
              "weekly",
              "biWeekly",
              "monthly",
              "quarterly",
              "halfYearly",
              "yearly"
            ],
            "type": "string"
          },
          "remarks": {
            "description": "The message shown by UPI to the shopper on the approval screen.",
            "type": "string"
          },
          "startsAt": {
            "description": "Start date of the billing plan, in YYYY-MM-DD format. By default, the transaction date.",
            "type": "string"
          }
        },
        "required": [
          "frequency",
          "amount",
          "endsAt"
        ],
        "type": "object"
      },
      "MerchantRiskIndicator": {
        "properties": {
          "addressMatch": {
            "description": "Whether the chosen delivery address is identical to the billing address.",
            "type": "boolean"
          },
          "deliveryAddressIndicator": {
            "description": "Indicator regarding the delivery address.\nAllowed values:\n* `shipToBillingAddress`\n* `shipToVerifiedAddress`\n* `shipToNewAddress`\n* `shipToStore`\n* `digitalGoods`\n* `goodsNotShipped`\n* `other`",
            "enum": [
              "shipToBillingAddress",
              "shipToVerifiedAddress",
              "shipToNewAddress",
              "shipToStore",
              "digitalGoods",
              "goodsNotShipped",
              "other"
            ],
            "type": "string"
          },
          "deliveryEmail": {
            "deprecated": true,
            "description": "The delivery email address (for digital goods).",
            "type": "string",
            "x-deprecatedInVersion": "68",
            "x-deprecatedMessage": "Use `deliveryEmailAddress` instead."
          },
          "deliveryEmailAddress": {
            "description": "For Electronic delivery, the email address to which the merchandise was delivered. Maximum length: 254 characters.",
            "maxLength": 254,
            "type": "string",
            "x-addedInVersion": "68"
          },
          "deliveryTimeframe": {
            "description": "The estimated delivery time for the shopper to receive the goods.\nAllowed values:\n* `electronicDelivery`\n* `sameDayShipping`\n* `overnightShipping`\n* `twoOrMoreDaysShipping`",
            "enum": [
              "electronicDelivery",
              "sameDayShipping",
              "overnightShipping",
              "twoOrMoreDaysShipping"
            ],
            "type": "string"
          },
          "giftCardAmount": {
            "$ref": "#/$defs/Amount"
          },
          "giftCardCount": {
            "description": "For prepaid or gift card purchase, total count of individual prepaid or gift cards/codes purchased.",
            "format": "int32",
            "type": "integer"
          },
          "giftCardCurr": {
            "description": "For prepaid or gift card purchase, [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) three-digit currency code of the gift card, other than those listed in Table A.5 of the EMVCo 3D Secure Protocol and Core Functions Specification.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "preOrderDate": {
            "description": "For pre-order purchases, the expected date this product will be available to the shopper.",
            "format": "date-time",
            "type": "string"
          },
          "preOrderPurchase": {
            "description": "Indicator for whether this transaction is for pre-ordering a product.",
            "type": "boolean"
          },
          "preOrderPurchaseInd": {
            "description": "Indicates whether Cardholder is placing an order for merchandise with a future availability or release date.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "reorderItems": {
            "description": "Indicator for whether the shopper has already purchased the same items in the past.",
            "type": "boolean"
          },
          "reorderItemsInd": {
            "description": "Indicates whether the cardholder is reordering previously purchased merchandise.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "shipIndicator": {
            "description": "Indicates shipping method chosen for the transaction.",
            "type": "string",
            "x-addedInVersion": "68"
          }
        },
        "type": "object"
      },
      "ThreeDSecureData": {
        "properties": {
          "authenticationResponse": {
            "description": "In 3D Secure 1, the authentication response if the shopper was redirected.\n\nIn 3D Secure 2, this is the `transStatus` from the challenge result. If the transaction was frictionless, omit this parameter.",
            "enum": [
              "Y",
              "N",
              "U",
              "A"
            ],
            "type": "string"
          },
          "cavv": {
            "contentEncoding": "base64",
            "description": "The cardholder authentication value (base64 encoded, 20 bytes in a decoded form).",
            "type": "string"
          },
          "cavvAlgorithm": {
            "description": "The CAVV algorithm used. Include this only for 3D Secure 1.",
            "type": "string"
          },
          "challengeCancel": {
            "description": "Indicator informing the Access Control Server (ACS) and the Directory Server (DS) that the authentication has been cancelled. For possible values, refer to [3D Secure API reference](https://docs.adyen.com/online-payments/3d-secure/api-reference#mpidata).",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06",
              "07"
            ],
            "type": "string",
            "x-addedInVersion": "67"
          },
          "directoryResponse": {
            "description": "In 3D Secure 1, this is the enrollment response from the 3D directory server.\n\nIn 3D Secure 2, this is the `transStatus` from the `ARes`.",
            "enum": [
              "A",
              "C",
              "D",
              "I",
              "N",
              "R",
              "U",
              "Y"
            ],
            "type": "string"
          },
          "dsTransID": {
            "description": "Supported for 3D Secure 2. The unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction.",
            "type": "string",
            "x-addedInVersion": "40"
          },
          "eci": {
            "description": "The electronic commerce indicator.",
            "type": "string"
          },
          "riskScore": {
            "description": "Risk score calculated by Directory Server (DS). Required for Cartes Bancaires integrations.",
            "type": "string",
            "x-addedInVersion": "67"
          },
          "threeDSVersion": {
            "description": "The version of the 3D Secure protocol.",
            "type": "string",
            "x-addedInVersion": "40"
          },
          "tokenAuthenticationVerificationValue": {
            "contentEncoding": "base64",
            "description": "Network token authentication verification value (TAVV). The network token cryptogram.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "transStatusReason": {
            "description": "Provides information on why the `transStatus` field has the specified value. For possible values, refer to [our docs](https://docs.adyen.com/online-payments/3d-secure/api-reference#possible-transstatusreason-values).",
            "type": "string",
            "x-addedInVersion": "67"
          },
          "xid": {
            "contentEncoding": "base64",
            "description": "Supported for 3D Secure 1. The transaction identifier (Base64-encoded, 20 bytes in a decoded form).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EncryptedOrderData": {
        "properties": {
          "orderData": {
            "description": "The encrypted order data.",
            "type": "string"
          },
          "pspReference": {
            "description": "The `pspReference` that belongs to the order.",
            "type": "string"
          }
        },
        "required": [
          "pspReference",
          "orderData"
        ],
        "type": "object"
      },
      "AchDetails": {
        "additionalProperties": false,
        "properties": {
          "bankAccountNumber": {
            "description": "The bank account number (without separators).",
            "type": "string"
          },
          "bankAccountType": {
            "description": "The bank account type (checking, savings...).",
            "enum": [
              "balance",
              "checking",
              "deposit",
              "general",
              "other",
              "payment",
              "savings"
            ],
            "type": "string"
          },
          "bankLocationId": {
            "description": "The bank routing number of the account. The field value is `nil` in most cases.",
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "encryptedBankAccountNumber": {
            "description": "Encrypted bank account number. The bank account number (without separators).",
            "type": "string"
          },
          "encryptedBankLocationId": {
            "description": "Encrypted location id. The bank routing number of the account. The field value is `nil` in most cases.",
            "type": "string"
          },
          "ownerName": {
            "description": "The name of the bank account holder.\nIf you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:\n* χ12 is converted to ch12.\n* üA is converted to euA.\n* Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.\nAfter replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:\n* John17 - allowed.\n* J17 - allowed.\n* 171 - not allowed.\n* John-7 - allowed.\n> If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "ach",
            "description": "**ach**",
            "enum": [
              "ach",
              "ach_plaid"
            ],
            "type": "string"
          }
        },
        "required": [
          "bankAccountNumber"
        ],
        "title": "ACH Direct Debit",
        "type": "object"
      },
      "AfterpayDetails": {
        "additionalProperties": false,
        "properties": {
          "billingAddress": {
            "description": "The address where to send the invoice.",
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "deliveryAddress": {
            "description": "The address where the goods should be delivered.",
            "type": "string"
          },
          "personalDetails": {
            "description": "Shopper name, date of birth, phone number, and email address.",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "afterpay_default",
            "description": "**afterpay_default**",
            "enum": [
              "afterpay_default",
              "afterpaytouch",
              "afterpay_b2b",
              "clearpay"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Afterpay",
        "type": "object"
      },
      "AmazonPayDetails": {
        "additionalProperties": false,
        "properties": {
          "amazonPayToken": {
            "description": "This is the `amazonPayToken` that you obtained from the [Get Checkout Session](https://amazon-pay-acquirer-guide.s3-eu-west-1.amazonaws.com/v1/amazon-pay-api-v2/checkout-session.html#get-checkout-session) response. This token is used for API only integration specifically.",
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "checkoutSessionId": {
            "description": "The `checkoutSessionId` is used to identify the checkout session at the Amazon Pay side. This field is required only for drop-in and components integration, where it replaces the amazonPayToken.",
            "type": "string"
          },
          "type": {
            "default": "amazonpay",
            "description": "**amazonpay**",
            "enum": [
              "amazonpay"
            ],
            "type": "string"
          }
        },
        "title": "Amazon Pay",
        "type": "object"
      },
      "AndroidPayDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "type": {
            "default": "androidpay",
            "description": "**androidpay**",
            "enum": [
              "androidpay"
            ],
            "type": "string"
          }
        },
        "title": "Android Pay",
        "type": "object"
      },
      "ApplePayDetails": {
        "additionalProperties": false,
        "properties": {
          "applePayToken": {
            "description": "The stringified and base64 encoded `paymentData` you retrieved from the Apple framework.",
            "maxLength": 10000,
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "fundingSource": {
            "description": "The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.",
            "enum": [
              "credit",
              "debit"
            ],
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "applepay",
            "description": "**applepay**",
            "enum": [
              "applepay"
            ],
            "type": "string"
          }
        },
        "required": [
          "applePayToken"
        ],
        "title": "Apple Pay",
        "type": "object"
      },
      "BacsDirectDebitDetails": {
        "additionalProperties": false,
        "properties": {
          "bankAccountNumber": {
            "description": "The bank account number (without separators).",
            "type": "string",
            "x-addedInVersion": "65"
          },
          "bankLocationId": {
            "description": "The bank routing number of the account.",
            "type": "string",
            "x-addedInVersion": "65"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "holderName": {
            "description": "The name of the bank account holder.",
            "type": "string",
            "x-addedInVersion": "65"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "directdebit_GB",
            "description": "**directdebit_GB**",
            "enum": [
              "directdebit_GB"
            ],
            "type": "string"
          }
        },
        "title": "BACS Direct Debit",
        "type": "object"
      },
      "BillDeskDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "issuer": {
            "description": "The issuer id of the shopper's selected bank.",
            "type": "string"
          },
          "type": {
            "description": "**billdesk**",
            "enum": [
              "billdesk_online",
              "billdesk_wallet"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "issuer"
        ],
        "title": "BillDesk",
        "type": "object"
      },
      "BlikDetails": {
        "additionalProperties": false,
        "properties": {
          "blikCode": {
            "description": "BLIK code consisting of 6 digits.",
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "description": "**blik**",
            "enum": [
              "blik"
            ],
            "type": "string"
          }
        },
        "title": "BLIK",
        "type": "object"
      },
      "CellulantDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "issuer": {
            "description": "The Cellulant issuer.",
            "type": "string"
          },
          "type": {
            "default": "cellulant",
            "description": "**Cellulant**",
            "enum": [
              "cellulant"
            ],
            "type": "string"
          }
        },
        "title": "Cellulant",
        "type": "object"
      },
      "DokuDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "firstName": {
            "description": "The shopper's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The shopper's last name.",
            "type": "string"
          },
          "shopperEmail": {
            "description": "The shopper's email.",
            "type": "string"
          },
          "type": {
            "description": "**doku**",
            "enum": [
              "doku_mandiri_va",
              "doku_cimb_va",
              "doku_danamon_va",
              "doku_bni_va",
              "doku_permata_lite_atm",
              "doku_bri_va",
              "doku_bca_va",
              "doku_alfamart",
              "doku_indomaret",
              "doku_wallet",
              "doku_ovo"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "firstName",
          "lastName",
          "shopperEmail"
        ],
        "title": "Doku",
        "type": "object"
      },
      "DotpayDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "issuer": {
            "description": "The Dotpay issuer value of the shopper's selected bank. Set this to an **id** of a Dotpay issuer to preselect it.",
            "type": "string"
          },
          "type": {
            "default": "dotpay",
            "description": "**dotpay**",
            "enum": [
              "dotpay"
            ],
            "type": "string"
          }
        },
        "required": [
          "issuer"
        ],
        "title": "Dotpay",
        "type": "object"
      },
      "DragonpayDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "issuer": {
            "description": "The Dragonpay issuer value of the shopper's selected bank. Set this to an **id** of a Dragonpay issuer to preselect it.",
            "type": "string"
          },
          "shopperEmail": {
            "description": "The shopper’s email address.",
            "type": "string"
          },
          "type": {
            "description": "**dragonpay**",
            "enum": [
              "dragonpay_ebanking",
              "dragonpay_otc_banking",
              "dragonpay_otc_non_banking",
              "dragonpay_otc_philippines"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "issuer"
        ],
        "title": "Dragonpay",
        "type": "object"
      },
      "EcontextVoucherDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "firstName": {
            "description": "The shopper's first name.",
            "type": "string"
          },
          "lastName": {
            "description": "The shopper's last name.",
            "type": "string"
          },
          "shopperEmail": {
            "description": "The shopper's email.",
            "type": "string"
          },
          "telephoneNumber": {
            "description": "The shopper's contact number. It must have an international number format, for example **+31 20 779 1846**. Formats like **+31 (0)20 779 1846** or **0031 20 779 1846** are not accepted.",
            "type": "string"
          },
          "type": {
            "description": "**econtextvoucher**",
            "enum": [
              "econtext_seveneleven",
              "econtext_stores"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "firstName",
          "lastName",
          "shopperEmail",
          "telephoneNumber"
        ],
        "title": "Voucher",
        "type": "object"
      },
      "GenericIssuerPaymentMethodDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "issuer": {
            "description": "The issuer id of the shopper's selected bank.",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "description": "**genericissuer**",
            "enum": [
              "onlineBanking_PL",
              "eps",
              "onlineBanking_SK",
              "onlineBanking_CZ"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "issuer"
        ],
        "title": "Stored Payment Method",
        "type": "object"
      },
      "GiropayDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "giropay",
            "description": "**giropay**",
            "enum": [
              "giropay"
            ],
            "type": "string"
          }
        },
        "title": "Giropay",
        "type": "object"
      },
      "GooglePayDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "fundingSource": {
            "description": "The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.",
            "enum": [
              "credit",
              "debit"
            ],
            "type": "string"
          },
          "googlePayCardNetwork": {
            "description": "The selected payment card network. ",
            "type": "string"
          },
          "googlePayToken": {
            "description": "The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData) `PaymentData` response.",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "googlepay",
            "description": "**googlepay**, **paywithgoogle**",
            "enum": [
              "googlepay"
            ],
            "type": "string"
          }
        },
        "required": [
          "googlePayToken"
        ],
        "title": "Google Pay",
        "type": "object"
      },
      "IdealDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "issuer": {
            "description": "The iDEAL issuer value of the shopper's selected bank. Set this to an **id** of an iDEAL issuer to preselect it.",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "ideal",
            "description": "**ideal**",
            "enum": [
              "ideal"
            ],
            "type": "string"
          }
        },
        "required": [
          "issuer"
        ],
        "title": "iDEAL",
        "type": "object"
      },
      "KlarnaDetails": {
        "additionalProperties": false,
        "properties": {
          "billingAddress": {
            "description": "The address where to send the invoice.",
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "deliveryAddress": {
            "description": "The address where the goods should be delivered.",
            "type": "string"
          },
          "personalDetails": {
            "description": "Shopper name, date of birth, phone number, and email address.",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "subtype": {
            "description": "The type of flow to initiate.",
            "type": "string"
          },
          "type": {
            "default": "klarna",
            "description": "**klarna**",
            "enum": [
              "klarna",
              "klarnapayments",
              "klarnapayments_account",
              "klarnapayments_b2b",
              "klarna_paynow",
              "klarna_account",
              "klarna_b2b"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Klarna",
        "type": "object"
      },
      "MasterpassDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "fundingSource": {
            "description": "The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.",
            "enum": [
              "credit",
              "debit"
            ],
            "type": "string"
          },
          "masterpassTransactionId": {
            "description": "The Masterpass transaction ID.",
            "type": "string"
          },
          "type": {
            "default": "masterpass",
            "description": "**masterpass**",
            "enum": [
              "masterpass"
            ],
            "type": "string"
          }
        },
        "required": [
          "masterpassTransactionId"
        ],
        "title": "Masterpass",
        "type": "object"
      },
      "MbwayDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "shopperEmail": {
            "description": "",
            "type": "string"
          },
          "telephoneNumber": {
            "description": "",
            "type": "string"
          },
          "type": {
            "default": "mbway",
            "description": "**mbway**",
            "enum": [
              "mbway"
            ],
            "type": "string"
          }
        },
        "required": [
          "telephoneNumber",
          "shopperEmail"
        ],
        "title": "MBWay",
        "type": "object"
      },
      "MobilePayDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "type": {
            "default": "mobilepay",
            "description": "**mobilepay**",
            "enum": [
              "mobilepay"
            ],
            "type": "string"
          }
        },
        "title": "MobilePay",
        "type": "object"
      },
      "MolPayDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "issuer": {
            "description": "The shopper's bank. Specify this with the issuer value that corresponds to this bank.",
            "type": "string"
          },
          "type": {
            "description": "**molpay**",
            "enum": [
              "molpay_ebanking_fpx_MY",
              "molpay_ebanking_TH"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "issuer"
        ],
        "title": "MOLPay",
        "type": "object"
      },
      "OpenInvoiceDetails": {
        "additionalProperties": false,
        "properties": {
          "billingAddress": {
            "description": "The address where to send the invoice.",
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "deliveryAddress": {
            "description": "The address where the goods should be delivered.",
            "type": "string"
          },
          "personalDetails": {
            "description": "Shopper name, date of birth, phone number, and email address.",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "openinvoice",
            "description": "**openinvoice**",
            "enum": [
              "openinvoice",
              "afterpay_directdebit",
              "atome_pos"
            ],
            "type": "string"
          }
        },
        "title": "Open Invoice",
        "type": "object"
      },
      "PayPalDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "orderID": {
            "description": "The unique ID associated with the order.",
            "type": "string"
          },
          "payeePreferred": {
            "description": "IMMEDIATE_PAYMENT_REQUIRED or UNRESTRICTED",
            "type": "string"
          },
          "payerID": {
            "description": "The unique ID associated with the payer.",
            "type": "string"
          },
          "payerSelected": {
            "description": "PAYPAL or PAYPAL_CREDIT",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "subtype": {
            "description": "The type of flow to initiate.",
            "enum": [
              "redirect",
              "sdk"
            ],
            "type": "string"
          },
          "type": {
            "default": "paypal",
            "description": "**paypal**",
            "enum": [
              "paypal"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "PayPal",
        "type": "object"
      },
      "PayUUpiDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "shopperNotificationReference": {
            "description": "The `shopperNotificationReference` returned in the response when you requested to notify the shopper. Used for recurring payment only.",
            "type": "string"
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "payu_IN_upi",
            "description": "**payu_IN_upi**",
            "enum": [
              "payu_IN_upi"
            ],
            "type": "string"
          },
          "virtualPaymentAddress": {
            "description": "The virtual payment address for UPI.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "PayU",
        "type": "object"
      },
      "PayWithGoogleDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "fundingSource": {
            "description": "The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.",
            "enum": [
              "credit",
              "debit"
            ],
            "type": "string"
          },
          "googlePayToken": {
            "description": "The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData) `PaymentData` response.",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "paywithgoogle",
            "description": "**paywithgoogle**",
            "enum": [
              "paywithgoogle"
            ],
            "type": "string"
          }
        },
        "required": [
          "googlePayToken"
        ],
        "title": "Google Pay",
        "type": "object"
      },
      "PaymentDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "type": {
            "description": "The payment method type.",
            "enum": [
              "alipay",
              "multibanco",
              "bankTransfer_IBAN",
              "paybright",
              "paynow",
              "affirm",
              "affirm_pos",
              "trustly",
              "trustlyvector",
              "oney",
              "facilypay",
              "facilypay_3x",
              "facilypay_4x",
              "facilypay_6x",
              "facilypay_10x",
              "facilypay_12x",
              "unionpay",
              "kcp_banktransfer",
              "kcp_payco",
              "kcp_creditcard",
              "wechatpaySDK",
              "wechatpayQR",
              "wechatpayWeb",
              "molpay_boost",
              "wallet_IN",
              "payu_IN_cashcard",
              "payu_IN_nb",
              "upi_qr",
              "paytm",
              "molpay_ebanking_VN",
              "paybybank",
              "ebanking_FI",
              "molpay_ebanking_MY",
              "molpay_ebanking_direct_MY",
              "swish",
              "pix",
              "walley",
              "walley_b2b",
              "alma",
              "paypo",
              "molpay_fpx",
              "konbini",
              "directEbanking",
              "boletobancario",
              "neteller",
              "paysafecard",
              "cashticket",
              "ikano",
              "karenmillen",
              "oasis",
              "warehouse",
              "primeiropay_boleto",
              "mada",
              "benefit",
              "knet",
              "omannet",
              "gopay_wallet",
              "kcp_naverpay",
              "onlinebanking_IN",
              "fawry",
              "atome",
              "moneybookers",
              "naps",
              "nordea",
              "boletobancario_bradesco",
              "boletobancario_itau",
              "boletobancario_santander",
              "boletobancario_bancodobrasil",
              "boletobancario_hsbc",
              "molpay_maybank2u",
              "molpay_cimb",
              "molpay_rhb",
              "molpay_amb",
              "molpay_hlb",
              "molpay_affin_epg",
              "molpay_bankislam",
              "molpay_publicbank",
              "fpx_agrobank",
              "touchngo",
              "maybank2u_mae",
              "duitnow",
              "promptpay",
              "twint_pos",
              "alipay_hk",
              "alipay_hk_web",
              "alipay_hk_wap",
              "alipay_wap",
              "balanceplatform"
            ],
            "type": "string"
          }
        },
        "title": "Payment Details",
        "type": "object"
      },
      "RatepayDetails": {
        "additionalProperties": false,
        "properties": {
          "billingAddress": {
            "description": "The address where to send the invoice.",
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "deliveryAddress": {
            "description": "The address where the goods should be delivered.",
            "type": "string"
          },
          "personalDetails": {
            "description": "Shopper name, date of birth, phone number, and email address.",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "ratepay",
            "description": "**ratepay**",
            "enum": [
              "ratepay",
              "ratepay_directdebit"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Ratepay",
        "type": "object"
      },
      "SamsungPayDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "fundingSource": {
            "description": "The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.",
            "enum": [
              "credit",
              "debit"
            ],
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "samsungPayToken": {
            "description": "The payload you received from the Samsung Pay SDK response.",
            "type": "string"
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "samsungpay",
            "description": "**samsungpay**",
            "enum": [
              "samsungpay"
            ],
            "type": "string"
          }
        },
        "required": [
          "samsungPayToken"
        ],
        "title": "Samsung Pay",
        "type": "object"
      },
      "SepaDirectDebitDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "iban": {
            "description": "The International Bank Account Number (IBAN).",
            "type": "string"
          },
          "ownerName": {
            "description": "The name of the bank account holder.",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "sepadirectdebit",
            "description": "**sepadirectdebit**",
            "enum": [
              "sepadirectdebit",
              "sepadirectdebit_amazonpay"
            ],
            "type": "string"
          }
        },
        "required": [
          "iban",
          "ownerName"
        ],
        "title": "SEPA Direct Debit",
        "type": "object"
      },
      "StoredPaymentMethodDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "description": "The payment method type.",
            "enum": [
              "bcmc_mobile",
              "bcmc_mobile_QR",
              "bcmc_mobile_app",
              "momo_wallet",
              "momo_wallet_app",
              "twint",
              "paymaya_wallet",
              "grabpay_SG",
              "grabpay_MY",
              "grabpay_TH",
              "grabpay_ID",
              "grabpay_VN",
              "grabpay_PH",
              "oxxo",
              "gcash",
              "dana",
              "kakaopay",
              "truemoney"
            ],
            "type": "string"
          }
        },
        "title": "Stored Payment Method",
        "type": "object"
      },
      "UpiCollectDetails": {
        "additionalProperties": false,
        "properties": {
          "billingSequenceNumber": {
            "description": "The sequence number for the debit. For example, send **2** if this is the second debit for the subscription. The sequence number is included in the notification sent to the shopper.",
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "shopperNotificationReference": {
            "description": "The `shopperNotificationReference` returned in the response when you requested to notify the shopper. Used for recurring payment only.",
            "type": "string"
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "upi_collect",
            "description": "**upi_collect**",
            "enum": [
              "upi_collect"
            ],
            "type": "string"
          },
          "virtualPaymentAddress": {
            "description": "The virtual payment address for UPI.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "billingSequenceNumber"
        ],
        "title": "UPI Collect",
        "type": "object"
      },
      "UpiIntentDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "shopperNotificationReference": {
            "description": "The `shopperNotificationReference` returned in the response when you requested to notify the shopper. Used for recurring payment only.",
            "type": "string"
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "upi_intent",
            "description": "**upi_intent**",
            "enum": [
              "upi_intent"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "UPI Intent",
        "type": "object"
      },
      "VippsDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "telephoneNumber": {
            "description": "",
            "type": "string"
          },
          "type": {
            "default": "vipps",
            "description": "**vipps**",
            "enum": [
              "vipps"
            ],
            "type": "string"
          }
        },
        "required": [
          "telephoneNumber"
        ],
        "title": "Vipps",
        "type": "object"
      },
      "VisaCheckoutDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "fundingSource": {
            "description": "The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.",
            "enum": [
              "credit",
              "debit"
            ],
            "type": "string"
          },
          "type": {
            "default": "visacheckout",
            "description": "**visacheckout**",
            "enum": [
              "visacheckout"
            ],
            "type": "string"
          },
          "visaCheckoutCallId": {
            "description": "The Visa Click to Pay Call ID value. When your shopper selects a payment and/or a shipping address from Visa Click to Pay, you will receive a Visa Click to Pay Call ID.",
            "type": "string"
          }
        },
        "required": [
          "visaCheckoutCallId"
        ],
        "title": "Visa Checkout",
        "type": "object"
      },
      "WeChatPayDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "type": {
            "default": "wechatpay",
            "description": "**wechatpay**",
            "enum": [
              "wechatpay",
              "wechatpay_pos"
            ],
            "type": "string"
          }
        },
        "title": "WeChat Pay",
        "type": "object"
      },
      "WeChatPayMiniProgramDetails": {
        "additionalProperties": false,
        "properties": {
          "appId": {
            "type": "string"
          },
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "openid": {
            "type": "string"
          },
          "type": {
            "default": "wechatpayMiniProgram",
            "description": "**wechatpayMiniProgram**",
            "enum": [
              "wechatpayMiniProgram"
            ],
            "type": "string"
          }
        },
        "title": "WeChat Pay - Mini Program",
        "type": "object"
      },
      "ZipDetails": {
        "additionalProperties": false,
        "properties": {
          "checkoutAttemptId": {
            "description": "The checkout attempt identifier.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "clickAndCollect": {
            "description": "Set this to **true** if the shopper would like to pick up and collect their order, instead of having the goods delivered to them.",
            "type": "string"
          },
          "recurringDetailReference": {
            "deprecated": true,
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "type": "string",
            "x-deprecatedInVersion": "49",
            "x-deprecatedMessage": "Use `storedPaymentMethodId` instead."
          },
          "storedPaymentMethodId": {
            "description": "This is the `recurringDetailReference` returned in the response when you created the token.",
            "maxLength": 64,
            "type": "string",
            "x-addedInVersion": "49"
          },
          "type": {
            "default": "zip",
            "description": "**zip**",
            "enum": [
              "zip",
              "zip_pos"
            ],
            "type": "string"
          }
        },
        "title": "Zip",
        "type": "object"
      },
      "PlatformChargebackLogic": {
        "properties": {
          "behavior": {
            "description": "The method of handling the chargeback.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**, **deductAccordingToSplitRatio**.",
            "enum": [
              "deductAccordingToSplitRatio",
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type": "string",
            "x-addedInVersion": "68"
          },
          "costAllocationAccount": {
            "description": "The unique identifier of the balance account to which the chargeback fees are booked. By default, the chargeback fees are booked to your liable balance account.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "targetAccount": {
            "description": "The unique identifier of the balance account against which the disputed amount is booked.\n\nRequired if `behavior` is **deductFromOneBalanceAccount**.",
            "type": "string",
            "x-addedInVersion": "68"
          }
        },
        "type": "object"
      },
      "RiskData": {
        "properties": {
          "clientData": {
            "description": "Contains client-side data, like the device fingerprint, cookies, and specific browser settings.",
            "type": "string"
          },
          "customFields": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Any custom fields used as part of the input to configured risk rules.",
            "type": "object",
            "x-addedInVersion": "65"
          },
          "fraudOffset": {
            "description": "An integer value that is added to the normal fraud score. The value can be either positive or negative.",
            "format": "int32",
            "type": "integer",
            "x-addedInVersion": "65"
          },
          "profileReference": {
            "description": "The risk profile to assign to this payment. When left empty, the merchant-level account's default risk profile will be applied.",
            "type": "string",
            "x-addedInVersion": "65"
          }
        },
        "type": "object"
      },
      "Split": {
        "properties": {
          "account": {
            "description": "The unique identifier of the account to which the split amount is booked. Required if `type` is **MarketPlace** or **BalanceAccount**.\n\n* [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic): The [`accountCode`](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccount#request-accountCode) of the account to which the split amount is booked.\n* [Balance Platform](https://docs.adyen.com/marketplaces-and-platforms): The [`balanceAccountId`](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/balanceAccounts/_id_#path-id) of the account to which the split amount is booked.",
            "type": "string"
          },
          "amount": {
            "$ref": "#/$defs/SplitAmount"
          },
          "description": {
            "description": "Your description for the split item.",
            "type": "string"
          },
          "reference": {
            "description": "Your unique reference for the split item.\n\nThis is required if `type` is **MarketPlace** ([Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic)) or **BalanceAccount** ([Balance Platform](https://docs.adyen.com/marketplaces-and-platforms)).\n\nFor the other types, we also recommend providing a **unique** reference so you can reconcile the split and the associated payment in the transaction overview and in the reports.",
            "type": "string"
          },
          "type": {
            "description": "The type of the split item.\n\nPossible values:\n\n* [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic): **Commission**, **Default**, **Marketplace**, **PaymentFee**, **VAT**.\n* [Balance Platform](https://docs.adyen.com/marketplaces-and-platforms): **BalanceAccount**, **Commission**, **Default**, **PaymentFee**, **Remainder**, **Surcharge**, **Tip**, **VAT**.",
            "enum": [
              "AcquiringFees",
              "AdyenCommission",
              "AdyenFees",
              "AdyenMarkup",
              "BalanceAccount",
              "Commission",
              "Default",
              "Interchange",
              "MarketPlace",
              "PaymentFee",
              "Remainder",
              "SchemeFee",
              "Surcharge",
              "Tip",
              "VAT"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "SplitAmount": {
        "properties": {
          "currency": {
            "description": "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). By default, this is the original payment currency.",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "value": {
            "description": "The value of the split amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ThreeDS2RequestFields": {
        "properties": {
          "acctInfo": {
            "$ref": "#/$defs/AcctInfo"
          },
          "acctType": {
            "description": "Indicates the type of account. For example, for a multi-account card product. Length: 2 characters. Allowed values:\n* **01** — Not applicable\n* **02** — Credit\n* **03** — Debit",
            "enum": [
              "01",
              "02",
              "03"
            ],
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "x-addedInVersion": "68"
          },
          "acquirerBIN": {
            "description": "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only). The acquiring BIN enrolled for 3D Secure 2. This string should match the value that you will use in the authorisation. Use 123456 on the Test platform.",
            "type": "string",
            "x-addedInVersion": "49"
          },
          "acquirerMerchantID": {
            "description": "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only). The merchantId that is enrolled for 3D Secure 2 by the merchant's acquirer. This string should match the value that you will use in the authorisation. Use 123456 on the Test platform.",
            "type": "string",
            "x-addedInVersion": "49"
          },
          "addrMatch": {
            "description": "Indicates whether the Cardholder Shipping Address and Cardholder Billing Address are the same. Allowed values:\n* **Y** — Shipping Address matches Billing Address.\n* **N** — Shipping Address does not match Billing Address.",
            "enum": [
              "Y",
              "N"
            ],
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "x-addedInVersion": "68"
          },
          "authenticationOnly": {
            "default": false,
            "deprecated": true,
            "description": "If set to true, you will only perform the [3D Secure 2 authentication](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only), and not the payment authorisation.",
            "type": "boolean",
            "x-deprecatedInVersion": "50",
            "x-deprecatedMessage": "Use `threeDSAuthenticationOnly` instead."
          },
          "challengeIndicator": {
            "deprecated": true,
            "description": "Possibility to specify a preference for receiving a challenge from the issuer.\nAllowed values:\n* `noPreference`\n* `requestNoChallenge`\n* `requestChallenge`\n* `requestChallengeAsMandate`\n",
            "enum": [
              "noPreference",
              "requestNoChallenge",
              "requestChallenge",
              "requestChallengeAsMandate"
            ],
            "type": "string",
            "x-deprecatedInVersion": "68",
            "x-deprecatedMessage": "Use `threeDSRequestorChallengeInd` instead."
          },
          "deviceRenderOptions": {
            "$ref": "#/$defs/DeviceRenderOptions"
          },
          "homePhone": {
            "$ref": "#/$defs/Phone"
          },
          "mcc": {
            "description": "Required for merchants that have been enrolled for 3D Secure 2 by another party than Adyen, mostly [authentication-only integrations](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only). The `mcc` is a four-digit code with which the previously given `acquirerMerchantID` is registered at the scheme.",
            "type": "string",
            "x-addedInVersion": "49"
          },
          "merchantName": {
            "description": "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only). The merchant name that the issuer presents to the shopper if they get a challenge. We recommend to use the same value that you will use in the authorization. Maximum length is 40 characters.\n> Optional for a [full 3D Secure 2 integration](https://docs.adyen.com/online-payments/3d-secure/native-3ds2/api-integration). Use this field if you are enrolled for 3D Secure 2 with us and want to override the merchant name already configured on your account.",
            "type": "string",
            "x-addedInVersion": "49"
          },
          "messageVersion": {
            "description": "The `messageVersion` value indicating the 3D Secure 2 protocol version.",
            "type": "string"
          },
          "mobilePhone": {
            "$ref": "#/$defs/Phone"
          },
          "notificationURL": {
            "description": "URL to where the issuer should send the `CRes`. Required if you are not using components for `channel` **Web** or if you are using classic integration `deviceChannel` **browser**.",
            "type": "string"
          },
          "payTokenInd": {
            "description": "Value **true** indicates that the transaction was de-tokenised prior to being received by the ACS.",
            "type": "boolean",
            "x-addedInVersion": "68"
          },
          "paymentAuthenticationUseCase": {
            "description": "Indicates the type of payment for which an authentication is requested (message extension)",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "platform": {
            "description": "The platform of the shopper.\nAllowed values:\n* `iOS`\n* `android`\n* `browser`",
            "enum": [
              "iOS",
              "android",
              "browser"
            ],
            "type": "string"
          },
          "purchaseInstalData": {
            "description": "Indicates the maximum number of authorisations permitted for instalment payments. Length: 1–3 characters.",
            "maxLength": 3,
            "minLength": 1,
            "type": "string",
            "x-addedInVersion": "68"
          },
          "recurringExpiry": {
            "description": "Date after which no further authorisations shall be performed. Format: YYYYMMDD",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "recurringFrequency": {
            "description": "Indicates the minimum number of days between authorisations. Maximum length: 4 characters.",
            "maxLength": 4,
            "type": "string",
            "x-addedInVersion": "68"
          },
          "sdkAppID": {
            "description": "The `sdkAppID` value as received from the 3D Secure 2 SDK.",
            "type": "string"
          },
          "sdkEphemPubKey": {
            "$ref": "#/$defs/SDKEphemPubKey"
          },
          "sdkMaxTimeout": {
            "default": 60,
            "description": "The maximum amount of time in minutes for the 3D Secure 2 authentication process.\nOptional and only for `deviceChannel` set to **app**. Defaults to **60** minutes.",
            "format": "int32",
            "type": "integer"
          },
          "sdkReferenceNumber": {
            "description": "The `sdkReferenceNumber` value as received from the 3D Secure 2 SDK.",
            "type": "string"
          },
          "sdkTransID": {
            "description": "The `sdkTransID` value as received from the 3D Secure 2 SDK.",
            "type": "string"
          },
          "threeDSCompInd": {
            "description": "Completion indicator for the device fingerprinting.",
            "type": "string"
          },
          "threeDSRequestorAuthenticationInd": {
            "description": "Indicates the type of Authentication request.",
            "type": "string",
            "x-addedInVersion": "68"
          },
          "threeDSRequestorAuthenticationInfo": {
            "$ref": "#/$defs/ThreeDSRequestorAuthenticationInfo"
          },
          "threeDSRequestorChallengeInd": {
            "description": "Indicates whether a challenge is requested for this transaction. Possible values:\n* **01** — No preference\n* **02** — No challenge requested\n* **03** — Challenge requested (3DS Requestor preference)\n* **04** — Challenge requested (Mandate)\n* **05** — No challenge (transactional risk analysis is already performed)\n* **06** — Data Only",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06"
            ],
            "type": "string",
            "x-addedInVersion": "68"
          },
          "threeDSRequestorID": {
            "description": "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only) for Visa. Unique 3D Secure requestor identifier assigned by the Directory Server when you enrol for 3D Secure 2.",
            "type": "string"
          },
          "threeDSRequestorName": {
            "description": "Required for [authentication-only integration](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only) for Visa. Unique 3D Secure requestor name assigned by the Directory Server when you enrol for 3D Secure 2.",
            "type": "string"
          },
          "threeDSRequestorPriorAuthenticationInfo": {
            "$ref": "#/$defs/ThreeDSRequestorPriorAuthenticationInfo"
          },
          "threeDSRequestorURL": {
            "description": "URL of the (customer service) website that will be shown to the shopper in case of technical errors during the 3D Secure 2 process.",
            "type": "string"
          },
          "transType": {
            "description": "Identifies the type of transaction being authenticated. Length: 2 characters. Allowed values:\n* **01** — Goods/Service Purchase\n* **03** — Check Acceptance\n* **10** — Account Funding\n* **11** — Quasi-Cash Transaction\n* **28** — Prepaid Activation and Load",
            "enum": [
              "01",
              "03",
              "10",
              "11",
              "28"
            ],
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "x-addedInVersion": "68"
          },
          "transactionType": {
            "description": "Identify the type of the transaction being authenticated.",
            "enum": [
              "goodsOrServicePurchase",
              "checkAcceptance",
              "accountFunding",
              "quasiCashTransaction",
              "prepaidActivationAndLoad"
            ],
            "type": "string",
            "x-addedInVersion": "50"
          },
          "whiteListStatus": {
            "description": "The `whiteListStatus` value returned from a previous 3D Secure 2 transaction, only applicable for 3D Secure 2 protocol version 2.2.0.",
            "type": "string",
            "x-addedInVersion": "49"
          },
          "workPhone": {
            "$ref": "#/$defs/Phone"
          }
        },
        "type": "object"
      },
      "AcctInfo": {
        "properties": {
          "chAccAgeInd": {
            "description": "Length of time that the cardholder has had the account with the 3DS Requestor. \nAllowed values:\n* **01** — No account\n* **02** — Created during this transaction\n* **03** — Less than 30 days\n* **04** — 30–60 days\n* **05** — More than 60 days",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05"
            ],
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "chAccChange": {
            "description": "Date that the cardholder’s account with the 3DS Requestor was last changed, including Billing or Shipping address, new payment account, or new user(s) added. \nFormat: **YYYYMMDD**",
            "type": "string"
          },
          "chAccChangeInd": {
            "description": "Length of time since the cardholder’s account information with the 3DS Requestor was last changed, including Billing or Shipping address, new payment account, or new user(s) added. \nAllowed values:\n* **01** — Changed during this transaction\n* **02** — Less than 30 days\n* **03** — 30–60 days\n* **04** — More than 60 days",
            "enum": [
              "01",
              "02",
              "03",
              "04"
            ],
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "chAccPwChange": {
            "description": "Date that cardholder’s account with the 3DS Requestor had a password change or account reset. \nFormat: **YYYYMMDD**",
            "type": "string"
          },
          "chAccPwChangeInd": {
            "description": "Indicates the length of time since the cardholder’s account with the 3DS Requestor had a password change or account reset. \nAllowed values:\n* **01** — No change\n* **02** — Changed during this transaction\n* **03** — Less than 30 days\n* **04** — 30–60 days\n* **05** — More than 60 days",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05"
            ],
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "chAccString": {
            "description": "Date that the cardholder opened the account with the 3DS Requestor. \nFormat: **YYYYMMDD**",
            "type": "string"
          },
          "nbPurchaseAccount": {
            "description": "Number of purchases with this cardholder account during the previous six months. Max length: 4 characters.",
            "type": "string"
          },
          "paymentAccAge": {
            "description": "String that the payment account was enrolled in the cardholder’s account with the 3DS Requestor. \nFormat: **YYYYMMDD**",
            "type": "string"
          },
          "paymentAccInd": {
            "description": "Indicates the length of time that the payment account was enrolled in the cardholder’s account with the 3DS Requestor. \nAllowed values:\n* **01** — No account (guest checkout)\n* **02** — During this transaction\n* **03** — Less than 30 days\n* **04** — 30–60 days\n* **05** — More than 60 days",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05"
            ],
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "provisionAttemptsDay": {
            "description": "Number of Add Card attempts in the last 24 hours. Max length: 3 characters.",
            "type": "string"
          },
          "shipAddressUsage": {
            "description": "String when the shipping address used for this transaction was first used with the 3DS Requestor. \nFormat: **YYYYMMDD**",
            "type": "string"
          },
          "shipAddressUsageInd": {
            "description": "Indicates when the shipping address used for this transaction was first used with the 3DS Requestor. \nAllowed values:\n* **01** — This transaction\n* **02** — Less than 30 days\n* **03** — 30–60 days\n* **04** — More than 60 days",
            "enum": [
              "01",
              "02",
              "03",
              "04"
            ],
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "shipNameIndicator": {
            "description": "Indicates if the Cardholder Name on the account is identical to the shipping Name used for this transaction. \nAllowed values:\n* **01** — Account Name identical to shipping Name\n* **02** — Account Name different to shipping Name",
            "enum": [
              "01",
              "02"
            ],
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "suspiciousAccActivity": {
            "description": "Indicates whether the 3DS Requestor has experienced suspicious activity (including previous fraud) on the cardholder account. \nAllowed values:\n* **01** — No suspicious activity has been observed\n* **02** — Suspicious activity has been observed",
            "enum": [
              "01",
              "02"
            ],
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "txnActivityDay": {
            "description": "Number of transactions (successful and abandoned) for this cardholder account with the 3DS Requestor across all payment accounts in the previous 24 hours. Max length: 3 characters.",
            "maxLength": 3,
            "type": "string"
          },
          "txnActivityYear": {
            "description": "Number of transactions (successful and abandoned) for this cardholder account with the 3DS Requestor across all payment accounts in the previous year. Max length: 3 characters.",
            "maxLength": 3,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceRenderOptions": {
        "properties": {
          "sdkInterface": {
            "default": "both",
            "description": "Supported SDK interface types.\nAllowed values:\n* native\n* html\n* both",
            "enum": [
              "native",
              "html",
              "both"
            ],
            "type": "string"
          },
          "sdkUiType": {
            "description": "UI types supported for displaying specific challenges.\nAllowed values:\n* text\n* singleSelect\n* outOfBand\n* otherHtml\n* multiSelect",
            "items": {
              "enum": [
                "multiSelect",
                "otherHtml",
                "outOfBand",
                "singleSelect",
                "text"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Phone": {
        "properties": {
          "cc": {
            "description": "Country code. Length: 1–3 characters.",
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          },
          "subscriber": {
            "description": "Subscriber number. Maximum length: 15 characters.",
            "maxLength": 15,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SDKEphemPubKey": {
        "properties": {
          "crv": {
            "description": "The `crv` value as received from the 3D Secure 2 SDK.",
            "type": "string"
          },
          "kty": {
            "description": "The `kty` value as received from the 3D Secure 2 SDK.",
            "type": "string"
          },
          "x": {
            "description": "The `x` value as received from the 3D Secure 2 SDK.",
            "type": "string"
          },
          "y": {
            "description": "The `y` value as received from the 3D Secure 2 SDK.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ThreeDSRequestorAuthenticationInfo": {
        "properties": {
          "threeDSReqAuthData": {
            "description": "Data that documents and supports a specific authentication process. Maximum length: 2048 bytes.",
            "type": "string"
          },
          "threeDSReqAuthMethod": {
            "description": "Mechanism used by the Cardholder to authenticate to the 3DS Requestor. Allowed values:\n* **01** — No 3DS Requestor authentication occurred (for example, cardholder “logged in” as guest).\n* **02** — Login to the cardholder account at the 3DS Requestor system using 3DS Requestor’s own credentials.\n* **03** — Login to the cardholder account at the 3DS Requestor system using federated ID.\n* **04** — Login to the cardholder account at the 3DS Requestor system using issuer credentials.\n* **05** — Login to the cardholder account at the 3DS Requestor system using third-party authentication.\n* **06** — Login to the cardholder account at the 3DS Requestor system using FIDO Authenticator.",
            "enum": [
              "01",
              "02",
              "03",
              "04",
              "05",
              "06"
            ],
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "threeDSReqAuthTimestamp": {
            "description": "Date and time in UTC of the cardholder authentication. Format: YYYYMMDDHHMM",
            "maxLength": 12,
            "minLength": 12,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ThreeDSRequestorPriorAuthenticationInfo": {
        "properties": {
          "threeDSReqPriorAuthData": {
            "description": "Data that documents and supports a specific authentication process. Maximum length: 2048 bytes.",
            "type": "string"
          },
          "threeDSReqPriorAuthMethod": {
            "description": "Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor. Allowed values:\n* **01** — Frictionless authentication occurred by ACS.\n* **02** — Cardholder challenge occurred by ACS.\n* **03** — AVS verified.\n* **04** — Other issuer methods.",
            "enum": [
              "01",
              "02",
              "03",
              "04"
            ],
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "threeDSReqPriorAuthTimestamp": {
            "description": "Date and time in UTC of the prior cardholder authentication. Format: YYYYMMDDHHMM",
            "maxLength": 12,
            "minLength": 12,
            "type": "string"
          },
          "threeDSReqPriorRef": {
            "description": "This data element provides additional information to the ACS to determine the best approach for handing a request. This data element contains an ACS Transaction ID for a prior authenticated transaction. For example, the first recurring transaction that was authenticated with the cardholder. Length: 30 characters.",
            "maxLength": 36,
            "minLength": 36,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://checkout-test.adyen.com/v69/payments"
    },
    "headers": {
      "Idempotency-Key": {
        "$": "Idempotency-Key"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**action**: Action to be taken for completing the payment.",
            "**additionalData**: Contains additional information about the payment. Some data fields are included only if you select them first: Go to **Customer Area** > **Developers** > **Additional data**.",
            [
              "**amount**",
              {
                "$ul": [
                  "**currency**: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
                  "**value**: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes)."
                ]
              }
            ],
            "**donationToken**: Donation Token containing payment details for Adyen Giving.",
            [
              "**fraudResult**",
              {
                "$ul": [
                  "**accountScore**: The total fraud score generated by the risk checks.",
                  "**results**: The result of the individual risk checks."
                ]
              }
            ],
            "**merchantReference**: The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.",
            [
              "**order**",
              {
                "$ul": [
                  [
                    "**amount**",
                    {
                      "$ul": [
                        "**currency**: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
                        "**value**: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes)."
                      ]
                    }
                  ],
                  "**expiresAt**: The expiry date for the order.",
                  "**orderData**: The encrypted order data.",
                  "**pspReference**: The `pspReference` that belongs to the order.",
                  "**reference**: The merchant reference for the order.",
                  [
                    "**remainingAmount**",
                    {
                      "$ul": [
                        "**currency**: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
                        "**value**: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes)."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**paymentMethod**",
              {
                "$ul": [
                  "**brand**: The card brand that the shopper used to pay. Only returned if `paymentMethod.type` is **scheme**.",
                  "**type**: The `paymentMethod.type` value used in the request."
                ]
              }
            ],
            "**pspReference**: Adyen's 16-character string reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.",
            "**refusalReason**: If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.",
            "**refusalReasonCode**: Code that specifies the refusal reason. For more information, see [Authorisation refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).",
            "**resultCode**: The result of the payment. For more information, see [Result codes](https://docs.adyen.com/online-payments/payment-result-codes).",
            [
              "**threeDS2ResponseData**",
              {
                "$ul": [
                  "**acsChallengeMandated**",
                  "**acsOperatorID**",
                  "**acsReferenceNumber**",
                  "**acsSignedContent**",
                  "**acsTransID**",
                  "**acsURL**",
                  "**authenticationType**",
                  "**cardHolderInfo**",
                  "**cavvAlgorithm**",
                  "**challengeIndicator**",
                  "**dsReferenceNumber**",
                  "**dsTransID**",
                  "**exemptionIndicator**",
                  "**messageVersion**",
                  "**riskScore**",
                  "**sdkEphemPubKey**",
                  "**threeDSServerTransID**",
                  "**transStatus**",
                  "**transStatusReason**"
                ]
              }
            ],
            [
              "**threeDS2Result**",
              {
                "$ul": [
                  "**authenticationValue**: The `authenticationValue` value as defined in the 3D Secure 2 specification.",
                  "**cavvAlgorithm**: The algorithm used by the ACS to calculate the authentication value, only for Cartes Bancaires integrations.",
                  "**challengeCancel**: Indicator informing the Access Control Server (ACS) and the Directory Server (DS) that the authentication has been cancelled. For possible values, refer to [3D Secure API reference](https://docs.adyen.com/online-payments/3d-secure/api-reference#mpidata).",
                  "**dsTransID**: The `dsTransID` value as defined in the 3D Secure 2 specification.",
                  "**eci**: The `eci` value as defined in the 3D Secure 2 specification.",
                  "**exemptionIndicator**: Indicates the exemption type that was applied by the issuer to the authentication, if exemption applied.",
                  "**messageVersion**: The `messageVersion` value as defined in the 3D Secure 2 specification.",
                  "**riskScore**: Risk score calculated by Cartes Bancaires Directory Server (DS).",
                  "**threeDSRequestorChallengeInd**: Indicates whether a challenge is requested for this transaction. Possible values:",
                  "**threeDSServerTransID**: The `threeDSServerTransID` value as defined in the 3D Secure 2 specification.",
                  "**timestamp**: The `timestamp` value of the 3D Secure 2 authentication.",
                  "**transStatus**: The `transStatus` value as defined in the 3D Secure 2 specification.",
                  "**transStatusReason**: Provides information on why the `transStatus` field has the specified value. For possible values, refer to [our docs](https://docs.adyen.com/online-payments/3d-secure/api-reference#possible-transstatusreason-values).",
                  "**whiteListStatus**: The `whiteListStatus` value as defined in the 3D Secure 2 specification."
                ]
              }
            ],
            "**threeDSPaymentData**: When non-empty, contains a value that you must submit to the `/payments/details` endpoint as `paymentData`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**additionalData**: Contains additional information about the payment. Some data fields are included only if you select them first. Go to **Customer Area** > **Developers** > **Additional data**.",
            "**errorCode**: The error code mapped to the error message.",
            "**errorType**: The category of the error.",
            "**message**: A short explanation of the issue.",
            "**pspReference**: The PSP reference of the payment.",
            "**status**: The HTTP response status."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**additionalData**: Contains additional information about the payment. Some data fields are included only if you select them first. Go to **Customer Area** > **Developers** > **Additional data**.",
            "**errorCode**: The error code mapped to the error message.",
            "**errorType**: The category of the error.",
            "**message**: A short explanation of the issue.",
            "**pspReference**: The PSP reference of the payment.",
            "**status**: The HTTP response status."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**additionalData**: Contains additional information about the payment. Some data fields are included only if you select them first. Go to **Customer Area** > **Developers** > **Additional data**.",
            "**errorCode**: The error code mapped to the error message.",
            "**errorType**: The category of the error.",
            "**message**: A short explanation of the issue.",
            "**pspReference**: The PSP reference of the payment.",
            "**status**: The HTTP response status."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**additionalData**: Contains additional information about the payment. Some data fields are included only if you select them first. Go to **Customer Area** > **Developers** > **Additional data**.",
            "**errorCode**: The error code mapped to the error message.",
            "**errorType**: The category of the error.",
            "**message**: A short explanation of the issue.",
            "**pspReference**: The PSP reference of the payment.",
            "**status**: The HTTP response status."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**additionalData**: Contains additional information about the payment. Some data fields are included only if you select them first. Go to **Customer Area** > **Developers** > **Additional data**.",
            "**errorCode**: The error code mapped to the error message.",
            "**errorType**: The category of the error.",
            "**message**: A short explanation of the issue.",
            "**pspReference**: The PSP reference of the payment.",
            "**status**: The HTTP response status."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
