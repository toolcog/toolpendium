{
  "name": "post-testNotificationConfiguration",
  "description": "Tests an existing notification subscription configuration. For each event type specified, a test notification will be generated and sent to the URL configured in the subscription specified.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/TestNotificationConfigurationRequest"
      }
    },
    "$defs": {
      "TestNotificationConfigurationRequest": {
        "properties": {
          "eventTypes": {
            "description": "The event types to test.  If left blank, then all of the configured event types will be tested.\n>Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.",
            "items": {
              "enum": [
                "ACCOUNT_CLOSED",
                "ACCOUNT_CREATED",
                "ACCOUNT_FUNDS_BELOW_THRESHOLD",
                "ACCOUNT_HOLDER_CREATED",
                "ACCOUNT_HOLDER_LIMIT_REACHED",
                "ACCOUNT_HOLDER_MIGRATED",
                "ACCOUNT_HOLDER_PAYOUT",
                "ACCOUNT_HOLDER_STATUS_CHANGE",
                "ACCOUNT_HOLDER_STORE_STATUS_CHANGE",
                "ACCOUNT_HOLDER_UPCOMING_DEADLINE",
                "ACCOUNT_HOLDER_UPDATED",
                "ACCOUNT_HOLDER_VERIFICATION",
                "ACCOUNT_UPDATED",
                "BENEFICIARY_SETUP",
                "COMPENSATE_NEGATIVE_BALANCE",
                "DIRECT_DEBIT_INITIATED",
                "FUNDS_MIGRATED",
                "PAYMENT_FAILURE",
                "PENDING_CREDIT",
                "REFUND_FUNDS_TRANSFER",
                "REPORT_AVAILABLE",
                "SCHEDULED_REFUNDS",
                "SCORE_SIGNAL_TRIGGERED",
                "TRANSFER_FUNDS",
                "TRANSFER_NOT_PAIDOUT_TRANSFERS"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "notificationId": {
            "description": "The ID of the notification subscription configuration to be tested.",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "notificationId"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://cal-test.adyen.com/cal/services/Notification/v2/testNotificationConfiguration"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errorMessages**: Any error messages encountered.",
            "**eventTypes**: The event types that were tested.",
            "**exchangeMessages**: The notification message and related response messages.",
            "**notificationId**: The ID of the notification subscription configuration.",
            "**okMessages**: A list of messages describing the testing steps.",
            "**pspReference**: The reference of a request. Can be used to uniquely identify the request.",
            "**resultCode**: The result code.",
            "**submittedAsync**: Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The error code mapped to the error message.",
            "**errorType**: The category of the error.",
            "**message**: A short explanation of the issue.",
            "**pspReference**: The PSP reference of the payment.",
            "**status**: The HTTP response status."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The error code mapped to the error message.",
            "**errorType**: The category of the error.",
            "**message**: A short explanation of the issue.",
            "**pspReference**: The PSP reference of the payment.",
            "**status**: The HTTP response status."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The error code mapped to the error message.",
            "**errorType**: The category of the error.",
            "**message**: A short explanation of the issue.",
            "**pspReference**: The PSP reference of the payment.",
            "**status**: The HTTP response status."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The error code mapped to the error message.",
            "**errorType**: The category of the error.",
            "**message**: A short explanation of the issue.",
            "**pspReference**: The PSP reference of the payment.",
            "**status**: The HTTP response status."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**: The error code mapped to the error message.",
            "**errorType**: The category of the error.",
            "**message**: A short explanation of the issue.",
            "**pspReference**: The PSP reference of the payment.",
            "**status**: The HTTP response status."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
