{
  "name": "post-transactionRules",
  "description": "Creates a [transaction rule](https://docs.adyen.com/issuing/transaction-rules). When your user makes a transaction with their Adyen-issued card, the transaction is allowed or declined based on the conditions and outcome defined in the transaction rule. You can apply the transaction rule to several cards, such as all the cards in your platform, or to a specific card. For use cases, see [examples](https://docs.adyen.com/issuing/transaction-rules/examples).",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/TransactionRuleInfo"
      }
    },
    "$defs": {
      "TransactionRuleInfo": {
        "properties": {
          "amount": {
            "$ref": "#/$defs/Amount"
          },
          "balancePlatformId": {
            "description": "The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/get/balancePlatforms/{id}__queryParam_id) to which the rule applies.",
            "type": "string"
          },
          "countries": {
            "description": "List of countries to which the rule applies. For example: **[\"NL\",\"US\"]**.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Your description for the transaction rule, maximum 300 characters.",
            "maxLength": 300,
            "type": "string"
          },
          "endDate": {
            "description": "The date when the rule will stop being evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.\n\nIf not provided, the rule will be evaluated until the rule status is set to **inactive**.",
            "type": "string"
          },
          "entryModes": {
            "description": "List of point-of-sale entry modes to which the rule applies.\n\nPossible values: **manual**, **chip**, **magstripe**, **contactless**, **cof**, **token**, **server**, **barcode**, **ocr**.",
            "items": {
              "enum": [
                "barcode",
                "chip",
                "cof",
                "contactless",
                "magstripe",
                "manual",
                "ocr",
                "server",
                "unknown"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "interval": {
            "$ref": "#/$defs/TransactionRuleInterval"
          },
          "maxTransactions": {
            "description": "The maximum number of transactions that a payment instrument can be used for in the period specified in the `interval.type`.",
            "format": "int32",
            "type": "integer"
          },
          "mccs": {
            "description": "List of Merchant Category Codes (MCCs) to which the rule applies.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "paymentInstrumentGroupId": {
            "description": "The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstrumentGroups__resParam_id) to which the rule applies.",
            "type": "string"
          },
          "paymentInstrumentId": {
            "description": "The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstruments__resParam_id) to which the rule applies.",
            "type": "string"
          },
          "processingTypes": {
            "description": "List of processing types to which the rule applies.\n\nPossible values: **atmWithdraw**, **pos**, **ecommerce**, **moto**, **recurring**, **balanceInquiry**.",
            "items": {
              "enum": [
                "atmWithdraw",
                "balanceInquiry",
                "ecommerce",
                "moto",
                "pos",
                "recurring",
                "token",
                "unknown"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "reference": {
            "description": "Your reference for the transaction rule, maximum 150 characters.",
            "maxLength": 150,
            "type": "string"
          },
          "startDate": {
            "description": "The date when the rule will start to be evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.\n\nIf not provided when creating a transaction rule, the `startDate` is set to the date when the rule status is set to **active**. \n\n",
            "type": "string"
          },
          "status": {
            "description": "The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created \nwith an **active** status. \n\nPossible values: **active**, **inactive**.",
            "enum": [
              "active",
              "inactive"
            ],
            "type": "string"
          },
          "type": {
            "description": "Type of conditions provided in the rule.\n\nPossible values:\n  * **allowList**: The rule provides categories (such as country and MCC) where payments must be allowed.\n * **blockList**: The rule provides categories (such as country and MCC) where payments must be blocked.\n * **maxUsage**: The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument.\n * **velocity**: The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.\n",
            "enum": [
              "allowList",
              "blockList",
              "maxUsage",
              "velocity"
            ],
            "type": "string",
            "x-enum": [
              {
                "description": "The rule provides categories (such as country and MCC) where payments must be allowed.",
                "value": "allowList"
              },
              {
                "description": "The rule provides categories (such as country and MCC) where payments must be blocked.",
                "value": "blockList"
              },
              {
                "description": "The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.",
                "value": "velocity"
              },
              {
                "description": "The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument.",
                "value": "maxUsage"
              }
            ]
          }
        },
        "required": [
          "type",
          "description",
          "reference",
          "interval"
        ],
        "type": "object"
      },
      "Amount": {
        "properties": {
          "currency": {
            "description": "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "value": {
            "description": "The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "value",
          "currency"
        ],
        "type": "object"
      },
      "TransactionRuleInterval": {
        "properties": {
          "type": {
            "description": "The [type of interval](https://docs.adyen.com/issuing/transaction-rules#time-intervals) during which the rule conditions and limits apply, and how often counters are reset.\n\nPossible values:\n  * **perTransaction**: conditions are evaluated and the counters are reset for every transaction.\n * **daily**: the counters are reset daily at 00:00:00 UTC.\n * **weekly**: the counters are reset every Monday at 00:00:00 UTC. \n * **monthly**: the counters reset every first day of the month at 00:00:00 UTC. \n * **lifetime**: conditions are applied to the lifetime of the payment instrument.\n",
            "enum": [
              "daily",
              "lifetime",
              "monthly",
              "perTransaction",
              "weekly"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://balanceplatform-api-test.adyen.com/bcl/v1/transactionRules"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**amount**",
              {
                "$ul": [
                  "**currency**: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
                  "**value**: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes)."
                ]
              }
            ],
            "**balancePlatformId**: The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/get/balancePlatforms/{id}__queryParam_id) to which the rule applies.",
            "**countries**: List of countries to which the rule applies. For example: **[\"NL\",\"US\"]**.",
            "**description**: Your description for the transaction rule, maximum 300 characters.",
            "**endDate**: The date when the rule will stop being evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.",
            "**entryModes**: List of point-of-sale entry modes to which the rule applies.",
            "**id**: The unique identifier of the transaction rule.",
            [
              "**interval**",
              {
                "$ul": [
                  "**type**: The [type of interval](https://docs.adyen.com/issuing/transaction-rules#time-intervals) during which the rule conditions and limits apply, and how often counters are reset."
                ]
              }
            ],
            "**maxTransactions**: The maximum number of transactions that a payment instrument can be used for in the period specified in the `interval.type`.",
            "**mccs**: List of Merchant Category Codes (MCCs) to which the rule applies.",
            "**paymentInstrumentGroupId**: The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstrumentGroups__resParam_id) to which the rule applies.",
            "**paymentInstrumentId**: The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstruments__resParam_id) to which the rule applies.",
            "**processingTypes**: List of processing types to which the rule applies.",
            "**reference**: Your reference for the transaction rule, maximum 150 characters.",
            "**startDate**: The date when the rule will start to be evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.",
            "**status**: The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created ",
            "**type**: Type of conditions provided in the rule."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            [
              "**response**",
              {
                "$ul": [
                  "**paths**",
                  [
                    "**rootPath**",
                    {
                      "$ul": [
                        "**content**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            [
              "**response**",
              {
                "$ul": [
                  "**paths**",
                  [
                    "**rootPath**",
                    {
                      "$ul": [
                        "**content**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            [
              "**response**",
              {
                "$ul": [
                  "**paths**",
                  [
                    "**rootPath**",
                    {
                      "$ul": [
                        "**content**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            [
              "**response**",
              {
                "$ul": [
                  "**paths**",
                  [
                    "**rootPath**",
                    {
                      "$ul": [
                        "**content**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            [
              "**response**",
              {
                "$ul": [
                  "**paths**",
                  [
                    "**rootPath**",
                    {
                      "$ul": [
                        "**content**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
