{
  "name": "post-accountHolders",
  "description": "Creates an account holder linked to a [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities).\n\n",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/AccountHolderInfo"
      }
    },
    "$defs": {
      "AccountHolderInfo": {
        "properties": {
          "balancePlatform": {
            "description": "The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) to which the account holder belongs. Required in the request if your API credentials can be used for multiple balance platforms.",
            "type": "string"
          },
          "capabilities": {
            "additionalProperties": {
              "$ref": "#/$defs/AccountHolderCapability"
            },
            "description": "Contains key-value pairs that specify the actions that an account holder can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing. The value is an object containing the settings for the capability.",
            "type": "object"
          },
          "contactDetails": {
            "$ref": "#/$defs/ContactDetails"
          },
          "description": {
            "description": "Your description for the account holder, maximum 300 characters.",
            "maxLength": 300,
            "type": "string"
          },
          "legalEntityId": {
            "description": "The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id) associated with the account holder. Adyen performs a verification process against the legal entity of the account holder.",
            "type": "string"
          },
          "reference": {
            "description": "Your reference for the account holder, maximum 150 characters.",
            "maxLength": 150,
            "type": "string"
          },
          "timeZone": {
            "description": "The [time zone](https://www.iana.org/time-zones) of the account holder. For example, **Europe/Amsterdam**.\nDefaults to the time zone of the balance platform if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).",
            "type": "string"
          }
        },
        "required": [
          "legalEntityId"
        ],
        "type": "object"
      },
      "AccountHolderCapability": {
        "properties": {
          "allowed": {
            "description": "Indicates whether the capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability.",
            "readOnly": true,
            "type": "boolean"
          },
          "allowedLevel": {
            "description": "The capability level that is allowed for the account holder.\n\nPossible values: **notApplicable**, **low**, **medium**, **high**.",
            "enum": [
              "high",
              "low",
              "medium",
              "notApplicable"
            ],
            "readOnly": true,
            "type": "string"
          },
          "allowedSettings": {
            "$ref": "#/$defs/JSONObject"
          },
          "enabled": {
            "description": "Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.",
            "type": "boolean"
          },
          "problems": {
            "description": "Contains verification errors and the actions that you can take to resolve them.",
            "items": {
              "$ref": "#/$defs/CapabilityProblem"
            },
            "readOnly": true,
            "type": "array"
          },
          "requested": {
            "description": "Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.",
            "type": "boolean"
          },
          "requestedLevel": {
            "description": "The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.\n\nPossible values: **notApplicable**, **low**, **medium**, **high**.",
            "enum": [
              "high",
              "low",
              "medium",
              "notApplicable"
            ],
            "type": "string"
          },
          "requestedSettings": {
            "$ref": "#/$defs/JSONObject"
          },
          "transferInstruments": {
            "description": "Contains the status of the transfer instruments associated with this capability. ",
            "items": {
              "$ref": "#/$defs/AccountSupportingEntityCapability"
            },
            "type": "array"
          },
          "verificationStatus": {
            "description": "The status of the verification checks for the capability.\n\nPossible values:\n\n* **pending**: Adyen is running the verification.\n\n* **invalid**: The verification failed. Check if the `errors` array contains more information.\n\n* **valid**: The verification has been successfully completed.\n\n* **rejected**: Adyen has verified the information, but found reasons to not allow the capability.\n",
            "enum": [
              "invalid",
              "pending",
              "rejected",
              "valid"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "JSONObject": {
        "properties": {
          "paths": {
            "items": {
              "$ref": "#/$defs/JSONPath"
            },
            "type": "array"
          },
          "rootPath": {
            "$ref": "#/$defs/JSONPath"
          }
        },
        "type": "object"
      },
      "JSONPath": {
        "properties": {
          "content": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CapabilityProblem": {
        "type": "object"
      },
      "AccountSupportingEntityCapability": {
        "properties": {
          "allowed": {
            "description": "Indicates whether the supporting entity capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability.",
            "readOnly": true,
            "type": "boolean"
          },
          "allowedLevel": {
            "description": "The capability level that is allowed for the account holder.\n\nPossible values: **notApplicable**, **low**, **medium**, **high**.",
            "enum": [
              "high",
              "low",
              "medium",
              "notApplicable"
            ],
            "readOnly": true,
            "type": "string"
          },
          "enabled": {
            "description": "Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.",
            "type": "boolean"
          },
          "id": {
            "description": "The ID of the supporting entity.",
            "readOnly": true,
            "type": "string"
          },
          "requested": {
            "description": "Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.",
            "type": "boolean"
          },
          "requestedLevel": {
            "description": "The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.\n\nPossible values: **notApplicable**, **low**, **medium**, **high**.",
            "enum": [
              "high",
              "low",
              "medium",
              "notApplicable"
            ],
            "type": "string"
          },
          "verificationStatus": {
            "description": "The status of the verification checks for the supporting entity capability.\n\nPossible values:\n\n* **pending**: Adyen is running the verification.\n\n* **invalid**: The verification failed. Check if the `errors` array contains more information.\n\n* **valid**: The verification has been successfully completed.\n\n* **rejected**: Adyen has verified the information, but found reasons to not allow the capability.\n",
            "enum": [
              "invalid",
              "pending",
              "rejected",
              "valid"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContactDetails": {
        "properties": {
          "address": {
            "$ref": "#/$defs/Address"
          },
          "email": {
            "description": "The email address of the account holder.",
            "type": "string"
          },
          "phone": {
            "$ref": "#/$defs/Phone"
          },
          "webAddress": {
            "description": "The URL of the account holder's website.",
            "type": "string"
          }
        },
        "required": [
          "email",
          "phone",
          "address"
        ],
        "type": "object"
      },
      "Address": {
        "properties": {
          "city": {
            "description": "The name of the city. Maximum length: 3000 characters.",
            "maxLength": 3000,
            "type": "string"
          },
          "country": {
            "description": "The two-character ISO-3166-1 alpha-2 country code. For example, **US**.\n> If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.",
            "type": "string"
          },
          "houseNumberOrName": {
            "description": "The number or name of the house. Maximum length: 3000 characters.",
            "maxLength": 3000,
            "type": "string"
          },
          "postalCode": {
            "description": "A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.",
            "type": "string"
          },
          "stateOrProvince": {
            "description": "The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.\n> Required for the US and Canada.",
            "type": "string"
          },
          "street": {
            "description": "The name of the street. Maximum length: 3000 characters.\n> The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.",
            "maxLength": 3000,
            "type": "string"
          }
        },
        "required": [
          "street",
          "houseNumberOrName",
          "city",
          "postalCode",
          "country"
        ],
        "type": "object"
      },
      "Phone": {
        "properties": {
          "number": {
            "description": "The full phone number provided as a single string. \nFor example, **\"0031 6 11 22 33 44\"**, **\"+316/1122-3344\"**, \n\n or **\"(0031) 611223344\"**.",
            "type": "string"
          },
          "type": {
            "description": "Type of phone number.\nPossible values: \n**Landline**, **Mobile**.\n",
            "enum": [
              "Landline",
              "Mobile"
            ],
            "type": "string"
          }
        },
        "required": [
          "number",
          "type"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://balanceplatform-api-test.adyen.com/bcl/v1/accountHolders"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**balancePlatform**: The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) to which the account holder belongs. Required in the request if your API credentials can be used for multiple balance platforms.",
            "**capabilities**: Contains key-value pairs that specify the actions that an account holder can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing. The value is an object containing the settings for the capability.",
            [
              "**contactDetails**",
              {
                "$ul": [
                  [
                    "**address**",
                    {
                      "$ul": [
                        "**city**: The name of the city. Maximum length: 3000 characters.",
                        "**country**: The two-character ISO-3166-1 alpha-2 country code. For example, **US**.",
                        "**houseNumberOrName**: The number or name of the house. Maximum length: 3000 characters.",
                        "**postalCode**: A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.",
                        "**stateOrProvince**: The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.",
                        "**street**: The name of the street. Maximum length: 3000 characters."
                      ]
                    }
                  ],
                  "**email**: The email address of the account holder.",
                  [
                    "**phone**",
                    {
                      "$ul": [
                        "**number**: The full phone number provided as a single string. ",
                        "**type**: Type of phone number."
                      ]
                    }
                  ],
                  "**webAddress**: The URL of the account holder's website."
                ]
              }
            ],
            "**description**: Your description for the account holder, maximum 300 characters.",
            "**id**: The unique identifier of the account holder.",
            "**legalEntityId**: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id) associated with the account holder. Adyen performs a verification process against the legal entity of the account holder.",
            "**primaryBalanceAccount**: The ID of the account holder's primary balance account. By default, this is set to the first balance account that you create for the account holder. To assign a different balance account, send a PATCH request.",
            "**reference**: Your reference for the account holder, maximum 150 characters.",
            "**status**: The status of the account holder.",
            "**timeZone**: The [time zone](https://www.iana.org/time-zones) of the account holder. For example, **Europe/Amsterdam**."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            [
              "**response**",
              {
                "$ul": [
                  "**paths**",
                  [
                    "**rootPath**",
                    {
                      "$ul": [
                        "**content**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            [
              "**response**",
              {
                "$ul": [
                  "**paths**",
                  [
                    "**rootPath**",
                    {
                      "$ul": [
                        "**content**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            [
              "**response**",
              {
                "$ul": [
                  "**paths**",
                  [
                    "**rootPath**",
                    {
                      "$ul": [
                        "**content**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            [
              "**response**",
              {
                "$ul": [
                  "**paths**",
                  [
                    "**rootPath**",
                    {
                      "$ul": [
                        "**content**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            [
              "**response**",
              {
                "$ul": [
                  "**paths**",
                  [
                    "**rootPath**",
                    {
                      "$ul": [
                        "**content**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
