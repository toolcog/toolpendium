{
  "name": "get-cardorders",
  "description": "Returns a paginated list of card orders.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "The unique identifier of the card order. "
      },
      "cardManufacturingProfileId": {
        "type": "string",
        "description": "The unique identifier of the card manufacturer profile."
      },
      "status": {
        "type": "string",
        "description": "The status of the card order."
      },
      "txVariantCode": {
        "type": "string",
        "description": "The unique code of the card manufacturer profile.\n\nPossible values: **mcmaestro**, **mc**, **visa**, **mcdebit**. "
      },
      "createdSince": {
        "format": "date-time",
        "type": "string",
        "description": "Only include card orders that have been created on or after this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**."
      },
      "createdUntil": {
        "format": "date-time",
        "type": "string",
        "description": "Only include card orders that have been created on or before this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**."
      },
      "lockedSince": {
        "format": "date-time",
        "type": "string",
        "description": "Only include card orders that have been locked on or after this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**."
      },
      "lockedUntil": {
        "format": "date-time",
        "type": "string",
        "description": "Only include card orders that have been locked on or before this point in time. The value must be in ISO 8601 format. For example, **2021-05-30T15:07:40Z**."
      },
      "serviceCenter": {
        "type": "string",
        "description": "The service center at which the card is issued. The value is case-sensitive. "
      },
      "offset": {
        "format": "int32",
        "type": "integer",
        "description": "Specifies the position of an element in a list of card orders. The response includes a list of card orders that starts at the specified offset.\n\n**Default:** 0, which means that the response contains all the elements in the list of card orders."
      },
      "limit": {
        "format": "int32",
        "type": "integer",
        "description": "The number of card orders returned per page. **Default:** 10."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://balanceplatform-api-test.adyen.com/bcl/v2/cardorders{?id,cardManufacturingProfileId,status,txVariantCode,createdSince,createdUntil,lockedSince,lockedUntil,serviceCenter,offset,limit}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**cardOrders**: Contains objects with information about card orders.",
            "**hasNext**: Indicates whether there are more items on the next page.",
            "**hasPrevious**: Indicates whether there are more items on the previous page."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
