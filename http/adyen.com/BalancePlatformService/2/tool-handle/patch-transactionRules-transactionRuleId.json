{
  "name": "patch-transactionRules-transactionRuleId",
  "description": "Updates a transaction rule. \n\n* To update only the status of a transaction rule, send only the `status` parameter. All other parameters not provided in the request are left unchanged.\n\n* When updating any other parameter, you need to send all existing resource parameters. If you omit a parameter in the request, that parameter is removed from the resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "transactionRuleId": {
        "type": "string",
        "description": "The unique identifier of the transaction rule."
      },
      "body": {
        "$ref": "#/$defs/TransactionRuleInfo"
      }
    },
    "required": [
      "transactionRuleId"
    ],
    "$defs": {
      "TransactionRuleInfo": {
        "properties": {
          "aggregationLevel": {
            "description": "The level at which data must be accumulated, used in rules with `type` **velocity** or **maxUsage**. The level must be the [same or lower in hierarchy](https://docs.adyen.com/issuing/transaction-rules#accumulate-data) than the `entityKey`.\n\nIf not provided, by default, the rule will accumulate data at the **paymentInstrument** level.\n\nPossible values: **paymentInstrument**, **paymentInstrumentGroup**, **balanceAccount**, **accountHolder**, **balancePlatform**.",
            "type": "string",
            "x-addedInVersion": "2"
          },
          "description": {
            "description": "Your description for the transaction rule, maximum 300 characters.",
            "maxLength": 300,
            "type": "string"
          },
          "endDate": {
            "description": "The date when the rule will stop being evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.\n\nIf not provided, the rule will be evaluated until the rule status is set to **inactive**.",
            "type": "string"
          },
          "entityKey": {
            "$ref": "#/$defs/TransactionRuleEntityKey"
          },
          "interval": {
            "$ref": "#/$defs/TransactionRuleInterval"
          },
          "outcomeType": {
            "description": "The [outcome](https://docs.adyen.com/issuing/transaction-rules#outcome) that will be applied when a transaction meets the conditions of the rule. If not provided, by default, this is set to **hardBlock**.\n\nPossible values:\n\n * **hardBlock**: the transaction is declined.\n\n* **scoreBased**: the transaction is assigned the `score` you specified. Adyen calculates the total score and if it exceeds 100, the transaction is declined.",
            "enum": [
              "enforceSCA",
              "hardBlock",
              "scoreBased"
            ],
            "type": "string",
            "x-addedInVersion": "2"
          },
          "reference": {
            "description": "Your reference for the transaction rule, maximum 150 characters.",
            "maxLength": 150,
            "type": "string"
          },
          "requestType": {
            "description": "Indicates the type of request to which the rule applies. If not provided, by default, this is set to **authorization**.\n\nPossible values: **authorization**, **authentication**, **tokenization**, **bankTransfer**.",
            "enum": [
              "authentication",
              "authorization",
              "bankTransfer",
              "tokenization"
            ],
            "type": "string",
            "x-addedInVersion": "2"
          },
          "ruleRestrictions": {
            "$ref": "#/$defs/TransactionRuleRestrictions"
          },
          "score": {
            "description": "A positive or negative score applied to the transaction if it meets the conditions of the rule. Required when `outcomeType` is **scoreBased**.  The value must be between **-100** and **100**.",
            "format": "int32",
            "type": "integer",
            "x-addedInVersion": "2"
          },
          "startDate": {
            "description": "The date when the rule will start to be evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.\n\nIf not provided when creating a transaction rule, the `startDate` is set to the date when the rule status is set to **active**. \n\n",
            "type": "string"
          },
          "status": {
            "description": "The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created \nwith an **active** status. \n\nPossible values: **active**, **inactive**.",
            "enum": [
              "active",
              "inactive"
            ],
            "type": "string"
          },
          "type": {
            "description": "The [type of rule](https://docs.adyen.com/issuing/transaction-rules#rule-types), which defines if a rule blocks transactions based on individual characteristics or accumulates data.\n\nPossible values:\n * **blockList**: decline a transaction when the conditions are met.\n * **maxUsage**: add the amount or number of transactions for the lifetime of a payment instrument, and then decline a transaction when the specified limits are met.\n * **velocity**: add the amount or number of transactions based on a specified time interval, and then decline a transaction when the specified limits are met.\n",
            "enum": [
              "allowList",
              "blockList",
              "maxUsage",
              "velocity"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "description",
          "reference",
          "entityKey",
          "interval",
          "ruleRestrictions"
        ],
        "type": "object"
      },
      "TransactionRuleEntityKey": {
        "properties": {
          "entityReference": {
            "description": "The unique identifier of the resource.",
            "type": "string"
          },
          "entityType": {
            "description": "The type of resource.\n\nPossible values: **balancePlatform**, **paymentInstrumentGroup**, **accountHolder**, **balanceAccount**, or **paymentInstrument**.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TransactionRuleInterval": {
        "properties": {
          "dayOfMonth": {
            "description": "The day of month, used when the `duration.unit` is **months**. If not provided, by default, this is set to **1**, the first day of the month.",
            "format": "int32",
            "type": "integer",
            "x-addedInVersion": "2"
          },
          "dayOfWeek": {
            "description": "The day of week, used when the `duration.unit` is **weeks**. If not provided, by default, this is set to **monday**.\n\nPossible values: **sunday**, **monday**, **tuesday**, **wednesday**, **thursday**, **friday**.",
            "enum": [
              "friday",
              "monday",
              "saturday",
              "sunday",
              "thursday",
              "tuesday",
              "wednesday"
            ],
            "type": "string",
            "x-addedInVersion": "2"
          },
          "duration": {
            "$ref": "#/$defs/Duration"
          },
          "timeOfDay": {
            "description": "The time of day, in **hh:mm:ss** format, used when the `duration.unit` is **hours**. If not provided, by default, this is set to **00:00:00**.",
            "type": "string",
            "x-addedInVersion": "2"
          },
          "timeZone": {
            "description": "The [time zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For example, **Europe/Amsterdam**. By default, this is set to **UTC**.",
            "type": "string",
            "x-addedInVersion": "2"
          },
          "type": {
            "description": "The [type of interval](https://docs.adyen.com/issuing/transaction-rules#time-intervals) during which the rule conditions and limits apply, and how often counters are reset.\n\nPossible values:\n  * **perTransaction**: conditions are evaluated and the counters are reset for every transaction.\n * **daily**: the counters are reset daily at 00:00:00 UTC.\n * **weekly**: the counters are reset every Monday at 00:00:00 UTC. \n * **monthly**: the counters reset every first day of the month at 00:00:00 UTC. \n * **lifetime**: conditions are applied to the lifetime of the payment instrument.\n * **rolling**: conditions are applied and the counters are reset based on a `duration`. If the reset date and time are not provided, Adyen applies the default reset time similar to fixed intervals. For example, if the duration is every two weeks, the counter resets every third Monday at 00:00:00 UTC.\n * **sliding**: conditions are applied and the counters are reset based on the current time and a `duration` that you specify.",
            "enum": [
              "daily",
              "lifetime",
              "monthly",
              "perTransaction",
              "rolling",
              "sliding",
              "weekly"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "Duration": {
        "properties": {
          "unit": {
            "description": "The unit of time. You can only use **minutes** and **hours** if the `interval.type` is **sliding**.\n\nPossible values: **minutes**, **hours**, **days**, **weeks**, or **months**",
            "enum": [
              "days",
              "hours",
              "minutes",
              "months",
              "weeks"
            ],
            "type": "string"
          },
          "value": {
            "description": "The length of time by the unit. For example, 5 days.\n\nThe maximum duration is 90 days or an equivalent in other units. For example, 3 months.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TransactionRuleRestrictions": {
        "properties": {
          "activeNetworkTokens": {
            "$ref": "#/$defs/ActiveNetworkTokensRestriction"
          },
          "brandVariants": {
            "$ref": "#/$defs/BrandVariantsRestriction"
          },
          "counterpartyBank": {
            "$ref": "#/$defs/CounterpartyBankRestriction"
          },
          "countries": {
            "$ref": "#/$defs/CountriesRestriction"
          },
          "dayOfWeek": {
            "$ref": "#/$defs/DayOfWeekRestriction"
          },
          "differentCurrencies": {
            "$ref": "#/$defs/DifferentCurrenciesRestriction"
          },
          "entryModes": {
            "$ref": "#/$defs/EntryModesRestriction"
          },
          "internationalTransaction": {
            "$ref": "#/$defs/InternationalTransactionRestriction"
          },
          "matchingTransactions": {
            "$ref": "#/$defs/MatchingTransactionsRestriction"
          },
          "mccs": {
            "$ref": "#/$defs/MccsRestriction"
          },
          "merchantNames": {
            "$ref": "#/$defs/MerchantNamesRestriction"
          },
          "merchants": {
            "$ref": "#/$defs/MerchantsRestriction"
          },
          "processingTypes": {
            "$ref": "#/$defs/ProcessingTypesRestriction"
          },
          "sameAmountRestriction": {
            "$ref": "#/$defs/SameAmountRestriction"
          },
          "sameCounterpartyRestriction": {
            "$ref": "#/$defs/SameCounterpartyRestriction"
          },
          "timeOfDay": {
            "$ref": "#/$defs/TimeOfDayRestriction"
          },
          "totalAmount": {
            "$ref": "#/$defs/TotalAmountRestriction"
          }
        },
        "type": "object"
      },
      "ActiveNetworkTokensRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "The number of tokens.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "BrandVariantsRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "List of card brand variants.\n\nPossible values: \n\n- **mc**, **mccredit**, **mccommercialcredit_b2b**, **mcdebit**, **mcbusinessdebit**, **mcbusinessworlddebit**, **mcprepaid**, **mcmaestro**\n\n - **visa**, **visacredit**, **visadebit**, **visaprepaid**.\n\nYou can specify a rule for a generic variant. For example, to create a rule for all Mastercard payment instruments, use **mc**. The rule is applied to all payment instruments under **mc**, such as **mcbusinessdebit** and **mcdebit**.\n\n",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "CounterpartyBankRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "List of counterparty Bank Institutions and the operation.",
            "items": {
              "$ref": "#/$defs/BankIdentification"
            },
            "type": "array"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "BankIdentification": {
        "properties": {
          "country": {
            "description": "Two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.",
            "type": "string"
          },
          "identification": {
            "description": "The bank identification code.",
            "type": "string"
          },
          "identificationType": {
            "description": "The type of the identification.\n\nPossible values: **iban**, **routingNumber**.",
            "enum": [
              "iban",
              "routingNumber"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CountriesRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "List of two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "DayOfWeekRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "List of days of the week.\n\nPossible values: **monday**, **tuesday**, **wednesday**, **thursday**, **friday**, **saturday**, **sunday**.\n\n",
            "items": {
              "enum": [
                "friday",
                "monday",
                "saturday",
                "sunday",
                "thursday",
                "tuesday",
                "wednesday"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "DifferentCurrenciesRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "Checks the currency of the payment against the currency of the payment instrument.\n\nPossible values:\n\n- **true**: The currency of the payment is different from the currency of the payment instrument.\n\n- **false**: The currencies are the same.\n\n",
            "type": "boolean"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "EntryModesRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "List of point-of-sale entry modes.\n\nPossible values: **barcode**, **chip**, **cof**, **contactless**, **magstripe**, **manual**, **ocr**, **server**.\n\n",
            "items": {
              "enum": [
                "barcode",
                "chip",
                "cof",
                "contactless",
                "magstripe",
                "manual",
                "ocr",
                "server",
                "unknown"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "InternationalTransactionRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "Boolean indicating whether transaction is an international transaction.\n\nPossible values:\n\n- **true**: The transaction is an international transaction.\n\n- **false**: The transaction is a domestic transaction.\n\n",
            "type": "boolean"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "MatchingTransactionsRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "The number of transactions.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "MccsRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "List of merchant category codes (MCCs).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "MerchantNamesRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "items": {
              "$ref": "#/$defs/StringMatch"
            },
            "type": "array"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "StringMatch": {
        "properties": {
          "operation": {
            "description": "The type of string matching operation. Possible values:  **startsWith**, **endsWith**, **isEqualTo**, **contains**,",
            "enum": [
              "contains",
              "endsWith",
              "isEqualTo",
              "startsWith"
            ],
            "type": "string"
          },
          "value": {
            "description": "The string to be matched.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MerchantsRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "List of merchant ID and acquirer ID pairs.",
            "items": {
              "$ref": "#/$defs/MerchantAcquirerPair"
            },
            "type": "array"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "MerchantAcquirerPair": {
        "properties": {
          "acquirerId": {
            "description": "The acquirer ID.",
            "type": "string"
          },
          "merchantId": {
            "description": "The merchant identification number (MID).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProcessingTypesRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "description": "List of processing types.\n\nPossible values: **atmWithdraw**, **balanceInquiry**, **ecommerce**, **moto**, **pos**, **recurring**, **token**.\n\n",
            "items": {
              "enum": [
                "atmWithdraw",
                "balanceInquiry",
                "ecommerce",
                "moto",
                "pos",
                "recurring",
                "token",
                "unknown"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "SameAmountRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "type": "boolean"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "SameCounterpartyRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "type": "boolean"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "TimeOfDayRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/TimeOfDay"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "TimeOfDay": {
        "properties": {
          "endTime": {
            "description": "The end time in a time-only ISO-8601 extended offset format. For example: **08:00:00+02:00**, **22:30:00-03:00**.\n\n",
            "type": "string"
          },
          "startTime": {
            "description": "The start time in a time-only ISO-8601 extended offset format. For example: **08:00:00+02:00**, **22:30:00-03:00**.\n\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TotalAmountRestriction": {
        "properties": {
          "operation": {
            "description": "Defines how the condition must be evaluated.",
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/Amount"
          }
        },
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "Amount": {
        "properties": {
          "currency": {
            "description": "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "value": {
            "description": "The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "value",
          "currency"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://balanceplatform-api-test.adyen.com/bcl/v2/transactionRules/{transactionRuleId}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**aggregationLevel**: The level at which data must be accumulated, used in rules with `type` **velocity** or **maxUsage**. The level must be the [same or lower in hierarchy](https://docs.adyen.com/issuing/transaction-rules#accumulate-data) than the `entityKey`.",
            "**description**: Your description for the transaction rule, maximum 300 characters.",
            "**endDate**: The date when the rule will stop being evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.",
            [
              "**entityKey**",
              {
                "$ul": [
                  "**entityReference**: The unique identifier of the resource.",
                  "**entityType**: The type of resource."
                ]
              }
            ],
            "**id**: The unique identifier of the transaction rule.",
            [
              "**interval**",
              {
                "$ul": [
                  "**dayOfMonth**: The day of month, used when the `duration.unit` is **months**. If not provided, by default, this is set to **1**, the first day of the month.",
                  "**dayOfWeek**: The day of week, used when the `duration.unit` is **weeks**. If not provided, by default, this is set to **monday**.",
                  [
                    "**duration**",
                    {
                      "$ul": [
                        "**unit**: The unit of time. You can only use **minutes** and **hours** if the `interval.type` is **sliding**.",
                        "**value**: The length of time by the unit. For example, 5 days."
                      ]
                    }
                  ],
                  "**timeOfDay**: The time of day, in **hh:mm:ss** format, used when the `duration.unit` is **hours**. If not provided, by default, this is set to **00:00:00**.",
                  "**timeZone**: The [time zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For example, **Europe/Amsterdam**. By default, this is set to **UTC**.",
                  "**type**: The [type of interval](https://docs.adyen.com/issuing/transaction-rules#time-intervals) during which the rule conditions and limits apply, and how often counters are reset."
                ]
              }
            ],
            "**outcomeType**: The [outcome](https://docs.adyen.com/issuing/transaction-rules#outcome) that will be applied when a transaction meets the conditions of the rule. If not provided, by default, this is set to **hardBlock**.",
            "**reference**: Your reference for the transaction rule, maximum 150 characters.",
            "**requestType**: Indicates the type of request to which the rule applies. If not provided, by default, this is set to **authorization**.",
            [
              "**ruleRestrictions**",
              {
                "$ul": [
                  [
                    "**activeNetworkTokens**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: The number of tokens."
                      ]
                    }
                  ],
                  [
                    "**brandVariants**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: List of card brand variants."
                      ]
                    }
                  ],
                  [
                    "**counterpartyBank**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: List of counterparty Bank Institutions and the operation."
                      ]
                    }
                  ],
                  [
                    "**countries**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: List of two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes."
                      ]
                    }
                  ],
                  [
                    "**dayOfWeek**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: List of days of the week."
                      ]
                    }
                  ],
                  [
                    "**differentCurrencies**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: Checks the currency of the payment against the currency of the payment instrument."
                      ]
                    }
                  ],
                  [
                    "**entryModes**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: List of point-of-sale entry modes."
                      ]
                    }
                  ],
                  [
                    "**internationalTransaction**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: Boolean indicating whether transaction is an international transaction."
                      ]
                    }
                  ],
                  [
                    "**matchingTransactions**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: The number of transactions."
                      ]
                    }
                  ],
                  [
                    "**mccs**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: List of merchant category codes (MCCs)."
                      ]
                    }
                  ],
                  [
                    "**merchantNames**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**"
                      ]
                    }
                  ],
                  [
                    "**merchants**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: List of merchant ID and acquirer ID pairs."
                      ]
                    }
                  ],
                  [
                    "**processingTypes**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**: List of processing types."
                      ]
                    }
                  ],
                  [
                    "**sameAmountRestriction**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**"
                      ]
                    }
                  ],
                  [
                    "**sameCounterpartyRestriction**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        "**value**"
                      ]
                    }
                  ],
                  [
                    "**timeOfDay**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        [
                          "**value**",
                          {
                            "$ul": [
                              "**endTime**: The end time in a time-only ISO-8601 extended offset format. For example: **08:00:00+02:00**, **22:30:00-03:00**.",
                              "**startTime**: The start time in a time-only ISO-8601 extended offset format. For example: **08:00:00+02:00**, **22:30:00-03:00**."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**totalAmount**",
                    {
                      "$ul": [
                        "**operation**: Defines how the condition must be evaluated.",
                        [
                          "**value**",
                          {
                            "$ul": [
                              "**currency**: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
                              "**value**: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes)."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            "**score**: A positive or negative score applied to the transaction if it meets the conditions of the rule. Required when `outcomeType` is **scoreBased**.  The value must be between **-100** and **100**.",
            "**startDate**: The date when the rule will start to be evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.",
            "**status**: The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created ",
            "**type**: The [type of rule](https://docs.adyen.com/issuing/transaction-rules#rule-types), which defines if a rule blocks transactions based on individual characteristics or accumulates data."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**errorCode**: A code that identifies the problem type.",
            "**instance**: A unique URI that identifies the specific occurrence of the problem.",
            "**invalidFields**: Detailed explanation of each validation error, when applicable.",
            "**requestId**: A unique reference for the request, essentially the same as `pspReference`.",
            "**response**",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI that identifies the problem type, pointing to human-readable documentation on this problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
