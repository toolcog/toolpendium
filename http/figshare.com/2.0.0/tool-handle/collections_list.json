{
  "name": "collections_list",
  "description": "Returns a list of public collections",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Cursor": {
        "format": "uuid",
        "type": "string",
        "description": "Unique hash used for bypassing the item retrieval limit of 9,000 entities. When using this parameter, please note that the offset parameter will not be available, but the limit parameter will still work as expected."
      },
      "page": {
        "format": "int64",
        "maximum": 5000,
        "minimum": 1,
        "type": "integer",
        "description": "Page number. Used for pagination with page_size"
      },
      "page_size": {
        "default": 10,
        "format": "int64",
        "maximum": 1000,
        "minimum": 1,
        "type": "integer",
        "description": "The number of results included on a page. Used for pagination with page"
      },
      "limit": {
        "format": "int64",
        "maximum": 1000,
        "minimum": 1,
        "type": "integer",
        "description": "Number of results included on a page. Used for pagination with query"
      },
      "offset": {
        "format": "int64",
        "maximum": 5000,
        "minimum": 0,
        "type": "integer",
        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit"
      },
      "order": {
        "default": "published_date",
        "enum": [
          "published_date",
          "modified_date",
          "views",
          "shares",
          "cites"
        ],
        "type": "string",
        "description": "The field by which to order. Default varies by endpoint/resource."
      },
      "order_direction": {
        "default": "desc",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string"
      },
      "institution": {
        "format": "int64",
        "type": "integer",
        "description": "only return collections from this institution"
      },
      "published_since": {
        "type": "string",
        "description": "Filter by collection publishing date. Will only return collections published after the date. date(ISO 8601) YYYY-MM-DD"
      },
      "modified_since": {
        "type": "string",
        "description": "Filter by collection modified date. Will only return collections published after the date. date(ISO 8601) YYYY-MM-DD"
      },
      "group": {
        "format": "int64",
        "type": "integer",
        "description": "only return collections from this group"
      },
      "resource_doi": {
        "type": "string",
        "description": "only return collections with this resource_doi"
      },
      "doi": {
        "type": "string",
        "description": "only return collections with this doi"
      },
      "handle": {
        "type": "string",
        "description": "only return collections with this handle"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.figshare.com/v2/collections{?page,page_size,limit,offset,order,order_direction,institution,published_since,modified_since,group,resource_doi,doi,handle}"
    },
    "headers": {
      "X-Cursor": {
        "$": "X-Cursor"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**doi**: Collection DOI",
            "**handle**: Collection Handle",
            "**id**: Collection id",
            "**published_date**: Date when collection was published ",
            [
              "**timeline**",
              {
                "$ul": [
                  "**firstOnline**: Online posted date",
                  "**publisherAcceptance**: Date when the item was accepted for publication",
                  "**publisherPublication**: Publish date"
                ]
              }
            ],
            "**title**: Collection title",
            "**url**: Api endpoint"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.title"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
