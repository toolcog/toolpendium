{
  "name": "private_institution_accounts_list",
  "description": "Returns the accounts for which the account has administrative privileges (assigned and inherited).",
  "parameters": {
    "type": "object",
    "properties": {
      "page": {
        "format": "int64",
        "maximum": 5000,
        "minimum": 1,
        "type": "integer",
        "description": "Page number. Used for pagination with page_size"
      },
      "page_size": {
        "default": 10,
        "format": "int64",
        "maximum": 1000,
        "minimum": 1,
        "type": "integer",
        "description": "The number of results included on a page. Used for pagination with page"
      },
      "limit": {
        "format": "int64",
        "maximum": 1000,
        "minimum": 1,
        "type": "integer",
        "description": "Number of results included on a page. Used for pagination with query"
      },
      "offset": {
        "format": "int64",
        "maximum": 5000,
        "minimum": 0,
        "type": "integer",
        "description": "Where to start the listing(the offset of the first result). Used for pagination with limit"
      },
      "is_active": {
        "format": "int64",
        "maximum": 1,
        "minimum": 0,
        "type": "integer",
        "description": "Filter by active status"
      },
      "institution_user_id": {
        "type": "string",
        "description": "Filter by institution_user_id"
      },
      "email": {
        "type": "string",
        "description": "Filter by email"
      },
      "id_lte": {
        "format": "int64",
        "minimum": 0,
        "type": "integer",
        "description": "Retrieve accounts with an ID lower or equal to the specified value"
      },
      "id_gte": {
        "format": "int64",
        "minimum": 0,
        "type": "integer",
        "description": "Retrieve accounts with an ID greater or equal to the specified value"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.figshare.com/v2/account/institution/accounts{?page,page_size,limit,offset,is_active,institution_user_id,email,id_lte,id_gte}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**active**: Account activity status",
            "**email**: User email",
            "**first_name**: First Name",
            "**id**: Account id",
            "**institution_id**: Account institution",
            "**institution_user_id**: Account institution user id",
            "**last_name**: Last Name",
            "**orcid_id**: ORCID iD associated to account",
            "**quota**: Total storage available to account, in bytes",
            "**used_quota**: Storage used by the account, in bytes",
            "**user_id**: User id associated with account, useful for example for adding the account as an author to an item"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A machine friendly error code, used by the dev team to identify the error.",
            "**message**: A human friendly message explaining the error."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
