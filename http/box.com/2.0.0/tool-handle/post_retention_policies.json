{
  "name": "post_retention_policies",
  "description": "Creates a retention policy.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "are_owners_notified": {
            "description": "Whether owner and co-owners of a file are notified\nwhen the policy nears expiration.",
            "enum": [
              true,
              false
            ],
            "example": true,
            "type": "boolean"
          },
          "can_owner_extend_retention": {
            "description": "Whether the owner of a file will be allowed to\nextend the retention.",
            "enum": [
              true,
              false
            ],
            "example": true,
            "type": "boolean"
          },
          "custom_notification_recipients": {
            "description": "A list of users notified when\nthe retention policy duration is about to end.",
            "items": {
              "$ref": "#/$defs/User--Mini"
            },
            "type": "array"
          },
          "description": {
            "description": "The additional text description of the retention policy.",
            "example": "Policy to retain all reports for at least one month",
            "type": "string"
          },
          "disposition_action": {
            "description": "The disposition action of the retention policy.\n`permanently_delete` deletes the content\nretained by the policy permanently.\n`remove_retention` lifts retention policy\nfrom the content, allowing it to be deleted\nby users once the retention policy has expired.",
            "enum": [
              "permanently_delete",
              "remove_retention"
            ],
            "example": "permanently_delete",
            "type": "string"
          },
          "policy_name": {
            "description": "The name for the retention policy",
            "example": "Some Policy Name",
            "type": "string"
          },
          "policy_type": {
            "description": "The type of the retention policy. A retention\npolicy type can either be `finite`, where a\nspecific amount of time to retain the content is known\nupfront, or `indefinite`, where the amount of time\nto retain the content is still unknown.",
            "enum": [
              "finite",
              "indefinite"
            ],
            "example": "finite",
            "type": "string"
          },
          "retention_length": {
            "description": "The length of the retention policy. This value\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has a `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`.",
            "example": "365",
            "format": "int32",
            "minimum": 1,
            "type": "string"
          },
          "retention_type": {
            "description": "Specifies the retention type:\n\n* `modifiable`: You can modify the retention policy. For example,\nyou can add or remove folders, shorten or lengthen\nthe policy duration, or delete the assignment.\nUse this type if your retention policy\nis not related to any regulatory purposes.\n\n* `non-modifiable`: You can modify the retention policy\nonly in a limited way: add a folder, lengthen the duration,\nretire the policy, change the disposition action\nor notification settings. You cannot perform other actions,\nsuch as deleting the assignment or shortening the\npolicy duration. Use this type to ensure\ncompliance with regulatory retention policies.",
            "enum": [
              "modifiable",
              "non-modifiable"
            ],
            "example": "modifiable",
            "type": "string"
          }
        },
        "required": [
          "policy_name",
          "policy_type",
          "disposition_action"
        ],
        "type": "object"
      }
    },
    "$defs": {
      "User--Mini": {
        "allOf": [
          {
            "$ref": "#/$defs/User--Base"
          },
          {
            "properties": {
              "login": {
                "description": "The primary email address of this user",
                "example": "ceo@example.com",
                "format": "email",
                "nullable": false,
                "type": "string"
              },
              "name": {
                "description": "The display name of this user",
                "example": "Aaron Levie",
                "maxLength": 50,
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "description": "A mini representation of a user, as can be returned when nested within other\nresources.",
        "required": [
          "name",
          "login"
        ],
        "title": "User (Mini)",
        "type": "object",
        "x-box-resource-id": "user--mini",
        "x-box-variant": "mini"
      },
      "User--Base": {
        "description": "A mini representation of a user, used when\nnested within another resource.",
        "properties": {
          "id": {
            "description": "The unique identifier for this user",
            "example": "11446498",
            "type": "string"
          },
          "type": {
            "description": "`user`",
            "enum": [
              "user"
            ],
            "example": "user",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "User (Base)",
        "type": "object",
        "x-box-resource-id": "user--base",
        "x-box-tag": "users",
        "x-box-variant": "base",
        "x-box-variants": [
          "base",
          "mini",
          "standard",
          "full"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.box.com/2.0/retention_policies"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Retention policy (Base)"
        },
        "A base representation of a retention policy.",
        "**Key properties:**",
        {
          "$ul": [
            "**id**: The unique identifier that represents a retention policy.",
            "**type**: `retention_policy`",
            "**disposition_action**: The disposition action of the retention policy.",
            "**policy_name**: The name given to the retention policy.",
            "**retention_length**: The length of the retention policy. This value",
            "**are_owners_notified**: Determines if owners and co-owners of items",
            [
              "**assignment_counts**: Counts the retention policy assignments for each item type.",
              {
                "$ul": [
                  "**enterprise**: The number of enterprise assignments this policy has. The maximum value is 1.",
                  "**folder**: The number of folder assignments this policy has.",
                  "**metadata_template**: The number of metadata template assignments this policy has."
                ]
              }
            ],
            "**can_owner_extend_retention**: Determines if the owner of items under the policy",
            "**created_at**: When the retention policy object was created.",
            "**created_by**",
            "**custom_notification_recipients**: A list of users notified when the retention policy duration is about to end.",
            "**description**: The additional text description of the retention policy.",
            "**modified_at**: When the retention policy object was last modified.",
            "**policy_type**: The type of the retention policy. A retention",
            "**retention_type**: Specifies the retention type:",
            "**status**: The status of the retention policy. The status of"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
