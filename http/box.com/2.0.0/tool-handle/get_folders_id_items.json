{
  "name": "get_folders_id_items",
  "description": "Retrieves a page of items in a folder. These items can be files,\nfolders, and web links.\n\nTo request more information about the folder itself, like its size,\nplease use the [Get a folder](#get-folders-id) endpoint instead.",
  "parameters": {
    "type": "object",
    "properties": {
      "folder_id": {
        "nullable": false,
        "type": "string",
        "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`."
      },
      "fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n\nAdditionally this field can be used to query any metadata\napplied to the file by specifying the `metadata` field as well\nas the scope and key of the template to retrieve, for example\n`?field=metadata.enterprise_12345.contractTemplate`."
      },
      "usemarker": {
        "type": "boolean",
        "description": "Specifies whether to use marker-based pagination instead of\noffset-based pagination. Only one pagination method can\nbe used at a time.\n\nBy setting this value to true, the API will return a `marker` field\nthat can be passed as a parameter to this endpoint to get the next\npage of the response."
      },
      "marker": {
        "type": "string",
        "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`."
      },
      "offset": {
        "default": 0,
        "format": "int64",
        "type": "integer",
        "description": "The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response."
      },
      "limit": {
        "format": "int64",
        "maximum": 1000,
        "type": "integer",
        "description": "The maximum number of items to return per page."
      },
      "boxapi": {
        "type": "string",
        "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item."
      },
      "sort": {
        "enum": [
          "id",
          "name",
          "date",
          "size"
        ],
        "type": "string",
        "description": "Defines the **second** attribute by which items\nare sorted.\n\nItems are always sorted by their `type` first, with\nfolders listed before files, and files listed\nbefore web links.\n\nThis parameter is not supported for marker-based pagination\non the root folder (the folder with an ID of `0`)."
      },
      "direction": {
        "enum": [
          "ASC",
          "DESC"
        ],
        "type": "string",
        "description": "The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order."
      }
    },
    "required": [
      "folder_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.box.com/2.0/folders/{folder_id}/items{?fields,usemarker,marker,offset,limit,sort,direction}"
    },
    "headers": {
      "boxapi": {
        "$": "boxapi"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The part of an API response that describes pagination",
        "**Key properties:**",
        {
          "$ul": [
            "**limit**: The limit that was used for these entries. This will be the same as the",
            "**offset**: The 0-based offset of the first entry in this set. This will be the same",
            "**order**: The order by which items are returned.",
            "**total_count**: One greater than the offset of the last entry in the entire collection.",
            "**entries**: The items in this collection."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "405": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
