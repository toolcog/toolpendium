{
  "name": "put_users_id_folders_0",
  "description": "Move all of the items (files, folders and workflows) owned by a user into\nanother user's account\n\nOnly the root folder (`0`) can be transferred.\n\nFolders can only be moved across users by users with administrative\npermissions.\n\nAll existing shared links and folder-level collaborations are transferred\nduring the operation. Please note that while collaborations at the individual\nfile-level are transferred during the operation, the collaborations are\ndeleted when the original user is deleted.\n\nThis call will be performed synchronously which might lead to a slow response\nwhen the source user has a large number of items in all of its folders.\n\nIf the destination path has a metadata cascade policy attached to any of\nthe parent folders, a metadata cascade operation will be kicked off\nasynchronously.\n\nThere is currently no way to check for when this operation is finished.\n\nThe destination folder's name will be in the format `{User}'s Files and\nFolders`, where `{User}` is the display name of the user.\n\nTo make this API call your application will need to have the \"Read and write\nall files and folders stored in Box\" scope enabled.\n\nPlease make sure the destination user has access to `Relay` or `Relay Lite`,\nand has access to the files and folders involved in the workflows being\ntransferred.\n\nAdmins will receive an email when the operation is completed.",
  "parameters": {
    "type": "object",
    "properties": {
      "user_id": {
        "type": "string",
        "description": "The ID of the user."
      },
      "fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
      },
      "notify": {
        "type": "boolean",
        "description": "Determines if users should receive email notification\nfor the action performed."
      },
      "body": {
        "properties": {
          "owned_by": {
            "description": "The user who the folder will be transferred to",
            "properties": {
              "id": {
                "description": "The ID of the user who the folder will be\ntransferred to",
                "example": "1232234",
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          }
        },
        "required": [
          "owned_by"
        ],
        "type": "object"
      }
    },
    "required": [
      "user_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://api.box.com/2.0/users/{user_id}/folders/0{?fields,notify}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Folder (Base)"
        },
        "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
        "**Key properties:**",
        {
          "$ul": [
            "**etag**: The HTTP `etag` of this folder. This can be used within some API",
            "**id**: The unique identifier that represent a folder.",
            "**type**: `folder`",
            "**name**: The name of the folder.",
            "**sequence_id**",
            "**content_created_at**: The date and time at which this folder was originally",
            "**content_modified_at**: The date and time at which this folder was last updated.",
            "**created_at**: The date and time when the folder was created. This value may",
            "**created_by**",
            "**description**",
            [
              "**folder_upload_email**",
              {
                "$ul": [
                  "**access**: When this parameter has been set, users can email files",
                  "**email**: The optional upload email address for this folder."
                ]
              }
            ],
            "**item_collection**",
            "**item_status**: Defines if this item has been deleted or not.",
            "**modified_at**: The date and time when the folder was last updated. This value may",
            "**modified_by**",
            "**owned_by**",
            "**parent**",
            "**path_collection**",
            "**purged_at**: The time at which this folder is expected to be purged",
            "**shared_link**",
            "**size**: The folder size in bytes.",
            "**trashed_at**: The time at which this folder was put in the trash.",
            "**allowed_invitee_roles**: A list of the types of roles that user can be invited at",
            "**allowed_shared_link_access_levels**: A list of access levels that are available",
            "**can_non_owners_invite**",
            "**can_non_owners_view_collaborators**: Specifies if collaborators who are not owners",
            "**classification**",
            "**has_collaborations**: Specifies if this folder has any other collaborators.",
            "**is_accessible_via_shared_link**: Specifies if the folder can be accessed",
            "**is_collaboration_restricted_to_enterprise**",
            "**is_externally_owned**: Specifies if this folder is owned by a user outside of the",
            "**metadata**",
            "**permissions**",
            "**sync_state**",
            "**tags**",
            "**watermark_info**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
