{
  "name": "post_metadata_templates_schema",
  "description": "Creates a new metadata template that can be applied to\nfiles and folders.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "copyInstanceOnItemCopy": {
            "default": false,
            "description": "Whether or not to copy any metadata attached to a file or folder\nwhen it is copied. By default, metadata is not copied along with a\nfile or folder when it is copied.",
            "example": true,
            "type": "boolean"
          },
          "displayName": {
            "description": "The display name of the template.",
            "example": "Product Info",
            "maxLength": 4096,
            "type": "string"
          },
          "fields": {
            "description": "An ordered list of template fields which are part of the template.\nEach field can be a regular text field, date field, number field,\nas well as a single or multi-select list.",
            "items": {
              "description": "A field within a metadata template. Fields can be a basic text, date, or\nnumber field, or a list of options.",
              "properties": {
                "description": {
                  "description": "A description of the field. This is not shown to the user.",
                  "example": "The category",
                  "maxLength": 4096,
                  "type": "string"
                },
                "displayName": {
                  "description": "The display name of the field as it is shown to the user in the web and\nmobile apps.",
                  "example": "Category",
                  "maxLength": 4096,
                  "type": "string"
                },
                "hidden": {
                  "description": "Whether this field is hidden in the UI for the user and can only be set\nthrough the API instead.",
                  "example": true,
                  "type": "boolean"
                },
                "key": {
                  "description": "A unique identifier for the field. The identifier must\nbe unique within the template to which it belongs.",
                  "example": "category",
                  "maxLength": 256,
                  "type": "string"
                },
                "options": {
                  "description": "A list of options for this field. This is used in combination with the\n`enum` and `multiSelect` field types.",
                  "items": {
                    "description": "An option for a Metadata Template Field.\n\nOptions only need to be provided for fields of type `enum` and `multiSelect`.\nOptions represent the value(s) a user can select for the field either through\nthe UI or through the API.",
                    "properties": {
                      "key": {
                        "description": "The text value of the option. This represents both the display name of the\noption and the internal key used when updating templates.",
                        "example": "Category 1",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "title": "Metadata Option (Write)",
                    "type": "object"
                  },
                  "type": "array"
                },
                "type": {
                  "description": "The type of field. The basic fields are a `string` field for text, a\n`float` field for numbers, and a `date` fields to present the user with a\ndate-time picker.\n\nAdditionally, metadata templates support an `enum` field for a basic list\nof items, and ` multiSelect` field for a similar list of items where the\nuser can select more than one value.",
                  "enum": [
                    "string",
                    "float",
                    "date",
                    "enum",
                    "multiSelect"
                  ],
                  "example": "string",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "key",
                "displayName"
              ],
              "title": "Metadata Field (Write)",
              "type": "object"
            },
            "type": "array"
          },
          "hidden": {
            "default": false,
            "description": "Defines if this template is visible in the Box web app UI, or if\nit is purely intended for usage through the API.",
            "example": true,
            "type": "boolean"
          },
          "scope": {
            "description": "The scope of the metadata template to create. Applications can\nonly create templates for use within the authenticated user's\nenterprise.\n\nThis value needs to be set to `enterprise`, as `global` scopes can\nnot be created by applications.",
            "example": "enterprise",
            "type": "string"
          },
          "templateKey": {
            "description": "A unique identifier for the template. This identifier needs to be\nunique across the enterprise for which the metadata template is\nbeing created.\n\nWhen not provided, the API will create a unique `templateKey`\nbased on the value of the `displayName`.",
            "example": "productInfo",
            "maxLength": 64,
            "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$",
            "type": "string"
          }
        },
        "required": [
          "scope",
          "displayName"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.box.com/2.0/metadata_templates/schema"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Metadata template"
        },
        "A template for metadata that can be applied to files and folders",
        "**Key properties:**",
        {
          "$ul": [
            "**copyInstanceOnItemCopy**: Whether or not to include the metadata when a file or folder is copied.",
            "**displayName**: The display name of the template. This can be seen in the Box web app",
            "**fields**: An ordered list of template fields which are part of the template. Each",
            "**hidden**: Defines if this template is visible in the Box web app UI, or if",
            "**id**: The ID of the metadata template.",
            "**scope**: The scope of the metadata template can either be `global` or",
            "**templateKey**: A unique identifier for the template. This identifier is unique across",
            "**type**: `metadata_template`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
