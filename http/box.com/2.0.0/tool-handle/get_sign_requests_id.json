{
  "name": "get_sign_requests_id",
  "description": "Gets a sign request by ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "sign_request_id": {
        "type": "string",
        "description": "The ID of the sign request"
      }
    },
    "required": [
      "sign_request_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.box.com/2.0/sign_requests/{sign_request_id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Create a sign request"
        },
        "A request to create a sign request object",
        "**Key properties:**",
        {
          "$ul": [
            "**are_reminders_enabled**: Reminds signers to sign a document on day 3, 8, 13 and 18. Reminders are only sent to outstanding signers.",
            "**are_text_signatures_enabled**: Disables the usage of signatures generated by typing (text). (default: true)",
            "**days_valid**: Number of days after which this request will automatically expire if not completed.",
            "**declined_redirect_url**: The uri that a signer will be redirected to after declining to sign a document.",
            "**email_message**: Message to include in sign request email. The field is cleaned through sanitization of specific characters. However, some html tags are allowed. Links included in the message are also converted to hyperlinks in the email. The message may contain the following html tags including `a`, `abbr`, `acronym`, `b`, `blockquote`, `code`, `em`, `i`, `ul`, `li`, `ol`, and `strong`. Be aware that when the text to html ratio is too high, the email may end up in spam filters. Custom styles on these tags are not allowed. If this field is not passed, a default message will be used.",
            "**email_subject**: Subject of sign request email. This is cleaned by sign request. If this field is not passed, a default subject will be used.",
            "**external_id**: This can be used to reference an ID in an external system that the sign request is related to.",
            "**is_document_preparation_needed**: Indicates if the sender should receive a `prepare_url` in the response to complete document preparation via UI.",
            "**is_phone_verification_required_to_view**: Forces signers to verify a text message prior to viewing the document. You must specify the phone number of signers to have this setting apply to them.",
            "**name**: Name of the sign request.",
            "**parent_folder**",
            "**prefill_tags**: When a document contains sign related tags in the content, you can prefill them using this `prefill_tags` by referencing the 'id' of the tag as the `external_id` field of the prefill tag.",
            "**redirect_url**: When specified, signature request will be redirected to this url when a document is signed.",
            "**auto_expire_at**: Uses `days_valid` to calculate the date and time, in GMT, the sign request will expire if unsigned.",
            "**id**: Sign request ID",
            "**prepare_url**: This URL is returned if `is_document_preparation_needed` is",
            [
              "**sign_files**: List of files that will be signed, which are copies of the original",
              {
                "$ul": [
                  "**files**",
                  "**is_ready_for_download**: Indicates whether the `sign_files` documents are processing"
                ]
              }
            ],
            "**signature_color**: Force a specific color for the signature (blue, black, or red).",
            "**signers**: Array of signers for the sign request",
            "**signing_log**",
            "**source_files**: List of files to create a signing document from. Only the ID and type fields are required for each file. The array will be empty if the `source_files` are deleted.",
            "**status**: Describes the status of the sign request",
            "**type**: object type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
